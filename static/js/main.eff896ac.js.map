{"version":3,"sources":["webpack:///static/js/main.eff896ac.js","webpack:///webpack/bootstrap 30e3a14b47ab104b2e9b","webpack:///./~/react-dom/~/fbjs/lib/invariant.js","webpack:///./~/react-dom/lib/reactProdInvariant.js","webpack:///./~/react-dom/lib/ReactDOMComponentTree.js","webpack:///./~/react-dom/~/object-assign/index.js","webpack:///./~/react-dom/~/fbjs/lib/ExecutionEnvironment.js","webpack:///./~/react-dom/lib/ReactInstrumentation.js","webpack:///./~/react-dom/lib/ReactUpdates.js","webpack:///./~/react-dom/~/fbjs/lib/emptyFunction.js","webpack:///./~/react-dom/lib/SyntheticEvent.js","webpack:///./~/react/lib/ReactCurrentOwner.js","webpack:///./~/react-dom/lib/DOMLazyTree.js","webpack:///./~/react-dom/lib/DOMProperty.js","webpack:///./~/react-dom/lib/ReactReconciler.js","webpack:///./~/react/lib/React.js","webpack:///./~/react/lib/ReactElement.js","webpack:///./~/react-dom/lib/EventPluginHub.js","webpack:///./~/react-dom/lib/EventPropagators.js","webpack:///./~/react-dom/lib/ReactInstanceMap.js","webpack:///./~/react-dom/lib/SyntheticUIEvent.js","webpack:///./~/react-dom/lib/ReactBrowserEventEmitter.js","webpack:///./~/react-dom/lib/SyntheticMouseEvent.js","webpack:///./~/react-dom/lib/Transaction.js","webpack:///./~/react-dom/lib/escapeTextContentForBrowser.js","webpack:///./~/react-dom/lib/setInnerHTML.js","webpack:///./~/react-dom/lib/DOMChildrenOperations.js","webpack:///./~/react-dom/lib/DOMNamespaces.js","webpack:///./~/react-dom/lib/EventPluginRegistry.js","webpack:///./~/react-dom/lib/EventPluginUtils.js","webpack:///./~/react-dom/lib/KeyEscapeUtils.js","webpack:///./~/react-dom/lib/LinkedValueUtils.js","webpack:///./~/react-dom/lib/ReactComponentEnvironment.js","webpack:///./~/react-dom/lib/ReactErrorUtils.js","webpack:///./~/react-dom/lib/ReactUpdateQueue.js","webpack:///./~/react-dom/lib/createMicrosoftUnsafeLocalFunction.js","webpack:///./~/react-dom/lib/getEventCharCode.js","webpack:///./~/react-dom/lib/getEventModifierState.js","webpack:///./~/react-dom/lib/getEventTarget.js","webpack:///./~/react-dom/lib/isEventSupported.js","webpack:///./~/react-dom/lib/shouldUpdateReactComponent.js","webpack:///./~/react-dom/lib/validateDOMNesting.js","webpack:///./~/react-dom/~/fbjs/lib/shallowEqual.js","webpack:///./~/react/lib/ReactComponent.js","webpack:///./~/react/lib/ReactNoopUpdateQueue.js","webpack:///./~/react/~/fbjs/lib/emptyObject.js","webpack:///./~/react-dom/lib/CSSProperty.js","webpack:///./~/react-dom/lib/CallbackQueue.js","webpack:///./~/react-dom/lib/DOMPropertyOperations.js","webpack:///./~/react-dom/lib/ReactDOMComponentFlags.js","webpack:///./~/react-dom/lib/ReactDOMSelect.js","webpack:///./~/react-dom/lib/ReactEmptyComponent.js","webpack:///./~/react-dom/lib/ReactFeatureFlags.js","webpack:///./~/react-dom/lib/ReactHostComponent.js","webpack:///./~/react-dom/lib/ReactInputSelection.js","webpack:///./~/react-dom/lib/ReactMount.js","webpack:///./~/react-dom/lib/ReactNodeTypes.js","webpack:///./~/react-dom/lib/ViewportMetrics.js","webpack:///./~/react-dom/lib/accumulateInto.js","webpack:///./~/react-dom/lib/forEachAccumulated.js","webpack:///./~/react-dom/lib/getHostComponentFromComposite.js","webpack:///./~/react-dom/lib/getTextContentAccessor.js","webpack:///./~/react-dom/lib/instantiateReactComponent.js","webpack:///./~/react-dom/lib/isTextInputElement.js","webpack:///./~/react-dom/lib/setTextContent.js","webpack:///./~/react-dom/lib/traverseAllChildren.js","webpack:///./~/react-dom/~/fbjs/lib/EventListener.js","webpack:///./~/react-dom/~/fbjs/lib/focusNode.js","webpack:///./~/react-dom/~/fbjs/lib/getActiveElement.js","webpack:///./~/react-scripts/~/promise/lib/core.js","webpack:///(webpack)/~/node-libs-browser/~/process/browser.js","webpack:///./~/react/lib/ReactComponentTreeHook.js","webpack:///./~/react/lib/ReactElementSymbol.js","webpack:///./~/react/lib/canDefineProperty.js","webpack:///./~/react-dom/index.js","webpack:///./~/react-dom/lib/ARIADOMPropertyConfig.js","webpack:///./~/react-dom/lib/AutoFocusUtils.js","webpack:///./~/react-dom/lib/BeforeInputEventPlugin.js","webpack:///./~/react-dom/lib/CSSPropertyOperations.js","webpack:///./~/react-dom/lib/ChangeEventPlugin.js","webpack:///./~/react-dom/lib/Danger.js","webpack:///./~/react-dom/lib/DefaultEventPluginOrder.js","webpack:///./~/react-dom/lib/EnterLeaveEventPlugin.js","webpack:///./~/react-dom/lib/FallbackCompositionState.js","webpack:///./~/react-dom/lib/HTMLDOMPropertyConfig.js","webpack:///./~/react-dom/lib/ReactChildReconciler.js","webpack:///./~/react-dom/lib/ReactComponentBrowserEnvironment.js","webpack:///./~/react-dom/lib/ReactCompositeComponent.js","webpack:///./~/react-dom/lib/ReactDOM.js","webpack:///./~/react-dom/lib/ReactDOMComponent.js","webpack:///./~/react-dom/lib/ReactDOMContainerInfo.js","webpack:///./~/react-dom/lib/ReactDOMEmptyComponent.js","webpack:///./~/react-dom/lib/ReactDOMFeatureFlags.js","webpack:///./~/react-dom/lib/ReactDOMIDOperations.js","webpack:///./~/react-dom/lib/ReactDOMInput.js","webpack:///./~/react-dom/lib/ReactDOMOption.js","webpack:///./~/react-dom/lib/ReactDOMSelection.js","webpack:///./~/react-dom/lib/ReactDOMTextComponent.js","webpack:///./~/react-dom/lib/ReactDOMTextarea.js","webpack:///./~/react-dom/lib/ReactDOMTreeTraversal.js","webpack:///./~/react-dom/lib/ReactDefaultBatchingStrategy.js","webpack:///./~/react-dom/lib/ReactDefaultInjection.js","webpack:///./~/react-dom/lib/ReactEventEmitterMixin.js","webpack:///./~/react-dom/lib/ReactEventListener.js","webpack:///./~/react-dom/lib/ReactInjection.js","webpack:///./~/react-dom/lib/ReactMarkupChecksum.js","webpack:///./~/react-dom/lib/ReactMultiChild.js","webpack:///./~/react-dom/lib/ReactOwner.js","webpack:///./~/react-dom/lib/ReactPropTypesSecret.js","webpack:///./~/react-dom/lib/ReactReconcileTransaction.js","webpack:///./~/react-dom/lib/ReactRef.js","webpack:///./~/react-dom/lib/ReactServerRenderingTransaction.js","webpack:///./~/react-dom/lib/ReactServerUpdateQueue.js","webpack:///./~/react-dom/lib/ReactVersion.js","webpack:///./~/react-dom/lib/SVGDOMPropertyConfig.js","webpack:///./~/react-dom/lib/SelectEventPlugin.js","webpack:///./~/react-dom/lib/SimpleEventPlugin.js","webpack:///./~/react-dom/lib/SyntheticAnimationEvent.js","webpack:///./~/react-dom/lib/SyntheticClipboardEvent.js","webpack:///./~/react-dom/lib/SyntheticCompositionEvent.js","webpack:///./~/react-dom/lib/SyntheticDragEvent.js","webpack:///./~/react-dom/lib/SyntheticFocusEvent.js","webpack:///./~/react-dom/lib/SyntheticInputEvent.js","webpack:///./~/react-dom/lib/SyntheticKeyboardEvent.js","webpack:///./~/react-dom/lib/SyntheticTouchEvent.js","webpack:///./~/react-dom/lib/SyntheticTransitionEvent.js","webpack:///./~/react-dom/lib/SyntheticWheelEvent.js","webpack:///./~/react-dom/lib/adler32.js","webpack:///./~/react-dom/lib/dangerousStyleValue.js","webpack:///./~/react-dom/lib/findDOMNode.js","webpack:///./~/react-dom/lib/flattenChildren.js","webpack:///./~/react-dom/lib/getEventKey.js","webpack:///./~/react-dom/lib/getIteratorFn.js","webpack:///./~/react-dom/lib/getNodeForCharacterOffset.js","webpack:///./~/react-dom/lib/getVendorPrefixedEventName.js","webpack:///./~/react-dom/lib/quoteAttributeValueForBrowser.js","webpack:///./~/react-dom/lib/renderSubtreeIntoContainer.js","webpack:///./~/react-dom/~/fbjs/lib/camelize.js","webpack:///./~/react-dom/~/fbjs/lib/camelizeStyleName.js","webpack:///./~/react-dom/~/fbjs/lib/containsNode.js","webpack:///./~/react-dom/~/fbjs/lib/createArrayFromMixed.js","webpack:///./~/react-dom/~/fbjs/lib/createNodesFromMarkup.js","webpack:///./~/react-dom/~/fbjs/lib/getMarkupWrap.js","webpack:///./~/react-dom/~/fbjs/lib/getUnboundedScrollPosition.js","webpack:///./~/react-dom/~/fbjs/lib/hyphenate.js","webpack:///./~/react-dom/~/fbjs/lib/hyphenateStyleName.js","webpack:///./~/react-dom/~/fbjs/lib/isNode.js","webpack:///./~/react-dom/~/fbjs/lib/isTextNode.js","webpack:///./~/react-dom/~/fbjs/lib/memoizeStringOnly.js","webpack:///./~/react-dom/~/prop-types/checkPropTypes.js","webpack:///./~/react-dom/~/prop-types/lib/ReactPropTypesSecret.js","webpack:///./~/react-scripts/config/polyfills.js","webpack:///./src/index.js","webpack:///./~/react-scripts/~/promise/lib/es6-extensions.js","webpack:///./~/react-scripts/~/promise/lib/rejection-tracking.js","webpack:///./~/react-scripts/~/promise/~/asap/browser-raw.js","webpack:///./~/react-scripts/~/whatwg-fetch/fetch.js","webpack:///./~/react/lib/ReactChildren.js","webpack:///./~/react/lib/ReactClass.js","webpack:///./~/react/lib/ReactDOMFactories.js","webpack:///./~/react/lib/ReactPropTypeLocationNames.js","webpack:///./~/react/lib/ReactPropTypes.js","webpack:///./~/react/lib/ReactPureComponent.js","webpack:///./~/react/lib/getNextDebugID.js","webpack:///./~/react/lib/onlyChild.js","webpack:///./~/react/lib/traverseAllChildren.js","webpack:///./~/react/react.js","webpack:///./~/tone/build/Tone.js","webpack:///./~/react/lib/PooledClass.js","webpack:///./~/react/~/fbjs/lib/warning.js","webpack:///./~/react/~/prop-types/factory.js","webpack:///./~/react/~/prop-types/factoryWithTypeCheckers.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","i","Object","prototype","hasOwnProperty","_m","args","slice","fn","a","b","apply","this","concat","invariant","condition","format","d","e","f","validateFormat","error","undefined","Error","argIndex","replace","name","framesToPop","reactProdInvariant","code","argCount","arguments","length","message","argIdx","encodeURIComponent","shouldPrecacheNode","node","nodeID","nodeType","getAttribute","ATTR_NAME","String","nodeValue","getRenderedHostOrTextFromComponent","component","rendered","_renderedComponent","precacheNode","inst","hostInst","_hostNode","internalInstanceKey","uncacheNode","precacheChildNodes","_flags","Flags","hasCachedChildNodes","children","_renderedChildren","childNode","firstChild","outer","childInst","childID","_domID","nextSibling","_prodInvariant","getClosestInstanceFromNode","parents","push","parentNode","closest","pop","getInstanceFromNode","getNodeFromInstance","_hostParent","DOMProperty","ReactDOMComponentFlags","ID_ATTRIBUTE_NAME","Math","random","toString","ReactDOMComponentTree","toObject","val","TypeError","shouldUseNative","assign","test1","getOwnPropertyNames","test2","fromCharCode","order2","map","n","join","test3","split","forEach","letter","keys","err","getOwnPropertySymbols","propIsEnumerable","propertyIsEnumerable","target","source","from","symbols","to","s","key","canUseDOM","window","document","createElement","ExecutionEnvironment","canUseWorkers","Worker","canUseEventListeners","addEventListener","attachEvent","canUseViewport","screen","isInWorker","debugTool","ensureInjected","ReactUpdates","ReactReconcileTransaction","batchingStrategy","ReactUpdatesFlushTransaction","reinitializeTransaction","dirtyComponentsLength","callbackQueue","CallbackQueue","getPooled","reconcileTransaction","batchedUpdates","callback","mountOrderComparator","c1","c2","_mountOrder","runBatchedUpdates","transaction","len","dirtyComponents","sort","updateBatchNumber","callbacks","_pendingCallbacks","markerName","ReactFeatureFlags","logTopLevelRenders","namedComponent","_currentElement","type","isReactTopLevelWrapper","getName","console","time","ReactReconciler","performUpdateIfNecessary","timeEnd","j","enqueue","getPublicInstance","enqueueUpdate","isBatchingUpdates","_updateBatchNumber","asap","context","asapCallbackQueue","asapEnqueued","_assign","PooledClass","Transaction","NESTED_UPDATES","initialize","close","splice","flushBatchedUpdates","UPDATE_QUEUEING","reset","notifyAll","TRANSACTION_WRAPPERS","getTransactionWrappers","destructor","release","perform","method","scope","addPoolingTo","queue","ReactUpdatesInjection","injectReconcileTransaction","ReconcileTransaction","injectBatchingStrategy","_batchingStrategy","injection","makeEmptyFunction","arg","emptyFunction","thatReturns","thatReturnsFalse","thatReturnsTrue","thatReturnsNull","thatReturnsThis","thatReturnsArgument","SyntheticEvent","dispatchConfig","targetInst","nativeEvent","nativeEventTarget","_targetInst","Interface","constructor","propName","normalize","defaultPrevented","returnValue","isDefaultPrevented","isPropagationStopped","shouldBeReleasedProperties","Proxy","EventInterface","currentTarget","eventPhase","bubbles","cancelable","timeStamp","event","Date","now","isTrusted","preventDefault","stopPropagation","cancelBubble","persist","isPersistent","augmentClass","Class","Super","E","fourArgumentPooler","ReactCurrentOwner","current","insertTreeChildren","tree","enableLazy","insertTreeBefore","html","setInnerHTML","text","setTextContent","replaceChildWithTree","oldNode","newTree","replaceChild","queueChild","parentTree","childTree","appendChild","queueHTML","queueText","nodeName","DOMLazyTree","DOMNamespaces","createMicrosoftUnsafeLocalFunction","ELEMENT_NODE_TYPE","DOCUMENT_FRAGMENT_NODE_TYPE","documentMode","navigator","userAgent","test","referenceNode","toLowerCase","namespaceURI","insertBefore","checkMask","value","bitmask","DOMPropertyInjection","MUST_USE_PROPERTY","HAS_BOOLEAN_VALUE","HAS_NUMERIC_VALUE","HAS_POSITIVE_NUMERIC_VALUE","HAS_OVERLOADED_BOOLEAN_VALUE","injectDOMPropertyConfig","domPropertyConfig","Injection","Properties","DOMAttributeNamespaces","DOMAttributeNames","DOMPropertyNames","DOMMutationMethods","isCustomAttribute","_isCustomAttributeFunctions","properties","lowerCased","propConfig","propertyInfo","attributeName","attributeNamespace","propertyName","mutationMethod","mustUseProperty","hasBooleanValue","hasNumericValue","hasPositiveNumericValue","hasOverloadedBooleanValue","ATTRIBUTE_NAME_START_CHAR","ROOT_ATTRIBUTE_NAME","ATTRIBUTE_NAME_CHAR","getPossibleStandardName","isCustomAttributeFn","attachRefs","ReactRef","mountComponent","internalInstance","hostParent","hostContainerInfo","parentDebugID","markup","ref","getReactMountReady","getHostNode","unmountComponent","safely","detachRefs","receiveComponent","nextElement","prevElement","_context","refsChanged","shouldUpdateRefs","ReactChildren","ReactComponent","ReactPureComponent","ReactClass","ReactDOMFactories","ReactElement","ReactPropTypes","ReactVersion","onlyChild","createFactory","cloneElement","__spread","React","Children","count","toArray","only","Component","PureComponent","isValidElement","PropTypes","createClass","createMixin","mixin","DOM","version","hasValidRef","config","hasValidKey","REACT_ELEMENT_TYPE","RESERVED_PROPS","__self","__source","self","owner","props","element","$$typeof","_owner","childrenLength","childArray","Array","defaultProps","factory","bind","cloneAndReplaceKey","oldElement","newKey","newElement","_self","_source","object","isInteractive","tag","shouldPreventMouseEvent","disabled","EventPluginRegistry","EventPluginUtils","ReactErrorUtils","accumulateInto","forEachAccumulated","listenerBank","eventQueue","executeDispatchesAndRelease","simulated","executeDispatchesInOrder","executeDispatchesAndReleaseSimulated","executeDispatchesAndReleaseTopLevel","getDictionaryKey","_rootNodeID","EventPluginHub","injectEventPluginOrder","injectEventPluginsByName","putListener","registrationName","listener","bankForRegistrationName","PluginModule","registrationNameModules","didPutListener","getListener","deleteListener","willDeleteListener","deleteAllListeners","extractEvents","topLevelType","events","plugins","possiblePlugin","extractedEvents","enqueueEvents","processEventQueue","processingEventQueue","rethrowCaughtError","__purge","__getListenerBank","listenerAtPhase","propagationPhase","phasedRegistrationNames","accumulateDirectionalDispatches","phase","_dispatchListeners","_dispatchInstances","accumulateTwoPhaseDispatchesSingle","traverseTwoPhase","accumulateTwoPhaseDispatchesSingleSkipTarget","parentInst","getParentInstance","accumulateDispatches","ignoredDirection","accumulateDirectDispatchesSingle","accumulateTwoPhaseDispatches","accumulateTwoPhaseDispatchesSkipTarget","accumulateEnterLeaveDispatches","leave","enter","traverseEnterLeave","accumulateDirectDispatches","EventPropagators","ReactInstanceMap","remove","_reactInternalInstance","get","has","set","SyntheticUIEvent","dispatchMarker","getEventTarget","UIEventInterface","view","doc","ownerDocument","defaultView","parentWindow","detail","getListeningForDocument","mountAt","topListenersIDKey","reactTopListenersCounter","alreadyListeningTo","hasEventPageXY","ReactEventEmitterMixin","ViewportMetrics","getVendorPrefixedEventName","isEventSupported","isMonitoringScrollValue","topEventMapping","topAbort","topAnimationEnd","topAnimationIteration","topAnimationStart","topBlur","topCanPlay","topCanPlayThrough","topChange","topClick","topCompositionEnd","topCompositionStart","topCompositionUpdate","topContextMenu","topCopy","topCut","topDoubleClick","topDrag","topDragEnd","topDragEnter","topDragExit","topDragLeave","topDragOver","topDragStart","topDrop","topDurationChange","topEmptied","topEncrypted","topEnded","topError","topFocus","topInput","topKeyDown","topKeyPress","topKeyUp","topLoadedData","topLoadedMetadata","topLoadStart","topMouseDown","topMouseMove","topMouseOut","topMouseOver","topMouseUp","topPaste","topPause","topPlay","topPlaying","topProgress","topRateChange","topScroll","topSeeked","topSeeking","topSelectionChange","topStalled","topSuspend","topTextInput","topTimeUpdate","topTouchCancel","topTouchEnd","topTouchMove","topTouchStart","topTransitionEnd","topVolumeChange","topWaiting","topWheel","ReactBrowserEventEmitter","ReactEventListener","injectReactEventListener","setHandleTopLevel","handleTopLevel","setEnabled","enabled","isEnabled","listenTo","contentDocumentHandle","isListening","dependencies","registrationNameDependencies","dependency","trapBubbledEvent","trapCapturedEvent","WINDOW_HANDLE","handlerBaseName","handle","supportsEventPageXY","createEvent","ev","ensureScrollValueMonitoring","refresh","refreshScrollValues","monitorScrollValue","SyntheticMouseEvent","getEventModifierState","MouseEventInterface","screenX","screenY","clientX","clientY","ctrlKey","shiftKey","altKey","metaKey","getModifierState","button","buttons","relatedTarget","fromElement","srcElement","toElement","pageX","currentScrollLeft","pageY","currentScrollTop","OBSERVED_ERROR","TransactionImpl","transactionWrappers","wrapperInitData","_isInTransaction","isInTransaction","errorThrown","ret","initializeAll","closeAll","startIndex","wrapper","initData","escapeHtml","string","str","match","matchHtmlRegExp","exec","escape","index","lastIndex","charCodeAt","substring","escapeTextContentForBrowser","reusableSVGContainer","WHITESPACE_TEST","NONVISIBLE_TEST","svg","innerHTML","svgNode","testElement","textNode","data","removeChild","deleteData","getNodeAfter","isArray","insertLazyTreeChildAt","moveChild","moveDelimitedText","insertChildAt","closingComment","removeDelimitedText","openingComment","nextNode","startNode","replaceDelimitedText","stringText","nodeAfterComment","createTextNode","Danger","dangerouslyReplaceNodeWithMarkup","DOMChildrenOperations","processUpdates","updates","k","update","content","afterNode","fromNode","mathml","recomputePluginOrdering","eventPluginOrder","pluginName","namesToPlugins","pluginModule","pluginIndex","indexOf","publishedEvents","eventTypes","eventName","publishEventForPlugin","eventNameDispatchConfigs","phaseName","phasedRegistrationName","publishRegistrationName","possibleRegistrationNames","injectedEventPluginOrder","injectedNamesToPlugins","isOrderingDirty","getPluginModuleForEvent","_resetEventPlugins","isEndish","isMoveish","isStartish","executeDispatch","invokeGuardedCallbackWithCatch","invokeGuardedCallback","dispatchListeners","dispatchInstances","executeDispatchesInOrderStopAtTrueImpl","executeDispatchesInOrderStopAtTrue","executeDirectDispatch","dispatchListener","dispatchInstance","res","hasDispatches","ComponentTree","TreeTraversal","injectComponentTree","Injected","injectTreeTraversal","isAncestor","getLowestCommonAncestor","argFrom","argTo","escapeRegex","escaperLookup","=",":","escapedString","unescape","unescapeRegex","unescaperLookup","=0","=2","keySubstring","KeyEscapeUtils","_assertSingleLink","inputProps","checkedLink","valueLink","_assertValueLink","onChange","_assertCheckedLink","checked","getDeclarationErrorAddendum","ReactPropTypesSecret","propTypesFactory","hasReadOnlyValue","checkbox","image","hidden","radio","submit","propTypes","componentName","readOnly","func","loggedTypeFailures","LinkedValueUtils","checkPropTypes","tagName","getValue","getChecked","executeOnChange","requestChange","injected","ReactComponentEnvironment","replaceNodeWithMarkup","processChildrenUpdates","injectEnvironment","environment","x","caughtError","formatUnexpectedArgument","displayName","getInternalInstanceReadyForUpdate","publicInstance","callerName","ReactUpdateQueue","isMounted","enqueueCallback","validateCallback","enqueueCallbackInternal","enqueueForceUpdate","_pendingForceUpdate","enqueueReplaceState","completeState","_pendingStateQueue","_pendingReplaceState","enqueueSetState","partialState","enqueueElementInternal","nextContext","_pendingElement","MSApp","execUnsafeLocalFunction","arg0","arg1","arg2","arg3","getEventCharCode","charCode","keyCode","modifierStateGetter","keyArg","syntheticEvent","keyProp","modifierKeyToProp","Alt","Control","Meta","Shift","correspondingUseElement","eventNameSuffix","capture","isSupported","setAttribute","useHasFeature","implementation","hasFeature","shouldUpdateReactComponent","prevEmpty","nextEmpty","prevType","nextType","validateDOMNesting","is","y","shallowEqual","objA","objB","keysA","keysB","updater","refs","emptyObject","ReactNoopUpdateQueue","isReactComponent","setState","forceUpdate","warnNoop","prefixKey","prefix","charAt","toUpperCase","isUnitlessNumber","animationIterationCount","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridRow","gridColumn","fontWeight","lineClamp","lineHeight","opacity","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","prefixes","prop","shorthandPropertyExpansions","background","backgroundAttachment","backgroundColor","backgroundImage","backgroundPositionX","backgroundPositionY","backgroundRepeat","backgroundPosition","border","borderWidth","borderStyle","borderColor","borderBottom","borderBottomWidth","borderBottomStyle","borderBottomColor","borderLeft","borderLeftWidth","borderLeftStyle","borderLeftColor","borderRight","borderRightWidth","borderRightStyle","borderRightColor","borderTop","borderTopWidth","borderTopStyle","borderTopColor","font","fontStyle","fontVariant","fontSize","fontFamily","outline","outlineWidth","outlineStyle","outlineColor","CSSProperty","_classCallCheck","instance","Constructor","_callbacks","_contexts","_arg","contexts","checkpoint","rollback","isAttributeNameSafe","validatedAttributeNameCache","illegalAttributeNameCache","VALID_ATTRIBUTE_NAME_REGEX","shouldIgnoreValue","isNaN","quoteAttributeValueForBrowser","RegExp","DOMPropertyOperations","createMarkupForID","setAttributeForID","createMarkupForRoot","setAttributeForRoot","createMarkupForProperty","createMarkupForCustomAttribute","setValueForProperty","deleteValueForProperty","namespace","setAttributeNS","setValueForAttribute","removeAttribute","deleteValueForAttribute","updateOptionsIfPendingUpdateAndMounted","_wrapperState","pendingUpdate","updateOptions","Boolean","multiple","propValue","selectedValue","options","selected","_handleChange","didWarnValueDefaultValue","ReactDOMSelect","getHostProps","mountWrapper","initialValue","defaultValue","listeners","wasMultiple","getSelectValueContext","postUpdateWrapper","emptyComponentFactory","ReactEmptyComponentInjection","injectEmptyComponentFactory","ReactEmptyComponent","create","instantiate","createInternalComponent","genericComponentClass","createInstanceForText","textComponentClass","isTextComponent","ReactHostComponentInjection","injectGenericComponentClass","componentClass","injectTextComponentClass","ReactHostComponent","isInDocument","containsNode","documentElement","ReactDOMSelection","focusNode","getActiveElement","ReactInputSelection","hasSelectionCapabilities","elem","contentEditable","getSelectionInformation","focusedElem","selectionRange","getSelection","restoreSelection","priorSelectionInformation","curFocusedElem","priorFocusedElem","priorSelectionRange","setSelection","input","selection","start","selectionStart","end","selectionEnd","range","createRange","parentElement","moveStart","moveEnd","getOffsets","offsets","min","createTextRange","collapse","select","setOffsets","firstDifferenceIndex","string1","string2","minLen","getReactRootElementInContainer","container","DOC_NODE_TYPE","internalGetID","mountComponentIntoNode","wrapperInstance","shouldReuseMarkup","wrappedElement","child","ReactDOMContainerInfo","_topLevelWrapper","ReactMount","_mountImageIntoNode","batchedMountComponentIntoNode","componentInstance","ReactDOMFeatureFlags","useCreateElement","unmountComponentFromNode","lastChild","hasNonRootReactChild","rootEl","isValidContainer","getHostRootInstanceInContainer","prevHostInstance","getTopLevelWrapperInContainer","root","_hostContainerInfo","ReactMarkupChecksum","instantiateReactComponent","ROOT_ATTR_NAME","instancesByReactRootID","topLevelRootCounter","TopLevelWrapper","rootID","render","_instancesByReactRootID","scrollMonitor","renderCallback","_updateRootComponent","prevComponent","_renderNewRootComponent","wrapperID","_instance","renderSubtreeIntoContainer","parentComponent","_renderSubtreeIntoContainer","nextWrappedElement","_processChildContext","prevWrappedElement","publicInst","updatedCallback","unmountComponentAtNode","reactRootElement","containerHasReactMarkup","containerHasNonRootReactChild","hasAttribute","rootElement","canReuseMarkup","checksum","CHECKSUM_ATTR_NAME","rootMarkup","outerHTML","normalizedMarkup","diffIndex","difference","ReactNodeTypes","HOST","COMPOSITE","EMPTY","getType","scrollPosition","next","arr","cb","getHostComponentFromComposite","_renderedNodeType","getTextContentAccessor","contentKey","isInternalComponentType","shouldHaveDebugID","info","getNativeNode","ReactCompositeComponentWrapper","_mountIndex","_mountImage","ReactCompositeComponent","construct","_instantiateReactComponent","isTextInputElement","supportedInputTypes","color","date","datetime","datetime-local","email","month","number","password","search","tel","url","week","textContent","getComponentKey","traverseAllChildrenImpl","nameSoFar","traverseContext","SEPARATOR","nextName","subtreeCount","nextNamePrefix","SUBSEPARATOR","iteratorFn","getIteratorFn","step","iterator","entries","ii","done","entry","addendum","childrenString","traverseAllChildren","EventListener","listen","eventType","removeEventListener","detachEvent","registerDefault","focus","activeElement","body","noop","getThen","obj","then","ex","LAST_ERROR","IS_ERROR","tryCallOne","tryCallTwo","Promise","_45","_81","_65","_54","doResolve","safeThen","onFulfilled","onRejected","resolve","reject","Handler","deferred","_10","handleResolved","promise","newValue","finale","_97","reason","_61","defaultSetTimout","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","setTimeout","runClearTimeout","marker","cachedClearTimeout","clearTimeout","cleanUpNextTick","draining","currentQueue","queueIndex","drainQueue","timeout","run","Item","array","process","nextTick","title","browser","env","argv","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","binding","cwd","chdir","dir","umask","isNative","funcToString","Function","reIsNative","purgeDeep","item","getItem","childIDs","removeItem","describeComponentFrame","ownerName","fileName","lineNumber","getDisplayName","describeID","ReactComponentTreeHook","getElement","ownerID","getOwnerID","setItem","getItemIDs","addRoot","removeRoot","getRootIDs","canUseCollections","Map","Set","itemMap","rootIDSet","add","itemByKey","rootByKey","getKeyFromID","getIDFromKey","parseInt","substr","unmountedIDs","onSetChildren","nextChildIDs","nextChildID","nextChild","parentID","onBeforeMountComponent","updateCount","onBeforeUpdateComponent","onMountComponent","isRoot","onUpdateComponent","onUnmountComponent","purgeUnmountedComponents","_preventPurging","getCurrentStackAddendum","topElement","currentOwner","_debugID","getStackAddendumByID","getParentID","getChildIDs","getSource","getText","getUpdateCount","getRegisteredIDs","Symbol","canDefineProperty","ARIADOMPropertyConfig","aria-current","aria-details","aria-disabled","aria-hidden","aria-invalid","aria-keyshortcuts","aria-label","aria-roledescription","aria-autocomplete","aria-checked","aria-expanded","aria-haspopup","aria-level","aria-modal","aria-multiline","aria-multiselectable","aria-orientation","aria-placeholder","aria-pressed","aria-readonly","aria-required","aria-selected","aria-sort","aria-valuemax","aria-valuemin","aria-valuenow","aria-valuetext","aria-atomic","aria-busy","aria-live","aria-relevant","aria-dropeffect","aria-grabbed","aria-activedescendant","aria-colcount","aria-colindex","aria-colspan","aria-controls","aria-describedby","aria-errormessage","aria-flowto","aria-labelledby","aria-owns","aria-posinset","aria-rowcount","aria-rowindex","aria-rowspan","aria-setsize","AutoFocusUtils","focusDOMComponent","isPresto","opera","isKeypressCommand","getCompositionEventType","compositionStart","compositionEnd","compositionUpdate","isFallbackCompositionStart","START_KEYCODE","isFallbackCompositionEnd","END_KEYCODES","getDataFromCustomEvent","extractCompositionEvent","fallbackData","canUseCompositionEvent","currentComposition","useFallbackCompositionData","getData","FallbackCompositionState","SyntheticCompositionEvent","customData","getNativeBeforeInputChars","which","SPACEBAR_CODE","hasSpaceKeypress","SPACEBAR_CHAR","chars","getFallbackBeforeInputChars","extractBeforeInputEvent","canUseTextInputEvent","SyntheticInputEvent","beforeInput","bubbled","captured","BeforeInputEventPlugin","dangerousStyleValue","hyphenateStyleName","memoizeStringOnly","processStyleName","styleName","hasShorthandPropertyBug","styleFloatAccessor","tempStyle","style","cssFloat","CSSPropertyOperations","createMarkupForStyles","styles","serialized","styleValue","setValueForStyles","expansion","individualStyleName","shouldUseChangeEvent","manualDispatchChangeEvent","change","activeElementInst","runEventInBatch","startWatchingForChangeEventIE8","stopWatchingForChangeEventIE8","getTargetInstForChangeEvent","handleEventsForChangeEventIE8","startWatchingForValueChange","activeElementValue","activeElementValueProp","getOwnPropertyDescriptor","defineProperty","newValueProp","handlePropertyChange","stopWatchingForValueChange","getTargetInstForInputEvent","handleEventsForInputEventIE","getTargetInstForInputEventIE","shouldUseClickEvent","getTargetInstForClickEvent","handleControlledInputBlur","state","controlled","doesChangeEventBubble","isInputEventSupported","ChangeEventPlugin","getTargetInstFunc","handleEventFunc","targetNode","createNodesFromMarkup","oldChild","newChild","DefaultEventPluginOrder","mouseEnter","mouseLeave","EnterLeaveEventPlugin","win","related","toNode","_root","_startText","_fallbackText","startValue","startLength","endValue","endLength","minEnd","sliceTail","HTMLDOMPropertyConfig","accept","acceptCharset","accessKey","action","allowFullScreen","allowTransparency","alt","as","async","autoComplete","autoPlay","cellPadding","cellSpacing","charSet","challenge","cite","classID","className","cols","colSpan","contextMenu","controls","coords","crossOrigin","dateTime","default","defer","download","draggable","encType","form","formAction","formEncType","formMethod","formNoValidate","formTarget","frameBorder","headers","height","high","href","hrefLang","htmlFor","httpEquiv","icon","inputMode","integrity","keyParams","keyType","kind","label","lang","list","loop","low","manifest","marginHeight","marginWidth","max","maxLength","media","mediaGroup","minLength","muted","nonce","noValidate","open","optimum","pattern","placeholder","playsInline","poster","preload","profile","radioGroup","referrerPolicy","rel","required","reversed","role","rows","rowSpan","sandbox","scoped","scrolling","seamless","shape","size","sizes","span","spellCheck","src","srcDoc","srcLang","srcSet","summary","tabIndex","useMap","width","wmode","wrap","about","datatype","inlist","property","resource","typeof","vocab","autoCapitalize","autoCorrect","autoSave","itemProp","itemScope","itemType","itemID","itemRef","results","security","unselectable","validity","badInput","instantiateChild","childInstances","selfDebugID","keyUnique","ReactChildReconciler","instantiateChildren","nestedChildNodes","updateChildren","prevChildren","nextChildren","mountImages","removedNodes","prevChild","nextChildInstance","nextChildMountImage","unmountChildren","renderedChildren","renderedChild","ReactDOMIDOperations","ReactComponentBrowserEnvironment","dangerouslyProcessChildrenUpdates","StatelessComponent","warnIfInvalidElement","shouldConstruct","isPureComponent","isPureReactComponent","CompositeTypes","ImpureClass","PureClass","StatelessFunctional","nextMountID","_compositeType","_calledComponentWillUnmount","renderedElement","publicProps","publicContext","_processContext","updateQueue","getUpdateQueue","doConstruct","_constructComponent","initialState","unstable_handleError","performInitialMountWithErrorHandling","performInitialMount","componentDidMount","_constructComponentWithoutOwner","_processPendingState","debugID","componentWillMount","_renderValidatedComponent","componentWillUnmount","_maskContext","contextTypes","maskedContext","contextName","currentContext","childContext","getChildContext","childContextTypes","_checkContextTypes","typeSpecs","values","location","prevContext","updateComponent","prevParentElement","nextParentElement","prevUnmaskedContext","nextUnmaskedContext","willReceive","prevProps","nextProps","componentWillReceiveProps","nextState","shouldUpdate","shouldComponentUpdate","_performComponentUpdate","partial","unmaskedContext","prevState","hasComponentDidUpdate","componentDidUpdate","componentWillUpdate","_updateRenderedComponent","prevComponentInstance","prevRenderedElement","nextRenderedElement","oldHostNode","nextMarkup","_replaceNodeWithMarkup","prevInstance","_renderValidatedComponentWithoutOwnerOrContext","attachRef","publicComponentInstance","detachRef","ReactDefaultInjection","findDOMNode","inject","ReactDOM","unstable_batchedUpdates","unstable_renderSubtreeIntoContainer","__REACT_DEVTOOLS_GLOBAL_HOOK__","Mount","Reconciler","assertValidProps","voidElementTags","_tag","dangerouslySetInnerHTML","HTML","enqueuePutListener","ReactServerRenderingTransaction","containerInfo","isDocumentFragment","_node","DOC_FRAGMENT_TYPE","_ownerDocument","listenerToPut","inputPostMount","ReactDOMInput","postMountWrapper","textareaPostMount","ReactDOMTextarea","optionPostMount","ReactDOMOption","trapBubbledEventsLocal","getNode","mediaEvents","postUpdateSelectWrapper","validateDangerousTag","validatedTagCache","VALID_TAG_REGEX","isCustomComponent","ReactDOMComponent","_namespaceURI","_previousStyle","_previousStyleCopy","ReactMultiChild","CONTENT_TYPES","STYLE","suppressContentEditableWarning","omittedCloseTags","area","base","br","col","embed","hr","img","keygen","link","meta","param","track","wbr","newlineEatingTags","listing","pre","textarea","menuitem","globalIdCounter","Mixin","_idCounter","parentTag","mountImage","el","div","createElementNS","_updateDOMProperties","lazyTree","_createInitialChildren","tagOpen","_createOpenTagMarkupAndPutListeners","tagContent","_createContentMarkup","autoFocus","propKey","renderToStaticMarkup","__html","contentToUse","childrenToUse","mountChildren","lastProps","_updateDOMChildren","updateWrapper","styleUpdates","lastStyle","nextProp","lastProp","lastContent","nextContent","lastHtml","nextHtml","lastChildren","lastHasContentOrHtml","nextHasContentOrHtml","updateTextContent","updateMarkup","topLevelWrapper","ReactDOMEmptyComponent","domID","createComment","useFiber","forceUpdateIfMounted","isControlled","usesChecked","rootNode","queryRoot","group","querySelectorAll","JSON","stringify","otherNode","otherInstance","hostProps","defaultChecked","initialChecked","valueAsNumber","parseFloat","flattenChildren","didWarnInvalidOptionChildren","selectValue","selectParent","isCollapsed","anchorNode","anchorOffset","focusOffset","getIEOffsets","selectedRange","selectedLength","fromStart","duplicate","moveToElementText","setEndPoint","startOffset","endOffset","getModernOffsets","rangeCount","currentRange","getRangeAt","startContainer","endContainer","isSelectionCollapsed","rangeLength","tempRange","cloneRange","selectNodeContents","setEnd","isTempRangeCollapsed","detectionRange","setStart","isBackward","collapsed","setIEOffsets","setModernOffsets","extend","temp","startMarker","getNodeForCharacterOffset","endMarker","offset","removeAllRanges","addRange","useIEOffsets","ReactDOMTextComponent","_stringText","_closingComment","_commentNodes","openingValue","closingValue","createDocumentFragment","escapedText","nextText","nextStringText","commentNodes","hostNode","instA","instB","depthA","tempA","depthB","tempB","depth","path","common","pathFrom","pathTo","ReactDefaultBatchingStrategyTransaction","RESET_BATCHED_UPDATES","ReactDefaultBatchingStrategy","FLUSH_BATCHED_UPDATES","alreadyBatchingUpdates","alreadyInjected","ReactInjection","EventEmitter","ReactDOMTreeTraversal","SimpleEventPlugin","SelectEventPlugin","HostComponent","SVGDOMPropertyConfig","EmptyComponent","Updates","runEventQueueInBatch","findParent","TopLevelCallbackBookKeeping","ancestors","handleTopLevelImpl","bookKeeping","ancestor","_handleTopLevel","scrollValueMonitor","getUnboundedScrollPosition","twoArgumentPooler","_enabled","dispatchEvent","adler32","TAG_END","COMMENT_START","addChecksumToMarkup","existingChecksum","markupChecksum","makeInsertMarkup","toIndex","fromIndex","makeMove","makeRemove","makeSetMarkup","makeTextContent","processQueue","_reconcilerInstantiateChildren","nestedChildren","_reconcilerUpdateChildren","nextNestedChildrenElements","_updateChildren","nextIndex","nextMountIndex","lastPlacedNode","_mountChildAtIndex","_unmountChild","createChild","isValidOwner","ReactOwner","addComponentAsRefTo","removeComponentAsRefFrom","ownerPublicInstance","reactMountReady","SELECTION_RESTORATION","EVENT_SUPPRESSION","currentlyEnabled","previouslyEnabled","ON_DOM_READY_QUEUEING","prevRef","prevOwner","nextRef","nextOwner","ReactServerUpdateQueue","noopCallbackQueue","NS","xlink","xml","ATTRS","accentHeight","accumulate","additive","alignmentBaseline","allowReorder","alphabetic","amplitude","arabicForm","ascent","attributeType","autoReverse","azimuth","baseFrequency","baseProfile","baselineShift","bbox","begin","bias","by","calcMode","capHeight","clip","clipPath","clipRule","clipPathUnits","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","contentScriptType","contentStyleType","cursor","cx","cy","decelerate","descent","diffuseConstant","direction","display","divisor","dominantBaseline","dur","dx","dy","edgeMode","elevation","enableBackground","exponent","externalResourcesRequired","fill","fillRule","filter","filterRes","filterUnits","floodColor","focusable","fontSizeAdjust","fontStretch","fx","fy","g1","g2","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","glyphRef","gradientTransform","gradientUnits","hanging","horizAdvX","horizOriginX","ideographic","imageRendering","in","in2","intercept","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","kerning","keyPoints","keySplines","keyTimes","lengthAdjust","letterSpacing","lightingColor","limitingConeAngle","local","markerEnd","markerMid","markerStart","markerHeight","markerUnits","markerWidth","mask","maskContentUnits","maskUnits","mathematical","mode","numOctaves","operator","orient","orientation","origin","overflow","overlinePosition","overlineThickness","paintOrder","panose1","pathLength","patternContentUnits","patternTransform","patternUnits","pointerEvents","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","r","radius","refX","refY","renderingIntent","repeatCount","repeatDur","requiredExtensions","requiredFeatures","restart","result","rotate","rx","ry","scale","seed","shapeRendering","slope","spacing","specularConstant","specularExponent","speed","spreadMethod","stdDeviation","stemh","stemv","stitchTiles","stopColor","strikethroughPosition","strikethroughThickness","stroke","strokeLinecap","strokeLinejoin","surfaceScale","systemLanguage","tableValues","targetX","targetY","textAnchor","textDecoration","textRendering","textLength","transform","u1","u2","underlinePosition","underlineThickness","unicode","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","viewBox","viewTarget","visibility","widths","wordSpacing","writingMode","xHeight","x1","x2","xChannelSelector","xlinkActuate","xlinkArcrole","xlinkHref","xlinkRole","xlinkShow","xlinkTitle","xlinkType","xmlBase","xmlns","xmlnsXlink","xmlLang","xmlSpace","y1","y2","yChannelSelector","z","zoomAndPan","top","boundingTop","left","boundingLeft","constructSelectEvent","mouseDown","currentSelection","lastSelection","skipSelectionChangeEvent","hasListener","SyntheticAnimationEvent","SyntheticClipboardEvent","SyntheticFocusEvent","SyntheticKeyboardEvent","SyntheticDragEvent","SyntheticTouchEvent","SyntheticTransitionEvent","SyntheticWheelEvent","topLevelEventsToDispatchConfig","capitalizedEvent","onEvent","topEvent","onClickListeners","EventConstructor","AnimationEventInterface","animationName","elapsedTime","pseudoElement","ClipboardEventInterface","clipboardData","CompositionEventInterface","DragEventInterface","dataTransfer","FocusEventInterface","InputEventInterface","getEventKey","KeyboardEventInterface","repeat","locale","TouchEventInterface","touches","targetTouches","changedTouches","TransitionEventInterface","WheelEventInterface","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","l","MOD","isEmpty","isNonNumeric","trim","componentOrElement","flattenSingleChildIntoContext","normalizeKey","translateToKey","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","8","9","12","13","16","17","18","19","20","27","32","33","34","35","36","37","38","39","40","45","46","112","113","114","115","116","117","118","119","120","121","122","123","144","145","224","maybeIterable","ITERATOR_SYMBOL","FAUX_ITERATOR_SYMBOL","getLeafNode","getSiblingNode","nodeStart","nodeEnd","makePrefixMap","styleProp","prefixedEventNames","vendorPrefixes","prefixMap","animationend","animationiteration","animationstart","transitionend","animation","transition","camelize","_hyphenPattern","_","character","camelizeStyleName","msPattern","outerNode","innerNode","isTextNode","contains","compareDocumentPosition","callee","hasArrayNature","createArrayFromMixed","getNodeName","nodeNameMatch","nodeNamePattern","handleScript","dummyNode","getMarkupWrap","wrapDepth","scripts","getElementsByTagName","nodes","childNodes","markupWrap","shouldWrap","selectWrap","tableWrap","trWrap","svgWrap","*","legend","tr","optgroup","option","caption","colgroup","tbody","tfoot","thead","td","th","svgElements","scrollable","Window","pageXOffset","scrollLeft","pageYOffset","scrollTop","hyphenate","_uppercasePattern","isNode","Node","cache","getStack","enable","_interopRequireDefault","__esModule","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","enumerable","writable","configurable","setPrototypeOf","__proto__","Square","squareClassName","isActive","squareStyle","maxWidth","maxHeight","_react2","onClick","StartButton","log","_tone2","Transport","StopButton","stop","getPitch","floor","numRows","note","octave","_createClass","defineProperties","descriptor","protoProps","staticProps","_react","_reactDom","_reactDom2","_tone","numCols","synth","PolySynth","toMaster","Board","_React$Component","_this","getPrototypeOf","pitches","squares","createLoop","_this2","handleClick","renderSquare","that","columns","Sequence","pitchesToPlay","row","triggerAttackRelease","bpm","Pentacular","_React$Component2","getElementById","valuePromise","TRUE","FALSE","NULL","UNDEFINED","ZERO","EMPTYSTRING","all","remaining","race","disable","onUnhandled","allRejections","matchWhitelist","rejections","whitelist","DEFAULT_WHITELIST","displayId","logged","logError","onHandled","warn","_72","errStr","stack","line","some","cls","RangeError","global","rawAsap","task","requestFlush","flushing","flush","currentIndex","capacity","scan","newLength","makeRequestCallFromMutationObserver","toggle","observer","BrowserMutationObserver","observe","characterData","makeRequestCallFromTimer","handleTimer","timeoutHandle","clearInterval","intervalHandle","setInterval","MutationObserver","WebKitMutationObserver","normalizeName","normalizeValue","iteratorFor","items","shift","support","iterable","Headers","append","consumed","bodyUsed","fileReaderReady","reader","onload","onerror","readBlobAsArrayBuffer","blob","FileReader","readAsArrayBuffer","readBlobAsText","readAsText","readArrayBufferAsText","buf","Uint8Array","bufferClone","byteLength","buffer","Body","_initBody","_bodyInit","_bodyText","Blob","isPrototypeOf","_bodyBlob","formData","FormData","_bodyFormData","searchParams","URLSearchParams","arrayBuffer","isDataView","_bodyArrayBuffer","ArrayBuffer","isArrayBufferView","rejected","decode","json","parse","normalizeMethod","upcased","methods","Request","credentials","referrer","bytes","decodeURIComponent","parseHeaders","rawHeaders","parts","Response","bodyInit","status","ok","statusText","fetch","viewClasses","DataView","isView","oldValue","thisArg","clone","response","redirectStatuses","redirect","init","request","xhr","XMLHttpRequest","getAllResponseHeaders","responseURL","responseText","ontimeout","withCredentials","responseType","setRequestHeader","send","polyfill","escapeUserProvidedKey","userProvidedKeyEscapeRegex","ForEachBookKeeping","forEachFunction","forEachContext","forEachSingleChild","forEachChildren","forEachFunc","MapBookKeeping","mapResult","keyPrefix","mapFunction","mapContext","mapSingleChildIntoContext","childKey","mappedChild","mapIntoWithKeyPrefixInternal","escapedPrefix","mapChildren","forEachSingleChildDummy","countChildren","identity","validateMethodOverride","isAlreadyDefined","specPolicy","ReactClassInterface","ReactClassMixin","mixSpecIntoComponent","spec","proto","autoBindPairs","__reactAutoBindPairs","MIXINS_KEY","RESERVED_SPEC_KEYS","mixins","isReactClassMethod","isFunction","shouldAutoBind","autobind","createMergedResultFunction","createChainedFunction","mixStaticSpecIntoComponent","statics","isReserved","isInherited","mergeIntoWithNoDuplicateKeys","one","two","bindAutoBindMethod","boundMethod","bindAutoBindMethods","pairs","autoBindKey","injectedMixins","getDefaultProps","getInitialState","replaceState","newState","ReactClassComponent","methodName","injectMixin","createDOMFactory","abbr","address","article","aside","audio","bdi","bdo","big","blockquote","canvas","datalist","dd","del","details","dfn","dialog","dl","dt","em","fieldset","figcaption","figure","footer","h1","h2","h3","h4","h5","h6","head","header","hgroup","iframe","ins","kbd","li","main","mark","menu","meter","nav","noscript","ol","output","picture","progress","q","rp","rt","ruby","samp","script","section","small","strong","sub","sup","table","u","ul","var","video","circle","defs","ellipse","g","linearGradient","polygon","polyline","radialGradient","rect","tspan","ReactPropTypeLocationNames","_require","ComponentDummy","getNextDebugID","nextDebugID","__WEBPACK_AMD_DEFINE_RESULT__","Main","Tone","Module","inputs","outputs","isUndef","createGain","params","rampTime","isObject","isString","tmpObj","paramLoop","attr","parent","attrSplit","innerParam","Signal","Param","rampTo","AudioParam","_collectDefaults","subRet","subAttr","constr","defaults","_super","superDefs","isLetter","sameConstructor","dispose","AudioNode","disconnect","connect","unit","outputNum","inputNum","defaultArg","destination","isNumber","connectSeries","currentUnit","toUnit","chain","fan","given","fallback","givenProp","fallbackProp","optionsObject","isBoolean","noOp","_readOnly","_writable","State","Started","Stopped","Paused","equalPowerScale","percent","piFactor","PI","sin","dbToGain","db","pow","gainToDb","gain","LN10","intervalToFrequencyRatio","interval","TempConstructor","audioContext","Context","setContext","ctx","sampleRate","hasAudioContext","hasPromises","hasWorkers","TONE_SILENCE_VERSION_LOGGING","SignalBase","outputNumber","inputNumber","TimelineSignal","_param","cancelScheduledValues","overridden","WaveShaper","mapping","bufferLen","_shaper","createWaveShaper","_curve","curve","isFinite","Float32Array","setMap","normalized","oversample","oversampling","TimeBase","units","_expr","_noOp","copy","_defaultUnits","_primaryExpressions","_defaultExpr","exprString","_parseExprString","regexp","_beatsToUnits","_timeSignature","t","_ticksToUnits","hz","_frequencyToUnits","total","_secondsToUnits","samples","_binaryExpressions","+","precedence","lh","rh","-","/","_unaryExpressions","neg","_syntaxGlue","(",")","_tokenize","expr","getNextToken","expressions","opName","op","reg","SyntaxError","position","tokens","token","peek","_matchGroup","prec","_parseBinary","lexer","_parseUnary","_parsePrimary","matching","freq","beats","seconds","ticks","PPQ","timeSignature","_pushExpr","mult","valueOf","Time","_plusNow","quantize","nextSubdivision","subdiv","subdivision","toSeconds","round","ideal","diff","addNow","toNotation","testNotations","retNotation","_toNotationHelper","testTripletNotations","retTripletNotation","threshold","_notationToUnits","notationTime","floatingPointError","notation","primaryExprs","notationExprs","toBarsBeatsSixteenths","quarterTime","quarters","measures","sixteenths","toFixed","toTicks","toSamples","toFrequency","toMilliseconds","Frequency","midi","midiToFrequency","pitch","noteToScaleIndex","noteNumber","transpose","harmonize","intervals","toMidi","frequencyToMidi","toNote","A4","LN2","noteName","scaleIndexToNote","cbb","c#","dbb","d#","ebb","eb","e#","fbb","fb","f#","gbb","gb","g#","gx","abb","ab","a#","ax","bbb","bb","b#","bx","frequency","TransportTime","_secondsToTicks","ceil","Emitter","_events","eventList","functions","emitterFunc","shimConnect","toneConnect","B","outNum","inNum","nativeConnect","toneDisconnect","nativeDisconnect","AudioContext","webkitAudioContext","_defineProperty","_latencyHint","_lookAhead","_updateInterval","_computedUpdateInterval","_worker","_createWorker","_constants","currentTime","URL","webkitURL","blobUrl","createObjectURL","worker","_lastUpdate","getConstant","createBuffer","getChannelData","constant","createBufferSource","channelCount","channelCountMode","lA","blockTime","postMessage","hint","lookAhead","latencyHint","updateInterval","supported","Type","Default","Ticks","NormalRange","AudioRange","Decibels","Interval","BPM","Positive","Cents","Degrees","MIDI","BarsBeatsSixteenths","Samples","Hertz","Note","Milliseconds","Seconds","Notation","convert","_lfo","lfo","_toUnits","LFO","convertedVal","_fromUnits","_minOutput","setValueAtTime","setRampPoint","currentVal","linearRampToValueAtTime","endTime","exponentialRampToValueAtTime","exponentialRampToValue","startTime","linearRampToValue","setTargetAtTime","timeConstant","setValueCurveAtTime","duration","GainNode","createGainNode","Gain","_gainNode","createInsOuts","_gain","Timeline","_timeline","_toRemove","_iterating","memory","Infinity","_search","getAfter","getBefore","cancel","after","cancelBefore","beginning","midPoint","nextEvent","testEvent","_iterate","lowerBound","upperBound","forEachBefore","forEachAfter","forEachFrom","forEachAtTime","_initial","Linear","Exponential","Target","Curve","getValueAtTime","beforeEvent","_searchBefore","setValue","sampleTime","scaling","floats","segmentTime","before","_searchAfter","linearRampToValueBetween","finish","exponentialRampToValueBetween","previouVal","previous","_exponentialApproach","_curveInterpolate","_linearInterpolate","_exponentialInterpolate","t0","v0","v1","exp","t1","lowerIndex","upperIndex","lowerVal","upperVal","Pow","_exp","_expScaler","_expFunc","abs","Envelope","attack","decay","sustain","_attackCurve","_releaseCurve","_sig","attackCurve","releaseCurve","In","curveDef","Out","triggerAttack","velocity","originalAttack","currentValue","attackRate","remainingDistance","percentComplete","sliceIndex","triggerRelease","invertCurve","out","reverseCurve","reverse","curveLen","cosineCurve","rippleCurve","rippleCurveFreq","sineWave","stairsCurve","steps","sineCurve","cos","bounceCurve","linear","exponential","bounce","cosine","ripple","sine","AmplitudeEnvelope","AnalyserNode","getFloatTimeDomainData","uint8","getByteTimeDomainData","Analyser","_analyser","createAnalyser","_type","_returnType","returnType","_buffer","minDecibels","maxDecibels","smoothing","Waveform","FFT","ReturnType","Byte","Float","analyse","getByteFrequencyData","getFloatFrequencyData","frequencyBinCount","fftSize","smoothingTimeConstant","Compressor","_compressor","createDynamicsCompressor","knee","ratio","Add","_sum","Multiply","_mult","Negate","_multiply","Subtract","_neg","GreaterThanZero","_thresh","_scale","GreaterThan","_gtz","Abs","_abs","Modulo","modulus","_subtract","_modSignal","_setWaveShaper","mod","AudioToGain","_norm","applyBinary","_eval","applyUnary","getNumber","literalNumber","Expr","_replacements","inputCount","_parseInputs","_nodes","_parseTree","_disposeNodes","_Expressions","signal","sig","glue",",","a2g","binary","unary","!","NOT","inputArray","inputMax","matchSyntax","syn","matchGroup","groupName","parseExpression","parseUnary","parsePrimary","parseFunctionCall","parseArgumentList","EqualPowerGain","_eqPower","CrossFade","initialFade","fade","_equalPowerA","_equalPowerB","_invert","Filter","_filters","detune","Q","_rolloff","rolloff","types","possibilities","cascadingCount","createBiquadFilter","connectionChain","MultibandSplit","_lowMidFilter","mid","lowFrequency","highFrequency","EQ3","_multibandSplit","_lowGain","_midGain","_highGain","Scale","outputMin","outputMax","_outputMin","_outputMax","_add","_setRange","ScaleExp","DelayNode","createDelay","createDelayNode","Delay","_delayNode","maxDelay","delayTime","FeedbackCombFilter","_delay","_feedback","resonance","Follower","_filter","_frequencyValues","_sub","_attack","_release","_setAttackRelease","minTime","ScaledEnvelope","FrequencyEnvelope","_octaves","octaves","Gate","_follower","_gt","thresh","attackTime","releaseTime","TimelineState","initial","setStateAtTime","Clock","_nextTick","_lastState","_state","_boundLoop","_loop","pause","lagCompensation","lag","loopInterval","currentState","tickTime","getStateAtTime","IntervalTimeline","_length","IntervalNode","insert","updateHeight","updateMax","_rebalance","_removeNode","_setRoot","_replaceNodeInParent","replacement","isLeftChild","right","balance","getBalance","_rotateLeft","pivotNode","_rotateRight","allNodes","traverse","searchAfter","_left","_right","point","_loopStart","_loopEnd","_ppq","TransportConstructor","_clock","_processTick","_bindClockEvents","_scheduledEvents","_eventID","_repeatedEvents","_onceEvents","_syncedSignals","_swingTicks","_swingAmount","swing","swingSubdivision","loopStart","loopEnd","amount","schedule","timeline","scheduleRepeat","scheduleOnce","clear","eventId","timeSig","startPosition","endPosition","setLoopPoints","ppq","transportPos","remainingTime","syncSignal","ratioSignal","unsyncSignal","syncedSignal","Volume","volume","_unmutedVolume","mute","Master","_volume","MasterConstructor","Source","_synced","_scheduled","_start","_stop","retrigger","sched","sync","stateEvent","unsync","OscillatorNode","noteOn","noteOff","setPeriodicWave","setWaveTable","createPeriodicWave","createWaveTable","Oscillator","_oscillator","_wave","_partials","partials","_phase","Sine","Triangle","Sawtooth","Custom","createOscillator","syncFrequency","unsyncFrequency","coefs","_getRealImaginary","periodicWave","periodicWaveSize","real","imag","partialCount","_inverseFFT","sum","_getInitialValue","maxValue","twoPi","Zero","_stoppedSignal","_zeros","_stoppedValue","_a2g","_scaler","_units","currentMin","currentMax","Limiter","LowpassCombFilter","_lowpass","dampening","Merge","_merger","createChannelMerger","Meter","_lastValue","Level","rms","sqrt","unity","Split","_splitter","createChannelSplitter","MidSideSplit","_split","side","SQRT1_2","MidSideMerge","_merge","MidSideCompressor","_midSideSplit","_midSideMerge","Mono","MultibandCompressor","Panner","initialPan","_hasStereoPanner","_panner","createStereoPanner","pan","_crossFade","_zero","Panner3D","createPanner","panningModel","maxDistance","distanceModel","coneOuterGain","coneOuterAngle","coneInnerAngle","refDistance","rolloffFactor","_orientation","orientationX","orientationY","orientationZ","_position","positionX","positionY","positionZ","_rampTimeConstant","setPosition","setOrientation","pos","_aliasProperty","PanVol","CtrlInterpolate","lowerPosition","lower","upper","_interpolate","retArray","retObj","_toNumber","CtrlMarkov","distribution","_getProbDistribution","rand","dist","chosen","needsNormalizing","probability","CtrlPattern","_shuffled","_direction","UpDown","DownUp","AlternateUp","AlternateDown","Random","RandomWalk","RandomOnce","_shuffleValues","randVal","CtrlRandom","integer","AudioBuffer","copyToChannel","chanNum","channel","copyFromChannel","dest","Buffer","_reversed","_xhr","load","buff","_currentDownloads","abort","numberOfChannels","fromArray","isMultidimensional","channels","toMono","outputArray","numChannels","channelArray","sample","startSamples","endSamples","retBuffer","_reverse","rev","_downloadQueue","baseUrl","onError","onProgress","totalProgress","decodeAudioData","lengthComputable","cancelDownloads","supportsType","extension","canPlayType","removeEvents","success","fail","catch","Buffers","urls","_buffers","_flattenUrls","_loadingCount","_bufferLoaded","isLoaded","buffName","ob","toReturn","flatObject","Buses","channelName","sendKnob","receive","Draw","expiration","anticipation","_boundDrawLoop","_drawLoop","requestAnimationFrame","Listener","ListenerConstructor","forwardX","forwardY","forwardZ","upX","upY","upZ","OfflineAudioContext","webkitOfflineAudioContext","OfflineContext","offlineContext","_duration","_currentTime","oncomplete","renderedBuffer","startRendering","Offline","originalContext","Effect","_dryWet","wet","effectSend","effectReturn","connectEffect","effect","AutoFilter","delay","oct","AutoPanner","AutoWah","follower","_sweepRange","_baseFrequency","_inputBoost","_bandpass","_peaking","_setSweepRange","sensitivity","baseFreq","sensitivy","BitCrusher","invStepSize","bits","_modulo","_bits","Chebyshev","_order","_getCoefficient","degree","memo","StereoEffect","effectSendL","effectSendR","effectReturnL","effectReturnR","FeedbackEffect","_feedbackGain","feedback","StereoXFeedbackEffect","_feedbackLR","_feedbackRL","Chorus","_depth","_delayTime","_lfoL","_lfoR","_delayNodeL","_delayNodeR","spread","deviation","Convolver","_convolver","createConvolver","Distortion","_distortion","distortion","deg","FeedbackDelay","combFilterTunings","allpassFilterFrequencies","Freeverb","roomSize","_combFilters","_allpassFiltersL","_allpassFiltersR","allpassL","allpassR","lfpf","al","ar","cf","combFilterDelayTimes","combFilterResonances","allpassFilterFreqs","JCReverb","_scaleRoomSize","_allpassFilters","_feedbackCombFilters","af","allpass","fbcf","apf","MidSideEffect","midSend","sideSend","midReturn","sideReturn","Phaser","_filtersL","_makeFilters","stages","_filtersR","connectToFreq","filters","PingPongDelay","_leftDelay","maxDelayTime","_rightDelay","_rightPreDelay","PitchShift","_frequency","_delayA","_lfoA","_delayB","_lfoB","_crossFadeLFO","_feedbackDelay","_pitch","_windowSize","windowSize","factor","StereoFeedbackEffect","_feedbackL","_feedbackR","StereoWidener","_midMult","_sideMult","_two","Tremolo","_amplitudeL","_amplitudeR","Vibrato","Event","_playbackRate","_startOffset","humanize","playbackRate","_rescheduleEvents","startTick","_getLoopDuration","_tick","previousEvent","reschedulTime","variation","rate","lastEvent","loopDuration","Loop","_event","iterations","prob","iters","Part","_probability","_humanize","_forEach","_startNote","at","_restartEvent","removeAll","_setAll","_testLoopBoundries","Pattern","_pattern","vals","_subdivision","_indexTime","subSubdivision","PulseOscillator","_widthGate","_sawtooth","PWMOscillator","_pulse","modulationFrequency","_modulator","FMOscillator","_carrier","modulationIndex","modulationType","harmonicity","_modulationNode","AMOscillator","_modulationScale","FatOscillator","_oscillators","_spread","osc","OmniOscillator","_sourceType","OmniOscType","Pulse","PWM","Osc","FM","AM","Fat","_createNewOscillator","oscType","OscillatorConstructor","oldOsc","mType","Instrument","Monophonic","portamento","_triggerEnvelopeAttack","setNote","_triggerEnvelopeRelease","currentNote","portTime","Synth","oscillator","envelope","AMSynth","modulation","modulationEnvelope","MonoSynth","filterEnvelope","DuoSynth","voice0","voice1","_vibrato","vibratoRate","_vibratoGain","vibratoAmount","FMSynth","carrier","modulator","MembraneSynth","pitchDecay","maxNote","inharmRatios","MetalSynth","_freqMultipliers","_amplitue","_highpass","_filterFreqScaler","vel","octs","AudioBufferSourceNode","noteGrainOn","BufferSource","onended","_startTime","_stopTime","fadeIn","fadeOut","_onendedTimeout","fadeInTime","fadeOutTime","playbackState","_onended","createBuffers","_noiseArrays","_noiseBuffers","Noise","bufferLength","pink","channelNum","b0","b1","b2","b3","b4","b5","b6","white","brown","lastOut","NoiseSynth","noise","PluckSynth","_noise","attackNoise","_lfcf","delayAmount","polyphony","MAX_POLYPHONY","voices","_triggers","v","voice","notes","oldest","oldestIndex","stringified","desc","releaseAll","Player","autostart","_onload","seek","Sampler","player","GainToAudio","Normalize","inputMin","_inputMin","_inputMax","_div","MultiPlayer","buffers","_activeSources","_makeSource","bufferName","startLoop","stopAll","sources","GrainPlayer","_player","_grainSize","grainSize","_overlap","overlap","drift","_offset","bufferDuration","originalFadeIn","endSegmentDuration","scrub","UserMedia","_mediaStream","_stream","_device","labelOrId","enumerateDevices","devices","device","find","deviceId","constraints","echoCancellation","mediaDevices","getUserMedia","stream","createMediaStreamSource","getAudioTracks","active","groupId","__webpack_module_template_argument_0__","__webpack_module_template_argument_1__","oneArgumentPooler","copyFieldsFrom","Klass","instancePool","a1","a2","threeArgumentPooler","a3","a4","standardReleaser","poolSize","DEFAULT_POOL_SIZE","DEFAULT_POOLER","CopyConstructor","pooler","NewKlass","warning","throwOnDirectAccess","__webpack_module_template_argument_2__","__webpack_module_template_argument_3__","__webpack_module_template_argument_4__","PropTypeError","createChainableTypeChecker","validate","checkType","isRequired","propFullName","secret","ANONYMOUS","chainedCheckType","createPrimitiveTypeChecker","expectedType","propType","getPropType","preciseType","getPreciseType","createAnyTypeChecker","createArrayOfTypeChecker","typeChecker","createElementTypeChecker","createInstanceTypeChecker","expectedClass","expectedClassName","actualClassName","getClassName","createEnumTypeChecker","expectedValues","valuesString","createObjectOfTypeChecker","createUnionTypeChecker","arrayOfTypeCheckers","checker","getPostfixForTypeWarning","createNodeChecker","createShapeTypeChecker","shapeTypes","every","isSymbol","bool","symbol","any","arrayOf","instanceOf","objectOf","oneOf","oneOfType"],"mappings":"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","file":"static/js/main.eff896ac.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/pentacular/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ((function(modules) {\n\t// Check all modules for deduplicated modules\n\tfor(var i in modules) {\n\t\tif(Object.prototype.hasOwnProperty.call(modules, i)) {\n\t\t\tswitch(typeof modules[i]) {\n\t\t\tcase \"function\": break;\n\t\t\tcase \"object\":\n\t\t\t\t// Module can be created from a template\n\t\t\t\tmodules[i] = (function(_m) {\n\t\t\t\t\tvar args = _m.slice(1), fn = modules[_m[0]];\n\t\t\t\t\treturn function (a,b,c) {\n\t\t\t\t\t\tfn.apply(this, [a,b,c].concat(args));\n\t\t\t\t\t};\n\t\t\t\t}(modules[i]));\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\t// Module is a copy of another module\n\t\t\t\tmodules[i] = modules[modules[i]];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn modules;\n}([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(161);\n\tmodule.exports = __webpack_require__(162);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * Use invariant() to assert state which your program assumes to be true.\n\t *\n\t * Provide sprintf-style format (only %s is supported) and arguments\n\t * to provide information about what broke and what you were\n\t * expecting.\n\t *\n\t * The invariant message will be stripped in production, but the invariant\n\t * will remain to ensure logic does not differ in production.\n\t */\n\t\n\tvar validateFormat = function validateFormat(format) {};\n\t\n\tif (false) {\n\t  validateFormat = function validateFormat(format) {\n\t    if (format === undefined) {\n\t      throw new Error('invariant requires an error message argument');\n\t    }\n\t  };\n\t}\n\t\n\tfunction invariant(condition, format, a, b, c, d, e, f) {\n\t  validateFormat(format);\n\t\n\t  if (!condition) {\n\t    var error;\n\t    if (format === undefined) {\n\t      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n\t    } else {\n\t      var args = [a, b, c, d, e, f];\n\t      var argIndex = 0;\n\t      error = new Error(format.replace(/%s/g, function () {\n\t        return args[argIndex++];\n\t      }));\n\t      error.name = 'Invariant Violation';\n\t    }\n\t\n\t    error.framesToPop = 1; // we don't care about invariant's own frame\n\t    throw error;\n\t  }\n\t}\n\t\n\tmodule.exports = invariant;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * \n\t */\n\t'use strict';\n\t\n\t/**\n\t * WARNING: DO NOT manually require this module.\n\t * This is a replacement for `invariant(...)` used by the error code system\n\t * and will _only_ be required by the corresponding babel pass.\n\t * It always throws.\n\t */\n\t\n\tfunction reactProdInvariant(code) {\n\t  var argCount = arguments.length - 1;\n\t\n\t  var message = 'Minified React error #' + code + '; visit ' + 'http://facebook.github.io/react/docs/error-decoder.html?invariant=' + code;\n\t\n\t  for (var argIdx = 0; argIdx < argCount; argIdx++) {\n\t    message += '&args[]=' + encodeURIComponent(arguments[argIdx + 1]);\n\t  }\n\t\n\t  message += ' for the full message or use the non-minified dev environment' + ' for full errors and additional helpful warnings.';\n\t\n\t  var error = new Error(message);\n\t  error.name = 'Invariant Violation';\n\t  error.framesToPop = 1; // we don't care about reactProdInvariant's own frame\n\t\n\t  throw error;\n\t}\n\t\n\tmodule.exports = reactProdInvariant;\n\n/***/ },\n/* 3 */\n[189, 9],\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(2);\n\t\n\tvar DOMProperty = __webpack_require__(16);\n\tvar ReactDOMComponentFlags = __webpack_require__(55);\n\t\n\tvar invariant = __webpack_require__(1);\n\t\n\tvar ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;\n\tvar Flags = ReactDOMComponentFlags;\n\t\n\tvar internalInstanceKey = '__reactInternalInstance$' + Math.random().toString(36).slice(2);\n\t\n\t/**\n\t * Check if a given node should be cached.\n\t */\n\tfunction shouldPrecacheNode(node, nodeID) {\n\t  return node.nodeType === 1 && node.getAttribute(ATTR_NAME) === String(nodeID) || node.nodeType === 8 && node.nodeValue === ' react-text: ' + nodeID + ' ' || node.nodeType === 8 && node.nodeValue === ' react-empty: ' + nodeID + ' ';\n\t}\n\t\n\t/**\n\t * Drill down (through composites and empty components) until we get a host or\n\t * host text component.\n\t *\n\t * This is pretty polymorphic but unavoidable with the current structure we have\n\t * for `_renderedChildren`.\n\t */\n\tfunction getRenderedHostOrTextFromComponent(component) {\n\t  var rendered;\n\t  while (rendered = component._renderedComponent) {\n\t    component = rendered;\n\t  }\n\t  return component;\n\t}\n\t\n\t/**\n\t * Populate `_hostNode` on the rendered host/text component with the given\n\t * DOM node. The passed `inst` can be a composite.\n\t */\n\tfunction precacheNode(inst, node) {\n\t  var hostInst = getRenderedHostOrTextFromComponent(inst);\n\t  hostInst._hostNode = node;\n\t  node[internalInstanceKey] = hostInst;\n\t}\n\t\n\tfunction uncacheNode(inst) {\n\t  var node = inst._hostNode;\n\t  if (node) {\n\t    delete node[internalInstanceKey];\n\t    inst._hostNode = null;\n\t  }\n\t}\n\t\n\t/**\n\t * Populate `_hostNode` on each child of `inst`, assuming that the children\n\t * match up with the DOM (element) children of `node`.\n\t *\n\t * We cache entire levels at once to avoid an n^2 problem where we access the\n\t * children of a node sequentially and have to walk from the start to our target\n\t * node every time.\n\t *\n\t * Since we update `_renderedChildren` and the actual DOM at (slightly)\n\t * different times, we could race here and see a newer `_renderedChildren` than\n\t * the DOM nodes we see. To avoid this, ReactMultiChild calls\n\t * `prepareToManageChildren` before we change `_renderedChildren`, at which\n\t * time the container's child nodes are always cached (until it unmounts).\n\t */\n\tfunction precacheChildNodes(inst, node) {\n\t  if (inst._flags & Flags.hasCachedChildNodes) {\n\t    return;\n\t  }\n\t  var children = inst._renderedChildren;\n\t  var childNode = node.firstChild;\n\t  outer: for (var name in children) {\n\t    if (!children.hasOwnProperty(name)) {\n\t      continue;\n\t    }\n\t    var childInst = children[name];\n\t    var childID = getRenderedHostOrTextFromComponent(childInst)._domID;\n\t    if (childID === 0) {\n\t      // We're currently unmounting this child in ReactMultiChild; skip it.\n\t      continue;\n\t    }\n\t    // We assume the child nodes are in the same order as the child instances.\n\t    for (; childNode !== null; childNode = childNode.nextSibling) {\n\t      if (shouldPrecacheNode(childNode, childID)) {\n\t        precacheNode(childInst, childNode);\n\t        continue outer;\n\t      }\n\t    }\n\t    // We reached the end of the DOM children without finding an ID match.\n\t     true ?  false ? invariant(false, 'Unable to find element with ID %s.', childID) : _prodInvariant('32', childID) : void 0;\n\t  }\n\t  inst._flags |= Flags.hasCachedChildNodes;\n\t}\n\t\n\t/**\n\t * Given a DOM node, return the closest ReactDOMComponent or\n\t * ReactDOMTextComponent instance ancestor.\n\t */\n\tfunction getClosestInstanceFromNode(node) {\n\t  if (node[internalInstanceKey]) {\n\t    return node[internalInstanceKey];\n\t  }\n\t\n\t  // Walk up the tree until we find an ancestor whose instance we have cached.\n\t  var parents = [];\n\t  while (!node[internalInstanceKey]) {\n\t    parents.push(node);\n\t    if (node.parentNode) {\n\t      node = node.parentNode;\n\t    } else {\n\t      // Top of the tree. This node must not be part of a React tree (or is\n\t      // unmounted, potentially).\n\t      return null;\n\t    }\n\t  }\n\t\n\t  var closest;\n\t  var inst;\n\t  for (; node && (inst = node[internalInstanceKey]); node = parents.pop()) {\n\t    closest = inst;\n\t    if (parents.length) {\n\t      precacheChildNodes(inst, node);\n\t    }\n\t  }\n\t\n\t  return closest;\n\t}\n\t\n\t/**\n\t * Given a DOM node, return the ReactDOMComponent or ReactDOMTextComponent\n\t * instance, or null if the node was not rendered by this React.\n\t */\n\tfunction getInstanceFromNode(node) {\n\t  var inst = getClosestInstanceFromNode(node);\n\t  if (inst != null && inst._hostNode === node) {\n\t    return inst;\n\t  } else {\n\t    return null;\n\t  }\n\t}\n\t\n\t/**\n\t * Given a ReactDOMComponent or ReactDOMTextComponent, return the corresponding\n\t * DOM node.\n\t */\n\tfunction getNodeFromInstance(inst) {\n\t  // Without this first invariant, passing a non-DOM-component triggers the next\n\t  // invariant for a missing parent, which is super confusing.\n\t  !(inst._hostNode !== undefined) ?  false ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;\n\t\n\t  if (inst._hostNode) {\n\t    return inst._hostNode;\n\t  }\n\t\n\t  // Walk up the tree until we find an ancestor whose DOM node we have cached.\n\t  var parents = [];\n\t  while (!inst._hostNode) {\n\t    parents.push(inst);\n\t    !inst._hostParent ?  false ? invariant(false, 'React DOM tree root should always have a node reference.') : _prodInvariant('34') : void 0;\n\t    inst = inst._hostParent;\n\t  }\n\t\n\t  // Now parents contains each ancestor that does *not* have a cached native\n\t  // node, and `inst` is the deepest ancestor that does.\n\t  for (; parents.length; inst = parents.pop()) {\n\t    precacheChildNodes(inst, inst._hostNode);\n\t  }\n\t\n\t  return inst._hostNode;\n\t}\n\t\n\tvar ReactDOMComponentTree = {\n\t  getClosestInstanceFromNode: getClosestInstanceFromNode,\n\t  getInstanceFromNode: getInstanceFromNode,\n\t  getNodeFromInstance: getNodeFromInstance,\n\t  precacheChildNodes: precacheChildNodes,\n\t  precacheNode: precacheNode,\n\t  uncacheNode: uncacheNode\n\t};\n\t\n\tmodule.exports = ReactDOMComponentTree;\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t/*\n\tobject-assign\n\t(c) Sindre Sorhus\n\t@license MIT\n\t*/\n\t\n\t'use strict';\n\t/* eslint-disable no-unused-vars */\n\tvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\tvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\t\n\tfunction toObject(val) {\n\t\tif (val === null || val === undefined) {\n\t\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t\t}\n\t\n\t\treturn Object(val);\n\t}\n\t\n\tfunction shouldUseNative() {\n\t\ttry {\n\t\t\tif (!Object.assign) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\t// Detect buggy property enumeration order in older V8 versions.\n\t\n\t\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\t\ttest1[5] = 'de';\n\t\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\t\tvar test2 = {};\n\t\t\tfor (var i = 0; i < 10; i++) {\n\t\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t\t}\n\t\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\t\treturn test2[n];\n\t\t\t});\n\t\t\tif (order2.join('') !== '0123456789') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\t\tvar test3 = {};\n\t\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\t\ttest3[letter] = letter;\n\t\t\t});\n\t\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\treturn true;\n\t\t} catch (err) {\n\t\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\t\tvar from;\n\t\tvar to = toObject(target);\n\t\tvar symbols;\n\t\n\t\tfor (var s = 1; s < arguments.length; s++) {\n\t\t\tfrom = Object(arguments[s]);\n\t\n\t\t\tfor (var key in from) {\n\t\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\t\tto[key] = from[key];\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tif (getOwnPropertySymbols) {\n\t\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn to;\n\t};\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n\t\n\t/**\n\t * Simple, lightweight module assisting with the detection and context of\n\t * Worker. Helps avoid circular dependencies and allows code to reason about\n\t * whether or not they are in a Worker, even if they never include the main\n\t * `ReactWorker` dependency.\n\t */\n\tvar ExecutionEnvironment = {\n\t\n\t  canUseDOM: canUseDOM,\n\t\n\t  canUseWorkers: typeof Worker !== 'undefined',\n\t\n\t  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),\n\t\n\t  canUseViewport: canUseDOM && !!window.screen,\n\t\n\t  isInWorker: !canUseDOM // For now, this is true - might change in the future.\n\t\n\t};\n\t\n\tmodule.exports = ExecutionEnvironment;\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2016-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * \n\t */\n\t\n\t'use strict';\n\t\n\t// Trust the developer to only use ReactInstrumentation with a __DEV__ check\n\t\n\tvar debugTool = null;\n\t\n\tif (false) {\n\t  var ReactDebugTool = require('./ReactDebugTool');\n\t  debugTool = ReactDebugTool;\n\t}\n\t\n\tmodule.exports = { debugTool: debugTool };\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(2),\n\t    _assign = __webpack_require__(5);\n\t\n\tvar CallbackQueue = __webpack_require__(53);\n\tvar PooledClass = __webpack_require__(13);\n\tvar ReactFeatureFlags = __webpack_require__(58);\n\tvar ReactReconciler = __webpack_require__(17);\n\tvar Transaction = __webpack_require__(27);\n\t\n\tvar invariant = __webpack_require__(1);\n\t\n\tvar dirtyComponents = [];\n\tvar updateBatchNumber = 0;\n\tvar asapCallbackQueue = CallbackQueue.getPooled();\n\tvar asapEnqueued = false;\n\t\n\tvar batchingStrategy = null;\n\t\n\tfunction ensureInjected() {\n\t  !(ReactUpdates.ReactReconcileTransaction && batchingStrategy) ?  false ? invariant(false, 'ReactUpdates: must inject a reconcile transaction class and batching strategy') : _prodInvariant('123') : void 0;\n\t}\n\t\n\tvar NESTED_UPDATES = {\n\t  initialize: function () {\n\t    this.dirtyComponentsLength = dirtyComponents.length;\n\t  },\n\t  close: function () {\n\t    if (this.dirtyComponentsLength !== dirtyComponents.length) {\n\t      // Additional updates were enqueued by componentDidUpdate handlers or\n\t      // similar; before our own UPDATE_QUEUEING wrapper closes, we want to run\n\t      // these new updates so that if A's componentDidUpdate calls setState on\n\t      // B, B will update before the callback A's updater provided when calling\n\t      // setState.\n\t      dirtyComponents.splice(0, this.dirtyComponentsLength);\n\t      flushBatchedUpdates();\n\t    } else {\n\t      dirtyComponents.length = 0;\n\t    }\n\t  }\n\t};\n\t\n\tvar UPDATE_QUEUEING = {\n\t  initialize: function () {\n\t    this.callbackQueue.reset();\n\t  },\n\t  close: function () {\n\t    this.callbackQueue.notifyAll();\n\t  }\n\t};\n\t\n\tvar TRANSACTION_WRAPPERS = [NESTED_UPDATES, UPDATE_QUEUEING];\n\t\n\tfunction ReactUpdatesFlushTransaction() {\n\t  this.reinitializeTransaction();\n\t  this.dirtyComponentsLength = null;\n\t  this.callbackQueue = CallbackQueue.getPooled();\n\t  this.reconcileTransaction = ReactUpdates.ReactReconcileTransaction.getPooled(\n\t  /* useCreateElement */true);\n\t}\n\t\n\t_assign(ReactUpdatesFlushTransaction.prototype, Transaction, {\n\t  getTransactionWrappers: function () {\n\t    return TRANSACTION_WRAPPERS;\n\t  },\n\t\n\t  destructor: function () {\n\t    this.dirtyComponentsLength = null;\n\t    CallbackQueue.release(this.callbackQueue);\n\t    this.callbackQueue = null;\n\t    ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction);\n\t    this.reconcileTransaction = null;\n\t  },\n\t\n\t  perform: function (method, scope, a) {\n\t    // Essentially calls `this.reconcileTransaction.perform(method, scope, a)`\n\t    // with this transaction's wrappers around it.\n\t    return Transaction.perform.call(this, this.reconcileTransaction.perform, this.reconcileTransaction, method, scope, a);\n\t  }\n\t});\n\t\n\tPooledClass.addPoolingTo(ReactUpdatesFlushTransaction);\n\t\n\tfunction batchedUpdates(callback, a, b, c, d, e) {\n\t  ensureInjected();\n\t  return batchingStrategy.batchedUpdates(callback, a, b, c, d, e);\n\t}\n\t\n\t/**\n\t * Array comparator for ReactComponents by mount ordering.\n\t *\n\t * @param {ReactComponent} c1 first component you're comparing\n\t * @param {ReactComponent} c2 second component you're comparing\n\t * @return {number} Return value usable by Array.prototype.sort().\n\t */\n\tfunction mountOrderComparator(c1, c2) {\n\t  return c1._mountOrder - c2._mountOrder;\n\t}\n\t\n\tfunction runBatchedUpdates(transaction) {\n\t  var len = transaction.dirtyComponentsLength;\n\t  !(len === dirtyComponents.length) ?  false ? invariant(false, 'Expected flush transaction\\'s stored dirty-components length (%s) to match dirty-components array length (%s).', len, dirtyComponents.length) : _prodInvariant('124', len, dirtyComponents.length) : void 0;\n\t\n\t  // Since reconciling a component higher in the owner hierarchy usually (not\n\t  // always -- see shouldComponentUpdate()) will reconcile children, reconcile\n\t  // them before their children by sorting the array.\n\t  dirtyComponents.sort(mountOrderComparator);\n\t\n\t  // Any updates enqueued while reconciling must be performed after this entire\n\t  // batch. Otherwise, if dirtyComponents is [A, B] where A has children B and\n\t  // C, B could update twice in a single batch if C's render enqueues an update\n\t  // to B (since B would have already updated, we should skip it, and the only\n\t  // way we can know to do so is by checking the batch counter).\n\t  updateBatchNumber++;\n\t\n\t  for (var i = 0; i < len; i++) {\n\t    // If a component is unmounted before pending changes apply, it will still\n\t    // be here, but we assume that it has cleared its _pendingCallbacks and\n\t    // that performUpdateIfNecessary is a noop.\n\t    var component = dirtyComponents[i];\n\t\n\t    // If performUpdateIfNecessary happens to enqueue any new updates, we\n\t    // shouldn't execute the callbacks until the next render happens, so\n\t    // stash the callbacks first\n\t    var callbacks = component._pendingCallbacks;\n\t    component._pendingCallbacks = null;\n\t\n\t    var markerName;\n\t    if (ReactFeatureFlags.logTopLevelRenders) {\n\t      var namedComponent = component;\n\t      // Duck type TopLevelWrapper. This is probably always true.\n\t      if (component._currentElement.type.isReactTopLevelWrapper) {\n\t        namedComponent = component._renderedComponent;\n\t      }\n\t      markerName = 'React update: ' + namedComponent.getName();\n\t      console.time(markerName);\n\t    }\n\t\n\t    ReactReconciler.performUpdateIfNecessary(component, transaction.reconcileTransaction, updateBatchNumber);\n\t\n\t    if (markerName) {\n\t      console.timeEnd(markerName);\n\t    }\n\t\n\t    if (callbacks) {\n\t      for (var j = 0; j < callbacks.length; j++) {\n\t        transaction.callbackQueue.enqueue(callbacks[j], component.getPublicInstance());\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\tvar flushBatchedUpdates = function () {\n\t  // ReactUpdatesFlushTransaction's wrappers will clear the dirtyComponents\n\t  // array and perform any updates enqueued by mount-ready handlers (i.e.,\n\t  // componentDidUpdate) but we need to check here too in order to catch\n\t  // updates enqueued by setState callbacks and asap calls.\n\t  while (dirtyComponents.length || asapEnqueued) {\n\t    if (dirtyComponents.length) {\n\t      var transaction = ReactUpdatesFlushTransaction.getPooled();\n\t      transaction.perform(runBatchedUpdates, null, transaction);\n\t      ReactUpdatesFlushTransaction.release(transaction);\n\t    }\n\t\n\t    if (asapEnqueued) {\n\t      asapEnqueued = false;\n\t      var queue = asapCallbackQueue;\n\t      asapCallbackQueue = CallbackQueue.getPooled();\n\t      queue.notifyAll();\n\t      CallbackQueue.release(queue);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Mark a component as needing a rerender, adding an optional callback to a\n\t * list of functions which will be executed once the rerender occurs.\n\t */\n\tfunction enqueueUpdate(component) {\n\t  ensureInjected();\n\t\n\t  // Various parts of our code (such as ReactCompositeComponent's\n\t  // _renderValidatedComponent) assume that calls to render aren't nested;\n\t  // verify that that's the case. (This is called by each top-level update\n\t  // function, like setState, forceUpdate, etc.; creation and\n\t  // destruction of top-level components is guarded in ReactMount.)\n\t\n\t  if (!batchingStrategy.isBatchingUpdates) {\n\t    batchingStrategy.batchedUpdates(enqueueUpdate, component);\n\t    return;\n\t  }\n\t\n\t  dirtyComponents.push(component);\n\t  if (component._updateBatchNumber == null) {\n\t    component._updateBatchNumber = updateBatchNumber + 1;\n\t  }\n\t}\n\t\n\t/**\n\t * Enqueue a callback to be run at the end of the current batching cycle. Throws\n\t * if no updates are currently being performed.\n\t */\n\tfunction asap(callback, context) {\n\t  !batchingStrategy.isBatchingUpdates ?  false ? invariant(false, 'ReactUpdates.asap: Can\\'t enqueue an asap callback in a context whereupdates are not being batched.') : _prodInvariant('125') : void 0;\n\t  asapCallbackQueue.enqueue(callback, context);\n\t  asapEnqueued = true;\n\t}\n\t\n\tvar ReactUpdatesInjection = {\n\t  injectReconcileTransaction: function (ReconcileTransaction) {\n\t    !ReconcileTransaction ?  false ? invariant(false, 'ReactUpdates: must provide a reconcile transaction class') : _prodInvariant('126') : void 0;\n\t    ReactUpdates.ReactReconcileTransaction = ReconcileTransaction;\n\t  },\n\t\n\t  injectBatchingStrategy: function (_batchingStrategy) {\n\t    !_batchingStrategy ?  false ? invariant(false, 'ReactUpdates: must provide a batching strategy') : _prodInvariant('127') : void 0;\n\t    !(typeof _batchingStrategy.batchedUpdates === 'function') ?  false ? invariant(false, 'ReactUpdates: must provide a batchedUpdates() function') : _prodInvariant('128') : void 0;\n\t    !(typeof _batchingStrategy.isBatchingUpdates === 'boolean') ?  false ? invariant(false, 'ReactUpdates: must provide an isBatchingUpdates boolean attribute') : _prodInvariant('129') : void 0;\n\t    batchingStrategy = _batchingStrategy;\n\t  }\n\t};\n\t\n\tvar ReactUpdates = {\n\t  /**\n\t   * React references `ReactReconcileTransaction` using this property in order\n\t   * to allow dependency injection.\n\t   *\n\t   * @internal\n\t   */\n\t  ReactReconcileTransaction: null,\n\t\n\t  batchedUpdates: batchedUpdates,\n\t  enqueueUpdate: enqueueUpdate,\n\t  flushBatchedUpdates: flushBatchedUpdates,\n\t  injection: ReactUpdatesInjection,\n\t  asap: asap\n\t};\n\t\n\tmodule.exports = ReactUpdates;\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * \n\t */\n\t\n\tfunction makeEmptyFunction(arg) {\n\t  return function () {\n\t    return arg;\n\t  };\n\t}\n\t\n\t/**\n\t * This function accepts and discards inputs; it has no side effects. This is\n\t * primarily useful idiomatically for overridable function endpoints which\n\t * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n\t */\n\tvar emptyFunction = function emptyFunction() {};\n\t\n\temptyFunction.thatReturns = makeEmptyFunction;\n\temptyFunction.thatReturnsFalse = makeEmptyFunction(false);\n\temptyFunction.thatReturnsTrue = makeEmptyFunction(true);\n\temptyFunction.thatReturnsNull = makeEmptyFunction(null);\n\temptyFunction.thatReturnsThis = function () {\n\t  return this;\n\t};\n\temptyFunction.thatReturnsArgument = function (arg) {\n\t  return arg;\n\t};\n\t\n\tmodule.exports = emptyFunction;\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar _assign = __webpack_require__(5);\n\t\n\tvar PooledClass = __webpack_require__(13);\n\t\n\tvar emptyFunction = __webpack_require__(9);\n\tvar warning = __webpack_require__(3);\n\t\n\tvar didWarnForAddedNewProperty = false;\n\tvar isProxySupported = typeof Proxy === 'function';\n\t\n\tvar shouldBeReleasedProperties = ['dispatchConfig', '_targetInst', 'nativeEvent', 'isDefaultPrevented', 'isPropagationStopped', '_dispatchListeners', '_dispatchInstances'];\n\t\n\t/**\n\t * @interface Event\n\t * @see http://www.w3.org/TR/DOM-Level-3-Events/\n\t */\n\tvar EventInterface = {\n\t  type: null,\n\t  target: null,\n\t  // currentTarget is set when dispatching; no use in copying it here\n\t  currentTarget: emptyFunction.thatReturnsNull,\n\t  eventPhase: null,\n\t  bubbles: null,\n\t  cancelable: null,\n\t  timeStamp: function (event) {\n\t    return event.timeStamp || Date.now();\n\t  },\n\t  defaultPrevented: null,\n\t  isTrusted: null\n\t};\n\t\n\t/**\n\t * Synthetic events are dispatched by event plugins, typically in response to a\n\t * top-level event delegation handler.\n\t *\n\t * These systems should generally use pooling to reduce the frequency of garbage\n\t * collection. The system should check `isPersistent` to determine whether the\n\t * event should be released into the pool after being dispatched. Users that\n\t * need a persisted event should invoke `persist`.\n\t *\n\t * Synthetic events (and subclasses) implement the DOM Level 3 Events API by\n\t * normalizing browser quirks. Subclasses do not necessarily have to implement a\n\t * DOM interface; custom application-specific events can also subclass this.\n\t *\n\t * @param {object} dispatchConfig Configuration used to dispatch this event.\n\t * @param {*} targetInst Marker identifying the event target.\n\t * @param {object} nativeEvent Native browser event.\n\t * @param {DOMEventTarget} nativeEventTarget Target node.\n\t */\n\tfunction SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {\n\t  if (false) {\n\t    // these have a getter/setter for warnings\n\t    delete this.nativeEvent;\n\t    delete this.preventDefault;\n\t    delete this.stopPropagation;\n\t  }\n\t\n\t  this.dispatchConfig = dispatchConfig;\n\t  this._targetInst = targetInst;\n\t  this.nativeEvent = nativeEvent;\n\t\n\t  var Interface = this.constructor.Interface;\n\t  for (var propName in Interface) {\n\t    if (!Interface.hasOwnProperty(propName)) {\n\t      continue;\n\t    }\n\t    if (false) {\n\t      delete this[propName]; // this has a getter/setter for warnings\n\t    }\n\t    var normalize = Interface[propName];\n\t    if (normalize) {\n\t      this[propName] = normalize(nativeEvent);\n\t    } else {\n\t      if (propName === 'target') {\n\t        this.target = nativeEventTarget;\n\t      } else {\n\t        this[propName] = nativeEvent[propName];\n\t      }\n\t    }\n\t  }\n\t\n\t  var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;\n\t  if (defaultPrevented) {\n\t    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;\n\t  } else {\n\t    this.isDefaultPrevented = emptyFunction.thatReturnsFalse;\n\t  }\n\t  this.isPropagationStopped = emptyFunction.thatReturnsFalse;\n\t  return this;\n\t}\n\t\n\t_assign(SyntheticEvent.prototype, {\n\t\n\t  preventDefault: function () {\n\t    this.defaultPrevented = true;\n\t    var event = this.nativeEvent;\n\t    if (!event) {\n\t      return;\n\t    }\n\t\n\t    if (event.preventDefault) {\n\t      event.preventDefault();\n\t    } else if (typeof event.returnValue !== 'unknown') {\n\t      // eslint-disable-line valid-typeof\n\t      event.returnValue = false;\n\t    }\n\t    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;\n\t  },\n\t\n\t  stopPropagation: function () {\n\t    var event = this.nativeEvent;\n\t    if (!event) {\n\t      return;\n\t    }\n\t\n\t    if (event.stopPropagation) {\n\t      event.stopPropagation();\n\t    } else if (typeof event.cancelBubble !== 'unknown') {\n\t      // eslint-disable-line valid-typeof\n\t      // The ChangeEventPlugin registers a \"propertychange\" event for\n\t      // IE. This event does not support bubbling or cancelling, and\n\t      // any references to cancelBubble throw \"Member not found\".  A\n\t      // typeof check of \"unknown\" circumvents this issue (and is also\n\t      // IE specific).\n\t      event.cancelBubble = true;\n\t    }\n\t\n\t    this.isPropagationStopped = emptyFunction.thatReturnsTrue;\n\t  },\n\t\n\t  /**\n\t   * We release all dispatched `SyntheticEvent`s after each event loop, adding\n\t   * them back into the pool. This allows a way to hold onto a reference that\n\t   * won't be added back into the pool.\n\t   */\n\t  persist: function () {\n\t    this.isPersistent = emptyFunction.thatReturnsTrue;\n\t  },\n\t\n\t  /**\n\t   * Checks if this event should be released back into the pool.\n\t   *\n\t   * @return {boolean} True if this should not be released, false otherwise.\n\t   */\n\t  isPersistent: emptyFunction.thatReturnsFalse,\n\t\n\t  /**\n\t   * `PooledClass` looks for `destructor` on each instance it releases.\n\t   */\n\t  destructor: function () {\n\t    var Interface = this.constructor.Interface;\n\t    for (var propName in Interface) {\n\t      if (false) {\n\t        Object.defineProperty(this, propName, getPooledWarningPropertyDefinition(propName, Interface[propName]));\n\t      } else {\n\t        this[propName] = null;\n\t      }\n\t    }\n\t    for (var i = 0; i < shouldBeReleasedProperties.length; i++) {\n\t      this[shouldBeReleasedProperties[i]] = null;\n\t    }\n\t    if (false) {\n\t      Object.defineProperty(this, 'nativeEvent', getPooledWarningPropertyDefinition('nativeEvent', null));\n\t      Object.defineProperty(this, 'preventDefault', getPooledWarningPropertyDefinition('preventDefault', emptyFunction));\n\t      Object.defineProperty(this, 'stopPropagation', getPooledWarningPropertyDefinition('stopPropagation', emptyFunction));\n\t    }\n\t  }\n\t\n\t});\n\t\n\tSyntheticEvent.Interface = EventInterface;\n\t\n\tif (false) {\n\t  if (isProxySupported) {\n\t    /*eslint-disable no-func-assign */\n\t    SyntheticEvent = new Proxy(SyntheticEvent, {\n\t      construct: function (target, args) {\n\t        return this.apply(target, Object.create(target.prototype), args);\n\t      },\n\t      apply: function (constructor, that, args) {\n\t        return new Proxy(constructor.apply(that, args), {\n\t          set: function (target, prop, value) {\n\t            if (prop !== 'isPersistent' && !target.constructor.Interface.hasOwnProperty(prop) && shouldBeReleasedProperties.indexOf(prop) === -1) {\n\t              process.env.NODE_ENV !== 'production' ? warning(didWarnForAddedNewProperty || target.isPersistent(), 'This synthetic event is reused for performance reasons. If you\\'re ' + 'seeing this, you\\'re adding a new property in the synthetic event object. ' + 'The property is never released. See ' + 'https://fb.me/react-event-pooling for more information.') : void 0;\n\t              didWarnForAddedNewProperty = true;\n\t            }\n\t            target[prop] = value;\n\t            return true;\n\t          }\n\t        });\n\t      }\n\t    });\n\t    /*eslint-enable no-func-assign */\n\t  }\n\t}\n\t/**\n\t * Helper to reduce boilerplate when creating subclasses.\n\t *\n\t * @param {function} Class\n\t * @param {?object} Interface\n\t */\n\tSyntheticEvent.augmentClass = function (Class, Interface) {\n\t  var Super = this;\n\t\n\t  var E = function () {};\n\t  E.prototype = Super.prototype;\n\t  var prototype = new E();\n\t\n\t  _assign(prototype, Class.prototype);\n\t  Class.prototype = prototype;\n\t  Class.prototype.constructor = Class;\n\t\n\t  Class.Interface = _assign({}, Super.Interface, Interface);\n\t  Class.augmentClass = Super.augmentClass;\n\t\n\t  PooledClass.addPoolingTo(Class, PooledClass.fourArgumentPooler);\n\t};\n\t\n\tPooledClass.addPoolingTo(SyntheticEvent, PooledClass.fourArgumentPooler);\n\t\n\tmodule.exports = SyntheticEvent;\n\t\n\t/**\n\t  * Helper to nullify syntheticEvent instance properties when destructing\n\t  *\n\t  * @param {object} SyntheticEvent\n\t  * @param {String} propName\n\t  * @return {object} defineProperty object\n\t  */\n\tfunction getPooledWarningPropertyDefinition(propName, getVal) {\n\t  var isFunction = typeof getVal === 'function';\n\t  return {\n\t    configurable: true,\n\t    set: set,\n\t    get: get\n\t  };\n\t\n\t  function set(val) {\n\t    var action = isFunction ? 'setting the method' : 'setting the property';\n\t    warn(action, 'This is effectively a no-op');\n\t    return val;\n\t  }\n\t\n\t  function get() {\n\t    var action = isFunction ? 'accessing the method' : 'accessing the property';\n\t    var result = isFunction ? 'This is a no-op function' : 'This is set to null';\n\t    warn(action, result);\n\t    return getVal;\n\t  }\n\t\n\t  function warn(action, result) {\n\t    var warningCondition = false;\n\t     false ? warning(warningCondition, 'This synthetic event is reused for performance reasons. If you\\'re seeing this, ' + 'you\\'re %s `%s` on a released/nullified synthetic event. %s. ' + 'If you must keep the original synthetic event around, use event.persist(). ' + 'See https://fb.me/react-event-pooling for more information.', action, propName, result) : void 0;\n\t  }\n\t}\n\n/***/ },\n/* 11 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * \n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * Keeps track of the current owner.\n\t *\n\t * The current owner is the component who should own any components that are\n\t * currently being constructed.\n\t */\n\tvar ReactCurrentOwner = {\n\t\n\t  /**\n\t   * @internal\n\t   * @type {ReactComponent}\n\t   */\n\t  current: null\n\t\n\t};\n\t\n\tmodule.exports = ReactCurrentOwner;\n\n/***/ },\n/* 12 */\n[189, 50],\n/* 13 */\n[188, 2, 1],\n/* 14 */\n1,\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2015-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar DOMNamespaces = __webpack_require__(32);\n\tvar setInnerHTML = __webpack_require__(29);\n\t\n\tvar createMicrosoftUnsafeLocalFunction = __webpack_require__(40);\n\tvar setTextContent = __webpack_require__(70);\n\t\n\tvar ELEMENT_NODE_TYPE = 1;\n\tvar DOCUMENT_FRAGMENT_NODE_TYPE = 11;\n\t\n\t/**\n\t * In IE (8-11) and Edge, appending nodes with no children is dramatically\n\t * faster than appending a full subtree, so we essentially queue up the\n\t * .appendChild calls here and apply them so each node is added to its parent\n\t * before any children are added.\n\t *\n\t * In other browsers, doing so is slower or neutral compared to the other order\n\t * (in Firefox, twice as slow) so we only do this inversion in IE.\n\t *\n\t * See https://github.com/spicyj/innerhtml-vs-createelement-vs-clonenode.\n\t */\n\tvar enableLazy = typeof document !== 'undefined' && typeof document.documentMode === 'number' || typeof navigator !== 'undefined' && typeof navigator.userAgent === 'string' && /\\bEdge\\/\\d/.test(navigator.userAgent);\n\t\n\tfunction insertTreeChildren(tree) {\n\t  if (!enableLazy) {\n\t    return;\n\t  }\n\t  var node = tree.node;\n\t  var children = tree.children;\n\t  if (children.length) {\n\t    for (var i = 0; i < children.length; i++) {\n\t      insertTreeBefore(node, children[i], null);\n\t    }\n\t  } else if (tree.html != null) {\n\t    setInnerHTML(node, tree.html);\n\t  } else if (tree.text != null) {\n\t    setTextContent(node, tree.text);\n\t  }\n\t}\n\t\n\tvar insertTreeBefore = createMicrosoftUnsafeLocalFunction(function (parentNode, tree, referenceNode) {\n\t  // DocumentFragments aren't actually part of the DOM after insertion so\n\t  // appending children won't update the DOM. We need to ensure the fragment\n\t  // is properly populated first, breaking out of our lazy approach for just\n\t  // this level. Also, some <object> plugins (like Flash Player) will read\n\t  // <param> nodes immediately upon insertion into the DOM, so <object>\n\t  // must also be populated prior to insertion into the DOM.\n\t  if (tree.node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE || tree.node.nodeType === ELEMENT_NODE_TYPE && tree.node.nodeName.toLowerCase() === 'object' && (tree.node.namespaceURI == null || tree.node.namespaceURI === DOMNamespaces.html)) {\n\t    insertTreeChildren(tree);\n\t    parentNode.insertBefore(tree.node, referenceNode);\n\t  } else {\n\t    parentNode.insertBefore(tree.node, referenceNode);\n\t    insertTreeChildren(tree);\n\t  }\n\t});\n\t\n\tfunction replaceChildWithTree(oldNode, newTree) {\n\t  oldNode.parentNode.replaceChild(newTree.node, oldNode);\n\t  insertTreeChildren(newTree);\n\t}\n\t\n\tfunction queueChild(parentTree, childTree) {\n\t  if (enableLazy) {\n\t    parentTree.children.push(childTree);\n\t  } else {\n\t    parentTree.node.appendChild(childTree.node);\n\t  }\n\t}\n\t\n\tfunction queueHTML(tree, html) {\n\t  if (enableLazy) {\n\t    tree.html = html;\n\t  } else {\n\t    setInnerHTML(tree.node, html);\n\t  }\n\t}\n\t\n\tfunction queueText(tree, text) {\n\t  if (enableLazy) {\n\t    tree.text = text;\n\t  } else {\n\t    setTextContent(tree.node, text);\n\t  }\n\t}\n\t\n\tfunction toString() {\n\t  return this.node.nodeName;\n\t}\n\t\n\tfunction DOMLazyTree(node) {\n\t  return {\n\t    node: node,\n\t    children: [],\n\t    html: null,\n\t    text: null,\n\t    toString: toString\n\t  };\n\t}\n\t\n\tDOMLazyTree.insertTreeBefore = insertTreeBefore;\n\tDOMLazyTree.replaceChildWithTree = replaceChildWithTree;\n\tDOMLazyTree.queueChild = queueChild;\n\tDOMLazyTree.queueHTML = queueHTML;\n\tDOMLazyTree.queueText = queueText;\n\t\n\tmodule.exports = DOMLazyTree;\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(2);\n\t\n\tvar invariant = __webpack_require__(1);\n\t\n\tfunction checkMask(value, bitmask) {\n\t  return (value & bitmask) === bitmask;\n\t}\n\t\n\tvar DOMPropertyInjection = {\n\t  /**\n\t   * Mapping from normalized, camelcased property names to a configuration that\n\t   * specifies how the associated DOM property should be accessed or rendered.\n\t   */\n\t  MUST_USE_PROPERTY: 0x1,\n\t  HAS_BOOLEAN_VALUE: 0x4,\n\t  HAS_NUMERIC_VALUE: 0x8,\n\t  HAS_POSITIVE_NUMERIC_VALUE: 0x10 | 0x8,\n\t  HAS_OVERLOADED_BOOLEAN_VALUE: 0x20,\n\t\n\t  /**\n\t   * Inject some specialized knowledge about the DOM. This takes a config object\n\t   * with the following properties:\n\t   *\n\t   * isCustomAttribute: function that given an attribute name will return true\n\t   * if it can be inserted into the DOM verbatim. Useful for data-* or aria-*\n\t   * attributes where it's impossible to enumerate all of the possible\n\t   * attribute names,\n\t   *\n\t   * Properties: object mapping DOM property name to one of the\n\t   * DOMPropertyInjection constants or null. If your attribute isn't in here,\n\t   * it won't get written to the DOM.\n\t   *\n\t   * DOMAttributeNames: object mapping React attribute name to the DOM\n\t   * attribute name. Attribute names not specified use the **lowercase**\n\t   * normalized name.\n\t   *\n\t   * DOMAttributeNamespaces: object mapping React attribute name to the DOM\n\t   * attribute namespace URL. (Attribute names not specified use no namespace.)\n\t   *\n\t   * DOMPropertyNames: similar to DOMAttributeNames but for DOM properties.\n\t   * Property names not specified use the normalized name.\n\t   *\n\t   * DOMMutationMethods: Properties that require special mutation methods. If\n\t   * `value` is undefined, the mutation method should unset the property.\n\t   *\n\t   * @param {object} domPropertyConfig the config as described above.\n\t   */\n\t  injectDOMPropertyConfig: function (domPropertyConfig) {\n\t    var Injection = DOMPropertyInjection;\n\t    var Properties = domPropertyConfig.Properties || {};\n\t    var DOMAttributeNamespaces = domPropertyConfig.DOMAttributeNamespaces || {};\n\t    var DOMAttributeNames = domPropertyConfig.DOMAttributeNames || {};\n\t    var DOMPropertyNames = domPropertyConfig.DOMPropertyNames || {};\n\t    var DOMMutationMethods = domPropertyConfig.DOMMutationMethods || {};\n\t\n\t    if (domPropertyConfig.isCustomAttribute) {\n\t      DOMProperty._isCustomAttributeFunctions.push(domPropertyConfig.isCustomAttribute);\n\t    }\n\t\n\t    for (var propName in Properties) {\n\t      !!DOMProperty.properties.hasOwnProperty(propName) ?  false ? invariant(false, 'injectDOMPropertyConfig(...): You\\'re trying to inject DOM property \\'%s\\' which has already been injected. You may be accidentally injecting the same DOM property config twice, or you may be injecting two configs that have conflicting property names.', propName) : _prodInvariant('48', propName) : void 0;\n\t\n\t      var lowerCased = propName.toLowerCase();\n\t      var propConfig = Properties[propName];\n\t\n\t      var propertyInfo = {\n\t        attributeName: lowerCased,\n\t        attributeNamespace: null,\n\t        propertyName: propName,\n\t        mutationMethod: null,\n\t\n\t        mustUseProperty: checkMask(propConfig, Injection.MUST_USE_PROPERTY),\n\t        hasBooleanValue: checkMask(propConfig, Injection.HAS_BOOLEAN_VALUE),\n\t        hasNumericValue: checkMask(propConfig, Injection.HAS_NUMERIC_VALUE),\n\t        hasPositiveNumericValue: checkMask(propConfig, Injection.HAS_POSITIVE_NUMERIC_VALUE),\n\t        hasOverloadedBooleanValue: checkMask(propConfig, Injection.HAS_OVERLOADED_BOOLEAN_VALUE)\n\t      };\n\t      !(propertyInfo.hasBooleanValue + propertyInfo.hasNumericValue + propertyInfo.hasOverloadedBooleanValue <= 1) ?  false ? invariant(false, 'DOMProperty: Value can be one of boolean, overloaded boolean, or numeric value, but not a combination: %s', propName) : _prodInvariant('50', propName) : void 0;\n\t\n\t      if (false) {\n\t        DOMProperty.getPossibleStandardName[lowerCased] = propName;\n\t      }\n\t\n\t      if (DOMAttributeNames.hasOwnProperty(propName)) {\n\t        var attributeName = DOMAttributeNames[propName];\n\t        propertyInfo.attributeName = attributeName;\n\t        if (false) {\n\t          DOMProperty.getPossibleStandardName[attributeName] = propName;\n\t        }\n\t      }\n\t\n\t      if (DOMAttributeNamespaces.hasOwnProperty(propName)) {\n\t        propertyInfo.attributeNamespace = DOMAttributeNamespaces[propName];\n\t      }\n\t\n\t      if (DOMPropertyNames.hasOwnProperty(propName)) {\n\t        propertyInfo.propertyName = DOMPropertyNames[propName];\n\t      }\n\t\n\t      if (DOMMutationMethods.hasOwnProperty(propName)) {\n\t        propertyInfo.mutationMethod = DOMMutationMethods[propName];\n\t      }\n\t\n\t      DOMProperty.properties[propName] = propertyInfo;\n\t    }\n\t  }\n\t};\n\t\n\t/* eslint-disable max-len */\n\tvar ATTRIBUTE_NAME_START_CHAR = ':A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD';\n\t/* eslint-enable max-len */\n\t\n\t/**\n\t * DOMProperty exports lookup objects that can be used like functions:\n\t *\n\t *   > DOMProperty.isValid['id']\n\t *   true\n\t *   > DOMProperty.isValid['foobar']\n\t *   undefined\n\t *\n\t * Although this may be confusing, it performs better in general.\n\t *\n\t * @see http://jsperf.com/key-exists\n\t * @see http://jsperf.com/key-missing\n\t */\n\tvar DOMProperty = {\n\t\n\t  ID_ATTRIBUTE_NAME: 'data-reactid',\n\t  ROOT_ATTRIBUTE_NAME: 'data-reactroot',\n\t\n\t  ATTRIBUTE_NAME_START_CHAR: ATTRIBUTE_NAME_START_CHAR,\n\t  ATTRIBUTE_NAME_CHAR: ATTRIBUTE_NAME_START_CHAR + '\\\\-.0-9\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040',\n\t\n\t  /**\n\t   * Map from property \"standard name\" to an object with info about how to set\n\t   * the property in the DOM. Each object contains:\n\t   *\n\t   * attributeName:\n\t   *   Used when rendering markup or with `*Attribute()`.\n\t   * attributeNamespace\n\t   * propertyName:\n\t   *   Used on DOM node instances. (This includes properties that mutate due to\n\t   *   external factors.)\n\t   * mutationMethod:\n\t   *   If non-null, used instead of the property or `setAttribute()` after\n\t   *   initial render.\n\t   * mustUseProperty:\n\t   *   Whether the property must be accessed and mutated as an object property.\n\t   * hasBooleanValue:\n\t   *   Whether the property should be removed when set to a falsey value.\n\t   * hasNumericValue:\n\t   *   Whether the property must be numeric or parse as a numeric and should be\n\t   *   removed when set to a falsey value.\n\t   * hasPositiveNumericValue:\n\t   *   Whether the property must be positive numeric or parse as a positive\n\t   *   numeric and should be removed when set to a falsey value.\n\t   * hasOverloadedBooleanValue:\n\t   *   Whether the property can be used as a flag as well as with a value.\n\t   *   Removed when strictly equal to false; present without a value when\n\t   *   strictly equal to true; present with a value otherwise.\n\t   */\n\t  properties: {},\n\t\n\t  /**\n\t   * Mapping from lowercase property names to the properly cased version, used\n\t   * to warn in the case of missing properties. Available only in __DEV__.\n\t   *\n\t   * autofocus is predefined, because adding it to the property whitelist\n\t   * causes unintended side effects.\n\t   *\n\t   * @type {Object}\n\t   */\n\t  getPossibleStandardName:  false ? { autofocus: 'autoFocus' } : null,\n\t\n\t  /**\n\t   * All of the isCustomAttribute() functions that have been injected.\n\t   */\n\t  _isCustomAttributeFunctions: [],\n\t\n\t  /**\n\t   * Checks whether a property name is a custom attribute.\n\t   * @method\n\t   */\n\t  isCustomAttribute: function (attributeName) {\n\t    for (var i = 0; i < DOMProperty._isCustomAttributeFunctions.length; i++) {\n\t      var isCustomAttributeFn = DOMProperty._isCustomAttributeFunctions[i];\n\t      if (isCustomAttributeFn(attributeName)) {\n\t        return true;\n\t      }\n\t    }\n\t    return false;\n\t  },\n\t\n\t  injection: DOMPropertyInjection\n\t};\n\t\n\tmodule.exports = DOMProperty;\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactRef = __webpack_require__(118);\n\tvar ReactInstrumentation = __webpack_require__(7);\n\t\n\tvar warning = __webpack_require__(3);\n\t\n\t/**\n\t * Helper to call ReactRef.attachRefs with this composite component, split out\n\t * to avoid allocations in the transaction mount-ready queue.\n\t */\n\tfunction attachRefs() {\n\t  ReactRef.attachRefs(this, this._currentElement);\n\t}\n\t\n\tvar ReactReconciler = {\n\t\n\t  /**\n\t   * Initializes the component, renders markup, and registers event listeners.\n\t   *\n\t   * @param {ReactComponent} internalInstance\n\t   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n\t   * @param {?object} the containing host component instance\n\t   * @param {?object} info about the host container\n\t   * @return {?string} Rendered markup to be inserted into the DOM.\n\t   * @final\n\t   * @internal\n\t   */\n\t  mountComponent: function (internalInstance, transaction, hostParent, hostContainerInfo, context, parentDebugID // 0 in production and for roots\n\t  ) {\n\t    if (false) {\n\t      if (internalInstance._debugID !== 0) {\n\t        ReactInstrumentation.debugTool.onBeforeMountComponent(internalInstance._debugID, internalInstance._currentElement, parentDebugID);\n\t      }\n\t    }\n\t    var markup = internalInstance.mountComponent(transaction, hostParent, hostContainerInfo, context, parentDebugID);\n\t    if (internalInstance._currentElement && internalInstance._currentElement.ref != null) {\n\t      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);\n\t    }\n\t    if (false) {\n\t      if (internalInstance._debugID !== 0) {\n\t        ReactInstrumentation.debugTool.onMountComponent(internalInstance._debugID);\n\t      }\n\t    }\n\t    return markup;\n\t  },\n\t\n\t  /**\n\t   * Returns a value that can be passed to\n\t   * ReactComponentEnvironment.replaceNodeWithMarkup.\n\t   */\n\t  getHostNode: function (internalInstance) {\n\t    return internalInstance.getHostNode();\n\t  },\n\t\n\t  /**\n\t   * Releases any resources allocated by `mountComponent`.\n\t   *\n\t   * @final\n\t   * @internal\n\t   */\n\t  unmountComponent: function (internalInstance, safely) {\n\t    if (false) {\n\t      if (internalInstance._debugID !== 0) {\n\t        ReactInstrumentation.debugTool.onBeforeUnmountComponent(internalInstance._debugID);\n\t      }\n\t    }\n\t    ReactRef.detachRefs(internalInstance, internalInstance._currentElement);\n\t    internalInstance.unmountComponent(safely);\n\t    if (false) {\n\t      if (internalInstance._debugID !== 0) {\n\t        ReactInstrumentation.debugTool.onUnmountComponent(internalInstance._debugID);\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Update a component using a new element.\n\t   *\n\t   * @param {ReactComponent} internalInstance\n\t   * @param {ReactElement} nextElement\n\t   * @param {ReactReconcileTransaction} transaction\n\t   * @param {object} context\n\t   * @internal\n\t   */\n\t  receiveComponent: function (internalInstance, nextElement, transaction, context) {\n\t    var prevElement = internalInstance._currentElement;\n\t\n\t    if (nextElement === prevElement && context === internalInstance._context) {\n\t      // Since elements are immutable after the owner is rendered,\n\t      // we can do a cheap identity compare here to determine if this is a\n\t      // superfluous reconcile. It's possible for state to be mutable but such\n\t      // change should trigger an update of the owner which would recreate\n\t      // the element. We explicitly check for the existence of an owner since\n\t      // it's possible for an element created outside a composite to be\n\t      // deeply mutated and reused.\n\t\n\t      // TODO: Bailing out early is just a perf optimization right?\n\t      // TODO: Removing the return statement should affect correctness?\n\t      return;\n\t    }\n\t\n\t    if (false) {\n\t      if (internalInstance._debugID !== 0) {\n\t        ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, nextElement);\n\t      }\n\t    }\n\t\n\t    var refsChanged = ReactRef.shouldUpdateRefs(prevElement, nextElement);\n\t\n\t    if (refsChanged) {\n\t      ReactRef.detachRefs(internalInstance, prevElement);\n\t    }\n\t\n\t    internalInstance.receiveComponent(nextElement, transaction, context);\n\t\n\t    if (refsChanged && internalInstance._currentElement && internalInstance._currentElement.ref != null) {\n\t      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);\n\t    }\n\t\n\t    if (false) {\n\t      if (internalInstance._debugID !== 0) {\n\t        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Flush any dirty changes in a component.\n\t   *\n\t   * @param {ReactComponent} internalInstance\n\t   * @param {ReactReconcileTransaction} transaction\n\t   * @internal\n\t   */\n\t  performUpdateIfNecessary: function (internalInstance, transaction, updateBatchNumber) {\n\t    if (internalInstance._updateBatchNumber !== updateBatchNumber) {\n\t      // The component's enqueued batch number should always be the current\n\t      // batch or the following one.\n\t       false ? warning(internalInstance._updateBatchNumber == null || internalInstance._updateBatchNumber === updateBatchNumber + 1, 'performUpdateIfNecessary: Unexpected batch number (current %s, ' + 'pending %s)', updateBatchNumber, internalInstance._updateBatchNumber) : void 0;\n\t      return;\n\t    }\n\t    if (false) {\n\t      if (internalInstance._debugID !== 0) {\n\t        ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, internalInstance._currentElement);\n\t      }\n\t    }\n\t    internalInstance.performUpdateIfNecessary(transaction);\n\t    if (false) {\n\t      if (internalInstance._debugID !== 0) {\n\t        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);\n\t      }\n\t    }\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = ReactReconciler;\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar _assign = __webpack_require__(30);\n\t\n\tvar ReactChildren = __webpack_require__(171);\n\tvar ReactComponent = __webpack_require__(48);\n\tvar ReactPureComponent = __webpack_require__(176);\n\tvar ReactClass = __webpack_require__(172);\n\tvar ReactDOMFactories = __webpack_require__(173);\n\tvar ReactElement = __webpack_require__(19);\n\tvar ReactPropTypes = __webpack_require__(175);\n\tvar ReactVersion = __webpack_require__(177);\n\t\n\tvar onlyChild = __webpack_require__(180);\n\tvar warning = __webpack_require__(12);\n\t\n\tvar createElement = ReactElement.createElement;\n\tvar createFactory = ReactElement.createFactory;\n\tvar cloneElement = ReactElement.cloneElement;\n\t\n\tif (false) {\n\t  var canDefineProperty = require('./canDefineProperty');\n\t  var ReactElementValidator = require('./ReactElementValidator');\n\t  var didWarnPropTypesDeprecated = false;\n\t  createElement = ReactElementValidator.createElement;\n\t  createFactory = ReactElementValidator.createFactory;\n\t  cloneElement = ReactElementValidator.cloneElement;\n\t}\n\t\n\tvar __spread = _assign;\n\t\n\tif (false) {\n\t  var warned = false;\n\t  __spread = function () {\n\t    process.env.NODE_ENV !== 'production' ? warning(warned, 'React.__spread is deprecated and should not be used. Use ' + 'Object.assign directly or another helper function with similar ' + 'semantics. You may be seeing this warning due to your compiler. ' + 'See https://fb.me/react-spread-deprecation for more details.') : void 0;\n\t    warned = true;\n\t    return _assign.apply(null, arguments);\n\t  };\n\t}\n\t\n\tvar React = {\n\t\n\t  // Modern\n\t\n\t  Children: {\n\t    map: ReactChildren.map,\n\t    forEach: ReactChildren.forEach,\n\t    count: ReactChildren.count,\n\t    toArray: ReactChildren.toArray,\n\t    only: onlyChild\n\t  },\n\t\n\t  Component: ReactComponent,\n\t  PureComponent: ReactPureComponent,\n\t\n\t  createElement: createElement,\n\t  cloneElement: cloneElement,\n\t  isValidElement: ReactElement.isValidElement,\n\t\n\t  // Classic\n\t\n\t  PropTypes: ReactPropTypes,\n\t  createClass: ReactClass.createClass,\n\t  createFactory: createFactory,\n\t  createMixin: function (mixin) {\n\t    // Currently a noop. Will be used to validate and trace mixins.\n\t    return mixin;\n\t  },\n\t\n\t  // This looks DOM specific but these are actually isomorphic helpers\n\t  // since they are just generating DOM strings.\n\t  DOM: ReactDOMFactories,\n\t\n\t  version: ReactVersion,\n\t\n\t  // Deprecated hook for JSX spread, don't use this for anything.\n\t  __spread: __spread\n\t};\n\t\n\t// TODO: Fix tests so that this deprecation warning doesn't cause failures.\n\tif (false) {\n\t  if (canDefineProperty) {\n\t    Object.defineProperty(React, 'PropTypes', {\n\t      get: function () {\n\t        process.env.NODE_ENV !== 'production' ? warning(didWarnPropTypesDeprecated, 'Accessing PropTypes via the main React package is deprecated. Use ' + 'the prop-types package from npm instead.') : void 0;\n\t        didWarnPropTypesDeprecated = true;\n\t        return ReactPropTypes;\n\t      }\n\t    });\n\t  }\n\t}\n\t\n\tmodule.exports = React;\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2014-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar _assign = __webpack_require__(30);\n\t\n\tvar ReactCurrentOwner = __webpack_require__(11);\n\t\n\tvar warning = __webpack_require__(12);\n\tvar canDefineProperty = __webpack_require__(80);\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\t\n\tvar REACT_ELEMENT_TYPE = __webpack_require__(79);\n\t\n\tvar RESERVED_PROPS = {\n\t  key: true,\n\t  ref: true,\n\t  __self: true,\n\t  __source: true\n\t};\n\t\n\tvar specialPropKeyWarningShown, specialPropRefWarningShown;\n\t\n\tfunction hasValidRef(config) {\n\t  if (false) {\n\t    if (hasOwnProperty.call(config, 'ref')) {\n\t      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\t      if (getter && getter.isReactWarning) {\n\t        return false;\n\t      }\n\t    }\n\t  }\n\t  return config.ref !== undefined;\n\t}\n\t\n\tfunction hasValidKey(config) {\n\t  if (false) {\n\t    if (hasOwnProperty.call(config, 'key')) {\n\t      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\t      if (getter && getter.isReactWarning) {\n\t        return false;\n\t      }\n\t    }\n\t  }\n\t  return config.key !== undefined;\n\t}\n\t\n\tfunction defineKeyPropWarningGetter(props, displayName) {\n\t  var warnAboutAccessingKey = function () {\n\t    if (!specialPropKeyWarningShown) {\n\t      specialPropKeyWarningShown = true;\n\t       false ? warning(false, '%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;\n\t    }\n\t  };\n\t  warnAboutAccessingKey.isReactWarning = true;\n\t  Object.defineProperty(props, 'key', {\n\t    get: warnAboutAccessingKey,\n\t    configurable: true\n\t  });\n\t}\n\t\n\tfunction defineRefPropWarningGetter(props, displayName) {\n\t  var warnAboutAccessingRef = function () {\n\t    if (!specialPropRefWarningShown) {\n\t      specialPropRefWarningShown = true;\n\t       false ? warning(false, '%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;\n\t    }\n\t  };\n\t  warnAboutAccessingRef.isReactWarning = true;\n\t  Object.defineProperty(props, 'ref', {\n\t    get: warnAboutAccessingRef,\n\t    configurable: true\n\t  });\n\t}\n\t\n\t/**\n\t * Factory method to create a new React element. This no longer adheres to\n\t * the class pattern, so do not use new to call it. Also, no instanceof check\n\t * will work. Instead test $$typeof field against Symbol.for('react.element') to check\n\t * if something is a React Element.\n\t *\n\t * @param {*} type\n\t * @param {*} key\n\t * @param {string|object} ref\n\t * @param {*} self A *temporary* helper to detect places where `this` is\n\t * different from the `owner` when React.createElement is called, so that we\n\t * can warn. We want to get rid of owner and replace string `ref`s with arrow\n\t * functions, and as long as `this` and owner are the same, there will be no\n\t * change in behavior.\n\t * @param {*} source An annotation object (added by a transpiler or otherwise)\n\t * indicating filename, line number, and/or other information.\n\t * @param {*} owner\n\t * @param {*} props\n\t * @internal\n\t */\n\tvar ReactElement = function (type, key, ref, self, source, owner, props) {\n\t  var element = {\n\t    // This tag allow us to uniquely identify this as a React Element\n\t    $$typeof: REACT_ELEMENT_TYPE,\n\t\n\t    // Built-in properties that belong on the element\n\t    type: type,\n\t    key: key,\n\t    ref: ref,\n\t    props: props,\n\t\n\t    // Record the component responsible for creating this element.\n\t    _owner: owner\n\t  };\n\t\n\t  if (false) {\n\t    // The validation flag is currently mutative. We put it on\n\t    // an external backing store so that we can freeze the whole object.\n\t    // This can be replaced with a WeakMap once they are implemented in\n\t    // commonly used development environments.\n\t    element._store = {};\n\t\n\t    // To make comparing ReactElements easier for testing purposes, we make\n\t    // the validation flag non-enumerable (where possible, which should\n\t    // include every environment we run tests in), so the test framework\n\t    // ignores it.\n\t    if (canDefineProperty) {\n\t      Object.defineProperty(element._store, 'validated', {\n\t        configurable: false,\n\t        enumerable: false,\n\t        writable: true,\n\t        value: false\n\t      });\n\t      // self and source are DEV only properties.\n\t      Object.defineProperty(element, '_self', {\n\t        configurable: false,\n\t        enumerable: false,\n\t        writable: false,\n\t        value: self\n\t      });\n\t      // Two elements created in two different places should be considered\n\t      // equal for testing purposes and therefore we hide it from enumeration.\n\t      Object.defineProperty(element, '_source', {\n\t        configurable: false,\n\t        enumerable: false,\n\t        writable: false,\n\t        value: source\n\t      });\n\t    } else {\n\t      element._store.validated = false;\n\t      element._self = self;\n\t      element._source = source;\n\t    }\n\t    if (Object.freeze) {\n\t      Object.freeze(element.props);\n\t      Object.freeze(element);\n\t    }\n\t  }\n\t\n\t  return element;\n\t};\n\t\n\t/**\n\t * Create and return a new ReactElement of the given type.\n\t * See https://facebook.github.io/react/docs/top-level-api.html#react.createelement\n\t */\n\tReactElement.createElement = function (type, config, children) {\n\t  var propName;\n\t\n\t  // Reserved names are extracted\n\t  var props = {};\n\t\n\t  var key = null;\n\t  var ref = null;\n\t  var self = null;\n\t  var source = null;\n\t\n\t  if (config != null) {\n\t    if (hasValidRef(config)) {\n\t      ref = config.ref;\n\t    }\n\t    if (hasValidKey(config)) {\n\t      key = '' + config.key;\n\t    }\n\t\n\t    self = config.__self === undefined ? null : config.__self;\n\t    source = config.__source === undefined ? null : config.__source;\n\t    // Remaining properties are added to a new props object\n\t    for (propName in config) {\n\t      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n\t        props[propName] = config[propName];\n\t      }\n\t    }\n\t  }\n\t\n\t  // Children can be more than one argument, and those are transferred onto\n\t  // the newly allocated props object.\n\t  var childrenLength = arguments.length - 2;\n\t  if (childrenLength === 1) {\n\t    props.children = children;\n\t  } else if (childrenLength > 1) {\n\t    var childArray = Array(childrenLength);\n\t    for (var i = 0; i < childrenLength; i++) {\n\t      childArray[i] = arguments[i + 2];\n\t    }\n\t    if (false) {\n\t      if (Object.freeze) {\n\t        Object.freeze(childArray);\n\t      }\n\t    }\n\t    props.children = childArray;\n\t  }\n\t\n\t  // Resolve default props\n\t  if (type && type.defaultProps) {\n\t    var defaultProps = type.defaultProps;\n\t    for (propName in defaultProps) {\n\t      if (props[propName] === undefined) {\n\t        props[propName] = defaultProps[propName];\n\t      }\n\t    }\n\t  }\n\t  if (false) {\n\t    if (key || ref) {\n\t      if (typeof props.$$typeof === 'undefined' || props.$$typeof !== REACT_ELEMENT_TYPE) {\n\t        var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\t        if (key) {\n\t          defineKeyPropWarningGetter(props, displayName);\n\t        }\n\t        if (ref) {\n\t          defineRefPropWarningGetter(props, displayName);\n\t        }\n\t      }\n\t    }\n\t  }\n\t  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n\t};\n\t\n\t/**\n\t * Return a function that produces ReactElements of a given type.\n\t * See https://facebook.github.io/react/docs/top-level-api.html#react.createfactory\n\t */\n\tReactElement.createFactory = function (type) {\n\t  var factory = ReactElement.createElement.bind(null, type);\n\t  // Expose the type on the factory and the prototype so that it can be\n\t  // easily accessed on elements. E.g. `<Foo />.type === Foo`.\n\t  // This should not be named `constructor` since this may not be the function\n\t  // that created the element, and it may not even be a constructor.\n\t  // Legacy hook TODO: Warn if this is accessed\n\t  factory.type = type;\n\t  return factory;\n\t};\n\t\n\tReactElement.cloneAndReplaceKey = function (oldElement, newKey) {\n\t  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);\n\t\n\t  return newElement;\n\t};\n\t\n\t/**\n\t * Clone and return a new ReactElement using element as the starting point.\n\t * See https://facebook.github.io/react/docs/top-level-api.html#react.cloneelement\n\t */\n\tReactElement.cloneElement = function (element, config, children) {\n\t  var propName;\n\t\n\t  // Original props are copied\n\t  var props = _assign({}, element.props);\n\t\n\t  // Reserved names are extracted\n\t  var key = element.key;\n\t  var ref = element.ref;\n\t  // Self is preserved since the owner is preserved.\n\t  var self = element._self;\n\t  // Source is preserved since cloneElement is unlikely to be targeted by a\n\t  // transpiler, and the original source is probably a better indicator of the\n\t  // true owner.\n\t  var source = element._source;\n\t\n\t  // Owner will be preserved, unless ref is overridden\n\t  var owner = element._owner;\n\t\n\t  if (config != null) {\n\t    if (hasValidRef(config)) {\n\t      // Silently steal the ref from the parent.\n\t      ref = config.ref;\n\t      owner = ReactCurrentOwner.current;\n\t    }\n\t    if (hasValidKey(config)) {\n\t      key = '' + config.key;\n\t    }\n\t\n\t    // Remaining properties override existing props\n\t    var defaultProps;\n\t    if (element.type && element.type.defaultProps) {\n\t      defaultProps = element.type.defaultProps;\n\t    }\n\t    for (propName in config) {\n\t      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n\t        if (config[propName] === undefined && defaultProps !== undefined) {\n\t          // Resolve default props\n\t          props[propName] = defaultProps[propName];\n\t        } else {\n\t          props[propName] = config[propName];\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  // Children can be more than one argument, and those are transferred onto\n\t  // the newly allocated props object.\n\t  var childrenLength = arguments.length - 2;\n\t  if (childrenLength === 1) {\n\t    props.children = children;\n\t  } else if (childrenLength > 1) {\n\t    var childArray = Array(childrenLength);\n\t    for (var i = 0; i < childrenLength; i++) {\n\t      childArray[i] = arguments[i + 2];\n\t    }\n\t    props.children = childArray;\n\t  }\n\t\n\t  return ReactElement(element.type, key, ref, self, source, owner, props);\n\t};\n\t\n\t/**\n\t * Verifies the object is a ReactElement.\n\t * See https://facebook.github.io/react/docs/top-level-api.html#react.isvalidelement\n\t * @param {?object} object\n\t * @return {boolean} True if `object` is a valid component.\n\t * @final\n\t */\n\tReactElement.isValidElement = function (object) {\n\t  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n\t};\n\t\n\tmodule.exports = ReactElement;\n\n/***/ },\n/* 20 */\n2,\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(2);\n\t\n\tvar EventPluginRegistry = __webpack_require__(33);\n\tvar EventPluginUtils = __webpack_require__(34);\n\tvar ReactErrorUtils = __webpack_require__(38);\n\t\n\tvar accumulateInto = __webpack_require__(64);\n\tvar forEachAccumulated = __webpack_require__(65);\n\tvar invariant = __webpack_require__(1);\n\t\n\t/**\n\t * Internal store for event listeners\n\t */\n\tvar listenerBank = {};\n\t\n\t/**\n\t * Internal queue of events that have accumulated their dispatches and are\n\t * waiting to have their dispatches executed.\n\t */\n\tvar eventQueue = null;\n\t\n\t/**\n\t * Dispatches an event and releases it back into the pool, unless persistent.\n\t *\n\t * @param {?object} event Synthetic event to be dispatched.\n\t * @param {boolean} simulated If the event is simulated (changes exn behavior)\n\t * @private\n\t */\n\tvar executeDispatchesAndRelease = function (event, simulated) {\n\t  if (event) {\n\t    EventPluginUtils.executeDispatchesInOrder(event, simulated);\n\t\n\t    if (!event.isPersistent()) {\n\t      event.constructor.release(event);\n\t    }\n\t  }\n\t};\n\tvar executeDispatchesAndReleaseSimulated = function (e) {\n\t  return executeDispatchesAndRelease(e, true);\n\t};\n\tvar executeDispatchesAndReleaseTopLevel = function (e) {\n\t  return executeDispatchesAndRelease(e, false);\n\t};\n\t\n\tvar getDictionaryKey = function (inst) {\n\t  // Prevents V8 performance issue:\n\t  // https://github.com/facebook/react/pull/7232\n\t  return '.' + inst._rootNodeID;\n\t};\n\t\n\tfunction isInteractive(tag) {\n\t  return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';\n\t}\n\t\n\tfunction shouldPreventMouseEvent(name, type, props) {\n\t  switch (name) {\n\t    case 'onClick':\n\t    case 'onClickCapture':\n\t    case 'onDoubleClick':\n\t    case 'onDoubleClickCapture':\n\t    case 'onMouseDown':\n\t    case 'onMouseDownCapture':\n\t    case 'onMouseMove':\n\t    case 'onMouseMoveCapture':\n\t    case 'onMouseUp':\n\t    case 'onMouseUpCapture':\n\t      return !!(props.disabled && isInteractive(type));\n\t    default:\n\t      return false;\n\t  }\n\t}\n\t\n\t/**\n\t * This is a unified interface for event plugins to be installed and configured.\n\t *\n\t * Event plugins can implement the following properties:\n\t *\n\t *   `extractEvents` {function(string, DOMEventTarget, string, object): *}\n\t *     Required. When a top-level event is fired, this method is expected to\n\t *     extract synthetic events that will in turn be queued and dispatched.\n\t *\n\t *   `eventTypes` {object}\n\t *     Optional, plugins that fire events must publish a mapping of registration\n\t *     names that are used to register listeners. Values of this mapping must\n\t *     be objects that contain `registrationName` or `phasedRegistrationNames`.\n\t *\n\t *   `executeDispatch` {function(object, function, string)}\n\t *     Optional, allows plugins to override how an event gets dispatched. By\n\t *     default, the listener is simply invoked.\n\t *\n\t * Each plugin that is injected into `EventsPluginHub` is immediately operable.\n\t *\n\t * @public\n\t */\n\tvar EventPluginHub = {\n\t\n\t  /**\n\t   * Methods for injecting dependencies.\n\t   */\n\t  injection: {\n\t\n\t    /**\n\t     * @param {array} InjectedEventPluginOrder\n\t     * @public\n\t     */\n\t    injectEventPluginOrder: EventPluginRegistry.injectEventPluginOrder,\n\t\n\t    /**\n\t     * @param {object} injectedNamesToPlugins Map from names to plugin modules.\n\t     */\n\t    injectEventPluginsByName: EventPluginRegistry.injectEventPluginsByName\n\t\n\t  },\n\t\n\t  /**\n\t   * Stores `listener` at `listenerBank[registrationName][key]`. Is idempotent.\n\t   *\n\t   * @param {object} inst The instance, which is the source of events.\n\t   * @param {string} registrationName Name of listener (e.g. `onClick`).\n\t   * @param {function} listener The callback to store.\n\t   */\n\t  putListener: function (inst, registrationName, listener) {\n\t    !(typeof listener === 'function') ?  false ? invariant(false, 'Expected %s listener to be a function, instead got type %s', registrationName, typeof listener) : _prodInvariant('94', registrationName, typeof listener) : void 0;\n\t\n\t    var key = getDictionaryKey(inst);\n\t    var bankForRegistrationName = listenerBank[registrationName] || (listenerBank[registrationName] = {});\n\t    bankForRegistrationName[key] = listener;\n\t\n\t    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];\n\t    if (PluginModule && PluginModule.didPutListener) {\n\t      PluginModule.didPutListener(inst, registrationName, listener);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * @param {object} inst The instance, which is the source of events.\n\t   * @param {string} registrationName Name of listener (e.g. `onClick`).\n\t   * @return {?function} The stored callback.\n\t   */\n\t  getListener: function (inst, registrationName) {\n\t    // TODO: shouldPreventMouseEvent is DOM-specific and definitely should not\n\t    // live here; needs to be moved to a better place soon\n\t    var bankForRegistrationName = listenerBank[registrationName];\n\t    if (shouldPreventMouseEvent(registrationName, inst._currentElement.type, inst._currentElement.props)) {\n\t      return null;\n\t    }\n\t    var key = getDictionaryKey(inst);\n\t    return bankForRegistrationName && bankForRegistrationName[key];\n\t  },\n\t\n\t  /**\n\t   * Deletes a listener from the registration bank.\n\t   *\n\t   * @param {object} inst The instance, which is the source of events.\n\t   * @param {string} registrationName Name of listener (e.g. `onClick`).\n\t   */\n\t  deleteListener: function (inst, registrationName) {\n\t    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];\n\t    if (PluginModule && PluginModule.willDeleteListener) {\n\t      PluginModule.willDeleteListener(inst, registrationName);\n\t    }\n\t\n\t    var bankForRegistrationName = listenerBank[registrationName];\n\t    // TODO: This should never be null -- when is it?\n\t    if (bankForRegistrationName) {\n\t      var key = getDictionaryKey(inst);\n\t      delete bankForRegistrationName[key];\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Deletes all listeners for the DOM element with the supplied ID.\n\t   *\n\t   * @param {object} inst The instance, which is the source of events.\n\t   */\n\t  deleteAllListeners: function (inst) {\n\t    var key = getDictionaryKey(inst);\n\t    for (var registrationName in listenerBank) {\n\t      if (!listenerBank.hasOwnProperty(registrationName)) {\n\t        continue;\n\t      }\n\t\n\t      if (!listenerBank[registrationName][key]) {\n\t        continue;\n\t      }\n\t\n\t      var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];\n\t      if (PluginModule && PluginModule.willDeleteListener) {\n\t        PluginModule.willDeleteListener(inst, registrationName);\n\t      }\n\t\n\t      delete listenerBank[registrationName][key];\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Allows registered plugins an opportunity to extract events from top-level\n\t   * native browser events.\n\t   *\n\t   * @return {*} An accumulation of synthetic events.\n\t   * @internal\n\t   */\n\t  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n\t    var events;\n\t    var plugins = EventPluginRegistry.plugins;\n\t    for (var i = 0; i < plugins.length; i++) {\n\t      // Not every plugin in the ordering may be loaded at runtime.\n\t      var possiblePlugin = plugins[i];\n\t      if (possiblePlugin) {\n\t        var extractedEvents = possiblePlugin.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);\n\t        if (extractedEvents) {\n\t          events = accumulateInto(events, extractedEvents);\n\t        }\n\t      }\n\t    }\n\t    return events;\n\t  },\n\t\n\t  /**\n\t   * Enqueues a synthetic event that should be dispatched when\n\t   * `processEventQueue` is invoked.\n\t   *\n\t   * @param {*} events An accumulation of synthetic events.\n\t   * @internal\n\t   */\n\t  enqueueEvents: function (events) {\n\t    if (events) {\n\t      eventQueue = accumulateInto(eventQueue, events);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Dispatches all synthetic events on the event queue.\n\t   *\n\t   * @internal\n\t   */\n\t  processEventQueue: function (simulated) {\n\t    // Set `eventQueue` to null before processing it so that we can tell if more\n\t    // events get enqueued while processing.\n\t    var processingEventQueue = eventQueue;\n\t    eventQueue = null;\n\t    if (simulated) {\n\t      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseSimulated);\n\t    } else {\n\t      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);\n\t    }\n\t    !!eventQueue ?  false ? invariant(false, 'processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented.') : _prodInvariant('95') : void 0;\n\t    // This would be a good time to rethrow if any of the event handlers threw.\n\t    ReactErrorUtils.rethrowCaughtError();\n\t  },\n\t\n\t  /**\n\t   * These are needed for tests only. Do not use!\n\t   */\n\t  __purge: function () {\n\t    listenerBank = {};\n\t  },\n\t\n\t  __getListenerBank: function () {\n\t    return listenerBank;\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = EventPluginHub;\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar EventPluginHub = __webpack_require__(21);\n\tvar EventPluginUtils = __webpack_require__(34);\n\t\n\tvar accumulateInto = __webpack_require__(64);\n\tvar forEachAccumulated = __webpack_require__(65);\n\tvar warning = __webpack_require__(3);\n\t\n\tvar getListener = EventPluginHub.getListener;\n\t\n\t/**\n\t * Some event types have a notion of different registration names for different\n\t * \"phases\" of propagation. This finds listeners by a given phase.\n\t */\n\tfunction listenerAtPhase(inst, event, propagationPhase) {\n\t  var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];\n\t  return getListener(inst, registrationName);\n\t}\n\t\n\t/**\n\t * Tags a `SyntheticEvent` with dispatched listeners. Creating this function\n\t * here, allows us to not have to bind or create functions for each event.\n\t * Mutating the event's members allows us to not have to create a wrapping\n\t * \"dispatch\" object that pairs the event with the listener.\n\t */\n\tfunction accumulateDirectionalDispatches(inst, phase, event) {\n\t  if (false) {\n\t    process.env.NODE_ENV !== 'production' ? warning(inst, 'Dispatching inst must not be null') : void 0;\n\t  }\n\t  var listener = listenerAtPhase(inst, event, phase);\n\t  if (listener) {\n\t    event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);\n\t    event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);\n\t  }\n\t}\n\t\n\t/**\n\t * Collect dispatches (must be entirely collected before dispatching - see unit\n\t * tests). Lazily allocate the array to conserve memory.  We must loop through\n\t * each event and perform the traversal for each one. We cannot perform a\n\t * single traversal for the entire collection of events because each event may\n\t * have a different target.\n\t */\n\tfunction accumulateTwoPhaseDispatchesSingle(event) {\n\t  if (event && event.dispatchConfig.phasedRegistrationNames) {\n\t    EventPluginUtils.traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);\n\t  }\n\t}\n\t\n\t/**\n\t * Same as `accumulateTwoPhaseDispatchesSingle`, but skips over the targetID.\n\t */\n\tfunction accumulateTwoPhaseDispatchesSingleSkipTarget(event) {\n\t  if (event && event.dispatchConfig.phasedRegistrationNames) {\n\t    var targetInst = event._targetInst;\n\t    var parentInst = targetInst ? EventPluginUtils.getParentInstance(targetInst) : null;\n\t    EventPluginUtils.traverseTwoPhase(parentInst, accumulateDirectionalDispatches, event);\n\t  }\n\t}\n\t\n\t/**\n\t * Accumulates without regard to direction, does not look for phased\n\t * registration names. Same as `accumulateDirectDispatchesSingle` but without\n\t * requiring that the `dispatchMarker` be the same as the dispatched ID.\n\t */\n\tfunction accumulateDispatches(inst, ignoredDirection, event) {\n\t  if (event && event.dispatchConfig.registrationName) {\n\t    var registrationName = event.dispatchConfig.registrationName;\n\t    var listener = getListener(inst, registrationName);\n\t    if (listener) {\n\t      event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);\n\t      event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Accumulates dispatches on an `SyntheticEvent`, but only for the\n\t * `dispatchMarker`.\n\t * @param {SyntheticEvent} event\n\t */\n\tfunction accumulateDirectDispatchesSingle(event) {\n\t  if (event && event.dispatchConfig.registrationName) {\n\t    accumulateDispatches(event._targetInst, null, event);\n\t  }\n\t}\n\t\n\tfunction accumulateTwoPhaseDispatches(events) {\n\t  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);\n\t}\n\t\n\tfunction accumulateTwoPhaseDispatchesSkipTarget(events) {\n\t  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingleSkipTarget);\n\t}\n\t\n\tfunction accumulateEnterLeaveDispatches(leave, enter, from, to) {\n\t  EventPluginUtils.traverseEnterLeave(from, to, accumulateDispatches, leave, enter);\n\t}\n\t\n\tfunction accumulateDirectDispatches(events) {\n\t  forEachAccumulated(events, accumulateDirectDispatchesSingle);\n\t}\n\t\n\t/**\n\t * A small set of propagation patterns, each of which will accept a small amount\n\t * of information, and generate a set of \"dispatch ready event objects\" - which\n\t * are sets of events that have already been annotated with a set of dispatched\n\t * listener functions/ids. The API is designed this way to discourage these\n\t * propagation strategies from actually executing the dispatches, since we\n\t * always want to collect the entire set of dispatches before executing event a\n\t * single one.\n\t *\n\t * @constructor EventPropagators\n\t */\n\tvar EventPropagators = {\n\t  accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,\n\t  accumulateTwoPhaseDispatchesSkipTarget: accumulateTwoPhaseDispatchesSkipTarget,\n\t  accumulateDirectDispatches: accumulateDirectDispatches,\n\t  accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches\n\t};\n\t\n\tmodule.exports = EventPropagators;\n\n/***/ },\n/* 23 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * `ReactInstanceMap` maintains a mapping from a public facing stateful\n\t * instance (key) and the internal representation (value). This allows public\n\t * methods to accept the user facing instance as an argument and map them back\n\t * to internal methods.\n\t */\n\t\n\t// TODO: Replace this with ES6: var ReactInstanceMap = new Map();\n\t\n\tvar ReactInstanceMap = {\n\t\n\t  /**\n\t   * This API should be called `delete` but we'd have to make sure to always\n\t   * transform these to strings for IE support. When this transform is fully\n\t   * supported we can rename it.\n\t   */\n\t  remove: function (key) {\n\t    key._reactInternalInstance = undefined;\n\t  },\n\t\n\t  get: function (key) {\n\t    return key._reactInternalInstance;\n\t  },\n\t\n\t  has: function (key) {\n\t    return key._reactInternalInstance !== undefined;\n\t  },\n\t\n\t  set: function (key, value) {\n\t    key._reactInternalInstance = value;\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = ReactInstanceMap;\n\n/***/ },\n/* 24 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar SyntheticEvent = __webpack_require__(10);\n\t\n\tvar getEventTarget = __webpack_require__(43);\n\t\n\t/**\n\t * @interface UIEvent\n\t * @see http://www.w3.org/TR/DOM-Level-3-Events/\n\t */\n\tvar UIEventInterface = {\n\t  view: function (event) {\n\t    if (event.view) {\n\t      return event.view;\n\t    }\n\t\n\t    var target = getEventTarget(event);\n\t    if (target.window === target) {\n\t      // target is a window object\n\t      return target;\n\t    }\n\t\n\t    var doc = target.ownerDocument;\n\t    // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.\n\t    if (doc) {\n\t      return doc.defaultView || doc.parentWindow;\n\t    } else {\n\t      return window;\n\t    }\n\t  },\n\t  detail: function (event) {\n\t    return event.detail || 0;\n\t  }\n\t};\n\t\n\t/**\n\t * @param {object} dispatchConfig Configuration used to dispatch this event.\n\t * @param {string} dispatchMarker Marker identifying the event target.\n\t * @param {object} nativeEvent Native browser event.\n\t * @extends {SyntheticEvent}\n\t */\n\tfunction SyntheticUIEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n\t  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n\t}\n\t\n\tSyntheticEvent.augmentClass(SyntheticUIEvent, UIEventInterface);\n\t\n\tmodule.exports = SyntheticUIEvent;\n\n/***/ },\n/* 25 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar _assign = __webpack_require__(5);\n\t\n\tvar EventPluginRegistry = __webpack_require__(33);\n\tvar ReactEventEmitterMixin = __webpack_require__(110);\n\tvar ViewportMetrics = __webpack_require__(63);\n\t\n\tvar getVendorPrefixedEventName = __webpack_require__(142);\n\tvar isEventSupported = __webpack_require__(44);\n\t\n\t/**\n\t * Summary of `ReactBrowserEventEmitter` event handling:\n\t *\n\t *  - Top-level delegation is used to trap most native browser events. This\n\t *    may only occur in the main thread and is the responsibility of\n\t *    ReactEventListener, which is injected and can therefore support pluggable\n\t *    event sources. This is the only work that occurs in the main thread.\n\t *\n\t *  - We normalize and de-duplicate events to account for browser quirks. This\n\t *    may be done in the worker thread.\n\t *\n\t *  - Forward these native events (with the associated top-level type used to\n\t *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want\n\t *    to extract any synthetic events.\n\t *\n\t *  - The `EventPluginHub` will then process each event by annotating them with\n\t *    \"dispatches\", a sequence of listeners and IDs that care about that event.\n\t *\n\t *  - The `EventPluginHub` then dispatches the events.\n\t *\n\t * Overview of React and the event system:\n\t *\n\t * +------------+    .\n\t * |    DOM     |    .\n\t * +------------+    .\n\t *       |           .\n\t *       v           .\n\t * +------------+    .\n\t * | ReactEvent |    .\n\t * |  Listener  |    .\n\t * +------------+    .                         +-----------+\n\t *       |           .               +--------+|SimpleEvent|\n\t *       |           .               |         |Plugin     |\n\t * +-----|------+    .               v         +-----------+\n\t * |     |      |    .    +--------------+                    +------------+\n\t * |     +-----------.--->|EventPluginHub|                    |    Event   |\n\t * |            |    .    |              |     +-----------+  | Propagators|\n\t * | ReactEvent |    .    |              |     |TapEvent   |  |------------|\n\t * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|\n\t * |            |    .    |              |     +-----------+  |  utilities |\n\t * |     +-----------.--->|              |                    +------------+\n\t * |     |      |    .    +--------------+\n\t * +-----|------+    .                ^        +-----------+\n\t *       |           .                |        |Enter/Leave|\n\t *       +           .                +-------+|Plugin     |\n\t * +-------------+   .                         +-----------+\n\t * | application |   .\n\t * |-------------|   .\n\t * |             |   .\n\t * |             |   .\n\t * +-------------+   .\n\t *                   .\n\t *    React Core     .  General Purpose Event Plugin System\n\t */\n\t\n\tvar hasEventPageXY;\n\tvar alreadyListeningTo = {};\n\tvar isMonitoringScrollValue = false;\n\tvar reactTopListenersCounter = 0;\n\t\n\t// For events like 'submit' which don't consistently bubble (which we trap at a\n\t// lower node than `document`), binding at `document` would cause duplicate\n\t// events so we don't include them here\n\tvar topEventMapping = {\n\t  topAbort: 'abort',\n\t  topAnimationEnd: getVendorPrefixedEventName('animationend') || 'animationend',\n\t  topAnimationIteration: getVendorPrefixedEventName('animationiteration') || 'animationiteration',\n\t  topAnimationStart: getVendorPrefixedEventName('animationstart') || 'animationstart',\n\t  topBlur: 'blur',\n\t  topCanPlay: 'canplay',\n\t  topCanPlayThrough: 'canplaythrough',\n\t  topChange: 'change',\n\t  topClick: 'click',\n\t  topCompositionEnd: 'compositionend',\n\t  topCompositionStart: 'compositionstart',\n\t  topCompositionUpdate: 'compositionupdate',\n\t  topContextMenu: 'contextmenu',\n\t  topCopy: 'copy',\n\t  topCut: 'cut',\n\t  topDoubleClick: 'dblclick',\n\t  topDrag: 'drag',\n\t  topDragEnd: 'dragend',\n\t  topDragEnter: 'dragenter',\n\t  topDragExit: 'dragexit',\n\t  topDragLeave: 'dragleave',\n\t  topDragOver: 'dragover',\n\t  topDragStart: 'dragstart',\n\t  topDrop: 'drop',\n\t  topDurationChange: 'durationchange',\n\t  topEmptied: 'emptied',\n\t  topEncrypted: 'encrypted',\n\t  topEnded: 'ended',\n\t  topError: 'error',\n\t  topFocus: 'focus',\n\t  topInput: 'input',\n\t  topKeyDown: 'keydown',\n\t  topKeyPress: 'keypress',\n\t  topKeyUp: 'keyup',\n\t  topLoadedData: 'loadeddata',\n\t  topLoadedMetadata: 'loadedmetadata',\n\t  topLoadStart: 'loadstart',\n\t  topMouseDown: 'mousedown',\n\t  topMouseMove: 'mousemove',\n\t  topMouseOut: 'mouseout',\n\t  topMouseOver: 'mouseover',\n\t  topMouseUp: 'mouseup',\n\t  topPaste: 'paste',\n\t  topPause: 'pause',\n\t  topPlay: 'play',\n\t  topPlaying: 'playing',\n\t  topProgress: 'progress',\n\t  topRateChange: 'ratechange',\n\t  topScroll: 'scroll',\n\t  topSeeked: 'seeked',\n\t  topSeeking: 'seeking',\n\t  topSelectionChange: 'selectionchange',\n\t  topStalled: 'stalled',\n\t  topSuspend: 'suspend',\n\t  topTextInput: 'textInput',\n\t  topTimeUpdate: 'timeupdate',\n\t  topTouchCancel: 'touchcancel',\n\t  topTouchEnd: 'touchend',\n\t  topTouchMove: 'touchmove',\n\t  topTouchStart: 'touchstart',\n\t  topTransitionEnd: getVendorPrefixedEventName('transitionend') || 'transitionend',\n\t  topVolumeChange: 'volumechange',\n\t  topWaiting: 'waiting',\n\t  topWheel: 'wheel'\n\t};\n\t\n\t/**\n\t * To ensure no conflicts with other potential React instances on the page\n\t */\n\tvar topListenersIDKey = '_reactListenersID' + String(Math.random()).slice(2);\n\t\n\tfunction getListeningForDocument(mountAt) {\n\t  // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`\n\t  // directly.\n\t  if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {\n\t    mountAt[topListenersIDKey] = reactTopListenersCounter++;\n\t    alreadyListeningTo[mountAt[topListenersIDKey]] = {};\n\t  }\n\t  return alreadyListeningTo[mountAt[topListenersIDKey]];\n\t}\n\t\n\t/**\n\t * `ReactBrowserEventEmitter` is used to attach top-level event listeners. For\n\t * example:\n\t *\n\t *   EventPluginHub.putListener('myID', 'onClick', myFunction);\n\t *\n\t * This would allocate a \"registration\" of `('onClick', myFunction)` on 'myID'.\n\t *\n\t * @internal\n\t */\n\tvar ReactBrowserEventEmitter = _assign({}, ReactEventEmitterMixin, {\n\t\n\t  /**\n\t   * Injectable event backend\n\t   */\n\t  ReactEventListener: null,\n\t\n\t  injection: {\n\t    /**\n\t     * @param {object} ReactEventListener\n\t     */\n\t    injectReactEventListener: function (ReactEventListener) {\n\t      ReactEventListener.setHandleTopLevel(ReactBrowserEventEmitter.handleTopLevel);\n\t      ReactBrowserEventEmitter.ReactEventListener = ReactEventListener;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Sets whether or not any created callbacks should be enabled.\n\t   *\n\t   * @param {boolean} enabled True if callbacks should be enabled.\n\t   */\n\t  setEnabled: function (enabled) {\n\t    if (ReactBrowserEventEmitter.ReactEventListener) {\n\t      ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * @return {boolean} True if callbacks are enabled.\n\t   */\n\t  isEnabled: function () {\n\t    return !!(ReactBrowserEventEmitter.ReactEventListener && ReactBrowserEventEmitter.ReactEventListener.isEnabled());\n\t  },\n\t\n\t  /**\n\t   * We listen for bubbled touch events on the document object.\n\t   *\n\t   * Firefox v8.01 (and possibly others) exhibited strange behavior when\n\t   * mounting `onmousemove` events at some node that was not the document\n\t   * element. The symptoms were that if your mouse is not moving over something\n\t   * contained within that mount point (for example on the background) the\n\t   * top-level listeners for `onmousemove` won't be called. However, if you\n\t   * register the `mousemove` on the document object, then it will of course\n\t   * catch all `mousemove`s. This along with iOS quirks, justifies restricting\n\t   * top-level listeners to the document object only, at least for these\n\t   * movement types of events and possibly all events.\n\t   *\n\t   * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html\n\t   *\n\t   * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but\n\t   * they bubble to document.\n\t   *\n\t   * @param {string} registrationName Name of listener (e.g. `onClick`).\n\t   * @param {object} contentDocumentHandle Document which owns the container\n\t   */\n\t  listenTo: function (registrationName, contentDocumentHandle) {\n\t    var mountAt = contentDocumentHandle;\n\t    var isListening = getListeningForDocument(mountAt);\n\t    var dependencies = EventPluginRegistry.registrationNameDependencies[registrationName];\n\t\n\t    for (var i = 0; i < dependencies.length; i++) {\n\t      var dependency = dependencies[i];\n\t      if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {\n\t        if (dependency === 'topWheel') {\n\t          if (isEventSupported('wheel')) {\n\t            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topWheel', 'wheel', mountAt);\n\t          } else if (isEventSupported('mousewheel')) {\n\t            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topWheel', 'mousewheel', mountAt);\n\t          } else {\n\t            // Firefox needs to capture a different mouse scroll event.\n\t            // @see http://www.quirksmode.org/dom/events/tests/scroll.html\n\t            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topWheel', 'DOMMouseScroll', mountAt);\n\t          }\n\t        } else if (dependency === 'topScroll') {\n\t\n\t          if (isEventSupported('scroll', true)) {\n\t            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent('topScroll', 'scroll', mountAt);\n\t          } else {\n\t            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topScroll', 'scroll', ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE);\n\t          }\n\t        } else if (dependency === 'topFocus' || dependency === 'topBlur') {\n\t\n\t          if (isEventSupported('focus', true)) {\n\t            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent('topFocus', 'focus', mountAt);\n\t            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent('topBlur', 'blur', mountAt);\n\t          } else if (isEventSupported('focusin')) {\n\t            // IE has `focusin` and `focusout` events which bubble.\n\t            // @see http://www.quirksmode.org/blog/archives/2008/04/delegating_the.html\n\t            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topFocus', 'focusin', mountAt);\n\t            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topBlur', 'focusout', mountAt);\n\t          }\n\t\n\t          // to make sure blur and focus event listeners are only attached once\n\t          isListening.topBlur = true;\n\t          isListening.topFocus = true;\n\t        } else if (topEventMapping.hasOwnProperty(dependency)) {\n\t          ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(dependency, topEventMapping[dependency], mountAt);\n\t        }\n\t\n\t        isListening[dependency] = true;\n\t      }\n\t    }\n\t  },\n\t\n\t  trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {\n\t    return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelType, handlerBaseName, handle);\n\t  },\n\t\n\t  trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {\n\t    return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelType, handlerBaseName, handle);\n\t  },\n\t\n\t  /**\n\t   * Protect against document.createEvent() returning null\n\t   * Some popup blocker extensions appear to do this:\n\t   * https://github.com/facebook/react/issues/6887\n\t   */\n\t  supportsEventPageXY: function () {\n\t    if (!document.createEvent) {\n\t      return false;\n\t    }\n\t    var ev = document.createEvent('MouseEvent');\n\t    return ev != null && 'pageX' in ev;\n\t  },\n\t\n\t  /**\n\t   * Listens to window scroll and resize events. We cache scroll values so that\n\t   * application code can access them without triggering reflows.\n\t   *\n\t   * ViewportMetrics is only used by SyntheticMouse/TouchEvent and only when\n\t   * pageX/pageY isn't supported (legacy browsers).\n\t   *\n\t   * NOTE: Scroll events do not bubble.\n\t   *\n\t   * @see http://www.quirksmode.org/dom/events/scroll.html\n\t   */\n\t  ensureScrollValueMonitoring: function () {\n\t    if (hasEventPageXY === undefined) {\n\t      hasEventPageXY = ReactBrowserEventEmitter.supportsEventPageXY();\n\t    }\n\t    if (!hasEventPageXY && !isMonitoringScrollValue) {\n\t      var refresh = ViewportMetrics.refreshScrollValues;\n\t      ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);\n\t      isMonitoringScrollValue = true;\n\t    }\n\t  }\n\t\n\t});\n\t\n\tmodule.exports = ReactBrowserEventEmitter;\n\n/***/ },\n/* 26 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar SyntheticUIEvent = __webpack_require__(24);\n\tvar ViewportMetrics = __webpack_require__(63);\n\t\n\tvar getEventModifierState = __webpack_require__(42);\n\t\n\t/**\n\t * @interface MouseEvent\n\t * @see http://www.w3.org/TR/DOM-Level-3-Events/\n\t */\n\tvar MouseEventInterface = {\n\t  screenX: null,\n\t  screenY: null,\n\t  clientX: null,\n\t  clientY: null,\n\t  ctrlKey: null,\n\t  shiftKey: null,\n\t  altKey: null,\n\t  metaKey: null,\n\t  getModifierState: getEventModifierState,\n\t  button: function (event) {\n\t    // Webkit, Firefox, IE9+\n\t    // which:  1 2 3\n\t    // button: 0 1 2 (standard)\n\t    var button = event.button;\n\t    if ('which' in event) {\n\t      return button;\n\t    }\n\t    // IE<9\n\t    // which:  undefined\n\t    // button: 0 0 0\n\t    // button: 1 4 2 (onmouseup)\n\t    return button === 2 ? 2 : button === 4 ? 1 : 0;\n\t  },\n\t  buttons: null,\n\t  relatedTarget: function (event) {\n\t    return event.relatedTarget || (event.fromElement === event.srcElement ? event.toElement : event.fromElement);\n\t  },\n\t  // \"Proprietary\" Interface.\n\t  pageX: function (event) {\n\t    return 'pageX' in event ? event.pageX : event.clientX + ViewportMetrics.currentScrollLeft;\n\t  },\n\t  pageY: function (event) {\n\t    return 'pageY' in event ? event.pageY : event.clientY + ViewportMetrics.currentScrollTop;\n\t  }\n\t};\n\t\n\t/**\n\t * @param {object} dispatchConfig Configuration used to dispatch this event.\n\t * @param {string} dispatchMarker Marker identifying the event target.\n\t * @param {object} nativeEvent Native browser event.\n\t * @extends {SyntheticUIEvent}\n\t */\n\tfunction SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n\t  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n\t}\n\t\n\tSyntheticUIEvent.augmentClass(SyntheticMouseEvent, MouseEventInterface);\n\t\n\tmodule.exports = SyntheticMouseEvent;\n\n/***/ },\n/* 27 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * \n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(2);\n\t\n\tvar invariant = __webpack_require__(1);\n\t\n\tvar OBSERVED_ERROR = {};\n\t\n\t/**\n\t * `Transaction` creates a black box that is able to wrap any method such that\n\t * certain invariants are maintained before and after the method is invoked\n\t * (Even if an exception is thrown while invoking the wrapped method). Whoever\n\t * instantiates a transaction can provide enforcers of the invariants at\n\t * creation time. The `Transaction` class itself will supply one additional\n\t * automatic invariant for you - the invariant that any transaction instance\n\t * should not be run while it is already being run. You would typically create a\n\t * single instance of a `Transaction` for reuse multiple times, that potentially\n\t * is used to wrap several different methods. Wrappers are extremely simple -\n\t * they only require implementing two methods.\n\t *\n\t * <pre>\n\t *                       wrappers (injected at creation time)\n\t *                                      +        +\n\t *                                      |        |\n\t *                    +-----------------|--------|--------------+\n\t *                    |                 v        |              |\n\t *                    |      +---------------+   |              |\n\t *                    |   +--|    wrapper1   |---|----+         |\n\t *                    |   |  +---------------+   v    |         |\n\t *                    |   |          +-------------+  |         |\n\t *                    |   |     +----|   wrapper2  |--------+   |\n\t *                    |   |     |    +-------------+  |     |   |\n\t *                    |   |     |                     |     |   |\n\t *                    |   v     v                     v     v   | wrapper\n\t *                    | +---+ +---+   +---------+   +---+ +---+ | invariants\n\t * perform(anyMethod) | |   | |   |   |         |   |   | |   | | maintained\n\t * +----------------->|-|---|-|---|-->|anyMethod|---|---|-|---|-|-------->\n\t *                    | |   | |   |   |         |   |   | |   | |\n\t *                    | |   | |   |   |         |   |   | |   | |\n\t *                    | |   | |   |   |         |   |   | |   | |\n\t *                    | +---+ +---+   +---------+   +---+ +---+ |\n\t *                    |  initialize                    close    |\n\t *                    +-----------------------------------------+\n\t * </pre>\n\t *\n\t * Use cases:\n\t * - Preserving the input selection ranges before/after reconciliation.\n\t *   Restoring selection even in the event of an unexpected error.\n\t * - Deactivating events while rearranging the DOM, preventing blurs/focuses,\n\t *   while guaranteeing that afterwards, the event system is reactivated.\n\t * - Flushing a queue of collected DOM mutations to the main UI thread after a\n\t *   reconciliation takes place in a worker thread.\n\t * - Invoking any collected `componentDidUpdate` callbacks after rendering new\n\t *   content.\n\t * - (Future use case): Wrapping particular flushes of the `ReactWorker` queue\n\t *   to preserve the `scrollTop` (an automatic scroll aware DOM).\n\t * - (Future use case): Layout calculations before and after DOM updates.\n\t *\n\t * Transactional plugin API:\n\t * - A module that has an `initialize` method that returns any precomputation.\n\t * - and a `close` method that accepts the precomputation. `close` is invoked\n\t *   when the wrapped process is completed, or has failed.\n\t *\n\t * @param {Array<TransactionalWrapper>} transactionWrapper Wrapper modules\n\t * that implement `initialize` and `close`.\n\t * @return {Transaction} Single transaction for reuse in thread.\n\t *\n\t * @class Transaction\n\t */\n\tvar TransactionImpl = {\n\t  /**\n\t   * Sets up this instance so that it is prepared for collecting metrics. Does\n\t   * so such that this setup method may be used on an instance that is already\n\t   * initialized, in a way that does not consume additional memory upon reuse.\n\t   * That can be useful if you decide to make your subclass of this mixin a\n\t   * \"PooledClass\".\n\t   */\n\t  reinitializeTransaction: function () {\n\t    this.transactionWrappers = this.getTransactionWrappers();\n\t    if (this.wrapperInitData) {\n\t      this.wrapperInitData.length = 0;\n\t    } else {\n\t      this.wrapperInitData = [];\n\t    }\n\t    this._isInTransaction = false;\n\t  },\n\t\n\t  _isInTransaction: false,\n\t\n\t  /**\n\t   * @abstract\n\t   * @return {Array<TransactionWrapper>} Array of transaction wrappers.\n\t   */\n\t  getTransactionWrappers: null,\n\t\n\t  isInTransaction: function () {\n\t    return !!this._isInTransaction;\n\t  },\n\t\n\t  /**\n\t   * Executes the function within a safety window. Use this for the top level\n\t   * methods that result in large amounts of computation/mutations that would\n\t   * need to be safety checked. The optional arguments helps prevent the need\n\t   * to bind in many cases.\n\t   *\n\t   * @param {function} method Member of scope to call.\n\t   * @param {Object} scope Scope to invoke from.\n\t   * @param {Object?=} a Argument to pass to the method.\n\t   * @param {Object?=} b Argument to pass to the method.\n\t   * @param {Object?=} c Argument to pass to the method.\n\t   * @param {Object?=} d Argument to pass to the method.\n\t   * @param {Object?=} e Argument to pass to the method.\n\t   * @param {Object?=} f Argument to pass to the method.\n\t   *\n\t   * @return {*} Return value from `method`.\n\t   */\n\t  perform: function (method, scope, a, b, c, d, e, f) {\n\t    !!this.isInTransaction() ?  false ? invariant(false, 'Transaction.perform(...): Cannot initialize a transaction when there is already an outstanding transaction.') : _prodInvariant('27') : void 0;\n\t    var errorThrown;\n\t    var ret;\n\t    try {\n\t      this._isInTransaction = true;\n\t      // Catching errors makes debugging more difficult, so we start with\n\t      // errorThrown set to true before setting it to false after calling\n\t      // close -- if it's still set to true in the finally block, it means\n\t      // one of these calls threw.\n\t      errorThrown = true;\n\t      this.initializeAll(0);\n\t      ret = method.call(scope, a, b, c, d, e, f);\n\t      errorThrown = false;\n\t    } finally {\n\t      try {\n\t        if (errorThrown) {\n\t          // If `method` throws, prefer to show that stack trace over any thrown\n\t          // by invoking `closeAll`.\n\t          try {\n\t            this.closeAll(0);\n\t          } catch (err) {}\n\t        } else {\n\t          // Since `method` didn't throw, we don't want to silence the exception\n\t          // here.\n\t          this.closeAll(0);\n\t        }\n\t      } finally {\n\t        this._isInTransaction = false;\n\t      }\n\t    }\n\t    return ret;\n\t  },\n\t\n\t  initializeAll: function (startIndex) {\n\t    var transactionWrappers = this.transactionWrappers;\n\t    for (var i = startIndex; i < transactionWrappers.length; i++) {\n\t      var wrapper = transactionWrappers[i];\n\t      try {\n\t        // Catching errors makes debugging more difficult, so we start with the\n\t        // OBSERVED_ERROR state before overwriting it with the real return value\n\t        // of initialize -- if it's still set to OBSERVED_ERROR in the finally\n\t        // block, it means wrapper.initialize threw.\n\t        this.wrapperInitData[i] = OBSERVED_ERROR;\n\t        this.wrapperInitData[i] = wrapper.initialize ? wrapper.initialize.call(this) : null;\n\t      } finally {\n\t        if (this.wrapperInitData[i] === OBSERVED_ERROR) {\n\t          // The initializer for wrapper i threw an error; initialize the\n\t          // remaining wrappers but silence any exceptions from them to ensure\n\t          // that the first error is the one to bubble up.\n\t          try {\n\t            this.initializeAll(i + 1);\n\t          } catch (err) {}\n\t        }\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Invokes each of `this.transactionWrappers.close[i]` functions, passing into\n\t   * them the respective return values of `this.transactionWrappers.init[i]`\n\t   * (`close`rs that correspond to initializers that failed will not be\n\t   * invoked).\n\t   */\n\t  closeAll: function (startIndex) {\n\t    !this.isInTransaction() ?  false ? invariant(false, 'Transaction.closeAll(): Cannot close transaction when none are open.') : _prodInvariant('28') : void 0;\n\t    var transactionWrappers = this.transactionWrappers;\n\t    for (var i = startIndex; i < transactionWrappers.length; i++) {\n\t      var wrapper = transactionWrappers[i];\n\t      var initData = this.wrapperInitData[i];\n\t      var errorThrown;\n\t      try {\n\t        // Catching errors makes debugging more difficult, so we start with\n\t        // errorThrown set to true before setting it to false after calling\n\t        // close -- if it's still set to true in the finally block, it means\n\t        // wrapper.close threw.\n\t        errorThrown = true;\n\t        if (initData !== OBSERVED_ERROR && wrapper.close) {\n\t          wrapper.close.call(this, initData);\n\t        }\n\t        errorThrown = false;\n\t      } finally {\n\t        if (errorThrown) {\n\t          // The closer for wrapper i threw an error; close the remaining\n\t          // wrappers but silence any exceptions from them to ensure that the\n\t          // first error is the one to bubble up.\n\t          try {\n\t            this.closeAll(i + 1);\n\t          } catch (e) {}\n\t        }\n\t      }\n\t    }\n\t    this.wrapperInitData.length = 0;\n\t  }\n\t};\n\t\n\tmodule.exports = TransactionImpl;\n\n/***/ },\n/* 28 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2016-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * Based on the escape-html library, which is used under the MIT License below:\n\t *\n\t * Copyright (c) 2012-2013 TJ Holowaychuk\n\t * Copyright (c) 2015 Andreas Lubbe\n\t * Copyright (c) 2015 Tiancheng \"Timothy\" Gu\n\t *\n\t * Permission is hereby granted, free of charge, to any person obtaining\n\t * a copy of this software and associated documentation files (the\n\t * 'Software'), to deal in the Software without restriction, including\n\t * without limitation the rights to use, copy, modify, merge, publish,\n\t * distribute, sublicense, and/or sell copies of the Software, and to\n\t * permit persons to whom the Software is furnished to do so, subject to\n\t * the following conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be\n\t * included in all copies or substantial portions of the Software.\n\t *\n\t * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\n\t * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n\t * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n\t * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n\t * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n\t * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\t// code copied and modified from escape-html\n\t/**\n\t * Module variables.\n\t * @private\n\t */\n\t\n\tvar matchHtmlRegExp = /[\"'&<>]/;\n\t\n\t/**\n\t * Escape special characters in the given string of html.\n\t *\n\t * @param  {string} string The string to escape for inserting into HTML\n\t * @return {string}\n\t * @public\n\t */\n\t\n\tfunction escapeHtml(string) {\n\t  var str = '' + string;\n\t  var match = matchHtmlRegExp.exec(str);\n\t\n\t  if (!match) {\n\t    return str;\n\t  }\n\t\n\t  var escape;\n\t  var html = '';\n\t  var index = 0;\n\t  var lastIndex = 0;\n\t\n\t  for (index = match.index; index < str.length; index++) {\n\t    switch (str.charCodeAt(index)) {\n\t      case 34:\n\t        // \"\n\t        escape = '&quot;';\n\t        break;\n\t      case 38:\n\t        // &\n\t        escape = '&amp;';\n\t        break;\n\t      case 39:\n\t        // '\n\t        escape = '&#x27;'; // modified from escape-html; used to be '&#39'\n\t        break;\n\t      case 60:\n\t        // <\n\t        escape = '&lt;';\n\t        break;\n\t      case 62:\n\t        // >\n\t        escape = '&gt;';\n\t        break;\n\t      default:\n\t        continue;\n\t    }\n\t\n\t    if (lastIndex !== index) {\n\t      html += str.substring(lastIndex, index);\n\t    }\n\t\n\t    lastIndex = index + 1;\n\t    html += escape;\n\t  }\n\t\n\t  return lastIndex !== index ? html + str.substring(lastIndex, index) : html;\n\t}\n\t// end code copied and modified from escape-html\n\t\n\t\n\t/**\n\t * Escapes text to prevent scripting attacks.\n\t *\n\t * @param {*} text Text value to escape.\n\t * @return {string} An escaped string.\n\t */\n\tfunction escapeTextContentForBrowser(text) {\n\t  if (typeof text === 'boolean' || typeof text === 'number') {\n\t    // this shortcircuit helps perf for types that we know will never have\n\t    // special characters, especially given that this function is used often\n\t    // for numeric dom ids.\n\t    return '' + text;\n\t  }\n\t  return escapeHtml(text);\n\t}\n\t\n\tmodule.exports = escapeTextContentForBrowser;\n\n/***/ },\n/* 29 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar ExecutionEnvironment = __webpack_require__(6);\n\tvar DOMNamespaces = __webpack_require__(32);\n\t\n\tvar WHITESPACE_TEST = /^[ \\r\\n\\t\\f]/;\n\tvar NONVISIBLE_TEST = /<(!--|link|noscript|meta|script|style)[ \\r\\n\\t\\f\\/>]/;\n\t\n\tvar createMicrosoftUnsafeLocalFunction = __webpack_require__(40);\n\t\n\t// SVG temp container for IE lacking innerHTML\n\tvar reusableSVGContainer;\n\t\n\t/**\n\t * Set the innerHTML property of a node, ensuring that whitespace is preserved\n\t * even in IE8.\n\t *\n\t * @param {DOMElement} node\n\t * @param {string} html\n\t * @internal\n\t */\n\tvar setInnerHTML = createMicrosoftUnsafeLocalFunction(function (node, html) {\n\t  // IE does not have innerHTML for SVG nodes, so instead we inject the\n\t  // new markup in a temp node and then move the child nodes across into\n\t  // the target node\n\t  if (node.namespaceURI === DOMNamespaces.svg && !('innerHTML' in node)) {\n\t    reusableSVGContainer = reusableSVGContainer || document.createElement('div');\n\t    reusableSVGContainer.innerHTML = '<svg>' + html + '</svg>';\n\t    var svgNode = reusableSVGContainer.firstChild;\n\t    while (svgNode.firstChild) {\n\t      node.appendChild(svgNode.firstChild);\n\t    }\n\t  } else {\n\t    node.innerHTML = html;\n\t  }\n\t});\n\t\n\tif (ExecutionEnvironment.canUseDOM) {\n\t  // IE8: When updating a just created node with innerHTML only leading\n\t  // whitespace is removed. When updating an existing node with innerHTML\n\t  // whitespace in root TextNodes is also collapsed.\n\t  // @see quirksmode.org/bugreports/archives/2004/11/innerhtml_and_t.html\n\t\n\t  // Feature detection; only IE8 is known to behave improperly like this.\n\t  var testElement = document.createElement('div');\n\t  testElement.innerHTML = ' ';\n\t  if (testElement.innerHTML === '') {\n\t    setInnerHTML = function (node, html) {\n\t      // Magic theory: IE8 supposedly differentiates between added and updated\n\t      // nodes when processing innerHTML, innerHTML on updated nodes suffers\n\t      // from worse whitespace behavior. Re-adding a node like this triggers\n\t      // the initial and more favorable whitespace behavior.\n\t      // TODO: What to do on a detached node?\n\t      if (node.parentNode) {\n\t        node.parentNode.replaceChild(node, node);\n\t      }\n\t\n\t      // We also implement a workaround for non-visible tags disappearing into\n\t      // thin air on IE8, this only happens if there is no visible text\n\t      // in-front of the non-visible tags. Piggyback on the whitespace fix\n\t      // and simply check if any non-visible tags appear in the source.\n\t      if (WHITESPACE_TEST.test(html) || html[0] === '<' && NONVISIBLE_TEST.test(html)) {\n\t        // Recover leading whitespace by temporarily prepending any character.\n\t        // \\uFEFF has the potential advantage of being zero-width/invisible.\n\t        // UglifyJS drops U+FEFF chars when parsing, so use String.fromCharCode\n\t        // in hopes that this is preserved even if \"\\uFEFF\" is transformed to\n\t        // the actual Unicode character (by Babel, for example).\n\t        // https://github.com/mishoo/UglifyJS2/blob/v2.4.20/lib/parse.js#L216\n\t        node.innerHTML = String.fromCharCode(0xFEFF) + html;\n\t\n\t        // deleteData leaves an empty `TextNode` which offsets the index of all\n\t        // children. Definitely want to avoid this.\n\t        var textNode = node.firstChild;\n\t        if (textNode.data.length === 1) {\n\t          node.removeChild(textNode);\n\t        } else {\n\t          textNode.deleteData(0, 1);\n\t        }\n\t      } else {\n\t        node.innerHTML = html;\n\t      }\n\t    };\n\t  }\n\t  testElement = null;\n\t}\n\t\n\tmodule.exports = setInnerHTML;\n\n/***/ },\n/* 30 */\n5,\n/* 31 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar DOMLazyTree = __webpack_require__(15);\n\tvar Danger = __webpack_require__(87);\n\tvar ReactDOMComponentTree = __webpack_require__(4);\n\tvar ReactInstrumentation = __webpack_require__(7);\n\t\n\tvar createMicrosoftUnsafeLocalFunction = __webpack_require__(40);\n\tvar setInnerHTML = __webpack_require__(29);\n\tvar setTextContent = __webpack_require__(70);\n\t\n\tfunction getNodeAfter(parentNode, node) {\n\t  // Special case for text components, which return [open, close] comments\n\t  // from getHostNode.\n\t  if (Array.isArray(node)) {\n\t    node = node[1];\n\t  }\n\t  return node ? node.nextSibling : parentNode.firstChild;\n\t}\n\t\n\t/**\n\t * Inserts `childNode` as a child of `parentNode` at the `index`.\n\t *\n\t * @param {DOMElement} parentNode Parent node in which to insert.\n\t * @param {DOMElement} childNode Child node to insert.\n\t * @param {number} index Index at which to insert the child.\n\t * @internal\n\t */\n\tvar insertChildAt = createMicrosoftUnsafeLocalFunction(function (parentNode, childNode, referenceNode) {\n\t  // We rely exclusively on `insertBefore(node, null)` instead of also using\n\t  // `appendChild(node)`. (Using `undefined` is not allowed by all browsers so\n\t  // we are careful to use `null`.)\n\t  parentNode.insertBefore(childNode, referenceNode);\n\t});\n\t\n\tfunction insertLazyTreeChildAt(parentNode, childTree, referenceNode) {\n\t  DOMLazyTree.insertTreeBefore(parentNode, childTree, referenceNode);\n\t}\n\t\n\tfunction moveChild(parentNode, childNode, referenceNode) {\n\t  if (Array.isArray(childNode)) {\n\t    moveDelimitedText(parentNode, childNode[0], childNode[1], referenceNode);\n\t  } else {\n\t    insertChildAt(parentNode, childNode, referenceNode);\n\t  }\n\t}\n\t\n\tfunction removeChild(parentNode, childNode) {\n\t  if (Array.isArray(childNode)) {\n\t    var closingComment = childNode[1];\n\t    childNode = childNode[0];\n\t    removeDelimitedText(parentNode, childNode, closingComment);\n\t    parentNode.removeChild(closingComment);\n\t  }\n\t  parentNode.removeChild(childNode);\n\t}\n\t\n\tfunction moveDelimitedText(parentNode, openingComment, closingComment, referenceNode) {\n\t  var node = openingComment;\n\t  while (true) {\n\t    var nextNode = node.nextSibling;\n\t    insertChildAt(parentNode, node, referenceNode);\n\t    if (node === closingComment) {\n\t      break;\n\t    }\n\t    node = nextNode;\n\t  }\n\t}\n\t\n\tfunction removeDelimitedText(parentNode, startNode, closingComment) {\n\t  while (true) {\n\t    var node = startNode.nextSibling;\n\t    if (node === closingComment) {\n\t      // The closing comment is removed by ReactMultiChild.\n\t      break;\n\t    } else {\n\t      parentNode.removeChild(node);\n\t    }\n\t  }\n\t}\n\t\n\tfunction replaceDelimitedText(openingComment, closingComment, stringText) {\n\t  var parentNode = openingComment.parentNode;\n\t  var nodeAfterComment = openingComment.nextSibling;\n\t  if (nodeAfterComment === closingComment) {\n\t    // There are no text nodes between the opening and closing comments; insert\n\t    // a new one if stringText isn't empty.\n\t    if (stringText) {\n\t      insertChildAt(parentNode, document.createTextNode(stringText), nodeAfterComment);\n\t    }\n\t  } else {\n\t    if (stringText) {\n\t      // Set the text content of the first node after the opening comment, and\n\t      // remove all following nodes up until the closing comment.\n\t      setTextContent(nodeAfterComment, stringText);\n\t      removeDelimitedText(parentNode, nodeAfterComment, closingComment);\n\t    } else {\n\t      removeDelimitedText(parentNode, openingComment, closingComment);\n\t    }\n\t  }\n\t\n\t  if (false) {\n\t    ReactInstrumentation.debugTool.onHostOperation({\n\t      instanceID: ReactDOMComponentTree.getInstanceFromNode(openingComment)._debugID,\n\t      type: 'replace text',\n\t      payload: stringText\n\t    });\n\t  }\n\t}\n\t\n\tvar dangerouslyReplaceNodeWithMarkup = Danger.dangerouslyReplaceNodeWithMarkup;\n\tif (false) {\n\t  dangerouslyReplaceNodeWithMarkup = function (oldChild, markup, prevInstance) {\n\t    Danger.dangerouslyReplaceNodeWithMarkup(oldChild, markup);\n\t    if (prevInstance._debugID !== 0) {\n\t      ReactInstrumentation.debugTool.onHostOperation({\n\t        instanceID: prevInstance._debugID,\n\t        type: 'replace with',\n\t        payload: markup.toString()\n\t      });\n\t    } else {\n\t      var nextInstance = ReactDOMComponentTree.getInstanceFromNode(markup.node);\n\t      if (nextInstance._debugID !== 0) {\n\t        ReactInstrumentation.debugTool.onHostOperation({\n\t          instanceID: nextInstance._debugID,\n\t          type: 'mount',\n\t          payload: markup.toString()\n\t        });\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Operations for updating with DOM children.\n\t */\n\tvar DOMChildrenOperations = {\n\t\n\t  dangerouslyReplaceNodeWithMarkup: dangerouslyReplaceNodeWithMarkup,\n\t\n\t  replaceDelimitedText: replaceDelimitedText,\n\t\n\t  /**\n\t   * Updates a component's children by processing a series of updates. The\n\t   * update configurations are each expected to have a `parentNode` property.\n\t   *\n\t   * @param {array<object>} updates List of update configurations.\n\t   * @internal\n\t   */\n\t  processUpdates: function (parentNode, updates) {\n\t    if (false) {\n\t      var parentNodeDebugID = ReactDOMComponentTree.getInstanceFromNode(parentNode)._debugID;\n\t    }\n\t\n\t    for (var k = 0; k < updates.length; k++) {\n\t      var update = updates[k];\n\t      switch (update.type) {\n\t        case 'INSERT_MARKUP':\n\t          insertLazyTreeChildAt(parentNode, update.content, getNodeAfter(parentNode, update.afterNode));\n\t          if (false) {\n\t            ReactInstrumentation.debugTool.onHostOperation({\n\t              instanceID: parentNodeDebugID,\n\t              type: 'insert child',\n\t              payload: { toIndex: update.toIndex, content: update.content.toString() }\n\t            });\n\t          }\n\t          break;\n\t        case 'MOVE_EXISTING':\n\t          moveChild(parentNode, update.fromNode, getNodeAfter(parentNode, update.afterNode));\n\t          if (false) {\n\t            ReactInstrumentation.debugTool.onHostOperation({\n\t              instanceID: parentNodeDebugID,\n\t              type: 'move child',\n\t              payload: { fromIndex: update.fromIndex, toIndex: update.toIndex }\n\t            });\n\t          }\n\t          break;\n\t        case 'SET_MARKUP':\n\t          setInnerHTML(parentNode, update.content);\n\t          if (false) {\n\t            ReactInstrumentation.debugTool.onHostOperation({\n\t              instanceID: parentNodeDebugID,\n\t              type: 'replace children',\n\t              payload: update.content.toString()\n\t            });\n\t          }\n\t          break;\n\t        case 'TEXT_CONTENT':\n\t          setTextContent(parentNode, update.content);\n\t          if (false) {\n\t            ReactInstrumentation.debugTool.onHostOperation({\n\t              instanceID: parentNodeDebugID,\n\t              type: 'replace text',\n\t              payload: update.content.toString()\n\t            });\n\t          }\n\t          break;\n\t        case 'REMOVE_NODE':\n\t          removeChild(parentNode, update.fromNode);\n\t          if (false) {\n\t            ReactInstrumentation.debugTool.onHostOperation({\n\t              instanceID: parentNodeDebugID,\n\t              type: 'remove child',\n\t              payload: { fromIndex: update.fromIndex }\n\t            });\n\t          }\n\t          break;\n\t      }\n\t    }\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = DOMChildrenOperations;\n\n/***/ },\n/* 32 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar DOMNamespaces = {\n\t  html: 'http://www.w3.org/1999/xhtml',\n\t  mathml: 'http://www.w3.org/1998/Math/MathML',\n\t  svg: 'http://www.w3.org/2000/svg'\n\t};\n\t\n\tmodule.exports = DOMNamespaces;\n\n/***/ },\n/* 33 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * \n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(2);\n\t\n\tvar invariant = __webpack_require__(1);\n\t\n\t/**\n\t * Injectable ordering of event plugins.\n\t */\n\tvar eventPluginOrder = null;\n\t\n\t/**\n\t * Injectable mapping from names to event plugin modules.\n\t */\n\tvar namesToPlugins = {};\n\t\n\t/**\n\t * Recomputes the plugin list using the injected plugins and plugin ordering.\n\t *\n\t * @private\n\t */\n\tfunction recomputePluginOrdering() {\n\t  if (!eventPluginOrder) {\n\t    // Wait until an `eventPluginOrder` is injected.\n\t    return;\n\t  }\n\t  for (var pluginName in namesToPlugins) {\n\t    var pluginModule = namesToPlugins[pluginName];\n\t    var pluginIndex = eventPluginOrder.indexOf(pluginName);\n\t    !(pluginIndex > -1) ?  false ? invariant(false, 'EventPluginRegistry: Cannot inject event plugins that do not exist in the plugin ordering, `%s`.', pluginName) : _prodInvariant('96', pluginName) : void 0;\n\t    if (EventPluginRegistry.plugins[pluginIndex]) {\n\t      continue;\n\t    }\n\t    !pluginModule.extractEvents ?  false ? invariant(false, 'EventPluginRegistry: Event plugins must implement an `extractEvents` method, but `%s` does not.', pluginName) : _prodInvariant('97', pluginName) : void 0;\n\t    EventPluginRegistry.plugins[pluginIndex] = pluginModule;\n\t    var publishedEvents = pluginModule.eventTypes;\n\t    for (var eventName in publishedEvents) {\n\t      !publishEventForPlugin(publishedEvents[eventName], pluginModule, eventName) ?  false ? invariant(false, 'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.', eventName, pluginName) : _prodInvariant('98', eventName, pluginName) : void 0;\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Publishes an event so that it can be dispatched by the supplied plugin.\n\t *\n\t * @param {object} dispatchConfig Dispatch configuration for the event.\n\t * @param {object} PluginModule Plugin publishing the event.\n\t * @return {boolean} True if the event was successfully published.\n\t * @private\n\t */\n\tfunction publishEventForPlugin(dispatchConfig, pluginModule, eventName) {\n\t  !!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName) ?  false ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same event name, `%s`.', eventName) : _prodInvariant('99', eventName) : void 0;\n\t  EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;\n\t\n\t  var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;\n\t  if (phasedRegistrationNames) {\n\t    for (var phaseName in phasedRegistrationNames) {\n\t      if (phasedRegistrationNames.hasOwnProperty(phaseName)) {\n\t        var phasedRegistrationName = phasedRegistrationNames[phaseName];\n\t        publishRegistrationName(phasedRegistrationName, pluginModule, eventName);\n\t      }\n\t    }\n\t    return true;\n\t  } else if (dispatchConfig.registrationName) {\n\t    publishRegistrationName(dispatchConfig.registrationName, pluginModule, eventName);\n\t    return true;\n\t  }\n\t  return false;\n\t}\n\t\n\t/**\n\t * Publishes a registration name that is used to identify dispatched events and\n\t * can be used with `EventPluginHub.putListener` to register listeners.\n\t *\n\t * @param {string} registrationName Registration name to add.\n\t * @param {object} PluginModule Plugin publishing the event.\n\t * @private\n\t */\n\tfunction publishRegistrationName(registrationName, pluginModule, eventName) {\n\t  !!EventPluginRegistry.registrationNameModules[registrationName] ?  false ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same registration name, `%s`.', registrationName) : _prodInvariant('100', registrationName) : void 0;\n\t  EventPluginRegistry.registrationNameModules[registrationName] = pluginModule;\n\t  EventPluginRegistry.registrationNameDependencies[registrationName] = pluginModule.eventTypes[eventName].dependencies;\n\t\n\t  if (false) {\n\t    var lowerCasedName = registrationName.toLowerCase();\n\t    EventPluginRegistry.possibleRegistrationNames[lowerCasedName] = registrationName;\n\t\n\t    if (registrationName === 'onDoubleClick') {\n\t      EventPluginRegistry.possibleRegistrationNames.ondblclick = registrationName;\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Registers plugins so that they can extract and dispatch events.\n\t *\n\t * @see {EventPluginHub}\n\t */\n\tvar EventPluginRegistry = {\n\t\n\t  /**\n\t   * Ordered list of injected plugins.\n\t   */\n\t  plugins: [],\n\t\n\t  /**\n\t   * Mapping from event name to dispatch config\n\t   */\n\t  eventNameDispatchConfigs: {},\n\t\n\t  /**\n\t   * Mapping from registration name to plugin module\n\t   */\n\t  registrationNameModules: {},\n\t\n\t  /**\n\t   * Mapping from registration name to event name\n\t   */\n\t  registrationNameDependencies: {},\n\t\n\t  /**\n\t   * Mapping from lowercase registration names to the properly cased version,\n\t   * used to warn in the case of missing event handlers. Available\n\t   * only in __DEV__.\n\t   * @type {Object}\n\t   */\n\t  possibleRegistrationNames:  false ? {} : null,\n\t  // Trust the developer to only use possibleRegistrationNames in __DEV__\n\t\n\t  /**\n\t   * Injects an ordering of plugins (by plugin name). This allows the ordering\n\t   * to be decoupled from injection of the actual plugins so that ordering is\n\t   * always deterministic regardless of packaging, on-the-fly injection, etc.\n\t   *\n\t   * @param {array} InjectedEventPluginOrder\n\t   * @internal\n\t   * @see {EventPluginHub.injection.injectEventPluginOrder}\n\t   */\n\t  injectEventPluginOrder: function (injectedEventPluginOrder) {\n\t    !!eventPluginOrder ?  false ? invariant(false, 'EventPluginRegistry: Cannot inject event plugin ordering more than once. You are likely trying to load more than one copy of React.') : _prodInvariant('101') : void 0;\n\t    // Clone the ordering so it cannot be dynamically mutated.\n\t    eventPluginOrder = Array.prototype.slice.call(injectedEventPluginOrder);\n\t    recomputePluginOrdering();\n\t  },\n\t\n\t  /**\n\t   * Injects plugins to be used by `EventPluginHub`. The plugin names must be\n\t   * in the ordering injected by `injectEventPluginOrder`.\n\t   *\n\t   * Plugins can be injected as part of page initialization or on-the-fly.\n\t   *\n\t   * @param {object} injectedNamesToPlugins Map from names to plugin modules.\n\t   * @internal\n\t   * @see {EventPluginHub.injection.injectEventPluginsByName}\n\t   */\n\t  injectEventPluginsByName: function (injectedNamesToPlugins) {\n\t    var isOrderingDirty = false;\n\t    for (var pluginName in injectedNamesToPlugins) {\n\t      if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {\n\t        continue;\n\t      }\n\t      var pluginModule = injectedNamesToPlugins[pluginName];\n\t      if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== pluginModule) {\n\t        !!namesToPlugins[pluginName] ?  false ? invariant(false, 'EventPluginRegistry: Cannot inject two different event plugins using the same name, `%s`.', pluginName) : _prodInvariant('102', pluginName) : void 0;\n\t        namesToPlugins[pluginName] = pluginModule;\n\t        isOrderingDirty = true;\n\t      }\n\t    }\n\t    if (isOrderingDirty) {\n\t      recomputePluginOrdering();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Looks up the plugin for the supplied event.\n\t   *\n\t   * @param {object} event A synthetic event.\n\t   * @return {?object} The plugin that created the supplied event.\n\t   * @internal\n\t   */\n\t  getPluginModuleForEvent: function (event) {\n\t    var dispatchConfig = event.dispatchConfig;\n\t    if (dispatchConfig.registrationName) {\n\t      return EventPluginRegistry.registrationNameModules[dispatchConfig.registrationName] || null;\n\t    }\n\t    if (dispatchConfig.phasedRegistrationNames !== undefined) {\n\t      // pulling phasedRegistrationNames out of dispatchConfig helps Flow see\n\t      // that it is not undefined.\n\t      var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;\n\t\n\t      for (var phase in phasedRegistrationNames) {\n\t        if (!phasedRegistrationNames.hasOwnProperty(phase)) {\n\t          continue;\n\t        }\n\t        var pluginModule = EventPluginRegistry.registrationNameModules[phasedRegistrationNames[phase]];\n\t        if (pluginModule) {\n\t          return pluginModule;\n\t        }\n\t      }\n\t    }\n\t    return null;\n\t  },\n\t\n\t  /**\n\t   * Exposed for unit testing.\n\t   * @private\n\t   */\n\t  _resetEventPlugins: function () {\n\t    eventPluginOrder = null;\n\t    for (var pluginName in namesToPlugins) {\n\t      if (namesToPlugins.hasOwnProperty(pluginName)) {\n\t        delete namesToPlugins[pluginName];\n\t      }\n\t    }\n\t    EventPluginRegistry.plugins.length = 0;\n\t\n\t    var eventNameDispatchConfigs = EventPluginRegistry.eventNameDispatchConfigs;\n\t    for (var eventName in eventNameDispatchConfigs) {\n\t      if (eventNameDispatchConfigs.hasOwnProperty(eventName)) {\n\t        delete eventNameDispatchConfigs[eventName];\n\t      }\n\t    }\n\t\n\t    var registrationNameModules = EventPluginRegistry.registrationNameModules;\n\t    for (var registrationName in registrationNameModules) {\n\t      if (registrationNameModules.hasOwnProperty(registrationName)) {\n\t        delete registrationNameModules[registrationName];\n\t      }\n\t    }\n\t\n\t    if (false) {\n\t      var possibleRegistrationNames = EventPluginRegistry.possibleRegistrationNames;\n\t      for (var lowerCasedName in possibleRegistrationNames) {\n\t        if (possibleRegistrationNames.hasOwnProperty(lowerCasedName)) {\n\t          delete possibleRegistrationNames[lowerCasedName];\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = EventPluginRegistry;\n\n/***/ },\n/* 34 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(2);\n\t\n\tvar ReactErrorUtils = __webpack_require__(38);\n\t\n\tvar invariant = __webpack_require__(1);\n\tvar warning = __webpack_require__(3);\n\t\n\t/**\n\t * Injected dependencies:\n\t */\n\t\n\t/**\n\t * - `ComponentTree`: [required] Module that can convert between React instances\n\t *   and actual node references.\n\t */\n\tvar ComponentTree;\n\tvar TreeTraversal;\n\tvar injection = {\n\t  injectComponentTree: function (Injected) {\n\t    ComponentTree = Injected;\n\t    if (false) {\n\t      process.env.NODE_ENV !== 'production' ? warning(Injected && Injected.getNodeFromInstance && Injected.getInstanceFromNode, 'EventPluginUtils.injection.injectComponentTree(...): Injected ' + 'module is missing getNodeFromInstance or getInstanceFromNode.') : void 0;\n\t    }\n\t  },\n\t  injectTreeTraversal: function (Injected) {\n\t    TreeTraversal = Injected;\n\t    if (false) {\n\t      process.env.NODE_ENV !== 'production' ? warning(Injected && Injected.isAncestor && Injected.getLowestCommonAncestor, 'EventPluginUtils.injection.injectTreeTraversal(...): Injected ' + 'module is missing isAncestor or getLowestCommonAncestor.') : void 0;\n\t    }\n\t  }\n\t};\n\t\n\tfunction isEndish(topLevelType) {\n\t  return topLevelType === 'topMouseUp' || topLevelType === 'topTouchEnd' || topLevelType === 'topTouchCancel';\n\t}\n\t\n\tfunction isMoveish(topLevelType) {\n\t  return topLevelType === 'topMouseMove' || topLevelType === 'topTouchMove';\n\t}\n\tfunction isStartish(topLevelType) {\n\t  return topLevelType === 'topMouseDown' || topLevelType === 'topTouchStart';\n\t}\n\t\n\tvar validateEventDispatches;\n\tif (false) {\n\t  validateEventDispatches = function (event) {\n\t    var dispatchListeners = event._dispatchListeners;\n\t    var dispatchInstances = event._dispatchInstances;\n\t\n\t    var listenersIsArr = Array.isArray(dispatchListeners);\n\t    var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;\n\t\n\t    var instancesIsArr = Array.isArray(dispatchInstances);\n\t    var instancesLen = instancesIsArr ? dispatchInstances.length : dispatchInstances ? 1 : 0;\n\t\n\t    process.env.NODE_ENV !== 'production' ? warning(instancesIsArr === listenersIsArr && instancesLen === listenersLen, 'EventPluginUtils: Invalid `event`.') : void 0;\n\t  };\n\t}\n\t\n\t/**\n\t * Dispatch the event to the listener.\n\t * @param {SyntheticEvent} event SyntheticEvent to handle\n\t * @param {boolean} simulated If the event is simulated (changes exn behavior)\n\t * @param {function} listener Application-level callback\n\t * @param {*} inst Internal component instance\n\t */\n\tfunction executeDispatch(event, simulated, listener, inst) {\n\t  var type = event.type || 'unknown-event';\n\t  event.currentTarget = EventPluginUtils.getNodeFromInstance(inst);\n\t  if (simulated) {\n\t    ReactErrorUtils.invokeGuardedCallbackWithCatch(type, listener, event);\n\t  } else {\n\t    ReactErrorUtils.invokeGuardedCallback(type, listener, event);\n\t  }\n\t  event.currentTarget = null;\n\t}\n\t\n\t/**\n\t * Standard/simple iteration through an event's collected dispatches.\n\t */\n\tfunction executeDispatchesInOrder(event, simulated) {\n\t  var dispatchListeners = event._dispatchListeners;\n\t  var dispatchInstances = event._dispatchInstances;\n\t  if (false) {\n\t    validateEventDispatches(event);\n\t  }\n\t  if (Array.isArray(dispatchListeners)) {\n\t    for (var i = 0; i < dispatchListeners.length; i++) {\n\t      if (event.isPropagationStopped()) {\n\t        break;\n\t      }\n\t      // Listeners and Instances are two parallel arrays that are always in sync.\n\t      executeDispatch(event, simulated, dispatchListeners[i], dispatchInstances[i]);\n\t    }\n\t  } else if (dispatchListeners) {\n\t    executeDispatch(event, simulated, dispatchListeners, dispatchInstances);\n\t  }\n\t  event._dispatchListeners = null;\n\t  event._dispatchInstances = null;\n\t}\n\t\n\t/**\n\t * Standard/simple iteration through an event's collected dispatches, but stops\n\t * at the first dispatch execution returning true, and returns that id.\n\t *\n\t * @return {?string} id of the first dispatch execution who's listener returns\n\t * true, or null if no listener returned true.\n\t */\n\tfunction executeDispatchesInOrderStopAtTrueImpl(event) {\n\t  var dispatchListeners = event._dispatchListeners;\n\t  var dispatchInstances = event._dispatchInstances;\n\t  if (false) {\n\t    validateEventDispatches(event);\n\t  }\n\t  if (Array.isArray(dispatchListeners)) {\n\t    for (var i = 0; i < dispatchListeners.length; i++) {\n\t      if (event.isPropagationStopped()) {\n\t        break;\n\t      }\n\t      // Listeners and Instances are two parallel arrays that are always in sync.\n\t      if (dispatchListeners[i](event, dispatchInstances[i])) {\n\t        return dispatchInstances[i];\n\t      }\n\t    }\n\t  } else if (dispatchListeners) {\n\t    if (dispatchListeners(event, dispatchInstances)) {\n\t      return dispatchInstances;\n\t    }\n\t  }\n\t  return null;\n\t}\n\t\n\t/**\n\t * @see executeDispatchesInOrderStopAtTrueImpl\n\t */\n\tfunction executeDispatchesInOrderStopAtTrue(event) {\n\t  var ret = executeDispatchesInOrderStopAtTrueImpl(event);\n\t  event._dispatchInstances = null;\n\t  event._dispatchListeners = null;\n\t  return ret;\n\t}\n\t\n\t/**\n\t * Execution of a \"direct\" dispatch - there must be at most one dispatch\n\t * accumulated on the event or it is considered an error. It doesn't really make\n\t * sense for an event with multiple dispatches (bubbled) to keep track of the\n\t * return values at each dispatch execution, but it does tend to make sense when\n\t * dealing with \"direct\" dispatches.\n\t *\n\t * @return {*} The return value of executing the single dispatch.\n\t */\n\tfunction executeDirectDispatch(event) {\n\t  if (false) {\n\t    validateEventDispatches(event);\n\t  }\n\t  var dispatchListener = event._dispatchListeners;\n\t  var dispatchInstance = event._dispatchInstances;\n\t  !!Array.isArray(dispatchListener) ?  false ? invariant(false, 'executeDirectDispatch(...): Invalid `event`.') : _prodInvariant('103') : void 0;\n\t  event.currentTarget = dispatchListener ? EventPluginUtils.getNodeFromInstance(dispatchInstance) : null;\n\t  var res = dispatchListener ? dispatchListener(event) : null;\n\t  event.currentTarget = null;\n\t  event._dispatchListeners = null;\n\t  event._dispatchInstances = null;\n\t  return res;\n\t}\n\t\n\t/**\n\t * @param {SyntheticEvent} event\n\t * @return {boolean} True iff number of dispatches accumulated is greater than 0.\n\t */\n\tfunction hasDispatches(event) {\n\t  return !!event._dispatchListeners;\n\t}\n\t\n\t/**\n\t * General utilities that are useful in creating custom Event Plugins.\n\t */\n\tvar EventPluginUtils = {\n\t  isEndish: isEndish,\n\t  isMoveish: isMoveish,\n\t  isStartish: isStartish,\n\t\n\t  executeDirectDispatch: executeDirectDispatch,\n\t  executeDispatchesInOrder: executeDispatchesInOrder,\n\t  executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,\n\t  hasDispatches: hasDispatches,\n\t\n\t  getInstanceFromNode: function (node) {\n\t    return ComponentTree.getInstanceFromNode(node);\n\t  },\n\t  getNodeFromInstance: function (node) {\n\t    return ComponentTree.getNodeFromInstance(node);\n\t  },\n\t  isAncestor: function (a, b) {\n\t    return TreeTraversal.isAncestor(a, b);\n\t  },\n\t  getLowestCommonAncestor: function (a, b) {\n\t    return TreeTraversal.getLowestCommonAncestor(a, b);\n\t  },\n\t  getParentInstance: function (inst) {\n\t    return TreeTraversal.getParentInstance(inst);\n\t  },\n\t  traverseTwoPhase: function (target, fn, arg) {\n\t    return TreeTraversal.traverseTwoPhase(target, fn, arg);\n\t  },\n\t  traverseEnterLeave: function (from, to, fn, argFrom, argTo) {\n\t    return TreeTraversal.traverseEnterLeave(from, to, fn, argFrom, argTo);\n\t  },\n\t\n\t  injection: injection\n\t};\n\t\n\tmodule.exports = EventPluginUtils;\n\n/***/ },\n/* 35 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * \n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * Escape and wrap key so it is safe to use as a reactid\n\t *\n\t * @param {string} key to be escaped.\n\t * @return {string} the escaped key.\n\t */\n\t\n\tfunction escape(key) {\n\t  var escapeRegex = /[=:]/g;\n\t  var escaperLookup = {\n\t    '=': '=0',\n\t    ':': '=2'\n\t  };\n\t  var escapedString = ('' + key).replace(escapeRegex, function (match) {\n\t    return escaperLookup[match];\n\t  });\n\t\n\t  return '$' + escapedString;\n\t}\n\t\n\t/**\n\t * Unescape and unwrap key for human-readable display\n\t *\n\t * @param {string} key to unescape.\n\t * @return {string} the unescaped key.\n\t */\n\tfunction unescape(key) {\n\t  var unescapeRegex = /(=0|=2)/g;\n\t  var unescaperLookup = {\n\t    '=0': '=',\n\t    '=2': ':'\n\t  };\n\t  var keySubstring = key[0] === '.' && key[1] === '$' ? key.substring(2) : key.substring(1);\n\t\n\t  return ('' + keySubstring).replace(unescapeRegex, function (match) {\n\t    return unescaperLookup[match];\n\t  });\n\t}\n\t\n\tvar KeyEscapeUtils = {\n\t  escape: escape,\n\t  unescape: unescape\n\t};\n\t\n\tmodule.exports = KeyEscapeUtils;\n\n/***/ },\n/* 36 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(2);\n\t\n\tvar ReactPropTypesSecret = __webpack_require__(116);\n\tvar propTypesFactory = __webpack_require__(158);\n\t\n\tvar React = __webpack_require__(18);\n\tvar PropTypes = propTypesFactory(React.isValidElement);\n\t\n\tvar invariant = __webpack_require__(1);\n\tvar warning = __webpack_require__(3);\n\t\n\tvar hasReadOnlyValue = {\n\t  'button': true,\n\t  'checkbox': true,\n\t  'image': true,\n\t  'hidden': true,\n\t  'radio': true,\n\t  'reset': true,\n\t  'submit': true\n\t};\n\t\n\tfunction _assertSingleLink(inputProps) {\n\t  !(inputProps.checkedLink == null || inputProps.valueLink == null) ?  false ? invariant(false, 'Cannot provide a checkedLink and a valueLink. If you want to use checkedLink, you probably don\\'t want to use valueLink and vice versa.') : _prodInvariant('87') : void 0;\n\t}\n\tfunction _assertValueLink(inputProps) {\n\t  _assertSingleLink(inputProps);\n\t  !(inputProps.value == null && inputProps.onChange == null) ?  false ? invariant(false, 'Cannot provide a valueLink and a value or onChange event. If you want to use value or onChange, you probably don\\'t want to use valueLink.') : _prodInvariant('88') : void 0;\n\t}\n\t\n\tfunction _assertCheckedLink(inputProps) {\n\t  _assertSingleLink(inputProps);\n\t  !(inputProps.checked == null && inputProps.onChange == null) ?  false ? invariant(false, 'Cannot provide a checkedLink and a checked property or onChange event. If you want to use checked or onChange, you probably don\\'t want to use checkedLink') : _prodInvariant('89') : void 0;\n\t}\n\t\n\tvar propTypes = {\n\t  value: function (props, propName, componentName) {\n\t    if (!props[propName] || hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled) {\n\t      return null;\n\t    }\n\t    return new Error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');\n\t  },\n\t  checked: function (props, propName, componentName) {\n\t    if (!props[propName] || props.onChange || props.readOnly || props.disabled) {\n\t      return null;\n\t    }\n\t    return new Error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');\n\t  },\n\t  onChange: PropTypes.func\n\t};\n\t\n\tvar loggedTypeFailures = {};\n\tfunction getDeclarationErrorAddendum(owner) {\n\t  if (owner) {\n\t    var name = owner.getName();\n\t    if (name) {\n\t      return ' Check the render method of `' + name + '`.';\n\t    }\n\t  }\n\t  return '';\n\t}\n\t\n\t/**\n\t * Provide a linked `value` attribute for controlled forms. You should not use\n\t * this outside of the ReactDOM controlled form components.\n\t */\n\tvar LinkedValueUtils = {\n\t  checkPropTypes: function (tagName, props, owner) {\n\t    for (var propName in propTypes) {\n\t      if (propTypes.hasOwnProperty(propName)) {\n\t        var error = propTypes[propName](props, propName, tagName, 'prop', null, ReactPropTypesSecret);\n\t      }\n\t      if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n\t        // Only monitor this failure once because there tends to be a lot of the\n\t        // same error.\n\t        loggedTypeFailures[error.message] = true;\n\t\n\t        var addendum = getDeclarationErrorAddendum(owner);\n\t         false ? warning(false, 'Failed form propType: %s%s', error.message, addendum) : void 0;\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * @param {object} inputProps Props for form component\n\t   * @return {*} current value of the input either from value prop or link.\n\t   */\n\t  getValue: function (inputProps) {\n\t    if (inputProps.valueLink) {\n\t      _assertValueLink(inputProps);\n\t      return inputProps.valueLink.value;\n\t    }\n\t    return inputProps.value;\n\t  },\n\t\n\t  /**\n\t   * @param {object} inputProps Props for form component\n\t   * @return {*} current checked status of the input either from checked prop\n\t   *             or link.\n\t   */\n\t  getChecked: function (inputProps) {\n\t    if (inputProps.checkedLink) {\n\t      _assertCheckedLink(inputProps);\n\t      return inputProps.checkedLink.value;\n\t    }\n\t    return inputProps.checked;\n\t  },\n\t\n\t  /**\n\t   * @param {object} inputProps Props for form component\n\t   * @param {SyntheticEvent} event change event to handle\n\t   */\n\t  executeOnChange: function (inputProps, event) {\n\t    if (inputProps.valueLink) {\n\t      _assertValueLink(inputProps);\n\t      return inputProps.valueLink.requestChange(event.target.value);\n\t    } else if (inputProps.checkedLink) {\n\t      _assertCheckedLink(inputProps);\n\t      return inputProps.checkedLink.requestChange(event.target.checked);\n\t    } else if (inputProps.onChange) {\n\t      return inputProps.onChange.call(undefined, event);\n\t    }\n\t  }\n\t};\n\t\n\tmodule.exports = LinkedValueUtils;\n\n/***/ },\n/* 37 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2014-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * \n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(2);\n\t\n\tvar invariant = __webpack_require__(1);\n\t\n\tvar injected = false;\n\t\n\tvar ReactComponentEnvironment = {\n\t\n\t  /**\n\t   * Optionally injectable hook for swapping out mount images in the middle of\n\t   * the tree.\n\t   */\n\t  replaceNodeWithMarkup: null,\n\t\n\t  /**\n\t   * Optionally injectable hook for processing a queue of child updates. Will\n\t   * later move into MultiChildComponents.\n\t   */\n\t  processChildrenUpdates: null,\n\t\n\t  injection: {\n\t    injectEnvironment: function (environment) {\n\t      !!injected ?  false ? invariant(false, 'ReactCompositeComponent: injectEnvironment() can only be called once.') : _prodInvariant('104') : void 0;\n\t      ReactComponentEnvironment.replaceNodeWithMarkup = environment.replaceNodeWithMarkup;\n\t      ReactComponentEnvironment.processChildrenUpdates = environment.processChildrenUpdates;\n\t      injected = true;\n\t    }\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = ReactComponentEnvironment;\n\n/***/ },\n/* 38 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * \n\t */\n\t\n\t'use strict';\n\t\n\tvar caughtError = null;\n\t\n\t/**\n\t * Call a function while guarding against errors that happens within it.\n\t *\n\t * @param {String} name of the guard to use for logging or debugging\n\t * @param {Function} func The function to invoke\n\t * @param {*} a First argument\n\t * @param {*} b Second argument\n\t */\n\tfunction invokeGuardedCallback(name, func, a) {\n\t  try {\n\t    func(a);\n\t  } catch (x) {\n\t    if (caughtError === null) {\n\t      caughtError = x;\n\t    }\n\t  }\n\t}\n\t\n\tvar ReactErrorUtils = {\n\t  invokeGuardedCallback: invokeGuardedCallback,\n\t\n\t  /**\n\t   * Invoked by ReactTestUtils.Simulate so that any errors thrown by the event\n\t   * handler are sure to be rethrown by rethrowCaughtError.\n\t   */\n\t  invokeGuardedCallbackWithCatch: invokeGuardedCallback,\n\t\n\t  /**\n\t   * During execution of guarded functions we will capture the first error which\n\t   * we will rethrow to be handled by the top level error handler.\n\t   */\n\t  rethrowCaughtError: function () {\n\t    if (caughtError) {\n\t      var error = caughtError;\n\t      caughtError = null;\n\t      throw error;\n\t    }\n\t  }\n\t};\n\t\n\tif (false) {\n\t  /**\n\t   * To help development we can get better devtools integration by simulating a\n\t   * real browser event.\n\t   */\n\t  if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {\n\t    var fakeNode = document.createElement('react');\n\t    ReactErrorUtils.invokeGuardedCallback = function (name, func, a) {\n\t      var boundFunc = func.bind(null, a);\n\t      var evtType = 'react-' + name;\n\t      fakeNode.addEventListener(evtType, boundFunc, false);\n\t      var evt = document.createEvent('Event');\n\t      evt.initEvent(evtType, false, false);\n\t      fakeNode.dispatchEvent(evt);\n\t      fakeNode.removeEventListener(evtType, boundFunc, false);\n\t    };\n\t  }\n\t}\n\t\n\tmodule.exports = ReactErrorUtils;\n\n/***/ },\n/* 39 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2015-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(2);\n\t\n\tvar ReactCurrentOwner = __webpack_require__(11);\n\tvar ReactInstanceMap = __webpack_require__(23);\n\tvar ReactInstrumentation = __webpack_require__(7);\n\tvar ReactUpdates = __webpack_require__(8);\n\t\n\tvar invariant = __webpack_require__(1);\n\tvar warning = __webpack_require__(3);\n\t\n\tfunction enqueueUpdate(internalInstance) {\n\t  ReactUpdates.enqueueUpdate(internalInstance);\n\t}\n\t\n\tfunction formatUnexpectedArgument(arg) {\n\t  var type = typeof arg;\n\t  if (type !== 'object') {\n\t    return type;\n\t  }\n\t  var displayName = arg.constructor && arg.constructor.name || type;\n\t  var keys = Object.keys(arg);\n\t  if (keys.length > 0 && keys.length < 20) {\n\t    return displayName + ' (keys: ' + keys.join(', ') + ')';\n\t  }\n\t  return displayName;\n\t}\n\t\n\tfunction getInternalInstanceReadyForUpdate(publicInstance, callerName) {\n\t  var internalInstance = ReactInstanceMap.get(publicInstance);\n\t  if (!internalInstance) {\n\t    if (false) {\n\t      var ctor = publicInstance.constructor;\n\t      // Only warn when we have a callerName. Otherwise we should be silent.\n\t      // We're probably calling from enqueueCallback. We don't want to warn\n\t      // there because we already warned for the corresponding lifecycle method.\n\t      process.env.NODE_ENV !== 'production' ? warning(!callerName, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, ctor && (ctor.displayName || ctor.name) || 'ReactClass') : void 0;\n\t    }\n\t    return null;\n\t  }\n\t\n\t  if (false) {\n\t    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, '%s(...): Cannot update during an existing state transition (such as ' + 'within `render` or another component\\'s constructor). Render methods ' + 'should be a pure function of props and state; constructor ' + 'side-effects are an anti-pattern, but can be moved to ' + '`componentWillMount`.', callerName) : void 0;\n\t  }\n\t\n\t  return internalInstance;\n\t}\n\t\n\t/**\n\t * ReactUpdateQueue allows for state updates to be scheduled into a later\n\t * reconciliation step.\n\t */\n\tvar ReactUpdateQueue = {\n\t\n\t  /**\n\t   * Checks whether or not this composite component is mounted.\n\t   * @param {ReactClass} publicInstance The instance we want to test.\n\t   * @return {boolean} True if mounted, false otherwise.\n\t   * @protected\n\t   * @final\n\t   */\n\t  isMounted: function (publicInstance) {\n\t    if (false) {\n\t      var owner = ReactCurrentOwner.current;\n\t      if (owner !== null) {\n\t        process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing isMounted inside its render() function. ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;\n\t        owner._warnedAboutRefsInRender = true;\n\t      }\n\t    }\n\t    var internalInstance = ReactInstanceMap.get(publicInstance);\n\t    if (internalInstance) {\n\t      // During componentWillMount and render this will still be null but after\n\t      // that will always render to something. At least for now. So we can use\n\t      // this hack.\n\t      return !!internalInstance._renderedComponent;\n\t    } else {\n\t      return false;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Enqueue a callback that will be executed after all the pending updates\n\t   * have processed.\n\t   *\n\t   * @param {ReactClass} publicInstance The instance to use as `this` context.\n\t   * @param {?function} callback Called after state is updated.\n\t   * @param {string} callerName Name of the calling function in the public API.\n\t   * @internal\n\t   */\n\t  enqueueCallback: function (publicInstance, callback, callerName) {\n\t    ReactUpdateQueue.validateCallback(callback, callerName);\n\t    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance);\n\t\n\t    // Previously we would throw an error if we didn't have an internal\n\t    // instance. Since we want to make it a no-op instead, we mirror the same\n\t    // behavior we have in other enqueue* methods.\n\t    // We also need to ignore callbacks in componentWillMount. See\n\t    // enqueueUpdates.\n\t    if (!internalInstance) {\n\t      return null;\n\t    }\n\t\n\t    if (internalInstance._pendingCallbacks) {\n\t      internalInstance._pendingCallbacks.push(callback);\n\t    } else {\n\t      internalInstance._pendingCallbacks = [callback];\n\t    }\n\t    // TODO: The callback here is ignored when setState is called from\n\t    // componentWillMount. Either fix it or disallow doing so completely in\n\t    // favor of getInitialState. Alternatively, we can disallow\n\t    // componentWillMount during server-side rendering.\n\t    enqueueUpdate(internalInstance);\n\t  },\n\t\n\t  enqueueCallbackInternal: function (internalInstance, callback) {\n\t    if (internalInstance._pendingCallbacks) {\n\t      internalInstance._pendingCallbacks.push(callback);\n\t    } else {\n\t      internalInstance._pendingCallbacks = [callback];\n\t    }\n\t    enqueueUpdate(internalInstance);\n\t  },\n\t\n\t  /**\n\t   * Forces an update. This should only be invoked when it is known with\n\t   * certainty that we are **not** in a DOM transaction.\n\t   *\n\t   * You may want to call this when you know that some deeper aspect of the\n\t   * component's state has changed but `setState` was not called.\n\t   *\n\t   * This will not invoke `shouldComponentUpdate`, but it will invoke\n\t   * `componentWillUpdate` and `componentDidUpdate`.\n\t   *\n\t   * @param {ReactClass} publicInstance The instance that should rerender.\n\t   * @internal\n\t   */\n\t  enqueueForceUpdate: function (publicInstance) {\n\t    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'forceUpdate');\n\t\n\t    if (!internalInstance) {\n\t      return;\n\t    }\n\t\n\t    internalInstance._pendingForceUpdate = true;\n\t\n\t    enqueueUpdate(internalInstance);\n\t  },\n\t\n\t  /**\n\t   * Replaces all of the state. Always use this or `setState` to mutate state.\n\t   * You should treat `this.state` as immutable.\n\t   *\n\t   * There is no guarantee that `this.state` will be immediately updated, so\n\t   * accessing `this.state` after calling this method may return the old value.\n\t   *\n\t   * @param {ReactClass} publicInstance The instance that should rerender.\n\t   * @param {object} completeState Next state.\n\t   * @internal\n\t   */\n\t  enqueueReplaceState: function (publicInstance, completeState, callback) {\n\t    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'replaceState');\n\t\n\t    if (!internalInstance) {\n\t      return;\n\t    }\n\t\n\t    internalInstance._pendingStateQueue = [completeState];\n\t    internalInstance._pendingReplaceState = true;\n\t\n\t    // Future-proof 15.5\n\t    if (callback !== undefined && callback !== null) {\n\t      ReactUpdateQueue.validateCallback(callback, 'replaceState');\n\t      if (internalInstance._pendingCallbacks) {\n\t        internalInstance._pendingCallbacks.push(callback);\n\t      } else {\n\t        internalInstance._pendingCallbacks = [callback];\n\t      }\n\t    }\n\t\n\t    enqueueUpdate(internalInstance);\n\t  },\n\t\n\t  /**\n\t   * Sets a subset of the state. This only exists because _pendingState is\n\t   * internal. This provides a merging strategy that is not available to deep\n\t   * properties which is confusing. TODO: Expose pendingState or don't use it\n\t   * during the merge.\n\t   *\n\t   * @param {ReactClass} publicInstance The instance that should rerender.\n\t   * @param {object} partialState Next partial state to be merged with state.\n\t   * @internal\n\t   */\n\t  enqueueSetState: function (publicInstance, partialState) {\n\t    if (false) {\n\t      ReactInstrumentation.debugTool.onSetState();\n\t      process.env.NODE_ENV !== 'production' ? warning(partialState != null, 'setState(...): You passed an undefined or null state object; ' + 'instead, use forceUpdate().') : void 0;\n\t    }\n\t\n\t    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'setState');\n\t\n\t    if (!internalInstance) {\n\t      return;\n\t    }\n\t\n\t    var queue = internalInstance._pendingStateQueue || (internalInstance._pendingStateQueue = []);\n\t    queue.push(partialState);\n\t\n\t    enqueueUpdate(internalInstance);\n\t  },\n\t\n\t  enqueueElementInternal: function (internalInstance, nextElement, nextContext) {\n\t    internalInstance._pendingElement = nextElement;\n\t    // TODO: introduce _pendingContext instead of setting it directly.\n\t    internalInstance._context = nextContext;\n\t    enqueueUpdate(internalInstance);\n\t  },\n\t\n\t  validateCallback: function (callback, callerName) {\n\t    !(!callback || typeof callback === 'function') ?  false ? invariant(false, '%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.', callerName, formatUnexpectedArgument(callback)) : _prodInvariant('122', callerName, formatUnexpectedArgument(callback)) : void 0;\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = ReactUpdateQueue;\n\n/***/ },\n/* 40 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t/* globals MSApp */\n\t\n\t'use strict';\n\t\n\t/**\n\t * Create a function which has 'unsafe' privileges (required by windows8 apps)\n\t */\n\t\n\tvar createMicrosoftUnsafeLocalFunction = function (func) {\n\t  if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {\n\t    return function (arg0, arg1, arg2, arg3) {\n\t      MSApp.execUnsafeLocalFunction(function () {\n\t        return func(arg0, arg1, arg2, arg3);\n\t      });\n\t    };\n\t  } else {\n\t    return func;\n\t  }\n\t};\n\t\n\tmodule.exports = createMicrosoftUnsafeLocalFunction;\n\n/***/ },\n/* 41 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * `charCode` represents the actual \"character code\" and is safe to use with\n\t * `String.fromCharCode`. As such, only keys that correspond to printable\n\t * characters produce a valid `charCode`, the only exception to this is Enter.\n\t * The Tab-key is considered non-printable and does not have a `charCode`,\n\t * presumably because it does not produce a tab-character in browsers.\n\t *\n\t * @param {object} nativeEvent Native browser event.\n\t * @return {number} Normalized `charCode` property.\n\t */\n\t\n\tfunction getEventCharCode(nativeEvent) {\n\t  var charCode;\n\t  var keyCode = nativeEvent.keyCode;\n\t\n\t  if ('charCode' in nativeEvent) {\n\t    charCode = nativeEvent.charCode;\n\t\n\t    // FF does not set `charCode` for the Enter-key, check against `keyCode`.\n\t    if (charCode === 0 && keyCode === 13) {\n\t      charCode = 13;\n\t    }\n\t  } else {\n\t    // IE8 does not implement `charCode`, but `keyCode` has the correct value.\n\t    charCode = keyCode;\n\t  }\n\t\n\t  // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.\n\t  // Must not discard the (non-)printable Enter-key.\n\t  if (charCode >= 32 || charCode === 13) {\n\t    return charCode;\n\t  }\n\t\n\t  return 0;\n\t}\n\t\n\tmodule.exports = getEventCharCode;\n\n/***/ },\n/* 42 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * Translation from modifier key to the associated property in the event.\n\t * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers\n\t */\n\t\n\tvar modifierKeyToProp = {\n\t  'Alt': 'altKey',\n\t  'Control': 'ctrlKey',\n\t  'Meta': 'metaKey',\n\t  'Shift': 'shiftKey'\n\t};\n\t\n\t// IE8 does not implement getModifierState so we simply map it to the only\n\t// modifier keys exposed by the event itself, does not support Lock-keys.\n\t// Currently, all major browsers except Chrome seems to support Lock-keys.\n\tfunction modifierStateGetter(keyArg) {\n\t  var syntheticEvent = this;\n\t  var nativeEvent = syntheticEvent.nativeEvent;\n\t  if (nativeEvent.getModifierState) {\n\t    return nativeEvent.getModifierState(keyArg);\n\t  }\n\t  var keyProp = modifierKeyToProp[keyArg];\n\t  return keyProp ? !!nativeEvent[keyProp] : false;\n\t}\n\t\n\tfunction getEventModifierState(nativeEvent) {\n\t  return modifierStateGetter;\n\t}\n\t\n\tmodule.exports = getEventModifierState;\n\n/***/ },\n/* 43 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * Gets the target node from a native browser event by accounting for\n\t * inconsistencies in browser DOM APIs.\n\t *\n\t * @param {object} nativeEvent Native browser event.\n\t * @return {DOMEventTarget} Target node.\n\t */\n\t\n\tfunction getEventTarget(nativeEvent) {\n\t  var target = nativeEvent.target || nativeEvent.srcElement || window;\n\t\n\t  // Normalize SVG <use> element events #4963\n\t  if (target.correspondingUseElement) {\n\t    target = target.correspondingUseElement;\n\t  }\n\t\n\t  // Safari may fire events on text nodes (Node.TEXT_NODE is 3).\n\t  // @see http://www.quirksmode.org/js/events_properties.html\n\t  return target.nodeType === 3 ? target.parentNode : target;\n\t}\n\t\n\tmodule.exports = getEventTarget;\n\n/***/ },\n/* 44 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar ExecutionEnvironment = __webpack_require__(6);\n\t\n\tvar useHasFeature;\n\tif (ExecutionEnvironment.canUseDOM) {\n\t  useHasFeature = document.implementation && document.implementation.hasFeature &&\n\t  // always returns true in newer browsers as per the standard.\n\t  // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\n\t  document.implementation.hasFeature('', '') !== true;\n\t}\n\t\n\t/**\n\t * Checks if an event is supported in the current execution environment.\n\t *\n\t * NOTE: This will not work correctly for non-generic events such as `change`,\n\t * `reset`, `load`, `error`, and `select`.\n\t *\n\t * Borrows from Modernizr.\n\t *\n\t * @param {string} eventNameSuffix Event name, e.g. \"click\".\n\t * @param {?boolean} capture Check if the capture phase is supported.\n\t * @return {boolean} True if the event is supported.\n\t * @internal\n\t * @license Modernizr 3.0.0pre (Custom Build) | MIT\n\t */\n\tfunction isEventSupported(eventNameSuffix, capture) {\n\t  if (!ExecutionEnvironment.canUseDOM || capture && !('addEventListener' in document)) {\n\t    return false;\n\t  }\n\t\n\t  var eventName = 'on' + eventNameSuffix;\n\t  var isSupported = eventName in document;\n\t\n\t  if (!isSupported) {\n\t    var element = document.createElement('div');\n\t    element.setAttribute(eventName, 'return;');\n\t    isSupported = typeof element[eventName] === 'function';\n\t  }\n\t\n\t  if (!isSupported && useHasFeature && eventNameSuffix === 'wheel') {\n\t    // This is the only way to test support for the `wheel` event in IE9+.\n\t    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');\n\t  }\n\t\n\t  return isSupported;\n\t}\n\t\n\tmodule.exports = isEventSupported;\n\n/***/ },\n/* 45 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * Given a `prevElement` and `nextElement`, determines if the existing\n\t * instance should be updated as opposed to being destroyed or replaced by a new\n\t * instance. Both arguments are elements. This ensures that this logic can\n\t * operate on stateless trees without any backing instance.\n\t *\n\t * @param {?object} prevElement\n\t * @param {?object} nextElement\n\t * @return {boolean} True if the existing instance should be updated.\n\t * @protected\n\t */\n\t\n\tfunction shouldUpdateReactComponent(prevElement, nextElement) {\n\t  var prevEmpty = prevElement === null || prevElement === false;\n\t  var nextEmpty = nextElement === null || nextElement === false;\n\t  if (prevEmpty || nextEmpty) {\n\t    return prevEmpty === nextEmpty;\n\t  }\n\t\n\t  var prevType = typeof prevElement;\n\t  var nextType = typeof nextElement;\n\t  if (prevType === 'string' || prevType === 'number') {\n\t    return nextType === 'string' || nextType === 'number';\n\t  } else {\n\t    return nextType === 'object' && prevElement.type === nextElement.type && prevElement.key === nextElement.key;\n\t  }\n\t}\n\t\n\tmodule.exports = shouldUpdateReactComponent;\n\n/***/ },\n/* 46 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2015-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar _assign = __webpack_require__(5);\n\t\n\tvar emptyFunction = __webpack_require__(9);\n\tvar warning = __webpack_require__(3);\n\t\n\tvar validateDOMNesting = emptyFunction;\n\t\n\tif (false) {\n\t  // This validation code was written based on the HTML5 parsing spec:\n\t  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope\n\t  //\n\t  // Note: this does not catch all invalid nesting, nor does it try to (as it's\n\t  // not clear what practical benefit doing so provides); instead, we warn only\n\t  // for cases where the parser will give a parse tree differing from what React\n\t  // intended. For example, <b><div></div></b> is invalid but we don't warn\n\t  // because it still parses correctly; we do warn for other cases like nested\n\t  // <p> tags where the beginning of the second element implicitly closes the\n\t  // first, causing a confusing mess.\n\t\n\t  // https://html.spec.whatwg.org/multipage/syntax.html#special\n\t  var specialTags = ['address', 'applet', 'area', 'article', 'aside', 'base', 'basefont', 'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe', 'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee', 'menu', 'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript', 'object', 'ol', 'p', 'param', 'plaintext', 'pre', 'script', 'section', 'select', 'source', 'style', 'summary', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr', 'xmp'];\n\t\n\t  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope\n\t  var inScopeTags = ['applet', 'caption', 'html', 'table', 'td', 'th', 'marquee', 'object', 'template',\n\t\n\t  // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point\n\t  // TODO: Distinguish by namespace here -- for <title>, including it here\n\t  // errs on the side of fewer warnings\n\t  'foreignObject', 'desc', 'title'];\n\t\n\t  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope\n\t  var buttonScopeTags = inScopeTags.concat(['button']);\n\t\n\t  // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags\n\t  var impliedEndTags = ['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'];\n\t\n\t  var emptyAncestorInfo = {\n\t    current: null,\n\t\n\t    formTag: null,\n\t    aTagInScope: null,\n\t    buttonTagInScope: null,\n\t    nobrTagInScope: null,\n\t    pTagInButtonScope: null,\n\t\n\t    listItemTagAutoclosing: null,\n\t    dlItemTagAutoclosing: null\n\t  };\n\t\n\t  var updatedAncestorInfo = function (oldInfo, tag, instance) {\n\t    var ancestorInfo = _assign({}, oldInfo || emptyAncestorInfo);\n\t    var info = { tag: tag, instance: instance };\n\t\n\t    if (inScopeTags.indexOf(tag) !== -1) {\n\t      ancestorInfo.aTagInScope = null;\n\t      ancestorInfo.buttonTagInScope = null;\n\t      ancestorInfo.nobrTagInScope = null;\n\t    }\n\t    if (buttonScopeTags.indexOf(tag) !== -1) {\n\t      ancestorInfo.pTagInButtonScope = null;\n\t    }\n\t\n\t    // See rules for 'li', 'dd', 'dt' start tags in\n\t    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody\n\t    if (specialTags.indexOf(tag) !== -1 && tag !== 'address' && tag !== 'div' && tag !== 'p') {\n\t      ancestorInfo.listItemTagAutoclosing = null;\n\t      ancestorInfo.dlItemTagAutoclosing = null;\n\t    }\n\t\n\t    ancestorInfo.current = info;\n\t\n\t    if (tag === 'form') {\n\t      ancestorInfo.formTag = info;\n\t    }\n\t    if (tag === 'a') {\n\t      ancestorInfo.aTagInScope = info;\n\t    }\n\t    if (tag === 'button') {\n\t      ancestorInfo.buttonTagInScope = info;\n\t    }\n\t    if (tag === 'nobr') {\n\t      ancestorInfo.nobrTagInScope = info;\n\t    }\n\t    if (tag === 'p') {\n\t      ancestorInfo.pTagInButtonScope = info;\n\t    }\n\t    if (tag === 'li') {\n\t      ancestorInfo.listItemTagAutoclosing = info;\n\t    }\n\t    if (tag === 'dd' || tag === 'dt') {\n\t      ancestorInfo.dlItemTagAutoclosing = info;\n\t    }\n\t\n\t    return ancestorInfo;\n\t  };\n\t\n\t  /**\n\t   * Returns whether\n\t   */\n\t  var isTagValidWithParent = function (tag, parentTag) {\n\t    // First, let's check if we're in an unusual parsing mode...\n\t    switch (parentTag) {\n\t      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect\n\t      case 'select':\n\t        return tag === 'option' || tag === 'optgroup' || tag === '#text';\n\t      case 'optgroup':\n\t        return tag === 'option' || tag === '#text';\n\t      // Strictly speaking, seeing an <option> doesn't mean we're in a <select>\n\t      // but\n\t      case 'option':\n\t        return tag === '#text';\n\t\n\t      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd\n\t      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption\n\t      // No special behavior since these rules fall back to \"in body\" mode for\n\t      // all except special table nodes which cause bad parsing behavior anyway.\n\t\n\t      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr\n\t      case 'tr':\n\t        return tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template';\n\t\n\t      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody\n\t      case 'tbody':\n\t      case 'thead':\n\t      case 'tfoot':\n\t        return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';\n\t\n\t      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup\n\t      case 'colgroup':\n\t        return tag === 'col' || tag === 'template';\n\t\n\t      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable\n\t      case 'table':\n\t        return tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || tag === 'tfoot' || tag === 'thead' || tag === 'style' || tag === 'script' || tag === 'template';\n\t\n\t      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead\n\t      case 'head':\n\t        return tag === 'base' || tag === 'basefont' || tag === 'bgsound' || tag === 'link' || tag === 'meta' || tag === 'title' || tag === 'noscript' || tag === 'noframes' || tag === 'style' || tag === 'script' || tag === 'template';\n\t\n\t      // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element\n\t      case 'html':\n\t        return tag === 'head' || tag === 'body';\n\t      case '#document':\n\t        return tag === 'html';\n\t    }\n\t\n\t    // Probably in the \"in body\" parsing mode, so we outlaw only tag combos\n\t    // where the parsing rules cause implicit opens or closes to be added.\n\t    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody\n\t    switch (tag) {\n\t      case 'h1':\n\t      case 'h2':\n\t      case 'h3':\n\t      case 'h4':\n\t      case 'h5':\n\t      case 'h6':\n\t        return parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6';\n\t\n\t      case 'rp':\n\t      case 'rt':\n\t        return impliedEndTags.indexOf(parentTag) === -1;\n\t\n\t      case 'body':\n\t      case 'caption':\n\t      case 'col':\n\t      case 'colgroup':\n\t      case 'frame':\n\t      case 'head':\n\t      case 'html':\n\t      case 'tbody':\n\t      case 'td':\n\t      case 'tfoot':\n\t      case 'th':\n\t      case 'thead':\n\t      case 'tr':\n\t        // These tags are only valid with a few parents that have special child\n\t        // parsing rules -- if we're down here, then none of those matched and\n\t        // so we allow it only if we don't know what the parent is, as all other\n\t        // cases are invalid.\n\t        return parentTag == null;\n\t    }\n\t\n\t    return true;\n\t  };\n\t\n\t  /**\n\t   * Returns whether\n\t   */\n\t  var findInvalidAncestorForTag = function (tag, ancestorInfo) {\n\t    switch (tag) {\n\t      case 'address':\n\t      case 'article':\n\t      case 'aside':\n\t      case 'blockquote':\n\t      case 'center':\n\t      case 'details':\n\t      case 'dialog':\n\t      case 'dir':\n\t      case 'div':\n\t      case 'dl':\n\t      case 'fieldset':\n\t      case 'figcaption':\n\t      case 'figure':\n\t      case 'footer':\n\t      case 'header':\n\t      case 'hgroup':\n\t      case 'main':\n\t      case 'menu':\n\t      case 'nav':\n\t      case 'ol':\n\t      case 'p':\n\t      case 'section':\n\t      case 'summary':\n\t      case 'ul':\n\t      case 'pre':\n\t      case 'listing':\n\t      case 'table':\n\t      case 'hr':\n\t      case 'xmp':\n\t      case 'h1':\n\t      case 'h2':\n\t      case 'h3':\n\t      case 'h4':\n\t      case 'h5':\n\t      case 'h6':\n\t        return ancestorInfo.pTagInButtonScope;\n\t\n\t      case 'form':\n\t        return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;\n\t\n\t      case 'li':\n\t        return ancestorInfo.listItemTagAutoclosing;\n\t\n\t      case 'dd':\n\t      case 'dt':\n\t        return ancestorInfo.dlItemTagAutoclosing;\n\t\n\t      case 'button':\n\t        return ancestorInfo.buttonTagInScope;\n\t\n\t      case 'a':\n\t        // Spec says something about storing a list of markers, but it sounds\n\t        // equivalent to this check.\n\t        return ancestorInfo.aTagInScope;\n\t\n\t      case 'nobr':\n\t        return ancestorInfo.nobrTagInScope;\n\t    }\n\t\n\t    return null;\n\t  };\n\t\n\t  /**\n\t   * Given a ReactCompositeComponent instance, return a list of its recursive\n\t   * owners, starting at the root and ending with the instance itself.\n\t   */\n\t  var findOwnerStack = function (instance) {\n\t    if (!instance) {\n\t      return [];\n\t    }\n\t\n\t    var stack = [];\n\t    do {\n\t      stack.push(instance);\n\t    } while (instance = instance._currentElement._owner);\n\t    stack.reverse();\n\t    return stack;\n\t  };\n\t\n\t  var didWarn = {};\n\t\n\t  validateDOMNesting = function (childTag, childText, childInstance, ancestorInfo) {\n\t    ancestorInfo = ancestorInfo || emptyAncestorInfo;\n\t    var parentInfo = ancestorInfo.current;\n\t    var parentTag = parentInfo && parentInfo.tag;\n\t\n\t    if (childText != null) {\n\t      process.env.NODE_ENV !== 'production' ? warning(childTag == null, 'validateDOMNesting: when childText is passed, childTag should be null') : void 0;\n\t      childTag = '#text';\n\t    }\n\t\n\t    var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;\n\t    var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);\n\t    var problematic = invalidParent || invalidAncestor;\n\t\n\t    if (problematic) {\n\t      var ancestorTag = problematic.tag;\n\t      var ancestorInstance = problematic.instance;\n\t\n\t      var childOwner = childInstance && childInstance._currentElement._owner;\n\t      var ancestorOwner = ancestorInstance && ancestorInstance._currentElement._owner;\n\t\n\t      var childOwners = findOwnerStack(childOwner);\n\t      var ancestorOwners = findOwnerStack(ancestorOwner);\n\t\n\t      var minStackLen = Math.min(childOwners.length, ancestorOwners.length);\n\t      var i;\n\t\n\t      var deepestCommon = -1;\n\t      for (i = 0; i < minStackLen; i++) {\n\t        if (childOwners[i] === ancestorOwners[i]) {\n\t          deepestCommon = i;\n\t        } else {\n\t          break;\n\t        }\n\t      }\n\t\n\t      var UNKNOWN = '(unknown)';\n\t      var childOwnerNames = childOwners.slice(deepestCommon + 1).map(function (inst) {\n\t        return inst.getName() || UNKNOWN;\n\t      });\n\t      var ancestorOwnerNames = ancestorOwners.slice(deepestCommon + 1).map(function (inst) {\n\t        return inst.getName() || UNKNOWN;\n\t      });\n\t      var ownerInfo = [].concat(\n\t      // If the parent and child instances have a common owner ancestor, start\n\t      // with that -- otherwise we just start with the parent's owners.\n\t      deepestCommon !== -1 ? childOwners[deepestCommon].getName() || UNKNOWN : [], ancestorOwnerNames, ancestorTag,\n\t      // If we're warning about an invalid (non-parent) ancestry, add '...'\n\t      invalidAncestor ? ['...'] : [], childOwnerNames, childTag).join(' > ');\n\t\n\t      var warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag + '|' + ownerInfo;\n\t      if (didWarn[warnKey]) {\n\t        return;\n\t      }\n\t      didWarn[warnKey] = true;\n\t\n\t      var tagDisplayName = childTag;\n\t      var whitespaceInfo = '';\n\t      if (childTag === '#text') {\n\t        if (/\\S/.test(childText)) {\n\t          tagDisplayName = 'Text nodes';\n\t        } else {\n\t          tagDisplayName = 'Whitespace text nodes';\n\t          whitespaceInfo = ' Make sure you don\\'t have any extra whitespace between tags on ' + 'each line of your source code.';\n\t        }\n\t      } else {\n\t        tagDisplayName = '<' + childTag + '>';\n\t      }\n\t\n\t      if (invalidParent) {\n\t        var info = '';\n\t        if (ancestorTag === 'table' && childTag === 'tr') {\n\t          info += ' Add a <tbody> to your code to match the DOM tree generated by ' + 'the browser.';\n\t        }\n\t        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): %s cannot appear as a child of <%s>.%s ' + 'See %s.%s', tagDisplayName, ancestorTag, whitespaceInfo, ownerInfo, info) : void 0;\n\t      } else {\n\t        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): %s cannot appear as a descendant of ' + '<%s>. See %s.', tagDisplayName, ancestorTag, ownerInfo) : void 0;\n\t      }\n\t    }\n\t  };\n\t\n\t  validateDOMNesting.updatedAncestorInfo = updatedAncestorInfo;\n\t\n\t  // For testing\n\t  validateDOMNesting.isTagValidInContext = function (tag, ancestorInfo) {\n\t    ancestorInfo = ancestorInfo || emptyAncestorInfo;\n\t    var parentInfo = ancestorInfo.current;\n\t    var parentTag = parentInfo && parentInfo.tag;\n\t    return isTagValidWithParent(tag, parentTag) && !findInvalidAncestorForTag(tag, ancestorInfo);\n\t  };\n\t}\n\t\n\tmodule.exports = validateDOMNesting;\n\n/***/ },\n/* 47 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @typechecks\n\t * \n\t */\n\t\n\t/*eslint-disable no-self-compare */\n\t\n\t'use strict';\n\t\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\t\n\t/**\n\t * inlined Object.is polyfill to avoid requiring consumers ship their own\n\t * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n\t */\n\tfunction is(x, y) {\n\t  // SameValue algorithm\n\t  if (x === y) {\n\t    // Steps 1-5, 7-10\n\t    // Steps 6.b-6.e: +0 != -0\n\t    // Added the nonzero y check to make Flow happy, but it is redundant\n\t    return x !== 0 || y !== 0 || 1 / x === 1 / y;\n\t  } else {\n\t    // Step 6.a: NaN == NaN\n\t    return x !== x && y !== y;\n\t  }\n\t}\n\t\n\t/**\n\t * Performs equality by iterating through keys on an object and returning false\n\t * when any key has values which are not strictly equal between the arguments.\n\t * Returns true when the values of all keys are strictly equal.\n\t */\n\tfunction shallowEqual(objA, objB) {\n\t  if (is(objA, objB)) {\n\t    return true;\n\t  }\n\t\n\t  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {\n\t    return false;\n\t  }\n\t\n\t  var keysA = Object.keys(objA);\n\t  var keysB = Object.keys(objB);\n\t\n\t  if (keysA.length !== keysB.length) {\n\t    return false;\n\t  }\n\t\n\t  // Test for A's keys different from B.\n\t  for (var i = 0; i < keysA.length; i++) {\n\t    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {\n\t      return false;\n\t    }\n\t  }\n\t\n\t  return true;\n\t}\n\t\n\tmodule.exports = shallowEqual;\n\n/***/ },\n/* 48 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(20);\n\t\n\tvar ReactNoopUpdateQueue = __webpack_require__(49);\n\t\n\tvar canDefineProperty = __webpack_require__(80);\n\tvar emptyObject = __webpack_require__(51);\n\tvar invariant = __webpack_require__(14);\n\tvar warning = __webpack_require__(12);\n\t\n\t/**\n\t * Base class helpers for the updating state of a component.\n\t */\n\tfunction ReactComponent(props, context, updater) {\n\t  this.props = props;\n\t  this.context = context;\n\t  this.refs = emptyObject;\n\t  // We initialize the default updater but the real one gets injected by the\n\t  // renderer.\n\t  this.updater = updater || ReactNoopUpdateQueue;\n\t}\n\t\n\tReactComponent.prototype.isReactComponent = {};\n\t\n\t/**\n\t * Sets a subset of the state. Always use this to mutate\n\t * state. You should treat `this.state` as immutable.\n\t *\n\t * There is no guarantee that `this.state` will be immediately updated, so\n\t * accessing `this.state` after calling this method may return the old value.\n\t *\n\t * There is no guarantee that calls to `setState` will run synchronously,\n\t * as they may eventually be batched together.  You can provide an optional\n\t * callback that will be executed when the call to setState is actually\n\t * completed.\n\t *\n\t * When a function is provided to setState, it will be called at some point in\n\t * the future (not synchronously). It will be called with the up to date\n\t * component arguments (state, props, context). These values can be different\n\t * from this.* because your function may be called after receiveProps but before\n\t * shouldComponentUpdate, and this new state, props, and context will not yet be\n\t * assigned to this.\n\t *\n\t * @param {object|function} partialState Next partial state or function to\n\t *        produce next partial state to be merged with current state.\n\t * @param {?function} callback Called after state is updated.\n\t * @final\n\t * @protected\n\t */\n\tReactComponent.prototype.setState = function (partialState, callback) {\n\t  !(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ?  false ? invariant(false, 'setState(...): takes an object of state variables to update or a function which returns an object of state variables.') : _prodInvariant('85') : void 0;\n\t  this.updater.enqueueSetState(this, partialState);\n\t  if (callback) {\n\t    this.updater.enqueueCallback(this, callback, 'setState');\n\t  }\n\t};\n\t\n\t/**\n\t * Forces an update. This should only be invoked when it is known with\n\t * certainty that we are **not** in a DOM transaction.\n\t *\n\t * You may want to call this when you know that some deeper aspect of the\n\t * component's state has changed but `setState` was not called.\n\t *\n\t * This will not invoke `shouldComponentUpdate`, but it will invoke\n\t * `componentWillUpdate` and `componentDidUpdate`.\n\t *\n\t * @param {?function} callback Called after update is complete.\n\t * @final\n\t * @protected\n\t */\n\tReactComponent.prototype.forceUpdate = function (callback) {\n\t  this.updater.enqueueForceUpdate(this);\n\t  if (callback) {\n\t    this.updater.enqueueCallback(this, callback, 'forceUpdate');\n\t  }\n\t};\n\t\n\t/**\n\t * Deprecated APIs. These APIs used to exist on classic React classes but since\n\t * we would like to deprecate them, we're not going to move them over to this\n\t * modern base class. Instead, we define a getter that warns if it's accessed.\n\t */\n\tif (false) {\n\t  var deprecatedAPIs = {\n\t    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],\n\t    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']\n\t  };\n\t  var defineDeprecationWarning = function (methodName, info) {\n\t    if (canDefineProperty) {\n\t      Object.defineProperty(ReactComponent.prototype, methodName, {\n\t        get: function () {\n\t          process.env.NODE_ENV !== 'production' ? warning(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]) : void 0;\n\t          return undefined;\n\t        }\n\t      });\n\t    }\n\t  };\n\t  for (var fnName in deprecatedAPIs) {\n\t    if (deprecatedAPIs.hasOwnProperty(fnName)) {\n\t      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);\n\t    }\n\t  }\n\t}\n\t\n\tmodule.exports = ReactComponent;\n\n/***/ },\n/* 49 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2015-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar warning = __webpack_require__(12);\n\t\n\tfunction warnNoop(publicInstance, callerName) {\n\t  if (false) {\n\t    var constructor = publicInstance.constructor;\n\t    process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;\n\t  }\n\t}\n\t\n\t/**\n\t * This is the abstract API for an update queue.\n\t */\n\tvar ReactNoopUpdateQueue = {\n\t\n\t  /**\n\t   * Checks whether or not this composite component is mounted.\n\t   * @param {ReactClass} publicInstance The instance we want to test.\n\t   * @return {boolean} True if mounted, false otherwise.\n\t   * @protected\n\t   * @final\n\t   */\n\t  isMounted: function (publicInstance) {\n\t    return false;\n\t  },\n\t\n\t  /**\n\t   * Enqueue a callback that will be executed after all the pending updates\n\t   * have processed.\n\t   *\n\t   * @param {ReactClass} publicInstance The instance to use as `this` context.\n\t   * @param {?function} callback Called after state is updated.\n\t   * @internal\n\t   */\n\t  enqueueCallback: function (publicInstance, callback) {},\n\t\n\t  /**\n\t   * Forces an update. This should only be invoked when it is known with\n\t   * certainty that we are **not** in a DOM transaction.\n\t   *\n\t   * You may want to call this when you know that some deeper aspect of the\n\t   * component's state has changed but `setState` was not called.\n\t   *\n\t   * This will not invoke `shouldComponentUpdate`, but it will invoke\n\t   * `componentWillUpdate` and `componentDidUpdate`.\n\t   *\n\t   * @param {ReactClass} publicInstance The instance that should rerender.\n\t   * @internal\n\t   */\n\t  enqueueForceUpdate: function (publicInstance) {\n\t    warnNoop(publicInstance, 'forceUpdate');\n\t  },\n\t\n\t  /**\n\t   * Replaces all of the state. Always use this or `setState` to mutate state.\n\t   * You should treat `this.state` as immutable.\n\t   *\n\t   * There is no guarantee that `this.state` will be immediately updated, so\n\t   * accessing `this.state` after calling this method may return the old value.\n\t   *\n\t   * @param {ReactClass} publicInstance The instance that should rerender.\n\t   * @param {object} completeState Next state.\n\t   * @internal\n\t   */\n\t  enqueueReplaceState: function (publicInstance, completeState) {\n\t    warnNoop(publicInstance, 'replaceState');\n\t  },\n\t\n\t  /**\n\t   * Sets a subset of the state. This only exists because _pendingState is\n\t   * internal. This provides a merging strategy that is not available to deep\n\t   * properties which is confusing. TODO: Expose pendingState or don't use it\n\t   * during the merge.\n\t   *\n\t   * @param {ReactClass} publicInstance The instance that should rerender.\n\t   * @param {object} partialState Next partial state to be merged with state.\n\t   * @internal\n\t   */\n\t  enqueueSetState: function (publicInstance, partialState) {\n\t    warnNoop(publicInstance, 'setState');\n\t  }\n\t};\n\t\n\tmodule.exports = ReactNoopUpdateQueue;\n\n/***/ },\n/* 50 */\n9,\n/* 51 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar emptyObject = {};\n\t\n\tif (false) {\n\t  Object.freeze(emptyObject);\n\t}\n\t\n\tmodule.exports = emptyObject;\n\n/***/ },\n/* 52 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * CSS properties which accept numbers but are not in units of \"px\".\n\t */\n\t\n\tvar isUnitlessNumber = {\n\t  animationIterationCount: true,\n\t  borderImageOutset: true,\n\t  borderImageSlice: true,\n\t  borderImageWidth: true,\n\t  boxFlex: true,\n\t  boxFlexGroup: true,\n\t  boxOrdinalGroup: true,\n\t  columnCount: true,\n\t  flex: true,\n\t  flexGrow: true,\n\t  flexPositive: true,\n\t  flexShrink: true,\n\t  flexNegative: true,\n\t  flexOrder: true,\n\t  gridRow: true,\n\t  gridColumn: true,\n\t  fontWeight: true,\n\t  lineClamp: true,\n\t  lineHeight: true,\n\t  opacity: true,\n\t  order: true,\n\t  orphans: true,\n\t  tabSize: true,\n\t  widows: true,\n\t  zIndex: true,\n\t  zoom: true,\n\t\n\t  // SVG-related properties\n\t  fillOpacity: true,\n\t  floodOpacity: true,\n\t  stopOpacity: true,\n\t  strokeDasharray: true,\n\t  strokeDashoffset: true,\n\t  strokeMiterlimit: true,\n\t  strokeOpacity: true,\n\t  strokeWidth: true\n\t};\n\t\n\t/**\n\t * @param {string} prefix vendor-specific prefix, eg: Webkit\n\t * @param {string} key style name, eg: transitionDuration\n\t * @return {string} style name prefixed with `prefix`, properly camelCased, eg:\n\t * WebkitTransitionDuration\n\t */\n\tfunction prefixKey(prefix, key) {\n\t  return prefix + key.charAt(0).toUpperCase() + key.substring(1);\n\t}\n\t\n\t/**\n\t * Support style names that may come passed in prefixed by adding permutations\n\t * of vendor prefixes.\n\t */\n\tvar prefixes = ['Webkit', 'ms', 'Moz', 'O'];\n\t\n\t// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an\n\t// infinite loop, because it iterates over the newly added props too.\n\tObject.keys(isUnitlessNumber).forEach(function (prop) {\n\t  prefixes.forEach(function (prefix) {\n\t    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];\n\t  });\n\t});\n\t\n\t/**\n\t * Most style properties can be unset by doing .style[prop] = '' but IE8\n\t * doesn't like doing that with shorthand properties so for the properties that\n\t * IE8 breaks on, which are listed here, we instead unset each of the\n\t * individual properties. See http://bugs.jquery.com/ticket/12385.\n\t * The 4-value 'clock' properties like margin, padding, border-width seem to\n\t * behave without any problems. Curiously, list-style works too without any\n\t * special prodding.\n\t */\n\tvar shorthandPropertyExpansions = {\n\t  background: {\n\t    backgroundAttachment: true,\n\t    backgroundColor: true,\n\t    backgroundImage: true,\n\t    backgroundPositionX: true,\n\t    backgroundPositionY: true,\n\t    backgroundRepeat: true\n\t  },\n\t  backgroundPosition: {\n\t    backgroundPositionX: true,\n\t    backgroundPositionY: true\n\t  },\n\t  border: {\n\t    borderWidth: true,\n\t    borderStyle: true,\n\t    borderColor: true\n\t  },\n\t  borderBottom: {\n\t    borderBottomWidth: true,\n\t    borderBottomStyle: true,\n\t    borderBottomColor: true\n\t  },\n\t  borderLeft: {\n\t    borderLeftWidth: true,\n\t    borderLeftStyle: true,\n\t    borderLeftColor: true\n\t  },\n\t  borderRight: {\n\t    borderRightWidth: true,\n\t    borderRightStyle: true,\n\t    borderRightColor: true\n\t  },\n\t  borderTop: {\n\t    borderTopWidth: true,\n\t    borderTopStyle: true,\n\t    borderTopColor: true\n\t  },\n\t  font: {\n\t    fontStyle: true,\n\t    fontVariant: true,\n\t    fontWeight: true,\n\t    fontSize: true,\n\t    lineHeight: true,\n\t    fontFamily: true\n\t  },\n\t  outline: {\n\t    outlineWidth: true,\n\t    outlineStyle: true,\n\t    outlineColor: true\n\t  }\n\t};\n\t\n\tvar CSSProperty = {\n\t  isUnitlessNumber: isUnitlessNumber,\n\t  shorthandPropertyExpansions: shorthandPropertyExpansions\n\t};\n\t\n\tmodule.exports = CSSProperty;\n\n/***/ },\n/* 53 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * \n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(2);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar PooledClass = __webpack_require__(13);\n\t\n\tvar invariant = __webpack_require__(1);\n\t\n\t/**\n\t * A specialized pseudo-event module to help keep track of components waiting to\n\t * be notified when their DOM representations are available for use.\n\t *\n\t * This implements `PooledClass`, so you should never need to instantiate this.\n\t * Instead, use `CallbackQueue.getPooled()`.\n\t *\n\t * @class ReactMountReady\n\t * @implements PooledClass\n\t * @internal\n\t */\n\t\n\tvar CallbackQueue = function () {\n\t  function CallbackQueue(arg) {\n\t    _classCallCheck(this, CallbackQueue);\n\t\n\t    this._callbacks = null;\n\t    this._contexts = null;\n\t    this._arg = arg;\n\t  }\n\t\n\t  /**\n\t   * Enqueues a callback to be invoked when `notifyAll` is invoked.\n\t   *\n\t   * @param {function} callback Invoked when `notifyAll` is invoked.\n\t   * @param {?object} context Context to call `callback` with.\n\t   * @internal\n\t   */\n\t\n\t\n\t  CallbackQueue.prototype.enqueue = function enqueue(callback, context) {\n\t    this._callbacks = this._callbacks || [];\n\t    this._callbacks.push(callback);\n\t    this._contexts = this._contexts || [];\n\t    this._contexts.push(context);\n\t  };\n\t\n\t  /**\n\t   * Invokes all enqueued callbacks and clears the queue. This is invoked after\n\t   * the DOM representation of a component has been created or updated.\n\t   *\n\t   * @internal\n\t   */\n\t\n\t\n\t  CallbackQueue.prototype.notifyAll = function notifyAll() {\n\t    var callbacks = this._callbacks;\n\t    var contexts = this._contexts;\n\t    var arg = this._arg;\n\t    if (callbacks && contexts) {\n\t      !(callbacks.length === contexts.length) ?  false ? invariant(false, 'Mismatched list of contexts in callback queue') : _prodInvariant('24') : void 0;\n\t      this._callbacks = null;\n\t      this._contexts = null;\n\t      for (var i = 0; i < callbacks.length; i++) {\n\t        callbacks[i].call(contexts[i], arg);\n\t      }\n\t      callbacks.length = 0;\n\t      contexts.length = 0;\n\t    }\n\t  };\n\t\n\t  CallbackQueue.prototype.checkpoint = function checkpoint() {\n\t    return this._callbacks ? this._callbacks.length : 0;\n\t  };\n\t\n\t  CallbackQueue.prototype.rollback = function rollback(len) {\n\t    if (this._callbacks && this._contexts) {\n\t      this._callbacks.length = len;\n\t      this._contexts.length = len;\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Resets the internal queue.\n\t   *\n\t   * @internal\n\t   */\n\t\n\t\n\t  CallbackQueue.prototype.reset = function reset() {\n\t    this._callbacks = null;\n\t    this._contexts = null;\n\t  };\n\t\n\t  /**\n\t   * `PooledClass` looks for this.\n\t   */\n\t\n\t\n\t  CallbackQueue.prototype.destructor = function destructor() {\n\t    this.reset();\n\t  };\n\t\n\t  return CallbackQueue;\n\t}();\n\t\n\tmodule.exports = PooledClass.addPoolingTo(CallbackQueue);\n\n/***/ },\n/* 54 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar DOMProperty = __webpack_require__(16);\n\tvar ReactDOMComponentTree = __webpack_require__(4);\n\tvar ReactInstrumentation = __webpack_require__(7);\n\t\n\tvar quoteAttributeValueForBrowser = __webpack_require__(143);\n\tvar warning = __webpack_require__(3);\n\t\n\tvar VALID_ATTRIBUTE_NAME_REGEX = new RegExp('^[' + DOMProperty.ATTRIBUTE_NAME_START_CHAR + '][' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$');\n\tvar illegalAttributeNameCache = {};\n\tvar validatedAttributeNameCache = {};\n\t\n\tfunction isAttributeNameSafe(attributeName) {\n\t  if (validatedAttributeNameCache.hasOwnProperty(attributeName)) {\n\t    return true;\n\t  }\n\t  if (illegalAttributeNameCache.hasOwnProperty(attributeName)) {\n\t    return false;\n\t  }\n\t  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {\n\t    validatedAttributeNameCache[attributeName] = true;\n\t    return true;\n\t  }\n\t  illegalAttributeNameCache[attributeName] = true;\n\t   false ? warning(false, 'Invalid attribute name: `%s`', attributeName) : void 0;\n\t  return false;\n\t}\n\t\n\tfunction shouldIgnoreValue(propertyInfo, value) {\n\t  return value == null || propertyInfo.hasBooleanValue && !value || propertyInfo.hasNumericValue && isNaN(value) || propertyInfo.hasPositiveNumericValue && value < 1 || propertyInfo.hasOverloadedBooleanValue && value === false;\n\t}\n\t\n\t/**\n\t * Operations for dealing with DOM properties.\n\t */\n\tvar DOMPropertyOperations = {\n\t\n\t  /**\n\t   * Creates markup for the ID property.\n\t   *\n\t   * @param {string} id Unescaped ID.\n\t   * @return {string} Markup string.\n\t   */\n\t  createMarkupForID: function (id) {\n\t    return DOMProperty.ID_ATTRIBUTE_NAME + '=' + quoteAttributeValueForBrowser(id);\n\t  },\n\t\n\t  setAttributeForID: function (node, id) {\n\t    node.setAttribute(DOMProperty.ID_ATTRIBUTE_NAME, id);\n\t  },\n\t\n\t  createMarkupForRoot: function () {\n\t    return DOMProperty.ROOT_ATTRIBUTE_NAME + '=\"\"';\n\t  },\n\t\n\t  setAttributeForRoot: function (node) {\n\t    node.setAttribute(DOMProperty.ROOT_ATTRIBUTE_NAME, '');\n\t  },\n\t\n\t  /**\n\t   * Creates markup for a property.\n\t   *\n\t   * @param {string} name\n\t   * @param {*} value\n\t   * @return {?string} Markup string, or null if the property was invalid.\n\t   */\n\t  createMarkupForProperty: function (name, value) {\n\t    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;\n\t    if (propertyInfo) {\n\t      if (shouldIgnoreValue(propertyInfo, value)) {\n\t        return '';\n\t      }\n\t      var attributeName = propertyInfo.attributeName;\n\t      if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {\n\t        return attributeName + '=\"\"';\n\t      }\n\t      return attributeName + '=' + quoteAttributeValueForBrowser(value);\n\t    } else if (DOMProperty.isCustomAttribute(name)) {\n\t      if (value == null) {\n\t        return '';\n\t      }\n\t      return name + '=' + quoteAttributeValueForBrowser(value);\n\t    }\n\t    return null;\n\t  },\n\t\n\t  /**\n\t   * Creates markup for a custom property.\n\t   *\n\t   * @param {string} name\n\t   * @param {*} value\n\t   * @return {string} Markup string, or empty string if the property was invalid.\n\t   */\n\t  createMarkupForCustomAttribute: function (name, value) {\n\t    if (!isAttributeNameSafe(name) || value == null) {\n\t      return '';\n\t    }\n\t    return name + '=' + quoteAttributeValueForBrowser(value);\n\t  },\n\t\n\t  /**\n\t   * Sets the value for a property on a node.\n\t   *\n\t   * @param {DOMElement} node\n\t   * @param {string} name\n\t   * @param {*} value\n\t   */\n\t  setValueForProperty: function (node, name, value) {\n\t    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;\n\t    if (propertyInfo) {\n\t      var mutationMethod = propertyInfo.mutationMethod;\n\t      if (mutationMethod) {\n\t        mutationMethod(node, value);\n\t      } else if (shouldIgnoreValue(propertyInfo, value)) {\n\t        this.deleteValueForProperty(node, name);\n\t        return;\n\t      } else if (propertyInfo.mustUseProperty) {\n\t        // Contrary to `setAttribute`, object properties are properly\n\t        // `toString`ed by IE8/9.\n\t        node[propertyInfo.propertyName] = value;\n\t      } else {\n\t        var attributeName = propertyInfo.attributeName;\n\t        var namespace = propertyInfo.attributeNamespace;\n\t        // `setAttribute` with objects becomes only `[object]` in IE8/9,\n\t        // ('' + value) makes it output the correct toString()-value.\n\t        if (namespace) {\n\t          node.setAttributeNS(namespace, attributeName, '' + value);\n\t        } else if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {\n\t          node.setAttribute(attributeName, '');\n\t        } else {\n\t          node.setAttribute(attributeName, '' + value);\n\t        }\n\t      }\n\t    } else if (DOMProperty.isCustomAttribute(name)) {\n\t      DOMPropertyOperations.setValueForAttribute(node, name, value);\n\t      return;\n\t    }\n\t\n\t    if (false) {\n\t      var payload = {};\n\t      payload[name] = value;\n\t      ReactInstrumentation.debugTool.onHostOperation({\n\t        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,\n\t        type: 'update attribute',\n\t        payload: payload\n\t      });\n\t    }\n\t  },\n\t\n\t  setValueForAttribute: function (node, name, value) {\n\t    if (!isAttributeNameSafe(name)) {\n\t      return;\n\t    }\n\t    if (value == null) {\n\t      node.removeAttribute(name);\n\t    } else {\n\t      node.setAttribute(name, '' + value);\n\t    }\n\t\n\t    if (false) {\n\t      var payload = {};\n\t      payload[name] = value;\n\t      ReactInstrumentation.debugTool.onHostOperation({\n\t        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,\n\t        type: 'update attribute',\n\t        payload: payload\n\t      });\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Deletes an attributes from a node.\n\t   *\n\t   * @param {DOMElement} node\n\t   * @param {string} name\n\t   */\n\t  deleteValueForAttribute: function (node, name) {\n\t    node.removeAttribute(name);\n\t    if (false) {\n\t      ReactInstrumentation.debugTool.onHostOperation({\n\t        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,\n\t        type: 'remove attribute',\n\t        payload: name\n\t      });\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Deletes the value for a property on a node.\n\t   *\n\t   * @param {DOMElement} node\n\t   * @param {string} name\n\t   */\n\t  deleteValueForProperty: function (node, name) {\n\t    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;\n\t    if (propertyInfo) {\n\t      var mutationMethod = propertyInfo.mutationMethod;\n\t      if (mutationMethod) {\n\t        mutationMethod(node, undefined);\n\t      } else if (propertyInfo.mustUseProperty) {\n\t        var propName = propertyInfo.propertyName;\n\t        if (propertyInfo.hasBooleanValue) {\n\t          node[propName] = false;\n\t        } else {\n\t          node[propName] = '';\n\t        }\n\t      } else {\n\t        node.removeAttribute(propertyInfo.attributeName);\n\t      }\n\t    } else if (DOMProperty.isCustomAttribute(name)) {\n\t      node.removeAttribute(name);\n\t    }\n\t\n\t    if (false) {\n\t      ReactInstrumentation.debugTool.onHostOperation({\n\t        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,\n\t        type: 'remove attribute',\n\t        payload: name\n\t      });\n\t    }\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = DOMPropertyOperations;\n\n/***/ },\n/* 55 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2015-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactDOMComponentFlags = {\n\t  hasCachedChildNodes: 1 << 0\n\t};\n\t\n\tmodule.exports = ReactDOMComponentFlags;\n\n/***/ },\n/* 56 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar _assign = __webpack_require__(5);\n\t\n\tvar LinkedValueUtils = __webpack_require__(36);\n\tvar ReactDOMComponentTree = __webpack_require__(4);\n\tvar ReactUpdates = __webpack_require__(8);\n\t\n\tvar warning = __webpack_require__(3);\n\t\n\tvar didWarnValueLink = false;\n\tvar didWarnValueDefaultValue = false;\n\t\n\tfunction updateOptionsIfPendingUpdateAndMounted() {\n\t  if (this._rootNodeID && this._wrapperState.pendingUpdate) {\n\t    this._wrapperState.pendingUpdate = false;\n\t\n\t    var props = this._currentElement.props;\n\t    var value = LinkedValueUtils.getValue(props);\n\t\n\t    if (value != null) {\n\t      updateOptions(this, Boolean(props.multiple), value);\n\t    }\n\t  }\n\t}\n\t\n\tfunction getDeclarationErrorAddendum(owner) {\n\t  if (owner) {\n\t    var name = owner.getName();\n\t    if (name) {\n\t      return ' Check the render method of `' + name + '`.';\n\t    }\n\t  }\n\t  return '';\n\t}\n\t\n\tvar valuePropNames = ['value', 'defaultValue'];\n\t\n\t/**\n\t * Validation function for `value` and `defaultValue`.\n\t * @private\n\t */\n\tfunction checkSelectPropTypes(inst, props) {\n\t  var owner = inst._currentElement._owner;\n\t  LinkedValueUtils.checkPropTypes('select', props, owner);\n\t\n\t  if (props.valueLink !== undefined && !didWarnValueLink) {\n\t     false ? warning(false, '`valueLink` prop on `select` is deprecated; set `value` and `onChange` instead.') : void 0;\n\t    didWarnValueLink = true;\n\t  }\n\t\n\t  for (var i = 0; i < valuePropNames.length; i++) {\n\t    var propName = valuePropNames[i];\n\t    if (props[propName] == null) {\n\t      continue;\n\t    }\n\t    var isArray = Array.isArray(props[propName]);\n\t    if (props.multiple && !isArray) {\n\t       false ? warning(false, 'The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;\n\t    } else if (!props.multiple && isArray) {\n\t       false ? warning(false, 'The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * @param {ReactDOMComponent} inst\n\t * @param {boolean} multiple\n\t * @param {*} propValue A stringable (with `multiple`, a list of stringables).\n\t * @private\n\t */\n\tfunction updateOptions(inst, multiple, propValue) {\n\t  var selectedValue, i;\n\t  var options = ReactDOMComponentTree.getNodeFromInstance(inst).options;\n\t\n\t  if (multiple) {\n\t    selectedValue = {};\n\t    for (i = 0; i < propValue.length; i++) {\n\t      selectedValue['' + propValue[i]] = true;\n\t    }\n\t    for (i = 0; i < options.length; i++) {\n\t      var selected = selectedValue.hasOwnProperty(options[i].value);\n\t      if (options[i].selected !== selected) {\n\t        options[i].selected = selected;\n\t      }\n\t    }\n\t  } else {\n\t    // Do not set `select.value` as exact behavior isn't consistent across all\n\t    // browsers for all cases.\n\t    selectedValue = '' + propValue;\n\t    for (i = 0; i < options.length; i++) {\n\t      if (options[i].value === selectedValue) {\n\t        options[i].selected = true;\n\t        return;\n\t      }\n\t    }\n\t    if (options.length) {\n\t      options[0].selected = true;\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Implements a <select> host component that allows optionally setting the\n\t * props `value` and `defaultValue`. If `multiple` is false, the prop must be a\n\t * stringable. If `multiple` is true, the prop must be an array of stringables.\n\t *\n\t * If `value` is not supplied (or null/undefined), user actions that change the\n\t * selected option will trigger updates to the rendered options.\n\t *\n\t * If it is supplied (and not null/undefined), the rendered options will not\n\t * update in response to user actions. Instead, the `value` prop must change in\n\t * order for the rendered options to update.\n\t *\n\t * If `defaultValue` is provided, any options with the supplied values will be\n\t * selected.\n\t */\n\tvar ReactDOMSelect = {\n\t  getHostProps: function (inst, props) {\n\t    return _assign({}, props, {\n\t      onChange: inst._wrapperState.onChange,\n\t      value: undefined\n\t    });\n\t  },\n\t\n\t  mountWrapper: function (inst, props) {\n\t    if (false) {\n\t      checkSelectPropTypes(inst, props);\n\t    }\n\t\n\t    var value = LinkedValueUtils.getValue(props);\n\t    inst._wrapperState = {\n\t      pendingUpdate: false,\n\t      initialValue: value != null ? value : props.defaultValue,\n\t      listeners: null,\n\t      onChange: _handleChange.bind(inst),\n\t      wasMultiple: Boolean(props.multiple)\n\t    };\n\t\n\t    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {\n\t       false ? warning(false, 'Select elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled select ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;\n\t      didWarnValueDefaultValue = true;\n\t    }\n\t  },\n\t\n\t  getSelectValueContext: function (inst) {\n\t    // ReactDOMOption looks at this initial value so the initial generated\n\t    // markup has correct `selected` attributes\n\t    return inst._wrapperState.initialValue;\n\t  },\n\t\n\t  postUpdateWrapper: function (inst) {\n\t    var props = inst._currentElement.props;\n\t\n\t    // After the initial mount, we control selected-ness manually so don't pass\n\t    // this value down\n\t    inst._wrapperState.initialValue = undefined;\n\t\n\t    var wasMultiple = inst._wrapperState.wasMultiple;\n\t    inst._wrapperState.wasMultiple = Boolean(props.multiple);\n\t\n\t    var value = LinkedValueUtils.getValue(props);\n\t    if (value != null) {\n\t      inst._wrapperState.pendingUpdate = false;\n\t      updateOptions(inst, Boolean(props.multiple), value);\n\t    } else if (wasMultiple !== Boolean(props.multiple)) {\n\t      // For simplicity, reapply `defaultValue` if `multiple` is toggled.\n\t      if (props.defaultValue != null) {\n\t        updateOptions(inst, Boolean(props.multiple), props.defaultValue);\n\t      } else {\n\t        // Revert the select back to its default unselected state.\n\t        updateOptions(inst, Boolean(props.multiple), props.multiple ? [] : '');\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\tfunction _handleChange(event) {\n\t  var props = this._currentElement.props;\n\t  var returnValue = LinkedValueUtils.executeOnChange(props, event);\n\t\n\t  if (this._rootNodeID) {\n\t    this._wrapperState.pendingUpdate = true;\n\t  }\n\t  ReactUpdates.asap(updateOptionsIfPendingUpdateAndMounted, this);\n\t  return returnValue;\n\t}\n\t\n\tmodule.exports = ReactDOMSelect;\n\n/***/ },\n/* 57 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2014-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar emptyComponentFactory;\n\t\n\tvar ReactEmptyComponentInjection = {\n\t  injectEmptyComponentFactory: function (factory) {\n\t    emptyComponentFactory = factory;\n\t  }\n\t};\n\t\n\tvar ReactEmptyComponent = {\n\t  create: function (instantiate) {\n\t    return emptyComponentFactory(instantiate);\n\t  }\n\t};\n\t\n\tReactEmptyComponent.injection = ReactEmptyComponentInjection;\n\t\n\tmodule.exports = ReactEmptyComponent;\n\n/***/ },\n/* 58 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * \n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactFeatureFlags = {\n\t  // When true, call console.time() before and .timeEnd() after each top-level\n\t  // render (both initial renders and updates). Useful when looking at prod-mode\n\t  // timeline profiles in Chrome, for example.\n\t  logTopLevelRenders: false\n\t};\n\t\n\tmodule.exports = ReactFeatureFlags;\n\n/***/ },\n/* 59 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2014-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(2);\n\t\n\tvar invariant = __webpack_require__(1);\n\t\n\tvar genericComponentClass = null;\n\tvar textComponentClass = null;\n\t\n\tvar ReactHostComponentInjection = {\n\t  // This accepts a class that receives the tag string. This is a catch all\n\t  // that can render any kind of tag.\n\t  injectGenericComponentClass: function (componentClass) {\n\t    genericComponentClass = componentClass;\n\t  },\n\t  // This accepts a text component class that takes the text string to be\n\t  // rendered as props.\n\t  injectTextComponentClass: function (componentClass) {\n\t    textComponentClass = componentClass;\n\t  }\n\t};\n\t\n\t/**\n\t * Get a host internal component class for a specific tag.\n\t *\n\t * @param {ReactElement} element The element to create.\n\t * @return {function} The internal class constructor function.\n\t */\n\tfunction createInternalComponent(element) {\n\t  !genericComponentClass ?  false ? invariant(false, 'There is no registered component for the tag %s', element.type) : _prodInvariant('111', element.type) : void 0;\n\t  return new genericComponentClass(element);\n\t}\n\t\n\t/**\n\t * @param {ReactText} text\n\t * @return {ReactComponent}\n\t */\n\tfunction createInstanceForText(text) {\n\t  return new textComponentClass(text);\n\t}\n\t\n\t/**\n\t * @param {ReactComponent} component\n\t * @return {boolean}\n\t */\n\tfunction isTextComponent(component) {\n\t  return component instanceof textComponentClass;\n\t}\n\t\n\tvar ReactHostComponent = {\n\t  createInternalComponent: createInternalComponent,\n\t  createInstanceForText: createInstanceForText,\n\t  isTextComponent: isTextComponent,\n\t  injection: ReactHostComponentInjection\n\t};\n\t\n\tmodule.exports = ReactHostComponent;\n\n/***/ },\n/* 60 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactDOMSelection = __webpack_require__(103);\n\t\n\tvar containsNode = __webpack_require__(147);\n\tvar focusNode = __webpack_require__(74);\n\tvar getActiveElement = __webpack_require__(75);\n\t\n\tfunction isInDocument(node) {\n\t  return containsNode(document.documentElement, node);\n\t}\n\t\n\t/**\n\t * @ReactInputSelection: React input selection module. Based on Selection.js,\n\t * but modified to be suitable for react and has a couple of bug fixes (doesn't\n\t * assume buttons have range selections allowed).\n\t * Input selection module for React.\n\t */\n\tvar ReactInputSelection = {\n\t\n\t  hasSelectionCapabilities: function (elem) {\n\t    var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();\n\t    return nodeName && (nodeName === 'input' && elem.type === 'text' || nodeName === 'textarea' || elem.contentEditable === 'true');\n\t  },\n\t\n\t  getSelectionInformation: function () {\n\t    var focusedElem = getActiveElement();\n\t    return {\n\t      focusedElem: focusedElem,\n\t      selectionRange: ReactInputSelection.hasSelectionCapabilities(focusedElem) ? ReactInputSelection.getSelection(focusedElem) : null\n\t    };\n\t  },\n\t\n\t  /**\n\t   * @restoreSelection: If any selection information was potentially lost,\n\t   * restore it. This is useful when performing operations that could remove dom\n\t   * nodes and place them back in, resulting in focus being lost.\n\t   */\n\t  restoreSelection: function (priorSelectionInformation) {\n\t    var curFocusedElem = getActiveElement();\n\t    var priorFocusedElem = priorSelectionInformation.focusedElem;\n\t    var priorSelectionRange = priorSelectionInformation.selectionRange;\n\t    if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {\n\t      if (ReactInputSelection.hasSelectionCapabilities(priorFocusedElem)) {\n\t        ReactInputSelection.setSelection(priorFocusedElem, priorSelectionRange);\n\t      }\n\t      focusNode(priorFocusedElem);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * @getSelection: Gets the selection bounds of a focused textarea, input or\n\t   * contentEditable node.\n\t   * -@input: Look up selection bounds of this input\n\t   * -@return {start: selectionStart, end: selectionEnd}\n\t   */\n\t  getSelection: function (input) {\n\t    var selection;\n\t\n\t    if ('selectionStart' in input) {\n\t      // Modern browser with input or textarea.\n\t      selection = {\n\t        start: input.selectionStart,\n\t        end: input.selectionEnd\n\t      };\n\t    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {\n\t      // IE8 input.\n\t      var range = document.selection.createRange();\n\t      // There can only be one selection per document in IE, so it must\n\t      // be in our element.\n\t      if (range.parentElement() === input) {\n\t        selection = {\n\t          start: -range.moveStart('character', -input.value.length),\n\t          end: -range.moveEnd('character', -input.value.length)\n\t        };\n\t      }\n\t    } else {\n\t      // Content editable or old IE textarea.\n\t      selection = ReactDOMSelection.getOffsets(input);\n\t    }\n\t\n\t    return selection || { start: 0, end: 0 };\n\t  },\n\t\n\t  /**\n\t   * @setSelection: Sets the selection bounds of a textarea or input and focuses\n\t   * the input.\n\t   * -@input     Set selection bounds of this input or textarea\n\t   * -@offsets   Object of same form that is returned from get*\n\t   */\n\t  setSelection: function (input, offsets) {\n\t    var start = offsets.start;\n\t    var end = offsets.end;\n\t    if (end === undefined) {\n\t      end = start;\n\t    }\n\t\n\t    if ('selectionStart' in input) {\n\t      input.selectionStart = start;\n\t      input.selectionEnd = Math.min(end, input.value.length);\n\t    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {\n\t      var range = input.createTextRange();\n\t      range.collapse(true);\n\t      range.moveStart('character', start);\n\t      range.moveEnd('character', end - start);\n\t      range.select();\n\t    } else {\n\t      ReactDOMSelection.setOffsets(input, offsets);\n\t    }\n\t  }\n\t};\n\t\n\tmodule.exports = ReactInputSelection;\n\n/***/ },\n/* 61 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(2);\n\t\n\tvar DOMLazyTree = __webpack_require__(15);\n\tvar DOMProperty = __webpack_require__(16);\n\tvar React = __webpack_require__(18);\n\tvar ReactBrowserEventEmitter = __webpack_require__(25);\n\tvar ReactCurrentOwner = __webpack_require__(11);\n\tvar ReactDOMComponentTree = __webpack_require__(4);\n\tvar ReactDOMContainerInfo = __webpack_require__(97);\n\tvar ReactDOMFeatureFlags = __webpack_require__(99);\n\tvar ReactFeatureFlags = __webpack_require__(58);\n\tvar ReactInstanceMap = __webpack_require__(23);\n\tvar ReactInstrumentation = __webpack_require__(7);\n\tvar ReactMarkupChecksum = __webpack_require__(113);\n\tvar ReactReconciler = __webpack_require__(17);\n\tvar ReactUpdateQueue = __webpack_require__(39);\n\tvar ReactUpdates = __webpack_require__(8);\n\t\n\tvar emptyObject = __webpack_require__(73);\n\tvar instantiateReactComponent = __webpack_require__(68);\n\tvar invariant = __webpack_require__(1);\n\tvar setInnerHTML = __webpack_require__(29);\n\tvar shouldUpdateReactComponent = __webpack_require__(45);\n\tvar warning = __webpack_require__(3);\n\t\n\tvar ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;\n\tvar ROOT_ATTR_NAME = DOMProperty.ROOT_ATTRIBUTE_NAME;\n\t\n\tvar ELEMENT_NODE_TYPE = 1;\n\tvar DOC_NODE_TYPE = 9;\n\tvar DOCUMENT_FRAGMENT_NODE_TYPE = 11;\n\t\n\tvar instancesByReactRootID = {};\n\t\n\t/**\n\t * Finds the index of the first character\n\t * that's not common between the two given strings.\n\t *\n\t * @return {number} the index of the character where the strings diverge\n\t */\n\tfunction firstDifferenceIndex(string1, string2) {\n\t  var minLen = Math.min(string1.length, string2.length);\n\t  for (var i = 0; i < minLen; i++) {\n\t    if (string1.charAt(i) !== string2.charAt(i)) {\n\t      return i;\n\t    }\n\t  }\n\t  return string1.length === string2.length ? -1 : minLen;\n\t}\n\t\n\t/**\n\t * @param {DOMElement|DOMDocument} container DOM element that may contain\n\t * a React component\n\t * @return {?*} DOM element that may have the reactRoot ID, or null.\n\t */\n\tfunction getReactRootElementInContainer(container) {\n\t  if (!container) {\n\t    return null;\n\t  }\n\t\n\t  if (container.nodeType === DOC_NODE_TYPE) {\n\t    return container.documentElement;\n\t  } else {\n\t    return container.firstChild;\n\t  }\n\t}\n\t\n\tfunction internalGetID(node) {\n\t  // If node is something like a window, document, or text node, none of\n\t  // which support attributes or a .getAttribute method, gracefully return\n\t  // the empty string, as if the attribute were missing.\n\t  return node.getAttribute && node.getAttribute(ATTR_NAME) || '';\n\t}\n\t\n\t/**\n\t * Mounts this component and inserts it into the DOM.\n\t *\n\t * @param {ReactComponent} componentInstance The instance to mount.\n\t * @param {DOMElement} container DOM element to mount into.\n\t * @param {ReactReconcileTransaction} transaction\n\t * @param {boolean} shouldReuseMarkup If true, do not insert markup\n\t */\n\tfunction mountComponentIntoNode(wrapperInstance, container, transaction, shouldReuseMarkup, context) {\n\t  var markerName;\n\t  if (ReactFeatureFlags.logTopLevelRenders) {\n\t    var wrappedElement = wrapperInstance._currentElement.props.child;\n\t    var type = wrappedElement.type;\n\t    markerName = 'React mount: ' + (typeof type === 'string' ? type : type.displayName || type.name);\n\t    console.time(markerName);\n\t  }\n\t\n\t  var markup = ReactReconciler.mountComponent(wrapperInstance, transaction, null, ReactDOMContainerInfo(wrapperInstance, container), context, 0 /* parentDebugID */\n\t  );\n\t\n\t  if (markerName) {\n\t    console.timeEnd(markerName);\n\t  }\n\t\n\t  wrapperInstance._renderedComponent._topLevelWrapper = wrapperInstance;\n\t  ReactMount._mountImageIntoNode(markup, container, wrapperInstance, shouldReuseMarkup, transaction);\n\t}\n\t\n\t/**\n\t * Batched mount.\n\t *\n\t * @param {ReactComponent} componentInstance The instance to mount.\n\t * @param {DOMElement} container DOM element to mount into.\n\t * @param {boolean} shouldReuseMarkup If true, do not insert markup\n\t */\n\tfunction batchedMountComponentIntoNode(componentInstance, container, shouldReuseMarkup, context) {\n\t  var transaction = ReactUpdates.ReactReconcileTransaction.getPooled(\n\t  /* useCreateElement */\n\t  !shouldReuseMarkup && ReactDOMFeatureFlags.useCreateElement);\n\t  transaction.perform(mountComponentIntoNode, null, componentInstance, container, transaction, shouldReuseMarkup, context);\n\t  ReactUpdates.ReactReconcileTransaction.release(transaction);\n\t}\n\t\n\t/**\n\t * Unmounts a component and removes it from the DOM.\n\t *\n\t * @param {ReactComponent} instance React component instance.\n\t * @param {DOMElement} container DOM element to unmount from.\n\t * @final\n\t * @internal\n\t * @see {ReactMount.unmountComponentAtNode}\n\t */\n\tfunction unmountComponentFromNode(instance, container, safely) {\n\t  if (false) {\n\t    ReactInstrumentation.debugTool.onBeginFlush();\n\t  }\n\t  ReactReconciler.unmountComponent(instance, safely);\n\t  if (false) {\n\t    ReactInstrumentation.debugTool.onEndFlush();\n\t  }\n\t\n\t  if (container.nodeType === DOC_NODE_TYPE) {\n\t    container = container.documentElement;\n\t  }\n\t\n\t  // http://jsperf.com/emptying-a-node\n\t  while (container.lastChild) {\n\t    container.removeChild(container.lastChild);\n\t  }\n\t}\n\t\n\t/**\n\t * True if the supplied DOM node has a direct React-rendered child that is\n\t * not a React root element. Useful for warning in `render`,\n\t * `unmountComponentAtNode`, etc.\n\t *\n\t * @param {?DOMElement} node The candidate DOM node.\n\t * @return {boolean} True if the DOM element contains a direct child that was\n\t * rendered by React but is not a root element.\n\t * @internal\n\t */\n\tfunction hasNonRootReactChild(container) {\n\t  var rootEl = getReactRootElementInContainer(container);\n\t  if (rootEl) {\n\t    var inst = ReactDOMComponentTree.getInstanceFromNode(rootEl);\n\t    return !!(inst && inst._hostParent);\n\t  }\n\t}\n\t\n\t/**\n\t * True if the supplied DOM node is a React DOM element and\n\t * it has been rendered by another copy of React.\n\t *\n\t * @param {?DOMElement} node The candidate DOM node.\n\t * @return {boolean} True if the DOM has been rendered by another copy of React\n\t * @internal\n\t */\n\tfunction nodeIsRenderedByOtherInstance(container) {\n\t  var rootEl = getReactRootElementInContainer(container);\n\t  return !!(rootEl && isReactNode(rootEl) && !ReactDOMComponentTree.getInstanceFromNode(rootEl));\n\t}\n\t\n\t/**\n\t * True if the supplied DOM node is a valid node element.\n\t *\n\t * @param {?DOMElement} node The candidate DOM node.\n\t * @return {boolean} True if the DOM is a valid DOM node.\n\t * @internal\n\t */\n\tfunction isValidContainer(node) {\n\t  return !!(node && (node.nodeType === ELEMENT_NODE_TYPE || node.nodeType === DOC_NODE_TYPE || node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE));\n\t}\n\t\n\t/**\n\t * True if the supplied DOM node is a valid React node element.\n\t *\n\t * @param {?DOMElement} node The candidate DOM node.\n\t * @return {boolean} True if the DOM is a valid React DOM node.\n\t * @internal\n\t */\n\tfunction isReactNode(node) {\n\t  return isValidContainer(node) && (node.hasAttribute(ROOT_ATTR_NAME) || node.hasAttribute(ATTR_NAME));\n\t}\n\t\n\tfunction getHostRootInstanceInContainer(container) {\n\t  var rootEl = getReactRootElementInContainer(container);\n\t  var prevHostInstance = rootEl && ReactDOMComponentTree.getInstanceFromNode(rootEl);\n\t  return prevHostInstance && !prevHostInstance._hostParent ? prevHostInstance : null;\n\t}\n\t\n\tfunction getTopLevelWrapperInContainer(container) {\n\t  var root = getHostRootInstanceInContainer(container);\n\t  return root ? root._hostContainerInfo._topLevelWrapper : null;\n\t}\n\t\n\t/**\n\t * Temporary (?) hack so that we can store all top-level pending updates on\n\t * composites instead of having to worry about different types of components\n\t * here.\n\t */\n\tvar topLevelRootCounter = 1;\n\tvar TopLevelWrapper = function () {\n\t  this.rootID = topLevelRootCounter++;\n\t};\n\tTopLevelWrapper.prototype.isReactComponent = {};\n\tif (false) {\n\t  TopLevelWrapper.displayName = 'TopLevelWrapper';\n\t}\n\tTopLevelWrapper.prototype.render = function () {\n\t  return this.props.child;\n\t};\n\tTopLevelWrapper.isReactTopLevelWrapper = true;\n\t\n\t/**\n\t * Mounting is the process of initializing a React component by creating its\n\t * representative DOM elements and inserting them into a supplied `container`.\n\t * Any prior content inside `container` is destroyed in the process.\n\t *\n\t *   ReactMount.render(\n\t *     component,\n\t *     document.getElementById('container')\n\t *   );\n\t *\n\t *   <div id=\"container\">                   <-- Supplied `container`.\n\t *     <div data-reactid=\".3\">              <-- Rendered reactRoot of React\n\t *       // ...                                 component.\n\t *     </div>\n\t *   </div>\n\t *\n\t * Inside of `container`, the first element rendered is the \"reactRoot\".\n\t */\n\tvar ReactMount = {\n\t\n\t  TopLevelWrapper: TopLevelWrapper,\n\t\n\t  /**\n\t   * Used by devtools. The keys are not important.\n\t   */\n\t  _instancesByReactRootID: instancesByReactRootID,\n\t\n\t  /**\n\t   * This is a hook provided to support rendering React components while\n\t   * ensuring that the apparent scroll position of its `container` does not\n\t   * change.\n\t   *\n\t   * @param {DOMElement} container The `container` being rendered into.\n\t   * @param {function} renderCallback This must be called once to do the render.\n\t   */\n\t  scrollMonitor: function (container, renderCallback) {\n\t    renderCallback();\n\t  },\n\t\n\t  /**\n\t   * Take a component that's already mounted into the DOM and replace its props\n\t   * @param {ReactComponent} prevComponent component instance already in the DOM\n\t   * @param {ReactElement} nextElement component instance to render\n\t   * @param {DOMElement} container container to render into\n\t   * @param {?function} callback function triggered on completion\n\t   */\n\t  _updateRootComponent: function (prevComponent, nextElement, nextContext, container, callback) {\n\t    ReactMount.scrollMonitor(container, function () {\n\t      ReactUpdateQueue.enqueueElementInternal(prevComponent, nextElement, nextContext);\n\t      if (callback) {\n\t        ReactUpdateQueue.enqueueCallbackInternal(prevComponent, callback);\n\t      }\n\t    });\n\t\n\t    return prevComponent;\n\t  },\n\t\n\t  /**\n\t   * Render a new component into the DOM. Hooked by hooks!\n\t   *\n\t   * @param {ReactElement} nextElement element to render\n\t   * @param {DOMElement} container container to render into\n\t   * @param {boolean} shouldReuseMarkup if we should skip the markup insertion\n\t   * @return {ReactComponent} nextComponent\n\t   */\n\t  _renderNewRootComponent: function (nextElement, container, shouldReuseMarkup, context) {\n\t    // Various parts of our code (such as ReactCompositeComponent's\n\t    // _renderValidatedComponent) assume that calls to render aren't nested;\n\t    // verify that that's the case.\n\t     false ? warning(ReactCurrentOwner.current == null, '_renderNewRootComponent(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from ' + 'render is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;\n\t\n\t    !isValidContainer(container) ?  false ? invariant(false, '_registerComponent(...): Target container is not a DOM element.') : _prodInvariant('37') : void 0;\n\t\n\t    ReactBrowserEventEmitter.ensureScrollValueMonitoring();\n\t    var componentInstance = instantiateReactComponent(nextElement, false);\n\t\n\t    // The initial render is synchronous but any updates that happen during\n\t    // rendering, in componentWillMount or componentDidMount, will be batched\n\t    // according to the current batching strategy.\n\t\n\t    ReactUpdates.batchedUpdates(batchedMountComponentIntoNode, componentInstance, container, shouldReuseMarkup, context);\n\t\n\t    var wrapperID = componentInstance._instance.rootID;\n\t    instancesByReactRootID[wrapperID] = componentInstance;\n\t\n\t    return componentInstance;\n\t  },\n\t\n\t  /**\n\t   * Renders a React component into the DOM in the supplied `container`.\n\t   *\n\t   * If the React component was previously rendered into `container`, this will\n\t   * perform an update on it and only mutate the DOM as necessary to reflect the\n\t   * latest React component.\n\t   *\n\t   * @param {ReactComponent} parentComponent The conceptual parent of this render tree.\n\t   * @param {ReactElement} nextElement Component element to render.\n\t   * @param {DOMElement} container DOM element to render into.\n\t   * @param {?function} callback function triggered on completion\n\t   * @return {ReactComponent} Component instance rendered in `container`.\n\t   */\n\t  renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {\n\t    !(parentComponent != null && ReactInstanceMap.has(parentComponent)) ?  false ? invariant(false, 'parentComponent must be a valid React Component') : _prodInvariant('38') : void 0;\n\t    return ReactMount._renderSubtreeIntoContainer(parentComponent, nextElement, container, callback);\n\t  },\n\t\n\t  _renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {\n\t    ReactUpdateQueue.validateCallback(callback, 'ReactDOM.render');\n\t    !React.isValidElement(nextElement) ?  false ? invariant(false, 'ReactDOM.render(): Invalid component element.%s', typeof nextElement === 'string' ? ' Instead of passing a string like \\'div\\', pass ' + 'React.createElement(\\'div\\') or <div />.' : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' :\n\t    // Check if it quacks like an element\n\t    nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : _prodInvariant('39', typeof nextElement === 'string' ? ' Instead of passing a string like \\'div\\', pass ' + 'React.createElement(\\'div\\') or <div />.' : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' : nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : void 0;\n\t\n\t     false ? warning(!container || !container.tagName || container.tagName.toUpperCase() !== 'BODY', 'render(): Rendering components directly into document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try rendering into a container element created ' + 'for your app.') : void 0;\n\t\n\t    var nextWrappedElement = React.createElement(TopLevelWrapper, { child: nextElement });\n\t\n\t    var nextContext;\n\t    if (parentComponent) {\n\t      var parentInst = ReactInstanceMap.get(parentComponent);\n\t      nextContext = parentInst._processChildContext(parentInst._context);\n\t    } else {\n\t      nextContext = emptyObject;\n\t    }\n\t\n\t    var prevComponent = getTopLevelWrapperInContainer(container);\n\t\n\t    if (prevComponent) {\n\t      var prevWrappedElement = prevComponent._currentElement;\n\t      var prevElement = prevWrappedElement.props.child;\n\t      if (shouldUpdateReactComponent(prevElement, nextElement)) {\n\t        var publicInst = prevComponent._renderedComponent.getPublicInstance();\n\t        var updatedCallback = callback && function () {\n\t          callback.call(publicInst);\n\t        };\n\t        ReactMount._updateRootComponent(prevComponent, nextWrappedElement, nextContext, container, updatedCallback);\n\t        return publicInst;\n\t      } else {\n\t        ReactMount.unmountComponentAtNode(container);\n\t      }\n\t    }\n\t\n\t    var reactRootElement = getReactRootElementInContainer(container);\n\t    var containerHasReactMarkup = reactRootElement && !!internalGetID(reactRootElement);\n\t    var containerHasNonRootReactChild = hasNonRootReactChild(container);\n\t\n\t    if (false) {\n\t      process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'render(...): Replacing React-rendered children with a new root ' + 'component. If you intended to update the children of this node, ' + 'you should instead have the existing children update their state ' + 'and render the new components instead of calling ReactDOM.render.') : void 0;\n\t\n\t      if (!containerHasReactMarkup || reactRootElement.nextSibling) {\n\t        var rootElementSibling = reactRootElement;\n\t        while (rootElementSibling) {\n\t          if (internalGetID(rootElementSibling)) {\n\t            process.env.NODE_ENV !== 'production' ? warning(false, 'render(): Target node has markup rendered by React, but there ' + 'are unrelated nodes as well. This is most commonly caused by ' + 'white-space inserted around server-rendered markup.') : void 0;\n\t            break;\n\t          }\n\t          rootElementSibling = rootElementSibling.nextSibling;\n\t        }\n\t      }\n\t    }\n\t\n\t    var shouldReuseMarkup = containerHasReactMarkup && !prevComponent && !containerHasNonRootReactChild;\n\t    var component = ReactMount._renderNewRootComponent(nextWrappedElement, container, shouldReuseMarkup, nextContext)._renderedComponent.getPublicInstance();\n\t    if (callback) {\n\t      callback.call(component);\n\t    }\n\t    return component;\n\t  },\n\t\n\t  /**\n\t   * Renders a React component into the DOM in the supplied `container`.\n\t   * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.render\n\t   *\n\t   * If the React component was previously rendered into `container`, this will\n\t   * perform an update on it and only mutate the DOM as necessary to reflect the\n\t   * latest React component.\n\t   *\n\t   * @param {ReactElement} nextElement Component element to render.\n\t   * @param {DOMElement} container DOM element to render into.\n\t   * @param {?function} callback function triggered on completion\n\t   * @return {ReactComponent} Component instance rendered in `container`.\n\t   */\n\t  render: function (nextElement, container, callback) {\n\t    return ReactMount._renderSubtreeIntoContainer(null, nextElement, container, callback);\n\t  },\n\t\n\t  /**\n\t   * Unmounts and destroys the React component rendered in the `container`.\n\t   * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.unmountcomponentatnode\n\t   *\n\t   * @param {DOMElement} container DOM element containing a React component.\n\t   * @return {boolean} True if a component was found in and unmounted from\n\t   *                   `container`\n\t   */\n\t  unmountComponentAtNode: function (container) {\n\t    // Various parts of our code (such as ReactCompositeComponent's\n\t    // _renderValidatedComponent) assume that calls to render aren't nested;\n\t    // verify that that's the case. (Strictly speaking, unmounting won't cause a\n\t    // render but we still don't expect to be in a render call here.)\n\t     false ? warning(ReactCurrentOwner.current == null, 'unmountComponentAtNode(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from render ' + 'is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;\n\t\n\t    !isValidContainer(container) ?  false ? invariant(false, 'unmountComponentAtNode(...): Target container is not a DOM element.') : _prodInvariant('40') : void 0;\n\t\n\t    if (false) {\n\t      process.env.NODE_ENV !== 'production' ? warning(!nodeIsRenderedByOtherInstance(container), 'unmountComponentAtNode(): The node you\\'re attempting to unmount ' + 'was rendered by another copy of React.') : void 0;\n\t    }\n\t\n\t    var prevComponent = getTopLevelWrapperInContainer(container);\n\t    if (!prevComponent) {\n\t      // Check if the node being unmounted was rendered by React, but isn't a\n\t      // root node.\n\t      var containerHasNonRootReactChild = hasNonRootReactChild(container);\n\t\n\t      // Check if the container itself is a React root node.\n\t      var isContainerReactRoot = container.nodeType === 1 && container.hasAttribute(ROOT_ATTR_NAME);\n\t\n\t      if (false) {\n\t        process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'unmountComponentAtNode(): The node you\\'re attempting to unmount ' + 'was rendered by React and is not a top-level container. %s', isContainerReactRoot ? 'You may have accidentally passed in a React root node instead ' + 'of its container.' : 'Instead, have the parent component update its state and ' + 'rerender in order to remove this component.') : void 0;\n\t      }\n\t\n\t      return false;\n\t    }\n\t    delete instancesByReactRootID[prevComponent._instance.rootID];\n\t    ReactUpdates.batchedUpdates(unmountComponentFromNode, prevComponent, container, false);\n\t    return true;\n\t  },\n\t\n\t  _mountImageIntoNode: function (markup, container, instance, shouldReuseMarkup, transaction) {\n\t    !isValidContainer(container) ?  false ? invariant(false, 'mountComponentIntoNode(...): Target container is not valid.') : _prodInvariant('41') : void 0;\n\t\n\t    if (shouldReuseMarkup) {\n\t      var rootElement = getReactRootElementInContainer(container);\n\t      if (ReactMarkupChecksum.canReuseMarkup(markup, rootElement)) {\n\t        ReactDOMComponentTree.precacheNode(instance, rootElement);\n\t        return;\n\t      } else {\n\t        var checksum = rootElement.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);\n\t        rootElement.removeAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);\n\t\n\t        var rootMarkup = rootElement.outerHTML;\n\t        rootElement.setAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME, checksum);\n\t\n\t        var normalizedMarkup = markup;\n\t        if (false) {\n\t          // because rootMarkup is retrieved from the DOM, various normalizations\n\t          // will have occurred which will not be present in `markup`. Here,\n\t          // insert markup into a <div> or <iframe> depending on the container\n\t          // type to perform the same normalizations before comparing.\n\t          var normalizer;\n\t          if (container.nodeType === ELEMENT_NODE_TYPE) {\n\t            normalizer = document.createElement('div');\n\t            normalizer.innerHTML = markup;\n\t            normalizedMarkup = normalizer.innerHTML;\n\t          } else {\n\t            normalizer = document.createElement('iframe');\n\t            document.body.appendChild(normalizer);\n\t            normalizer.contentDocument.write(markup);\n\t            normalizedMarkup = normalizer.contentDocument.documentElement.outerHTML;\n\t            document.body.removeChild(normalizer);\n\t          }\n\t        }\n\t\n\t        var diffIndex = firstDifferenceIndex(normalizedMarkup, rootMarkup);\n\t        var difference = ' (client) ' + normalizedMarkup.substring(diffIndex - 20, diffIndex + 20) + '\\n (server) ' + rootMarkup.substring(diffIndex - 20, diffIndex + 20);\n\t\n\t        !(container.nodeType !== DOC_NODE_TYPE) ?  false ? invariant(false, 'You\\'re trying to render a component to the document using server rendering but the checksum was invalid. This usually means you rendered a different component type or props on the client from the one on the server, or your render() methods are impure. React cannot handle this case due to cross-browser quirks by rendering at the document root. You should look for environment dependent code in your components and ensure the props are the same client and server side:\\n%s', difference) : _prodInvariant('42', difference) : void 0;\n\t\n\t        if (false) {\n\t          process.env.NODE_ENV !== 'production' ? warning(false, 'React attempted to reuse markup in a container but the ' + 'checksum was invalid. This generally means that you are ' + 'using server rendering and the markup generated on the ' + 'server was not what the client was expecting. React injected ' + 'new markup to compensate which works but you have lost many ' + 'of the benefits of server rendering. Instead, figure out ' + 'why the markup being generated is different on the client ' + 'or server:\\n%s', difference) : void 0;\n\t        }\n\t      }\n\t    }\n\t\n\t    !(container.nodeType !== DOC_NODE_TYPE) ?  false ? invariant(false, 'You\\'re trying to render a component to the document but you didn\\'t use server rendering. We can\\'t do this without using server rendering due to cross-browser quirks. See ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('43') : void 0;\n\t\n\t    if (transaction.useCreateElement) {\n\t      while (container.lastChild) {\n\t        container.removeChild(container.lastChild);\n\t      }\n\t      DOMLazyTree.insertTreeBefore(container, markup, null);\n\t    } else {\n\t      setInnerHTML(container, markup);\n\t      ReactDOMComponentTree.precacheNode(instance, container.firstChild);\n\t    }\n\t\n\t    if (false) {\n\t      var hostNode = ReactDOMComponentTree.getInstanceFromNode(container.firstChild);\n\t      if (hostNode._debugID !== 0) {\n\t        ReactInstrumentation.debugTool.onHostOperation({\n\t          instanceID: hostNode._debugID,\n\t          type: 'mount',\n\t          payload: markup.toString()\n\t        });\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\tmodule.exports = ReactMount;\n\n/***/ },\n/* 62 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * \n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(2);\n\t\n\tvar React = __webpack_require__(18);\n\t\n\tvar invariant = __webpack_require__(1);\n\t\n\tvar ReactNodeTypes = {\n\t  HOST: 0,\n\t  COMPOSITE: 1,\n\t  EMPTY: 2,\n\t\n\t  getType: function (node) {\n\t    if (node === null || node === false) {\n\t      return ReactNodeTypes.EMPTY;\n\t    } else if (React.isValidElement(node)) {\n\t      if (typeof node.type === 'function') {\n\t        return ReactNodeTypes.COMPOSITE;\n\t      } else {\n\t        return ReactNodeTypes.HOST;\n\t      }\n\t    }\n\t     true ?  false ? invariant(false, 'Unexpected node: %s', node) : _prodInvariant('26', node) : void 0;\n\t  }\n\t};\n\t\n\tmodule.exports = ReactNodeTypes;\n\n/***/ },\n/* 63 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar ViewportMetrics = {\n\t\n\t  currentScrollLeft: 0,\n\t\n\t  currentScrollTop: 0,\n\t\n\t  refreshScrollValues: function (scrollPosition) {\n\t    ViewportMetrics.currentScrollLeft = scrollPosition.x;\n\t    ViewportMetrics.currentScrollTop = scrollPosition.y;\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = ViewportMetrics;\n\n/***/ },\n/* 64 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2014-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * \n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(2);\n\t\n\tvar invariant = __webpack_require__(1);\n\t\n\t/**\n\t * Accumulates items that must not be null or undefined into the first one. This\n\t * is used to conserve memory by avoiding array allocations, and thus sacrifices\n\t * API cleanness. Since `current` can be null before being passed in and not\n\t * null after this function, make sure to assign it back to `current`:\n\t *\n\t * `a = accumulateInto(a, b);`\n\t *\n\t * This API should be sparingly used. Try `accumulate` for something cleaner.\n\t *\n\t * @return {*|array<*>} An accumulation of items.\n\t */\n\t\n\tfunction accumulateInto(current, next) {\n\t  !(next != null) ?  false ? invariant(false, 'accumulateInto(...): Accumulated items must not be null or undefined.') : _prodInvariant('30') : void 0;\n\t\n\t  if (current == null) {\n\t    return next;\n\t  }\n\t\n\t  // Both are not empty. Warning: Never call x.concat(y) when you are not\n\t  // certain that x is an Array (x could be a string with concat method).\n\t  if (Array.isArray(current)) {\n\t    if (Array.isArray(next)) {\n\t      current.push.apply(current, next);\n\t      return current;\n\t    }\n\t    current.push(next);\n\t    return current;\n\t  }\n\t\n\t  if (Array.isArray(next)) {\n\t    // A bit too dangerous to mutate `next`.\n\t    return [current].concat(next);\n\t  }\n\t\n\t  return [current, next];\n\t}\n\t\n\tmodule.exports = accumulateInto;\n\n/***/ },\n/* 65 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * \n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * @param {array} arr an \"accumulation\" of items which is either an Array or\n\t * a single item. Useful when paired with the `accumulate` module. This is a\n\t * simple utility that allows us to reason about a collection of items, but\n\t * handling the case when there is exactly one item (and we do not need to\n\t * allocate an array).\n\t */\n\t\n\tfunction forEachAccumulated(arr, cb, scope) {\n\t  if (Array.isArray(arr)) {\n\t    arr.forEach(cb, scope);\n\t  } else if (arr) {\n\t    cb.call(scope, arr);\n\t  }\n\t}\n\t\n\tmodule.exports = forEachAccumulated;\n\n/***/ },\n/* 66 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactNodeTypes = __webpack_require__(62);\n\t\n\tfunction getHostComponentFromComposite(inst) {\n\t  var type;\n\t\n\t  while ((type = inst._renderedNodeType) === ReactNodeTypes.COMPOSITE) {\n\t    inst = inst._renderedComponent;\n\t  }\n\t\n\t  if (type === ReactNodeTypes.HOST) {\n\t    return inst._renderedComponent;\n\t  } else if (type === ReactNodeTypes.EMPTY) {\n\t    return null;\n\t  }\n\t}\n\t\n\tmodule.exports = getHostComponentFromComposite;\n\n/***/ },\n/* 67 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar ExecutionEnvironment = __webpack_require__(6);\n\t\n\tvar contentKey = null;\n\t\n\t/**\n\t * Gets the key used to access text content on a DOM node.\n\t *\n\t * @return {?string} Key used to access text content.\n\t * @internal\n\t */\n\tfunction getTextContentAccessor() {\n\t  if (!contentKey && ExecutionEnvironment.canUseDOM) {\n\t    // Prefer textContent to innerText because many browsers support both but\n\t    // SVG <text> elements don't support innerText even when <div> does.\n\t    contentKey = 'textContent' in document.documentElement ? 'textContent' : 'innerText';\n\t  }\n\t  return contentKey;\n\t}\n\t\n\tmodule.exports = getTextContentAccessor;\n\n/***/ },\n/* 68 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(2),\n\t    _assign = __webpack_require__(5);\n\t\n\tvar ReactCompositeComponent = __webpack_require__(94);\n\tvar ReactEmptyComponent = __webpack_require__(57);\n\tvar ReactHostComponent = __webpack_require__(59);\n\t\n\tvar getNextDebugID = __webpack_require__(179);\n\tvar invariant = __webpack_require__(1);\n\tvar warning = __webpack_require__(3);\n\t\n\t// To avoid a cyclic dependency, we create the final class in this module\n\tvar ReactCompositeComponentWrapper = function (element) {\n\t  this.construct(element);\n\t};\n\t\n\tfunction getDeclarationErrorAddendum(owner) {\n\t  if (owner) {\n\t    var name = owner.getName();\n\t    if (name) {\n\t      return ' Check the render method of `' + name + '`.';\n\t    }\n\t  }\n\t  return '';\n\t}\n\t\n\t/**\n\t * Check if the type reference is a known internal type. I.e. not a user\n\t * provided composite type.\n\t *\n\t * @param {function} type\n\t * @return {boolean} Returns true if this is a valid internal type.\n\t */\n\tfunction isInternalComponentType(type) {\n\t  return typeof type === 'function' && typeof type.prototype !== 'undefined' && typeof type.prototype.mountComponent === 'function' && typeof type.prototype.receiveComponent === 'function';\n\t}\n\t\n\t/**\n\t * Given a ReactNode, create an instance that will actually be mounted.\n\t *\n\t * @param {ReactNode} node\n\t * @param {boolean} shouldHaveDebugID\n\t * @return {object} A new instance of the element's constructor.\n\t * @protected\n\t */\n\tfunction instantiateReactComponent(node, shouldHaveDebugID) {\n\t  var instance;\n\t\n\t  if (node === null || node === false) {\n\t    instance = ReactEmptyComponent.create(instantiateReactComponent);\n\t  } else if (typeof node === 'object') {\n\t    var element = node;\n\t    var type = element.type;\n\t    if (typeof type !== 'function' && typeof type !== 'string') {\n\t      var info = '';\n\t      if (false) {\n\t        if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n\t          info += ' You likely forgot to export your component from the file ' + 'it\\'s defined in.';\n\t        }\n\t      }\n\t      info += getDeclarationErrorAddendum(element._owner);\n\t       true ?  false ? invariant(false, 'Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s', type == null ? type : typeof type, info) : _prodInvariant('130', type == null ? type : typeof type, info) : void 0;\n\t    }\n\t\n\t    // Special case string values\n\t    if (typeof element.type === 'string') {\n\t      instance = ReactHostComponent.createInternalComponent(element);\n\t    } else if (isInternalComponentType(element.type)) {\n\t      // This is temporarily available for custom components that are not string\n\t      // representations. I.e. ART. Once those are updated to use the string\n\t      // representation, we can drop this code path.\n\t      instance = new element.type(element);\n\t\n\t      // We renamed this. Allow the old name for compat. :(\n\t      if (!instance.getHostNode) {\n\t        instance.getHostNode = instance.getNativeNode;\n\t      }\n\t    } else {\n\t      instance = new ReactCompositeComponentWrapper(element);\n\t    }\n\t  } else if (typeof node === 'string' || typeof node === 'number') {\n\t    instance = ReactHostComponent.createInstanceForText(node);\n\t  } else {\n\t     true ?  false ? invariant(false, 'Encountered invalid React node of type %s', typeof node) : _prodInvariant('131', typeof node) : void 0;\n\t  }\n\t\n\t  if (false) {\n\t    process.env.NODE_ENV !== 'production' ? warning(typeof instance.mountComponent === 'function' && typeof instance.receiveComponent === 'function' && typeof instance.getHostNode === 'function' && typeof instance.unmountComponent === 'function', 'Only React Components can be mounted.') : void 0;\n\t  }\n\t\n\t  // These two fields are used by the DOM and ART diffing algorithms\n\t  // respectively. Instead of using expandos on components, we should be\n\t  // storing the state needed by the diffing algorithms elsewhere.\n\t  instance._mountIndex = 0;\n\t  instance._mountImage = null;\n\t\n\t  if (false) {\n\t    instance._debugID = shouldHaveDebugID ? getNextDebugID() : 0;\n\t  }\n\t\n\t  // Internal instances should fully constructed at this point, so they should\n\t  // not get any new fields added to them at this point.\n\t  if (false) {\n\t    if (Object.preventExtensions) {\n\t      Object.preventExtensions(instance);\n\t    }\n\t  }\n\t\n\t  return instance;\n\t}\n\t\n\t_assign(ReactCompositeComponentWrapper.prototype, ReactCompositeComponent, {\n\t  _instantiateReactComponent: instantiateReactComponent\n\t});\n\t\n\tmodule.exports = instantiateReactComponent;\n\n/***/ },\n/* 69 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * \n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary\n\t */\n\t\n\tvar supportedInputTypes = {\n\t  'color': true,\n\t  'date': true,\n\t  'datetime': true,\n\t  'datetime-local': true,\n\t  'email': true,\n\t  'month': true,\n\t  'number': true,\n\t  'password': true,\n\t  'range': true,\n\t  'search': true,\n\t  'tel': true,\n\t  'text': true,\n\t  'time': true,\n\t  'url': true,\n\t  'week': true\n\t};\n\t\n\tfunction isTextInputElement(elem) {\n\t  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();\n\t\n\t  if (nodeName === 'input') {\n\t    return !!supportedInputTypes[elem.type];\n\t  }\n\t\n\t  if (nodeName === 'textarea') {\n\t    return true;\n\t  }\n\t\n\t  return false;\n\t}\n\t\n\tmodule.exports = isTextInputElement;\n\n/***/ },\n/* 70 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar ExecutionEnvironment = __webpack_require__(6);\n\tvar escapeTextContentForBrowser = __webpack_require__(28);\n\tvar setInnerHTML = __webpack_require__(29);\n\t\n\t/**\n\t * Set the textContent property of a node, ensuring that whitespace is preserved\n\t * even in IE8. innerText is a poor substitute for textContent and, among many\n\t * issues, inserts <br> instead of the literal newline chars. innerHTML behaves\n\t * as it should.\n\t *\n\t * @param {DOMElement} node\n\t * @param {string} text\n\t * @internal\n\t */\n\tvar setTextContent = function (node, text) {\n\t  if (text) {\n\t    var firstChild = node.firstChild;\n\t\n\t    if (firstChild && firstChild === node.lastChild && firstChild.nodeType === 3) {\n\t      firstChild.nodeValue = text;\n\t      return;\n\t    }\n\t  }\n\t  node.textContent = text;\n\t};\n\t\n\tif (ExecutionEnvironment.canUseDOM) {\n\t  if (!('textContent' in document.documentElement)) {\n\t    setTextContent = function (node, text) {\n\t      if (node.nodeType === 3) {\n\t        node.nodeValue = text;\n\t        return;\n\t      }\n\t      setInnerHTML(node, escapeTextContentForBrowser(text));\n\t    };\n\t  }\n\t}\n\t\n\tmodule.exports = setTextContent;\n\n/***/ },\n/* 71 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(2);\n\t\n\tvar ReactCurrentOwner = __webpack_require__(11);\n\tvar REACT_ELEMENT_TYPE = __webpack_require__(109);\n\t\n\tvar getIteratorFn = __webpack_require__(140);\n\tvar invariant = __webpack_require__(1);\n\tvar KeyEscapeUtils = __webpack_require__(35);\n\tvar warning = __webpack_require__(3);\n\t\n\tvar SEPARATOR = '.';\n\tvar SUBSEPARATOR = ':';\n\t\n\t/**\n\t * This is inlined from ReactElement since this file is shared between\n\t * isomorphic and renderers. We could extract this to a\n\t *\n\t */\n\t\n\t/**\n\t * TODO: Test that a single child and an array with one item have the same key\n\t * pattern.\n\t */\n\t\n\tvar didWarnAboutMaps = false;\n\t\n\t/**\n\t * Generate a key string that identifies a component within a set.\n\t *\n\t * @param {*} component A component that could contain a manual key.\n\t * @param {number} index Index that is used if a manual key is not provided.\n\t * @return {string}\n\t */\n\tfunction getComponentKey(component, index) {\n\t  // Do some typechecking here since we call this blindly. We want to ensure\n\t  // that we don't block potential future ES APIs.\n\t  if (component && typeof component === 'object' && component.key != null) {\n\t    // Explicit key\n\t    return KeyEscapeUtils.escape(component.key);\n\t  }\n\t  // Implicit key determined by the index in the set\n\t  return index.toString(36);\n\t}\n\t\n\t/**\n\t * @param {?*} children Children tree container.\n\t * @param {!string} nameSoFar Name of the key path so far.\n\t * @param {!function} callback Callback to invoke with each child found.\n\t * @param {?*} traverseContext Used to pass information throughout the traversal\n\t * process.\n\t * @return {!number} The number of children in this subtree.\n\t */\n\tfunction traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {\n\t  var type = typeof children;\n\t\n\t  if (type === 'undefined' || type === 'boolean') {\n\t    // All of the above are perceived as null.\n\t    children = null;\n\t  }\n\t\n\t  if (children === null || type === 'string' || type === 'number' ||\n\t  // The following is inlined from ReactElement. This means we can optimize\n\t  // some checks. React Fiber also inlines this logic for similar purposes.\n\t  type === 'object' && children.$$typeof === REACT_ELEMENT_TYPE) {\n\t    callback(traverseContext, children,\n\t    // If it's the only child, treat the name as if it was wrapped in an array\n\t    // so that it's consistent if the number of children grows.\n\t    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);\n\t    return 1;\n\t  }\n\t\n\t  var child;\n\t  var nextName;\n\t  var subtreeCount = 0; // Count of children found in the current subtree.\n\t  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;\n\t\n\t  if (Array.isArray(children)) {\n\t    for (var i = 0; i < children.length; i++) {\n\t      child = children[i];\n\t      nextName = nextNamePrefix + getComponentKey(child, i);\n\t      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n\t    }\n\t  } else {\n\t    var iteratorFn = getIteratorFn(children);\n\t    if (iteratorFn) {\n\t      var iterator = iteratorFn.call(children);\n\t      var step;\n\t      if (iteratorFn !== children.entries) {\n\t        var ii = 0;\n\t        while (!(step = iterator.next()).done) {\n\t          child = step.value;\n\t          nextName = nextNamePrefix + getComponentKey(child, ii++);\n\t          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n\t        }\n\t      } else {\n\t        if (false) {\n\t          var mapsAsChildrenAddendum = '';\n\t          if (ReactCurrentOwner.current) {\n\t            var mapsAsChildrenOwnerName = ReactCurrentOwner.current.getName();\n\t            if (mapsAsChildrenOwnerName) {\n\t              mapsAsChildrenAddendum = ' Check the render method of `' + mapsAsChildrenOwnerName + '`.';\n\t            }\n\t          }\n\t          process.env.NODE_ENV !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.%s', mapsAsChildrenAddendum) : void 0;\n\t          didWarnAboutMaps = true;\n\t        }\n\t        // Iterator will provide entry [k,v] tuples rather than values.\n\t        while (!(step = iterator.next()).done) {\n\t          var entry = step.value;\n\t          if (entry) {\n\t            child = entry[1];\n\t            nextName = nextNamePrefix + KeyEscapeUtils.escape(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);\n\t            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n\t          }\n\t        }\n\t      }\n\t    } else if (type === 'object') {\n\t      var addendum = '';\n\t      if (false) {\n\t        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';\n\t        if (children._isReactElement) {\n\t          addendum = ' It looks like you\\'re using an element created by a different ' + 'version of React. Make sure to use only one copy of React.';\n\t        }\n\t        if (ReactCurrentOwner.current) {\n\t          var name = ReactCurrentOwner.current.getName();\n\t          if (name) {\n\t            addendum += ' Check the render method of `' + name + '`.';\n\t          }\n\t        }\n\t      }\n\t      var childrenString = String(children);\n\t       true ?  false ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : _prodInvariant('31', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : void 0;\n\t    }\n\t  }\n\t\n\t  return subtreeCount;\n\t}\n\t\n\t/**\n\t * Traverses children that are typically specified as `props.children`, but\n\t * might also be specified through attributes:\n\t *\n\t * - `traverseAllChildren(this.props.children, ...)`\n\t * - `traverseAllChildren(this.props.leftPanelChildren, ...)`\n\t *\n\t * The `traverseContext` is an optional argument that is passed through the\n\t * entire traversal. It can be used to store accumulations or anything else that\n\t * the callback might find relevant.\n\t *\n\t * @param {?*} children Children tree object.\n\t * @param {!function} callback To invoke upon traversing each child.\n\t * @param {?*} traverseContext Context for traversal.\n\t * @return {!number} The number of children in this subtree.\n\t */\n\tfunction traverseAllChildren(children, callback, traverseContext) {\n\t  if (children == null) {\n\t    return 0;\n\t  }\n\t\n\t  return traverseAllChildrenImpl(children, '', callback, traverseContext);\n\t}\n\t\n\tmodule.exports = traverseAllChildren;\n\n/***/ },\n/* 72 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t *\n\t * @typechecks\n\t */\n\t\n\tvar emptyFunction = __webpack_require__(9);\n\t\n\t/**\n\t * Upstream version of event listener. Does not take into account specific\n\t * nature of platform.\n\t */\n\tvar EventListener = {\n\t  /**\n\t   * Listen to DOM events during the bubble phase.\n\t   *\n\t   * @param {DOMEventTarget} target DOM element to register listener on.\n\t   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.\n\t   * @param {function} callback Callback function.\n\t   * @return {object} Object with a `remove` method.\n\t   */\n\t  listen: function listen(target, eventType, callback) {\n\t    if (target.addEventListener) {\n\t      target.addEventListener(eventType, callback, false);\n\t      return {\n\t        remove: function remove() {\n\t          target.removeEventListener(eventType, callback, false);\n\t        }\n\t      };\n\t    } else if (target.attachEvent) {\n\t      target.attachEvent('on' + eventType, callback);\n\t      return {\n\t        remove: function remove() {\n\t          target.detachEvent('on' + eventType, callback);\n\t        }\n\t      };\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Listen to DOM events during the capture phase.\n\t   *\n\t   * @param {DOMEventTarget} target DOM element to register listener on.\n\t   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.\n\t   * @param {function} callback Callback function.\n\t   * @return {object} Object with a `remove` method.\n\t   */\n\t  capture: function capture(target, eventType, callback) {\n\t    if (target.addEventListener) {\n\t      target.addEventListener(eventType, callback, true);\n\t      return {\n\t        remove: function remove() {\n\t          target.removeEventListener(eventType, callback, true);\n\t        }\n\t      };\n\t    } else {\n\t      if (false) {\n\t        console.error('Attempted to listen to events during the capture phase on a ' + 'browser that does not support the capture phase. Your application ' + 'will not receive some events.');\n\t      }\n\t      return {\n\t        remove: emptyFunction\n\t      };\n\t    }\n\t  },\n\t\n\t  registerDefault: function registerDefault() {}\n\t};\n\t\n\tmodule.exports = EventListener;\n\n/***/ },\n/* 73 */\n51,\n/* 74 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * @param {DOMElement} node input/textarea to focus\n\t */\n\t\n\tfunction focusNode(node) {\n\t  // IE8 can throw \"Can't move focus to the control because it is invisible,\n\t  // not enabled, or of a type that does not accept the focus.\" for all kinds of\n\t  // reasons that are too expensive and fragile to test.\n\t  try {\n\t    node.focus();\n\t  } catch (e) {}\n\t}\n\t\n\tmodule.exports = focusNode;\n\n/***/ },\n/* 75 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @typechecks\n\t */\n\t\n\t/* eslint-disable fb-www/typeof-undefined */\n\t\n\t/**\n\t * Same as document.activeElement but wraps in a try-catch block. In IE it is\n\t * not safe to call document.activeElement if there is nothing focused.\n\t *\n\t * The activeElement will be null only if the document or document body is not\n\t * yet defined.\n\t *\n\t * @param {?DOMDocument} doc Defaults to current document.\n\t * @return {?DOMElement}\n\t */\n\tfunction getActiveElement(doc) /*?DOMElement*/{\n\t  doc = doc || (typeof document !== 'undefined' ? document : undefined);\n\t  if (typeof doc === 'undefined') {\n\t    return null;\n\t  }\n\t  try {\n\t    return doc.activeElement || doc.body;\n\t  } catch (e) {\n\t    return doc.body;\n\t  }\n\t}\n\t\n\tmodule.exports = getActiveElement;\n\n/***/ },\n/* 76 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar asap = __webpack_require__(167);\n\t\n\tfunction noop() {}\n\t\n\t// States:\n\t//\n\t// 0 - pending\n\t// 1 - fulfilled with _value\n\t// 2 - rejected with _value\n\t// 3 - adopted the state of another promise, _value\n\t//\n\t// once the state is no longer pending (0) it is immutable\n\t\n\t// All `_` prefixed properties will be reduced to `_{random number}`\n\t// at build time to obfuscate them and discourage their use.\n\t// We don't use symbols or Object.defineProperty to fully hide them\n\t// because the performance isn't good enough.\n\t\n\t\n\t// to avoid using try/catch inside critical functions, we\n\t// extract them to here.\n\tvar LAST_ERROR = null;\n\tvar IS_ERROR = {};\n\tfunction getThen(obj) {\n\t  try {\n\t    return obj.then;\n\t  } catch (ex) {\n\t    LAST_ERROR = ex;\n\t    return IS_ERROR;\n\t  }\n\t}\n\t\n\tfunction tryCallOne(fn, a) {\n\t  try {\n\t    return fn(a);\n\t  } catch (ex) {\n\t    LAST_ERROR = ex;\n\t    return IS_ERROR;\n\t  }\n\t}\n\tfunction tryCallTwo(fn, a, b) {\n\t  try {\n\t    fn(a, b);\n\t  } catch (ex) {\n\t    LAST_ERROR = ex;\n\t    return IS_ERROR;\n\t  }\n\t}\n\t\n\tmodule.exports = Promise;\n\t\n\tfunction Promise(fn) {\n\t  if (typeof this !== 'object') {\n\t    throw new TypeError('Promises must be constructed via new');\n\t  }\n\t  if (typeof fn !== 'function') {\n\t    throw new TypeError('not a function');\n\t  }\n\t  this._45 = 0;\n\t  this._81 = 0;\n\t  this._65 = null;\n\t  this._54 = null;\n\t  if (fn === noop) return;\n\t  doResolve(fn, this);\n\t}\n\tPromise._10 = null;\n\tPromise._97 = null;\n\tPromise._61 = noop;\n\t\n\tPromise.prototype.then = function(onFulfilled, onRejected) {\n\t  if (this.constructor !== Promise) {\n\t    return safeThen(this, onFulfilled, onRejected);\n\t  }\n\t  var res = new Promise(noop);\n\t  handle(this, new Handler(onFulfilled, onRejected, res));\n\t  return res;\n\t};\n\t\n\tfunction safeThen(self, onFulfilled, onRejected) {\n\t  return new self.constructor(function (resolve, reject) {\n\t    var res = new Promise(noop);\n\t    res.then(resolve, reject);\n\t    handle(self, new Handler(onFulfilled, onRejected, res));\n\t  });\n\t};\n\tfunction handle(self, deferred) {\n\t  while (self._81 === 3) {\n\t    self = self._65;\n\t  }\n\t  if (Promise._10) {\n\t    Promise._10(self);\n\t  }\n\t  if (self._81 === 0) {\n\t    if (self._45 === 0) {\n\t      self._45 = 1;\n\t      self._54 = deferred;\n\t      return;\n\t    }\n\t    if (self._45 === 1) {\n\t      self._45 = 2;\n\t      self._54 = [self._54, deferred];\n\t      return;\n\t    }\n\t    self._54.push(deferred);\n\t    return;\n\t  }\n\t  handleResolved(self, deferred);\n\t}\n\t\n\tfunction handleResolved(self, deferred) {\n\t  asap(function() {\n\t    var cb = self._81 === 1 ? deferred.onFulfilled : deferred.onRejected;\n\t    if (cb === null) {\n\t      if (self._81 === 1) {\n\t        resolve(deferred.promise, self._65);\n\t      } else {\n\t        reject(deferred.promise, self._65);\n\t      }\n\t      return;\n\t    }\n\t    var ret = tryCallOne(cb, self._65);\n\t    if (ret === IS_ERROR) {\n\t      reject(deferred.promise, LAST_ERROR);\n\t    } else {\n\t      resolve(deferred.promise, ret);\n\t    }\n\t  });\n\t}\n\tfunction resolve(self, newValue) {\n\t  // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n\t  if (newValue === self) {\n\t    return reject(\n\t      self,\n\t      new TypeError('A promise cannot be resolved with itself.')\n\t    );\n\t  }\n\t  if (\n\t    newValue &&\n\t    (typeof newValue === 'object' || typeof newValue === 'function')\n\t  ) {\n\t    var then = getThen(newValue);\n\t    if (then === IS_ERROR) {\n\t      return reject(self, LAST_ERROR);\n\t    }\n\t    if (\n\t      then === self.then &&\n\t      newValue instanceof Promise\n\t    ) {\n\t      self._81 = 3;\n\t      self._65 = newValue;\n\t      finale(self);\n\t      return;\n\t    } else if (typeof then === 'function') {\n\t      doResolve(then.bind(newValue), self);\n\t      return;\n\t    }\n\t  }\n\t  self._81 = 1;\n\t  self._65 = newValue;\n\t  finale(self);\n\t}\n\t\n\tfunction reject(self, newValue) {\n\t  self._81 = 2;\n\t  self._65 = newValue;\n\t  if (Promise._97) {\n\t    Promise._97(self, newValue);\n\t  }\n\t  finale(self);\n\t}\n\tfunction finale(self) {\n\t  if (self._45 === 1) {\n\t    handle(self, self._54);\n\t    self._54 = null;\n\t  }\n\t  if (self._45 === 2) {\n\t    for (var i = 0; i < self._54.length; i++) {\n\t      handle(self, self._54[i]);\n\t    }\n\t    self._54 = null;\n\t  }\n\t}\n\t\n\tfunction Handler(onFulfilled, onRejected, promise){\n\t  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n\t  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n\t  this.promise = promise;\n\t}\n\t\n\t/**\n\t * Take a potentially misbehaving resolver function and make sure\n\t * onFulfilled and onRejected are only called once.\n\t *\n\t * Makes no guarantees about asynchrony.\n\t */\n\tfunction doResolve(fn, promise) {\n\t  var done = false;\n\t  var res = tryCallTwo(fn, function (value) {\n\t    if (done) return;\n\t    done = true;\n\t    resolve(promise, value);\n\t  }, function (reason) {\n\t    if (done) return;\n\t    done = true;\n\t    reject(promise, reason);\n\t  })\n\t  if (!done && res === IS_ERROR) {\n\t    done = true;\n\t    reject(promise, LAST_ERROR);\n\t  }\n\t}\n\n\n/***/ },\n/* 77 */\n/***/ function(module, exports) {\n\n\t// shim for using process in browser\n\tvar process = module.exports = {};\n\t\n\t// cached from whatever global is present so that test runners that stub it\n\t// don't break things.  But we need to wrap it in a try catch in case it is\n\t// wrapped in strict mode code which doesn't define any globals.  It's inside a\n\t// function because try/catches deoptimize in certain engines.\n\t\n\tvar cachedSetTimeout;\n\tvar cachedClearTimeout;\n\t\n\tfunction defaultSetTimout() {\n\t    throw new Error('setTimeout has not been defined');\n\t}\n\tfunction defaultClearTimeout () {\n\t    throw new Error('clearTimeout has not been defined');\n\t}\n\t(function () {\n\t    try {\n\t        if (typeof setTimeout === 'function') {\n\t            cachedSetTimeout = setTimeout;\n\t        } else {\n\t            cachedSetTimeout = defaultSetTimout;\n\t        }\n\t    } catch (e) {\n\t        cachedSetTimeout = defaultSetTimout;\n\t    }\n\t    try {\n\t        if (typeof clearTimeout === 'function') {\n\t            cachedClearTimeout = clearTimeout;\n\t        } else {\n\t            cachedClearTimeout = defaultClearTimeout;\n\t        }\n\t    } catch (e) {\n\t        cachedClearTimeout = defaultClearTimeout;\n\t    }\n\t} ())\n\tfunction runTimeout(fun) {\n\t    if (cachedSetTimeout === setTimeout) {\n\t        //normal enviroments in sane situations\n\t        return setTimeout(fun, 0);\n\t    }\n\t    // if setTimeout wasn't available but was latter defined\n\t    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n\t        cachedSetTimeout = setTimeout;\n\t        return setTimeout(fun, 0);\n\t    }\n\t    try {\n\t        // when when somebody has screwed with setTimeout but no I.E. maddness\n\t        return cachedSetTimeout(fun, 0);\n\t    } catch(e){\n\t        try {\n\t            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n\t            return cachedSetTimeout.call(null, fun, 0);\n\t        } catch(e){\n\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n\t            return cachedSetTimeout.call(this, fun, 0);\n\t        }\n\t    }\n\t\n\t\n\t}\n\tfunction runClearTimeout(marker) {\n\t    if (cachedClearTimeout === clearTimeout) {\n\t        //normal enviroments in sane situations\n\t        return clearTimeout(marker);\n\t    }\n\t    // if clearTimeout wasn't available but was latter defined\n\t    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n\t        cachedClearTimeout = clearTimeout;\n\t        return clearTimeout(marker);\n\t    }\n\t    try {\n\t        // when when somebody has screwed with setTimeout but no I.E. maddness\n\t        return cachedClearTimeout(marker);\n\t    } catch (e){\n\t        try {\n\t            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n\t            return cachedClearTimeout.call(null, marker);\n\t        } catch (e){\n\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n\t            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n\t            return cachedClearTimeout.call(this, marker);\n\t        }\n\t    }\n\t\n\t\n\t\n\t}\n\tvar queue = [];\n\tvar draining = false;\n\tvar currentQueue;\n\tvar queueIndex = -1;\n\t\n\tfunction cleanUpNextTick() {\n\t    if (!draining || !currentQueue) {\n\t        return;\n\t    }\n\t    draining = false;\n\t    if (currentQueue.length) {\n\t        queue = currentQueue.concat(queue);\n\t    } else {\n\t        queueIndex = -1;\n\t    }\n\t    if (queue.length) {\n\t        drainQueue();\n\t    }\n\t}\n\t\n\tfunction drainQueue() {\n\t    if (draining) {\n\t        return;\n\t    }\n\t    var timeout = runTimeout(cleanUpNextTick);\n\t    draining = true;\n\t\n\t    var len = queue.length;\n\t    while(len) {\n\t        currentQueue = queue;\n\t        queue = [];\n\t        while (++queueIndex < len) {\n\t            if (currentQueue) {\n\t                currentQueue[queueIndex].run();\n\t            }\n\t        }\n\t        queueIndex = -1;\n\t        len = queue.length;\n\t    }\n\t    currentQueue = null;\n\t    draining = false;\n\t    runClearTimeout(timeout);\n\t}\n\t\n\tprocess.nextTick = function (fun) {\n\t    var args = new Array(arguments.length - 1);\n\t    if (arguments.length > 1) {\n\t        for (var i = 1; i < arguments.length; i++) {\n\t            args[i - 1] = arguments[i];\n\t        }\n\t    }\n\t    queue.push(new Item(fun, args));\n\t    if (queue.length === 1 && !draining) {\n\t        runTimeout(drainQueue);\n\t    }\n\t};\n\t\n\t// v8 likes predictible objects\n\tfunction Item(fun, array) {\n\t    this.fun = fun;\n\t    this.array = array;\n\t}\n\tItem.prototype.run = function () {\n\t    this.fun.apply(null, this.array);\n\t};\n\tprocess.title = 'browser';\n\tprocess.browser = true;\n\tprocess.env = {};\n\tprocess.argv = [];\n\tprocess.version = ''; // empty string to avoid regexp issues\n\tprocess.versions = {};\n\t\n\tfunction noop() {}\n\t\n\tprocess.on = noop;\n\tprocess.addListener = noop;\n\tprocess.once = noop;\n\tprocess.off = noop;\n\tprocess.removeListener = noop;\n\tprocess.removeAllListeners = noop;\n\tprocess.emit = noop;\n\tprocess.prependListener = noop;\n\tprocess.prependOnceListener = noop;\n\t\n\tprocess.listeners = function (name) { return [] }\n\t\n\tprocess.binding = function (name) {\n\t    throw new Error('process.binding is not supported');\n\t};\n\t\n\tprocess.cwd = function () { return '/' };\n\tprocess.chdir = function (dir) {\n\t    throw new Error('process.chdir is not supported');\n\t};\n\tprocess.umask = function() { return 0; };\n\n\n/***/ },\n/* 78 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2016-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * \n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(20);\n\t\n\tvar ReactCurrentOwner = __webpack_require__(11);\n\t\n\tvar invariant = __webpack_require__(14);\n\tvar warning = __webpack_require__(12);\n\t\n\tfunction isNative(fn) {\n\t  // Based on isNative() from Lodash\n\t  var funcToString = Function.prototype.toString;\n\t  var hasOwnProperty = Object.prototype.hasOwnProperty;\n\t  var reIsNative = RegExp('^' + funcToString\n\t  // Take an example native function source for comparison\n\t  .call(hasOwnProperty)\n\t  // Strip regex characters so we can use it for regex\n\t  .replace(/[\\\\^$.*+?()[\\]{}|]/g, '\\\\$&')\n\t  // Remove hasOwnProperty from the template to make it generic\n\t  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$');\n\t  try {\n\t    var source = funcToString.call(fn);\n\t    return reIsNative.test(source);\n\t  } catch (err) {\n\t    return false;\n\t  }\n\t}\n\t\n\tvar canUseCollections =\n\t// Array.from\n\ttypeof Array.from === 'function' &&\n\t// Map\n\ttypeof Map === 'function' && isNative(Map) &&\n\t// Map.prototype.keys\n\tMap.prototype != null && typeof Map.prototype.keys === 'function' && isNative(Map.prototype.keys) &&\n\t// Set\n\ttypeof Set === 'function' && isNative(Set) &&\n\t// Set.prototype.keys\n\tSet.prototype != null && typeof Set.prototype.keys === 'function' && isNative(Set.prototype.keys);\n\t\n\tvar setItem;\n\tvar getItem;\n\tvar removeItem;\n\tvar getItemIDs;\n\tvar addRoot;\n\tvar removeRoot;\n\tvar getRootIDs;\n\t\n\tif (canUseCollections) {\n\t  var itemMap = new Map();\n\t  var rootIDSet = new Set();\n\t\n\t  setItem = function (id, item) {\n\t    itemMap.set(id, item);\n\t  };\n\t  getItem = function (id) {\n\t    return itemMap.get(id);\n\t  };\n\t  removeItem = function (id) {\n\t    itemMap['delete'](id);\n\t  };\n\t  getItemIDs = function () {\n\t    return Array.from(itemMap.keys());\n\t  };\n\t\n\t  addRoot = function (id) {\n\t    rootIDSet.add(id);\n\t  };\n\t  removeRoot = function (id) {\n\t    rootIDSet['delete'](id);\n\t  };\n\t  getRootIDs = function () {\n\t    return Array.from(rootIDSet.keys());\n\t  };\n\t} else {\n\t  var itemByKey = {};\n\t  var rootByKey = {};\n\t\n\t  // Use non-numeric keys to prevent V8 performance issues:\n\t  // https://github.com/facebook/react/pull/7232\n\t  var getKeyFromID = function (id) {\n\t    return '.' + id;\n\t  };\n\t  var getIDFromKey = function (key) {\n\t    return parseInt(key.substr(1), 10);\n\t  };\n\t\n\t  setItem = function (id, item) {\n\t    var key = getKeyFromID(id);\n\t    itemByKey[key] = item;\n\t  };\n\t  getItem = function (id) {\n\t    var key = getKeyFromID(id);\n\t    return itemByKey[key];\n\t  };\n\t  removeItem = function (id) {\n\t    var key = getKeyFromID(id);\n\t    delete itemByKey[key];\n\t  };\n\t  getItemIDs = function () {\n\t    return Object.keys(itemByKey).map(getIDFromKey);\n\t  };\n\t\n\t  addRoot = function (id) {\n\t    var key = getKeyFromID(id);\n\t    rootByKey[key] = true;\n\t  };\n\t  removeRoot = function (id) {\n\t    var key = getKeyFromID(id);\n\t    delete rootByKey[key];\n\t  };\n\t  getRootIDs = function () {\n\t    return Object.keys(rootByKey).map(getIDFromKey);\n\t  };\n\t}\n\t\n\tvar unmountedIDs = [];\n\t\n\tfunction purgeDeep(id) {\n\t  var item = getItem(id);\n\t  if (item) {\n\t    var childIDs = item.childIDs;\n\t\n\t    removeItem(id);\n\t    childIDs.forEach(purgeDeep);\n\t  }\n\t}\n\t\n\tfunction describeComponentFrame(name, source, ownerName) {\n\t  return '\\n    in ' + (name || 'Unknown') + (source ? ' (at ' + source.fileName.replace(/^.*[\\\\\\/]/, '') + ':' + source.lineNumber + ')' : ownerName ? ' (created by ' + ownerName + ')' : '');\n\t}\n\t\n\tfunction getDisplayName(element) {\n\t  if (element == null) {\n\t    return '#empty';\n\t  } else if (typeof element === 'string' || typeof element === 'number') {\n\t    return '#text';\n\t  } else if (typeof element.type === 'string') {\n\t    return element.type;\n\t  } else {\n\t    return element.type.displayName || element.type.name || 'Unknown';\n\t  }\n\t}\n\t\n\tfunction describeID(id) {\n\t  var name = ReactComponentTreeHook.getDisplayName(id);\n\t  var element = ReactComponentTreeHook.getElement(id);\n\t  var ownerID = ReactComponentTreeHook.getOwnerID(id);\n\t  var ownerName;\n\t  if (ownerID) {\n\t    ownerName = ReactComponentTreeHook.getDisplayName(ownerID);\n\t  }\n\t   false ? warning(element, 'ReactComponentTreeHook: Missing React element for debugID %s when ' + 'building stack', id) : void 0;\n\t  return describeComponentFrame(name, element && element._source, ownerName);\n\t}\n\t\n\tvar ReactComponentTreeHook = {\n\t  onSetChildren: function (id, nextChildIDs) {\n\t    var item = getItem(id);\n\t    !item ?  false ? invariant(false, 'Item must have been set') : _prodInvariant('144') : void 0;\n\t    item.childIDs = nextChildIDs;\n\t\n\t    for (var i = 0; i < nextChildIDs.length; i++) {\n\t      var nextChildID = nextChildIDs[i];\n\t      var nextChild = getItem(nextChildID);\n\t      !nextChild ?  false ? invariant(false, 'Expected hook events to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('140') : void 0;\n\t      !(nextChild.childIDs != null || typeof nextChild.element !== 'object' || nextChild.element == null) ?  false ? invariant(false, 'Expected onSetChildren() to fire for a container child before its parent includes it in onSetChildren().') : _prodInvariant('141') : void 0;\n\t      !nextChild.isMounted ?  false ? invariant(false, 'Expected onMountComponent() to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('71') : void 0;\n\t      if (nextChild.parentID == null) {\n\t        nextChild.parentID = id;\n\t        // TODO: This shouldn't be necessary but mounting a new root during in\n\t        // componentWillMount currently causes not-yet-mounted components to\n\t        // be purged from our tree data so their parent id is missing.\n\t      }\n\t      !(nextChild.parentID === id) ?  false ? invariant(false, 'Expected onBeforeMountComponent() parent and onSetChildren() to be consistent (%s has parents %s and %s).', nextChildID, nextChild.parentID, id) : _prodInvariant('142', nextChildID, nextChild.parentID, id) : void 0;\n\t    }\n\t  },\n\t  onBeforeMountComponent: function (id, element, parentID) {\n\t    var item = {\n\t      element: element,\n\t      parentID: parentID,\n\t      text: null,\n\t      childIDs: [],\n\t      isMounted: false,\n\t      updateCount: 0\n\t    };\n\t    setItem(id, item);\n\t  },\n\t  onBeforeUpdateComponent: function (id, element) {\n\t    var item = getItem(id);\n\t    if (!item || !item.isMounted) {\n\t      // We may end up here as a result of setState() in componentWillUnmount().\n\t      // In this case, ignore the element.\n\t      return;\n\t    }\n\t    item.element = element;\n\t  },\n\t  onMountComponent: function (id) {\n\t    var item = getItem(id);\n\t    !item ?  false ? invariant(false, 'Item must have been set') : _prodInvariant('144') : void 0;\n\t    item.isMounted = true;\n\t    var isRoot = item.parentID === 0;\n\t    if (isRoot) {\n\t      addRoot(id);\n\t    }\n\t  },\n\t  onUpdateComponent: function (id) {\n\t    var item = getItem(id);\n\t    if (!item || !item.isMounted) {\n\t      // We may end up here as a result of setState() in componentWillUnmount().\n\t      // In this case, ignore the element.\n\t      return;\n\t    }\n\t    item.updateCount++;\n\t  },\n\t  onUnmountComponent: function (id) {\n\t    var item = getItem(id);\n\t    if (item) {\n\t      // We need to check if it exists.\n\t      // `item` might not exist if it is inside an error boundary, and a sibling\n\t      // error boundary child threw while mounting. Then this instance never\n\t      // got a chance to mount, but it still gets an unmounting event during\n\t      // the error boundary cleanup.\n\t      item.isMounted = false;\n\t      var isRoot = item.parentID === 0;\n\t      if (isRoot) {\n\t        removeRoot(id);\n\t      }\n\t    }\n\t    unmountedIDs.push(id);\n\t  },\n\t  purgeUnmountedComponents: function () {\n\t    if (ReactComponentTreeHook._preventPurging) {\n\t      // Should only be used for testing.\n\t      return;\n\t    }\n\t\n\t    for (var i = 0; i < unmountedIDs.length; i++) {\n\t      var id = unmountedIDs[i];\n\t      purgeDeep(id);\n\t    }\n\t    unmountedIDs.length = 0;\n\t  },\n\t  isMounted: function (id) {\n\t    var item = getItem(id);\n\t    return item ? item.isMounted : false;\n\t  },\n\t  getCurrentStackAddendum: function (topElement) {\n\t    var info = '';\n\t    if (topElement) {\n\t      var name = getDisplayName(topElement);\n\t      var owner = topElement._owner;\n\t      info += describeComponentFrame(name, topElement._source, owner && owner.getName());\n\t    }\n\t\n\t    var currentOwner = ReactCurrentOwner.current;\n\t    var id = currentOwner && currentOwner._debugID;\n\t\n\t    info += ReactComponentTreeHook.getStackAddendumByID(id);\n\t    return info;\n\t  },\n\t  getStackAddendumByID: function (id) {\n\t    var info = '';\n\t    while (id) {\n\t      info += describeID(id);\n\t      id = ReactComponentTreeHook.getParentID(id);\n\t    }\n\t    return info;\n\t  },\n\t  getChildIDs: function (id) {\n\t    var item = getItem(id);\n\t    return item ? item.childIDs : [];\n\t  },\n\t  getDisplayName: function (id) {\n\t    var element = ReactComponentTreeHook.getElement(id);\n\t    if (!element) {\n\t      return null;\n\t    }\n\t    return getDisplayName(element);\n\t  },\n\t  getElement: function (id) {\n\t    var item = getItem(id);\n\t    return item ? item.element : null;\n\t  },\n\t  getOwnerID: function (id) {\n\t    var element = ReactComponentTreeHook.getElement(id);\n\t    if (!element || !element._owner) {\n\t      return null;\n\t    }\n\t    return element._owner._debugID;\n\t  },\n\t  getParentID: function (id) {\n\t    var item = getItem(id);\n\t    return item ? item.parentID : null;\n\t  },\n\t  getSource: function (id) {\n\t    var item = getItem(id);\n\t    var element = item ? item.element : null;\n\t    var source = element != null ? element._source : null;\n\t    return source;\n\t  },\n\t  getText: function (id) {\n\t    var element = ReactComponentTreeHook.getElement(id);\n\t    if (typeof element === 'string') {\n\t      return element;\n\t    } else if (typeof element === 'number') {\n\t      return '' + element;\n\t    } else {\n\t      return null;\n\t    }\n\t  },\n\t  getUpdateCount: function (id) {\n\t    var item = getItem(id);\n\t    return item ? item.updateCount : 0;\n\t  },\n\t\n\t\n\t  getRootIDs: getRootIDs,\n\t  getRegisteredIDs: getItemIDs\n\t};\n\t\n\tmodule.exports = ReactComponentTreeHook;\n\n/***/ },\n/* 79 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2014-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * \n\t */\n\t\n\t'use strict';\n\t\n\t// The Symbol used to tag the ReactElement type. If there is no native Symbol\n\t// nor polyfill, then a plain number is used for performance.\n\t\n\tvar REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;\n\t\n\tmodule.exports = REACT_ELEMENT_TYPE;\n\n/***/ },\n/* 80 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * \n\t */\n\t\n\t'use strict';\n\t\n\tvar canDefineProperty = false;\n\tif (false) {\n\t  try {\n\t    // $FlowFixMe https://github.com/facebook/flow/issues/285\n\t    Object.defineProperty({}, 'x', { get: function () {} });\n\t    canDefineProperty = true;\n\t  } catch (x) {\n\t    // IE will fail on defineProperty\n\t  }\n\t}\n\t\n\tmodule.exports = canDefineProperty;\n\n/***/ },\n/* 81 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tmodule.exports = __webpack_require__(95);\n\n\n/***/ },\n/* 82 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar ARIADOMPropertyConfig = {\n\t  Properties: {\n\t    // Global States and Properties\n\t    'aria-current': 0, // state\n\t    'aria-details': 0,\n\t    'aria-disabled': 0, // state\n\t    'aria-hidden': 0, // state\n\t    'aria-invalid': 0, // state\n\t    'aria-keyshortcuts': 0,\n\t    'aria-label': 0,\n\t    'aria-roledescription': 0,\n\t    // Widget Attributes\n\t    'aria-autocomplete': 0,\n\t    'aria-checked': 0,\n\t    'aria-expanded': 0,\n\t    'aria-haspopup': 0,\n\t    'aria-level': 0,\n\t    'aria-modal': 0,\n\t    'aria-multiline': 0,\n\t    'aria-multiselectable': 0,\n\t    'aria-orientation': 0,\n\t    'aria-placeholder': 0,\n\t    'aria-pressed': 0,\n\t    'aria-readonly': 0,\n\t    'aria-required': 0,\n\t    'aria-selected': 0,\n\t    'aria-sort': 0,\n\t    'aria-valuemax': 0,\n\t    'aria-valuemin': 0,\n\t    'aria-valuenow': 0,\n\t    'aria-valuetext': 0,\n\t    // Live Region Attributes\n\t    'aria-atomic': 0,\n\t    'aria-busy': 0,\n\t    'aria-live': 0,\n\t    'aria-relevant': 0,\n\t    // Drag-and-Drop Attributes\n\t    'aria-dropeffect': 0,\n\t    'aria-grabbed': 0,\n\t    // Relationship Attributes\n\t    'aria-activedescendant': 0,\n\t    'aria-colcount': 0,\n\t    'aria-colindex': 0,\n\t    'aria-colspan': 0,\n\t    'aria-controls': 0,\n\t    'aria-describedby': 0,\n\t    'aria-errormessage': 0,\n\t    'aria-flowto': 0,\n\t    'aria-labelledby': 0,\n\t    'aria-owns': 0,\n\t    'aria-posinset': 0,\n\t    'aria-rowcount': 0,\n\t    'aria-rowindex': 0,\n\t    'aria-rowspan': 0,\n\t    'aria-setsize': 0\n\t  },\n\t  DOMAttributeNames: {},\n\t  DOMPropertyNames: {}\n\t};\n\t\n\tmodule.exports = ARIADOMPropertyConfig;\n\n/***/ },\n/* 83 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactDOMComponentTree = __webpack_require__(4);\n\t\n\tvar focusNode = __webpack_require__(74);\n\t\n\tvar AutoFocusUtils = {\n\t  focusDOMComponent: function () {\n\t    focusNode(ReactDOMComponentTree.getNodeFromInstance(this));\n\t  }\n\t};\n\t\n\tmodule.exports = AutoFocusUtils;\n\n/***/ },\n/* 84 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar EventPropagators = __webpack_require__(22);\n\tvar ExecutionEnvironment = __webpack_require__(6);\n\tvar FallbackCompositionState = __webpack_require__(90);\n\tvar SyntheticCompositionEvent = __webpack_require__(127);\n\tvar SyntheticInputEvent = __webpack_require__(130);\n\t\n\tvar END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space\n\tvar START_KEYCODE = 229;\n\t\n\tvar canUseCompositionEvent = ExecutionEnvironment.canUseDOM && 'CompositionEvent' in window;\n\t\n\tvar documentMode = null;\n\tif (ExecutionEnvironment.canUseDOM && 'documentMode' in document) {\n\t  documentMode = document.documentMode;\n\t}\n\t\n\t// Webkit offers a very useful `textInput` event that can be used to\n\t// directly represent `beforeInput`. The IE `textinput` event is not as\n\t// useful, so we don't use it.\n\tvar canUseTextInputEvent = ExecutionEnvironment.canUseDOM && 'TextEvent' in window && !documentMode && !isPresto();\n\t\n\t// In IE9+, we have access to composition events, but the data supplied\n\t// by the native compositionend event may be incorrect. Japanese ideographic\n\t// spaces, for instance (\\u3000) are not recorded correctly.\n\tvar useFallbackCompositionData = ExecutionEnvironment.canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);\n\t\n\t/**\n\t * Opera <= 12 includes TextEvent in window, but does not fire\n\t * text input events. Rely on keypress instead.\n\t */\n\tfunction isPresto() {\n\t  var opera = window.opera;\n\t  return typeof opera === 'object' && typeof opera.version === 'function' && parseInt(opera.version(), 10) <= 12;\n\t}\n\t\n\tvar SPACEBAR_CODE = 32;\n\tvar SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);\n\t\n\t// Events and their corresponding property names.\n\tvar eventTypes = {\n\t  beforeInput: {\n\t    phasedRegistrationNames: {\n\t      bubbled: 'onBeforeInput',\n\t      captured: 'onBeforeInputCapture'\n\t    },\n\t    dependencies: ['topCompositionEnd', 'topKeyPress', 'topTextInput', 'topPaste']\n\t  },\n\t  compositionEnd: {\n\t    phasedRegistrationNames: {\n\t      bubbled: 'onCompositionEnd',\n\t      captured: 'onCompositionEndCapture'\n\t    },\n\t    dependencies: ['topBlur', 'topCompositionEnd', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']\n\t  },\n\t  compositionStart: {\n\t    phasedRegistrationNames: {\n\t      bubbled: 'onCompositionStart',\n\t      captured: 'onCompositionStartCapture'\n\t    },\n\t    dependencies: ['topBlur', 'topCompositionStart', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']\n\t  },\n\t  compositionUpdate: {\n\t    phasedRegistrationNames: {\n\t      bubbled: 'onCompositionUpdate',\n\t      captured: 'onCompositionUpdateCapture'\n\t    },\n\t    dependencies: ['topBlur', 'topCompositionUpdate', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']\n\t  }\n\t};\n\t\n\t// Track whether we've ever handled a keypress on the space key.\n\tvar hasSpaceKeypress = false;\n\t\n\t/**\n\t * Return whether a native keypress event is assumed to be a command.\n\t * This is required because Firefox fires `keypress` events for key commands\n\t * (cut, copy, select-all, etc.) even though no character is inserted.\n\t */\n\tfunction isKeypressCommand(nativeEvent) {\n\t  return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) &&\n\t  // ctrlKey && altKey is equivalent to AltGr, and is not a command.\n\t  !(nativeEvent.ctrlKey && nativeEvent.altKey);\n\t}\n\t\n\t/**\n\t * Translate native top level events into event types.\n\t *\n\t * @param {string} topLevelType\n\t * @return {object}\n\t */\n\tfunction getCompositionEventType(topLevelType) {\n\t  switch (topLevelType) {\n\t    case 'topCompositionStart':\n\t      return eventTypes.compositionStart;\n\t    case 'topCompositionEnd':\n\t      return eventTypes.compositionEnd;\n\t    case 'topCompositionUpdate':\n\t      return eventTypes.compositionUpdate;\n\t  }\n\t}\n\t\n\t/**\n\t * Does our fallback best-guess model think this event signifies that\n\t * composition has begun?\n\t *\n\t * @param {string} topLevelType\n\t * @param {object} nativeEvent\n\t * @return {boolean}\n\t */\n\tfunction isFallbackCompositionStart(topLevelType, nativeEvent) {\n\t  return topLevelType === 'topKeyDown' && nativeEvent.keyCode === START_KEYCODE;\n\t}\n\t\n\t/**\n\t * Does our fallback mode think that this event is the end of composition?\n\t *\n\t * @param {string} topLevelType\n\t * @param {object} nativeEvent\n\t * @return {boolean}\n\t */\n\tfunction isFallbackCompositionEnd(topLevelType, nativeEvent) {\n\t  switch (topLevelType) {\n\t    case 'topKeyUp':\n\t      // Command keys insert or clear IME input.\n\t      return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;\n\t    case 'topKeyDown':\n\t      // Expect IME keyCode on each keydown. If we get any other\n\t      // code we must have exited earlier.\n\t      return nativeEvent.keyCode !== START_KEYCODE;\n\t    case 'topKeyPress':\n\t    case 'topMouseDown':\n\t    case 'topBlur':\n\t      // Events are not possible without cancelling IME.\n\t      return true;\n\t    default:\n\t      return false;\n\t  }\n\t}\n\t\n\t/**\n\t * Google Input Tools provides composition data via a CustomEvent,\n\t * with the `data` property populated in the `detail` object. If this\n\t * is available on the event object, use it. If not, this is a plain\n\t * composition event and we have nothing special to extract.\n\t *\n\t * @param {object} nativeEvent\n\t * @return {?string}\n\t */\n\tfunction getDataFromCustomEvent(nativeEvent) {\n\t  var detail = nativeEvent.detail;\n\t  if (typeof detail === 'object' && 'data' in detail) {\n\t    return detail.data;\n\t  }\n\t  return null;\n\t}\n\t\n\t// Track the current IME composition fallback object, if any.\n\tvar currentComposition = null;\n\t\n\t/**\n\t * @return {?object} A SyntheticCompositionEvent.\n\t */\n\tfunction extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n\t  var eventType;\n\t  var fallbackData;\n\t\n\t  if (canUseCompositionEvent) {\n\t    eventType = getCompositionEventType(topLevelType);\n\t  } else if (!currentComposition) {\n\t    if (isFallbackCompositionStart(topLevelType, nativeEvent)) {\n\t      eventType = eventTypes.compositionStart;\n\t    }\n\t  } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {\n\t    eventType = eventTypes.compositionEnd;\n\t  }\n\t\n\t  if (!eventType) {\n\t    return null;\n\t  }\n\t\n\t  if (useFallbackCompositionData) {\n\t    // The current composition is stored statically and must not be\n\t    // overwritten while composition continues.\n\t    if (!currentComposition && eventType === eventTypes.compositionStart) {\n\t      currentComposition = FallbackCompositionState.getPooled(nativeEventTarget);\n\t    } else if (eventType === eventTypes.compositionEnd) {\n\t      if (currentComposition) {\n\t        fallbackData = currentComposition.getData();\n\t      }\n\t    }\n\t  }\n\t\n\t  var event = SyntheticCompositionEvent.getPooled(eventType, targetInst, nativeEvent, nativeEventTarget);\n\t\n\t  if (fallbackData) {\n\t    // Inject data generated from fallback path into the synthetic event.\n\t    // This matches the property of native CompositionEventInterface.\n\t    event.data = fallbackData;\n\t  } else {\n\t    var customData = getDataFromCustomEvent(nativeEvent);\n\t    if (customData !== null) {\n\t      event.data = customData;\n\t    }\n\t  }\n\t\n\t  EventPropagators.accumulateTwoPhaseDispatches(event);\n\t  return event;\n\t}\n\t\n\t/**\n\t * @param {string} topLevelType Record from `EventConstants`.\n\t * @param {object} nativeEvent Native browser event.\n\t * @return {?string} The string corresponding to this `beforeInput` event.\n\t */\n\tfunction getNativeBeforeInputChars(topLevelType, nativeEvent) {\n\t  switch (topLevelType) {\n\t    case 'topCompositionEnd':\n\t      return getDataFromCustomEvent(nativeEvent);\n\t    case 'topKeyPress':\n\t      /**\n\t       * If native `textInput` events are available, our goal is to make\n\t       * use of them. However, there is a special case: the spacebar key.\n\t       * In Webkit, preventing default on a spacebar `textInput` event\n\t       * cancels character insertion, but it *also* causes the browser\n\t       * to fall back to its default spacebar behavior of scrolling the\n\t       * page.\n\t       *\n\t       * Tracking at:\n\t       * https://code.google.com/p/chromium/issues/detail?id=355103\n\t       *\n\t       * To avoid this issue, use the keypress event as if no `textInput`\n\t       * event is available.\n\t       */\n\t      var which = nativeEvent.which;\n\t      if (which !== SPACEBAR_CODE) {\n\t        return null;\n\t      }\n\t\n\t      hasSpaceKeypress = true;\n\t      return SPACEBAR_CHAR;\n\t\n\t    case 'topTextInput':\n\t      // Record the characters to be added to the DOM.\n\t      var chars = nativeEvent.data;\n\t\n\t      // If it's a spacebar character, assume that we have already handled\n\t      // it at the keypress level and bail immediately. Android Chrome\n\t      // doesn't give us keycodes, so we need to blacklist it.\n\t      if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {\n\t        return null;\n\t      }\n\t\n\t      return chars;\n\t\n\t    default:\n\t      // For other native event types, do nothing.\n\t      return null;\n\t  }\n\t}\n\t\n\t/**\n\t * For browsers that do not provide the `textInput` event, extract the\n\t * appropriate string to use for SyntheticInputEvent.\n\t *\n\t * @param {string} topLevelType Record from `EventConstants`.\n\t * @param {object} nativeEvent Native browser event.\n\t * @return {?string} The fallback string for this `beforeInput` event.\n\t */\n\tfunction getFallbackBeforeInputChars(topLevelType, nativeEvent) {\n\t  // If we are currently composing (IME) and using a fallback to do so,\n\t  // try to extract the composed characters from the fallback object.\n\t  // If composition event is available, we extract a string only at\n\t  // compositionevent, otherwise extract it at fallback events.\n\t  if (currentComposition) {\n\t    if (topLevelType === 'topCompositionEnd' || !canUseCompositionEvent && isFallbackCompositionEnd(topLevelType, nativeEvent)) {\n\t      var chars = currentComposition.getData();\n\t      FallbackCompositionState.release(currentComposition);\n\t      currentComposition = null;\n\t      return chars;\n\t    }\n\t    return null;\n\t  }\n\t\n\t  switch (topLevelType) {\n\t    case 'topPaste':\n\t      // If a paste event occurs after a keypress, throw out the input\n\t      // chars. Paste events should not lead to BeforeInput events.\n\t      return null;\n\t    case 'topKeyPress':\n\t      /**\n\t       * As of v27, Firefox may fire keypress events even when no character\n\t       * will be inserted. A few possibilities:\n\t       *\n\t       * - `which` is `0`. Arrow keys, Esc key, etc.\n\t       *\n\t       * - `which` is the pressed key code, but no char is available.\n\t       *   Ex: 'AltGr + d` in Polish. There is no modified character for\n\t       *   this key combination and no character is inserted into the\n\t       *   document, but FF fires the keypress for char code `100` anyway.\n\t       *   No `input` event will occur.\n\t       *\n\t       * - `which` is the pressed key code, but a command combination is\n\t       *   being used. Ex: `Cmd+C`. No character is inserted, and no\n\t       *   `input` event will occur.\n\t       */\n\t      if (nativeEvent.which && !isKeypressCommand(nativeEvent)) {\n\t        return String.fromCharCode(nativeEvent.which);\n\t      }\n\t      return null;\n\t    case 'topCompositionEnd':\n\t      return useFallbackCompositionData ? null : nativeEvent.data;\n\t    default:\n\t      return null;\n\t  }\n\t}\n\t\n\t/**\n\t * Extract a SyntheticInputEvent for `beforeInput`, based on either native\n\t * `textInput` or fallback behavior.\n\t *\n\t * @return {?object} A SyntheticInputEvent.\n\t */\n\tfunction extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n\t  var chars;\n\t\n\t  if (canUseTextInputEvent) {\n\t    chars = getNativeBeforeInputChars(topLevelType, nativeEvent);\n\t  } else {\n\t    chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);\n\t  }\n\t\n\t  // If no characters are being inserted, no BeforeInput event should\n\t  // be fired.\n\t  if (!chars) {\n\t    return null;\n\t  }\n\t\n\t  var event = SyntheticInputEvent.getPooled(eventTypes.beforeInput, targetInst, nativeEvent, nativeEventTarget);\n\t\n\t  event.data = chars;\n\t  EventPropagators.accumulateTwoPhaseDispatches(event);\n\t  return event;\n\t}\n\t\n\t/**\n\t * Create an `onBeforeInput` event to match\n\t * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.\n\t *\n\t * This event plugin is based on the native `textInput` event\n\t * available in Chrome, Safari, Opera, and IE. This event fires after\n\t * `onKeyPress` and `onCompositionEnd`, but before `onInput`.\n\t *\n\t * `beforeInput` is spec'd but not implemented in any browsers, and\n\t * the `input` event does not provide any useful information about what has\n\t * actually been added, contrary to the spec. Thus, `textInput` is the best\n\t * available event to identify the characters that have actually been inserted\n\t * into the target node.\n\t *\n\t * This plugin is also responsible for emitting `composition` events, thus\n\t * allowing us to share composition fallback code for both `beforeInput` and\n\t * `composition` event types.\n\t */\n\tvar BeforeInputEventPlugin = {\n\t\n\t  eventTypes: eventTypes,\n\t\n\t  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n\t    return [extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget), extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget)];\n\t  }\n\t};\n\t\n\tmodule.exports = BeforeInputEventPlugin;\n\n/***/ },\n/* 85 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar CSSProperty = __webpack_require__(52);\n\tvar ExecutionEnvironment = __webpack_require__(6);\n\tvar ReactInstrumentation = __webpack_require__(7);\n\t\n\tvar camelizeStyleName = __webpack_require__(146);\n\tvar dangerousStyleValue = __webpack_require__(136);\n\tvar hyphenateStyleName = __webpack_require__(153);\n\tvar memoizeStringOnly = __webpack_require__(156);\n\tvar warning = __webpack_require__(3);\n\t\n\tvar processStyleName = memoizeStringOnly(function (styleName) {\n\t  return hyphenateStyleName(styleName);\n\t});\n\t\n\tvar hasShorthandPropertyBug = false;\n\tvar styleFloatAccessor = 'cssFloat';\n\tif (ExecutionEnvironment.canUseDOM) {\n\t  var tempStyle = document.createElement('div').style;\n\t  try {\n\t    // IE8 throws \"Invalid argument.\" if resetting shorthand style properties.\n\t    tempStyle.font = '';\n\t  } catch (e) {\n\t    hasShorthandPropertyBug = true;\n\t  }\n\t  // IE8 only supports accessing cssFloat (standard) as styleFloat\n\t  if (document.documentElement.style.cssFloat === undefined) {\n\t    styleFloatAccessor = 'styleFloat';\n\t  }\n\t}\n\t\n\tif (false) {\n\t  // 'msTransform' is correct, but the other prefixes should be capitalized\n\t  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;\n\t\n\t  // style values shouldn't contain a semicolon\n\t  var badStyleValueWithSemicolonPattern = /;\\s*$/;\n\t\n\t  var warnedStyleNames = {};\n\t  var warnedStyleValues = {};\n\t  var warnedForNaNValue = false;\n\t\n\t  var warnHyphenatedStyleName = function (name, owner) {\n\t    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {\n\t      return;\n\t    }\n\t\n\t    warnedStyleNames[name] = true;\n\t    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported style property %s. Did you mean %s?%s', name, camelizeStyleName(name), checkRenderMessage(owner)) : void 0;\n\t  };\n\t\n\t  var warnBadVendoredStyleName = function (name, owner) {\n\t    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {\n\t      return;\n\t    }\n\t\n\t    warnedStyleNames[name] = true;\n\t    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported vendor-prefixed style property %s. Did you mean %s?%s', name, name.charAt(0).toUpperCase() + name.slice(1), checkRenderMessage(owner)) : void 0;\n\t  };\n\t\n\t  var warnStyleValueWithSemicolon = function (name, value, owner) {\n\t    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {\n\t      return;\n\t    }\n\t\n\t    warnedStyleValues[value] = true;\n\t    process.env.NODE_ENV !== 'production' ? warning(false, 'Style property values shouldn\\'t contain a semicolon.%s ' + 'Try \"%s: %s\" instead.', checkRenderMessage(owner), name, value.replace(badStyleValueWithSemicolonPattern, '')) : void 0;\n\t  };\n\t\n\t  var warnStyleValueIsNaN = function (name, value, owner) {\n\t    if (warnedForNaNValue) {\n\t      return;\n\t    }\n\t\n\t    warnedForNaNValue = true;\n\t    process.env.NODE_ENV !== 'production' ? warning(false, '`NaN` is an invalid value for the `%s` css style property.%s', name, checkRenderMessage(owner)) : void 0;\n\t  };\n\t\n\t  var checkRenderMessage = function (owner) {\n\t    if (owner) {\n\t      var name = owner.getName();\n\t      if (name) {\n\t        return ' Check the render method of `' + name + '`.';\n\t      }\n\t    }\n\t    return '';\n\t  };\n\t\n\t  /**\n\t   * @param {string} name\n\t   * @param {*} value\n\t   * @param {ReactDOMComponent} component\n\t   */\n\t  var warnValidStyle = function (name, value, component) {\n\t    var owner;\n\t    if (component) {\n\t      owner = component._currentElement._owner;\n\t    }\n\t    if (name.indexOf('-') > -1) {\n\t      warnHyphenatedStyleName(name, owner);\n\t    } else if (badVendoredStyleNamePattern.test(name)) {\n\t      warnBadVendoredStyleName(name, owner);\n\t    } else if (badStyleValueWithSemicolonPattern.test(value)) {\n\t      warnStyleValueWithSemicolon(name, value, owner);\n\t    }\n\t\n\t    if (typeof value === 'number' && isNaN(value)) {\n\t      warnStyleValueIsNaN(name, value, owner);\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Operations for dealing with CSS properties.\n\t */\n\tvar CSSPropertyOperations = {\n\t\n\t  /**\n\t   * Serializes a mapping of style properties for use as inline styles:\n\t   *\n\t   *   > createMarkupForStyles({width: '200px', height: 0})\n\t   *   \"width:200px;height:0;\"\n\t   *\n\t   * Undefined values are ignored so that declarative programming is easier.\n\t   * The result should be HTML-escaped before insertion into the DOM.\n\t   *\n\t   * @param {object} styles\n\t   * @param {ReactDOMComponent} component\n\t   * @return {?string}\n\t   */\n\t  createMarkupForStyles: function (styles, component) {\n\t    var serialized = '';\n\t    for (var styleName in styles) {\n\t      if (!styles.hasOwnProperty(styleName)) {\n\t        continue;\n\t      }\n\t      var styleValue = styles[styleName];\n\t      if (false) {\n\t        warnValidStyle(styleName, styleValue, component);\n\t      }\n\t      if (styleValue != null) {\n\t        serialized += processStyleName(styleName) + ':';\n\t        serialized += dangerousStyleValue(styleName, styleValue, component) + ';';\n\t      }\n\t    }\n\t    return serialized || null;\n\t  },\n\t\n\t  /**\n\t   * Sets the value for multiple styles on a node.  If a value is specified as\n\t   * '' (empty string), the corresponding style property will be unset.\n\t   *\n\t   * @param {DOMElement} node\n\t   * @param {object} styles\n\t   * @param {ReactDOMComponent} component\n\t   */\n\t  setValueForStyles: function (node, styles, component) {\n\t    if (false) {\n\t      ReactInstrumentation.debugTool.onHostOperation({\n\t        instanceID: component._debugID,\n\t        type: 'update styles',\n\t        payload: styles\n\t      });\n\t    }\n\t\n\t    var style = node.style;\n\t    for (var styleName in styles) {\n\t      if (!styles.hasOwnProperty(styleName)) {\n\t        continue;\n\t      }\n\t      if (false) {\n\t        warnValidStyle(styleName, styles[styleName], component);\n\t      }\n\t      var styleValue = dangerousStyleValue(styleName, styles[styleName], component);\n\t      if (styleName === 'float' || styleName === 'cssFloat') {\n\t        styleName = styleFloatAccessor;\n\t      }\n\t      if (styleValue) {\n\t        style[styleName] = styleValue;\n\t      } else {\n\t        var expansion = hasShorthandPropertyBug && CSSProperty.shorthandPropertyExpansions[styleName];\n\t        if (expansion) {\n\t          // Shorthand property that IE8 won't like unsetting, so unset each\n\t          // component to placate it\n\t          for (var individualStyleName in expansion) {\n\t            style[individualStyleName] = '';\n\t          }\n\t        } else {\n\t          style[styleName] = '';\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = CSSPropertyOperations;\n\n/***/ },\n/* 86 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar EventPluginHub = __webpack_require__(21);\n\tvar EventPropagators = __webpack_require__(22);\n\tvar ExecutionEnvironment = __webpack_require__(6);\n\tvar ReactDOMComponentTree = __webpack_require__(4);\n\tvar ReactUpdates = __webpack_require__(8);\n\tvar SyntheticEvent = __webpack_require__(10);\n\t\n\tvar getEventTarget = __webpack_require__(43);\n\tvar isEventSupported = __webpack_require__(44);\n\tvar isTextInputElement = __webpack_require__(69);\n\t\n\tvar eventTypes = {\n\t  change: {\n\t    phasedRegistrationNames: {\n\t      bubbled: 'onChange',\n\t      captured: 'onChangeCapture'\n\t    },\n\t    dependencies: ['topBlur', 'topChange', 'topClick', 'topFocus', 'topInput', 'topKeyDown', 'topKeyUp', 'topSelectionChange']\n\t  }\n\t};\n\t\n\t/**\n\t * For IE shims\n\t */\n\tvar activeElement = null;\n\tvar activeElementInst = null;\n\tvar activeElementValue = null;\n\tvar activeElementValueProp = null;\n\t\n\t/**\n\t * SECTION: handle `change` event\n\t */\n\tfunction shouldUseChangeEvent(elem) {\n\t  var nodeName = elem.nodeName && elem.nodeName.toLowerCase();\n\t  return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';\n\t}\n\t\n\tvar doesChangeEventBubble = false;\n\tif (ExecutionEnvironment.canUseDOM) {\n\t  // See `handleChange` comment below\n\t  doesChangeEventBubble = isEventSupported('change') && (!document.documentMode || document.documentMode > 8);\n\t}\n\t\n\tfunction manualDispatchChangeEvent(nativeEvent) {\n\t  var event = SyntheticEvent.getPooled(eventTypes.change, activeElementInst, nativeEvent, getEventTarget(nativeEvent));\n\t  EventPropagators.accumulateTwoPhaseDispatches(event);\n\t\n\t  // If change and propertychange bubbled, we'd just bind to it like all the\n\t  // other events and have it go through ReactBrowserEventEmitter. Since it\n\t  // doesn't, we manually listen for the events and so we have to enqueue and\n\t  // process the abstract event manually.\n\t  //\n\t  // Batching is necessary here in order to ensure that all event handlers run\n\t  // before the next rerender (including event handlers attached to ancestor\n\t  // elements instead of directly on the input). Without this, controlled\n\t  // components don't work properly in conjunction with event bubbling because\n\t  // the component is rerendered and the value reverted before all the event\n\t  // handlers can run. See https://github.com/facebook/react/issues/708.\n\t  ReactUpdates.batchedUpdates(runEventInBatch, event);\n\t}\n\t\n\tfunction runEventInBatch(event) {\n\t  EventPluginHub.enqueueEvents(event);\n\t  EventPluginHub.processEventQueue(false);\n\t}\n\t\n\tfunction startWatchingForChangeEventIE8(target, targetInst) {\n\t  activeElement = target;\n\t  activeElementInst = targetInst;\n\t  activeElement.attachEvent('onchange', manualDispatchChangeEvent);\n\t}\n\t\n\tfunction stopWatchingForChangeEventIE8() {\n\t  if (!activeElement) {\n\t    return;\n\t  }\n\t  activeElement.detachEvent('onchange', manualDispatchChangeEvent);\n\t  activeElement = null;\n\t  activeElementInst = null;\n\t}\n\t\n\tfunction getTargetInstForChangeEvent(topLevelType, targetInst) {\n\t  if (topLevelType === 'topChange') {\n\t    return targetInst;\n\t  }\n\t}\n\tfunction handleEventsForChangeEventIE8(topLevelType, target, targetInst) {\n\t  if (topLevelType === 'topFocus') {\n\t    // stopWatching() should be a noop here but we call it just in case we\n\t    // missed a blur event somehow.\n\t    stopWatchingForChangeEventIE8();\n\t    startWatchingForChangeEventIE8(target, targetInst);\n\t  } else if (topLevelType === 'topBlur') {\n\t    stopWatchingForChangeEventIE8();\n\t  }\n\t}\n\t\n\t/**\n\t * SECTION: handle `input` event\n\t */\n\tvar isInputEventSupported = false;\n\tif (ExecutionEnvironment.canUseDOM) {\n\t  // IE9 claims to support the input event but fails to trigger it when\n\t  // deleting text, so we ignore its input events.\n\t  // IE10+ fire input events to often, such when a placeholder\n\t  // changes or when an input with a placeholder is focused.\n\t  isInputEventSupported = isEventSupported('input') && (!document.documentMode || document.documentMode > 11);\n\t}\n\t\n\t/**\n\t * (For IE <=11) Replacement getter/setter for the `value` property that gets\n\t * set on the active element.\n\t */\n\tvar newValueProp = {\n\t  get: function () {\n\t    return activeElementValueProp.get.call(this);\n\t  },\n\t  set: function (val) {\n\t    // Cast to a string so we can do equality checks.\n\t    activeElementValue = '' + val;\n\t    activeElementValueProp.set.call(this, val);\n\t  }\n\t};\n\t\n\t/**\n\t * (For IE <=11) Starts tracking propertychange events on the passed-in element\n\t * and override the value property so that we can distinguish user events from\n\t * value changes in JS.\n\t */\n\tfunction startWatchingForValueChange(target, targetInst) {\n\t  activeElement = target;\n\t  activeElementInst = targetInst;\n\t  activeElementValue = target.value;\n\t  activeElementValueProp = Object.getOwnPropertyDescriptor(target.constructor.prototype, 'value');\n\t\n\t  // Not guarded in a canDefineProperty check: IE8 supports defineProperty only\n\t  // on DOM elements\n\t  Object.defineProperty(activeElement, 'value', newValueProp);\n\t  if (activeElement.attachEvent) {\n\t    activeElement.attachEvent('onpropertychange', handlePropertyChange);\n\t  } else {\n\t    activeElement.addEventListener('propertychange', handlePropertyChange, false);\n\t  }\n\t}\n\t\n\t/**\n\t * (For IE <=11) Removes the event listeners from the currently-tracked element,\n\t * if any exists.\n\t */\n\tfunction stopWatchingForValueChange() {\n\t  if (!activeElement) {\n\t    return;\n\t  }\n\t\n\t  // delete restores the original property definition\n\t  delete activeElement.value;\n\t\n\t  if (activeElement.detachEvent) {\n\t    activeElement.detachEvent('onpropertychange', handlePropertyChange);\n\t  } else {\n\t    activeElement.removeEventListener('propertychange', handlePropertyChange, false);\n\t  }\n\t\n\t  activeElement = null;\n\t  activeElementInst = null;\n\t  activeElementValue = null;\n\t  activeElementValueProp = null;\n\t}\n\t\n\t/**\n\t * (For IE <=11) Handles a propertychange event, sending a `change` event if\n\t * the value of the active element has changed.\n\t */\n\tfunction handlePropertyChange(nativeEvent) {\n\t  if (nativeEvent.propertyName !== 'value') {\n\t    return;\n\t  }\n\t  var value = nativeEvent.srcElement.value;\n\t  if (value === activeElementValue) {\n\t    return;\n\t  }\n\t  activeElementValue = value;\n\t\n\t  manualDispatchChangeEvent(nativeEvent);\n\t}\n\t\n\t/**\n\t * If a `change` event should be fired, returns the target's ID.\n\t */\n\tfunction getTargetInstForInputEvent(topLevelType, targetInst) {\n\t  if (topLevelType === 'topInput') {\n\t    // In modern browsers (i.e., not IE8 or IE9), the input event is exactly\n\t    // what we want so fall through here and trigger an abstract event\n\t    return targetInst;\n\t  }\n\t}\n\t\n\tfunction handleEventsForInputEventIE(topLevelType, target, targetInst) {\n\t  if (topLevelType === 'topFocus') {\n\t    // In IE8, we can capture almost all .value changes by adding a\n\t    // propertychange handler and looking for events with propertyName\n\t    // equal to 'value'\n\t    // In IE9-11, propertychange fires for most input events but is buggy and\n\t    // doesn't fire when text is deleted, but conveniently, selectionchange\n\t    // appears to fire in all of the remaining cases so we catch those and\n\t    // forward the event if the value has changed\n\t    // In either case, we don't want to call the event handler if the value\n\t    // is changed from JS so we redefine a setter for `.value` that updates\n\t    // our activeElementValue variable, allowing us to ignore those changes\n\t    //\n\t    // stopWatching() should be a noop here but we call it just in case we\n\t    // missed a blur event somehow.\n\t    stopWatchingForValueChange();\n\t    startWatchingForValueChange(target, targetInst);\n\t  } else if (topLevelType === 'topBlur') {\n\t    stopWatchingForValueChange();\n\t  }\n\t}\n\t\n\t// For IE8 and IE9.\n\tfunction getTargetInstForInputEventIE(topLevelType, targetInst) {\n\t  if (topLevelType === 'topSelectionChange' || topLevelType === 'topKeyUp' || topLevelType === 'topKeyDown') {\n\t    // On the selectionchange event, the target is just document which isn't\n\t    // helpful for us so just check activeElement instead.\n\t    //\n\t    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire\n\t    // propertychange on the first input event after setting `value` from a\n\t    // script and fires only keydown, keypress, keyup. Catching keyup usually\n\t    // gets it and catching keydown lets us fire an event for the first\n\t    // keystroke if user does a key repeat (it'll be a little delayed: right\n\t    // before the second keystroke). Other input methods (e.g., paste) seem to\n\t    // fire selectionchange normally.\n\t    if (activeElement && activeElement.value !== activeElementValue) {\n\t      activeElementValue = activeElement.value;\n\t      return activeElementInst;\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * SECTION: handle `click` event\n\t */\n\tfunction shouldUseClickEvent(elem) {\n\t  // Use the `click` event to detect changes to checkbox and radio inputs.\n\t  // This approach works across all browsers, whereas `change` does not fire\n\t  // until `blur` in IE8.\n\t  return elem.nodeName && elem.nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');\n\t}\n\t\n\tfunction getTargetInstForClickEvent(topLevelType, targetInst) {\n\t  if (topLevelType === 'topClick') {\n\t    return targetInst;\n\t  }\n\t}\n\t\n\tfunction handleControlledInputBlur(inst, node) {\n\t  // TODO: In IE, inst is occasionally null. Why?\n\t  if (inst == null) {\n\t    return;\n\t  }\n\t\n\t  // Fiber and ReactDOM keep wrapper state in separate places\n\t  var state = inst._wrapperState || node._wrapperState;\n\t\n\t  if (!state || !state.controlled || node.type !== 'number') {\n\t    return;\n\t  }\n\t\n\t  // If controlled, assign the value attribute to the current value on blur\n\t  var value = '' + node.value;\n\t  if (node.getAttribute('value') !== value) {\n\t    node.setAttribute('value', value);\n\t  }\n\t}\n\t\n\t/**\n\t * This plugin creates an `onChange` event that normalizes change events\n\t * across form elements. This event fires at a time when it's possible to\n\t * change the element's value without seeing a flicker.\n\t *\n\t * Supported elements are:\n\t * - input (see `isTextInputElement`)\n\t * - textarea\n\t * - select\n\t */\n\tvar ChangeEventPlugin = {\n\t\n\t  eventTypes: eventTypes,\n\t\n\t  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n\t    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;\n\t\n\t    var getTargetInstFunc, handleEventFunc;\n\t    if (shouldUseChangeEvent(targetNode)) {\n\t      if (doesChangeEventBubble) {\n\t        getTargetInstFunc = getTargetInstForChangeEvent;\n\t      } else {\n\t        handleEventFunc = handleEventsForChangeEventIE8;\n\t      }\n\t    } else if (isTextInputElement(targetNode)) {\n\t      if (isInputEventSupported) {\n\t        getTargetInstFunc = getTargetInstForInputEvent;\n\t      } else {\n\t        getTargetInstFunc = getTargetInstForInputEventIE;\n\t        handleEventFunc = handleEventsForInputEventIE;\n\t      }\n\t    } else if (shouldUseClickEvent(targetNode)) {\n\t      getTargetInstFunc = getTargetInstForClickEvent;\n\t    }\n\t\n\t    if (getTargetInstFunc) {\n\t      var inst = getTargetInstFunc(topLevelType, targetInst);\n\t      if (inst) {\n\t        var event = SyntheticEvent.getPooled(eventTypes.change, inst, nativeEvent, nativeEventTarget);\n\t        event.type = 'change';\n\t        EventPropagators.accumulateTwoPhaseDispatches(event);\n\t        return event;\n\t      }\n\t    }\n\t\n\t    if (handleEventFunc) {\n\t      handleEventFunc(topLevelType, targetNode, targetInst);\n\t    }\n\t\n\t    // When blurring, set the value attribute for number inputs\n\t    if (topLevelType === 'topBlur') {\n\t      handleControlledInputBlur(targetInst, targetNode);\n\t    }\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = ChangeEventPlugin;\n\n/***/ },\n/* 87 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(2);\n\t\n\tvar DOMLazyTree = __webpack_require__(15);\n\tvar ExecutionEnvironment = __webpack_require__(6);\n\t\n\tvar createNodesFromMarkup = __webpack_require__(149);\n\tvar emptyFunction = __webpack_require__(9);\n\tvar invariant = __webpack_require__(1);\n\t\n\tvar Danger = {\n\t\n\t  /**\n\t   * Replaces a node with a string of markup at its current position within its\n\t   * parent. The markup must render into a single root node.\n\t   *\n\t   * @param {DOMElement} oldChild Child node to replace.\n\t   * @param {string} markup Markup to render in place of the child node.\n\t   * @internal\n\t   */\n\t  dangerouslyReplaceNodeWithMarkup: function (oldChild, markup) {\n\t    !ExecutionEnvironment.canUseDOM ?  false ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot render markup in a worker thread. Make sure `window` and `document` are available globally before requiring React when unit testing or use ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('56') : void 0;\n\t    !markup ?  false ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Missing markup.') : _prodInvariant('57') : void 0;\n\t    !(oldChild.nodeName !== 'HTML') ?  false ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot replace markup of the <html> node. This is because browser quirks make this unreliable and/or slow. If you want to render to the root you must use server rendering. See ReactDOMServer.renderToString().') : _prodInvariant('58') : void 0;\n\t\n\t    if (typeof markup === 'string') {\n\t      var newChild = createNodesFromMarkup(markup, emptyFunction)[0];\n\t      oldChild.parentNode.replaceChild(newChild, oldChild);\n\t    } else {\n\t      DOMLazyTree.replaceChildWithTree(oldChild, markup);\n\t    }\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = Danger;\n\n/***/ },\n/* 88 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * Module that is injectable into `EventPluginHub`, that specifies a\n\t * deterministic ordering of `EventPlugin`s. A convenient way to reason about\n\t * plugins, without having to package every one of them. This is better than\n\t * having plugins be ordered in the same order that they are injected because\n\t * that ordering would be influenced by the packaging order.\n\t * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that\n\t * preventing default on events is convenient in `SimpleEventPlugin` handlers.\n\t */\n\t\n\tvar DefaultEventPluginOrder = ['ResponderEventPlugin', 'SimpleEventPlugin', 'TapEventPlugin', 'EnterLeaveEventPlugin', 'ChangeEventPlugin', 'SelectEventPlugin', 'BeforeInputEventPlugin'];\n\t\n\tmodule.exports = DefaultEventPluginOrder;\n\n/***/ },\n/* 89 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar EventPropagators = __webpack_require__(22);\n\tvar ReactDOMComponentTree = __webpack_require__(4);\n\tvar SyntheticMouseEvent = __webpack_require__(26);\n\t\n\tvar eventTypes = {\n\t  mouseEnter: {\n\t    registrationName: 'onMouseEnter',\n\t    dependencies: ['topMouseOut', 'topMouseOver']\n\t  },\n\t  mouseLeave: {\n\t    registrationName: 'onMouseLeave',\n\t    dependencies: ['topMouseOut', 'topMouseOver']\n\t  }\n\t};\n\t\n\tvar EnterLeaveEventPlugin = {\n\t\n\t  eventTypes: eventTypes,\n\t\n\t  /**\n\t   * For almost every interaction we care about, there will be both a top-level\n\t   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that\n\t   * we do not extract duplicate events. However, moving the mouse into the\n\t   * browser from outside will not fire a `mouseout` event. In this case, we use\n\t   * the `mouseover` top-level event.\n\t   */\n\t  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n\t    if (topLevelType === 'topMouseOver' && (nativeEvent.relatedTarget || nativeEvent.fromElement)) {\n\t      return null;\n\t    }\n\t    if (topLevelType !== 'topMouseOut' && topLevelType !== 'topMouseOver') {\n\t      // Must not be a mouse in or mouse out - ignoring.\n\t      return null;\n\t    }\n\t\n\t    var win;\n\t    if (nativeEventTarget.window === nativeEventTarget) {\n\t      // `nativeEventTarget` is probably a window object.\n\t      win = nativeEventTarget;\n\t    } else {\n\t      // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.\n\t      var doc = nativeEventTarget.ownerDocument;\n\t      if (doc) {\n\t        win = doc.defaultView || doc.parentWindow;\n\t      } else {\n\t        win = window;\n\t      }\n\t    }\n\t\n\t    var from;\n\t    var to;\n\t    if (topLevelType === 'topMouseOut') {\n\t      from = targetInst;\n\t      var related = nativeEvent.relatedTarget || nativeEvent.toElement;\n\t      to = related ? ReactDOMComponentTree.getClosestInstanceFromNode(related) : null;\n\t    } else {\n\t      // Moving to a node from outside the window.\n\t      from = null;\n\t      to = targetInst;\n\t    }\n\t\n\t    if (from === to) {\n\t      // Nothing pertains to our managed components.\n\t      return null;\n\t    }\n\t\n\t    var fromNode = from == null ? win : ReactDOMComponentTree.getNodeFromInstance(from);\n\t    var toNode = to == null ? win : ReactDOMComponentTree.getNodeFromInstance(to);\n\t\n\t    var leave = SyntheticMouseEvent.getPooled(eventTypes.mouseLeave, from, nativeEvent, nativeEventTarget);\n\t    leave.type = 'mouseleave';\n\t    leave.target = fromNode;\n\t    leave.relatedTarget = toNode;\n\t\n\t    var enter = SyntheticMouseEvent.getPooled(eventTypes.mouseEnter, to, nativeEvent, nativeEventTarget);\n\t    enter.type = 'mouseenter';\n\t    enter.target = toNode;\n\t    enter.relatedTarget = fromNode;\n\t\n\t    EventPropagators.accumulateEnterLeaveDispatches(leave, enter, from, to);\n\t\n\t    return [leave, enter];\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = EnterLeaveEventPlugin;\n\n/***/ },\n/* 90 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar _assign = __webpack_require__(5);\n\t\n\tvar PooledClass = __webpack_require__(13);\n\t\n\tvar getTextContentAccessor = __webpack_require__(67);\n\t\n\t/**\n\t * This helper class stores information about text content of a target node,\n\t * allowing comparison of content before and after a given event.\n\t *\n\t * Identify the node where selection currently begins, then observe\n\t * both its text content and its current position in the DOM. Since the\n\t * browser may natively replace the target node during composition, we can\n\t * use its position to find its replacement.\n\t *\n\t * @param {DOMEventTarget} root\n\t */\n\tfunction FallbackCompositionState(root) {\n\t  this._root = root;\n\t  this._startText = this.getText();\n\t  this._fallbackText = null;\n\t}\n\t\n\t_assign(FallbackCompositionState.prototype, {\n\t  destructor: function () {\n\t    this._root = null;\n\t    this._startText = null;\n\t    this._fallbackText = null;\n\t  },\n\t\n\t  /**\n\t   * Get current text of input.\n\t   *\n\t   * @return {string}\n\t   */\n\t  getText: function () {\n\t    if ('value' in this._root) {\n\t      return this._root.value;\n\t    }\n\t    return this._root[getTextContentAccessor()];\n\t  },\n\t\n\t  /**\n\t   * Determine the differing substring between the initially stored\n\t   * text content and the current content.\n\t   *\n\t   * @return {string}\n\t   */\n\t  getData: function () {\n\t    if (this._fallbackText) {\n\t      return this._fallbackText;\n\t    }\n\t\n\t    var start;\n\t    var startValue = this._startText;\n\t    var startLength = startValue.length;\n\t    var end;\n\t    var endValue = this.getText();\n\t    var endLength = endValue.length;\n\t\n\t    for (start = 0; start < startLength; start++) {\n\t      if (startValue[start] !== endValue[start]) {\n\t        break;\n\t      }\n\t    }\n\t\n\t    var minEnd = startLength - start;\n\t    for (end = 1; end <= minEnd; end++) {\n\t      if (startValue[startLength - end] !== endValue[endLength - end]) {\n\t        break;\n\t      }\n\t    }\n\t\n\t    var sliceTail = end > 1 ? 1 - end : undefined;\n\t    this._fallbackText = endValue.slice(start, sliceTail);\n\t    return this._fallbackText;\n\t  }\n\t});\n\t\n\tPooledClass.addPoolingTo(FallbackCompositionState);\n\t\n\tmodule.exports = FallbackCompositionState;\n\n/***/ },\n/* 91 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar DOMProperty = __webpack_require__(16);\n\t\n\tvar MUST_USE_PROPERTY = DOMProperty.injection.MUST_USE_PROPERTY;\n\tvar HAS_BOOLEAN_VALUE = DOMProperty.injection.HAS_BOOLEAN_VALUE;\n\tvar HAS_NUMERIC_VALUE = DOMProperty.injection.HAS_NUMERIC_VALUE;\n\tvar HAS_POSITIVE_NUMERIC_VALUE = DOMProperty.injection.HAS_POSITIVE_NUMERIC_VALUE;\n\tvar HAS_OVERLOADED_BOOLEAN_VALUE = DOMProperty.injection.HAS_OVERLOADED_BOOLEAN_VALUE;\n\t\n\tvar HTMLDOMPropertyConfig = {\n\t  isCustomAttribute: RegExp.prototype.test.bind(new RegExp('^(data|aria)-[' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$')),\n\t  Properties: {\n\t    /**\n\t     * Standard Properties\n\t     */\n\t    accept: 0,\n\t    acceptCharset: 0,\n\t    accessKey: 0,\n\t    action: 0,\n\t    allowFullScreen: HAS_BOOLEAN_VALUE,\n\t    allowTransparency: 0,\n\t    alt: 0,\n\t    // specifies target context for links with `preload` type\n\t    as: 0,\n\t    async: HAS_BOOLEAN_VALUE,\n\t    autoComplete: 0,\n\t    // autoFocus is polyfilled/normalized by AutoFocusUtils\n\t    // autoFocus: HAS_BOOLEAN_VALUE,\n\t    autoPlay: HAS_BOOLEAN_VALUE,\n\t    capture: HAS_BOOLEAN_VALUE,\n\t    cellPadding: 0,\n\t    cellSpacing: 0,\n\t    charSet: 0,\n\t    challenge: 0,\n\t    checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n\t    cite: 0,\n\t    classID: 0,\n\t    className: 0,\n\t    cols: HAS_POSITIVE_NUMERIC_VALUE,\n\t    colSpan: 0,\n\t    content: 0,\n\t    contentEditable: 0,\n\t    contextMenu: 0,\n\t    controls: HAS_BOOLEAN_VALUE,\n\t    coords: 0,\n\t    crossOrigin: 0,\n\t    data: 0, // For `<object />` acts as `src`.\n\t    dateTime: 0,\n\t    'default': HAS_BOOLEAN_VALUE,\n\t    defer: HAS_BOOLEAN_VALUE,\n\t    dir: 0,\n\t    disabled: HAS_BOOLEAN_VALUE,\n\t    download: HAS_OVERLOADED_BOOLEAN_VALUE,\n\t    draggable: 0,\n\t    encType: 0,\n\t    form: 0,\n\t    formAction: 0,\n\t    formEncType: 0,\n\t    formMethod: 0,\n\t    formNoValidate: HAS_BOOLEAN_VALUE,\n\t    formTarget: 0,\n\t    frameBorder: 0,\n\t    headers: 0,\n\t    height: 0,\n\t    hidden: HAS_BOOLEAN_VALUE,\n\t    high: 0,\n\t    href: 0,\n\t    hrefLang: 0,\n\t    htmlFor: 0,\n\t    httpEquiv: 0,\n\t    icon: 0,\n\t    id: 0,\n\t    inputMode: 0,\n\t    integrity: 0,\n\t    is: 0,\n\t    keyParams: 0,\n\t    keyType: 0,\n\t    kind: 0,\n\t    label: 0,\n\t    lang: 0,\n\t    list: 0,\n\t    loop: HAS_BOOLEAN_VALUE,\n\t    low: 0,\n\t    manifest: 0,\n\t    marginHeight: 0,\n\t    marginWidth: 0,\n\t    max: 0,\n\t    maxLength: 0,\n\t    media: 0,\n\t    mediaGroup: 0,\n\t    method: 0,\n\t    min: 0,\n\t    minLength: 0,\n\t    // Caution; `option.selected` is not updated if `select.multiple` is\n\t    // disabled with `removeAttribute`.\n\t    multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n\t    muted: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n\t    name: 0,\n\t    nonce: 0,\n\t    noValidate: HAS_BOOLEAN_VALUE,\n\t    open: HAS_BOOLEAN_VALUE,\n\t    optimum: 0,\n\t    pattern: 0,\n\t    placeholder: 0,\n\t    playsInline: HAS_BOOLEAN_VALUE,\n\t    poster: 0,\n\t    preload: 0,\n\t    profile: 0,\n\t    radioGroup: 0,\n\t    readOnly: HAS_BOOLEAN_VALUE,\n\t    referrerPolicy: 0,\n\t    rel: 0,\n\t    required: HAS_BOOLEAN_VALUE,\n\t    reversed: HAS_BOOLEAN_VALUE,\n\t    role: 0,\n\t    rows: HAS_POSITIVE_NUMERIC_VALUE,\n\t    rowSpan: HAS_NUMERIC_VALUE,\n\t    sandbox: 0,\n\t    scope: 0,\n\t    scoped: HAS_BOOLEAN_VALUE,\n\t    scrolling: 0,\n\t    seamless: HAS_BOOLEAN_VALUE,\n\t    selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n\t    shape: 0,\n\t    size: HAS_POSITIVE_NUMERIC_VALUE,\n\t    sizes: 0,\n\t    span: HAS_POSITIVE_NUMERIC_VALUE,\n\t    spellCheck: 0,\n\t    src: 0,\n\t    srcDoc: 0,\n\t    srcLang: 0,\n\t    srcSet: 0,\n\t    start: HAS_NUMERIC_VALUE,\n\t    step: 0,\n\t    style: 0,\n\t    summary: 0,\n\t    tabIndex: 0,\n\t    target: 0,\n\t    title: 0,\n\t    // Setting .type throws on non-<input> tags\n\t    type: 0,\n\t    useMap: 0,\n\t    value: 0,\n\t    width: 0,\n\t    wmode: 0,\n\t    wrap: 0,\n\t\n\t    /**\n\t     * RDFa Properties\n\t     */\n\t    about: 0,\n\t    datatype: 0,\n\t    inlist: 0,\n\t    prefix: 0,\n\t    // property is also supported for OpenGraph in meta tags.\n\t    property: 0,\n\t    resource: 0,\n\t    'typeof': 0,\n\t    vocab: 0,\n\t\n\t    /**\n\t     * Non-standard Properties\n\t     */\n\t    // autoCapitalize and autoCorrect are supported in Mobile Safari for\n\t    // keyboard hints.\n\t    autoCapitalize: 0,\n\t    autoCorrect: 0,\n\t    // autoSave allows WebKit/Blink to persist values of input fields on page reloads\n\t    autoSave: 0,\n\t    // color is for Safari mask-icon link\n\t    color: 0,\n\t    // itemProp, itemScope, itemType are for\n\t    // Microdata support. See http://schema.org/docs/gs.html\n\t    itemProp: 0,\n\t    itemScope: HAS_BOOLEAN_VALUE,\n\t    itemType: 0,\n\t    // itemID and itemRef are for Microdata support as well but\n\t    // only specified in the WHATWG spec document. See\n\t    // https://html.spec.whatwg.org/multipage/microdata.html#microdata-dom-api\n\t    itemID: 0,\n\t    itemRef: 0,\n\t    // results show looking glass icon and recent searches on input\n\t    // search fields in WebKit/Blink\n\t    results: 0,\n\t    // IE-only attribute that specifies security restrictions on an iframe\n\t    // as an alternative to the sandbox attribute on IE<10\n\t    security: 0,\n\t    // IE-only attribute that controls focus behavior\n\t    unselectable: 0\n\t  },\n\t  DOMAttributeNames: {\n\t    acceptCharset: 'accept-charset',\n\t    className: 'class',\n\t    htmlFor: 'for',\n\t    httpEquiv: 'http-equiv'\n\t  },\n\t  DOMPropertyNames: {},\n\t  DOMMutationMethods: {\n\t    value: function (node, value) {\n\t      if (value == null) {\n\t        return node.removeAttribute('value');\n\t      }\n\t\n\t      // Number inputs get special treatment due to some edge cases in\n\t      // Chrome. Let everything else assign the value attribute as normal.\n\t      // https://github.com/facebook/react/issues/7253#issuecomment-236074326\n\t      if (node.type !== 'number' || node.hasAttribute('value') === false) {\n\t        node.setAttribute('value', '' + value);\n\t      } else if (node.validity && !node.validity.badInput && node.ownerDocument.activeElement !== node) {\n\t        // Don't assign an attribute if validation reports bad\n\t        // input. Chrome will clear the value. Additionally, don't\n\t        // operate on inputs that have focus, otherwise Chrome might\n\t        // strip off trailing decimal places and cause the user's\n\t        // cursor position to jump to the beginning of the input.\n\t        //\n\t        // In ReactDOMInput, we have an onBlur event that will trigger\n\t        // this function again when focus is lost.\n\t        node.setAttribute('value', '' + value);\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\tmodule.exports = HTMLDOMPropertyConfig;\n\n/***/ },\n/* 92 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process) {/**\n\t * Copyright 2014-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactReconciler = __webpack_require__(17);\n\t\n\tvar instantiateReactComponent = __webpack_require__(68);\n\tvar KeyEscapeUtils = __webpack_require__(35);\n\tvar shouldUpdateReactComponent = __webpack_require__(45);\n\tvar traverseAllChildren = __webpack_require__(71);\n\tvar warning = __webpack_require__(3);\n\t\n\tvar ReactComponentTreeHook;\n\t\n\tif (typeof process !== 'undefined' && ({\"NODE_ENV\":\"production\",\"PUBLIC_URL\":\"/pentacular\"}) && (\"production\") === 'test') {\n\t  // Temporary hack.\n\t  // Inline requires don't work well with Jest:\n\t  // https://github.com/facebook/react/issues/7240\n\t  // Remove the inline requires when we don't need them anymore:\n\t  // https://github.com/facebook/react/pull/7178\n\t  ReactComponentTreeHook = __webpack_require__(78);\n\t}\n\t\n\tfunction instantiateChild(childInstances, child, name, selfDebugID) {\n\t  // We found a component instance.\n\t  var keyUnique = childInstances[name] === undefined;\n\t  if (false) {\n\t    if (!ReactComponentTreeHook) {\n\t      ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');\n\t    }\n\t    if (!keyUnique) {\n\t      process.env.NODE_ENV !== 'production' ? warning(false, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeHook.getStackAddendumByID(selfDebugID)) : void 0;\n\t    }\n\t  }\n\t  if (child != null && keyUnique) {\n\t    childInstances[name] = instantiateReactComponent(child, true);\n\t  }\n\t}\n\t\n\t/**\n\t * ReactChildReconciler provides helpers for initializing or updating a set of\n\t * children. Its output is suitable for passing it onto ReactMultiChild which\n\t * does diffed reordering and insertion.\n\t */\n\tvar ReactChildReconciler = {\n\t  /**\n\t   * Generates a \"mount image\" for each of the supplied children. In the case\n\t   * of `ReactDOMComponent`, a mount image is a string of markup.\n\t   *\n\t   * @param {?object} nestedChildNodes Nested child maps.\n\t   * @return {?object} A set of child instances.\n\t   * @internal\n\t   */\n\t  instantiateChildren: function (nestedChildNodes, transaction, context, selfDebugID // 0 in production and for roots\n\t  ) {\n\t    if (nestedChildNodes == null) {\n\t      return null;\n\t    }\n\t    var childInstances = {};\n\t\n\t    if (false) {\n\t      traverseAllChildren(nestedChildNodes, function (childInsts, child, name) {\n\t        return instantiateChild(childInsts, child, name, selfDebugID);\n\t      }, childInstances);\n\t    } else {\n\t      traverseAllChildren(nestedChildNodes, instantiateChild, childInstances);\n\t    }\n\t    return childInstances;\n\t  },\n\t\n\t  /**\n\t   * Updates the rendered children and returns a new set of children.\n\t   *\n\t   * @param {?object} prevChildren Previously initialized set of children.\n\t   * @param {?object} nextChildren Flat child element maps.\n\t   * @param {ReactReconcileTransaction} transaction\n\t   * @param {object} context\n\t   * @return {?object} A new set of child instances.\n\t   * @internal\n\t   */\n\t  updateChildren: function (prevChildren, nextChildren, mountImages, removedNodes, transaction, hostParent, hostContainerInfo, context, selfDebugID // 0 in production and for roots\n\t  ) {\n\t    // We currently don't have a way to track moves here but if we use iterators\n\t    // instead of for..in we can zip the iterators and check if an item has\n\t    // moved.\n\t    // TODO: If nothing has changed, return the prevChildren object so that we\n\t    // can quickly bailout if nothing has changed.\n\t    if (!nextChildren && !prevChildren) {\n\t      return;\n\t    }\n\t    var name;\n\t    var prevChild;\n\t    for (name in nextChildren) {\n\t      if (!nextChildren.hasOwnProperty(name)) {\n\t        continue;\n\t      }\n\t      prevChild = prevChildren && prevChildren[name];\n\t      var prevElement = prevChild && prevChild._currentElement;\n\t      var nextElement = nextChildren[name];\n\t      if (prevChild != null && shouldUpdateReactComponent(prevElement, nextElement)) {\n\t        ReactReconciler.receiveComponent(prevChild, nextElement, transaction, context);\n\t        nextChildren[name] = prevChild;\n\t      } else {\n\t        if (prevChild) {\n\t          removedNodes[name] = ReactReconciler.getHostNode(prevChild);\n\t          ReactReconciler.unmountComponent(prevChild, false);\n\t        }\n\t        // The child must be instantiated before it's mounted.\n\t        var nextChildInstance = instantiateReactComponent(nextElement, true);\n\t        nextChildren[name] = nextChildInstance;\n\t        // Creating mount image now ensures refs are resolved in right order\n\t        // (see https://github.com/facebook/react/pull/7101 for explanation).\n\t        var nextChildMountImage = ReactReconciler.mountComponent(nextChildInstance, transaction, hostParent, hostContainerInfo, context, selfDebugID);\n\t        mountImages.push(nextChildMountImage);\n\t      }\n\t    }\n\t    // Unmount children that are no longer present.\n\t    for (name in prevChildren) {\n\t      if (prevChildren.hasOwnProperty(name) && !(nextChildren && nextChildren.hasOwnProperty(name))) {\n\t        prevChild = prevChildren[name];\n\t        removedNodes[name] = ReactReconciler.getHostNode(prevChild);\n\t        ReactReconciler.unmountComponent(prevChild, false);\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Unmounts all rendered children. This should be used to clean up children\n\t   * when this component is unmounted.\n\t   *\n\t   * @param {?object} renderedChildren Previously initialized set of children.\n\t   * @internal\n\t   */\n\t  unmountChildren: function (renderedChildren, safely) {\n\t    for (var name in renderedChildren) {\n\t      if (renderedChildren.hasOwnProperty(name)) {\n\t        var renderedChild = renderedChildren[name];\n\t        ReactReconciler.unmountComponent(renderedChild, safely);\n\t      }\n\t    }\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = ReactChildReconciler;\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(77)))\n\n/***/ },\n/* 93 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar DOMChildrenOperations = __webpack_require__(31);\n\tvar ReactDOMIDOperations = __webpack_require__(100);\n\t\n\t/**\n\t * Abstracts away all functionality of the reconciler that requires knowledge of\n\t * the browser context. TODO: These callers should be refactored to avoid the\n\t * need for this injection.\n\t */\n\tvar ReactComponentBrowserEnvironment = {\n\t\n\t  processChildrenUpdates: ReactDOMIDOperations.dangerouslyProcessChildrenUpdates,\n\t\n\t  replaceNodeWithMarkup: DOMChildrenOperations.dangerouslyReplaceNodeWithMarkup\n\t\n\t};\n\t\n\tmodule.exports = ReactComponentBrowserEnvironment;\n\n/***/ },\n/* 94 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(2),\n\t    _assign = __webpack_require__(5);\n\t\n\tvar React = __webpack_require__(18);\n\tvar ReactComponentEnvironment = __webpack_require__(37);\n\tvar ReactCurrentOwner = __webpack_require__(11);\n\tvar ReactErrorUtils = __webpack_require__(38);\n\tvar ReactInstanceMap = __webpack_require__(23);\n\tvar ReactInstrumentation = __webpack_require__(7);\n\tvar ReactNodeTypes = __webpack_require__(62);\n\tvar ReactReconciler = __webpack_require__(17);\n\t\n\tif (false) {\n\t  var checkReactTypeSpec = require('./checkReactTypeSpec');\n\t}\n\t\n\tvar emptyObject = __webpack_require__(73);\n\tvar invariant = __webpack_require__(1);\n\tvar shallowEqual = __webpack_require__(47);\n\tvar shouldUpdateReactComponent = __webpack_require__(45);\n\tvar warning = __webpack_require__(3);\n\t\n\tvar CompositeTypes = {\n\t  ImpureClass: 0,\n\t  PureClass: 1,\n\t  StatelessFunctional: 2\n\t};\n\t\n\tfunction StatelessComponent(Component) {}\n\tStatelessComponent.prototype.render = function () {\n\t  var Component = ReactInstanceMap.get(this)._currentElement.type;\n\t  var element = Component(this.props, this.context, this.updater);\n\t  warnIfInvalidElement(Component, element);\n\t  return element;\n\t};\n\t\n\tfunction warnIfInvalidElement(Component, element) {\n\t  if (false) {\n\t    process.env.NODE_ENV !== 'production' ? warning(element === null || element === false || React.isValidElement(element), '%s(...): A valid React element (or null) must be returned. You may have ' + 'returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : void 0;\n\t    process.env.NODE_ENV !== 'production' ? warning(!Component.childContextTypes, '%s(...): childContextTypes cannot be defined on a functional component.', Component.displayName || Component.name || 'Component') : void 0;\n\t  }\n\t}\n\t\n\tfunction shouldConstruct(Component) {\n\t  return !!(Component.prototype && Component.prototype.isReactComponent);\n\t}\n\t\n\tfunction isPureComponent(Component) {\n\t  return !!(Component.prototype && Component.prototype.isPureReactComponent);\n\t}\n\t\n\t// Separated into a function to contain deoptimizations caused by try/finally.\n\tfunction measureLifeCyclePerf(fn, debugID, timerType) {\n\t  if (debugID === 0) {\n\t    // Top-level wrappers (see ReactMount) and empty components (see\n\t    // ReactDOMEmptyComponent) are invisible to hooks and devtools.\n\t    // Both are implementation details that should go away in the future.\n\t    return fn();\n\t  }\n\t\n\t  ReactInstrumentation.debugTool.onBeginLifeCycleTimer(debugID, timerType);\n\t  try {\n\t    return fn();\n\t  } finally {\n\t    ReactInstrumentation.debugTool.onEndLifeCycleTimer(debugID, timerType);\n\t  }\n\t}\n\t\n\t/**\n\t * ------------------ The Life-Cycle of a Composite Component ------------------\n\t *\n\t * - constructor: Initialization of state. The instance is now retained.\n\t *   - componentWillMount\n\t *   - render\n\t *   - [children's constructors]\n\t *     - [children's componentWillMount and render]\n\t *     - [children's componentDidMount]\n\t *     - componentDidMount\n\t *\n\t *       Update Phases:\n\t *       - componentWillReceiveProps (only called if parent updated)\n\t *       - shouldComponentUpdate\n\t *         - componentWillUpdate\n\t *           - render\n\t *           - [children's constructors or receive props phases]\n\t *         - componentDidUpdate\n\t *\n\t *     - componentWillUnmount\n\t *     - [children's componentWillUnmount]\n\t *   - [children destroyed]\n\t * - (destroyed): The instance is now blank, released by React and ready for GC.\n\t *\n\t * -----------------------------------------------------------------------------\n\t */\n\t\n\t/**\n\t * An incrementing ID assigned to each component when it is mounted. This is\n\t * used to enforce the order in which `ReactUpdates` updates dirty components.\n\t *\n\t * @private\n\t */\n\tvar nextMountID = 1;\n\t\n\t/**\n\t * @lends {ReactCompositeComponent.prototype}\n\t */\n\tvar ReactCompositeComponent = {\n\t\n\t  /**\n\t   * Base constructor for all composite component.\n\t   *\n\t   * @param {ReactElement} element\n\t   * @final\n\t   * @internal\n\t   */\n\t  construct: function (element) {\n\t    this._currentElement = element;\n\t    this._rootNodeID = 0;\n\t    this._compositeType = null;\n\t    this._instance = null;\n\t    this._hostParent = null;\n\t    this._hostContainerInfo = null;\n\t\n\t    // See ReactUpdateQueue\n\t    this._updateBatchNumber = null;\n\t    this._pendingElement = null;\n\t    this._pendingStateQueue = null;\n\t    this._pendingReplaceState = false;\n\t    this._pendingForceUpdate = false;\n\t\n\t    this._renderedNodeType = null;\n\t    this._renderedComponent = null;\n\t    this._context = null;\n\t    this._mountOrder = 0;\n\t    this._topLevelWrapper = null;\n\t\n\t    // See ReactUpdates and ReactUpdateQueue.\n\t    this._pendingCallbacks = null;\n\t\n\t    // ComponentWillUnmount shall only be called once\n\t    this._calledComponentWillUnmount = false;\n\t\n\t    if (false) {\n\t      this._warnedAboutRefsInRender = false;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Initializes the component, renders markup, and registers event listeners.\n\t   *\n\t   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n\t   * @param {?object} hostParent\n\t   * @param {?object} hostContainerInfo\n\t   * @param {?object} context\n\t   * @return {?string} Rendered markup to be inserted into the DOM.\n\t   * @final\n\t   * @internal\n\t   */\n\t  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {\n\t    var _this = this;\n\t\n\t    this._context = context;\n\t    this._mountOrder = nextMountID++;\n\t    this._hostParent = hostParent;\n\t    this._hostContainerInfo = hostContainerInfo;\n\t\n\t    var publicProps = this._currentElement.props;\n\t    var publicContext = this._processContext(context);\n\t\n\t    var Component = this._currentElement.type;\n\t\n\t    var updateQueue = transaction.getUpdateQueue();\n\t\n\t    // Initialize the public class\n\t    var doConstruct = shouldConstruct(Component);\n\t    var inst = this._constructComponent(doConstruct, publicProps, publicContext, updateQueue);\n\t    var renderedElement;\n\t\n\t    // Support functional components\n\t    if (!doConstruct && (inst == null || inst.render == null)) {\n\t      renderedElement = inst;\n\t      warnIfInvalidElement(Component, renderedElement);\n\t      !(inst === null || inst === false || React.isValidElement(inst)) ?  false ? invariant(false, '%s(...): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : _prodInvariant('105', Component.displayName || Component.name || 'Component') : void 0;\n\t      inst = new StatelessComponent(Component);\n\t      this._compositeType = CompositeTypes.StatelessFunctional;\n\t    } else {\n\t      if (isPureComponent(Component)) {\n\t        this._compositeType = CompositeTypes.PureClass;\n\t      } else {\n\t        this._compositeType = CompositeTypes.ImpureClass;\n\t      }\n\t    }\n\t\n\t    if (false) {\n\t      // This will throw later in _renderValidatedComponent, but add an early\n\t      // warning now to help debugging\n\t      if (inst.render == null) {\n\t        process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`.', Component.displayName || Component.name || 'Component') : void 0;\n\t      }\n\t\n\t      var propsMutated = inst.props !== publicProps;\n\t      var componentName = Component.displayName || Component.name || 'Component';\n\t\n\t      process.env.NODE_ENV !== 'production' ? warning(inst.props === undefined || !propsMutated, '%s(...): When calling super() in `%s`, make sure to pass ' + 'up the same props that your component\\'s constructor was passed.', componentName, componentName) : void 0;\n\t    }\n\t\n\t    // These should be set up in the constructor, but as a convenience for\n\t    // simpler class abstractions, we set them up after the fact.\n\t    inst.props = publicProps;\n\t    inst.context = publicContext;\n\t    inst.refs = emptyObject;\n\t    inst.updater = updateQueue;\n\t\n\t    this._instance = inst;\n\t\n\t    // Store a reference from the instance back to the internal representation\n\t    ReactInstanceMap.set(inst, this);\n\t\n\t    if (false) {\n\t      // Since plain JS classes are defined without any special initialization\n\t      // logic, we can not catch common errors early. Therefore, we have to\n\t      // catch them here, at initialization time, instead.\n\t      process.env.NODE_ENV !== 'production' ? warning(!inst.getInitialState || inst.getInitialState.isReactClassApproved || inst.state, 'getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', this.getName() || 'a component') : void 0;\n\t      process.env.NODE_ENV !== 'production' ? warning(!inst.getDefaultProps || inst.getDefaultProps.isReactClassApproved, 'getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', this.getName() || 'a component') : void 0;\n\t      process.env.NODE_ENV !== 'production' ? warning(!inst.propTypes, 'propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', this.getName() || 'a component') : void 0;\n\t      process.env.NODE_ENV !== 'production' ? warning(!inst.contextTypes, 'contextTypes was defined as an instance property on %s. Use a ' + 'static property to define contextTypes instead.', this.getName() || 'a component') : void 0;\n\t      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentShouldUpdate !== 'function', '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', this.getName() || 'A component') : void 0;\n\t      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentDidUnmount !== 'function', '%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', this.getName() || 'A component') : void 0;\n\t      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentWillRecieveProps !== 'function', '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', this.getName() || 'A component') : void 0;\n\t    }\n\t\n\t    var initialState = inst.state;\n\t    if (initialState === undefined) {\n\t      inst.state = initialState = null;\n\t    }\n\t    !(typeof initialState === 'object' && !Array.isArray(initialState)) ?  false ? invariant(false, '%s.state: must be set to an object or null', this.getName() || 'ReactCompositeComponent') : _prodInvariant('106', this.getName() || 'ReactCompositeComponent') : void 0;\n\t\n\t    this._pendingStateQueue = null;\n\t    this._pendingReplaceState = false;\n\t    this._pendingForceUpdate = false;\n\t\n\t    var markup;\n\t    if (inst.unstable_handleError) {\n\t      markup = this.performInitialMountWithErrorHandling(renderedElement, hostParent, hostContainerInfo, transaction, context);\n\t    } else {\n\t      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);\n\t    }\n\t\n\t    if (inst.componentDidMount) {\n\t      if (false) {\n\t        transaction.getReactMountReady().enqueue(function () {\n\t          measureLifeCyclePerf(function () {\n\t            return inst.componentDidMount();\n\t          }, _this._debugID, 'componentDidMount');\n\t        });\n\t      } else {\n\t        transaction.getReactMountReady().enqueue(inst.componentDidMount, inst);\n\t      }\n\t    }\n\t\n\t    return markup;\n\t  },\n\t\n\t  _constructComponent: function (doConstruct, publicProps, publicContext, updateQueue) {\n\t    if (false) {\n\t      ReactCurrentOwner.current = this;\n\t      try {\n\t        return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue);\n\t      } finally {\n\t        ReactCurrentOwner.current = null;\n\t      }\n\t    } else {\n\t      return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue);\n\t    }\n\t  },\n\t\n\t  _constructComponentWithoutOwner: function (doConstruct, publicProps, publicContext, updateQueue) {\n\t    var Component = this._currentElement.type;\n\t\n\t    if (doConstruct) {\n\t      if (false) {\n\t        return measureLifeCyclePerf(function () {\n\t          return new Component(publicProps, publicContext, updateQueue);\n\t        }, this._debugID, 'ctor');\n\t      } else {\n\t        return new Component(publicProps, publicContext, updateQueue);\n\t      }\n\t    }\n\t\n\t    // This can still be an instance in case of factory components\n\t    // but we'll count this as time spent rendering as the more common case.\n\t    if (false) {\n\t      return measureLifeCyclePerf(function () {\n\t        return Component(publicProps, publicContext, updateQueue);\n\t      }, this._debugID, 'render');\n\t    } else {\n\t      return Component(publicProps, publicContext, updateQueue);\n\t    }\n\t  },\n\t\n\t  performInitialMountWithErrorHandling: function (renderedElement, hostParent, hostContainerInfo, transaction, context) {\n\t    var markup;\n\t    var checkpoint = transaction.checkpoint();\n\t    try {\n\t      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);\n\t    } catch (e) {\n\t      // Roll back to checkpoint, handle error (which may add items to the transaction), and take a new checkpoint\n\t      transaction.rollback(checkpoint);\n\t      this._instance.unstable_handleError(e);\n\t      if (this._pendingStateQueue) {\n\t        this._instance.state = this._processPendingState(this._instance.props, this._instance.context);\n\t      }\n\t      checkpoint = transaction.checkpoint();\n\t\n\t      this._renderedComponent.unmountComponent(true);\n\t      transaction.rollback(checkpoint);\n\t\n\t      // Try again - we've informed the component about the error, so they can render an error message this time.\n\t      // If this throws again, the error will bubble up (and can be caught by a higher error boundary).\n\t      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);\n\t    }\n\t    return markup;\n\t  },\n\t\n\t  performInitialMount: function (renderedElement, hostParent, hostContainerInfo, transaction, context) {\n\t    var inst = this._instance;\n\t\n\t    var debugID = 0;\n\t    if (false) {\n\t      debugID = this._debugID;\n\t    }\n\t\n\t    if (inst.componentWillMount) {\n\t      if (false) {\n\t        measureLifeCyclePerf(function () {\n\t          return inst.componentWillMount();\n\t        }, debugID, 'componentWillMount');\n\t      } else {\n\t        inst.componentWillMount();\n\t      }\n\t      // When mounting, calls to `setState` by `componentWillMount` will set\n\t      // `this._pendingStateQueue` without triggering a re-render.\n\t      if (this._pendingStateQueue) {\n\t        inst.state = this._processPendingState(inst.props, inst.context);\n\t      }\n\t    }\n\t\n\t    // If not a stateless component, we now render\n\t    if (renderedElement === undefined) {\n\t      renderedElement = this._renderValidatedComponent();\n\t    }\n\t\n\t    var nodeType = ReactNodeTypes.getType(renderedElement);\n\t    this._renderedNodeType = nodeType;\n\t    var child = this._instantiateReactComponent(renderedElement, nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */\n\t    );\n\t    this._renderedComponent = child;\n\t\n\t    var markup = ReactReconciler.mountComponent(child, transaction, hostParent, hostContainerInfo, this._processChildContext(context), debugID);\n\t\n\t    if (false) {\n\t      if (debugID !== 0) {\n\t        var childDebugIDs = child._debugID !== 0 ? [child._debugID] : [];\n\t        ReactInstrumentation.debugTool.onSetChildren(debugID, childDebugIDs);\n\t      }\n\t    }\n\t\n\t    return markup;\n\t  },\n\t\n\t  getHostNode: function () {\n\t    return ReactReconciler.getHostNode(this._renderedComponent);\n\t  },\n\t\n\t  /**\n\t   * Releases any resources allocated by `mountComponent`.\n\t   *\n\t   * @final\n\t   * @internal\n\t   */\n\t  unmountComponent: function (safely) {\n\t    if (!this._renderedComponent) {\n\t      return;\n\t    }\n\t\n\t    var inst = this._instance;\n\t\n\t    if (inst.componentWillUnmount && !inst._calledComponentWillUnmount) {\n\t      inst._calledComponentWillUnmount = true;\n\t\n\t      if (safely) {\n\t        var name = this.getName() + '.componentWillUnmount()';\n\t        ReactErrorUtils.invokeGuardedCallback(name, inst.componentWillUnmount.bind(inst));\n\t      } else {\n\t        if (false) {\n\t          measureLifeCyclePerf(function () {\n\t            return inst.componentWillUnmount();\n\t          }, this._debugID, 'componentWillUnmount');\n\t        } else {\n\t          inst.componentWillUnmount();\n\t        }\n\t      }\n\t    }\n\t\n\t    if (this._renderedComponent) {\n\t      ReactReconciler.unmountComponent(this._renderedComponent, safely);\n\t      this._renderedNodeType = null;\n\t      this._renderedComponent = null;\n\t      this._instance = null;\n\t    }\n\t\n\t    // Reset pending fields\n\t    // Even if this component is scheduled for another update in ReactUpdates,\n\t    // it would still be ignored because these fields are reset.\n\t    this._pendingStateQueue = null;\n\t    this._pendingReplaceState = false;\n\t    this._pendingForceUpdate = false;\n\t    this._pendingCallbacks = null;\n\t    this._pendingElement = null;\n\t\n\t    // These fields do not really need to be reset since this object is no\n\t    // longer accessible.\n\t    this._context = null;\n\t    this._rootNodeID = 0;\n\t    this._topLevelWrapper = null;\n\t\n\t    // Delete the reference from the instance to this internal representation\n\t    // which allow the internals to be properly cleaned up even if the user\n\t    // leaks a reference to the public instance.\n\t    ReactInstanceMap.remove(inst);\n\t\n\t    // Some existing components rely on inst.props even after they've been\n\t    // destroyed (in event handlers).\n\t    // TODO: inst.props = null;\n\t    // TODO: inst.state = null;\n\t    // TODO: inst.context = null;\n\t  },\n\t\n\t  /**\n\t   * Filters the context object to only contain keys specified in\n\t   * `contextTypes`\n\t   *\n\t   * @param {object} context\n\t   * @return {?object}\n\t   * @private\n\t   */\n\t  _maskContext: function (context) {\n\t    var Component = this._currentElement.type;\n\t    var contextTypes = Component.contextTypes;\n\t    if (!contextTypes) {\n\t      return emptyObject;\n\t    }\n\t    var maskedContext = {};\n\t    for (var contextName in contextTypes) {\n\t      maskedContext[contextName] = context[contextName];\n\t    }\n\t    return maskedContext;\n\t  },\n\t\n\t  /**\n\t   * Filters the context object to only contain keys specified in\n\t   * `contextTypes`, and asserts that they are valid.\n\t   *\n\t   * @param {object} context\n\t   * @return {?object}\n\t   * @private\n\t   */\n\t  _processContext: function (context) {\n\t    var maskedContext = this._maskContext(context);\n\t    if (false) {\n\t      var Component = this._currentElement.type;\n\t      if (Component.contextTypes) {\n\t        this._checkContextTypes(Component.contextTypes, maskedContext, 'context');\n\t      }\n\t    }\n\t    return maskedContext;\n\t  },\n\t\n\t  /**\n\t   * @param {object} currentContext\n\t   * @return {object}\n\t   * @private\n\t   */\n\t  _processChildContext: function (currentContext) {\n\t    var Component = this._currentElement.type;\n\t    var inst = this._instance;\n\t    var childContext;\n\t\n\t    if (inst.getChildContext) {\n\t      if (false) {\n\t        ReactInstrumentation.debugTool.onBeginProcessingChildContext();\n\t        try {\n\t          childContext = inst.getChildContext();\n\t        } finally {\n\t          ReactInstrumentation.debugTool.onEndProcessingChildContext();\n\t        }\n\t      } else {\n\t        childContext = inst.getChildContext();\n\t      }\n\t    }\n\t\n\t    if (childContext) {\n\t      !(typeof Component.childContextTypes === 'object') ?  false ? invariant(false, '%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().', this.getName() || 'ReactCompositeComponent') : _prodInvariant('107', this.getName() || 'ReactCompositeComponent') : void 0;\n\t      if (false) {\n\t        this._checkContextTypes(Component.childContextTypes, childContext, 'child context');\n\t      }\n\t      for (var name in childContext) {\n\t        !(name in Component.childContextTypes) ?  false ? invariant(false, '%s.getChildContext(): key \"%s\" is not defined in childContextTypes.', this.getName() || 'ReactCompositeComponent', name) : _prodInvariant('108', this.getName() || 'ReactCompositeComponent', name) : void 0;\n\t      }\n\t      return _assign({}, currentContext, childContext);\n\t    }\n\t    return currentContext;\n\t  },\n\t\n\t  /**\n\t   * Assert that the context types are valid\n\t   *\n\t   * @param {object} typeSpecs Map of context field to a ReactPropType\n\t   * @param {object} values Runtime values that need to be type-checked\n\t   * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n\t   * @private\n\t   */\n\t  _checkContextTypes: function (typeSpecs, values, location) {\n\t    if (false) {\n\t      checkReactTypeSpec(typeSpecs, values, location, this.getName(), null, this._debugID);\n\t    }\n\t  },\n\t\n\t  receiveComponent: function (nextElement, transaction, nextContext) {\n\t    var prevElement = this._currentElement;\n\t    var prevContext = this._context;\n\t\n\t    this._pendingElement = null;\n\t\n\t    this.updateComponent(transaction, prevElement, nextElement, prevContext, nextContext);\n\t  },\n\t\n\t  /**\n\t   * If any of `_pendingElement`, `_pendingStateQueue`, or `_pendingForceUpdate`\n\t   * is set, update the component.\n\t   *\n\t   * @param {ReactReconcileTransaction} transaction\n\t   * @internal\n\t   */\n\t  performUpdateIfNecessary: function (transaction) {\n\t    if (this._pendingElement != null) {\n\t      ReactReconciler.receiveComponent(this, this._pendingElement, transaction, this._context);\n\t    } else if (this._pendingStateQueue !== null || this._pendingForceUpdate) {\n\t      this.updateComponent(transaction, this._currentElement, this._currentElement, this._context, this._context);\n\t    } else {\n\t      this._updateBatchNumber = null;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Perform an update to a mounted component. The componentWillReceiveProps and\n\t   * shouldComponentUpdate methods are called, then (assuming the update isn't\n\t   * skipped) the remaining update lifecycle methods are called and the DOM\n\t   * representation is updated.\n\t   *\n\t   * By default, this implements React's rendering and reconciliation algorithm.\n\t   * Sophisticated clients may wish to override this.\n\t   *\n\t   * @param {ReactReconcileTransaction} transaction\n\t   * @param {ReactElement} prevParentElement\n\t   * @param {ReactElement} nextParentElement\n\t   * @internal\n\t   * @overridable\n\t   */\n\t  updateComponent: function (transaction, prevParentElement, nextParentElement, prevUnmaskedContext, nextUnmaskedContext) {\n\t    var inst = this._instance;\n\t    !(inst != null) ?  false ? invariant(false, 'Attempted to update component `%s` that has already been unmounted (or failed to mount).', this.getName() || 'ReactCompositeComponent') : _prodInvariant('136', this.getName() || 'ReactCompositeComponent') : void 0;\n\t\n\t    var willReceive = false;\n\t    var nextContext;\n\t\n\t    // Determine if the context has changed or not\n\t    if (this._context === nextUnmaskedContext) {\n\t      nextContext = inst.context;\n\t    } else {\n\t      nextContext = this._processContext(nextUnmaskedContext);\n\t      willReceive = true;\n\t    }\n\t\n\t    var prevProps = prevParentElement.props;\n\t    var nextProps = nextParentElement.props;\n\t\n\t    // Not a simple state update but a props update\n\t    if (prevParentElement !== nextParentElement) {\n\t      willReceive = true;\n\t    }\n\t\n\t    // An update here will schedule an update but immediately set\n\t    // _pendingStateQueue which will ensure that any state updates gets\n\t    // immediately reconciled instead of waiting for the next batch.\n\t    if (willReceive && inst.componentWillReceiveProps) {\n\t      if (false) {\n\t        measureLifeCyclePerf(function () {\n\t          return inst.componentWillReceiveProps(nextProps, nextContext);\n\t        }, this._debugID, 'componentWillReceiveProps');\n\t      } else {\n\t        inst.componentWillReceiveProps(nextProps, nextContext);\n\t      }\n\t    }\n\t\n\t    var nextState = this._processPendingState(nextProps, nextContext);\n\t    var shouldUpdate = true;\n\t\n\t    if (!this._pendingForceUpdate) {\n\t      if (inst.shouldComponentUpdate) {\n\t        if (false) {\n\t          shouldUpdate = measureLifeCyclePerf(function () {\n\t            return inst.shouldComponentUpdate(nextProps, nextState, nextContext);\n\t          }, this._debugID, 'shouldComponentUpdate');\n\t        } else {\n\t          shouldUpdate = inst.shouldComponentUpdate(nextProps, nextState, nextContext);\n\t        }\n\t      } else {\n\t        if (this._compositeType === CompositeTypes.PureClass) {\n\t          shouldUpdate = !shallowEqual(prevProps, nextProps) || !shallowEqual(inst.state, nextState);\n\t        }\n\t      }\n\t    }\n\t\n\t    if (false) {\n\t      process.env.NODE_ENV !== 'production' ? warning(shouldUpdate !== undefined, '%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', this.getName() || 'ReactCompositeComponent') : void 0;\n\t    }\n\t\n\t    this._updateBatchNumber = null;\n\t    if (shouldUpdate) {\n\t      this._pendingForceUpdate = false;\n\t      // Will set `this.props`, `this.state` and `this.context`.\n\t      this._performComponentUpdate(nextParentElement, nextProps, nextState, nextContext, transaction, nextUnmaskedContext);\n\t    } else {\n\t      // If it's determined that a component should not update, we still want\n\t      // to set props and state but we shortcut the rest of the update.\n\t      this._currentElement = nextParentElement;\n\t      this._context = nextUnmaskedContext;\n\t      inst.props = nextProps;\n\t      inst.state = nextState;\n\t      inst.context = nextContext;\n\t    }\n\t  },\n\t\n\t  _processPendingState: function (props, context) {\n\t    var inst = this._instance;\n\t    var queue = this._pendingStateQueue;\n\t    var replace = this._pendingReplaceState;\n\t    this._pendingReplaceState = false;\n\t    this._pendingStateQueue = null;\n\t\n\t    if (!queue) {\n\t      return inst.state;\n\t    }\n\t\n\t    if (replace && queue.length === 1) {\n\t      return queue[0];\n\t    }\n\t\n\t    var nextState = _assign({}, replace ? queue[0] : inst.state);\n\t    for (var i = replace ? 1 : 0; i < queue.length; i++) {\n\t      var partial = queue[i];\n\t      _assign(nextState, typeof partial === 'function' ? partial.call(inst, nextState, props, context) : partial);\n\t    }\n\t\n\t    return nextState;\n\t  },\n\t\n\t  /**\n\t   * Merges new props and state, notifies delegate methods of update and\n\t   * performs update.\n\t   *\n\t   * @param {ReactElement} nextElement Next element\n\t   * @param {object} nextProps Next public object to set as properties.\n\t   * @param {?object} nextState Next object to set as state.\n\t   * @param {?object} nextContext Next public object to set as context.\n\t   * @param {ReactReconcileTransaction} transaction\n\t   * @param {?object} unmaskedContext\n\t   * @private\n\t   */\n\t  _performComponentUpdate: function (nextElement, nextProps, nextState, nextContext, transaction, unmaskedContext) {\n\t    var _this2 = this;\n\t\n\t    var inst = this._instance;\n\t\n\t    var hasComponentDidUpdate = Boolean(inst.componentDidUpdate);\n\t    var prevProps;\n\t    var prevState;\n\t    var prevContext;\n\t    if (hasComponentDidUpdate) {\n\t      prevProps = inst.props;\n\t      prevState = inst.state;\n\t      prevContext = inst.context;\n\t    }\n\t\n\t    if (inst.componentWillUpdate) {\n\t      if (false) {\n\t        measureLifeCyclePerf(function () {\n\t          return inst.componentWillUpdate(nextProps, nextState, nextContext);\n\t        }, this._debugID, 'componentWillUpdate');\n\t      } else {\n\t        inst.componentWillUpdate(nextProps, nextState, nextContext);\n\t      }\n\t    }\n\t\n\t    this._currentElement = nextElement;\n\t    this._context = unmaskedContext;\n\t    inst.props = nextProps;\n\t    inst.state = nextState;\n\t    inst.context = nextContext;\n\t\n\t    this._updateRenderedComponent(transaction, unmaskedContext);\n\t\n\t    if (hasComponentDidUpdate) {\n\t      if (false) {\n\t        transaction.getReactMountReady().enqueue(function () {\n\t          measureLifeCyclePerf(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), _this2._debugID, 'componentDidUpdate');\n\t        });\n\t      } else {\n\t        transaction.getReactMountReady().enqueue(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), inst);\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Call the component's `render` method and update the DOM accordingly.\n\t   *\n\t   * @param {ReactReconcileTransaction} transaction\n\t   * @internal\n\t   */\n\t  _updateRenderedComponent: function (transaction, context) {\n\t    var prevComponentInstance = this._renderedComponent;\n\t    var prevRenderedElement = prevComponentInstance._currentElement;\n\t    var nextRenderedElement = this._renderValidatedComponent();\n\t\n\t    var debugID = 0;\n\t    if (false) {\n\t      debugID = this._debugID;\n\t    }\n\t\n\t    if (shouldUpdateReactComponent(prevRenderedElement, nextRenderedElement)) {\n\t      ReactReconciler.receiveComponent(prevComponentInstance, nextRenderedElement, transaction, this._processChildContext(context));\n\t    } else {\n\t      var oldHostNode = ReactReconciler.getHostNode(prevComponentInstance);\n\t      ReactReconciler.unmountComponent(prevComponentInstance, false);\n\t\n\t      var nodeType = ReactNodeTypes.getType(nextRenderedElement);\n\t      this._renderedNodeType = nodeType;\n\t      var child = this._instantiateReactComponent(nextRenderedElement, nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */\n\t      );\n\t      this._renderedComponent = child;\n\t\n\t      var nextMarkup = ReactReconciler.mountComponent(child, transaction, this._hostParent, this._hostContainerInfo, this._processChildContext(context), debugID);\n\t\n\t      if (false) {\n\t        if (debugID !== 0) {\n\t          var childDebugIDs = child._debugID !== 0 ? [child._debugID] : [];\n\t          ReactInstrumentation.debugTool.onSetChildren(debugID, childDebugIDs);\n\t        }\n\t      }\n\t\n\t      this._replaceNodeWithMarkup(oldHostNode, nextMarkup, prevComponentInstance);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Overridden in shallow rendering.\n\t   *\n\t   * @protected\n\t   */\n\t  _replaceNodeWithMarkup: function (oldHostNode, nextMarkup, prevInstance) {\n\t    ReactComponentEnvironment.replaceNodeWithMarkup(oldHostNode, nextMarkup, prevInstance);\n\t  },\n\t\n\t  /**\n\t   * @protected\n\t   */\n\t  _renderValidatedComponentWithoutOwnerOrContext: function () {\n\t    var inst = this._instance;\n\t    var renderedElement;\n\t\n\t    if (false) {\n\t      renderedElement = measureLifeCyclePerf(function () {\n\t        return inst.render();\n\t      }, this._debugID, 'render');\n\t    } else {\n\t      renderedElement = inst.render();\n\t    }\n\t\n\t    if (false) {\n\t      // We allow auto-mocks to proceed as if they're returning null.\n\t      if (renderedElement === undefined && inst.render._isMockFunction) {\n\t        // This is probably bad practice. Consider warning here and\n\t        // deprecating this convenience.\n\t        renderedElement = null;\n\t      }\n\t    }\n\t\n\t    return renderedElement;\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  _renderValidatedComponent: function () {\n\t    var renderedElement;\n\t    if ((\"production\") !== 'production' || this._compositeType !== CompositeTypes.StatelessFunctional) {\n\t      ReactCurrentOwner.current = this;\n\t      try {\n\t        renderedElement = this._renderValidatedComponentWithoutOwnerOrContext();\n\t      } finally {\n\t        ReactCurrentOwner.current = null;\n\t      }\n\t    } else {\n\t      renderedElement = this._renderValidatedComponentWithoutOwnerOrContext();\n\t    }\n\t    !(\n\t    // TODO: An `isValidNode` function would probably be more appropriate\n\t    renderedElement === null || renderedElement === false || React.isValidElement(renderedElement)) ?  false ? invariant(false, '%s.render(): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', this.getName() || 'ReactCompositeComponent') : _prodInvariant('109', this.getName() || 'ReactCompositeComponent') : void 0;\n\t\n\t    return renderedElement;\n\t  },\n\t\n\t  /**\n\t   * Lazily allocates the refs object and stores `component` as `ref`.\n\t   *\n\t   * @param {string} ref Reference name.\n\t   * @param {component} component Component to store as `ref`.\n\t   * @final\n\t   * @private\n\t   */\n\t  attachRef: function (ref, component) {\n\t    var inst = this.getPublicInstance();\n\t    !(inst != null) ?  false ? invariant(false, 'Stateless function components cannot have refs.') : _prodInvariant('110') : void 0;\n\t    var publicComponentInstance = component.getPublicInstance();\n\t    if (false) {\n\t      var componentName = component && component.getName ? component.getName() : 'a component';\n\t      process.env.NODE_ENV !== 'production' ? warning(publicComponentInstance != null || component._compositeType !== CompositeTypes.StatelessFunctional, 'Stateless function components cannot be given refs ' + '(See ref \"%s\" in %s created by %s). ' + 'Attempts to access this ref will fail.', ref, componentName, this.getName()) : void 0;\n\t    }\n\t    var refs = inst.refs === emptyObject ? inst.refs = {} : inst.refs;\n\t    refs[ref] = publicComponentInstance;\n\t  },\n\t\n\t  /**\n\t   * Detaches a reference name.\n\t   *\n\t   * @param {string} ref Name to dereference.\n\t   * @final\n\t   * @private\n\t   */\n\t  detachRef: function (ref) {\n\t    var refs = this.getPublicInstance().refs;\n\t    delete refs[ref];\n\t  },\n\t\n\t  /**\n\t   * Get a text description of the component that can be used to identify it\n\t   * in error messages.\n\t   * @return {string} The name or null.\n\t   * @internal\n\t   */\n\t  getName: function () {\n\t    var type = this._currentElement.type;\n\t    var constructor = this._instance && this._instance.constructor;\n\t    return type.displayName || constructor && constructor.displayName || type.name || constructor && constructor.name || null;\n\t  },\n\t\n\t  /**\n\t   * Get the publicly accessible representation of this component - i.e. what\n\t   * is exposed by refs and returned by render. Can be null for stateless\n\t   * components.\n\t   *\n\t   * @return {ReactComponent} the public component instance.\n\t   * @internal\n\t   */\n\t  getPublicInstance: function () {\n\t    var inst = this._instance;\n\t    if (this._compositeType === CompositeTypes.StatelessFunctional) {\n\t      return null;\n\t    }\n\t    return inst;\n\t  },\n\t\n\t  // Stub\n\t  _instantiateReactComponent: null\n\t\n\t};\n\t\n\tmodule.exports = ReactCompositeComponent;\n\n/***/ },\n/* 95 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t/* globals __REACT_DEVTOOLS_GLOBAL_HOOK__*/\n\t\n\t'use strict';\n\t\n\tvar ReactDOMComponentTree = __webpack_require__(4);\n\tvar ReactDefaultInjection = __webpack_require__(108);\n\tvar ReactMount = __webpack_require__(61);\n\tvar ReactReconciler = __webpack_require__(17);\n\tvar ReactUpdates = __webpack_require__(8);\n\tvar ReactVersion = __webpack_require__(121);\n\t\n\tvar findDOMNode = __webpack_require__(137);\n\tvar getHostComponentFromComposite = __webpack_require__(66);\n\tvar renderSubtreeIntoContainer = __webpack_require__(144);\n\tvar warning = __webpack_require__(3);\n\t\n\tReactDefaultInjection.inject();\n\t\n\tvar ReactDOM = {\n\t  findDOMNode: findDOMNode,\n\t  render: ReactMount.render,\n\t  unmountComponentAtNode: ReactMount.unmountComponentAtNode,\n\t  version: ReactVersion,\n\t\n\t  /* eslint-disable camelcase */\n\t  unstable_batchedUpdates: ReactUpdates.batchedUpdates,\n\t  unstable_renderSubtreeIntoContainer: renderSubtreeIntoContainer\n\t};\n\t\n\t// Inject the runtime into a devtools global hook regardless of browser.\n\t// Allows for debugging when the hook is injected on the page.\n\tif (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject === 'function') {\n\t  __REACT_DEVTOOLS_GLOBAL_HOOK__.inject({\n\t    ComponentTree: {\n\t      getClosestInstanceFromNode: ReactDOMComponentTree.getClosestInstanceFromNode,\n\t      getNodeFromInstance: function (inst) {\n\t        // inst is an internal instance (but could be a composite)\n\t        if (inst._renderedComponent) {\n\t          inst = getHostComponentFromComposite(inst);\n\t        }\n\t        if (inst) {\n\t          return ReactDOMComponentTree.getNodeFromInstance(inst);\n\t        } else {\n\t          return null;\n\t        }\n\t      }\n\t    },\n\t    Mount: ReactMount,\n\t    Reconciler: ReactReconciler\n\t  });\n\t}\n\t\n\tif (false) {\n\t  var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\n\t  if (ExecutionEnvironment.canUseDOM && window.top === window.self) {\n\t\n\t    // First check if devtools is not installed\n\t    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {\n\t      // If we're in Chrome or Firefox, provide a download link if not installed.\n\t      if (navigator.userAgent.indexOf('Chrome') > -1 && navigator.userAgent.indexOf('Edge') === -1 || navigator.userAgent.indexOf('Firefox') > -1) {\n\t        // Firefox does not have the issue with devtools loaded over file://\n\t        var showFileUrlMessage = window.location.protocol.indexOf('http') === -1 && navigator.userAgent.indexOf('Firefox') === -1;\n\t        console.debug('Download the React DevTools ' + (showFileUrlMessage ? 'and use an HTTP server (instead of a file: URL) ' : '') + 'for a better development experience: ' + 'https://fb.me/react-devtools');\n\t      }\n\t    }\n\t\n\t    var testFunc = function testFn() {};\n\t    process.env.NODE_ENV !== 'production' ? warning((testFunc.name || testFunc.toString()).indexOf('testFn') !== -1, 'It looks like you\\'re using a minified copy of the development build ' + 'of React. When deploying React apps to production, make sure to use ' + 'the production build which skips development warnings and is faster. ' + 'See https://fb.me/react-minification for more details.') : void 0;\n\t\n\t    // If we're in IE8, check to see if we are in compatibility mode and provide\n\t    // information on preventing compatibility mode\n\t    var ieCompatibilityMode = document.documentMode && document.documentMode < 8;\n\t\n\t    process.env.NODE_ENV !== 'production' ? warning(!ieCompatibilityMode, 'Internet Explorer is running in compatibility mode; please add the ' + 'following tag to your HTML to prevent this from happening: ' + '<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />') : void 0;\n\t\n\t    var expectedFeatures = [\n\t    // shims\n\t    Array.isArray, Array.prototype.every, Array.prototype.forEach, Array.prototype.indexOf, Array.prototype.map, Date.now, Function.prototype.bind, Object.keys, String.prototype.trim];\n\t\n\t    for (var i = 0; i < expectedFeatures.length; i++) {\n\t      if (!expectedFeatures[i]) {\n\t        process.env.NODE_ENV !== 'production' ? warning(false, 'One or more ES5 shims expected by React are not available: ' + 'https://fb.me/react-warning-polyfills') : void 0;\n\t        break;\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\tif (false) {\n\t  var ReactInstrumentation = require('./ReactInstrumentation');\n\t  var ReactDOMUnknownPropertyHook = require('./ReactDOMUnknownPropertyHook');\n\t  var ReactDOMNullInputValuePropHook = require('./ReactDOMNullInputValuePropHook');\n\t  var ReactDOMInvalidARIAHook = require('./ReactDOMInvalidARIAHook');\n\t\n\t  ReactInstrumentation.debugTool.addHook(ReactDOMUnknownPropertyHook);\n\t  ReactInstrumentation.debugTool.addHook(ReactDOMNullInputValuePropHook);\n\t  ReactInstrumentation.debugTool.addHook(ReactDOMInvalidARIAHook);\n\t}\n\t\n\tmodule.exports = ReactDOM;\n\n/***/ },\n/* 96 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t/* global hasOwnProperty:true */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(2),\n\t    _assign = __webpack_require__(5);\n\t\n\tvar AutoFocusUtils = __webpack_require__(83);\n\tvar CSSPropertyOperations = __webpack_require__(85);\n\tvar DOMLazyTree = __webpack_require__(15);\n\tvar DOMNamespaces = __webpack_require__(32);\n\tvar DOMProperty = __webpack_require__(16);\n\tvar DOMPropertyOperations = __webpack_require__(54);\n\tvar EventPluginHub = __webpack_require__(21);\n\tvar EventPluginRegistry = __webpack_require__(33);\n\tvar ReactBrowserEventEmitter = __webpack_require__(25);\n\tvar ReactDOMComponentFlags = __webpack_require__(55);\n\tvar ReactDOMComponentTree = __webpack_require__(4);\n\tvar ReactDOMInput = __webpack_require__(101);\n\tvar ReactDOMOption = __webpack_require__(102);\n\tvar ReactDOMSelect = __webpack_require__(56);\n\tvar ReactDOMTextarea = __webpack_require__(105);\n\tvar ReactInstrumentation = __webpack_require__(7);\n\tvar ReactMultiChild = __webpack_require__(114);\n\tvar ReactServerRenderingTransaction = __webpack_require__(119);\n\t\n\tvar emptyFunction = __webpack_require__(9);\n\tvar escapeTextContentForBrowser = __webpack_require__(28);\n\tvar invariant = __webpack_require__(1);\n\tvar isEventSupported = __webpack_require__(44);\n\tvar shallowEqual = __webpack_require__(47);\n\tvar validateDOMNesting = __webpack_require__(46);\n\tvar warning = __webpack_require__(3);\n\t\n\tvar Flags = ReactDOMComponentFlags;\n\tvar deleteListener = EventPluginHub.deleteListener;\n\tvar getNode = ReactDOMComponentTree.getNodeFromInstance;\n\tvar listenTo = ReactBrowserEventEmitter.listenTo;\n\tvar registrationNameModules = EventPluginRegistry.registrationNameModules;\n\t\n\t// For quickly matching children type, to test if can be treated as content.\n\tvar CONTENT_TYPES = { 'string': true, 'number': true };\n\t\n\tvar STYLE = 'style';\n\tvar HTML = '__html';\n\tvar RESERVED_PROPS = {\n\t  children: null,\n\t  dangerouslySetInnerHTML: null,\n\t  suppressContentEditableWarning: null\n\t};\n\t\n\t// Node type for document fragments (Node.DOCUMENT_FRAGMENT_NODE).\n\tvar DOC_FRAGMENT_TYPE = 11;\n\t\n\tfunction getDeclarationErrorAddendum(internalInstance) {\n\t  if (internalInstance) {\n\t    var owner = internalInstance._currentElement._owner || null;\n\t    if (owner) {\n\t      var name = owner.getName();\n\t      if (name) {\n\t        return ' This DOM node was rendered by `' + name + '`.';\n\t      }\n\t    }\n\t  }\n\t  return '';\n\t}\n\t\n\tfunction friendlyStringify(obj) {\n\t  if (typeof obj === 'object') {\n\t    if (Array.isArray(obj)) {\n\t      return '[' + obj.map(friendlyStringify).join(', ') + ']';\n\t    } else {\n\t      var pairs = [];\n\t      for (var key in obj) {\n\t        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n\t          var keyEscaped = /^[a-z$_][\\w$_]*$/i.test(key) ? key : JSON.stringify(key);\n\t          pairs.push(keyEscaped + ': ' + friendlyStringify(obj[key]));\n\t        }\n\t      }\n\t      return '{' + pairs.join(', ') + '}';\n\t    }\n\t  } else if (typeof obj === 'string') {\n\t    return JSON.stringify(obj);\n\t  } else if (typeof obj === 'function') {\n\t    return '[function object]';\n\t  }\n\t  // Differs from JSON.stringify in that undefined because undefined and that\n\t  // inf and nan don't become null\n\t  return String(obj);\n\t}\n\t\n\tvar styleMutationWarning = {};\n\t\n\tfunction checkAndWarnForMutatedStyle(style1, style2, component) {\n\t  if (style1 == null || style2 == null) {\n\t    return;\n\t  }\n\t  if (shallowEqual(style1, style2)) {\n\t    return;\n\t  }\n\t\n\t  var componentName = component._tag;\n\t  var owner = component._currentElement._owner;\n\t  var ownerName;\n\t  if (owner) {\n\t    ownerName = owner.getName();\n\t  }\n\t\n\t  var hash = ownerName + '|' + componentName;\n\t\n\t  if (styleMutationWarning.hasOwnProperty(hash)) {\n\t    return;\n\t  }\n\t\n\t  styleMutationWarning[hash] = true;\n\t\n\t   false ? warning(false, '`%s` was passed a style object that has previously been mutated. ' + 'Mutating `style` is deprecated. Consider cloning it beforehand. Check ' + 'the `render` %s. Previous style: %s. Mutated style: %s.', componentName, owner ? 'of `' + ownerName + '`' : 'using <' + componentName + '>', friendlyStringify(style1), friendlyStringify(style2)) : void 0;\n\t}\n\t\n\t/**\n\t * @param {object} component\n\t * @param {?object} props\n\t */\n\tfunction assertValidProps(component, props) {\n\t  if (!props) {\n\t    return;\n\t  }\n\t  // Note the use of `==` which checks for null or undefined.\n\t  if (voidElementTags[component._tag]) {\n\t    !(props.children == null && props.dangerouslySetInnerHTML == null) ?  false ? invariant(false, '%s is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.%s', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : _prodInvariant('137', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : void 0;\n\t  }\n\t  if (props.dangerouslySetInnerHTML != null) {\n\t    !(props.children == null) ?  false ? invariant(false, 'Can only set one of `children` or `props.dangerouslySetInnerHTML`.') : _prodInvariant('60') : void 0;\n\t    !(typeof props.dangerouslySetInnerHTML === 'object' && HTML in props.dangerouslySetInnerHTML) ?  false ? invariant(false, '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://fb.me/react-invariant-dangerously-set-inner-html for more information.') : _prodInvariant('61') : void 0;\n\t  }\n\t  if (false) {\n\t    process.env.NODE_ENV !== 'production' ? warning(props.innerHTML == null, 'Directly setting property `innerHTML` is not permitted. ' + 'For more information, lookup documentation on `dangerouslySetInnerHTML`.') : void 0;\n\t    process.env.NODE_ENV !== 'production' ? warning(props.suppressContentEditableWarning || !props.contentEditable || props.children == null, 'A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.') : void 0;\n\t    process.env.NODE_ENV !== 'production' ? warning(props.onFocusIn == null && props.onFocusOut == null, 'React uses onFocus and onBlur instead of onFocusIn and onFocusOut. ' + 'All React events are normalized to bubble, so onFocusIn and onFocusOut ' + 'are not needed/supported by React.') : void 0;\n\t  }\n\t  !(props.style == null || typeof props.style === 'object') ?  false ? invariant(false, 'The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + \\'em\\'}} when using JSX.%s', getDeclarationErrorAddendum(component)) : _prodInvariant('62', getDeclarationErrorAddendum(component)) : void 0;\n\t}\n\t\n\tfunction enqueuePutListener(inst, registrationName, listener, transaction) {\n\t  if (transaction instanceof ReactServerRenderingTransaction) {\n\t    return;\n\t  }\n\t  if (false) {\n\t    // IE8 has no API for event capturing and the `onScroll` event doesn't\n\t    // bubble.\n\t    process.env.NODE_ENV !== 'production' ? warning(registrationName !== 'onScroll' || isEventSupported('scroll', true), 'This browser doesn\\'t support the `onScroll` event') : void 0;\n\t  }\n\t  var containerInfo = inst._hostContainerInfo;\n\t  var isDocumentFragment = containerInfo._node && containerInfo._node.nodeType === DOC_FRAGMENT_TYPE;\n\t  var doc = isDocumentFragment ? containerInfo._node : containerInfo._ownerDocument;\n\t  listenTo(registrationName, doc);\n\t  transaction.getReactMountReady().enqueue(putListener, {\n\t    inst: inst,\n\t    registrationName: registrationName,\n\t    listener: listener\n\t  });\n\t}\n\t\n\tfunction putListener() {\n\t  var listenerToPut = this;\n\t  EventPluginHub.putListener(listenerToPut.inst, listenerToPut.registrationName, listenerToPut.listener);\n\t}\n\t\n\tfunction inputPostMount() {\n\t  var inst = this;\n\t  ReactDOMInput.postMountWrapper(inst);\n\t}\n\t\n\tfunction textareaPostMount() {\n\t  var inst = this;\n\t  ReactDOMTextarea.postMountWrapper(inst);\n\t}\n\t\n\tfunction optionPostMount() {\n\t  var inst = this;\n\t  ReactDOMOption.postMountWrapper(inst);\n\t}\n\t\n\tvar setAndValidateContentChildDev = emptyFunction;\n\tif (false) {\n\t  setAndValidateContentChildDev = function (content) {\n\t    var hasExistingContent = this._contentDebugID != null;\n\t    var debugID = this._debugID;\n\t    // This ID represents the inlined child that has no backing instance:\n\t    var contentDebugID = -debugID;\n\t\n\t    if (content == null) {\n\t      if (hasExistingContent) {\n\t        ReactInstrumentation.debugTool.onUnmountComponent(this._contentDebugID);\n\t      }\n\t      this._contentDebugID = null;\n\t      return;\n\t    }\n\t\n\t    validateDOMNesting(null, String(content), this, this._ancestorInfo);\n\t    this._contentDebugID = contentDebugID;\n\t    if (hasExistingContent) {\n\t      ReactInstrumentation.debugTool.onBeforeUpdateComponent(contentDebugID, content);\n\t      ReactInstrumentation.debugTool.onUpdateComponent(contentDebugID);\n\t    } else {\n\t      ReactInstrumentation.debugTool.onBeforeMountComponent(contentDebugID, content, debugID);\n\t      ReactInstrumentation.debugTool.onMountComponent(contentDebugID);\n\t      ReactInstrumentation.debugTool.onSetChildren(debugID, [contentDebugID]);\n\t    }\n\t  };\n\t}\n\t\n\t// There are so many media events, it makes sense to just\n\t// maintain a list rather than create a `trapBubbledEvent` for each\n\tvar mediaEvents = {\n\t  topAbort: 'abort',\n\t  topCanPlay: 'canplay',\n\t  topCanPlayThrough: 'canplaythrough',\n\t  topDurationChange: 'durationchange',\n\t  topEmptied: 'emptied',\n\t  topEncrypted: 'encrypted',\n\t  topEnded: 'ended',\n\t  topError: 'error',\n\t  topLoadedData: 'loadeddata',\n\t  topLoadedMetadata: 'loadedmetadata',\n\t  topLoadStart: 'loadstart',\n\t  topPause: 'pause',\n\t  topPlay: 'play',\n\t  topPlaying: 'playing',\n\t  topProgress: 'progress',\n\t  topRateChange: 'ratechange',\n\t  topSeeked: 'seeked',\n\t  topSeeking: 'seeking',\n\t  topStalled: 'stalled',\n\t  topSuspend: 'suspend',\n\t  topTimeUpdate: 'timeupdate',\n\t  topVolumeChange: 'volumechange',\n\t  topWaiting: 'waiting'\n\t};\n\t\n\tfunction trapBubbledEventsLocal() {\n\t  var inst = this;\n\t  // If a component renders to null or if another component fatals and causes\n\t  // the state of the tree to be corrupted, `node` here can be null.\n\t  !inst._rootNodeID ?  false ? invariant(false, 'Must be mounted to trap events') : _prodInvariant('63') : void 0;\n\t  var node = getNode(inst);\n\t  !node ?  false ? invariant(false, 'trapBubbledEvent(...): Requires node to be rendered.') : _prodInvariant('64') : void 0;\n\t\n\t  switch (inst._tag) {\n\t    case 'iframe':\n\t    case 'object':\n\t      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topLoad', 'load', node)];\n\t      break;\n\t    case 'video':\n\t    case 'audio':\n\t\n\t      inst._wrapperState.listeners = [];\n\t      // Create listener for each media event\n\t      for (var event in mediaEvents) {\n\t        if (mediaEvents.hasOwnProperty(event)) {\n\t          inst._wrapperState.listeners.push(ReactBrowserEventEmitter.trapBubbledEvent(event, mediaEvents[event], node));\n\t        }\n\t      }\n\t      break;\n\t    case 'source':\n\t      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topError', 'error', node)];\n\t      break;\n\t    case 'img':\n\t      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topError', 'error', node), ReactBrowserEventEmitter.trapBubbledEvent('topLoad', 'load', node)];\n\t      break;\n\t    case 'form':\n\t      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topReset', 'reset', node), ReactBrowserEventEmitter.trapBubbledEvent('topSubmit', 'submit', node)];\n\t      break;\n\t    case 'input':\n\t    case 'select':\n\t    case 'textarea':\n\t      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topInvalid', 'invalid', node)];\n\t      break;\n\t  }\n\t}\n\t\n\tfunction postUpdateSelectWrapper() {\n\t  ReactDOMSelect.postUpdateWrapper(this);\n\t}\n\t\n\t// For HTML, certain tags should omit their close tag. We keep a whitelist for\n\t// those special-case tags.\n\t\n\tvar omittedCloseTags = {\n\t  'area': true,\n\t  'base': true,\n\t  'br': true,\n\t  'col': true,\n\t  'embed': true,\n\t  'hr': true,\n\t  'img': true,\n\t  'input': true,\n\t  'keygen': true,\n\t  'link': true,\n\t  'meta': true,\n\t  'param': true,\n\t  'source': true,\n\t  'track': true,\n\t  'wbr': true\n\t};\n\t\n\tvar newlineEatingTags = {\n\t  'listing': true,\n\t  'pre': true,\n\t  'textarea': true\n\t};\n\t\n\t// For HTML, certain tags cannot have children. This has the same purpose as\n\t// `omittedCloseTags` except that `menuitem` should still have its closing tag.\n\t\n\tvar voidElementTags = _assign({\n\t  'menuitem': true\n\t}, omittedCloseTags);\n\t\n\t// We accept any tag to be rendered but since this gets injected into arbitrary\n\t// HTML, we want to make sure that it's a safe tag.\n\t// http://www.w3.org/TR/REC-xml/#NT-Name\n\t\n\tvar VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\\.\\-\\d]*$/; // Simplified subset\n\tvar validatedTagCache = {};\n\tvar hasOwnProperty = {}.hasOwnProperty;\n\t\n\tfunction validateDangerousTag(tag) {\n\t  if (!hasOwnProperty.call(validatedTagCache, tag)) {\n\t    !VALID_TAG_REGEX.test(tag) ?  false ? invariant(false, 'Invalid tag: %s', tag) : _prodInvariant('65', tag) : void 0;\n\t    validatedTagCache[tag] = true;\n\t  }\n\t}\n\t\n\tfunction isCustomComponent(tagName, props) {\n\t  return tagName.indexOf('-') >= 0 || props.is != null;\n\t}\n\t\n\tvar globalIdCounter = 1;\n\t\n\t/**\n\t * Creates a new React class that is idempotent and capable of containing other\n\t * React components. It accepts event listeners and DOM properties that are\n\t * valid according to `DOMProperty`.\n\t *\n\t *  - Event listeners: `onClick`, `onMouseDown`, etc.\n\t *  - DOM properties: `className`, `name`, `title`, etc.\n\t *\n\t * The `style` property functions differently from the DOM API. It accepts an\n\t * object mapping of style properties to values.\n\t *\n\t * @constructor ReactDOMComponent\n\t * @extends ReactMultiChild\n\t */\n\tfunction ReactDOMComponent(element) {\n\t  var tag = element.type;\n\t  validateDangerousTag(tag);\n\t  this._currentElement = element;\n\t  this._tag = tag.toLowerCase();\n\t  this._namespaceURI = null;\n\t  this._renderedChildren = null;\n\t  this._previousStyle = null;\n\t  this._previousStyleCopy = null;\n\t  this._hostNode = null;\n\t  this._hostParent = null;\n\t  this._rootNodeID = 0;\n\t  this._domID = 0;\n\t  this._hostContainerInfo = null;\n\t  this._wrapperState = null;\n\t  this._topLevelWrapper = null;\n\t  this._flags = 0;\n\t  if (false) {\n\t    this._ancestorInfo = null;\n\t    setAndValidateContentChildDev.call(this, null);\n\t  }\n\t}\n\t\n\tReactDOMComponent.displayName = 'ReactDOMComponent';\n\t\n\tReactDOMComponent.Mixin = {\n\t\n\t  /**\n\t   * Generates root tag markup then recurses. This method has side effects and\n\t   * is not idempotent.\n\t   *\n\t   * @internal\n\t   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n\t   * @param {?ReactDOMComponent} the parent component instance\n\t   * @param {?object} info about the host container\n\t   * @param {object} context\n\t   * @return {string} The computed markup.\n\t   */\n\t  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {\n\t    this._rootNodeID = globalIdCounter++;\n\t    this._domID = hostContainerInfo._idCounter++;\n\t    this._hostParent = hostParent;\n\t    this._hostContainerInfo = hostContainerInfo;\n\t\n\t    var props = this._currentElement.props;\n\t\n\t    switch (this._tag) {\n\t      case 'audio':\n\t      case 'form':\n\t      case 'iframe':\n\t      case 'img':\n\t      case 'link':\n\t      case 'object':\n\t      case 'source':\n\t      case 'video':\n\t        this._wrapperState = {\n\t          listeners: null\n\t        };\n\t        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);\n\t        break;\n\t      case 'input':\n\t        ReactDOMInput.mountWrapper(this, props, hostParent);\n\t        props = ReactDOMInput.getHostProps(this, props);\n\t        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);\n\t        break;\n\t      case 'option':\n\t        ReactDOMOption.mountWrapper(this, props, hostParent);\n\t        props = ReactDOMOption.getHostProps(this, props);\n\t        break;\n\t      case 'select':\n\t        ReactDOMSelect.mountWrapper(this, props, hostParent);\n\t        props = ReactDOMSelect.getHostProps(this, props);\n\t        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);\n\t        break;\n\t      case 'textarea':\n\t        ReactDOMTextarea.mountWrapper(this, props, hostParent);\n\t        props = ReactDOMTextarea.getHostProps(this, props);\n\t        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);\n\t        break;\n\t    }\n\t\n\t    assertValidProps(this, props);\n\t\n\t    // We create tags in the namespace of their parent container, except HTML\n\t    // tags get no namespace.\n\t    var namespaceURI;\n\t    var parentTag;\n\t    if (hostParent != null) {\n\t      namespaceURI = hostParent._namespaceURI;\n\t      parentTag = hostParent._tag;\n\t    } else if (hostContainerInfo._tag) {\n\t      namespaceURI = hostContainerInfo._namespaceURI;\n\t      parentTag = hostContainerInfo._tag;\n\t    }\n\t    if (namespaceURI == null || namespaceURI === DOMNamespaces.svg && parentTag === 'foreignobject') {\n\t      namespaceURI = DOMNamespaces.html;\n\t    }\n\t    if (namespaceURI === DOMNamespaces.html) {\n\t      if (this._tag === 'svg') {\n\t        namespaceURI = DOMNamespaces.svg;\n\t      } else if (this._tag === 'math') {\n\t        namespaceURI = DOMNamespaces.mathml;\n\t      }\n\t    }\n\t    this._namespaceURI = namespaceURI;\n\t\n\t    if (false) {\n\t      var parentInfo;\n\t      if (hostParent != null) {\n\t        parentInfo = hostParent._ancestorInfo;\n\t      } else if (hostContainerInfo._tag) {\n\t        parentInfo = hostContainerInfo._ancestorInfo;\n\t      }\n\t      if (parentInfo) {\n\t        // parentInfo should always be present except for the top-level\n\t        // component when server rendering\n\t        validateDOMNesting(this._tag, null, this, parentInfo);\n\t      }\n\t      this._ancestorInfo = validateDOMNesting.updatedAncestorInfo(parentInfo, this._tag, this);\n\t    }\n\t\n\t    var mountImage;\n\t    if (transaction.useCreateElement) {\n\t      var ownerDocument = hostContainerInfo._ownerDocument;\n\t      var el;\n\t      if (namespaceURI === DOMNamespaces.html) {\n\t        if (this._tag === 'script') {\n\t          // Create the script via .innerHTML so its \"parser-inserted\" flag is\n\t          // set to true and it does not execute\n\t          var div = ownerDocument.createElement('div');\n\t          var type = this._currentElement.type;\n\t          div.innerHTML = '<' + type + '></' + type + '>';\n\t          el = div.removeChild(div.firstChild);\n\t        } else if (props.is) {\n\t          el = ownerDocument.createElement(this._currentElement.type, props.is);\n\t        } else {\n\t          // Separate else branch instead of using `props.is || undefined` above becuase of a Firefox bug.\n\t          // See discussion in https://github.com/facebook/react/pull/6896\n\t          // and discussion in https://bugzilla.mozilla.org/show_bug.cgi?id=1276240\n\t          el = ownerDocument.createElement(this._currentElement.type);\n\t        }\n\t      } else {\n\t        el = ownerDocument.createElementNS(namespaceURI, this._currentElement.type);\n\t      }\n\t      ReactDOMComponentTree.precacheNode(this, el);\n\t      this._flags |= Flags.hasCachedChildNodes;\n\t      if (!this._hostParent) {\n\t        DOMPropertyOperations.setAttributeForRoot(el);\n\t      }\n\t      this._updateDOMProperties(null, props, transaction);\n\t      var lazyTree = DOMLazyTree(el);\n\t      this._createInitialChildren(transaction, props, context, lazyTree);\n\t      mountImage = lazyTree;\n\t    } else {\n\t      var tagOpen = this._createOpenTagMarkupAndPutListeners(transaction, props);\n\t      var tagContent = this._createContentMarkup(transaction, props, context);\n\t      if (!tagContent && omittedCloseTags[this._tag]) {\n\t        mountImage = tagOpen + '/>';\n\t      } else {\n\t        mountImage = tagOpen + '>' + tagContent + '</' + this._currentElement.type + '>';\n\t      }\n\t    }\n\t\n\t    switch (this._tag) {\n\t      case 'input':\n\t        transaction.getReactMountReady().enqueue(inputPostMount, this);\n\t        if (props.autoFocus) {\n\t          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);\n\t        }\n\t        break;\n\t      case 'textarea':\n\t        transaction.getReactMountReady().enqueue(textareaPostMount, this);\n\t        if (props.autoFocus) {\n\t          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);\n\t        }\n\t        break;\n\t      case 'select':\n\t        if (props.autoFocus) {\n\t          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);\n\t        }\n\t        break;\n\t      case 'button':\n\t        if (props.autoFocus) {\n\t          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);\n\t        }\n\t        break;\n\t      case 'option':\n\t        transaction.getReactMountReady().enqueue(optionPostMount, this);\n\t        break;\n\t    }\n\t\n\t    return mountImage;\n\t  },\n\t\n\t  /**\n\t   * Creates markup for the open tag and all attributes.\n\t   *\n\t   * This method has side effects because events get registered.\n\t   *\n\t   * Iterating over object properties is faster than iterating over arrays.\n\t   * @see http://jsperf.com/obj-vs-arr-iteration\n\t   *\n\t   * @private\n\t   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n\t   * @param {object} props\n\t   * @return {string} Markup of opening tag.\n\t   */\n\t  _createOpenTagMarkupAndPutListeners: function (transaction, props) {\n\t    var ret = '<' + this._currentElement.type;\n\t\n\t    for (var propKey in props) {\n\t      if (!props.hasOwnProperty(propKey)) {\n\t        continue;\n\t      }\n\t      var propValue = props[propKey];\n\t      if (propValue == null) {\n\t        continue;\n\t      }\n\t      if (registrationNameModules.hasOwnProperty(propKey)) {\n\t        if (propValue) {\n\t          enqueuePutListener(this, propKey, propValue, transaction);\n\t        }\n\t      } else {\n\t        if (propKey === STYLE) {\n\t          if (propValue) {\n\t            if (false) {\n\t              // See `_updateDOMProperties`. style block\n\t              this._previousStyle = propValue;\n\t            }\n\t            propValue = this._previousStyleCopy = _assign({}, props.style);\n\t          }\n\t          propValue = CSSPropertyOperations.createMarkupForStyles(propValue, this);\n\t        }\n\t        var markup = null;\n\t        if (this._tag != null && isCustomComponent(this._tag, props)) {\n\t          if (!RESERVED_PROPS.hasOwnProperty(propKey)) {\n\t            markup = DOMPropertyOperations.createMarkupForCustomAttribute(propKey, propValue);\n\t          }\n\t        } else {\n\t          markup = DOMPropertyOperations.createMarkupForProperty(propKey, propValue);\n\t        }\n\t        if (markup) {\n\t          ret += ' ' + markup;\n\t        }\n\t      }\n\t    }\n\t\n\t    // For static pages, no need to put React ID and checksum. Saves lots of\n\t    // bytes.\n\t    if (transaction.renderToStaticMarkup) {\n\t      return ret;\n\t    }\n\t\n\t    if (!this._hostParent) {\n\t      ret += ' ' + DOMPropertyOperations.createMarkupForRoot();\n\t    }\n\t    ret += ' ' + DOMPropertyOperations.createMarkupForID(this._domID);\n\t    return ret;\n\t  },\n\t\n\t  /**\n\t   * Creates markup for the content between the tags.\n\t   *\n\t   * @private\n\t   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n\t   * @param {object} props\n\t   * @param {object} context\n\t   * @return {string} Content markup.\n\t   */\n\t  _createContentMarkup: function (transaction, props, context) {\n\t    var ret = '';\n\t\n\t    // Intentional use of != to avoid catching zero/false.\n\t    var innerHTML = props.dangerouslySetInnerHTML;\n\t    if (innerHTML != null) {\n\t      if (innerHTML.__html != null) {\n\t        ret = innerHTML.__html;\n\t      }\n\t    } else {\n\t      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;\n\t      var childrenToUse = contentToUse != null ? null : props.children;\n\t      if (contentToUse != null) {\n\t        // TODO: Validate that text is allowed as a child of this node\n\t        ret = escapeTextContentForBrowser(contentToUse);\n\t        if (false) {\n\t          setAndValidateContentChildDev.call(this, contentToUse);\n\t        }\n\t      } else if (childrenToUse != null) {\n\t        var mountImages = this.mountChildren(childrenToUse, transaction, context);\n\t        ret = mountImages.join('');\n\t      }\n\t    }\n\t    if (newlineEatingTags[this._tag] && ret.charAt(0) === '\\n') {\n\t      // text/html ignores the first character in these tags if it's a newline\n\t      // Prefer to break application/xml over text/html (for now) by adding\n\t      // a newline specifically to get eaten by the parser. (Alternately for\n\t      // textareas, replacing \"^\\n\" with \"\\r\\n\" doesn't get eaten, and the first\n\t      // \\r is normalized out by HTMLTextAreaElement#value.)\n\t      // See: <http://www.w3.org/TR/html-polyglot/#newlines-in-textarea-and-pre>\n\t      // See: <http://www.w3.org/TR/html5/syntax.html#element-restrictions>\n\t      // See: <http://www.w3.org/TR/html5/syntax.html#newlines>\n\t      // See: Parsing of \"textarea\" \"listing\" and \"pre\" elements\n\t      //  from <http://www.w3.org/TR/html5/syntax.html#parsing-main-inbody>\n\t      return '\\n' + ret;\n\t    } else {\n\t      return ret;\n\t    }\n\t  },\n\t\n\t  _createInitialChildren: function (transaction, props, context, lazyTree) {\n\t    // Intentional use of != to avoid catching zero/false.\n\t    var innerHTML = props.dangerouslySetInnerHTML;\n\t    if (innerHTML != null) {\n\t      if (innerHTML.__html != null) {\n\t        DOMLazyTree.queueHTML(lazyTree, innerHTML.__html);\n\t      }\n\t    } else {\n\t      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;\n\t      var childrenToUse = contentToUse != null ? null : props.children;\n\t      // TODO: Validate that text is allowed as a child of this node\n\t      if (contentToUse != null) {\n\t        // Avoid setting textContent when the text is empty. In IE11 setting\n\t        // textContent on a text area will cause the placeholder to not\n\t        // show within the textarea until it has been focused and blurred again.\n\t        // https://github.com/facebook/react/issues/6731#issuecomment-254874553\n\t        if (contentToUse !== '') {\n\t          if (false) {\n\t            setAndValidateContentChildDev.call(this, contentToUse);\n\t          }\n\t          DOMLazyTree.queueText(lazyTree, contentToUse);\n\t        }\n\t      } else if (childrenToUse != null) {\n\t        var mountImages = this.mountChildren(childrenToUse, transaction, context);\n\t        for (var i = 0; i < mountImages.length; i++) {\n\t          DOMLazyTree.queueChild(lazyTree, mountImages[i]);\n\t        }\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Receives a next element and updates the component.\n\t   *\n\t   * @internal\n\t   * @param {ReactElement} nextElement\n\t   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n\t   * @param {object} context\n\t   */\n\t  receiveComponent: function (nextElement, transaction, context) {\n\t    var prevElement = this._currentElement;\n\t    this._currentElement = nextElement;\n\t    this.updateComponent(transaction, prevElement, nextElement, context);\n\t  },\n\t\n\t  /**\n\t   * Updates a DOM component after it has already been allocated and\n\t   * attached to the DOM. Reconciles the root DOM node, then recurses.\n\t   *\n\t   * @param {ReactReconcileTransaction} transaction\n\t   * @param {ReactElement} prevElement\n\t   * @param {ReactElement} nextElement\n\t   * @internal\n\t   * @overridable\n\t   */\n\t  updateComponent: function (transaction, prevElement, nextElement, context) {\n\t    var lastProps = prevElement.props;\n\t    var nextProps = this._currentElement.props;\n\t\n\t    switch (this._tag) {\n\t      case 'input':\n\t        lastProps = ReactDOMInput.getHostProps(this, lastProps);\n\t        nextProps = ReactDOMInput.getHostProps(this, nextProps);\n\t        break;\n\t      case 'option':\n\t        lastProps = ReactDOMOption.getHostProps(this, lastProps);\n\t        nextProps = ReactDOMOption.getHostProps(this, nextProps);\n\t        break;\n\t      case 'select':\n\t        lastProps = ReactDOMSelect.getHostProps(this, lastProps);\n\t        nextProps = ReactDOMSelect.getHostProps(this, nextProps);\n\t        break;\n\t      case 'textarea':\n\t        lastProps = ReactDOMTextarea.getHostProps(this, lastProps);\n\t        nextProps = ReactDOMTextarea.getHostProps(this, nextProps);\n\t        break;\n\t    }\n\t\n\t    assertValidProps(this, nextProps);\n\t    this._updateDOMProperties(lastProps, nextProps, transaction);\n\t    this._updateDOMChildren(lastProps, nextProps, transaction, context);\n\t\n\t    switch (this._tag) {\n\t      case 'input':\n\t        // Update the wrapper around inputs *after* updating props. This has to\n\t        // happen after `_updateDOMProperties`. Otherwise HTML5 input validations\n\t        // raise warnings and prevent the new value from being assigned.\n\t        ReactDOMInput.updateWrapper(this);\n\t        break;\n\t      case 'textarea':\n\t        ReactDOMTextarea.updateWrapper(this);\n\t        break;\n\t      case 'select':\n\t        // <select> value update needs to occur after <option> children\n\t        // reconciliation\n\t        transaction.getReactMountReady().enqueue(postUpdateSelectWrapper, this);\n\t        break;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Reconciles the properties by detecting differences in property values and\n\t   * updating the DOM as necessary. This function is probably the single most\n\t   * critical path for performance optimization.\n\t   *\n\t   * TODO: Benchmark whether checking for changed values in memory actually\n\t   *       improves performance (especially statically positioned elements).\n\t   * TODO: Benchmark the effects of putting this at the top since 99% of props\n\t   *       do not change for a given reconciliation.\n\t   * TODO: Benchmark areas that can be improved with caching.\n\t   *\n\t   * @private\n\t   * @param {object} lastProps\n\t   * @param {object} nextProps\n\t   * @param {?DOMElement} node\n\t   */\n\t  _updateDOMProperties: function (lastProps, nextProps, transaction) {\n\t    var propKey;\n\t    var styleName;\n\t    var styleUpdates;\n\t    for (propKey in lastProps) {\n\t      if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey) || lastProps[propKey] == null) {\n\t        continue;\n\t      }\n\t      if (propKey === STYLE) {\n\t        var lastStyle = this._previousStyleCopy;\n\t        for (styleName in lastStyle) {\n\t          if (lastStyle.hasOwnProperty(styleName)) {\n\t            styleUpdates = styleUpdates || {};\n\t            styleUpdates[styleName] = '';\n\t          }\n\t        }\n\t        this._previousStyleCopy = null;\n\t      } else if (registrationNameModules.hasOwnProperty(propKey)) {\n\t        if (lastProps[propKey]) {\n\t          // Only call deleteListener if there was a listener previously or\n\t          // else willDeleteListener gets called when there wasn't actually a\n\t          // listener (e.g., onClick={null})\n\t          deleteListener(this, propKey);\n\t        }\n\t      } else if (isCustomComponent(this._tag, lastProps)) {\n\t        if (!RESERVED_PROPS.hasOwnProperty(propKey)) {\n\t          DOMPropertyOperations.deleteValueForAttribute(getNode(this), propKey);\n\t        }\n\t      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {\n\t        DOMPropertyOperations.deleteValueForProperty(getNode(this), propKey);\n\t      }\n\t    }\n\t    for (propKey in nextProps) {\n\t      var nextProp = nextProps[propKey];\n\t      var lastProp = propKey === STYLE ? this._previousStyleCopy : lastProps != null ? lastProps[propKey] : undefined;\n\t      if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp || nextProp == null && lastProp == null) {\n\t        continue;\n\t      }\n\t      if (propKey === STYLE) {\n\t        if (nextProp) {\n\t          if (false) {\n\t            checkAndWarnForMutatedStyle(this._previousStyleCopy, this._previousStyle, this);\n\t            this._previousStyle = nextProp;\n\t          }\n\t          nextProp = this._previousStyleCopy = _assign({}, nextProp);\n\t        } else {\n\t          this._previousStyleCopy = null;\n\t        }\n\t        if (lastProp) {\n\t          // Unset styles on `lastProp` but not on `nextProp`.\n\t          for (styleName in lastProp) {\n\t            if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {\n\t              styleUpdates = styleUpdates || {};\n\t              styleUpdates[styleName] = '';\n\t            }\n\t          }\n\t          // Update styles that changed since `lastProp`.\n\t          for (styleName in nextProp) {\n\t            if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {\n\t              styleUpdates = styleUpdates || {};\n\t              styleUpdates[styleName] = nextProp[styleName];\n\t            }\n\t          }\n\t        } else {\n\t          // Relies on `updateStylesByID` not mutating `styleUpdates`.\n\t          styleUpdates = nextProp;\n\t        }\n\t      } else if (registrationNameModules.hasOwnProperty(propKey)) {\n\t        if (nextProp) {\n\t          enqueuePutListener(this, propKey, nextProp, transaction);\n\t        } else if (lastProp) {\n\t          deleteListener(this, propKey);\n\t        }\n\t      } else if (isCustomComponent(this._tag, nextProps)) {\n\t        if (!RESERVED_PROPS.hasOwnProperty(propKey)) {\n\t          DOMPropertyOperations.setValueForAttribute(getNode(this), propKey, nextProp);\n\t        }\n\t      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {\n\t        var node = getNode(this);\n\t        // If we're updating to null or undefined, we should remove the property\n\t        // from the DOM node instead of inadvertently setting to a string. This\n\t        // brings us in line with the same behavior we have on initial render.\n\t        if (nextProp != null) {\n\t          DOMPropertyOperations.setValueForProperty(node, propKey, nextProp);\n\t        } else {\n\t          DOMPropertyOperations.deleteValueForProperty(node, propKey);\n\t        }\n\t      }\n\t    }\n\t    if (styleUpdates) {\n\t      CSSPropertyOperations.setValueForStyles(getNode(this), styleUpdates, this);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Reconciles the children with the various properties that affect the\n\t   * children content.\n\t   *\n\t   * @param {object} lastProps\n\t   * @param {object} nextProps\n\t   * @param {ReactReconcileTransaction} transaction\n\t   * @param {object} context\n\t   */\n\t  _updateDOMChildren: function (lastProps, nextProps, transaction, context) {\n\t    var lastContent = CONTENT_TYPES[typeof lastProps.children] ? lastProps.children : null;\n\t    var nextContent = CONTENT_TYPES[typeof nextProps.children] ? nextProps.children : null;\n\t\n\t    var lastHtml = lastProps.dangerouslySetInnerHTML && lastProps.dangerouslySetInnerHTML.__html;\n\t    var nextHtml = nextProps.dangerouslySetInnerHTML && nextProps.dangerouslySetInnerHTML.__html;\n\t\n\t    // Note the use of `!=` which checks for null or undefined.\n\t    var lastChildren = lastContent != null ? null : lastProps.children;\n\t    var nextChildren = nextContent != null ? null : nextProps.children;\n\t\n\t    // If we're switching from children to content/html or vice versa, remove\n\t    // the old content\n\t    var lastHasContentOrHtml = lastContent != null || lastHtml != null;\n\t    var nextHasContentOrHtml = nextContent != null || nextHtml != null;\n\t    if (lastChildren != null && nextChildren == null) {\n\t      this.updateChildren(null, transaction, context);\n\t    } else if (lastHasContentOrHtml && !nextHasContentOrHtml) {\n\t      this.updateTextContent('');\n\t      if (false) {\n\t        ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);\n\t      }\n\t    }\n\t\n\t    if (nextContent != null) {\n\t      if (lastContent !== nextContent) {\n\t        this.updateTextContent('' + nextContent);\n\t        if (false) {\n\t          setAndValidateContentChildDev.call(this, nextContent);\n\t        }\n\t      }\n\t    } else if (nextHtml != null) {\n\t      if (lastHtml !== nextHtml) {\n\t        this.updateMarkup('' + nextHtml);\n\t      }\n\t      if (false) {\n\t        ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);\n\t      }\n\t    } else if (nextChildren != null) {\n\t      if (false) {\n\t        setAndValidateContentChildDev.call(this, null);\n\t      }\n\t\n\t      this.updateChildren(nextChildren, transaction, context);\n\t    }\n\t  },\n\t\n\t  getHostNode: function () {\n\t    return getNode(this);\n\t  },\n\t\n\t  /**\n\t   * Destroys all event registrations for this instance. Does not remove from\n\t   * the DOM. That must be done by the parent.\n\t   *\n\t   * @internal\n\t   */\n\t  unmountComponent: function (safely) {\n\t    switch (this._tag) {\n\t      case 'audio':\n\t      case 'form':\n\t      case 'iframe':\n\t      case 'img':\n\t      case 'link':\n\t      case 'object':\n\t      case 'source':\n\t      case 'video':\n\t        var listeners = this._wrapperState.listeners;\n\t        if (listeners) {\n\t          for (var i = 0; i < listeners.length; i++) {\n\t            listeners[i].remove();\n\t          }\n\t        }\n\t        break;\n\t      case 'html':\n\t      case 'head':\n\t      case 'body':\n\t        /**\n\t         * Components like <html> <head> and <body> can't be removed or added\n\t         * easily in a cross-browser way, however it's valuable to be able to\n\t         * take advantage of React's reconciliation for styling and <title>\n\t         * management. So we just document it and throw in dangerous cases.\n\t         */\n\t         true ?  false ? invariant(false, '<%s> tried to unmount. Because of cross-browser quirks it is impossible to unmount some top-level components (eg <html>, <head>, and <body>) reliably and efficiently. To fix this, have a single top-level component that never unmounts render these elements.', this._tag) : _prodInvariant('66', this._tag) : void 0;\n\t        break;\n\t    }\n\t\n\t    this.unmountChildren(safely);\n\t    ReactDOMComponentTree.uncacheNode(this);\n\t    EventPluginHub.deleteAllListeners(this);\n\t    this._rootNodeID = 0;\n\t    this._domID = 0;\n\t    this._wrapperState = null;\n\t\n\t    if (false) {\n\t      setAndValidateContentChildDev.call(this, null);\n\t    }\n\t  },\n\t\n\t  getPublicInstance: function () {\n\t    return getNode(this);\n\t  }\n\t\n\t};\n\t\n\t_assign(ReactDOMComponent.prototype, ReactDOMComponent.Mixin, ReactMultiChild.Mixin);\n\t\n\tmodule.exports = ReactDOMComponent;\n\n/***/ },\n/* 97 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar validateDOMNesting = __webpack_require__(46);\n\t\n\tvar DOC_NODE_TYPE = 9;\n\t\n\tfunction ReactDOMContainerInfo(topLevelWrapper, node) {\n\t  var info = {\n\t    _topLevelWrapper: topLevelWrapper,\n\t    _idCounter: 1,\n\t    _ownerDocument: node ? node.nodeType === DOC_NODE_TYPE ? node : node.ownerDocument : null,\n\t    _node: node,\n\t    _tag: node ? node.nodeName.toLowerCase() : null,\n\t    _namespaceURI: node ? node.namespaceURI : null\n\t  };\n\t  if (false) {\n\t    info._ancestorInfo = node ? validateDOMNesting.updatedAncestorInfo(null, info._tag, null) : null;\n\t  }\n\t  return info;\n\t}\n\t\n\tmodule.exports = ReactDOMContainerInfo;\n\n/***/ },\n/* 98 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2014-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar _assign = __webpack_require__(5);\n\t\n\tvar DOMLazyTree = __webpack_require__(15);\n\tvar ReactDOMComponentTree = __webpack_require__(4);\n\t\n\tvar ReactDOMEmptyComponent = function (instantiate) {\n\t  // ReactCompositeComponent uses this:\n\t  this._currentElement = null;\n\t  // ReactDOMComponentTree uses these:\n\t  this._hostNode = null;\n\t  this._hostParent = null;\n\t  this._hostContainerInfo = null;\n\t  this._domID = 0;\n\t};\n\t_assign(ReactDOMEmptyComponent.prototype, {\n\t  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {\n\t    var domID = hostContainerInfo._idCounter++;\n\t    this._domID = domID;\n\t    this._hostParent = hostParent;\n\t    this._hostContainerInfo = hostContainerInfo;\n\t\n\t    var nodeValue = ' react-empty: ' + this._domID + ' ';\n\t    if (transaction.useCreateElement) {\n\t      var ownerDocument = hostContainerInfo._ownerDocument;\n\t      var node = ownerDocument.createComment(nodeValue);\n\t      ReactDOMComponentTree.precacheNode(this, node);\n\t      return DOMLazyTree(node);\n\t    } else {\n\t      if (transaction.renderToStaticMarkup) {\n\t        // Normally we'd insert a comment node, but since this is a situation\n\t        // where React won't take over (static pages), we can simply return\n\t        // nothing.\n\t        return '';\n\t      }\n\t      return '<!--' + nodeValue + '-->';\n\t    }\n\t  },\n\t  receiveComponent: function () {},\n\t  getHostNode: function () {\n\t    return ReactDOMComponentTree.getNodeFromInstance(this);\n\t  },\n\t  unmountComponent: function () {\n\t    ReactDOMComponentTree.uncacheNode(this);\n\t  }\n\t});\n\t\n\tmodule.exports = ReactDOMEmptyComponent;\n\n/***/ },\n/* 99 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactDOMFeatureFlags = {\n\t  useCreateElement: true,\n\t  useFiber: false\n\t};\n\t\n\tmodule.exports = ReactDOMFeatureFlags;\n\n/***/ },\n/* 100 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar DOMChildrenOperations = __webpack_require__(31);\n\tvar ReactDOMComponentTree = __webpack_require__(4);\n\t\n\t/**\n\t * Operations used to process updates to DOM nodes.\n\t */\n\tvar ReactDOMIDOperations = {\n\t\n\t  /**\n\t   * Updates a component's children by processing a series of updates.\n\t   *\n\t   * @param {array<object>} updates List of update configurations.\n\t   * @internal\n\t   */\n\t  dangerouslyProcessChildrenUpdates: function (parentInst, updates) {\n\t    var node = ReactDOMComponentTree.getNodeFromInstance(parentInst);\n\t    DOMChildrenOperations.processUpdates(node, updates);\n\t  }\n\t};\n\t\n\tmodule.exports = ReactDOMIDOperations;\n\n/***/ },\n/* 101 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(2),\n\t    _assign = __webpack_require__(5);\n\t\n\tvar DOMPropertyOperations = __webpack_require__(54);\n\tvar LinkedValueUtils = __webpack_require__(36);\n\tvar ReactDOMComponentTree = __webpack_require__(4);\n\tvar ReactUpdates = __webpack_require__(8);\n\t\n\tvar invariant = __webpack_require__(1);\n\tvar warning = __webpack_require__(3);\n\t\n\tvar didWarnValueLink = false;\n\tvar didWarnCheckedLink = false;\n\tvar didWarnValueDefaultValue = false;\n\tvar didWarnCheckedDefaultChecked = false;\n\tvar didWarnControlledToUncontrolled = false;\n\tvar didWarnUncontrolledToControlled = false;\n\t\n\tfunction forceUpdateIfMounted() {\n\t  if (this._rootNodeID) {\n\t    // DOM component is still mounted; update\n\t    ReactDOMInput.updateWrapper(this);\n\t  }\n\t}\n\t\n\tfunction isControlled(props) {\n\t  var usesChecked = props.type === 'checkbox' || props.type === 'radio';\n\t  return usesChecked ? props.checked != null : props.value != null;\n\t}\n\t\n\t/**\n\t * Implements an <input> host component that allows setting these optional\n\t * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.\n\t *\n\t * If `checked` or `value` are not supplied (or null/undefined), user actions\n\t * that affect the checked state or value will trigger updates to the element.\n\t *\n\t * If they are supplied (and not null/undefined), the rendered element will not\n\t * trigger updates to the element. Instead, the props must change in order for\n\t * the rendered element to be updated.\n\t *\n\t * The rendered element will be initialized as unchecked (or `defaultChecked`)\n\t * with an empty value (or `defaultValue`).\n\t *\n\t * @see http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html\n\t */\n\tvar ReactDOMInput = {\n\t  getHostProps: function (inst, props) {\n\t    var value = LinkedValueUtils.getValue(props);\n\t    var checked = LinkedValueUtils.getChecked(props);\n\t\n\t    var hostProps = _assign({\n\t      // Make sure we set .type before any other properties (setting .value\n\t      // before .type means .value is lost in IE11 and below)\n\t      type: undefined,\n\t      // Make sure we set .step before .value (setting .value before .step\n\t      // means .value is rounded on mount, based upon step precision)\n\t      step: undefined,\n\t      // Make sure we set .min & .max before .value (to ensure proper order\n\t      // in corner cases such as min or max deriving from value, e.g. Issue #7170)\n\t      min: undefined,\n\t      max: undefined\n\t    }, props, {\n\t      defaultChecked: undefined,\n\t      defaultValue: undefined,\n\t      value: value != null ? value : inst._wrapperState.initialValue,\n\t      checked: checked != null ? checked : inst._wrapperState.initialChecked,\n\t      onChange: inst._wrapperState.onChange\n\t    });\n\t\n\t    return hostProps;\n\t  },\n\t\n\t  mountWrapper: function (inst, props) {\n\t    if (false) {\n\t      LinkedValueUtils.checkPropTypes('input', props, inst._currentElement._owner);\n\t\n\t      var owner = inst._currentElement._owner;\n\t\n\t      if (props.valueLink !== undefined && !didWarnValueLink) {\n\t        process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;\n\t        didWarnValueLink = true;\n\t      }\n\t      if (props.checkedLink !== undefined && !didWarnCheckedLink) {\n\t        process.env.NODE_ENV !== 'production' ? warning(false, '`checkedLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;\n\t        didWarnCheckedLink = true;\n\t      }\n\t      if (props.checked !== undefined && props.defaultChecked !== undefined && !didWarnCheckedDefaultChecked) {\n\t        process.env.NODE_ENV !== 'production' ? warning(false, '%s contains an input of type %s with both checked and defaultChecked props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the checked prop, or the defaultChecked prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;\n\t        didWarnCheckedDefaultChecked = true;\n\t      }\n\t      if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {\n\t        process.env.NODE_ENV !== 'production' ? warning(false, '%s contains an input of type %s with both value and defaultValue props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;\n\t        didWarnValueDefaultValue = true;\n\t      }\n\t    }\n\t\n\t    var defaultValue = props.defaultValue;\n\t    inst._wrapperState = {\n\t      initialChecked: props.checked != null ? props.checked : props.defaultChecked,\n\t      initialValue: props.value != null ? props.value : defaultValue,\n\t      listeners: null,\n\t      onChange: _handleChange.bind(inst),\n\t      controlled: isControlled(props)\n\t    };\n\t  },\n\t\n\t  updateWrapper: function (inst) {\n\t    var props = inst._currentElement.props;\n\t\n\t    if (false) {\n\t      var controlled = isControlled(props);\n\t      var owner = inst._currentElement._owner;\n\t\n\t      if (!inst._wrapperState.controlled && controlled && !didWarnUncontrolledToControlled) {\n\t        process.env.NODE_ENV !== 'production' ? warning(false, '%s is changing an uncontrolled input of type %s to be controlled. ' + 'Input elements should not switch from uncontrolled to controlled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;\n\t        didWarnUncontrolledToControlled = true;\n\t      }\n\t      if (inst._wrapperState.controlled && !controlled && !didWarnControlledToUncontrolled) {\n\t        process.env.NODE_ENV !== 'production' ? warning(false, '%s is changing a controlled input of type %s to be uncontrolled. ' + 'Input elements should not switch from controlled to uncontrolled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;\n\t        didWarnControlledToUncontrolled = true;\n\t      }\n\t    }\n\t\n\t    // TODO: Shouldn't this be getChecked(props)?\n\t    var checked = props.checked;\n\t    if (checked != null) {\n\t      DOMPropertyOperations.setValueForProperty(ReactDOMComponentTree.getNodeFromInstance(inst), 'checked', checked || false);\n\t    }\n\t\n\t    var node = ReactDOMComponentTree.getNodeFromInstance(inst);\n\t    var value = LinkedValueUtils.getValue(props);\n\t    if (value != null) {\n\t      if (value === 0 && node.value === '') {\n\t        node.value = '0';\n\t        // Note: IE9 reports a number inputs as 'text', so check props instead.\n\t      } else if (props.type === 'number') {\n\t        // Simulate `input.valueAsNumber`. IE9 does not support it\n\t        var valueAsNumber = parseFloat(node.value, 10) || 0;\n\t\n\t        // eslint-disable-next-line\n\t        if (value != valueAsNumber) {\n\t          // Cast `value` to a string to ensure the value is set correctly. While\n\t          // browsers typically do this as necessary, jsdom doesn't.\n\t          node.value = '' + value;\n\t        }\n\t        // eslint-disable-next-line\n\t      } else if (value != node.value) {\n\t        // Cast `value` to a string to ensure the value is set correctly. While\n\t        // browsers typically do this as necessary, jsdom doesn't.\n\t        node.value = '' + value;\n\t      }\n\t    } else {\n\t      if (props.value == null && props.defaultValue != null) {\n\t        // In Chrome, assigning defaultValue to certain input types triggers input validation.\n\t        // For number inputs, the display value loses trailing decimal points. For email inputs,\n\t        // Chrome raises \"The specified value <x> is not a valid email address\".\n\t        //\n\t        // Here we check to see if the defaultValue has actually changed, avoiding these problems\n\t        // when the user is inputting text\n\t        //\n\t        // https://github.com/facebook/react/issues/7253\n\t        if (node.defaultValue !== '' + props.defaultValue) {\n\t          node.defaultValue = '' + props.defaultValue;\n\t        }\n\t      }\n\t      if (props.checked == null && props.defaultChecked != null) {\n\t        node.defaultChecked = !!props.defaultChecked;\n\t      }\n\t    }\n\t  },\n\t\n\t  postMountWrapper: function (inst) {\n\t    var props = inst._currentElement.props;\n\t\n\t    // This is in postMount because we need access to the DOM node, which is not\n\t    // available until after the component has mounted.\n\t    var node = ReactDOMComponentTree.getNodeFromInstance(inst);\n\t\n\t    // Detach value from defaultValue. We won't do anything if we're working on\n\t    // submit or reset inputs as those values & defaultValues are linked. They\n\t    // are not resetable nodes so this operation doesn't matter and actually\n\t    // removes browser-default values (eg \"Submit Query\") when no value is\n\t    // provided.\n\t\n\t    switch (props.type) {\n\t      case 'submit':\n\t      case 'reset':\n\t        break;\n\t      case 'color':\n\t      case 'date':\n\t      case 'datetime':\n\t      case 'datetime-local':\n\t      case 'month':\n\t      case 'time':\n\t      case 'week':\n\t        // This fixes the no-show issue on iOS Safari and Android Chrome:\n\t        // https://github.com/facebook/react/issues/7233\n\t        node.value = '';\n\t        node.value = node.defaultValue;\n\t        break;\n\t      default:\n\t        node.value = node.value;\n\t        break;\n\t    }\n\t\n\t    // Normally, we'd just do `node.checked = node.checked` upon initial mount, less this bug\n\t    // this is needed to work around a chrome bug where setting defaultChecked\n\t    // will sometimes influence the value of checked (even after detachment).\n\t    // Reference: https://bugs.chromium.org/p/chromium/issues/detail?id=608416\n\t    // We need to temporarily unset name to avoid disrupting radio button groups.\n\t    var name = node.name;\n\t    if (name !== '') {\n\t      node.name = '';\n\t    }\n\t    node.defaultChecked = !node.defaultChecked;\n\t    node.defaultChecked = !node.defaultChecked;\n\t    if (name !== '') {\n\t      node.name = name;\n\t    }\n\t  }\n\t};\n\t\n\tfunction _handleChange(event) {\n\t  var props = this._currentElement.props;\n\t\n\t  var returnValue = LinkedValueUtils.executeOnChange(props, event);\n\t\n\t  // Here we use asap to wait until all updates have propagated, which\n\t  // is important when using controlled components within layers:\n\t  // https://github.com/facebook/react/issues/1698\n\t  ReactUpdates.asap(forceUpdateIfMounted, this);\n\t\n\t  var name = props.name;\n\t  if (props.type === 'radio' && name != null) {\n\t    var rootNode = ReactDOMComponentTree.getNodeFromInstance(this);\n\t    var queryRoot = rootNode;\n\t\n\t    while (queryRoot.parentNode) {\n\t      queryRoot = queryRoot.parentNode;\n\t    }\n\t\n\t    // If `rootNode.form` was non-null, then we could try `form.elements`,\n\t    // but that sometimes behaves strangely in IE8. We could also try using\n\t    // `form.getElementsByName`, but that will only return direct children\n\t    // and won't include inputs that use the HTML5 `form=` attribute. Since\n\t    // the input might not even be in a form, let's just use the global\n\t    // `querySelectorAll` to ensure we don't miss anything.\n\t    var group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type=\"radio\"]');\n\t\n\t    for (var i = 0; i < group.length; i++) {\n\t      var otherNode = group[i];\n\t      if (otherNode === rootNode || otherNode.form !== rootNode.form) {\n\t        continue;\n\t      }\n\t      // This will throw if radio buttons rendered by different copies of React\n\t      // and the same name are rendered into the same form (same as #1939).\n\t      // That's probably okay; we don't support it just as we don't support\n\t      // mixing React radio buttons with non-React ones.\n\t      var otherInstance = ReactDOMComponentTree.getInstanceFromNode(otherNode);\n\t      !otherInstance ?  false ? invariant(false, 'ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.') : _prodInvariant('90') : void 0;\n\t      // If this is a controlled radio button group, forcing the input that\n\t      // was previously checked to update will cause it to be come re-checked\n\t      // as appropriate.\n\t      ReactUpdates.asap(forceUpdateIfMounted, otherInstance);\n\t    }\n\t  }\n\t\n\t  return returnValue;\n\t}\n\t\n\tmodule.exports = ReactDOMInput;\n\n/***/ },\n/* 102 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar _assign = __webpack_require__(5);\n\t\n\tvar React = __webpack_require__(18);\n\tvar ReactDOMComponentTree = __webpack_require__(4);\n\tvar ReactDOMSelect = __webpack_require__(56);\n\t\n\tvar warning = __webpack_require__(3);\n\tvar didWarnInvalidOptionChildren = false;\n\t\n\tfunction flattenChildren(children) {\n\t  var content = '';\n\t\n\t  // Flatten children and warn if they aren't strings or numbers;\n\t  // invalid types are ignored.\n\t  React.Children.forEach(children, function (child) {\n\t    if (child == null) {\n\t      return;\n\t    }\n\t    if (typeof child === 'string' || typeof child === 'number') {\n\t      content += child;\n\t    } else if (!didWarnInvalidOptionChildren) {\n\t      didWarnInvalidOptionChildren = true;\n\t       false ? warning(false, 'Only strings and numbers are supported as <option> children.') : void 0;\n\t    }\n\t  });\n\t\n\t  return content;\n\t}\n\t\n\t/**\n\t * Implements an <option> host component that warns when `selected` is set.\n\t */\n\tvar ReactDOMOption = {\n\t  mountWrapper: function (inst, props, hostParent) {\n\t    // TODO (yungsters): Remove support for `selected` in <option>.\n\t    if (false) {\n\t      process.env.NODE_ENV !== 'production' ? warning(props.selected == null, 'Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.') : void 0;\n\t    }\n\t\n\t    // Look up whether this option is 'selected'\n\t    var selectValue = null;\n\t    if (hostParent != null) {\n\t      var selectParent = hostParent;\n\t\n\t      if (selectParent._tag === 'optgroup') {\n\t        selectParent = selectParent._hostParent;\n\t      }\n\t\n\t      if (selectParent != null && selectParent._tag === 'select') {\n\t        selectValue = ReactDOMSelect.getSelectValueContext(selectParent);\n\t      }\n\t    }\n\t\n\t    // If the value is null (e.g., no specified value or after initial mount)\n\t    // or missing (e.g., for <datalist>), we don't change props.selected\n\t    var selected = null;\n\t    if (selectValue != null) {\n\t      var value;\n\t      if (props.value != null) {\n\t        value = props.value + '';\n\t      } else {\n\t        value = flattenChildren(props.children);\n\t      }\n\t      selected = false;\n\t      if (Array.isArray(selectValue)) {\n\t        // multiple\n\t        for (var i = 0; i < selectValue.length; i++) {\n\t          if ('' + selectValue[i] === value) {\n\t            selected = true;\n\t            break;\n\t          }\n\t        }\n\t      } else {\n\t        selected = '' + selectValue === value;\n\t      }\n\t    }\n\t\n\t    inst._wrapperState = { selected: selected };\n\t  },\n\t\n\t  postMountWrapper: function (inst) {\n\t    // value=\"\" should make a value attribute (#6219)\n\t    var props = inst._currentElement.props;\n\t    if (props.value != null) {\n\t      var node = ReactDOMComponentTree.getNodeFromInstance(inst);\n\t      node.setAttribute('value', props.value);\n\t    }\n\t  },\n\t\n\t  getHostProps: function (inst, props) {\n\t    var hostProps = _assign({ selected: undefined, children: undefined }, props);\n\t\n\t    // Read state only from initial mount because <select> updates value\n\t    // manually; we need the initial state only for server rendering\n\t    if (inst._wrapperState.selected != null) {\n\t      hostProps.selected = inst._wrapperState.selected;\n\t    }\n\t\n\t    var content = flattenChildren(props.children);\n\t\n\t    if (content) {\n\t      hostProps.children = content;\n\t    }\n\t\n\t    return hostProps;\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = ReactDOMOption;\n\n/***/ },\n/* 103 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar ExecutionEnvironment = __webpack_require__(6);\n\t\n\tvar getNodeForCharacterOffset = __webpack_require__(141);\n\tvar getTextContentAccessor = __webpack_require__(67);\n\t\n\t/**\n\t * While `isCollapsed` is available on the Selection object and `collapsed`\n\t * is available on the Range object, IE11 sometimes gets them wrong.\n\t * If the anchor/focus nodes and offsets are the same, the range is collapsed.\n\t */\n\tfunction isCollapsed(anchorNode, anchorOffset, focusNode, focusOffset) {\n\t  return anchorNode === focusNode && anchorOffset === focusOffset;\n\t}\n\t\n\t/**\n\t * Get the appropriate anchor and focus node/offset pairs for IE.\n\t *\n\t * The catch here is that IE's selection API doesn't provide information\n\t * about whether the selection is forward or backward, so we have to\n\t * behave as though it's always forward.\n\t *\n\t * IE text differs from modern selection in that it behaves as though\n\t * block elements end with a new line. This means character offsets will\n\t * differ between the two APIs.\n\t *\n\t * @param {DOMElement} node\n\t * @return {object}\n\t */\n\tfunction getIEOffsets(node) {\n\t  var selection = document.selection;\n\t  var selectedRange = selection.createRange();\n\t  var selectedLength = selectedRange.text.length;\n\t\n\t  // Duplicate selection so we can move range without breaking user selection.\n\t  var fromStart = selectedRange.duplicate();\n\t  fromStart.moveToElementText(node);\n\t  fromStart.setEndPoint('EndToStart', selectedRange);\n\t\n\t  var startOffset = fromStart.text.length;\n\t  var endOffset = startOffset + selectedLength;\n\t\n\t  return {\n\t    start: startOffset,\n\t    end: endOffset\n\t  };\n\t}\n\t\n\t/**\n\t * @param {DOMElement} node\n\t * @return {?object}\n\t */\n\tfunction getModernOffsets(node) {\n\t  var selection = window.getSelection && window.getSelection();\n\t\n\t  if (!selection || selection.rangeCount === 0) {\n\t    return null;\n\t  }\n\t\n\t  var anchorNode = selection.anchorNode;\n\t  var anchorOffset = selection.anchorOffset;\n\t  var focusNode = selection.focusNode;\n\t  var focusOffset = selection.focusOffset;\n\t\n\t  var currentRange = selection.getRangeAt(0);\n\t\n\t  // In Firefox, range.startContainer and range.endContainer can be \"anonymous\n\t  // divs\", e.g. the up/down buttons on an <input type=\"number\">. Anonymous\n\t  // divs do not seem to expose properties, triggering a \"Permission denied\n\t  // error\" if any of its properties are accessed. The only seemingly possible\n\t  // way to avoid erroring is to access a property that typically works for\n\t  // non-anonymous divs and catch any error that may otherwise arise. See\n\t  // https://bugzilla.mozilla.org/show_bug.cgi?id=208427\n\t  try {\n\t    /* eslint-disable no-unused-expressions */\n\t    currentRange.startContainer.nodeType;\n\t    currentRange.endContainer.nodeType;\n\t    /* eslint-enable no-unused-expressions */\n\t  } catch (e) {\n\t    return null;\n\t  }\n\t\n\t  // If the node and offset values are the same, the selection is collapsed.\n\t  // `Selection.isCollapsed` is available natively, but IE sometimes gets\n\t  // this value wrong.\n\t  var isSelectionCollapsed = isCollapsed(selection.anchorNode, selection.anchorOffset, selection.focusNode, selection.focusOffset);\n\t\n\t  var rangeLength = isSelectionCollapsed ? 0 : currentRange.toString().length;\n\t\n\t  var tempRange = currentRange.cloneRange();\n\t  tempRange.selectNodeContents(node);\n\t  tempRange.setEnd(currentRange.startContainer, currentRange.startOffset);\n\t\n\t  var isTempRangeCollapsed = isCollapsed(tempRange.startContainer, tempRange.startOffset, tempRange.endContainer, tempRange.endOffset);\n\t\n\t  var start = isTempRangeCollapsed ? 0 : tempRange.toString().length;\n\t  var end = start + rangeLength;\n\t\n\t  // Detect whether the selection is backward.\n\t  var detectionRange = document.createRange();\n\t  detectionRange.setStart(anchorNode, anchorOffset);\n\t  detectionRange.setEnd(focusNode, focusOffset);\n\t  var isBackward = detectionRange.collapsed;\n\t\n\t  return {\n\t    start: isBackward ? end : start,\n\t    end: isBackward ? start : end\n\t  };\n\t}\n\t\n\t/**\n\t * @param {DOMElement|DOMTextNode} node\n\t * @param {object} offsets\n\t */\n\tfunction setIEOffsets(node, offsets) {\n\t  var range = document.selection.createRange().duplicate();\n\t  var start, end;\n\t\n\t  if (offsets.end === undefined) {\n\t    start = offsets.start;\n\t    end = start;\n\t  } else if (offsets.start > offsets.end) {\n\t    start = offsets.end;\n\t    end = offsets.start;\n\t  } else {\n\t    start = offsets.start;\n\t    end = offsets.end;\n\t  }\n\t\n\t  range.moveToElementText(node);\n\t  range.moveStart('character', start);\n\t  range.setEndPoint('EndToStart', range);\n\t  range.moveEnd('character', end - start);\n\t  range.select();\n\t}\n\t\n\t/**\n\t * In modern non-IE browsers, we can support both forward and backward\n\t * selections.\n\t *\n\t * Note: IE10+ supports the Selection object, but it does not support\n\t * the `extend` method, which means that even in modern IE, it's not possible\n\t * to programmatically create a backward selection. Thus, for all IE\n\t * versions, we use the old IE API to create our selections.\n\t *\n\t * @param {DOMElement|DOMTextNode} node\n\t * @param {object} offsets\n\t */\n\tfunction setModernOffsets(node, offsets) {\n\t  if (!window.getSelection) {\n\t    return;\n\t  }\n\t\n\t  var selection = window.getSelection();\n\t  var length = node[getTextContentAccessor()].length;\n\t  var start = Math.min(offsets.start, length);\n\t  var end = offsets.end === undefined ? start : Math.min(offsets.end, length);\n\t\n\t  // IE 11 uses modern selection, but doesn't support the extend method.\n\t  // Flip backward selections, so we can set with a single range.\n\t  if (!selection.extend && start > end) {\n\t    var temp = end;\n\t    end = start;\n\t    start = temp;\n\t  }\n\t\n\t  var startMarker = getNodeForCharacterOffset(node, start);\n\t  var endMarker = getNodeForCharacterOffset(node, end);\n\t\n\t  if (startMarker && endMarker) {\n\t    var range = document.createRange();\n\t    range.setStart(startMarker.node, startMarker.offset);\n\t    selection.removeAllRanges();\n\t\n\t    if (start > end) {\n\t      selection.addRange(range);\n\t      selection.extend(endMarker.node, endMarker.offset);\n\t    } else {\n\t      range.setEnd(endMarker.node, endMarker.offset);\n\t      selection.addRange(range);\n\t    }\n\t  }\n\t}\n\t\n\tvar useIEOffsets = ExecutionEnvironment.canUseDOM && 'selection' in document && !('getSelection' in window);\n\t\n\tvar ReactDOMSelection = {\n\t  /**\n\t   * @param {DOMElement} node\n\t   */\n\t  getOffsets: useIEOffsets ? getIEOffsets : getModernOffsets,\n\t\n\t  /**\n\t   * @param {DOMElement|DOMTextNode} node\n\t   * @param {object} offsets\n\t   */\n\t  setOffsets: useIEOffsets ? setIEOffsets : setModernOffsets\n\t};\n\t\n\tmodule.exports = ReactDOMSelection;\n\n/***/ },\n/* 104 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(2),\n\t    _assign = __webpack_require__(5);\n\t\n\tvar DOMChildrenOperations = __webpack_require__(31);\n\tvar DOMLazyTree = __webpack_require__(15);\n\tvar ReactDOMComponentTree = __webpack_require__(4);\n\t\n\tvar escapeTextContentForBrowser = __webpack_require__(28);\n\tvar invariant = __webpack_require__(1);\n\tvar validateDOMNesting = __webpack_require__(46);\n\t\n\t/**\n\t * Text nodes violate a couple assumptions that React makes about components:\n\t *\n\t *  - When mounting text into the DOM, adjacent text nodes are merged.\n\t *  - Text nodes cannot be assigned a React root ID.\n\t *\n\t * This component is used to wrap strings between comment nodes so that they\n\t * can undergo the same reconciliation that is applied to elements.\n\t *\n\t * TODO: Investigate representing React components in the DOM with text nodes.\n\t *\n\t * @class ReactDOMTextComponent\n\t * @extends ReactComponent\n\t * @internal\n\t */\n\tvar ReactDOMTextComponent = function (text) {\n\t  // TODO: This is really a ReactText (ReactNode), not a ReactElement\n\t  this._currentElement = text;\n\t  this._stringText = '' + text;\n\t  // ReactDOMComponentTree uses these:\n\t  this._hostNode = null;\n\t  this._hostParent = null;\n\t\n\t  // Properties\n\t  this._domID = 0;\n\t  this._mountIndex = 0;\n\t  this._closingComment = null;\n\t  this._commentNodes = null;\n\t};\n\t\n\t_assign(ReactDOMTextComponent.prototype, {\n\t\n\t  /**\n\t   * Creates the markup for this text node. This node is not intended to have\n\t   * any features besides containing text content.\n\t   *\n\t   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n\t   * @return {string} Markup for this text node.\n\t   * @internal\n\t   */\n\t  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {\n\t    if (false) {\n\t      var parentInfo;\n\t      if (hostParent != null) {\n\t        parentInfo = hostParent._ancestorInfo;\n\t      } else if (hostContainerInfo != null) {\n\t        parentInfo = hostContainerInfo._ancestorInfo;\n\t      }\n\t      if (parentInfo) {\n\t        // parentInfo should always be present except for the top-level\n\t        // component when server rendering\n\t        validateDOMNesting(null, this._stringText, this, parentInfo);\n\t      }\n\t    }\n\t\n\t    var domID = hostContainerInfo._idCounter++;\n\t    var openingValue = ' react-text: ' + domID + ' ';\n\t    var closingValue = ' /react-text ';\n\t    this._domID = domID;\n\t    this._hostParent = hostParent;\n\t    if (transaction.useCreateElement) {\n\t      var ownerDocument = hostContainerInfo._ownerDocument;\n\t      var openingComment = ownerDocument.createComment(openingValue);\n\t      var closingComment = ownerDocument.createComment(closingValue);\n\t      var lazyTree = DOMLazyTree(ownerDocument.createDocumentFragment());\n\t      DOMLazyTree.queueChild(lazyTree, DOMLazyTree(openingComment));\n\t      if (this._stringText) {\n\t        DOMLazyTree.queueChild(lazyTree, DOMLazyTree(ownerDocument.createTextNode(this._stringText)));\n\t      }\n\t      DOMLazyTree.queueChild(lazyTree, DOMLazyTree(closingComment));\n\t      ReactDOMComponentTree.precacheNode(this, openingComment);\n\t      this._closingComment = closingComment;\n\t      return lazyTree;\n\t    } else {\n\t      var escapedText = escapeTextContentForBrowser(this._stringText);\n\t\n\t      if (transaction.renderToStaticMarkup) {\n\t        // Normally we'd wrap this between comment nodes for the reasons stated\n\t        // above, but since this is a situation where React won't take over\n\t        // (static pages), we can simply return the text as it is.\n\t        return escapedText;\n\t      }\n\t\n\t      return '<!--' + openingValue + '-->' + escapedText + '<!--' + closingValue + '-->';\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Updates this component by updating the text content.\n\t   *\n\t   * @param {ReactText} nextText The next text content\n\t   * @param {ReactReconcileTransaction} transaction\n\t   * @internal\n\t   */\n\t  receiveComponent: function (nextText, transaction) {\n\t    if (nextText !== this._currentElement) {\n\t      this._currentElement = nextText;\n\t      var nextStringText = '' + nextText;\n\t      if (nextStringText !== this._stringText) {\n\t        // TODO: Save this as pending props and use performUpdateIfNecessary\n\t        // and/or updateComponent to do the actual update for consistency with\n\t        // other component types?\n\t        this._stringText = nextStringText;\n\t        var commentNodes = this.getHostNode();\n\t        DOMChildrenOperations.replaceDelimitedText(commentNodes[0], commentNodes[1], nextStringText);\n\t      }\n\t    }\n\t  },\n\t\n\t  getHostNode: function () {\n\t    var hostNode = this._commentNodes;\n\t    if (hostNode) {\n\t      return hostNode;\n\t    }\n\t    if (!this._closingComment) {\n\t      var openingComment = ReactDOMComponentTree.getNodeFromInstance(this);\n\t      var node = openingComment.nextSibling;\n\t      while (true) {\n\t        !(node != null) ?  false ? invariant(false, 'Missing closing comment for text component %s', this._domID) : _prodInvariant('67', this._domID) : void 0;\n\t        if (node.nodeType === 8 && node.nodeValue === ' /react-text ') {\n\t          this._closingComment = node;\n\t          break;\n\t        }\n\t        node = node.nextSibling;\n\t      }\n\t    }\n\t    hostNode = [this._hostNode, this._closingComment];\n\t    this._commentNodes = hostNode;\n\t    return hostNode;\n\t  },\n\t\n\t  unmountComponent: function () {\n\t    this._closingComment = null;\n\t    this._commentNodes = null;\n\t    ReactDOMComponentTree.uncacheNode(this);\n\t  }\n\t\n\t});\n\t\n\tmodule.exports = ReactDOMTextComponent;\n\n/***/ },\n/* 105 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(2),\n\t    _assign = __webpack_require__(5);\n\t\n\tvar LinkedValueUtils = __webpack_require__(36);\n\tvar ReactDOMComponentTree = __webpack_require__(4);\n\tvar ReactUpdates = __webpack_require__(8);\n\t\n\tvar invariant = __webpack_require__(1);\n\tvar warning = __webpack_require__(3);\n\t\n\tvar didWarnValueLink = false;\n\tvar didWarnValDefaultVal = false;\n\t\n\tfunction forceUpdateIfMounted() {\n\t  if (this._rootNodeID) {\n\t    // DOM component is still mounted; update\n\t    ReactDOMTextarea.updateWrapper(this);\n\t  }\n\t}\n\t\n\t/**\n\t * Implements a <textarea> host component that allows setting `value`, and\n\t * `defaultValue`. This differs from the traditional DOM API because value is\n\t * usually set as PCDATA children.\n\t *\n\t * If `value` is not supplied (or null/undefined), user actions that affect the\n\t * value will trigger updates to the element.\n\t *\n\t * If `value` is supplied (and not null/undefined), the rendered element will\n\t * not trigger updates to the element. Instead, the `value` prop must change in\n\t * order for the rendered element to be updated.\n\t *\n\t * The rendered element will be initialized with an empty value, the prop\n\t * `defaultValue` if specified, or the children content (deprecated).\n\t */\n\tvar ReactDOMTextarea = {\n\t  getHostProps: function (inst, props) {\n\t    !(props.dangerouslySetInnerHTML == null) ?  false ? invariant(false, '`dangerouslySetInnerHTML` does not make sense on <textarea>.') : _prodInvariant('91') : void 0;\n\t\n\t    // Always set children to the same thing. In IE9, the selection range will\n\t    // get reset if `textContent` is mutated.  We could add a check in setTextContent\n\t    // to only set the value if/when the value differs from the node value (which would\n\t    // completely solve this IE9 bug), but Sebastian+Ben seemed to like this solution.\n\t    // The value can be a boolean or object so that's why it's forced to be a string.\n\t    var hostProps = _assign({}, props, {\n\t      value: undefined,\n\t      defaultValue: undefined,\n\t      children: '' + inst._wrapperState.initialValue,\n\t      onChange: inst._wrapperState.onChange\n\t    });\n\t\n\t    return hostProps;\n\t  },\n\t\n\t  mountWrapper: function (inst, props) {\n\t    if (false) {\n\t      LinkedValueUtils.checkPropTypes('textarea', props, inst._currentElement._owner);\n\t      if (props.valueLink !== undefined && !didWarnValueLink) {\n\t        process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `textarea` is deprecated; set `value` and `onChange` instead.') : void 0;\n\t        didWarnValueLink = true;\n\t      }\n\t      if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValDefaultVal) {\n\t        process.env.NODE_ENV !== 'production' ? warning(false, 'Textarea elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled textarea ' + 'and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;\n\t        didWarnValDefaultVal = true;\n\t      }\n\t    }\n\t\n\t    var value = LinkedValueUtils.getValue(props);\n\t    var initialValue = value;\n\t\n\t    // Only bother fetching default value if we're going to use it\n\t    if (value == null) {\n\t      var defaultValue = props.defaultValue;\n\t      // TODO (yungsters): Remove support for children content in <textarea>.\n\t      var children = props.children;\n\t      if (children != null) {\n\t        if (false) {\n\t          process.env.NODE_ENV !== 'production' ? warning(false, 'Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.') : void 0;\n\t        }\n\t        !(defaultValue == null) ?  false ? invariant(false, 'If you supply `defaultValue` on a <textarea>, do not pass children.') : _prodInvariant('92') : void 0;\n\t        if (Array.isArray(children)) {\n\t          !(children.length <= 1) ?  false ? invariant(false, '<textarea> can only have at most one child.') : _prodInvariant('93') : void 0;\n\t          children = children[0];\n\t        }\n\t\n\t        defaultValue = '' + children;\n\t      }\n\t      if (defaultValue == null) {\n\t        defaultValue = '';\n\t      }\n\t      initialValue = defaultValue;\n\t    }\n\t\n\t    inst._wrapperState = {\n\t      initialValue: '' + initialValue,\n\t      listeners: null,\n\t      onChange: _handleChange.bind(inst)\n\t    };\n\t  },\n\t\n\t  updateWrapper: function (inst) {\n\t    var props = inst._currentElement.props;\n\t\n\t    var node = ReactDOMComponentTree.getNodeFromInstance(inst);\n\t    var value = LinkedValueUtils.getValue(props);\n\t    if (value != null) {\n\t      // Cast `value` to a string to ensure the value is set correctly. While\n\t      // browsers typically do this as necessary, jsdom doesn't.\n\t      var newValue = '' + value;\n\t\n\t      // To avoid side effects (such as losing text selection), only set value if changed\n\t      if (newValue !== node.value) {\n\t        node.value = newValue;\n\t      }\n\t      if (props.defaultValue == null) {\n\t        node.defaultValue = newValue;\n\t      }\n\t    }\n\t    if (props.defaultValue != null) {\n\t      node.defaultValue = props.defaultValue;\n\t    }\n\t  },\n\t\n\t  postMountWrapper: function (inst) {\n\t    // This is in postMount because we need access to the DOM node, which is not\n\t    // available until after the component has mounted.\n\t    var node = ReactDOMComponentTree.getNodeFromInstance(inst);\n\t    var textContent = node.textContent;\n\t\n\t    // Only set node.value if textContent is equal to the expected\n\t    // initial value. In IE10/IE11 there is a bug where the placeholder attribute\n\t    // will populate textContent as well.\n\t    // https://developer.microsoft.com/microsoft-edge/platform/issues/101525/\n\t    if (textContent === inst._wrapperState.initialValue) {\n\t      node.value = textContent;\n\t    }\n\t  }\n\t};\n\t\n\tfunction _handleChange(event) {\n\t  var props = this._currentElement.props;\n\t  var returnValue = LinkedValueUtils.executeOnChange(props, event);\n\t  ReactUpdates.asap(forceUpdateIfMounted, this);\n\t  return returnValue;\n\t}\n\t\n\tmodule.exports = ReactDOMTextarea;\n\n/***/ },\n/* 106 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2015-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(2);\n\t\n\tvar invariant = __webpack_require__(1);\n\t\n\t/**\n\t * Return the lowest common ancestor of A and B, or null if they are in\n\t * different trees.\n\t */\n\tfunction getLowestCommonAncestor(instA, instB) {\n\t  !('_hostNode' in instA) ?  false ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;\n\t  !('_hostNode' in instB) ?  false ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;\n\t\n\t  var depthA = 0;\n\t  for (var tempA = instA; tempA; tempA = tempA._hostParent) {\n\t    depthA++;\n\t  }\n\t  var depthB = 0;\n\t  for (var tempB = instB; tempB; tempB = tempB._hostParent) {\n\t    depthB++;\n\t  }\n\t\n\t  // If A is deeper, crawl up.\n\t  while (depthA - depthB > 0) {\n\t    instA = instA._hostParent;\n\t    depthA--;\n\t  }\n\t\n\t  // If B is deeper, crawl up.\n\t  while (depthB - depthA > 0) {\n\t    instB = instB._hostParent;\n\t    depthB--;\n\t  }\n\t\n\t  // Walk in lockstep until we find a match.\n\t  var depth = depthA;\n\t  while (depth--) {\n\t    if (instA === instB) {\n\t      return instA;\n\t    }\n\t    instA = instA._hostParent;\n\t    instB = instB._hostParent;\n\t  }\n\t  return null;\n\t}\n\t\n\t/**\n\t * Return if A is an ancestor of B.\n\t */\n\tfunction isAncestor(instA, instB) {\n\t  !('_hostNode' in instA) ?  false ? invariant(false, 'isAncestor: Invalid argument.') : _prodInvariant('35') : void 0;\n\t  !('_hostNode' in instB) ?  false ? invariant(false, 'isAncestor: Invalid argument.') : _prodInvariant('35') : void 0;\n\t\n\t  while (instB) {\n\t    if (instB === instA) {\n\t      return true;\n\t    }\n\t    instB = instB._hostParent;\n\t  }\n\t  return false;\n\t}\n\t\n\t/**\n\t * Return the parent instance of the passed-in instance.\n\t */\n\tfunction getParentInstance(inst) {\n\t  !('_hostNode' in inst) ?  false ? invariant(false, 'getParentInstance: Invalid argument.') : _prodInvariant('36') : void 0;\n\t\n\t  return inst._hostParent;\n\t}\n\t\n\t/**\n\t * Simulates the traversal of a two-phase, capture/bubble event dispatch.\n\t */\n\tfunction traverseTwoPhase(inst, fn, arg) {\n\t  var path = [];\n\t  while (inst) {\n\t    path.push(inst);\n\t    inst = inst._hostParent;\n\t  }\n\t  var i;\n\t  for (i = path.length; i-- > 0;) {\n\t    fn(path[i], 'captured', arg);\n\t  }\n\t  for (i = 0; i < path.length; i++) {\n\t    fn(path[i], 'bubbled', arg);\n\t  }\n\t}\n\t\n\t/**\n\t * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that\n\t * should would receive a `mouseEnter` or `mouseLeave` event.\n\t *\n\t * Does not invoke the callback on the nearest common ancestor because nothing\n\t * \"entered\" or \"left\" that element.\n\t */\n\tfunction traverseEnterLeave(from, to, fn, argFrom, argTo) {\n\t  var common = from && to ? getLowestCommonAncestor(from, to) : null;\n\t  var pathFrom = [];\n\t  while (from && from !== common) {\n\t    pathFrom.push(from);\n\t    from = from._hostParent;\n\t  }\n\t  var pathTo = [];\n\t  while (to && to !== common) {\n\t    pathTo.push(to);\n\t    to = to._hostParent;\n\t  }\n\t  var i;\n\t  for (i = 0; i < pathFrom.length; i++) {\n\t    fn(pathFrom[i], 'bubbled', argFrom);\n\t  }\n\t  for (i = pathTo.length; i-- > 0;) {\n\t    fn(pathTo[i], 'captured', argTo);\n\t  }\n\t}\n\t\n\tmodule.exports = {\n\t  isAncestor: isAncestor,\n\t  getLowestCommonAncestor: getLowestCommonAncestor,\n\t  getParentInstance: getParentInstance,\n\t  traverseTwoPhase: traverseTwoPhase,\n\t  traverseEnterLeave: traverseEnterLeave\n\t};\n\n/***/ },\n/* 107 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar _assign = __webpack_require__(5);\n\t\n\tvar ReactUpdates = __webpack_require__(8);\n\tvar Transaction = __webpack_require__(27);\n\t\n\tvar emptyFunction = __webpack_require__(9);\n\t\n\tvar RESET_BATCHED_UPDATES = {\n\t  initialize: emptyFunction,\n\t  close: function () {\n\t    ReactDefaultBatchingStrategy.isBatchingUpdates = false;\n\t  }\n\t};\n\t\n\tvar FLUSH_BATCHED_UPDATES = {\n\t  initialize: emptyFunction,\n\t  close: ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)\n\t};\n\t\n\tvar TRANSACTION_WRAPPERS = [FLUSH_BATCHED_UPDATES, RESET_BATCHED_UPDATES];\n\t\n\tfunction ReactDefaultBatchingStrategyTransaction() {\n\t  this.reinitializeTransaction();\n\t}\n\t\n\t_assign(ReactDefaultBatchingStrategyTransaction.prototype, Transaction, {\n\t  getTransactionWrappers: function () {\n\t    return TRANSACTION_WRAPPERS;\n\t  }\n\t});\n\t\n\tvar transaction = new ReactDefaultBatchingStrategyTransaction();\n\t\n\tvar ReactDefaultBatchingStrategy = {\n\t  isBatchingUpdates: false,\n\t\n\t  /**\n\t   * Call the provided function in a context within which calls to `setState`\n\t   * and friends are batched such that components aren't updated unnecessarily.\n\t   */\n\t  batchedUpdates: function (callback, a, b, c, d, e) {\n\t    var alreadyBatchingUpdates = ReactDefaultBatchingStrategy.isBatchingUpdates;\n\t\n\t    ReactDefaultBatchingStrategy.isBatchingUpdates = true;\n\t\n\t    // The code is written this way to avoid extra allocations\n\t    if (alreadyBatchingUpdates) {\n\t      return callback(a, b, c, d, e);\n\t    } else {\n\t      return transaction.perform(callback, null, a, b, c, d, e);\n\t    }\n\t  }\n\t};\n\t\n\tmodule.exports = ReactDefaultBatchingStrategy;\n\n/***/ },\n/* 108 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar ARIADOMPropertyConfig = __webpack_require__(82);\n\tvar BeforeInputEventPlugin = __webpack_require__(84);\n\tvar ChangeEventPlugin = __webpack_require__(86);\n\tvar DefaultEventPluginOrder = __webpack_require__(88);\n\tvar EnterLeaveEventPlugin = __webpack_require__(89);\n\tvar HTMLDOMPropertyConfig = __webpack_require__(91);\n\tvar ReactComponentBrowserEnvironment = __webpack_require__(93);\n\tvar ReactDOMComponent = __webpack_require__(96);\n\tvar ReactDOMComponentTree = __webpack_require__(4);\n\tvar ReactDOMEmptyComponent = __webpack_require__(98);\n\tvar ReactDOMTreeTraversal = __webpack_require__(106);\n\tvar ReactDOMTextComponent = __webpack_require__(104);\n\tvar ReactDefaultBatchingStrategy = __webpack_require__(107);\n\tvar ReactEventListener = __webpack_require__(111);\n\tvar ReactInjection = __webpack_require__(112);\n\tvar ReactReconcileTransaction = __webpack_require__(117);\n\tvar SVGDOMPropertyConfig = __webpack_require__(122);\n\tvar SelectEventPlugin = __webpack_require__(123);\n\tvar SimpleEventPlugin = __webpack_require__(124);\n\t\n\tvar alreadyInjected = false;\n\t\n\tfunction inject() {\n\t  if (alreadyInjected) {\n\t    // TODO: This is currently true because these injections are shared between\n\t    // the client and the server package. They should be built independently\n\t    // and not share any injection state. Then this problem will be solved.\n\t    return;\n\t  }\n\t  alreadyInjected = true;\n\t\n\t  ReactInjection.EventEmitter.injectReactEventListener(ReactEventListener);\n\t\n\t  /**\n\t   * Inject modules for resolving DOM hierarchy and plugin ordering.\n\t   */\n\t  ReactInjection.EventPluginHub.injectEventPluginOrder(DefaultEventPluginOrder);\n\t  ReactInjection.EventPluginUtils.injectComponentTree(ReactDOMComponentTree);\n\t  ReactInjection.EventPluginUtils.injectTreeTraversal(ReactDOMTreeTraversal);\n\t\n\t  /**\n\t   * Some important event plugins included by default (without having to require\n\t   * them).\n\t   */\n\t  ReactInjection.EventPluginHub.injectEventPluginsByName({\n\t    SimpleEventPlugin: SimpleEventPlugin,\n\t    EnterLeaveEventPlugin: EnterLeaveEventPlugin,\n\t    ChangeEventPlugin: ChangeEventPlugin,\n\t    SelectEventPlugin: SelectEventPlugin,\n\t    BeforeInputEventPlugin: BeforeInputEventPlugin\n\t  });\n\t\n\t  ReactInjection.HostComponent.injectGenericComponentClass(ReactDOMComponent);\n\t\n\t  ReactInjection.HostComponent.injectTextComponentClass(ReactDOMTextComponent);\n\t\n\t  ReactInjection.DOMProperty.injectDOMPropertyConfig(ARIADOMPropertyConfig);\n\t  ReactInjection.DOMProperty.injectDOMPropertyConfig(HTMLDOMPropertyConfig);\n\t  ReactInjection.DOMProperty.injectDOMPropertyConfig(SVGDOMPropertyConfig);\n\t\n\t  ReactInjection.EmptyComponent.injectEmptyComponentFactory(function (instantiate) {\n\t    return new ReactDOMEmptyComponent(instantiate);\n\t  });\n\t\n\t  ReactInjection.Updates.injectReconcileTransaction(ReactReconcileTransaction);\n\t  ReactInjection.Updates.injectBatchingStrategy(ReactDefaultBatchingStrategy);\n\t\n\t  ReactInjection.Component.injectEnvironment(ReactComponentBrowserEnvironment);\n\t}\n\t\n\tmodule.exports = {\n\t  inject: inject\n\t};\n\n/***/ },\n/* 109 */\n79,\n/* 110 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar EventPluginHub = __webpack_require__(21);\n\t\n\tfunction runEventQueueInBatch(events) {\n\t  EventPluginHub.enqueueEvents(events);\n\t  EventPluginHub.processEventQueue(false);\n\t}\n\t\n\tvar ReactEventEmitterMixin = {\n\t\n\t  /**\n\t   * Streams a fired top-level event to `EventPluginHub` where plugins have the\n\t   * opportunity to create `ReactEvent`s to be dispatched.\n\t   */\n\t  handleTopLevel: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n\t    var events = EventPluginHub.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);\n\t    runEventQueueInBatch(events);\n\t  }\n\t};\n\t\n\tmodule.exports = ReactEventEmitterMixin;\n\n/***/ },\n/* 111 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar _assign = __webpack_require__(5);\n\t\n\tvar EventListener = __webpack_require__(72);\n\tvar ExecutionEnvironment = __webpack_require__(6);\n\tvar PooledClass = __webpack_require__(13);\n\tvar ReactDOMComponentTree = __webpack_require__(4);\n\tvar ReactUpdates = __webpack_require__(8);\n\t\n\tvar getEventTarget = __webpack_require__(43);\n\tvar getUnboundedScrollPosition = __webpack_require__(151);\n\t\n\t/**\n\t * Find the deepest React component completely containing the root of the\n\t * passed-in instance (for use when entire React trees are nested within each\n\t * other). If React trees are not nested, returns null.\n\t */\n\tfunction findParent(inst) {\n\t  // TODO: It may be a good idea to cache this to prevent unnecessary DOM\n\t  // traversal, but caching is difficult to do correctly without using a\n\t  // mutation observer to listen for all DOM changes.\n\t  while (inst._hostParent) {\n\t    inst = inst._hostParent;\n\t  }\n\t  var rootNode = ReactDOMComponentTree.getNodeFromInstance(inst);\n\t  var container = rootNode.parentNode;\n\t  return ReactDOMComponentTree.getClosestInstanceFromNode(container);\n\t}\n\t\n\t// Used to store ancestor hierarchy in top level callback\n\tfunction TopLevelCallbackBookKeeping(topLevelType, nativeEvent) {\n\t  this.topLevelType = topLevelType;\n\t  this.nativeEvent = nativeEvent;\n\t  this.ancestors = [];\n\t}\n\t_assign(TopLevelCallbackBookKeeping.prototype, {\n\t  destructor: function () {\n\t    this.topLevelType = null;\n\t    this.nativeEvent = null;\n\t    this.ancestors.length = 0;\n\t  }\n\t});\n\tPooledClass.addPoolingTo(TopLevelCallbackBookKeeping, PooledClass.twoArgumentPooler);\n\t\n\tfunction handleTopLevelImpl(bookKeeping) {\n\t  var nativeEventTarget = getEventTarget(bookKeeping.nativeEvent);\n\t  var targetInst = ReactDOMComponentTree.getClosestInstanceFromNode(nativeEventTarget);\n\t\n\t  // Loop through the hierarchy, in case there's any nested components.\n\t  // It's important that we build the array of ancestors before calling any\n\t  // event handlers, because event handlers can modify the DOM, leading to\n\t  // inconsistencies with ReactMount's node cache. See #1105.\n\t  var ancestor = targetInst;\n\t  do {\n\t    bookKeeping.ancestors.push(ancestor);\n\t    ancestor = ancestor && findParent(ancestor);\n\t  } while (ancestor);\n\t\n\t  for (var i = 0; i < bookKeeping.ancestors.length; i++) {\n\t    targetInst = bookKeeping.ancestors[i];\n\t    ReactEventListener._handleTopLevel(bookKeeping.topLevelType, targetInst, bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));\n\t  }\n\t}\n\t\n\tfunction scrollValueMonitor(cb) {\n\t  var scrollPosition = getUnboundedScrollPosition(window);\n\t  cb(scrollPosition);\n\t}\n\t\n\tvar ReactEventListener = {\n\t  _enabled: true,\n\t  _handleTopLevel: null,\n\t\n\t  WINDOW_HANDLE: ExecutionEnvironment.canUseDOM ? window : null,\n\t\n\t  setHandleTopLevel: function (handleTopLevel) {\n\t    ReactEventListener._handleTopLevel = handleTopLevel;\n\t  },\n\t\n\t  setEnabled: function (enabled) {\n\t    ReactEventListener._enabled = !!enabled;\n\t  },\n\t\n\t  isEnabled: function () {\n\t    return ReactEventListener._enabled;\n\t  },\n\t\n\t  /**\n\t   * Traps top-level events by using event bubbling.\n\t   *\n\t   * @param {string} topLevelType Record from `EventConstants`.\n\t   * @param {string} handlerBaseName Event name (e.g. \"click\").\n\t   * @param {object} element Element on which to attach listener.\n\t   * @return {?object} An object with a remove function which will forcefully\n\t   *                  remove the listener.\n\t   * @internal\n\t   */\n\t  trapBubbledEvent: function (topLevelType, handlerBaseName, element) {\n\t    if (!element) {\n\t      return null;\n\t    }\n\t    return EventListener.listen(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));\n\t  },\n\t\n\t  /**\n\t   * Traps a top-level event by using event capturing.\n\t   *\n\t   * @param {string} topLevelType Record from `EventConstants`.\n\t   * @param {string} handlerBaseName Event name (e.g. \"click\").\n\t   * @param {object} element Element on which to attach listener.\n\t   * @return {?object} An object with a remove function which will forcefully\n\t   *                  remove the listener.\n\t   * @internal\n\t   */\n\t  trapCapturedEvent: function (topLevelType, handlerBaseName, element) {\n\t    if (!element) {\n\t      return null;\n\t    }\n\t    return EventListener.capture(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));\n\t  },\n\t\n\t  monitorScrollValue: function (refresh) {\n\t    var callback = scrollValueMonitor.bind(null, refresh);\n\t    EventListener.listen(window, 'scroll', callback);\n\t  },\n\t\n\t  dispatchEvent: function (topLevelType, nativeEvent) {\n\t    if (!ReactEventListener._enabled) {\n\t      return;\n\t    }\n\t\n\t    var bookKeeping = TopLevelCallbackBookKeeping.getPooled(topLevelType, nativeEvent);\n\t    try {\n\t      // Event queue being processed in the same cycle allows\n\t      // `preventDefault`.\n\t      ReactUpdates.batchedUpdates(handleTopLevelImpl, bookKeeping);\n\t    } finally {\n\t      TopLevelCallbackBookKeeping.release(bookKeeping);\n\t    }\n\t  }\n\t};\n\t\n\tmodule.exports = ReactEventListener;\n\n/***/ },\n/* 112 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar DOMProperty = __webpack_require__(16);\n\tvar EventPluginHub = __webpack_require__(21);\n\tvar EventPluginUtils = __webpack_require__(34);\n\tvar ReactComponentEnvironment = __webpack_require__(37);\n\tvar ReactEmptyComponent = __webpack_require__(57);\n\tvar ReactBrowserEventEmitter = __webpack_require__(25);\n\tvar ReactHostComponent = __webpack_require__(59);\n\tvar ReactUpdates = __webpack_require__(8);\n\t\n\tvar ReactInjection = {\n\t  Component: ReactComponentEnvironment.injection,\n\t  DOMProperty: DOMProperty.injection,\n\t  EmptyComponent: ReactEmptyComponent.injection,\n\t  EventPluginHub: EventPluginHub.injection,\n\t  EventPluginUtils: EventPluginUtils.injection,\n\t  EventEmitter: ReactBrowserEventEmitter.injection,\n\t  HostComponent: ReactHostComponent.injection,\n\t  Updates: ReactUpdates.injection\n\t};\n\t\n\tmodule.exports = ReactInjection;\n\n/***/ },\n/* 113 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar adler32 = __webpack_require__(135);\n\t\n\tvar TAG_END = /\\/?>/;\n\tvar COMMENT_START = /^<\\!\\-\\-/;\n\t\n\tvar ReactMarkupChecksum = {\n\t  CHECKSUM_ATTR_NAME: 'data-react-checksum',\n\t\n\t  /**\n\t   * @param {string} markup Markup string\n\t   * @return {string} Markup string with checksum attribute attached\n\t   */\n\t  addChecksumToMarkup: function (markup) {\n\t    var checksum = adler32(markup);\n\t\n\t    // Add checksum (handle both parent tags, comments and self-closing tags)\n\t    if (COMMENT_START.test(markup)) {\n\t      return markup;\n\t    } else {\n\t      return markup.replace(TAG_END, ' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '=\"' + checksum + '\"$&');\n\t    }\n\t  },\n\t\n\t  /**\n\t   * @param {string} markup to use\n\t   * @param {DOMElement} element root React element\n\t   * @returns {boolean} whether or not the markup is the same\n\t   */\n\t  canReuseMarkup: function (markup, element) {\n\t    var existingChecksum = element.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);\n\t    existingChecksum = existingChecksum && parseInt(existingChecksum, 10);\n\t    var markupChecksum = adler32(markup);\n\t    return markupChecksum === existingChecksum;\n\t  }\n\t};\n\t\n\tmodule.exports = ReactMarkupChecksum;\n\n/***/ },\n/* 114 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(2);\n\t\n\tvar ReactComponentEnvironment = __webpack_require__(37);\n\tvar ReactInstanceMap = __webpack_require__(23);\n\tvar ReactInstrumentation = __webpack_require__(7);\n\t\n\tvar ReactCurrentOwner = __webpack_require__(11);\n\tvar ReactReconciler = __webpack_require__(17);\n\tvar ReactChildReconciler = __webpack_require__(92);\n\t\n\tvar emptyFunction = __webpack_require__(9);\n\tvar flattenChildren = __webpack_require__(138);\n\tvar invariant = __webpack_require__(1);\n\t\n\t/**\n\t * Make an update for markup to be rendered and inserted at a supplied index.\n\t *\n\t * @param {string} markup Markup that renders into an element.\n\t * @param {number} toIndex Destination index.\n\t * @private\n\t */\n\tfunction makeInsertMarkup(markup, afterNode, toIndex) {\n\t  // NOTE: Null values reduce hidden classes.\n\t  return {\n\t    type: 'INSERT_MARKUP',\n\t    content: markup,\n\t    fromIndex: null,\n\t    fromNode: null,\n\t    toIndex: toIndex,\n\t    afterNode: afterNode\n\t  };\n\t}\n\t\n\t/**\n\t * Make an update for moving an existing element to another index.\n\t *\n\t * @param {number} fromIndex Source index of the existing element.\n\t * @param {number} toIndex Destination index of the element.\n\t * @private\n\t */\n\tfunction makeMove(child, afterNode, toIndex) {\n\t  // NOTE: Null values reduce hidden classes.\n\t  return {\n\t    type: 'MOVE_EXISTING',\n\t    content: null,\n\t    fromIndex: child._mountIndex,\n\t    fromNode: ReactReconciler.getHostNode(child),\n\t    toIndex: toIndex,\n\t    afterNode: afterNode\n\t  };\n\t}\n\t\n\t/**\n\t * Make an update for removing an element at an index.\n\t *\n\t * @param {number} fromIndex Index of the element to remove.\n\t * @private\n\t */\n\tfunction makeRemove(child, node) {\n\t  // NOTE: Null values reduce hidden classes.\n\t  return {\n\t    type: 'REMOVE_NODE',\n\t    content: null,\n\t    fromIndex: child._mountIndex,\n\t    fromNode: node,\n\t    toIndex: null,\n\t    afterNode: null\n\t  };\n\t}\n\t\n\t/**\n\t * Make an update for setting the markup of a node.\n\t *\n\t * @param {string} markup Markup that renders into an element.\n\t * @private\n\t */\n\tfunction makeSetMarkup(markup) {\n\t  // NOTE: Null values reduce hidden classes.\n\t  return {\n\t    type: 'SET_MARKUP',\n\t    content: markup,\n\t    fromIndex: null,\n\t    fromNode: null,\n\t    toIndex: null,\n\t    afterNode: null\n\t  };\n\t}\n\t\n\t/**\n\t * Make an update for setting the text content.\n\t *\n\t * @param {string} textContent Text content to set.\n\t * @private\n\t */\n\tfunction makeTextContent(textContent) {\n\t  // NOTE: Null values reduce hidden classes.\n\t  return {\n\t    type: 'TEXT_CONTENT',\n\t    content: textContent,\n\t    fromIndex: null,\n\t    fromNode: null,\n\t    toIndex: null,\n\t    afterNode: null\n\t  };\n\t}\n\t\n\t/**\n\t * Push an update, if any, onto the queue. Creates a new queue if none is\n\t * passed and always returns the queue. Mutative.\n\t */\n\tfunction enqueue(queue, update) {\n\t  if (update) {\n\t    queue = queue || [];\n\t    queue.push(update);\n\t  }\n\t  return queue;\n\t}\n\t\n\t/**\n\t * Processes any enqueued updates.\n\t *\n\t * @private\n\t */\n\tfunction processQueue(inst, updateQueue) {\n\t  ReactComponentEnvironment.processChildrenUpdates(inst, updateQueue);\n\t}\n\t\n\tvar setChildrenForInstrumentation = emptyFunction;\n\tif (false) {\n\t  var getDebugID = function (inst) {\n\t    if (!inst._debugID) {\n\t      // Check for ART-like instances. TODO: This is silly/gross.\n\t      var internal;\n\t      if (internal = ReactInstanceMap.get(inst)) {\n\t        inst = internal;\n\t      }\n\t    }\n\t    return inst._debugID;\n\t  };\n\t  setChildrenForInstrumentation = function (children) {\n\t    var debugID = getDebugID(this);\n\t    // TODO: React Native empty components are also multichild.\n\t    // This means they still get into this method but don't have _debugID.\n\t    if (debugID !== 0) {\n\t      ReactInstrumentation.debugTool.onSetChildren(debugID, children ? Object.keys(children).map(function (key) {\n\t        return children[key]._debugID;\n\t      }) : []);\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * ReactMultiChild are capable of reconciling multiple children.\n\t *\n\t * @class ReactMultiChild\n\t * @internal\n\t */\n\tvar ReactMultiChild = {\n\t\n\t  /**\n\t   * Provides common functionality for components that must reconcile multiple\n\t   * children. This is used by `ReactDOMComponent` to mount, update, and\n\t   * unmount child components.\n\t   *\n\t   * @lends {ReactMultiChild.prototype}\n\t   */\n\t  Mixin: {\n\t\n\t    _reconcilerInstantiateChildren: function (nestedChildren, transaction, context) {\n\t      if (false) {\n\t        var selfDebugID = getDebugID(this);\n\t        if (this._currentElement) {\n\t          try {\n\t            ReactCurrentOwner.current = this._currentElement._owner;\n\t            return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context, selfDebugID);\n\t          } finally {\n\t            ReactCurrentOwner.current = null;\n\t          }\n\t        }\n\t      }\n\t      return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context);\n\t    },\n\t\n\t    _reconcilerUpdateChildren: function (prevChildren, nextNestedChildrenElements, mountImages, removedNodes, transaction, context) {\n\t      var nextChildren;\n\t      var selfDebugID = 0;\n\t      if (false) {\n\t        selfDebugID = getDebugID(this);\n\t        if (this._currentElement) {\n\t          try {\n\t            ReactCurrentOwner.current = this._currentElement._owner;\n\t            nextChildren = flattenChildren(nextNestedChildrenElements, selfDebugID);\n\t          } finally {\n\t            ReactCurrentOwner.current = null;\n\t          }\n\t          ReactChildReconciler.updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, this, this._hostContainerInfo, context, selfDebugID);\n\t          return nextChildren;\n\t        }\n\t      }\n\t      nextChildren = flattenChildren(nextNestedChildrenElements, selfDebugID);\n\t      ReactChildReconciler.updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, this, this._hostContainerInfo, context, selfDebugID);\n\t      return nextChildren;\n\t    },\n\t\n\t    /**\n\t     * Generates a \"mount image\" for each of the supplied children. In the case\n\t     * of `ReactDOMComponent`, a mount image is a string of markup.\n\t     *\n\t     * @param {?object} nestedChildren Nested child maps.\n\t     * @return {array} An array of mounted representations.\n\t     * @internal\n\t     */\n\t    mountChildren: function (nestedChildren, transaction, context) {\n\t      var children = this._reconcilerInstantiateChildren(nestedChildren, transaction, context);\n\t      this._renderedChildren = children;\n\t\n\t      var mountImages = [];\n\t      var index = 0;\n\t      for (var name in children) {\n\t        if (children.hasOwnProperty(name)) {\n\t          var child = children[name];\n\t          var selfDebugID = 0;\n\t          if (false) {\n\t            selfDebugID = getDebugID(this);\n\t          }\n\t          var mountImage = ReactReconciler.mountComponent(child, transaction, this, this._hostContainerInfo, context, selfDebugID);\n\t          child._mountIndex = index++;\n\t          mountImages.push(mountImage);\n\t        }\n\t      }\n\t\n\t      if (false) {\n\t        setChildrenForInstrumentation.call(this, children);\n\t      }\n\t\n\t      return mountImages;\n\t    },\n\t\n\t    /**\n\t     * Replaces any rendered children with a text content string.\n\t     *\n\t     * @param {string} nextContent String of content.\n\t     * @internal\n\t     */\n\t    updateTextContent: function (nextContent) {\n\t      var prevChildren = this._renderedChildren;\n\t      // Remove any rendered children.\n\t      ReactChildReconciler.unmountChildren(prevChildren, false);\n\t      for (var name in prevChildren) {\n\t        if (prevChildren.hasOwnProperty(name)) {\n\t           true ?  false ? invariant(false, 'updateTextContent called on non-empty component.') : _prodInvariant('118') : void 0;\n\t        }\n\t      }\n\t      // Set new text content.\n\t      var updates = [makeTextContent(nextContent)];\n\t      processQueue(this, updates);\n\t    },\n\t\n\t    /**\n\t     * Replaces any rendered children with a markup string.\n\t     *\n\t     * @param {string} nextMarkup String of markup.\n\t     * @internal\n\t     */\n\t    updateMarkup: function (nextMarkup) {\n\t      var prevChildren = this._renderedChildren;\n\t      // Remove any rendered children.\n\t      ReactChildReconciler.unmountChildren(prevChildren, false);\n\t      for (var name in prevChildren) {\n\t        if (prevChildren.hasOwnProperty(name)) {\n\t           true ?  false ? invariant(false, 'updateTextContent called on non-empty component.') : _prodInvariant('118') : void 0;\n\t        }\n\t      }\n\t      var updates = [makeSetMarkup(nextMarkup)];\n\t      processQueue(this, updates);\n\t    },\n\t\n\t    /**\n\t     * Updates the rendered children with new children.\n\t     *\n\t     * @param {?object} nextNestedChildrenElements Nested child element maps.\n\t     * @param {ReactReconcileTransaction} transaction\n\t     * @internal\n\t     */\n\t    updateChildren: function (nextNestedChildrenElements, transaction, context) {\n\t      // Hook used by React ART\n\t      this._updateChildren(nextNestedChildrenElements, transaction, context);\n\t    },\n\t\n\t    /**\n\t     * @param {?object} nextNestedChildrenElements Nested child element maps.\n\t     * @param {ReactReconcileTransaction} transaction\n\t     * @final\n\t     * @protected\n\t     */\n\t    _updateChildren: function (nextNestedChildrenElements, transaction, context) {\n\t      var prevChildren = this._renderedChildren;\n\t      var removedNodes = {};\n\t      var mountImages = [];\n\t      var nextChildren = this._reconcilerUpdateChildren(prevChildren, nextNestedChildrenElements, mountImages, removedNodes, transaction, context);\n\t      if (!nextChildren && !prevChildren) {\n\t        return;\n\t      }\n\t      var updates = null;\n\t      var name;\n\t      // `nextIndex` will increment for each child in `nextChildren`, but\n\t      // `lastIndex` will be the last index visited in `prevChildren`.\n\t      var nextIndex = 0;\n\t      var lastIndex = 0;\n\t      // `nextMountIndex` will increment for each newly mounted child.\n\t      var nextMountIndex = 0;\n\t      var lastPlacedNode = null;\n\t      for (name in nextChildren) {\n\t        if (!nextChildren.hasOwnProperty(name)) {\n\t          continue;\n\t        }\n\t        var prevChild = prevChildren && prevChildren[name];\n\t        var nextChild = nextChildren[name];\n\t        if (prevChild === nextChild) {\n\t          updates = enqueue(updates, this.moveChild(prevChild, lastPlacedNode, nextIndex, lastIndex));\n\t          lastIndex = Math.max(prevChild._mountIndex, lastIndex);\n\t          prevChild._mountIndex = nextIndex;\n\t        } else {\n\t          if (prevChild) {\n\t            // Update `lastIndex` before `_mountIndex` gets unset by unmounting.\n\t            lastIndex = Math.max(prevChild._mountIndex, lastIndex);\n\t            // The `removedNodes` loop below will actually remove the child.\n\t          }\n\t          // The child must be instantiated before it's mounted.\n\t          updates = enqueue(updates, this._mountChildAtIndex(nextChild, mountImages[nextMountIndex], lastPlacedNode, nextIndex, transaction, context));\n\t          nextMountIndex++;\n\t        }\n\t        nextIndex++;\n\t        lastPlacedNode = ReactReconciler.getHostNode(nextChild);\n\t      }\n\t      // Remove children that are no longer present.\n\t      for (name in removedNodes) {\n\t        if (removedNodes.hasOwnProperty(name)) {\n\t          updates = enqueue(updates, this._unmountChild(prevChildren[name], removedNodes[name]));\n\t        }\n\t      }\n\t      if (updates) {\n\t        processQueue(this, updates);\n\t      }\n\t      this._renderedChildren = nextChildren;\n\t\n\t      if (false) {\n\t        setChildrenForInstrumentation.call(this, nextChildren);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Unmounts all rendered children. This should be used to clean up children\n\t     * when this component is unmounted. It does not actually perform any\n\t     * backend operations.\n\t     *\n\t     * @internal\n\t     */\n\t    unmountChildren: function (safely) {\n\t      var renderedChildren = this._renderedChildren;\n\t      ReactChildReconciler.unmountChildren(renderedChildren, safely);\n\t      this._renderedChildren = null;\n\t    },\n\t\n\t    /**\n\t     * Moves a child component to the supplied index.\n\t     *\n\t     * @param {ReactComponent} child Component to move.\n\t     * @param {number} toIndex Destination index of the element.\n\t     * @param {number} lastIndex Last index visited of the siblings of `child`.\n\t     * @protected\n\t     */\n\t    moveChild: function (child, afterNode, toIndex, lastIndex) {\n\t      // If the index of `child` is less than `lastIndex`, then it needs to\n\t      // be moved. Otherwise, we do not need to move it because a child will be\n\t      // inserted or moved before `child`.\n\t      if (child._mountIndex < lastIndex) {\n\t        return makeMove(child, afterNode, toIndex);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Creates a child component.\n\t     *\n\t     * @param {ReactComponent} child Component to create.\n\t     * @param {string} mountImage Markup to insert.\n\t     * @protected\n\t     */\n\t    createChild: function (child, afterNode, mountImage) {\n\t      return makeInsertMarkup(mountImage, afterNode, child._mountIndex);\n\t    },\n\t\n\t    /**\n\t     * Removes a child component.\n\t     *\n\t     * @param {ReactComponent} child Child to remove.\n\t     * @protected\n\t     */\n\t    removeChild: function (child, node) {\n\t      return makeRemove(child, node);\n\t    },\n\t\n\t    /**\n\t     * Mounts a child with the supplied name.\n\t     *\n\t     * NOTE: This is part of `updateChildren` and is here for readability.\n\t     *\n\t     * @param {ReactComponent} child Component to mount.\n\t     * @param {string} name Name of the child.\n\t     * @param {number} index Index at which to insert the child.\n\t     * @param {ReactReconcileTransaction} transaction\n\t     * @private\n\t     */\n\t    _mountChildAtIndex: function (child, mountImage, afterNode, index, transaction, context) {\n\t      child._mountIndex = index;\n\t      return this.createChild(child, afterNode, mountImage);\n\t    },\n\t\n\t    /**\n\t     * Unmounts a rendered child.\n\t     *\n\t     * NOTE: This is part of `updateChildren` and is here for readability.\n\t     *\n\t     * @param {ReactComponent} child Component to unmount.\n\t     * @private\n\t     */\n\t    _unmountChild: function (child, node) {\n\t      var update = this.removeChild(child, node);\n\t      child._mountIndex = null;\n\t      return update;\n\t    }\n\t\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = ReactMultiChild;\n\n/***/ },\n/* 115 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * \n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(2);\n\t\n\tvar invariant = __webpack_require__(1);\n\t\n\t/**\n\t * @param {?object} object\n\t * @return {boolean} True if `object` is a valid owner.\n\t * @final\n\t */\n\tfunction isValidOwner(object) {\n\t  return !!(object && typeof object.attachRef === 'function' && typeof object.detachRef === 'function');\n\t}\n\t\n\t/**\n\t * ReactOwners are capable of storing references to owned components.\n\t *\n\t * All components are capable of //being// referenced by owner components, but\n\t * only ReactOwner components are capable of //referencing// owned components.\n\t * The named reference is known as a \"ref\".\n\t *\n\t * Refs are available when mounted and updated during reconciliation.\n\t *\n\t *   var MyComponent = React.createClass({\n\t *     render: function() {\n\t *       return (\n\t *         <div onClick={this.handleClick}>\n\t *           <CustomComponent ref=\"custom\" />\n\t *         </div>\n\t *       );\n\t *     },\n\t *     handleClick: function() {\n\t *       this.refs.custom.handleClick();\n\t *     },\n\t *     componentDidMount: function() {\n\t *       this.refs.custom.initialize();\n\t *     }\n\t *   });\n\t *\n\t * Refs should rarely be used. When refs are used, they should only be done to\n\t * control data that is not handled by React's data flow.\n\t *\n\t * @class ReactOwner\n\t */\n\tvar ReactOwner = {\n\t  /**\n\t   * Adds a component by ref to an owner component.\n\t   *\n\t   * @param {ReactComponent} component Component to reference.\n\t   * @param {string} ref Name by which to refer to the component.\n\t   * @param {ReactOwner} owner Component on which to record the ref.\n\t   * @final\n\t   * @internal\n\t   */\n\t  addComponentAsRefTo: function (component, ref, owner) {\n\t    !isValidOwner(owner) ?  false ? invariant(false, 'addComponentAsRefTo(...): Only a ReactOwner can have refs. You might be adding a ref to a component that was not created inside a component\\'s `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).') : _prodInvariant('119') : void 0;\n\t    owner.attachRef(ref, component);\n\t  },\n\t\n\t  /**\n\t   * Removes a component by ref from an owner component.\n\t   *\n\t   * @param {ReactComponent} component Component to dereference.\n\t   * @param {string} ref Name of the ref to remove.\n\t   * @param {ReactOwner} owner Component on which the ref is recorded.\n\t   * @final\n\t   * @internal\n\t   */\n\t  removeComponentAsRefFrom: function (component, ref, owner) {\n\t    !isValidOwner(owner) ?  false ? invariant(false, 'removeComponentAsRefFrom(...): Only a ReactOwner can have refs. You might be removing a ref to a component that was not created inside a component\\'s `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).') : _prodInvariant('120') : void 0;\n\t    var ownerPublicInstance = owner.getPublicInstance();\n\t    // Check that `component`'s owner is still alive and that `component` is still the current ref\n\t    // because we do not want to detach the ref if another component stole it.\n\t    if (ownerPublicInstance && ownerPublicInstance.refs[ref] === component.getPublicInstance()) {\n\t      owner.detachRef(ref);\n\t    }\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = ReactOwner;\n\n/***/ },\n/* 116 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * \n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\t\n\tmodule.exports = ReactPropTypesSecret;\n\n/***/ },\n/* 117 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar _assign = __webpack_require__(5);\n\t\n\tvar CallbackQueue = __webpack_require__(53);\n\tvar PooledClass = __webpack_require__(13);\n\tvar ReactBrowserEventEmitter = __webpack_require__(25);\n\tvar ReactInputSelection = __webpack_require__(60);\n\tvar ReactInstrumentation = __webpack_require__(7);\n\tvar Transaction = __webpack_require__(27);\n\tvar ReactUpdateQueue = __webpack_require__(39);\n\t\n\t/**\n\t * Ensures that, when possible, the selection range (currently selected text\n\t * input) is not disturbed by performing the transaction.\n\t */\n\tvar SELECTION_RESTORATION = {\n\t  /**\n\t   * @return {Selection} Selection information.\n\t   */\n\t  initialize: ReactInputSelection.getSelectionInformation,\n\t  /**\n\t   * @param {Selection} sel Selection information returned from `initialize`.\n\t   */\n\t  close: ReactInputSelection.restoreSelection\n\t};\n\t\n\t/**\n\t * Suppresses events (blur/focus) that could be inadvertently dispatched due to\n\t * high level DOM manipulations (like temporarily removing a text input from the\n\t * DOM).\n\t */\n\tvar EVENT_SUPPRESSION = {\n\t  /**\n\t   * @return {boolean} The enabled status of `ReactBrowserEventEmitter` before\n\t   * the reconciliation.\n\t   */\n\t  initialize: function () {\n\t    var currentlyEnabled = ReactBrowserEventEmitter.isEnabled();\n\t    ReactBrowserEventEmitter.setEnabled(false);\n\t    return currentlyEnabled;\n\t  },\n\t\n\t  /**\n\t   * @param {boolean} previouslyEnabled Enabled status of\n\t   *   `ReactBrowserEventEmitter` before the reconciliation occurred. `close`\n\t   *   restores the previous value.\n\t   */\n\t  close: function (previouslyEnabled) {\n\t    ReactBrowserEventEmitter.setEnabled(previouslyEnabled);\n\t  }\n\t};\n\t\n\t/**\n\t * Provides a queue for collecting `componentDidMount` and\n\t * `componentDidUpdate` callbacks during the transaction.\n\t */\n\tvar ON_DOM_READY_QUEUEING = {\n\t  /**\n\t   * Initializes the internal `onDOMReady` queue.\n\t   */\n\t  initialize: function () {\n\t    this.reactMountReady.reset();\n\t  },\n\t\n\t  /**\n\t   * After DOM is flushed, invoke all registered `onDOMReady` callbacks.\n\t   */\n\t  close: function () {\n\t    this.reactMountReady.notifyAll();\n\t  }\n\t};\n\t\n\t/**\n\t * Executed within the scope of the `Transaction` instance. Consider these as\n\t * being member methods, but with an implied ordering while being isolated from\n\t * each other.\n\t */\n\tvar TRANSACTION_WRAPPERS = [SELECTION_RESTORATION, EVENT_SUPPRESSION, ON_DOM_READY_QUEUEING];\n\t\n\tif (false) {\n\t  TRANSACTION_WRAPPERS.push({\n\t    initialize: ReactInstrumentation.debugTool.onBeginFlush,\n\t    close: ReactInstrumentation.debugTool.onEndFlush\n\t  });\n\t}\n\t\n\t/**\n\t * Currently:\n\t * - The order that these are listed in the transaction is critical:\n\t * - Suppresses events.\n\t * - Restores selection range.\n\t *\n\t * Future:\n\t * - Restore document/overflow scroll positions that were unintentionally\n\t *   modified via DOM insertions above the top viewport boundary.\n\t * - Implement/integrate with customized constraint based layout system and keep\n\t *   track of which dimensions must be remeasured.\n\t *\n\t * @class ReactReconcileTransaction\n\t */\n\tfunction ReactReconcileTransaction(useCreateElement) {\n\t  this.reinitializeTransaction();\n\t  // Only server-side rendering really needs this option (see\n\t  // `ReactServerRendering`), but server-side uses\n\t  // `ReactServerRenderingTransaction` instead. This option is here so that it's\n\t  // accessible and defaults to false when `ReactDOMComponent` and\n\t  // `ReactDOMTextComponent` checks it in `mountComponent`.`\n\t  this.renderToStaticMarkup = false;\n\t  this.reactMountReady = CallbackQueue.getPooled(null);\n\t  this.useCreateElement = useCreateElement;\n\t}\n\t\n\tvar Mixin = {\n\t  /**\n\t   * @see Transaction\n\t   * @abstract\n\t   * @final\n\t   * @return {array<object>} List of operation wrap procedures.\n\t   *   TODO: convert to array<TransactionWrapper>\n\t   */\n\t  getTransactionWrappers: function () {\n\t    return TRANSACTION_WRAPPERS;\n\t  },\n\t\n\t  /**\n\t   * @return {object} The queue to collect `onDOMReady` callbacks with.\n\t   */\n\t  getReactMountReady: function () {\n\t    return this.reactMountReady;\n\t  },\n\t\n\t  /**\n\t   * @return {object} The queue to collect React async events.\n\t   */\n\t  getUpdateQueue: function () {\n\t    return ReactUpdateQueue;\n\t  },\n\t\n\t  /**\n\t   * Save current transaction state -- if the return value from this method is\n\t   * passed to `rollback`, the transaction will be reset to that state.\n\t   */\n\t  checkpoint: function () {\n\t    // reactMountReady is the our only stateful wrapper\n\t    return this.reactMountReady.checkpoint();\n\t  },\n\t\n\t  rollback: function (checkpoint) {\n\t    this.reactMountReady.rollback(checkpoint);\n\t  },\n\t\n\t  /**\n\t   * `PooledClass` looks for this, and will invoke this before allowing this\n\t   * instance to be reused.\n\t   */\n\t  destructor: function () {\n\t    CallbackQueue.release(this.reactMountReady);\n\t    this.reactMountReady = null;\n\t  }\n\t};\n\t\n\t_assign(ReactReconcileTransaction.prototype, Transaction, Mixin);\n\t\n\tPooledClass.addPoolingTo(ReactReconcileTransaction);\n\t\n\tmodule.exports = ReactReconcileTransaction;\n\n/***/ },\n/* 118 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * \n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactOwner = __webpack_require__(115);\n\t\n\tvar ReactRef = {};\n\t\n\tfunction attachRef(ref, component, owner) {\n\t  if (typeof ref === 'function') {\n\t    ref(component.getPublicInstance());\n\t  } else {\n\t    // Legacy ref\n\t    ReactOwner.addComponentAsRefTo(component, ref, owner);\n\t  }\n\t}\n\t\n\tfunction detachRef(ref, component, owner) {\n\t  if (typeof ref === 'function') {\n\t    ref(null);\n\t  } else {\n\t    // Legacy ref\n\t    ReactOwner.removeComponentAsRefFrom(component, ref, owner);\n\t  }\n\t}\n\t\n\tReactRef.attachRefs = function (instance, element) {\n\t  if (element === null || typeof element !== 'object') {\n\t    return;\n\t  }\n\t  var ref = element.ref;\n\t  if (ref != null) {\n\t    attachRef(ref, instance, element._owner);\n\t  }\n\t};\n\t\n\tReactRef.shouldUpdateRefs = function (prevElement, nextElement) {\n\t  // If either the owner or a `ref` has changed, make sure the newest owner\n\t  // has stored a reference to `this`, and the previous owner (if different)\n\t  // has forgotten the reference to `this`. We use the element instead\n\t  // of the public this.props because the post processing cannot determine\n\t  // a ref. The ref conceptually lives on the element.\n\t\n\t  // TODO: Should this even be possible? The owner cannot change because\n\t  // it's forbidden by shouldUpdateReactComponent. The ref can change\n\t  // if you swap the keys of but not the refs. Reconsider where this check\n\t  // is made. It probably belongs where the key checking and\n\t  // instantiateReactComponent is done.\n\t\n\t  var prevRef = null;\n\t  var prevOwner = null;\n\t  if (prevElement !== null && typeof prevElement === 'object') {\n\t    prevRef = prevElement.ref;\n\t    prevOwner = prevElement._owner;\n\t  }\n\t\n\t  var nextRef = null;\n\t  var nextOwner = null;\n\t  if (nextElement !== null && typeof nextElement === 'object') {\n\t    nextRef = nextElement.ref;\n\t    nextOwner = nextElement._owner;\n\t  }\n\t\n\t  return prevRef !== nextRef ||\n\t  // If owner changes but we have an unchanged function ref, don't update refs\n\t  typeof nextRef === 'string' && nextOwner !== prevOwner;\n\t};\n\t\n\tReactRef.detachRefs = function (instance, element) {\n\t  if (element === null || typeof element !== 'object') {\n\t    return;\n\t  }\n\t  var ref = element.ref;\n\t  if (ref != null) {\n\t    detachRef(ref, instance, element._owner);\n\t  }\n\t};\n\t\n\tmodule.exports = ReactRef;\n\n/***/ },\n/* 119 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2014-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar _assign = __webpack_require__(5);\n\t\n\tvar PooledClass = __webpack_require__(13);\n\tvar Transaction = __webpack_require__(27);\n\tvar ReactInstrumentation = __webpack_require__(7);\n\tvar ReactServerUpdateQueue = __webpack_require__(120);\n\t\n\t/**\n\t * Executed within the scope of the `Transaction` instance. Consider these as\n\t * being member methods, but with an implied ordering while being isolated from\n\t * each other.\n\t */\n\tvar TRANSACTION_WRAPPERS = [];\n\t\n\tif (false) {\n\t  TRANSACTION_WRAPPERS.push({\n\t    initialize: ReactInstrumentation.debugTool.onBeginFlush,\n\t    close: ReactInstrumentation.debugTool.onEndFlush\n\t  });\n\t}\n\t\n\tvar noopCallbackQueue = {\n\t  enqueue: function () {}\n\t};\n\t\n\t/**\n\t * @class ReactServerRenderingTransaction\n\t * @param {boolean} renderToStaticMarkup\n\t */\n\tfunction ReactServerRenderingTransaction(renderToStaticMarkup) {\n\t  this.reinitializeTransaction();\n\t  this.renderToStaticMarkup = renderToStaticMarkup;\n\t  this.useCreateElement = false;\n\t  this.updateQueue = new ReactServerUpdateQueue(this);\n\t}\n\t\n\tvar Mixin = {\n\t  /**\n\t   * @see Transaction\n\t   * @abstract\n\t   * @final\n\t   * @return {array} Empty list of operation wrap procedures.\n\t   */\n\t  getTransactionWrappers: function () {\n\t    return TRANSACTION_WRAPPERS;\n\t  },\n\t\n\t  /**\n\t   * @return {object} The queue to collect `onDOMReady` callbacks with.\n\t   */\n\t  getReactMountReady: function () {\n\t    return noopCallbackQueue;\n\t  },\n\t\n\t  /**\n\t   * @return {object} The queue to collect React async events.\n\t   */\n\t  getUpdateQueue: function () {\n\t    return this.updateQueue;\n\t  },\n\t\n\t  /**\n\t   * `PooledClass` looks for this, and will invoke this before allowing this\n\t   * instance to be reused.\n\t   */\n\t  destructor: function () {},\n\t\n\t  checkpoint: function () {},\n\t\n\t  rollback: function () {}\n\t};\n\t\n\t_assign(ReactServerRenderingTransaction.prototype, Transaction, Mixin);\n\t\n\tPooledClass.addPoolingTo(ReactServerRenderingTransaction);\n\t\n\tmodule.exports = ReactServerRenderingTransaction;\n\n/***/ },\n/* 120 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2015-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * \n\t */\n\t\n\t'use strict';\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar ReactUpdateQueue = __webpack_require__(39);\n\t\n\tvar warning = __webpack_require__(3);\n\t\n\tfunction warnNoop(publicInstance, callerName) {\n\t  if (false) {\n\t    var constructor = publicInstance.constructor;\n\t    process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): Can only update a mounting component. ' + 'This usually means you called %s() outside componentWillMount() on the server. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;\n\t  }\n\t}\n\t\n\t/**\n\t * This is the update queue used for server rendering.\n\t * It delegates to ReactUpdateQueue while server rendering is in progress and\n\t * switches to ReactNoopUpdateQueue after the transaction has completed.\n\t * @class ReactServerUpdateQueue\n\t * @param {Transaction} transaction\n\t */\n\t\n\tvar ReactServerUpdateQueue = function () {\n\t  function ReactServerUpdateQueue(transaction) {\n\t    _classCallCheck(this, ReactServerUpdateQueue);\n\t\n\t    this.transaction = transaction;\n\t  }\n\t\n\t  /**\n\t   * Checks whether or not this composite component is mounted.\n\t   * @param {ReactClass} publicInstance The instance we want to test.\n\t   * @return {boolean} True if mounted, false otherwise.\n\t   * @protected\n\t   * @final\n\t   */\n\t\n\t\n\t  ReactServerUpdateQueue.prototype.isMounted = function isMounted(publicInstance) {\n\t    return false;\n\t  };\n\t\n\t  /**\n\t   * Enqueue a callback that will be executed after all the pending updates\n\t   * have processed.\n\t   *\n\t   * @param {ReactClass} publicInstance The instance to use as `this` context.\n\t   * @param {?function} callback Called after state is updated.\n\t   * @internal\n\t   */\n\t\n\t\n\t  ReactServerUpdateQueue.prototype.enqueueCallback = function enqueueCallback(publicInstance, callback, callerName) {\n\t    if (this.transaction.isInTransaction()) {\n\t      ReactUpdateQueue.enqueueCallback(publicInstance, callback, callerName);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Forces an update. This should only be invoked when it is known with\n\t   * certainty that we are **not** in a DOM transaction.\n\t   *\n\t   * You may want to call this when you know that some deeper aspect of the\n\t   * component's state has changed but `setState` was not called.\n\t   *\n\t   * This will not invoke `shouldComponentUpdate`, but it will invoke\n\t   * `componentWillUpdate` and `componentDidUpdate`.\n\t   *\n\t   * @param {ReactClass} publicInstance The instance that should rerender.\n\t   * @internal\n\t   */\n\t\n\t\n\t  ReactServerUpdateQueue.prototype.enqueueForceUpdate = function enqueueForceUpdate(publicInstance) {\n\t    if (this.transaction.isInTransaction()) {\n\t      ReactUpdateQueue.enqueueForceUpdate(publicInstance);\n\t    } else {\n\t      warnNoop(publicInstance, 'forceUpdate');\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Replaces all of the state. Always use this or `setState` to mutate state.\n\t   * You should treat `this.state` as immutable.\n\t   *\n\t   * There is no guarantee that `this.state` will be immediately updated, so\n\t   * accessing `this.state` after calling this method may return the old value.\n\t   *\n\t   * @param {ReactClass} publicInstance The instance that should rerender.\n\t   * @param {object|function} completeState Next state.\n\t   * @internal\n\t   */\n\t\n\t\n\t  ReactServerUpdateQueue.prototype.enqueueReplaceState = function enqueueReplaceState(publicInstance, completeState) {\n\t    if (this.transaction.isInTransaction()) {\n\t      ReactUpdateQueue.enqueueReplaceState(publicInstance, completeState);\n\t    } else {\n\t      warnNoop(publicInstance, 'replaceState');\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Sets a subset of the state. This only exists because _pendingState is\n\t   * internal. This provides a merging strategy that is not available to deep\n\t   * properties which is confusing. TODO: Expose pendingState or don't use it\n\t   * during the merge.\n\t   *\n\t   * @param {ReactClass} publicInstance The instance that should rerender.\n\t   * @param {object|function} partialState Next partial state to be merged with state.\n\t   * @internal\n\t   */\n\t\n\t\n\t  ReactServerUpdateQueue.prototype.enqueueSetState = function enqueueSetState(publicInstance, partialState) {\n\t    if (this.transaction.isInTransaction()) {\n\t      ReactUpdateQueue.enqueueSetState(publicInstance, partialState);\n\t    } else {\n\t      warnNoop(publicInstance, 'setState');\n\t    }\n\t  };\n\t\n\t  return ReactServerUpdateQueue;\n\t}();\n\t\n\tmodule.exports = ReactServerUpdateQueue;\n\n/***/ },\n/* 121 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tmodule.exports = '15.5.4';\n\n/***/ },\n/* 122 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar NS = {\n\t  xlink: 'http://www.w3.org/1999/xlink',\n\t  xml: 'http://www.w3.org/XML/1998/namespace'\n\t};\n\t\n\t// We use attributes for everything SVG so let's avoid some duplication and run\n\t// code instead.\n\t// The following are all specified in the HTML config already so we exclude here.\n\t// - class (as className)\n\t// - color\n\t// - height\n\t// - id\n\t// - lang\n\t// - max\n\t// - media\n\t// - method\n\t// - min\n\t// - name\n\t// - style\n\t// - target\n\t// - type\n\t// - width\n\tvar ATTRS = {\n\t  accentHeight: 'accent-height',\n\t  accumulate: 0,\n\t  additive: 0,\n\t  alignmentBaseline: 'alignment-baseline',\n\t  allowReorder: 'allowReorder',\n\t  alphabetic: 0,\n\t  amplitude: 0,\n\t  arabicForm: 'arabic-form',\n\t  ascent: 0,\n\t  attributeName: 'attributeName',\n\t  attributeType: 'attributeType',\n\t  autoReverse: 'autoReverse',\n\t  azimuth: 0,\n\t  baseFrequency: 'baseFrequency',\n\t  baseProfile: 'baseProfile',\n\t  baselineShift: 'baseline-shift',\n\t  bbox: 0,\n\t  begin: 0,\n\t  bias: 0,\n\t  by: 0,\n\t  calcMode: 'calcMode',\n\t  capHeight: 'cap-height',\n\t  clip: 0,\n\t  clipPath: 'clip-path',\n\t  clipRule: 'clip-rule',\n\t  clipPathUnits: 'clipPathUnits',\n\t  colorInterpolation: 'color-interpolation',\n\t  colorInterpolationFilters: 'color-interpolation-filters',\n\t  colorProfile: 'color-profile',\n\t  colorRendering: 'color-rendering',\n\t  contentScriptType: 'contentScriptType',\n\t  contentStyleType: 'contentStyleType',\n\t  cursor: 0,\n\t  cx: 0,\n\t  cy: 0,\n\t  d: 0,\n\t  decelerate: 0,\n\t  descent: 0,\n\t  diffuseConstant: 'diffuseConstant',\n\t  direction: 0,\n\t  display: 0,\n\t  divisor: 0,\n\t  dominantBaseline: 'dominant-baseline',\n\t  dur: 0,\n\t  dx: 0,\n\t  dy: 0,\n\t  edgeMode: 'edgeMode',\n\t  elevation: 0,\n\t  enableBackground: 'enable-background',\n\t  end: 0,\n\t  exponent: 0,\n\t  externalResourcesRequired: 'externalResourcesRequired',\n\t  fill: 0,\n\t  fillOpacity: 'fill-opacity',\n\t  fillRule: 'fill-rule',\n\t  filter: 0,\n\t  filterRes: 'filterRes',\n\t  filterUnits: 'filterUnits',\n\t  floodColor: 'flood-color',\n\t  floodOpacity: 'flood-opacity',\n\t  focusable: 0,\n\t  fontFamily: 'font-family',\n\t  fontSize: 'font-size',\n\t  fontSizeAdjust: 'font-size-adjust',\n\t  fontStretch: 'font-stretch',\n\t  fontStyle: 'font-style',\n\t  fontVariant: 'font-variant',\n\t  fontWeight: 'font-weight',\n\t  format: 0,\n\t  from: 0,\n\t  fx: 0,\n\t  fy: 0,\n\t  g1: 0,\n\t  g2: 0,\n\t  glyphName: 'glyph-name',\n\t  glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n\t  glyphOrientationVertical: 'glyph-orientation-vertical',\n\t  glyphRef: 'glyphRef',\n\t  gradientTransform: 'gradientTransform',\n\t  gradientUnits: 'gradientUnits',\n\t  hanging: 0,\n\t  horizAdvX: 'horiz-adv-x',\n\t  horizOriginX: 'horiz-origin-x',\n\t  ideographic: 0,\n\t  imageRendering: 'image-rendering',\n\t  'in': 0,\n\t  in2: 0,\n\t  intercept: 0,\n\t  k: 0,\n\t  k1: 0,\n\t  k2: 0,\n\t  k3: 0,\n\t  k4: 0,\n\t  kernelMatrix: 'kernelMatrix',\n\t  kernelUnitLength: 'kernelUnitLength',\n\t  kerning: 0,\n\t  keyPoints: 'keyPoints',\n\t  keySplines: 'keySplines',\n\t  keyTimes: 'keyTimes',\n\t  lengthAdjust: 'lengthAdjust',\n\t  letterSpacing: 'letter-spacing',\n\t  lightingColor: 'lighting-color',\n\t  limitingConeAngle: 'limitingConeAngle',\n\t  local: 0,\n\t  markerEnd: 'marker-end',\n\t  markerMid: 'marker-mid',\n\t  markerStart: 'marker-start',\n\t  markerHeight: 'markerHeight',\n\t  markerUnits: 'markerUnits',\n\t  markerWidth: 'markerWidth',\n\t  mask: 0,\n\t  maskContentUnits: 'maskContentUnits',\n\t  maskUnits: 'maskUnits',\n\t  mathematical: 0,\n\t  mode: 0,\n\t  numOctaves: 'numOctaves',\n\t  offset: 0,\n\t  opacity: 0,\n\t  operator: 0,\n\t  order: 0,\n\t  orient: 0,\n\t  orientation: 0,\n\t  origin: 0,\n\t  overflow: 0,\n\t  overlinePosition: 'overline-position',\n\t  overlineThickness: 'overline-thickness',\n\t  paintOrder: 'paint-order',\n\t  panose1: 'panose-1',\n\t  pathLength: 'pathLength',\n\t  patternContentUnits: 'patternContentUnits',\n\t  patternTransform: 'patternTransform',\n\t  patternUnits: 'patternUnits',\n\t  pointerEvents: 'pointer-events',\n\t  points: 0,\n\t  pointsAtX: 'pointsAtX',\n\t  pointsAtY: 'pointsAtY',\n\t  pointsAtZ: 'pointsAtZ',\n\t  preserveAlpha: 'preserveAlpha',\n\t  preserveAspectRatio: 'preserveAspectRatio',\n\t  primitiveUnits: 'primitiveUnits',\n\t  r: 0,\n\t  radius: 0,\n\t  refX: 'refX',\n\t  refY: 'refY',\n\t  renderingIntent: 'rendering-intent',\n\t  repeatCount: 'repeatCount',\n\t  repeatDur: 'repeatDur',\n\t  requiredExtensions: 'requiredExtensions',\n\t  requiredFeatures: 'requiredFeatures',\n\t  restart: 0,\n\t  result: 0,\n\t  rotate: 0,\n\t  rx: 0,\n\t  ry: 0,\n\t  scale: 0,\n\t  seed: 0,\n\t  shapeRendering: 'shape-rendering',\n\t  slope: 0,\n\t  spacing: 0,\n\t  specularConstant: 'specularConstant',\n\t  specularExponent: 'specularExponent',\n\t  speed: 0,\n\t  spreadMethod: 'spreadMethod',\n\t  startOffset: 'startOffset',\n\t  stdDeviation: 'stdDeviation',\n\t  stemh: 0,\n\t  stemv: 0,\n\t  stitchTiles: 'stitchTiles',\n\t  stopColor: 'stop-color',\n\t  stopOpacity: 'stop-opacity',\n\t  strikethroughPosition: 'strikethrough-position',\n\t  strikethroughThickness: 'strikethrough-thickness',\n\t  string: 0,\n\t  stroke: 0,\n\t  strokeDasharray: 'stroke-dasharray',\n\t  strokeDashoffset: 'stroke-dashoffset',\n\t  strokeLinecap: 'stroke-linecap',\n\t  strokeLinejoin: 'stroke-linejoin',\n\t  strokeMiterlimit: 'stroke-miterlimit',\n\t  strokeOpacity: 'stroke-opacity',\n\t  strokeWidth: 'stroke-width',\n\t  surfaceScale: 'surfaceScale',\n\t  systemLanguage: 'systemLanguage',\n\t  tableValues: 'tableValues',\n\t  targetX: 'targetX',\n\t  targetY: 'targetY',\n\t  textAnchor: 'text-anchor',\n\t  textDecoration: 'text-decoration',\n\t  textRendering: 'text-rendering',\n\t  textLength: 'textLength',\n\t  to: 0,\n\t  transform: 0,\n\t  u1: 0,\n\t  u2: 0,\n\t  underlinePosition: 'underline-position',\n\t  underlineThickness: 'underline-thickness',\n\t  unicode: 0,\n\t  unicodeBidi: 'unicode-bidi',\n\t  unicodeRange: 'unicode-range',\n\t  unitsPerEm: 'units-per-em',\n\t  vAlphabetic: 'v-alphabetic',\n\t  vHanging: 'v-hanging',\n\t  vIdeographic: 'v-ideographic',\n\t  vMathematical: 'v-mathematical',\n\t  values: 0,\n\t  vectorEffect: 'vector-effect',\n\t  version: 0,\n\t  vertAdvY: 'vert-adv-y',\n\t  vertOriginX: 'vert-origin-x',\n\t  vertOriginY: 'vert-origin-y',\n\t  viewBox: 'viewBox',\n\t  viewTarget: 'viewTarget',\n\t  visibility: 0,\n\t  widths: 0,\n\t  wordSpacing: 'word-spacing',\n\t  writingMode: 'writing-mode',\n\t  x: 0,\n\t  xHeight: 'x-height',\n\t  x1: 0,\n\t  x2: 0,\n\t  xChannelSelector: 'xChannelSelector',\n\t  xlinkActuate: 'xlink:actuate',\n\t  xlinkArcrole: 'xlink:arcrole',\n\t  xlinkHref: 'xlink:href',\n\t  xlinkRole: 'xlink:role',\n\t  xlinkShow: 'xlink:show',\n\t  xlinkTitle: 'xlink:title',\n\t  xlinkType: 'xlink:type',\n\t  xmlBase: 'xml:base',\n\t  xmlns: 0,\n\t  xmlnsXlink: 'xmlns:xlink',\n\t  xmlLang: 'xml:lang',\n\t  xmlSpace: 'xml:space',\n\t  y: 0,\n\t  y1: 0,\n\t  y2: 0,\n\t  yChannelSelector: 'yChannelSelector',\n\t  z: 0,\n\t  zoomAndPan: 'zoomAndPan'\n\t};\n\t\n\tvar SVGDOMPropertyConfig = {\n\t  Properties: {},\n\t  DOMAttributeNamespaces: {\n\t    xlinkActuate: NS.xlink,\n\t    xlinkArcrole: NS.xlink,\n\t    xlinkHref: NS.xlink,\n\t    xlinkRole: NS.xlink,\n\t    xlinkShow: NS.xlink,\n\t    xlinkTitle: NS.xlink,\n\t    xlinkType: NS.xlink,\n\t    xmlBase: NS.xml,\n\t    xmlLang: NS.xml,\n\t    xmlSpace: NS.xml\n\t  },\n\t  DOMAttributeNames: {}\n\t};\n\t\n\tObject.keys(ATTRS).forEach(function (key) {\n\t  SVGDOMPropertyConfig.Properties[key] = 0;\n\t  if (ATTRS[key]) {\n\t    SVGDOMPropertyConfig.DOMAttributeNames[key] = ATTRS[key];\n\t  }\n\t});\n\t\n\tmodule.exports = SVGDOMPropertyConfig;\n\n/***/ },\n/* 123 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar EventPropagators = __webpack_require__(22);\n\tvar ExecutionEnvironment = __webpack_require__(6);\n\tvar ReactDOMComponentTree = __webpack_require__(4);\n\tvar ReactInputSelection = __webpack_require__(60);\n\tvar SyntheticEvent = __webpack_require__(10);\n\t\n\tvar getActiveElement = __webpack_require__(75);\n\tvar isTextInputElement = __webpack_require__(69);\n\tvar shallowEqual = __webpack_require__(47);\n\t\n\tvar skipSelectionChangeEvent = ExecutionEnvironment.canUseDOM && 'documentMode' in document && document.documentMode <= 11;\n\t\n\tvar eventTypes = {\n\t  select: {\n\t    phasedRegistrationNames: {\n\t      bubbled: 'onSelect',\n\t      captured: 'onSelectCapture'\n\t    },\n\t    dependencies: ['topBlur', 'topContextMenu', 'topFocus', 'topKeyDown', 'topKeyUp', 'topMouseDown', 'topMouseUp', 'topSelectionChange']\n\t  }\n\t};\n\t\n\tvar activeElement = null;\n\tvar activeElementInst = null;\n\tvar lastSelection = null;\n\tvar mouseDown = false;\n\t\n\t// Track whether a listener exists for this plugin. If none exist, we do\n\t// not extract events. See #3639.\n\tvar hasListener = false;\n\t\n\t/**\n\t * Get an object which is a unique representation of the current selection.\n\t *\n\t * The return value will not be consistent across nodes or browsers, but\n\t * two identical selections on the same node will return identical objects.\n\t *\n\t * @param {DOMElement} node\n\t * @return {object}\n\t */\n\tfunction getSelection(node) {\n\t  if ('selectionStart' in node && ReactInputSelection.hasSelectionCapabilities(node)) {\n\t    return {\n\t      start: node.selectionStart,\n\t      end: node.selectionEnd\n\t    };\n\t  } else if (window.getSelection) {\n\t    var selection = window.getSelection();\n\t    return {\n\t      anchorNode: selection.anchorNode,\n\t      anchorOffset: selection.anchorOffset,\n\t      focusNode: selection.focusNode,\n\t      focusOffset: selection.focusOffset\n\t    };\n\t  } else if (document.selection) {\n\t    var range = document.selection.createRange();\n\t    return {\n\t      parentElement: range.parentElement(),\n\t      text: range.text,\n\t      top: range.boundingTop,\n\t      left: range.boundingLeft\n\t    };\n\t  }\n\t}\n\t\n\t/**\n\t * Poll selection to see whether it's changed.\n\t *\n\t * @param {object} nativeEvent\n\t * @return {?SyntheticEvent}\n\t */\n\tfunction constructSelectEvent(nativeEvent, nativeEventTarget) {\n\t  // Ensure we have the right element, and that the user is not dragging a\n\t  // selection (this matches native `select` event behavior). In HTML5, select\n\t  // fires only on input and textarea thus if there's no focused element we\n\t  // won't dispatch.\n\t  if (mouseDown || activeElement == null || activeElement !== getActiveElement()) {\n\t    return null;\n\t  }\n\t\n\t  // Only fire when selection has actually changed.\n\t  var currentSelection = getSelection(activeElement);\n\t  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {\n\t    lastSelection = currentSelection;\n\t\n\t    var syntheticEvent = SyntheticEvent.getPooled(eventTypes.select, activeElementInst, nativeEvent, nativeEventTarget);\n\t\n\t    syntheticEvent.type = 'select';\n\t    syntheticEvent.target = activeElement;\n\t\n\t    EventPropagators.accumulateTwoPhaseDispatches(syntheticEvent);\n\t\n\t    return syntheticEvent;\n\t  }\n\t\n\t  return null;\n\t}\n\t\n\t/**\n\t * This plugin creates an `onSelect` event that normalizes select events\n\t * across form elements.\n\t *\n\t * Supported elements are:\n\t * - input (see `isTextInputElement`)\n\t * - textarea\n\t * - contentEditable\n\t *\n\t * This differs from native browser implementations in the following ways:\n\t * - Fires on contentEditable fields as well as inputs.\n\t * - Fires for collapsed selection.\n\t * - Fires after user input.\n\t */\n\tvar SelectEventPlugin = {\n\t\n\t  eventTypes: eventTypes,\n\t\n\t  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n\t    if (!hasListener) {\n\t      return null;\n\t    }\n\t\n\t    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;\n\t\n\t    switch (topLevelType) {\n\t      // Track the input node that has focus.\n\t      case 'topFocus':\n\t        if (isTextInputElement(targetNode) || targetNode.contentEditable === 'true') {\n\t          activeElement = targetNode;\n\t          activeElementInst = targetInst;\n\t          lastSelection = null;\n\t        }\n\t        break;\n\t      case 'topBlur':\n\t        activeElement = null;\n\t        activeElementInst = null;\n\t        lastSelection = null;\n\t        break;\n\t\n\t      // Don't fire the event while the user is dragging. This matches the\n\t      // semantics of the native select event.\n\t      case 'topMouseDown':\n\t        mouseDown = true;\n\t        break;\n\t      case 'topContextMenu':\n\t      case 'topMouseUp':\n\t        mouseDown = false;\n\t        return constructSelectEvent(nativeEvent, nativeEventTarget);\n\t\n\t      // Chrome and IE fire non-standard event when selection is changed (and\n\t      // sometimes when it hasn't). IE's event fires out of order with respect\n\t      // to key and input events on deletion, so we discard it.\n\t      //\n\t      // Firefox doesn't support selectionchange, so check selection status\n\t      // after each key entry. The selection changes after keydown and before\n\t      // keyup, but we check on keydown as well in the case of holding down a\n\t      // key, when multiple keydown events are fired but only one keyup is.\n\t      // This is also our approach for IE handling, for the reason above.\n\t      case 'topSelectionChange':\n\t        if (skipSelectionChangeEvent) {\n\t          break;\n\t        }\n\t      // falls through\n\t      case 'topKeyDown':\n\t      case 'topKeyUp':\n\t        return constructSelectEvent(nativeEvent, nativeEventTarget);\n\t    }\n\t\n\t    return null;\n\t  },\n\t\n\t  didPutListener: function (inst, registrationName, listener) {\n\t    if (registrationName === 'onSelect') {\n\t      hasListener = true;\n\t    }\n\t  }\n\t};\n\t\n\tmodule.exports = SelectEventPlugin;\n\n/***/ },\n/* 124 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * \n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(2);\n\t\n\tvar EventListener = __webpack_require__(72);\n\tvar EventPropagators = __webpack_require__(22);\n\tvar ReactDOMComponentTree = __webpack_require__(4);\n\tvar SyntheticAnimationEvent = __webpack_require__(125);\n\tvar SyntheticClipboardEvent = __webpack_require__(126);\n\tvar SyntheticEvent = __webpack_require__(10);\n\tvar SyntheticFocusEvent = __webpack_require__(129);\n\tvar SyntheticKeyboardEvent = __webpack_require__(131);\n\tvar SyntheticMouseEvent = __webpack_require__(26);\n\tvar SyntheticDragEvent = __webpack_require__(128);\n\tvar SyntheticTouchEvent = __webpack_require__(132);\n\tvar SyntheticTransitionEvent = __webpack_require__(133);\n\tvar SyntheticUIEvent = __webpack_require__(24);\n\tvar SyntheticWheelEvent = __webpack_require__(134);\n\t\n\tvar emptyFunction = __webpack_require__(9);\n\tvar getEventCharCode = __webpack_require__(41);\n\tvar invariant = __webpack_require__(1);\n\t\n\t/**\n\t * Turns\n\t * ['abort', ...]\n\t * into\n\t * eventTypes = {\n\t *   'abort': {\n\t *     phasedRegistrationNames: {\n\t *       bubbled: 'onAbort',\n\t *       captured: 'onAbortCapture',\n\t *     },\n\t *     dependencies: ['topAbort'],\n\t *   },\n\t *   ...\n\t * };\n\t * topLevelEventsToDispatchConfig = {\n\t *   'topAbort': { sameConfig }\n\t * };\n\t */\n\tvar eventTypes = {};\n\tvar topLevelEventsToDispatchConfig = {};\n\t['abort', 'animationEnd', 'animationIteration', 'animationStart', 'blur', 'canPlay', 'canPlayThrough', 'click', 'contextMenu', 'copy', 'cut', 'doubleClick', 'drag', 'dragEnd', 'dragEnter', 'dragExit', 'dragLeave', 'dragOver', 'dragStart', 'drop', 'durationChange', 'emptied', 'encrypted', 'ended', 'error', 'focus', 'input', 'invalid', 'keyDown', 'keyPress', 'keyUp', 'load', 'loadedData', 'loadedMetadata', 'loadStart', 'mouseDown', 'mouseMove', 'mouseOut', 'mouseOver', 'mouseUp', 'paste', 'pause', 'play', 'playing', 'progress', 'rateChange', 'reset', 'scroll', 'seeked', 'seeking', 'stalled', 'submit', 'suspend', 'timeUpdate', 'touchCancel', 'touchEnd', 'touchMove', 'touchStart', 'transitionEnd', 'volumeChange', 'waiting', 'wheel'].forEach(function (event) {\n\t  var capitalizedEvent = event[0].toUpperCase() + event.slice(1);\n\t  var onEvent = 'on' + capitalizedEvent;\n\t  var topEvent = 'top' + capitalizedEvent;\n\t\n\t  var type = {\n\t    phasedRegistrationNames: {\n\t      bubbled: onEvent,\n\t      captured: onEvent + 'Capture'\n\t    },\n\t    dependencies: [topEvent]\n\t  };\n\t  eventTypes[event] = type;\n\t  topLevelEventsToDispatchConfig[topEvent] = type;\n\t});\n\t\n\tvar onClickListeners = {};\n\t\n\tfunction getDictionaryKey(inst) {\n\t  // Prevents V8 performance issue:\n\t  // https://github.com/facebook/react/pull/7232\n\t  return '.' + inst._rootNodeID;\n\t}\n\t\n\tfunction isInteractive(tag) {\n\t  return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';\n\t}\n\t\n\tvar SimpleEventPlugin = {\n\t\n\t  eventTypes: eventTypes,\n\t\n\t  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n\t    var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];\n\t    if (!dispatchConfig) {\n\t      return null;\n\t    }\n\t    var EventConstructor;\n\t    switch (topLevelType) {\n\t      case 'topAbort':\n\t      case 'topCanPlay':\n\t      case 'topCanPlayThrough':\n\t      case 'topDurationChange':\n\t      case 'topEmptied':\n\t      case 'topEncrypted':\n\t      case 'topEnded':\n\t      case 'topError':\n\t      case 'topInput':\n\t      case 'topInvalid':\n\t      case 'topLoad':\n\t      case 'topLoadedData':\n\t      case 'topLoadedMetadata':\n\t      case 'topLoadStart':\n\t      case 'topPause':\n\t      case 'topPlay':\n\t      case 'topPlaying':\n\t      case 'topProgress':\n\t      case 'topRateChange':\n\t      case 'topReset':\n\t      case 'topSeeked':\n\t      case 'topSeeking':\n\t      case 'topStalled':\n\t      case 'topSubmit':\n\t      case 'topSuspend':\n\t      case 'topTimeUpdate':\n\t      case 'topVolumeChange':\n\t      case 'topWaiting':\n\t        // HTML Events\n\t        // @see http://www.w3.org/TR/html5/index.html#events-0\n\t        EventConstructor = SyntheticEvent;\n\t        break;\n\t      case 'topKeyPress':\n\t        // Firefox creates a keypress event for function keys too. This removes\n\t        // the unwanted keypress events. Enter is however both printable and\n\t        // non-printable. One would expect Tab to be as well (but it isn't).\n\t        if (getEventCharCode(nativeEvent) === 0) {\n\t          return null;\n\t        }\n\t      /* falls through */\n\t      case 'topKeyDown':\n\t      case 'topKeyUp':\n\t        EventConstructor = SyntheticKeyboardEvent;\n\t        break;\n\t      case 'topBlur':\n\t      case 'topFocus':\n\t        EventConstructor = SyntheticFocusEvent;\n\t        break;\n\t      case 'topClick':\n\t        // Firefox creates a click event on right mouse clicks. This removes the\n\t        // unwanted click events.\n\t        if (nativeEvent.button === 2) {\n\t          return null;\n\t        }\n\t      /* falls through */\n\t      case 'topDoubleClick':\n\t      case 'topMouseDown':\n\t      case 'topMouseMove':\n\t      case 'topMouseUp':\n\t      // TODO: Disabled elements should not respond to mouse events\n\t      /* falls through */\n\t      case 'topMouseOut':\n\t      case 'topMouseOver':\n\t      case 'topContextMenu':\n\t        EventConstructor = SyntheticMouseEvent;\n\t        break;\n\t      case 'topDrag':\n\t      case 'topDragEnd':\n\t      case 'topDragEnter':\n\t      case 'topDragExit':\n\t      case 'topDragLeave':\n\t      case 'topDragOver':\n\t      case 'topDragStart':\n\t      case 'topDrop':\n\t        EventConstructor = SyntheticDragEvent;\n\t        break;\n\t      case 'topTouchCancel':\n\t      case 'topTouchEnd':\n\t      case 'topTouchMove':\n\t      case 'topTouchStart':\n\t        EventConstructor = SyntheticTouchEvent;\n\t        break;\n\t      case 'topAnimationEnd':\n\t      case 'topAnimationIteration':\n\t      case 'topAnimationStart':\n\t        EventConstructor = SyntheticAnimationEvent;\n\t        break;\n\t      case 'topTransitionEnd':\n\t        EventConstructor = SyntheticTransitionEvent;\n\t        break;\n\t      case 'topScroll':\n\t        EventConstructor = SyntheticUIEvent;\n\t        break;\n\t      case 'topWheel':\n\t        EventConstructor = SyntheticWheelEvent;\n\t        break;\n\t      case 'topCopy':\n\t      case 'topCut':\n\t      case 'topPaste':\n\t        EventConstructor = SyntheticClipboardEvent;\n\t        break;\n\t    }\n\t    !EventConstructor ?  false ? invariant(false, 'SimpleEventPlugin: Unhandled event type, `%s`.', topLevelType) : _prodInvariant('86', topLevelType) : void 0;\n\t    var event = EventConstructor.getPooled(dispatchConfig, targetInst, nativeEvent, nativeEventTarget);\n\t    EventPropagators.accumulateTwoPhaseDispatches(event);\n\t    return event;\n\t  },\n\t\n\t  didPutListener: function (inst, registrationName, listener) {\n\t    // Mobile Safari does not fire properly bubble click events on\n\t    // non-interactive elements, which means delegated click listeners do not\n\t    // fire. The workaround for this bug involves attaching an empty click\n\t    // listener on the target node.\n\t    // http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html\n\t    if (registrationName === 'onClick' && !isInteractive(inst._tag)) {\n\t      var key = getDictionaryKey(inst);\n\t      var node = ReactDOMComponentTree.getNodeFromInstance(inst);\n\t      if (!onClickListeners[key]) {\n\t        onClickListeners[key] = EventListener.listen(node, 'click', emptyFunction);\n\t      }\n\t    }\n\t  },\n\t\n\t  willDeleteListener: function (inst, registrationName) {\n\t    if (registrationName === 'onClick' && !isInteractive(inst._tag)) {\n\t      var key = getDictionaryKey(inst);\n\t      onClickListeners[key].remove();\n\t      delete onClickListeners[key];\n\t    }\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = SimpleEventPlugin;\n\n/***/ },\n/* 125 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar SyntheticEvent = __webpack_require__(10);\n\t\n\t/**\n\t * @interface Event\n\t * @see http://www.w3.org/TR/css3-animations/#AnimationEvent-interface\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent\n\t */\n\tvar AnimationEventInterface = {\n\t  animationName: null,\n\t  elapsedTime: null,\n\t  pseudoElement: null\n\t};\n\t\n\t/**\n\t * @param {object} dispatchConfig Configuration used to dispatch this event.\n\t * @param {string} dispatchMarker Marker identifying the event target.\n\t * @param {object} nativeEvent Native browser event.\n\t * @extends {SyntheticEvent}\n\t */\n\tfunction SyntheticAnimationEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n\t  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n\t}\n\t\n\tSyntheticEvent.augmentClass(SyntheticAnimationEvent, AnimationEventInterface);\n\t\n\tmodule.exports = SyntheticAnimationEvent;\n\n/***/ },\n/* 126 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar SyntheticEvent = __webpack_require__(10);\n\t\n\t/**\n\t * @interface Event\n\t * @see http://www.w3.org/TR/clipboard-apis/\n\t */\n\tvar ClipboardEventInterface = {\n\t  clipboardData: function (event) {\n\t    return 'clipboardData' in event ? event.clipboardData : window.clipboardData;\n\t  }\n\t};\n\t\n\t/**\n\t * @param {object} dispatchConfig Configuration used to dispatch this event.\n\t * @param {string} dispatchMarker Marker identifying the event target.\n\t * @param {object} nativeEvent Native browser event.\n\t * @extends {SyntheticUIEvent}\n\t */\n\tfunction SyntheticClipboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n\t  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n\t}\n\t\n\tSyntheticEvent.augmentClass(SyntheticClipboardEvent, ClipboardEventInterface);\n\t\n\tmodule.exports = SyntheticClipboardEvent;\n\n/***/ },\n/* 127 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar SyntheticEvent = __webpack_require__(10);\n\t\n\t/**\n\t * @interface Event\n\t * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents\n\t */\n\tvar CompositionEventInterface = {\n\t  data: null\n\t};\n\t\n\t/**\n\t * @param {object} dispatchConfig Configuration used to dispatch this event.\n\t * @param {string} dispatchMarker Marker identifying the event target.\n\t * @param {object} nativeEvent Native browser event.\n\t * @extends {SyntheticUIEvent}\n\t */\n\tfunction SyntheticCompositionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n\t  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n\t}\n\t\n\tSyntheticEvent.augmentClass(SyntheticCompositionEvent, CompositionEventInterface);\n\t\n\tmodule.exports = SyntheticCompositionEvent;\n\n/***/ },\n/* 128 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar SyntheticMouseEvent = __webpack_require__(26);\n\t\n\t/**\n\t * @interface DragEvent\n\t * @see http://www.w3.org/TR/DOM-Level-3-Events/\n\t */\n\tvar DragEventInterface = {\n\t  dataTransfer: null\n\t};\n\t\n\t/**\n\t * @param {object} dispatchConfig Configuration used to dispatch this event.\n\t * @param {string} dispatchMarker Marker identifying the event target.\n\t * @param {object} nativeEvent Native browser event.\n\t * @extends {SyntheticUIEvent}\n\t */\n\tfunction SyntheticDragEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n\t  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n\t}\n\t\n\tSyntheticMouseEvent.augmentClass(SyntheticDragEvent, DragEventInterface);\n\t\n\tmodule.exports = SyntheticDragEvent;\n\n/***/ },\n/* 129 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar SyntheticUIEvent = __webpack_require__(24);\n\t\n\t/**\n\t * @interface FocusEvent\n\t * @see http://www.w3.org/TR/DOM-Level-3-Events/\n\t */\n\tvar FocusEventInterface = {\n\t  relatedTarget: null\n\t};\n\t\n\t/**\n\t * @param {object} dispatchConfig Configuration used to dispatch this event.\n\t * @param {string} dispatchMarker Marker identifying the event target.\n\t * @param {object} nativeEvent Native browser event.\n\t * @extends {SyntheticUIEvent}\n\t */\n\tfunction SyntheticFocusEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n\t  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n\t}\n\t\n\tSyntheticUIEvent.augmentClass(SyntheticFocusEvent, FocusEventInterface);\n\t\n\tmodule.exports = SyntheticFocusEvent;\n\n/***/ },\n/* 130 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar SyntheticEvent = __webpack_require__(10);\n\t\n\t/**\n\t * @interface Event\n\t * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105\n\t *      /#events-inputevents\n\t */\n\tvar InputEventInterface = {\n\t  data: null\n\t};\n\t\n\t/**\n\t * @param {object} dispatchConfig Configuration used to dispatch this event.\n\t * @param {string} dispatchMarker Marker identifying the event target.\n\t * @param {object} nativeEvent Native browser event.\n\t * @extends {SyntheticUIEvent}\n\t */\n\tfunction SyntheticInputEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n\t  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n\t}\n\t\n\tSyntheticEvent.augmentClass(SyntheticInputEvent, InputEventInterface);\n\t\n\tmodule.exports = SyntheticInputEvent;\n\n/***/ },\n/* 131 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar SyntheticUIEvent = __webpack_require__(24);\n\t\n\tvar getEventCharCode = __webpack_require__(41);\n\tvar getEventKey = __webpack_require__(139);\n\tvar getEventModifierState = __webpack_require__(42);\n\t\n\t/**\n\t * @interface KeyboardEvent\n\t * @see http://www.w3.org/TR/DOM-Level-3-Events/\n\t */\n\tvar KeyboardEventInterface = {\n\t  key: getEventKey,\n\t  location: null,\n\t  ctrlKey: null,\n\t  shiftKey: null,\n\t  altKey: null,\n\t  metaKey: null,\n\t  repeat: null,\n\t  locale: null,\n\t  getModifierState: getEventModifierState,\n\t  // Legacy Interface\n\t  charCode: function (event) {\n\t    // `charCode` is the result of a KeyPress event and represents the value of\n\t    // the actual printable character.\n\t\n\t    // KeyPress is deprecated, but its replacement is not yet final and not\n\t    // implemented in any major browser. Only KeyPress has charCode.\n\t    if (event.type === 'keypress') {\n\t      return getEventCharCode(event);\n\t    }\n\t    return 0;\n\t  },\n\t  keyCode: function (event) {\n\t    // `keyCode` is the result of a KeyDown/Up event and represents the value of\n\t    // physical keyboard key.\n\t\n\t    // The actual meaning of the value depends on the users' keyboard layout\n\t    // which cannot be detected. Assuming that it is a US keyboard layout\n\t    // provides a surprisingly accurate mapping for US and European users.\n\t    // Due to this, it is left to the user to implement at this time.\n\t    if (event.type === 'keydown' || event.type === 'keyup') {\n\t      return event.keyCode;\n\t    }\n\t    return 0;\n\t  },\n\t  which: function (event) {\n\t    // `which` is an alias for either `keyCode` or `charCode` depending on the\n\t    // type of the event.\n\t    if (event.type === 'keypress') {\n\t      return getEventCharCode(event);\n\t    }\n\t    if (event.type === 'keydown' || event.type === 'keyup') {\n\t      return event.keyCode;\n\t    }\n\t    return 0;\n\t  }\n\t};\n\t\n\t/**\n\t * @param {object} dispatchConfig Configuration used to dispatch this event.\n\t * @param {string} dispatchMarker Marker identifying the event target.\n\t * @param {object} nativeEvent Native browser event.\n\t * @extends {SyntheticUIEvent}\n\t */\n\tfunction SyntheticKeyboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n\t  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n\t}\n\t\n\tSyntheticUIEvent.augmentClass(SyntheticKeyboardEvent, KeyboardEventInterface);\n\t\n\tmodule.exports = SyntheticKeyboardEvent;\n\n/***/ },\n/* 132 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar SyntheticUIEvent = __webpack_require__(24);\n\t\n\tvar getEventModifierState = __webpack_require__(42);\n\t\n\t/**\n\t * @interface TouchEvent\n\t * @see http://www.w3.org/TR/touch-events/\n\t */\n\tvar TouchEventInterface = {\n\t  touches: null,\n\t  targetTouches: null,\n\t  changedTouches: null,\n\t  altKey: null,\n\t  metaKey: null,\n\t  ctrlKey: null,\n\t  shiftKey: null,\n\t  getModifierState: getEventModifierState\n\t};\n\t\n\t/**\n\t * @param {object} dispatchConfig Configuration used to dispatch this event.\n\t * @param {string} dispatchMarker Marker identifying the event target.\n\t * @param {object} nativeEvent Native browser event.\n\t * @extends {SyntheticUIEvent}\n\t */\n\tfunction SyntheticTouchEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n\t  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n\t}\n\t\n\tSyntheticUIEvent.augmentClass(SyntheticTouchEvent, TouchEventInterface);\n\t\n\tmodule.exports = SyntheticTouchEvent;\n\n/***/ },\n/* 133 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar SyntheticEvent = __webpack_require__(10);\n\t\n\t/**\n\t * @interface Event\n\t * @see http://www.w3.org/TR/2009/WD-css3-transitions-20090320/#transition-events-\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/TransitionEvent\n\t */\n\tvar TransitionEventInterface = {\n\t  propertyName: null,\n\t  elapsedTime: null,\n\t  pseudoElement: null\n\t};\n\t\n\t/**\n\t * @param {object} dispatchConfig Configuration used to dispatch this event.\n\t * @param {string} dispatchMarker Marker identifying the event target.\n\t * @param {object} nativeEvent Native browser event.\n\t * @extends {SyntheticEvent}\n\t */\n\tfunction SyntheticTransitionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n\t  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n\t}\n\t\n\tSyntheticEvent.augmentClass(SyntheticTransitionEvent, TransitionEventInterface);\n\t\n\tmodule.exports = SyntheticTransitionEvent;\n\n/***/ },\n/* 134 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar SyntheticMouseEvent = __webpack_require__(26);\n\t\n\t/**\n\t * @interface WheelEvent\n\t * @see http://www.w3.org/TR/DOM-Level-3-Events/\n\t */\n\tvar WheelEventInterface = {\n\t  deltaX: function (event) {\n\t    return 'deltaX' in event ? event.deltaX :\n\t    // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).\n\t    'wheelDeltaX' in event ? -event.wheelDeltaX : 0;\n\t  },\n\t  deltaY: function (event) {\n\t    return 'deltaY' in event ? event.deltaY :\n\t    // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).\n\t    'wheelDeltaY' in event ? -event.wheelDeltaY :\n\t    // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).\n\t    'wheelDelta' in event ? -event.wheelDelta : 0;\n\t  },\n\t  deltaZ: null,\n\t\n\t  // Browsers without \"deltaMode\" is reporting in raw wheel delta where one\n\t  // notch on the scroll is always +/- 120, roughly equivalent to pixels.\n\t  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or\n\t  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.\n\t  deltaMode: null\n\t};\n\t\n\t/**\n\t * @param {object} dispatchConfig Configuration used to dispatch this event.\n\t * @param {string} dispatchMarker Marker identifying the event target.\n\t * @param {object} nativeEvent Native browser event.\n\t * @extends {SyntheticMouseEvent}\n\t */\n\tfunction SyntheticWheelEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n\t  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n\t}\n\t\n\tSyntheticMouseEvent.augmentClass(SyntheticWheelEvent, WheelEventInterface);\n\t\n\tmodule.exports = SyntheticWheelEvent;\n\n/***/ },\n/* 135 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * \n\t */\n\t\n\t'use strict';\n\t\n\tvar MOD = 65521;\n\t\n\t// adler32 is not cryptographically strong, and is only used to sanity check that\n\t// markup generated on the server matches the markup generated on the client.\n\t// This implementation (a modified version of the SheetJS version) has been optimized\n\t// for our use case, at the expense of conforming to the adler32 specification\n\t// for non-ascii inputs.\n\tfunction adler32(data) {\n\t  var a = 1;\n\t  var b = 0;\n\t  var i = 0;\n\t  var l = data.length;\n\t  var m = l & ~0x3;\n\t  while (i < m) {\n\t    var n = Math.min(i + 4096, m);\n\t    for (; i < n; i += 4) {\n\t      b += (a += data.charCodeAt(i)) + (a += data.charCodeAt(i + 1)) + (a += data.charCodeAt(i + 2)) + (a += data.charCodeAt(i + 3));\n\t    }\n\t    a %= MOD;\n\t    b %= MOD;\n\t  }\n\t  for (; i < l; i++) {\n\t    b += a += data.charCodeAt(i);\n\t  }\n\t  a %= MOD;\n\t  b %= MOD;\n\t  return a | b << 16;\n\t}\n\t\n\tmodule.exports = adler32;\n\n/***/ },\n/* 136 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar CSSProperty = __webpack_require__(52);\n\tvar warning = __webpack_require__(3);\n\t\n\tvar isUnitlessNumber = CSSProperty.isUnitlessNumber;\n\tvar styleWarnings = {};\n\t\n\t/**\n\t * Convert a value into the proper css writable value. The style name `name`\n\t * should be logical (no hyphens), as specified\n\t * in `CSSProperty.isUnitlessNumber`.\n\t *\n\t * @param {string} name CSS property name such as `topMargin`.\n\t * @param {*} value CSS property value such as `10px`.\n\t * @param {ReactDOMComponent} component\n\t * @return {string} Normalized style value with dimensions applied.\n\t */\n\tfunction dangerousStyleValue(name, value, component) {\n\t  // Note that we've removed escapeTextForBrowser() calls here since the\n\t  // whole string will be escaped when the attribute is injected into\n\t  // the markup. If you provide unsafe user data here they can inject\n\t  // arbitrary CSS which may be problematic (I couldn't repro this):\n\t  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet\n\t  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/\n\t  // This is not an XSS hole but instead a potential CSS injection issue\n\t  // which has lead to a greater discussion about how we're going to\n\t  // trust URLs moving forward. See #2115901\n\t\n\t  var isEmpty = value == null || typeof value === 'boolean' || value === '';\n\t  if (isEmpty) {\n\t    return '';\n\t  }\n\t\n\t  var isNonNumeric = isNaN(value);\n\t  if (isNonNumeric || value === 0 || isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]) {\n\t    return '' + value; // cast to string\n\t  }\n\t\n\t  if (typeof value === 'string') {\n\t    if (false) {\n\t      // Allow '0' to pass through without warning. 0 is already special and\n\t      // doesn't require units, so we don't need to warn about it.\n\t      if (component && value !== '0') {\n\t        var owner = component._currentElement._owner;\n\t        var ownerName = owner ? owner.getName() : null;\n\t        if (ownerName && !styleWarnings[ownerName]) {\n\t          styleWarnings[ownerName] = {};\n\t        }\n\t        var warned = false;\n\t        if (ownerName) {\n\t          var warnings = styleWarnings[ownerName];\n\t          warned = warnings[name];\n\t          if (!warned) {\n\t            warnings[name] = true;\n\t          }\n\t        }\n\t        if (!warned) {\n\t          process.env.NODE_ENV !== 'production' ? warning(false, 'a `%s` tag (owner: `%s`) was passed a numeric string value ' + 'for CSS property `%s` (value: `%s`) which will be treated ' + 'as a unitless number in a future version of React.', component._currentElement.type, ownerName || 'unknown', name, value) : void 0;\n\t        }\n\t      }\n\t    }\n\t    value = value.trim();\n\t  }\n\t  return value + 'px';\n\t}\n\t\n\tmodule.exports = dangerousStyleValue;\n\n/***/ },\n/* 137 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(2);\n\t\n\tvar ReactCurrentOwner = __webpack_require__(11);\n\tvar ReactDOMComponentTree = __webpack_require__(4);\n\tvar ReactInstanceMap = __webpack_require__(23);\n\t\n\tvar getHostComponentFromComposite = __webpack_require__(66);\n\tvar invariant = __webpack_require__(1);\n\tvar warning = __webpack_require__(3);\n\t\n\t/**\n\t * Returns the DOM node rendered by this element.\n\t *\n\t * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.finddomnode\n\t *\n\t * @param {ReactComponent|DOMElement} componentOrElement\n\t * @return {?DOMElement} The root node of this element.\n\t */\n\tfunction findDOMNode(componentOrElement) {\n\t  if (false) {\n\t    var owner = ReactCurrentOwner.current;\n\t    if (owner !== null) {\n\t      process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing findDOMNode inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;\n\t      owner._warnedAboutRefsInRender = true;\n\t    }\n\t  }\n\t  if (componentOrElement == null) {\n\t    return null;\n\t  }\n\t  if (componentOrElement.nodeType === 1) {\n\t    return componentOrElement;\n\t  }\n\t\n\t  var inst = ReactInstanceMap.get(componentOrElement);\n\t  if (inst) {\n\t    inst = getHostComponentFromComposite(inst);\n\t    return inst ? ReactDOMComponentTree.getNodeFromInstance(inst) : null;\n\t  }\n\t\n\t  if (typeof componentOrElement.render === 'function') {\n\t     true ?  false ? invariant(false, 'findDOMNode was called on an unmounted component.') : _prodInvariant('44') : void 0;\n\t  } else {\n\t     true ?  false ? invariant(false, 'Element appears to be neither ReactComponent nor DOMNode (keys: %s)', Object.keys(componentOrElement)) : _prodInvariant('45', Object.keys(componentOrElement)) : void 0;\n\t  }\n\t}\n\t\n\tmodule.exports = findDOMNode;\n\n/***/ },\n/* 138 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process) {/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * \n\t */\n\t\n\t'use strict';\n\t\n\tvar KeyEscapeUtils = __webpack_require__(35);\n\tvar traverseAllChildren = __webpack_require__(71);\n\tvar warning = __webpack_require__(3);\n\t\n\tvar ReactComponentTreeHook;\n\t\n\tif (typeof process !== 'undefined' && ({\"NODE_ENV\":\"production\",\"PUBLIC_URL\":\"/pentacular\"}) && (\"production\") === 'test') {\n\t  // Temporary hack.\n\t  // Inline requires don't work well with Jest:\n\t  // https://github.com/facebook/react/issues/7240\n\t  // Remove the inline requires when we don't need them anymore:\n\t  // https://github.com/facebook/react/pull/7178\n\t  ReactComponentTreeHook = __webpack_require__(78);\n\t}\n\t\n\t/**\n\t * @param {function} traverseContext Context passed through traversal.\n\t * @param {?ReactComponent} child React child component.\n\t * @param {!string} name String name of key path to child.\n\t * @param {number=} selfDebugID Optional debugID of the current internal instance.\n\t */\n\tfunction flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID) {\n\t  // We found a component instance.\n\t  if (traverseContext && typeof traverseContext === 'object') {\n\t    var result = traverseContext;\n\t    var keyUnique = result[name] === undefined;\n\t    if (false) {\n\t      if (!ReactComponentTreeHook) {\n\t        ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');\n\t      }\n\t      if (!keyUnique) {\n\t        process.env.NODE_ENV !== 'production' ? warning(false, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeHook.getStackAddendumByID(selfDebugID)) : void 0;\n\t      }\n\t    }\n\t    if (keyUnique && child != null) {\n\t      result[name] = child;\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Flattens children that are typically specified as `props.children`. Any null\n\t * children will not be included in the resulting object.\n\t * @return {!object} flattened children keyed by name.\n\t */\n\tfunction flattenChildren(children, selfDebugID) {\n\t  if (children == null) {\n\t    return children;\n\t  }\n\t  var result = {};\n\t\n\t  if (false) {\n\t    traverseAllChildren(children, function (traverseContext, child, name) {\n\t      return flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID);\n\t    }, result);\n\t  } else {\n\t    traverseAllChildren(children, flattenSingleChildIntoContext, result);\n\t  }\n\t  return result;\n\t}\n\t\n\tmodule.exports = flattenChildren;\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(77)))\n\n/***/ },\n/* 139 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar getEventCharCode = __webpack_require__(41);\n\t\n\t/**\n\t * Normalization of deprecated HTML5 `key` values\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names\n\t */\n\tvar normalizeKey = {\n\t  'Esc': 'Escape',\n\t  'Spacebar': ' ',\n\t  'Left': 'ArrowLeft',\n\t  'Up': 'ArrowUp',\n\t  'Right': 'ArrowRight',\n\t  'Down': 'ArrowDown',\n\t  'Del': 'Delete',\n\t  'Win': 'OS',\n\t  'Menu': 'ContextMenu',\n\t  'Apps': 'ContextMenu',\n\t  'Scroll': 'ScrollLock',\n\t  'MozPrintableKey': 'Unidentified'\n\t};\n\t\n\t/**\n\t * Translation from legacy `keyCode` to HTML5 `key`\n\t * Only special keys supported, all others depend on keyboard layout or browser\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names\n\t */\n\tvar translateToKey = {\n\t  8: 'Backspace',\n\t  9: 'Tab',\n\t  12: 'Clear',\n\t  13: 'Enter',\n\t  16: 'Shift',\n\t  17: 'Control',\n\t  18: 'Alt',\n\t  19: 'Pause',\n\t  20: 'CapsLock',\n\t  27: 'Escape',\n\t  32: ' ',\n\t  33: 'PageUp',\n\t  34: 'PageDown',\n\t  35: 'End',\n\t  36: 'Home',\n\t  37: 'ArrowLeft',\n\t  38: 'ArrowUp',\n\t  39: 'ArrowRight',\n\t  40: 'ArrowDown',\n\t  45: 'Insert',\n\t  46: 'Delete',\n\t  112: 'F1', 113: 'F2', 114: 'F3', 115: 'F4', 116: 'F5', 117: 'F6',\n\t  118: 'F7', 119: 'F8', 120: 'F9', 121: 'F10', 122: 'F11', 123: 'F12',\n\t  144: 'NumLock',\n\t  145: 'ScrollLock',\n\t  224: 'Meta'\n\t};\n\t\n\t/**\n\t * @param {object} nativeEvent Native browser event.\n\t * @return {string} Normalized `key` property.\n\t */\n\tfunction getEventKey(nativeEvent) {\n\t  if (nativeEvent.key) {\n\t    // Normalize inconsistent values reported by browsers due to\n\t    // implementations of a working draft specification.\n\t\n\t    // FireFox implements `key` but returns `MozPrintableKey` for all\n\t    // printable characters (normalized to `Unidentified`), ignore it.\n\t    var key = normalizeKey[nativeEvent.key] || nativeEvent.key;\n\t    if (key !== 'Unidentified') {\n\t      return key;\n\t    }\n\t  }\n\t\n\t  // Browser does not implement `key`, polyfill as much of it as we can.\n\t  if (nativeEvent.type === 'keypress') {\n\t    var charCode = getEventCharCode(nativeEvent);\n\t\n\t    // The enter-key is technically both printable and non-printable and can\n\t    // thus be captured by `keypress`, no other non-printable key should.\n\t    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);\n\t  }\n\t  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {\n\t    // While user keyboard layout determines the actual meaning of each\n\t    // `keyCode` value, almost all function keys have a universal value.\n\t    return translateToKey[nativeEvent.keyCode] || 'Unidentified';\n\t  }\n\t  return '';\n\t}\n\t\n\tmodule.exports = getEventKey;\n\n/***/ },\n/* 140 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * \n\t */\n\t\n\t'use strict';\n\t\n\t/* global Symbol */\n\t\n\tvar ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n\tvar FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\n\t\n\t/**\n\t * Returns the iterator method function contained on the iterable object.\n\t *\n\t * Be sure to invoke the function with the iterable as context:\n\t *\n\t *     var iteratorFn = getIteratorFn(myIterable);\n\t *     if (iteratorFn) {\n\t *       var iterator = iteratorFn.call(myIterable);\n\t *       ...\n\t *     }\n\t *\n\t * @param {?object} maybeIterable\n\t * @return {?function}\n\t */\n\tfunction getIteratorFn(maybeIterable) {\n\t  var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);\n\t  if (typeof iteratorFn === 'function') {\n\t    return iteratorFn;\n\t  }\n\t}\n\t\n\tmodule.exports = getIteratorFn;\n\n/***/ },\n/* 141 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * Given any node return the first leaf node without children.\n\t *\n\t * @param {DOMElement|DOMTextNode} node\n\t * @return {DOMElement|DOMTextNode}\n\t */\n\t\n\tfunction getLeafNode(node) {\n\t  while (node && node.firstChild) {\n\t    node = node.firstChild;\n\t  }\n\t  return node;\n\t}\n\t\n\t/**\n\t * Get the next sibling within a container. This will walk up the\n\t * DOM if a node's siblings have been exhausted.\n\t *\n\t * @param {DOMElement|DOMTextNode} node\n\t * @return {?DOMElement|DOMTextNode}\n\t */\n\tfunction getSiblingNode(node) {\n\t  while (node) {\n\t    if (node.nextSibling) {\n\t      return node.nextSibling;\n\t    }\n\t    node = node.parentNode;\n\t  }\n\t}\n\t\n\t/**\n\t * Get object describing the nodes which contain characters at offset.\n\t *\n\t * @param {DOMElement|DOMTextNode} root\n\t * @param {number} offset\n\t * @return {?object}\n\t */\n\tfunction getNodeForCharacterOffset(root, offset) {\n\t  var node = getLeafNode(root);\n\t  var nodeStart = 0;\n\t  var nodeEnd = 0;\n\t\n\t  while (node) {\n\t    if (node.nodeType === 3) {\n\t      nodeEnd = nodeStart + node.textContent.length;\n\t\n\t      if (nodeStart <= offset && nodeEnd >= offset) {\n\t        return {\n\t          node: node,\n\t          offset: offset - nodeStart\n\t        };\n\t      }\n\t\n\t      nodeStart = nodeEnd;\n\t    }\n\t\n\t    node = getLeafNode(getSiblingNode(node));\n\t  }\n\t}\n\t\n\tmodule.exports = getNodeForCharacterOffset;\n\n/***/ },\n/* 142 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar ExecutionEnvironment = __webpack_require__(6);\n\t\n\t/**\n\t * Generate a mapping of standard vendor prefixes using the defined style property and event name.\n\t *\n\t * @param {string} styleProp\n\t * @param {string} eventName\n\t * @returns {object}\n\t */\n\tfunction makePrefixMap(styleProp, eventName) {\n\t  var prefixes = {};\n\t\n\t  prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();\n\t  prefixes['Webkit' + styleProp] = 'webkit' + eventName;\n\t  prefixes['Moz' + styleProp] = 'moz' + eventName;\n\t  prefixes['ms' + styleProp] = 'MS' + eventName;\n\t  prefixes['O' + styleProp] = 'o' + eventName.toLowerCase();\n\t\n\t  return prefixes;\n\t}\n\t\n\t/**\n\t * A list of event names to a configurable list of vendor prefixes.\n\t */\n\tvar vendorPrefixes = {\n\t  animationend: makePrefixMap('Animation', 'AnimationEnd'),\n\t  animationiteration: makePrefixMap('Animation', 'AnimationIteration'),\n\t  animationstart: makePrefixMap('Animation', 'AnimationStart'),\n\t  transitionend: makePrefixMap('Transition', 'TransitionEnd')\n\t};\n\t\n\t/**\n\t * Event names that have already been detected and prefixed (if applicable).\n\t */\n\tvar prefixedEventNames = {};\n\t\n\t/**\n\t * Element to check for prefixes on.\n\t */\n\tvar style = {};\n\t\n\t/**\n\t * Bootstrap if a DOM exists.\n\t */\n\tif (ExecutionEnvironment.canUseDOM) {\n\t  style = document.createElement('div').style;\n\t\n\t  // On some platforms, in particular some releases of Android 4.x,\n\t  // the un-prefixed \"animation\" and \"transition\" properties are defined on the\n\t  // style object but the events that fire will still be prefixed, so we need\n\t  // to check if the un-prefixed events are usable, and if not remove them from the map.\n\t  if (!('AnimationEvent' in window)) {\n\t    delete vendorPrefixes.animationend.animation;\n\t    delete vendorPrefixes.animationiteration.animation;\n\t    delete vendorPrefixes.animationstart.animation;\n\t  }\n\t\n\t  // Same as above\n\t  if (!('TransitionEvent' in window)) {\n\t    delete vendorPrefixes.transitionend.transition;\n\t  }\n\t}\n\t\n\t/**\n\t * Attempts to determine the correct vendor prefixed event name.\n\t *\n\t * @param {string} eventName\n\t * @returns {string}\n\t */\n\tfunction getVendorPrefixedEventName(eventName) {\n\t  if (prefixedEventNames[eventName]) {\n\t    return prefixedEventNames[eventName];\n\t  } else if (!vendorPrefixes[eventName]) {\n\t    return eventName;\n\t  }\n\t\n\t  var prefixMap = vendorPrefixes[eventName];\n\t\n\t  for (var styleProp in prefixMap) {\n\t    if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {\n\t      return prefixedEventNames[eventName] = prefixMap[styleProp];\n\t    }\n\t  }\n\t\n\t  return '';\n\t}\n\t\n\tmodule.exports = getVendorPrefixedEventName;\n\n/***/ },\n/* 143 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar escapeTextContentForBrowser = __webpack_require__(28);\n\t\n\t/**\n\t * Escapes attribute value to prevent scripting attacks.\n\t *\n\t * @param {*} value Value to escape.\n\t * @return {string} An escaped string.\n\t */\n\tfunction quoteAttributeValueForBrowser(value) {\n\t  return '\"' + escapeTextContentForBrowser(value) + '\"';\n\t}\n\t\n\tmodule.exports = quoteAttributeValueForBrowser;\n\n/***/ },\n/* 144 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactMount = __webpack_require__(61);\n\t\n\tmodule.exports = ReactMount.renderSubtreeIntoContainer;\n\n/***/ },\n/* 145 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @typechecks\n\t */\n\t\n\tvar _hyphenPattern = /-(.)/g;\n\t\n\t/**\n\t * Camelcases a hyphenated string, for example:\n\t *\n\t *   > camelize('background-color')\n\t *   < \"backgroundColor\"\n\t *\n\t * @param {string} string\n\t * @return {string}\n\t */\n\tfunction camelize(string) {\n\t  return string.replace(_hyphenPattern, function (_, character) {\n\t    return character.toUpperCase();\n\t  });\n\t}\n\t\n\tmodule.exports = camelize;\n\n/***/ },\n/* 146 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @typechecks\n\t */\n\t\n\t'use strict';\n\t\n\tvar camelize = __webpack_require__(145);\n\t\n\tvar msPattern = /^-ms-/;\n\t\n\t/**\n\t * Camelcases a hyphenated CSS property name, for example:\n\t *\n\t *   > camelizeStyleName('background-color')\n\t *   < \"backgroundColor\"\n\t *   > camelizeStyleName('-moz-transition')\n\t *   < \"MozTransition\"\n\t *   > camelizeStyleName('-ms-transition')\n\t *   < \"msTransition\"\n\t *\n\t * As Andi Smith suggests\n\t * (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix\n\t * is converted to lowercase `ms`.\n\t *\n\t * @param {string} string\n\t * @return {string}\n\t */\n\tfunction camelizeStyleName(string) {\n\t  return camelize(string.replace(msPattern, 'ms-'));\n\t}\n\t\n\tmodule.exports = camelizeStyleName;\n\n/***/ },\n/* 147 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * \n\t */\n\t\n\tvar isTextNode = __webpack_require__(155);\n\t\n\t/*eslint-disable no-bitwise */\n\t\n\t/**\n\t * Checks if a given DOM node contains or is another DOM node.\n\t */\n\tfunction containsNode(outerNode, innerNode) {\n\t  if (!outerNode || !innerNode) {\n\t    return false;\n\t  } else if (outerNode === innerNode) {\n\t    return true;\n\t  } else if (isTextNode(outerNode)) {\n\t    return false;\n\t  } else if (isTextNode(innerNode)) {\n\t    return containsNode(outerNode, innerNode.parentNode);\n\t  } else if ('contains' in outerNode) {\n\t    return outerNode.contains(innerNode);\n\t  } else if (outerNode.compareDocumentPosition) {\n\t    return !!(outerNode.compareDocumentPosition(innerNode) & 16);\n\t  } else {\n\t    return false;\n\t  }\n\t}\n\t\n\tmodule.exports = containsNode;\n\n/***/ },\n/* 148 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @typechecks\n\t */\n\t\n\tvar invariant = __webpack_require__(1);\n\t\n\t/**\n\t * Convert array-like objects to arrays.\n\t *\n\t * This API assumes the caller knows the contents of the data type. For less\n\t * well defined inputs use createArrayFromMixed.\n\t *\n\t * @param {object|function|filelist} obj\n\t * @return {array}\n\t */\n\tfunction toArray(obj) {\n\t  var length = obj.length;\n\t\n\t  // Some browsers builtin objects can report typeof 'function' (e.g. NodeList\n\t  // in old versions of Safari).\n\t  !(!Array.isArray(obj) && (typeof obj === 'object' || typeof obj === 'function')) ?  false ? invariant(false, 'toArray: Array-like object expected') : invariant(false) : void 0;\n\t\n\t  !(typeof length === 'number') ?  false ? invariant(false, 'toArray: Object needs a length property') : invariant(false) : void 0;\n\t\n\t  !(length === 0 || length - 1 in obj) ?  false ? invariant(false, 'toArray: Object should have keys for indices') : invariant(false) : void 0;\n\t\n\t  !(typeof obj.callee !== 'function') ?  false ? invariant(false, 'toArray: Object can\\'t be `arguments`. Use rest params ' + '(function(...args) {}) or Array.from() instead.') : invariant(false) : void 0;\n\t\n\t  // Old IE doesn't give collections access to hasOwnProperty. Assume inputs\n\t  // without method will throw during the slice call and skip straight to the\n\t  // fallback.\n\t  if (obj.hasOwnProperty) {\n\t    try {\n\t      return Array.prototype.slice.call(obj);\n\t    } catch (e) {\n\t      // IE < 9 does not support Array#slice on collections objects\n\t    }\n\t  }\n\t\n\t  // Fall back to copying key by key. This assumes all keys have a value,\n\t  // so will not preserve sparsely populated inputs.\n\t  var ret = Array(length);\n\t  for (var ii = 0; ii < length; ii++) {\n\t    ret[ii] = obj[ii];\n\t  }\n\t  return ret;\n\t}\n\t\n\t/**\n\t * Perform a heuristic test to determine if an object is \"array-like\".\n\t *\n\t *   A monk asked Joshu, a Zen master, \"Has a dog Buddha nature?\"\n\t *   Joshu replied: \"Mu.\"\n\t *\n\t * This function determines if its argument has \"array nature\": it returns\n\t * true if the argument is an actual array, an `arguments' object, or an\n\t * HTMLCollection (e.g. node.childNodes or node.getElementsByTagName()).\n\t *\n\t * It will return false for other array-like objects like Filelist.\n\t *\n\t * @param {*} obj\n\t * @return {boolean}\n\t */\n\tfunction hasArrayNature(obj) {\n\t  return (\n\t    // not null/false\n\t    !!obj && (\n\t    // arrays are objects, NodeLists are functions in Safari\n\t    typeof obj == 'object' || typeof obj == 'function') &&\n\t    // quacks like an array\n\t    'length' in obj &&\n\t    // not window\n\t    !('setInterval' in obj) &&\n\t    // no DOM node should be considered an array-like\n\t    // a 'select' element has 'length' and 'item' properties on IE8\n\t    typeof obj.nodeType != 'number' && (\n\t    // a real array\n\t    Array.isArray(obj) ||\n\t    // arguments\n\t    'callee' in obj ||\n\t    // HTMLCollection/NodeList\n\t    'item' in obj)\n\t  );\n\t}\n\t\n\t/**\n\t * Ensure that the argument is an array by wrapping it in an array if it is not.\n\t * Creates a copy of the argument if it is already an array.\n\t *\n\t * This is mostly useful idiomatically:\n\t *\n\t *   var createArrayFromMixed = require('createArrayFromMixed');\n\t *\n\t *   function takesOneOrMoreThings(things) {\n\t *     things = createArrayFromMixed(things);\n\t *     ...\n\t *   }\n\t *\n\t * This allows you to treat `things' as an array, but accept scalars in the API.\n\t *\n\t * If you need to convert an array-like object, like `arguments`, into an array\n\t * use toArray instead.\n\t *\n\t * @param {*} obj\n\t * @return {array}\n\t */\n\tfunction createArrayFromMixed(obj) {\n\t  if (!hasArrayNature(obj)) {\n\t    return [obj];\n\t  } else if (Array.isArray(obj)) {\n\t    return obj.slice();\n\t  } else {\n\t    return toArray(obj);\n\t  }\n\t}\n\t\n\tmodule.exports = createArrayFromMixed;\n\n/***/ },\n/* 149 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @typechecks\n\t */\n\t\n\t/*eslint-disable fb-www/unsafe-html*/\n\t\n\tvar ExecutionEnvironment = __webpack_require__(6);\n\t\n\tvar createArrayFromMixed = __webpack_require__(148);\n\tvar getMarkupWrap = __webpack_require__(150);\n\tvar invariant = __webpack_require__(1);\n\t\n\t/**\n\t * Dummy container used to render all markup.\n\t */\n\tvar dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;\n\t\n\t/**\n\t * Pattern used by `getNodeName`.\n\t */\n\tvar nodeNamePattern = /^\\s*<(\\w+)/;\n\t\n\t/**\n\t * Extracts the `nodeName` of the first element in a string of markup.\n\t *\n\t * @param {string} markup String of markup.\n\t * @return {?string} Node name of the supplied markup.\n\t */\n\tfunction getNodeName(markup) {\n\t  var nodeNameMatch = markup.match(nodeNamePattern);\n\t  return nodeNameMatch && nodeNameMatch[1].toLowerCase();\n\t}\n\t\n\t/**\n\t * Creates an array containing the nodes rendered from the supplied markup. The\n\t * optionally supplied `handleScript` function will be invoked once for each\n\t * <script> element that is rendered. If no `handleScript` function is supplied,\n\t * an exception is thrown if any <script> elements are rendered.\n\t *\n\t * @param {string} markup A string of valid HTML markup.\n\t * @param {?function} handleScript Invoked once for each rendered <script>.\n\t * @return {array<DOMElement|DOMTextNode>} An array of rendered nodes.\n\t */\n\tfunction createNodesFromMarkup(markup, handleScript) {\n\t  var node = dummyNode;\n\t  !!!dummyNode ?  false ? invariant(false, 'createNodesFromMarkup dummy not initialized') : invariant(false) : void 0;\n\t  var nodeName = getNodeName(markup);\n\t\n\t  var wrap = nodeName && getMarkupWrap(nodeName);\n\t  if (wrap) {\n\t    node.innerHTML = wrap[1] + markup + wrap[2];\n\t\n\t    var wrapDepth = wrap[0];\n\t    while (wrapDepth--) {\n\t      node = node.lastChild;\n\t    }\n\t  } else {\n\t    node.innerHTML = markup;\n\t  }\n\t\n\t  var scripts = node.getElementsByTagName('script');\n\t  if (scripts.length) {\n\t    !handleScript ?  false ? invariant(false, 'createNodesFromMarkup(...): Unexpected <script> element rendered.') : invariant(false) : void 0;\n\t    createArrayFromMixed(scripts).forEach(handleScript);\n\t  }\n\t\n\t  var nodes = Array.from(node.childNodes);\n\t  while (node.lastChild) {\n\t    node.removeChild(node.lastChild);\n\t  }\n\t  return nodes;\n\t}\n\t\n\tmodule.exports = createNodesFromMarkup;\n\n/***/ },\n/* 150 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t/*eslint-disable fb-www/unsafe-html */\n\t\n\tvar ExecutionEnvironment = __webpack_require__(6);\n\t\n\tvar invariant = __webpack_require__(1);\n\t\n\t/**\n\t * Dummy container used to detect which wraps are necessary.\n\t */\n\tvar dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;\n\t\n\t/**\n\t * Some browsers cannot use `innerHTML` to render certain elements standalone,\n\t * so we wrap them, render the wrapped nodes, then extract the desired node.\n\t *\n\t * In IE8, certain elements cannot render alone, so wrap all elements ('*').\n\t */\n\t\n\tvar shouldWrap = {};\n\t\n\tvar selectWrap = [1, '<select multiple=\"true\">', '</select>'];\n\tvar tableWrap = [1, '<table>', '</table>'];\n\tvar trWrap = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\t\n\tvar svgWrap = [1, '<svg xmlns=\"http://www.w3.org/2000/svg\">', '</svg>'];\n\t\n\tvar markupWrap = {\n\t  '*': [1, '?<div>', '</div>'],\n\t\n\t  'area': [1, '<map>', '</map>'],\n\t  'col': [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],\n\t  'legend': [1, '<fieldset>', '</fieldset>'],\n\t  'param': [1, '<object>', '</object>'],\n\t  'tr': [2, '<table><tbody>', '</tbody></table>'],\n\t\n\t  'optgroup': selectWrap,\n\t  'option': selectWrap,\n\t\n\t  'caption': tableWrap,\n\t  'colgroup': tableWrap,\n\t  'tbody': tableWrap,\n\t  'tfoot': tableWrap,\n\t  'thead': tableWrap,\n\t\n\t  'td': trWrap,\n\t  'th': trWrap\n\t};\n\t\n\t// Initialize the SVG elements since we know they'll always need to be wrapped\n\t// consistently. If they are created inside a <div> they will be initialized in\n\t// the wrong namespace (and will not display).\n\tvar svgElements = ['circle', 'clipPath', 'defs', 'ellipse', 'g', 'image', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'text', 'tspan'];\n\tsvgElements.forEach(function (nodeName) {\n\t  markupWrap[nodeName] = svgWrap;\n\t  shouldWrap[nodeName] = true;\n\t});\n\t\n\t/**\n\t * Gets the markup wrap configuration for the supplied `nodeName`.\n\t *\n\t * NOTE: This lazily detects which wraps are necessary for the current browser.\n\t *\n\t * @param {string} nodeName Lowercase `nodeName`.\n\t * @return {?array} Markup wrap configuration, if applicable.\n\t */\n\tfunction getMarkupWrap(nodeName) {\n\t  !!!dummyNode ?  false ? invariant(false, 'Markup wrapping node not initialized') : invariant(false) : void 0;\n\t  if (!markupWrap.hasOwnProperty(nodeName)) {\n\t    nodeName = '*';\n\t  }\n\t  if (!shouldWrap.hasOwnProperty(nodeName)) {\n\t    if (nodeName === '*') {\n\t      dummyNode.innerHTML = '<link />';\n\t    } else {\n\t      dummyNode.innerHTML = '<' + nodeName + '></' + nodeName + '>';\n\t    }\n\t    shouldWrap[nodeName] = !dummyNode.firstChild;\n\t  }\n\t  return shouldWrap[nodeName] ? markupWrap[nodeName] : null;\n\t}\n\t\n\tmodule.exports = getMarkupWrap;\n\n/***/ },\n/* 151 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @typechecks\n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * Gets the scroll position of the supplied element or window.\n\t *\n\t * The return values are unbounded, unlike `getScrollPosition`. This means they\n\t * may be negative or exceed the element boundaries (which is possible using\n\t * inertial scrolling).\n\t *\n\t * @param {DOMWindow|DOMElement} scrollable\n\t * @return {object} Map with `x` and `y` keys.\n\t */\n\t\n\tfunction getUnboundedScrollPosition(scrollable) {\n\t  if (scrollable.Window && scrollable instanceof scrollable.Window) {\n\t    return {\n\t      x: scrollable.pageXOffset || scrollable.document.documentElement.scrollLeft,\n\t      y: scrollable.pageYOffset || scrollable.document.documentElement.scrollTop\n\t    };\n\t  }\n\t  return {\n\t    x: scrollable.scrollLeft,\n\t    y: scrollable.scrollTop\n\t  };\n\t}\n\t\n\tmodule.exports = getUnboundedScrollPosition;\n\n/***/ },\n/* 152 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @typechecks\n\t */\n\t\n\tvar _uppercasePattern = /([A-Z])/g;\n\t\n\t/**\n\t * Hyphenates a camelcased string, for example:\n\t *\n\t *   > hyphenate('backgroundColor')\n\t *   < \"background-color\"\n\t *\n\t * For CSS style names, use `hyphenateStyleName` instead which works properly\n\t * with all vendor prefixes, including `ms`.\n\t *\n\t * @param {string} string\n\t * @return {string}\n\t */\n\tfunction hyphenate(string) {\n\t  return string.replace(_uppercasePattern, '-$1').toLowerCase();\n\t}\n\t\n\tmodule.exports = hyphenate;\n\n/***/ },\n/* 153 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @typechecks\n\t */\n\t\n\t'use strict';\n\t\n\tvar hyphenate = __webpack_require__(152);\n\t\n\tvar msPattern = /^ms-/;\n\t\n\t/**\n\t * Hyphenates a camelcased CSS property name, for example:\n\t *\n\t *   > hyphenateStyleName('backgroundColor')\n\t *   < \"background-color\"\n\t *   > hyphenateStyleName('MozTransition')\n\t *   < \"-moz-transition\"\n\t *   > hyphenateStyleName('msTransition')\n\t *   < \"-ms-transition\"\n\t *\n\t * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix\n\t * is converted to `-ms-`.\n\t *\n\t * @param {string} string\n\t * @return {string}\n\t */\n\tfunction hyphenateStyleName(string) {\n\t  return hyphenate(string).replace(msPattern, '-ms-');\n\t}\n\t\n\tmodule.exports = hyphenateStyleName;\n\n/***/ },\n/* 154 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @typechecks\n\t */\n\t\n\t/**\n\t * @param {*} object The object to check.\n\t * @return {boolean} Whether or not the object is a DOM node.\n\t */\n\tfunction isNode(object) {\n\t  var doc = object ? object.ownerDocument || object : document;\n\t  var defaultView = doc.defaultView || window;\n\t  return !!(object && (typeof defaultView.Node === 'function' ? object instanceof defaultView.Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));\n\t}\n\t\n\tmodule.exports = isNode;\n\n/***/ },\n/* 155 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @typechecks\n\t */\n\t\n\tvar isNode = __webpack_require__(154);\n\t\n\t/**\n\t * @param {*} object The object to check.\n\t * @return {boolean} Whether or not the object is a DOM text node.\n\t */\n\tfunction isTextNode(object) {\n\t  return isNode(object) && object.nodeType == 3;\n\t}\n\t\n\tmodule.exports = isTextNode;\n\n/***/ },\n/* 156 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * \n\t * @typechecks static-only\n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * Memoizes the return value of a function that accepts one string argument.\n\t */\n\t\n\tfunction memoizeStringOnly(callback) {\n\t  var cache = {};\n\t  return function (string) {\n\t    if (!cache.hasOwnProperty(string)) {\n\t      cache[string] = callback.call(this, string);\n\t    }\n\t    return cache[string];\n\t  };\n\t}\n\t\n\tmodule.exports = memoizeStringOnly;\n\n/***/ },\n/* 157 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t */\n\t\n\t'use strict';\n\t\n\tif (false) {\n\t  var invariant = require('fbjs/lib/invariant');\n\t  var warning = require('fbjs/lib/warning');\n\t  var ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\t  var loggedTypeFailures = {};\n\t}\n\t\n\t/**\n\t * Assert that the values match with the type specs.\n\t * Error messages are memorized and will only be shown once.\n\t *\n\t * @param {object} typeSpecs Map of name to a ReactPropType\n\t * @param {object} values Runtime values that need to be type-checked\n\t * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n\t * @param {string} componentName Name of the component for error messages.\n\t * @param {?Function} getStack Returns the component stack.\n\t * @private\n\t */\n\tfunction checkPropTypes(typeSpecs, values, location, componentName, getStack) {\n\t  if (false) {\n\t    for (var typeSpecName in typeSpecs) {\n\t      if (typeSpecs.hasOwnProperty(typeSpecName)) {\n\t        var error;\n\t        // Prop type validation may throw. In case they do, we don't want to\n\t        // fail the render phase where it didn't fail before. So we log it.\n\t        // After these have been cleaned up, we'll let them throw.\n\t        try {\n\t          // This is intentionally an invariant that gets caught. It's the same\n\t          // behavior as without this statement except with a better message.\n\t          invariant(typeof typeSpecs[typeSpecName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', componentName || 'React class', location, typeSpecName);\n\t          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);\n\t        } catch (ex) {\n\t          error = ex;\n\t        }\n\t        warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error);\n\t        if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n\t          // Only monitor this failure once because there tends to be a lot of the\n\t          // same error.\n\t          loggedTypeFailures[error.message] = true;\n\t\n\t          var stack = getStack ? getStack() : '';\n\t\n\t          warning(false, 'Failed %s type: %s%s', location, error.message, stack != null ? stack : '');\n\t        }\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\tmodule.exports = checkPropTypes;\n\n\n/***/ },\n/* 158 */\n[190, 159],\n/* 159 */\n[191, 9, 1, 3, 160, 157],\n/* 160 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\t\n\tmodule.exports = ReactPropTypesSecret;\n\n\n/***/ },\n/* 161 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// @remove-on-eject-begin\n\t/**\n\t * Copyright (c) 2015-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t */\n\t// @remove-on-eject-end\n\t'use strict';\n\t\n\tif (typeof Promise === 'undefined') {\n\t  // Rejection tracking prevents a common issue where React gets into an\n\t  // inconsistent state due to an error, but it gets swallowed by a Promise,\n\t  // and the user has no idea what causes React's erratic future behavior.\n\t  __webpack_require__(166).enable();\n\t  window.Promise = __webpack_require__(165);\n\t}\n\t\n\t// fetch() polyfill for making API calls.\n\t__webpack_require__(168);\n\t\n\t// Object.assign() is commonly used with React.\n\t// It will use the native implementation if it's present and isn't buggy.\n\tObject.assign = __webpack_require__(164);\n\n\n/***/ },\n/* 162 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(186);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _reactDom = __webpack_require__(81);\n\t\n\tvar _reactDom2 = _interopRequireDefault(_reactDom);\n\t\n\tvar _tone = __webpack_require__(187);\n\t\n\tvar _tone2 = _interopRequireDefault(_tone);\n\t\n\t__webpack_require__(163);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar numRows = 16;\n\tvar numCols = 16;\n\tvar synth = new _tone2.default.PolySynth(numRows).toMaster();\n\t// todo numRows needs to get updated here when it's updated in general too\n\tvar loop;\n\t\n\tfunction Square(props) {\n\t  var squareClassName = \"square\";\n\t  if (props.isActive) {\n\t    squareClassName = \"square on\";\n\t  }\n\t  var squareStyle = {\n\t    maxWidth: 'calc(100% / 16)',\n\t    maxHeight: 'calc(100vh / 16)'\n\t  };\n\t  return _react2.default.createElement('button', {\n\t    style: squareStyle,\n\t    className: squareClassName,\n\t    onClick: props.onClick });\n\t}\n\t\n\tfunction StartButton(props) {\n\t  return _react2.default.createElement(\n\t    'button',\n\t    { className: 'btn start', onClick: function onClick() {\n\t        console.log('Starting loop');\n\t        if (_tone2.default.Transport.state !== 'started') {\n\t          _tone2.default.Transport.start();\n\t        } else {\n\t          loop.start();\n\t        }\n\t      } },\n\t    'Start'\n\t  );\n\t}\n\t\n\tfunction StopButton(props) {\n\t  return _react2.default.createElement(\n\t    'button',\n\t    { className: 'btn stop', onClick: function onClick() {\n\t        console.log('Stopping loop');\n\t        loop.stop();\n\t      } },\n\t    'Stop'\n\t  );\n\t}\n\t\n\tvar Board = function (_React$Component) {\n\t  _inherits(Board, _React$Component);\n\t\n\t  function Board() {\n\t    _classCallCheck(this, Board);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Board.__proto__ || Object.getPrototypeOf(Board)).call(this));\n\t\n\t    var pitches = Array(numRows * numCols).fill(\"C4\");\n\t    for (var i = 0; i < numRows * numCols; i++) {\n\t      pitches[i] = getPitch(i);\n\t    }\n\t\n\t    _this.state = {\n\t      squares: Array(numRows * numCols).fill(false),\n\t      pitches: pitches\n\t    };\n\t\n\t    _this.createLoop();\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Board, [{\n\t    key: 'handleClick',\n\t    value: function handleClick(i) {\n\t      var squares = this.state.squares.slice();\n\t      if (squares[i]) {\n\t        squares[i] = false;\n\t      } else {\n\t        squares[i] = true;\n\t      }\n\t      // synth.triggerAttackRelease(this.state.pitches[i], \"8n\");\n\t      this.setState({ squares: squares });\n\t    }\n\t  }, {\n\t    key: 'renderSquare',\n\t    value: function renderSquare(i) {\n\t      var _this2 = this;\n\t\n\t      return _react2.default.createElement(Square, {\n\t        isActive: this.state.squares[i],\n\t        onClick: function onClick() {\n\t          return _this2.handleClick(i);\n\t        },\n\t        key: 'square' + i\n\t      });\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var rows = [];\n\t      for (var i = 0; i < numRows; i++) {\n\t        var cols = [];\n\t        for (var j = 0; j < numCols; j++) {\n\t          cols.push(this.renderSquare(numRows * i + j));\n\t        }\n\t        rows.push(_react2.default.createElement(\n\t          'div',\n\t          { className: 'board-row', key: 'row' + i },\n\t          cols\n\t        ));\n\t      }\n\t\n\t      return _react2.default.createElement(\n\t        'div',\n\t        null,\n\t        rows\n\t      );\n\t    }\n\t  }, {\n\t    key: 'createLoop',\n\t    value: function createLoop() {\n\t      var that = this;\n\t      console.log('Creating loop');\n\t      var columns = Array(numCols).fill(0);\n\t      for (var i = 0; i < numCols; i++) {\n\t        columns[i] = i;\n\t      }\n\t\n\t      loop = new _tone2.default.Sequence(function (time, col) {\n\t        var pitchesToPlay = [];\n\t        for (var row = 0; row < numRows; row++) {\n\t          if (that.state.squares[numRows * row + col] === true) {\n\t            pitchesToPlay.push(that.state.pitches[numRows * row + col]);\n\t            // slightly randomized velocities\n\t            // var vel = Math.random() * 0.5 + 0.5;\n\t            // keys.start(this.state.pitches[numRows * row + col], time, 0, \"32n\", 0, vel);\n\t          }\n\t        }\n\t        synth.triggerAttackRelease(pitchesToPlay, \"32n\");\n\t      }, columns, \"16n\").start(0);\n\t      _tone2.default.Transport.bpm.value = 80;\n\t    }\n\t  }]);\n\t\n\t  return Board;\n\t}(_react2.default.Component);\n\t\n\tvar Pentacular = function (_React$Component2) {\n\t  _inherits(Pentacular, _React$Component2);\n\t\n\t  function Pentacular() {\n\t    _classCallCheck(this, Pentacular);\n\t\n\t    return _possibleConstructorReturn(this, (Pentacular.__proto__ || Object.getPrototypeOf(Pentacular)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(Pentacular, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      return _react2.default.createElement(\n\t        'div',\n\t        { className: 'pentacular' },\n\t        _react2.default.createElement(\n\t          'div',\n\t          { className: 'pentacular-board' },\n\t          _react2.default.createElement(Board, null)\n\t        ),\n\t        _react2.default.createElement(\n\t          'div',\n\t          { className: 'pentacular-info' },\n\t          _react2.default.createElement(StartButton, null),\n\t          _react2.default.createElement(StopButton, null),\n\t          _react2.default.createElement('div', null),\n\t          _react2.default.createElement('ol', null)\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Pentacular;\n\t}(_react2.default.Component);\n\t\n\t// ========================================\n\t\n\t_reactDom2.default.render(_react2.default.createElement(Pentacular, null), document.getElementById('root'));\n\t\n\tfunction getPitch(i) {\n\t  var y = Math.floor(i / numRows);\n\t  y = -y + 15;\n\t  var octave = 3 + Math.floor(y / 5);\n\t  var note;\n\t  switch (y % 5) {\n\t    case 1:\n\t      note = \"D\";\n\t      break;\n\t    case 2:\n\t      note = \"F\";\n\t      break;\n\t    case 3:\n\t      note = \"G\";\n\t      break;\n\t    case 4:\n\t      note = \"A\";\n\t      break;\n\t    default:\n\t      // case 0\n\t      note = \"C\";\n\t      break;\n\t  }\n\t  return note + octave;\n\t}\n\n/***/ },\n/* 163 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 164 */\n5,\n/* 165 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t//This file contains the ES6 extensions to the core Promises/A+ API\n\t\n\tvar Promise = __webpack_require__(76);\n\t\n\tmodule.exports = Promise;\n\t\n\t/* Static Functions */\n\t\n\tvar TRUE = valuePromise(true);\n\tvar FALSE = valuePromise(false);\n\tvar NULL = valuePromise(null);\n\tvar UNDEFINED = valuePromise(undefined);\n\tvar ZERO = valuePromise(0);\n\tvar EMPTYSTRING = valuePromise('');\n\t\n\tfunction valuePromise(value) {\n\t  var p = new Promise(Promise._61);\n\t  p._81 = 1;\n\t  p._65 = value;\n\t  return p;\n\t}\n\tPromise.resolve = function (value) {\n\t  if (value instanceof Promise) return value;\n\t\n\t  if (value === null) return NULL;\n\t  if (value === undefined) return UNDEFINED;\n\t  if (value === true) return TRUE;\n\t  if (value === false) return FALSE;\n\t  if (value === 0) return ZERO;\n\t  if (value === '') return EMPTYSTRING;\n\t\n\t  if (typeof value === 'object' || typeof value === 'function') {\n\t    try {\n\t      var then = value.then;\n\t      if (typeof then === 'function') {\n\t        return new Promise(then.bind(value));\n\t      }\n\t    } catch (ex) {\n\t      return new Promise(function (resolve, reject) {\n\t        reject(ex);\n\t      });\n\t    }\n\t  }\n\t  return valuePromise(value);\n\t};\n\t\n\tPromise.all = function (arr) {\n\t  var args = Array.prototype.slice.call(arr);\n\t\n\t  return new Promise(function (resolve, reject) {\n\t    if (args.length === 0) return resolve([]);\n\t    var remaining = args.length;\n\t    function res(i, val) {\n\t      if (val && (typeof val === 'object' || typeof val === 'function')) {\n\t        if (val instanceof Promise && val.then === Promise.prototype.then) {\n\t          while (val._81 === 3) {\n\t            val = val._65;\n\t          }\n\t          if (val._81 === 1) return res(i, val._65);\n\t          if (val._81 === 2) reject(val._65);\n\t          val.then(function (val) {\n\t            res(i, val);\n\t          }, reject);\n\t          return;\n\t        } else {\n\t          var then = val.then;\n\t          if (typeof then === 'function') {\n\t            var p = new Promise(then.bind(val));\n\t            p.then(function (val) {\n\t              res(i, val);\n\t            }, reject);\n\t            return;\n\t          }\n\t        }\n\t      }\n\t      args[i] = val;\n\t      if (--remaining === 0) {\n\t        resolve(args);\n\t      }\n\t    }\n\t    for (var i = 0; i < args.length; i++) {\n\t      res(i, args[i]);\n\t    }\n\t  });\n\t};\n\t\n\tPromise.reject = function (value) {\n\t  return new Promise(function (resolve, reject) {\n\t    reject(value);\n\t  });\n\t};\n\t\n\tPromise.race = function (values) {\n\t  return new Promise(function (resolve, reject) {\n\t    values.forEach(function(value){\n\t      Promise.resolve(value).then(resolve, reject);\n\t    });\n\t  });\n\t};\n\t\n\t/* Prototype Methods */\n\t\n\tPromise.prototype['catch'] = function (onRejected) {\n\t  return this.then(null, onRejected);\n\t};\n\n\n/***/ },\n/* 166 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar Promise = __webpack_require__(76);\n\t\n\tvar DEFAULT_WHITELIST = [\n\t  ReferenceError,\n\t  TypeError,\n\t  RangeError\n\t];\n\t\n\tvar enabled = false;\n\texports.disable = disable;\n\tfunction disable() {\n\t  enabled = false;\n\t  Promise._10 = null;\n\t  Promise._97 = null;\n\t}\n\t\n\texports.enable = enable;\n\tfunction enable(options) {\n\t  options = options || {};\n\t  if (enabled) disable();\n\t  enabled = true;\n\t  var id = 0;\n\t  var displayId = 0;\n\t  var rejections = {};\n\t  Promise._10 = function (promise) {\n\t    if (\n\t      promise._81 === 2 && // IS REJECTED\n\t      rejections[promise._72]\n\t    ) {\n\t      if (rejections[promise._72].logged) {\n\t        onHandled(promise._72);\n\t      } else {\n\t        clearTimeout(rejections[promise._72].timeout);\n\t      }\n\t      delete rejections[promise._72];\n\t    }\n\t  };\n\t  Promise._97 = function (promise, err) {\n\t    if (promise._45 === 0) { // not yet handled\n\t      promise._72 = id++;\n\t      rejections[promise._72] = {\n\t        displayId: null,\n\t        error: err,\n\t        timeout: setTimeout(\n\t          onUnhandled.bind(null, promise._72),\n\t          // For reference errors and type errors, this almost always\n\t          // means the programmer made a mistake, so log them after just\n\t          // 100ms\n\t          // otherwise, wait 2 seconds to see if they get handled\n\t          matchWhitelist(err, DEFAULT_WHITELIST)\n\t            ? 100\n\t            : 2000\n\t        ),\n\t        logged: false\n\t      };\n\t    }\n\t  };\n\t  function onUnhandled(id) {\n\t    if (\n\t      options.allRejections ||\n\t      matchWhitelist(\n\t        rejections[id].error,\n\t        options.whitelist || DEFAULT_WHITELIST\n\t      )\n\t    ) {\n\t      rejections[id].displayId = displayId++;\n\t      if (options.onUnhandled) {\n\t        rejections[id].logged = true;\n\t        options.onUnhandled(\n\t          rejections[id].displayId,\n\t          rejections[id].error\n\t        );\n\t      } else {\n\t        rejections[id].logged = true;\n\t        logError(\n\t          rejections[id].displayId,\n\t          rejections[id].error\n\t        );\n\t      }\n\t    }\n\t  }\n\t  function onHandled(id) {\n\t    if (rejections[id].logged) {\n\t      if (options.onHandled) {\n\t        options.onHandled(rejections[id].displayId, rejections[id].error);\n\t      } else if (!rejections[id].onUnhandled) {\n\t        console.warn(\n\t          'Promise Rejection Handled (id: ' + rejections[id].displayId + '):'\n\t        );\n\t        console.warn(\n\t          '  This means you can ignore any previous messages of the form \"Possible Unhandled Promise Rejection\" with id ' +\n\t          rejections[id].displayId + '.'\n\t        );\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\tfunction logError(id, error) {\n\t  console.warn('Possible Unhandled Promise Rejection (id: ' + id + '):');\n\t  var errStr = (error && (error.stack || error)) + '';\n\t  errStr.split('\\n').forEach(function (line) {\n\t    console.warn('  ' + line);\n\t  });\n\t}\n\t\n\tfunction matchWhitelist(error, list) {\n\t  return list.some(function (cls) {\n\t    return error instanceof cls;\n\t  });\n\t}\n\n/***/ },\n/* 167 */\n/***/ function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {\"use strict\";\n\t\n\t// Use the fastest means possible to execute a task in its own turn, with\n\t// priority over other events including IO, animation, reflow, and redraw\n\t// events in browsers.\n\t//\n\t// An exception thrown by a task will permanently interrupt the processing of\n\t// subsequent tasks. The higher level `asap` function ensures that if an\n\t// exception is thrown by a task, that the task queue will continue flushing as\n\t// soon as possible, but if you use `rawAsap` directly, you are responsible to\n\t// either ensure that no exceptions are thrown from your task, or to manually\n\t// call `rawAsap.requestFlush` if an exception is thrown.\n\tmodule.exports = rawAsap;\n\tfunction rawAsap(task) {\n\t    if (!queue.length) {\n\t        requestFlush();\n\t        flushing = true;\n\t    }\n\t    // Equivalent to push, but avoids a function call.\n\t    queue[queue.length] = task;\n\t}\n\t\n\tvar queue = [];\n\t// Once a flush has been requested, no further calls to `requestFlush` are\n\t// necessary until the next `flush` completes.\n\tvar flushing = false;\n\t// `requestFlush` is an implementation-specific method that attempts to kick\n\t// off a `flush` event as quickly as possible. `flush` will attempt to exhaust\n\t// the event queue before yielding to the browser's own event loop.\n\tvar requestFlush;\n\t// The position of the next task to execute in the task queue. This is\n\t// preserved between calls to `flush` so that it can be resumed if\n\t// a task throws an exception.\n\tvar index = 0;\n\t// If a task schedules additional tasks recursively, the task queue can grow\n\t// unbounded. To prevent memory exhaustion, the task queue will periodically\n\t// truncate already-completed tasks.\n\tvar capacity = 1024;\n\t\n\t// The flush function processes all tasks that have been scheduled with\n\t// `rawAsap` unless and until one of those tasks throws an exception.\n\t// If a task throws an exception, `flush` ensures that its state will remain\n\t// consistent and will resume where it left off when called again.\n\t// However, `flush` does not make any arrangements to be called again if an\n\t// exception is thrown.\n\tfunction flush() {\n\t    while (index < queue.length) {\n\t        var currentIndex = index;\n\t        // Advance the index before calling the task. This ensures that we will\n\t        // begin flushing on the next task the task throws an error.\n\t        index = index + 1;\n\t        queue[currentIndex].call();\n\t        // Prevent leaking memory for long chains of recursive calls to `asap`.\n\t        // If we call `asap` within tasks scheduled by `asap`, the queue will\n\t        // grow, but to avoid an O(n) walk for every task we execute, we don't\n\t        // shift tasks off the queue after they have been executed.\n\t        // Instead, we periodically shift 1024 tasks off the queue.\n\t        if (index > capacity) {\n\t            // Manually shift all values starting at the index back to the\n\t            // beginning of the queue.\n\t            for (var scan = 0, newLength = queue.length - index; scan < newLength; scan++) {\n\t                queue[scan] = queue[scan + index];\n\t            }\n\t            queue.length -= index;\n\t            index = 0;\n\t        }\n\t    }\n\t    queue.length = 0;\n\t    index = 0;\n\t    flushing = false;\n\t}\n\t\n\t// `requestFlush` is implemented using a strategy based on data collected from\n\t// every available SauceLabs Selenium web driver worker at time of writing.\n\t// https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593\n\t\n\t// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that\n\t// have WebKitMutationObserver but not un-prefixed MutationObserver.\n\t// Must use `global` or `self` instead of `window` to work in both frames and web\n\t// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.\n\t\n\t/* globals self */\n\tvar scope = typeof global !== \"undefined\" ? global : self;\n\tvar BrowserMutationObserver = scope.MutationObserver || scope.WebKitMutationObserver;\n\t\n\t// MutationObservers are desirable because they have high priority and work\n\t// reliably everywhere they are implemented.\n\t// They are implemented in all modern browsers.\n\t//\n\t// - Android 4-4.3\n\t// - Chrome 26-34\n\t// - Firefox 14-29\n\t// - Internet Explorer 11\n\t// - iPad Safari 6-7.1\n\t// - iPhone Safari 7-7.1\n\t// - Safari 6-7\n\tif (typeof BrowserMutationObserver === \"function\") {\n\t    requestFlush = makeRequestCallFromMutationObserver(flush);\n\t\n\t// MessageChannels are desirable because they give direct access to the HTML\n\t// task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera\n\t// 11-12, and in web workers in many engines.\n\t// Although message channels yield to any queued rendering and IO tasks, they\n\t// would be better than imposing the 4ms delay of timers.\n\t// However, they do not work reliably in Internet Explorer or Safari.\n\t\n\t// Internet Explorer 10 is the only browser that has setImmediate but does\n\t// not have MutationObservers.\n\t// Although setImmediate yields to the browser's renderer, it would be\n\t// preferrable to falling back to setTimeout since it does not have\n\t// the minimum 4ms penalty.\n\t// Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and\n\t// Desktop to a lesser extent) that renders both setImmediate and\n\t// MessageChannel useless for the purposes of ASAP.\n\t// https://github.com/kriskowal/q/issues/396\n\t\n\t// Timers are implemented universally.\n\t// We fall back to timers in workers in most engines, and in foreground\n\t// contexts in the following browsers.\n\t// However, note that even this simple case requires nuances to operate in a\n\t// broad spectrum of browsers.\n\t//\n\t// - Firefox 3-13\n\t// - Internet Explorer 6-9\n\t// - iPad Safari 4.3\n\t// - Lynx 2.8.7\n\t} else {\n\t    requestFlush = makeRequestCallFromTimer(flush);\n\t}\n\t\n\t// `requestFlush` requests that the high priority event queue be flushed as\n\t// soon as possible.\n\t// This is useful to prevent an error thrown in a task from stalling the event\n\t// queue if the exception handled by Node.js’s\n\t// `process.on(\"uncaughtException\")` or by a domain.\n\trawAsap.requestFlush = requestFlush;\n\t\n\t// To request a high priority event, we induce a mutation observer by toggling\n\t// the text of a text node between \"1\" and \"-1\".\n\tfunction makeRequestCallFromMutationObserver(callback) {\n\t    var toggle = 1;\n\t    var observer = new BrowserMutationObserver(callback);\n\t    var node = document.createTextNode(\"\");\n\t    observer.observe(node, {characterData: true});\n\t    return function requestCall() {\n\t        toggle = -toggle;\n\t        node.data = toggle;\n\t    };\n\t}\n\t\n\t// The message channel technique was discovered by Malte Ubl and was the\n\t// original foundation for this library.\n\t// http://www.nonblocking.io/2011/06/windownexttick.html\n\t\n\t// Safari 6.0.5 (at least) intermittently fails to create message ports on a\n\t// page's first load. Thankfully, this version of Safari supports\n\t// MutationObservers, so we don't need to fall back in that case.\n\t\n\t// function makeRequestCallFromMessageChannel(callback) {\n\t//     var channel = new MessageChannel();\n\t//     channel.port1.onmessage = callback;\n\t//     return function requestCall() {\n\t//         channel.port2.postMessage(0);\n\t//     };\n\t// }\n\t\n\t// For reasons explained above, we are also unable to use `setImmediate`\n\t// under any circumstances.\n\t// Even if we were, there is another bug in Internet Explorer 10.\n\t// It is not sufficient to assign `setImmediate` to `requestFlush` because\n\t// `setImmediate` must be called *by name* and therefore must be wrapped in a\n\t// closure.\n\t// Never forget.\n\t\n\t// function makeRequestCallFromSetImmediate(callback) {\n\t//     return function requestCall() {\n\t//         setImmediate(callback);\n\t//     };\n\t// }\n\t\n\t// Safari 6.0 has a problem where timers will get lost while the user is\n\t// scrolling. This problem does not impact ASAP because Safari 6.0 supports\n\t// mutation observers, so that implementation is used instead.\n\t// However, if we ever elect to use timers in Safari, the prevalent work-around\n\t// is to add a scroll event listener that calls for a flush.\n\t\n\t// `setTimeout` does not call the passed callback if the delay is less than\n\t// approximately 7 in web workers in Firefox 8 through 18, and sometimes not\n\t// even then.\n\t\n\tfunction makeRequestCallFromTimer(callback) {\n\t    return function requestCall() {\n\t        // We dispatch a timeout with a specified delay of 0 for engines that\n\t        // can reliably accommodate that request. This will usually be snapped\n\t        // to a 4 milisecond delay, but once we're flushing, there's no delay\n\t        // between events.\n\t        var timeoutHandle = setTimeout(handleTimer, 0);\n\t        // However, since this timer gets frequently dropped in Firefox\n\t        // workers, we enlist an interval handle that will try to fire\n\t        // an event 20 times per second until it succeeds.\n\t        var intervalHandle = setInterval(handleTimer, 50);\n\t\n\t        function handleTimer() {\n\t            // Whichever timer succeeds will cancel both timers and\n\t            // execute the callback.\n\t            clearTimeout(timeoutHandle);\n\t            clearInterval(intervalHandle);\n\t            callback();\n\t        }\n\t    };\n\t}\n\t\n\t// This is for `asap.js` only.\n\t// Its name will be periodically randomized to break any code that depends on\n\t// its existence.\n\trawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer;\n\t\n\t// ASAP was originally a nextTick shim included in Q. This was factored out\n\t// into this ASAP package. It was later adapted to RSVP which made further\n\t// amendments. These decisions, particularly to marginalize MessageChannel and\n\t// to capture the MutationObserver implementation in a closure, were integrated\n\t// back into ASAP proper.\n\t// https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 168 */\n/***/ function(module, exports) {\n\n\t(function(self) {\n\t  'use strict';\n\t\n\t  if (self.fetch) {\n\t    return\n\t  }\n\t\n\t  var support = {\n\t    searchParams: 'URLSearchParams' in self,\n\t    iterable: 'Symbol' in self && 'iterator' in Symbol,\n\t    blob: 'FileReader' in self && 'Blob' in self && (function() {\n\t      try {\n\t        new Blob()\n\t        return true\n\t      } catch(e) {\n\t        return false\n\t      }\n\t    })(),\n\t    formData: 'FormData' in self,\n\t    arrayBuffer: 'ArrayBuffer' in self\n\t  }\n\t\n\t  if (support.arrayBuffer) {\n\t    var viewClasses = [\n\t      '[object Int8Array]',\n\t      '[object Uint8Array]',\n\t      '[object Uint8ClampedArray]',\n\t      '[object Int16Array]',\n\t      '[object Uint16Array]',\n\t      '[object Int32Array]',\n\t      '[object Uint32Array]',\n\t      '[object Float32Array]',\n\t      '[object Float64Array]'\n\t    ]\n\t\n\t    var isDataView = function(obj) {\n\t      return obj && DataView.prototype.isPrototypeOf(obj)\n\t    }\n\t\n\t    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n\t      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n\t    }\n\t  }\n\t\n\t  function normalizeName(name) {\n\t    if (typeof name !== 'string') {\n\t      name = String(name)\n\t    }\n\t    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n\t      throw new TypeError('Invalid character in header field name')\n\t    }\n\t    return name.toLowerCase()\n\t  }\n\t\n\t  function normalizeValue(value) {\n\t    if (typeof value !== 'string') {\n\t      value = String(value)\n\t    }\n\t    return value\n\t  }\n\t\n\t  // Build a destructive iterator for the value list\n\t  function iteratorFor(items) {\n\t    var iterator = {\n\t      next: function() {\n\t        var value = items.shift()\n\t        return {done: value === undefined, value: value}\n\t      }\n\t    }\n\t\n\t    if (support.iterable) {\n\t      iterator[Symbol.iterator] = function() {\n\t        return iterator\n\t      }\n\t    }\n\t\n\t    return iterator\n\t  }\n\t\n\t  function Headers(headers) {\n\t    this.map = {}\n\t\n\t    if (headers instanceof Headers) {\n\t      headers.forEach(function(value, name) {\n\t        this.append(name, value)\n\t      }, this)\n\t\n\t    } else if (headers) {\n\t      Object.getOwnPropertyNames(headers).forEach(function(name) {\n\t        this.append(name, headers[name])\n\t      }, this)\n\t    }\n\t  }\n\t\n\t  Headers.prototype.append = function(name, value) {\n\t    name = normalizeName(name)\n\t    value = normalizeValue(value)\n\t    var oldValue = this.map[name]\n\t    this.map[name] = oldValue ? oldValue+','+value : value\n\t  }\n\t\n\t  Headers.prototype['delete'] = function(name) {\n\t    delete this.map[normalizeName(name)]\n\t  }\n\t\n\t  Headers.prototype.get = function(name) {\n\t    name = normalizeName(name)\n\t    return this.has(name) ? this.map[name] : null\n\t  }\n\t\n\t  Headers.prototype.has = function(name) {\n\t    return this.map.hasOwnProperty(normalizeName(name))\n\t  }\n\t\n\t  Headers.prototype.set = function(name, value) {\n\t    this.map[normalizeName(name)] = normalizeValue(value)\n\t  }\n\t\n\t  Headers.prototype.forEach = function(callback, thisArg) {\n\t    for (var name in this.map) {\n\t      if (this.map.hasOwnProperty(name)) {\n\t        callback.call(thisArg, this.map[name], name, this)\n\t      }\n\t    }\n\t  }\n\t\n\t  Headers.prototype.keys = function() {\n\t    var items = []\n\t    this.forEach(function(value, name) { items.push(name) })\n\t    return iteratorFor(items)\n\t  }\n\t\n\t  Headers.prototype.values = function() {\n\t    var items = []\n\t    this.forEach(function(value) { items.push(value) })\n\t    return iteratorFor(items)\n\t  }\n\t\n\t  Headers.prototype.entries = function() {\n\t    var items = []\n\t    this.forEach(function(value, name) { items.push([name, value]) })\n\t    return iteratorFor(items)\n\t  }\n\t\n\t  if (support.iterable) {\n\t    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n\t  }\n\t\n\t  function consumed(body) {\n\t    if (body.bodyUsed) {\n\t      return Promise.reject(new TypeError('Already read'))\n\t    }\n\t    body.bodyUsed = true\n\t  }\n\t\n\t  function fileReaderReady(reader) {\n\t    return new Promise(function(resolve, reject) {\n\t      reader.onload = function() {\n\t        resolve(reader.result)\n\t      }\n\t      reader.onerror = function() {\n\t        reject(reader.error)\n\t      }\n\t    })\n\t  }\n\t\n\t  function readBlobAsArrayBuffer(blob) {\n\t    var reader = new FileReader()\n\t    var promise = fileReaderReady(reader)\n\t    reader.readAsArrayBuffer(blob)\n\t    return promise\n\t  }\n\t\n\t  function readBlobAsText(blob) {\n\t    var reader = new FileReader()\n\t    var promise = fileReaderReady(reader)\n\t    reader.readAsText(blob)\n\t    return promise\n\t  }\n\t\n\t  function readArrayBufferAsText(buf) {\n\t    var view = new Uint8Array(buf)\n\t    var chars = new Array(view.length)\n\t\n\t    for (var i = 0; i < view.length; i++) {\n\t      chars[i] = String.fromCharCode(view[i])\n\t    }\n\t    return chars.join('')\n\t  }\n\t\n\t  function bufferClone(buf) {\n\t    if (buf.slice) {\n\t      return buf.slice(0)\n\t    } else {\n\t      var view = new Uint8Array(buf.byteLength)\n\t      view.set(new Uint8Array(buf))\n\t      return view.buffer\n\t    }\n\t  }\n\t\n\t  function Body() {\n\t    this.bodyUsed = false\n\t\n\t    this._initBody = function(body) {\n\t      this._bodyInit = body\n\t      if (!body) {\n\t        this._bodyText = ''\n\t      } else if (typeof body === 'string') {\n\t        this._bodyText = body\n\t      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n\t        this._bodyBlob = body\n\t      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n\t        this._bodyFormData = body\n\t      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n\t        this._bodyText = body.toString()\n\t      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n\t        this._bodyArrayBuffer = bufferClone(body.buffer)\n\t        // IE 10-11 can't handle a DataView body.\n\t        this._bodyInit = new Blob([this._bodyArrayBuffer])\n\t      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n\t        this._bodyArrayBuffer = bufferClone(body)\n\t      } else {\n\t        throw new Error('unsupported BodyInit type')\n\t      }\n\t\n\t      if (!this.headers.get('content-type')) {\n\t        if (typeof body === 'string') {\n\t          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n\t        } else if (this._bodyBlob && this._bodyBlob.type) {\n\t          this.headers.set('content-type', this._bodyBlob.type)\n\t        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n\t          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n\t        }\n\t      }\n\t    }\n\t\n\t    if (support.blob) {\n\t      this.blob = function() {\n\t        var rejected = consumed(this)\n\t        if (rejected) {\n\t          return rejected\n\t        }\n\t\n\t        if (this._bodyBlob) {\n\t          return Promise.resolve(this._bodyBlob)\n\t        } else if (this._bodyArrayBuffer) {\n\t          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n\t        } else if (this._bodyFormData) {\n\t          throw new Error('could not read FormData body as blob')\n\t        } else {\n\t          return Promise.resolve(new Blob([this._bodyText]))\n\t        }\n\t      }\n\t\n\t      this.arrayBuffer = function() {\n\t        if (this._bodyArrayBuffer) {\n\t          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n\t        } else {\n\t          return this.blob().then(readBlobAsArrayBuffer)\n\t        }\n\t      }\n\t    }\n\t\n\t    this.text = function() {\n\t      var rejected = consumed(this)\n\t      if (rejected) {\n\t        return rejected\n\t      }\n\t\n\t      if (this._bodyBlob) {\n\t        return readBlobAsText(this._bodyBlob)\n\t      } else if (this._bodyArrayBuffer) {\n\t        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n\t      } else if (this._bodyFormData) {\n\t        throw new Error('could not read FormData body as text')\n\t      } else {\n\t        return Promise.resolve(this._bodyText)\n\t      }\n\t    }\n\t\n\t    if (support.formData) {\n\t      this.formData = function() {\n\t        return this.text().then(decode)\n\t      }\n\t    }\n\t\n\t    this.json = function() {\n\t      return this.text().then(JSON.parse)\n\t    }\n\t\n\t    return this\n\t  }\n\t\n\t  // HTTP methods whose capitalization should be normalized\n\t  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\t\n\t  function normalizeMethod(method) {\n\t    var upcased = method.toUpperCase()\n\t    return (methods.indexOf(upcased) > -1) ? upcased : method\n\t  }\n\t\n\t  function Request(input, options) {\n\t    options = options || {}\n\t    var body = options.body\n\t\n\t    if (input instanceof Request) {\n\t      if (input.bodyUsed) {\n\t        throw new TypeError('Already read')\n\t      }\n\t      this.url = input.url\n\t      this.credentials = input.credentials\n\t      if (!options.headers) {\n\t        this.headers = new Headers(input.headers)\n\t      }\n\t      this.method = input.method\n\t      this.mode = input.mode\n\t      if (!body && input._bodyInit != null) {\n\t        body = input._bodyInit\n\t        input.bodyUsed = true\n\t      }\n\t    } else {\n\t      this.url = String(input)\n\t    }\n\t\n\t    this.credentials = options.credentials || this.credentials || 'omit'\n\t    if (options.headers || !this.headers) {\n\t      this.headers = new Headers(options.headers)\n\t    }\n\t    this.method = normalizeMethod(options.method || this.method || 'GET')\n\t    this.mode = options.mode || this.mode || null\n\t    this.referrer = null\n\t\n\t    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n\t      throw new TypeError('Body not allowed for GET or HEAD requests')\n\t    }\n\t    this._initBody(body)\n\t  }\n\t\n\t  Request.prototype.clone = function() {\n\t    return new Request(this, { body: this._bodyInit })\n\t  }\n\t\n\t  function decode(body) {\n\t    var form = new FormData()\n\t    body.trim().split('&').forEach(function(bytes) {\n\t      if (bytes) {\n\t        var split = bytes.split('=')\n\t        var name = split.shift().replace(/\\+/g, ' ')\n\t        var value = split.join('=').replace(/\\+/g, ' ')\n\t        form.append(decodeURIComponent(name), decodeURIComponent(value))\n\t      }\n\t    })\n\t    return form\n\t  }\n\t\n\t  function parseHeaders(rawHeaders) {\n\t    var headers = new Headers()\n\t    rawHeaders.split(/\\r?\\n/).forEach(function(line) {\n\t      var parts = line.split(':')\n\t      var key = parts.shift().trim()\n\t      if (key) {\n\t        var value = parts.join(':').trim()\n\t        headers.append(key, value)\n\t      }\n\t    })\n\t    return headers\n\t  }\n\t\n\t  Body.call(Request.prototype)\n\t\n\t  function Response(bodyInit, options) {\n\t    if (!options) {\n\t      options = {}\n\t    }\n\t\n\t    this.type = 'default'\n\t    this.status = 'status' in options ? options.status : 200\n\t    this.ok = this.status >= 200 && this.status < 300\n\t    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n\t    this.headers = new Headers(options.headers)\n\t    this.url = options.url || ''\n\t    this._initBody(bodyInit)\n\t  }\n\t\n\t  Body.call(Response.prototype)\n\t\n\t  Response.prototype.clone = function() {\n\t    return new Response(this._bodyInit, {\n\t      status: this.status,\n\t      statusText: this.statusText,\n\t      headers: new Headers(this.headers),\n\t      url: this.url\n\t    })\n\t  }\n\t\n\t  Response.error = function() {\n\t    var response = new Response(null, {status: 0, statusText: ''})\n\t    response.type = 'error'\n\t    return response\n\t  }\n\t\n\t  var redirectStatuses = [301, 302, 303, 307, 308]\n\t\n\t  Response.redirect = function(url, status) {\n\t    if (redirectStatuses.indexOf(status) === -1) {\n\t      throw new RangeError('Invalid status code')\n\t    }\n\t\n\t    return new Response(null, {status: status, headers: {location: url}})\n\t  }\n\t\n\t  self.Headers = Headers\n\t  self.Request = Request\n\t  self.Response = Response\n\t\n\t  self.fetch = function(input, init) {\n\t    return new Promise(function(resolve, reject) {\n\t      var request = new Request(input, init)\n\t      var xhr = new XMLHttpRequest()\n\t\n\t      xhr.onload = function() {\n\t        var options = {\n\t          status: xhr.status,\n\t          statusText: xhr.statusText,\n\t          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n\t        }\n\t        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n\t        var body = 'response' in xhr ? xhr.response : xhr.responseText\n\t        resolve(new Response(body, options))\n\t      }\n\t\n\t      xhr.onerror = function() {\n\t        reject(new TypeError('Network request failed'))\n\t      }\n\t\n\t      xhr.ontimeout = function() {\n\t        reject(new TypeError('Network request failed'))\n\t      }\n\t\n\t      xhr.open(request.method, request.url, true)\n\t\n\t      if (request.credentials === 'include') {\n\t        xhr.withCredentials = true\n\t      }\n\t\n\t      if ('responseType' in xhr && support.blob) {\n\t        xhr.responseType = 'blob'\n\t      }\n\t\n\t      request.headers.forEach(function(value, name) {\n\t        xhr.setRequestHeader(name, value)\n\t      })\n\t\n\t      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n\t    })\n\t  }\n\t  self.fetch.polyfill = true\n\t})(typeof self !== 'undefined' ? self : this);\n\n\n/***/ },\n/* 169 */\n35,\n/* 170 */\n[188, 20, 14],\n/* 171 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar PooledClass = __webpack_require__(170);\n\tvar ReactElement = __webpack_require__(19);\n\t\n\tvar emptyFunction = __webpack_require__(50);\n\tvar traverseAllChildren = __webpack_require__(181);\n\t\n\tvar twoArgumentPooler = PooledClass.twoArgumentPooler;\n\tvar fourArgumentPooler = PooledClass.fourArgumentPooler;\n\t\n\tvar userProvidedKeyEscapeRegex = /\\/+/g;\n\tfunction escapeUserProvidedKey(text) {\n\t  return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');\n\t}\n\t\n\t/**\n\t * PooledClass representing the bookkeeping associated with performing a child\n\t * traversal. Allows avoiding binding callbacks.\n\t *\n\t * @constructor ForEachBookKeeping\n\t * @param {!function} forEachFunction Function to perform traversal with.\n\t * @param {?*} forEachContext Context to perform context with.\n\t */\n\tfunction ForEachBookKeeping(forEachFunction, forEachContext) {\n\t  this.func = forEachFunction;\n\t  this.context = forEachContext;\n\t  this.count = 0;\n\t}\n\tForEachBookKeeping.prototype.destructor = function () {\n\t  this.func = null;\n\t  this.context = null;\n\t  this.count = 0;\n\t};\n\tPooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);\n\t\n\tfunction forEachSingleChild(bookKeeping, child, name) {\n\t  var func = bookKeeping.func,\n\t      context = bookKeeping.context;\n\t\n\t  func.call(context, child, bookKeeping.count++);\n\t}\n\t\n\t/**\n\t * Iterates through children that are typically specified as `props.children`.\n\t *\n\t * See https://facebook.github.io/react/docs/top-level-api.html#react.children.foreach\n\t *\n\t * The provided forEachFunc(child, index) will be called for each\n\t * leaf child.\n\t *\n\t * @param {?*} children Children tree container.\n\t * @param {function(*, int)} forEachFunc\n\t * @param {*} forEachContext Context for forEachContext.\n\t */\n\tfunction forEachChildren(children, forEachFunc, forEachContext) {\n\t  if (children == null) {\n\t    return children;\n\t  }\n\t  var traverseContext = ForEachBookKeeping.getPooled(forEachFunc, forEachContext);\n\t  traverseAllChildren(children, forEachSingleChild, traverseContext);\n\t  ForEachBookKeeping.release(traverseContext);\n\t}\n\t\n\t/**\n\t * PooledClass representing the bookkeeping associated with performing a child\n\t * mapping. Allows avoiding binding callbacks.\n\t *\n\t * @constructor MapBookKeeping\n\t * @param {!*} mapResult Object containing the ordered map of results.\n\t * @param {!function} mapFunction Function to perform mapping with.\n\t * @param {?*} mapContext Context to perform mapping with.\n\t */\n\tfunction MapBookKeeping(mapResult, keyPrefix, mapFunction, mapContext) {\n\t  this.result = mapResult;\n\t  this.keyPrefix = keyPrefix;\n\t  this.func = mapFunction;\n\t  this.context = mapContext;\n\t  this.count = 0;\n\t}\n\tMapBookKeeping.prototype.destructor = function () {\n\t  this.result = null;\n\t  this.keyPrefix = null;\n\t  this.func = null;\n\t  this.context = null;\n\t  this.count = 0;\n\t};\n\tPooledClass.addPoolingTo(MapBookKeeping, fourArgumentPooler);\n\t\n\tfunction mapSingleChildIntoContext(bookKeeping, child, childKey) {\n\t  var result = bookKeeping.result,\n\t      keyPrefix = bookKeeping.keyPrefix,\n\t      func = bookKeeping.func,\n\t      context = bookKeeping.context;\n\t\n\t\n\t  var mappedChild = func.call(context, child, bookKeeping.count++);\n\t  if (Array.isArray(mappedChild)) {\n\t    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, emptyFunction.thatReturnsArgument);\n\t  } else if (mappedChild != null) {\n\t    if (ReactElement.isValidElement(mappedChild)) {\n\t      mappedChild = ReactElement.cloneAndReplaceKey(mappedChild,\n\t      // Keep both the (mapped) and old keys if they differ, just as\n\t      // traverseAllChildren used to do for objects as children\n\t      keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);\n\t    }\n\t    result.push(mappedChild);\n\t  }\n\t}\n\t\n\tfunction mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {\n\t  var escapedPrefix = '';\n\t  if (prefix != null) {\n\t    escapedPrefix = escapeUserProvidedKey(prefix) + '/';\n\t  }\n\t  var traverseContext = MapBookKeeping.getPooled(array, escapedPrefix, func, context);\n\t  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);\n\t  MapBookKeeping.release(traverseContext);\n\t}\n\t\n\t/**\n\t * Maps children that are typically specified as `props.children`.\n\t *\n\t * See https://facebook.github.io/react/docs/top-level-api.html#react.children.map\n\t *\n\t * The provided mapFunction(child, key, index) will be called for each\n\t * leaf child.\n\t *\n\t * @param {?*} children Children tree container.\n\t * @param {function(*, int)} func The map function.\n\t * @param {*} context Context for mapFunction.\n\t * @return {object} Object containing the ordered map of results.\n\t */\n\tfunction mapChildren(children, func, context) {\n\t  if (children == null) {\n\t    return children;\n\t  }\n\t  var result = [];\n\t  mapIntoWithKeyPrefixInternal(children, result, null, func, context);\n\t  return result;\n\t}\n\t\n\tfunction forEachSingleChildDummy(traverseContext, child, name) {\n\t  return null;\n\t}\n\t\n\t/**\n\t * Count the number of children that are typically specified as\n\t * `props.children`.\n\t *\n\t * See https://facebook.github.io/react/docs/top-level-api.html#react.children.count\n\t *\n\t * @param {?*} children Children tree container.\n\t * @return {number} The number of children.\n\t */\n\tfunction countChildren(children, context) {\n\t  return traverseAllChildren(children, forEachSingleChildDummy, null);\n\t}\n\t\n\t/**\n\t * Flatten a children object (typically specified as `props.children`) and\n\t * return an array with appropriately re-keyed children.\n\t *\n\t * See https://facebook.github.io/react/docs/top-level-api.html#react.children.toarray\n\t */\n\tfunction toArray(children) {\n\t  var result = [];\n\t  mapIntoWithKeyPrefixInternal(children, result, null, emptyFunction.thatReturnsArgument);\n\t  return result;\n\t}\n\t\n\tvar ReactChildren = {\n\t  forEach: forEachChildren,\n\t  map: mapChildren,\n\t  mapIntoWithKeyPrefixInternal: mapIntoWithKeyPrefixInternal,\n\t  count: countChildren,\n\t  toArray: toArray\n\t};\n\t\n\tmodule.exports = ReactChildren;\n\n/***/ },\n/* 172 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(20),\n\t    _assign = __webpack_require__(30);\n\t\n\tvar ReactComponent = __webpack_require__(48);\n\tvar ReactElement = __webpack_require__(19);\n\tvar ReactPropTypeLocationNames = __webpack_require__(174);\n\tvar ReactNoopUpdateQueue = __webpack_require__(49);\n\t\n\tvar emptyObject = __webpack_require__(51);\n\tvar invariant = __webpack_require__(14);\n\tvar warning = __webpack_require__(12);\n\t\n\tvar MIXINS_KEY = 'mixins';\n\t\n\t// Helper function to allow the creation of anonymous functions which do not\n\t// have .name set to the name of the variable being assigned to.\n\tfunction identity(fn) {\n\t  return fn;\n\t}\n\t\n\t/**\n\t * Policies that describe methods in `ReactClassInterface`.\n\t */\n\t\n\t\n\tvar injectedMixins = [];\n\t\n\t/**\n\t * Composite components are higher-level components that compose other composite\n\t * or host components.\n\t *\n\t * To create a new type of `ReactClass`, pass a specification of\n\t * your new class to `React.createClass`. The only requirement of your class\n\t * specification is that you implement a `render` method.\n\t *\n\t *   var MyComponent = React.createClass({\n\t *     render: function() {\n\t *       return <div>Hello World</div>;\n\t *     }\n\t *   });\n\t *\n\t * The class specification supports a specific protocol of methods that have\n\t * special meaning (e.g. `render`). See `ReactClassInterface` for\n\t * more the comprehensive protocol. Any other properties and methods in the\n\t * class specification will be available on the prototype.\n\t *\n\t * @interface ReactClassInterface\n\t * @internal\n\t */\n\tvar ReactClassInterface = {\n\t\n\t  /**\n\t   * An array of Mixin objects to include when defining your component.\n\t   *\n\t   * @type {array}\n\t   * @optional\n\t   */\n\t  mixins: 'DEFINE_MANY',\n\t\n\t  /**\n\t   * An object containing properties and methods that should be defined on\n\t   * the component's constructor instead of its prototype (static methods).\n\t   *\n\t   * @type {object}\n\t   * @optional\n\t   */\n\t  statics: 'DEFINE_MANY',\n\t\n\t  /**\n\t   * Definition of prop types for this component.\n\t   *\n\t   * @type {object}\n\t   * @optional\n\t   */\n\t  propTypes: 'DEFINE_MANY',\n\t\n\t  /**\n\t   * Definition of context types for this component.\n\t   *\n\t   * @type {object}\n\t   * @optional\n\t   */\n\t  contextTypes: 'DEFINE_MANY',\n\t\n\t  /**\n\t   * Definition of context types this component sets for its children.\n\t   *\n\t   * @type {object}\n\t   * @optional\n\t   */\n\t  childContextTypes: 'DEFINE_MANY',\n\t\n\t  // ==== Definition methods ====\n\t\n\t  /**\n\t   * Invoked when the component is mounted. Values in the mapping will be set on\n\t   * `this.props` if that prop is not specified (i.e. using an `in` check).\n\t   *\n\t   * This method is invoked before `getInitialState` and therefore cannot rely\n\t   * on `this.state` or use `this.setState`.\n\t   *\n\t   * @return {object}\n\t   * @optional\n\t   */\n\t  getDefaultProps: 'DEFINE_MANY_MERGED',\n\t\n\t  /**\n\t   * Invoked once before the component is mounted. The return value will be used\n\t   * as the initial value of `this.state`.\n\t   *\n\t   *   getInitialState: function() {\n\t   *     return {\n\t   *       isOn: false,\n\t   *       fooBaz: new BazFoo()\n\t   *     }\n\t   *   }\n\t   *\n\t   * @return {object}\n\t   * @optional\n\t   */\n\t  getInitialState: 'DEFINE_MANY_MERGED',\n\t\n\t  /**\n\t   * @return {object}\n\t   * @optional\n\t   */\n\t  getChildContext: 'DEFINE_MANY_MERGED',\n\t\n\t  /**\n\t   * Uses props from `this.props` and state from `this.state` to render the\n\t   * structure of the component.\n\t   *\n\t   * No guarantees are made about when or how often this method is invoked, so\n\t   * it must not have side effects.\n\t   *\n\t   *   render: function() {\n\t   *     var name = this.props.name;\n\t   *     return <div>Hello, {name}!</div>;\n\t   *   }\n\t   *\n\t   * @return {ReactComponent}\n\t   * @required\n\t   */\n\t  render: 'DEFINE_ONCE',\n\t\n\t  // ==== Delegate methods ====\n\t\n\t  /**\n\t   * Invoked when the component is initially created and about to be mounted.\n\t   * This may have side effects, but any external subscriptions or data created\n\t   * by this method must be cleaned up in `componentWillUnmount`.\n\t   *\n\t   * @optional\n\t   */\n\t  componentWillMount: 'DEFINE_MANY',\n\t\n\t  /**\n\t   * Invoked when the component has been mounted and has a DOM representation.\n\t   * However, there is no guarantee that the DOM node is in the document.\n\t   *\n\t   * Use this as an opportunity to operate on the DOM when the component has\n\t   * been mounted (initialized and rendered) for the first time.\n\t   *\n\t   * @param {DOMElement} rootNode DOM element representing the component.\n\t   * @optional\n\t   */\n\t  componentDidMount: 'DEFINE_MANY',\n\t\n\t  /**\n\t   * Invoked before the component receives new props.\n\t   *\n\t   * Use this as an opportunity to react to a prop transition by updating the\n\t   * state using `this.setState`. Current props are accessed via `this.props`.\n\t   *\n\t   *   componentWillReceiveProps: function(nextProps, nextContext) {\n\t   *     this.setState({\n\t   *       likesIncreasing: nextProps.likeCount > this.props.likeCount\n\t   *     });\n\t   *   }\n\t   *\n\t   * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop\n\t   * transition may cause a state change, but the opposite is not true. If you\n\t   * need it, you are probably looking for `componentWillUpdate`.\n\t   *\n\t   * @param {object} nextProps\n\t   * @optional\n\t   */\n\t  componentWillReceiveProps: 'DEFINE_MANY',\n\t\n\t  /**\n\t   * Invoked while deciding if the component should be updated as a result of\n\t   * receiving new props, state and/or context.\n\t   *\n\t   * Use this as an opportunity to `return false` when you're certain that the\n\t   * transition to the new props/state/context will not require a component\n\t   * update.\n\t   *\n\t   *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {\n\t   *     return !equal(nextProps, this.props) ||\n\t   *       !equal(nextState, this.state) ||\n\t   *       !equal(nextContext, this.context);\n\t   *   }\n\t   *\n\t   * @param {object} nextProps\n\t   * @param {?object} nextState\n\t   * @param {?object} nextContext\n\t   * @return {boolean} True if the component should update.\n\t   * @optional\n\t   */\n\t  shouldComponentUpdate: 'DEFINE_ONCE',\n\t\n\t  /**\n\t   * Invoked when the component is about to update due to a transition from\n\t   * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`\n\t   * and `nextContext`.\n\t   *\n\t   * Use this as an opportunity to perform preparation before an update occurs.\n\t   *\n\t   * NOTE: You **cannot** use `this.setState()` in this method.\n\t   *\n\t   * @param {object} nextProps\n\t   * @param {?object} nextState\n\t   * @param {?object} nextContext\n\t   * @param {ReactReconcileTransaction} transaction\n\t   * @optional\n\t   */\n\t  componentWillUpdate: 'DEFINE_MANY',\n\t\n\t  /**\n\t   * Invoked when the component's DOM representation has been updated.\n\t   *\n\t   * Use this as an opportunity to operate on the DOM when the component has\n\t   * been updated.\n\t   *\n\t   * @param {object} prevProps\n\t   * @param {?object} prevState\n\t   * @param {?object} prevContext\n\t   * @param {DOMElement} rootNode DOM element representing the component.\n\t   * @optional\n\t   */\n\t  componentDidUpdate: 'DEFINE_MANY',\n\t\n\t  /**\n\t   * Invoked when the component is about to be removed from its parent and have\n\t   * its DOM representation destroyed.\n\t   *\n\t   * Use this as an opportunity to deallocate any external resources.\n\t   *\n\t   * NOTE: There is no `componentDidUnmount` since your component will have been\n\t   * destroyed by that point.\n\t   *\n\t   * @optional\n\t   */\n\t  componentWillUnmount: 'DEFINE_MANY',\n\t\n\t  // ==== Advanced methods ====\n\t\n\t  /**\n\t   * Updates the component's currently mounted DOM representation.\n\t   *\n\t   * By default, this implements React's rendering and reconciliation algorithm.\n\t   * Sophisticated clients may wish to override this.\n\t   *\n\t   * @param {ReactReconcileTransaction} transaction\n\t   * @internal\n\t   * @overridable\n\t   */\n\t  updateComponent: 'OVERRIDE_BASE'\n\t\n\t};\n\t\n\t/**\n\t * Mapping from class specification keys to special processing functions.\n\t *\n\t * Although these are declared like instance properties in the specification\n\t * when defining classes using `React.createClass`, they are actually static\n\t * and are accessible on the constructor instead of the prototype. Despite\n\t * being static, they must be defined outside of the \"statics\" key under\n\t * which all other static methods are defined.\n\t */\n\tvar RESERVED_SPEC_KEYS = {\n\t  displayName: function (Constructor, displayName) {\n\t    Constructor.displayName = displayName;\n\t  },\n\t  mixins: function (Constructor, mixins) {\n\t    if (mixins) {\n\t      for (var i = 0; i < mixins.length; i++) {\n\t        mixSpecIntoComponent(Constructor, mixins[i]);\n\t      }\n\t    }\n\t  },\n\t  childContextTypes: function (Constructor, childContextTypes) {\n\t    if (false) {\n\t      validateTypeDef(Constructor, childContextTypes, 'childContext');\n\t    }\n\t    Constructor.childContextTypes = _assign({}, Constructor.childContextTypes, childContextTypes);\n\t  },\n\t  contextTypes: function (Constructor, contextTypes) {\n\t    if (false) {\n\t      validateTypeDef(Constructor, contextTypes, 'context');\n\t    }\n\t    Constructor.contextTypes = _assign({}, Constructor.contextTypes, contextTypes);\n\t  },\n\t  /**\n\t   * Special case getDefaultProps which should move into statics but requires\n\t   * automatic merging.\n\t   */\n\t  getDefaultProps: function (Constructor, getDefaultProps) {\n\t    if (Constructor.getDefaultProps) {\n\t      Constructor.getDefaultProps = createMergedResultFunction(Constructor.getDefaultProps, getDefaultProps);\n\t    } else {\n\t      Constructor.getDefaultProps = getDefaultProps;\n\t    }\n\t  },\n\t  propTypes: function (Constructor, propTypes) {\n\t    if (false) {\n\t      validateTypeDef(Constructor, propTypes, 'prop');\n\t    }\n\t    Constructor.propTypes = _assign({}, Constructor.propTypes, propTypes);\n\t  },\n\t  statics: function (Constructor, statics) {\n\t    mixStaticSpecIntoComponent(Constructor, statics);\n\t  },\n\t  autobind: function () {} };\n\t\n\tfunction validateTypeDef(Constructor, typeDef, location) {\n\t  for (var propName in typeDef) {\n\t    if (typeDef.hasOwnProperty(propName)) {\n\t      // use a warning instead of an invariant so components\n\t      // don't show up in prod but only in __DEV__\n\t       false ? warning(typeof typeDef[propName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', Constructor.displayName || 'ReactClass', ReactPropTypeLocationNames[location], propName) : void 0;\n\t    }\n\t  }\n\t}\n\t\n\tfunction validateMethodOverride(isAlreadyDefined, name) {\n\t  var specPolicy = ReactClassInterface.hasOwnProperty(name) ? ReactClassInterface[name] : null;\n\t\n\t  // Disallow overriding of base class methods unless explicitly allowed.\n\t  if (ReactClassMixin.hasOwnProperty(name)) {\n\t    !(specPolicy === 'OVERRIDE_BASE') ?  false ? invariant(false, 'ReactClassInterface: You are attempting to override `%s` from your class specification. Ensure that your method names do not overlap with React methods.', name) : _prodInvariant('73', name) : void 0;\n\t  }\n\t\n\t  // Disallow defining methods more than once unless explicitly allowed.\n\t  if (isAlreadyDefined) {\n\t    !(specPolicy === 'DEFINE_MANY' || specPolicy === 'DEFINE_MANY_MERGED') ?  false ? invariant(false, 'ReactClassInterface: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.', name) : _prodInvariant('74', name) : void 0;\n\t  }\n\t}\n\t\n\t/**\n\t * Mixin helper which handles policy validation and reserved\n\t * specification keys when building React classes.\n\t */\n\tfunction mixSpecIntoComponent(Constructor, spec) {\n\t  if (!spec) {\n\t    if (false) {\n\t      var typeofSpec = typeof spec;\n\t      var isMixinValid = typeofSpec === 'object' && spec !== null;\n\t\n\t      process.env.NODE_ENV !== 'production' ? warning(isMixinValid, '%s: You\\'re attempting to include a mixin that is either null ' + 'or not an object. Check the mixins included by the component, ' + 'as well as any mixins they include themselves. ' + 'Expected object but got %s.', Constructor.displayName || 'ReactClass', spec === null ? null : typeofSpec) : void 0;\n\t    }\n\t\n\t    return;\n\t  }\n\t\n\t  !(typeof spec !== 'function') ?  false ? invariant(false, 'ReactClass: You\\'re attempting to use a component class or function as a mixin. Instead, just use a regular object.') : _prodInvariant('75') : void 0;\n\t  !!ReactElement.isValidElement(spec) ?  false ? invariant(false, 'ReactClass: You\\'re attempting to use a component as a mixin. Instead, just use a regular object.') : _prodInvariant('76') : void 0;\n\t\n\t  var proto = Constructor.prototype;\n\t  var autoBindPairs = proto.__reactAutoBindPairs;\n\t\n\t  // By handling mixins before any other properties, we ensure the same\n\t  // chaining order is applied to methods with DEFINE_MANY policy, whether\n\t  // mixins are listed before or after these methods in the spec.\n\t  if (spec.hasOwnProperty(MIXINS_KEY)) {\n\t    RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);\n\t  }\n\t\n\t  for (var name in spec) {\n\t    if (!spec.hasOwnProperty(name)) {\n\t      continue;\n\t    }\n\t\n\t    if (name === MIXINS_KEY) {\n\t      // We have already handled mixins in a special case above.\n\t      continue;\n\t    }\n\t\n\t    var property = spec[name];\n\t    var isAlreadyDefined = proto.hasOwnProperty(name);\n\t    validateMethodOverride(isAlreadyDefined, name);\n\t\n\t    if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {\n\t      RESERVED_SPEC_KEYS[name](Constructor, property);\n\t    } else {\n\t      // Setup methods on prototype:\n\t      // The following member methods should not be automatically bound:\n\t      // 1. Expected ReactClass methods (in the \"interface\").\n\t      // 2. Overridden methods (that were mixed in).\n\t      var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);\n\t      var isFunction = typeof property === 'function';\n\t      var shouldAutoBind = isFunction && !isReactClassMethod && !isAlreadyDefined && spec.autobind !== false;\n\t\n\t      if (shouldAutoBind) {\n\t        autoBindPairs.push(name, property);\n\t        proto[name] = property;\n\t      } else {\n\t        if (isAlreadyDefined) {\n\t          var specPolicy = ReactClassInterface[name];\n\t\n\t          // These cases should already be caught by validateMethodOverride.\n\t          !(isReactClassMethod && (specPolicy === 'DEFINE_MANY_MERGED' || specPolicy === 'DEFINE_MANY')) ?  false ? invariant(false, 'ReactClass: Unexpected spec policy %s for key %s when mixing in component specs.', specPolicy, name) : _prodInvariant('77', specPolicy, name) : void 0;\n\t\n\t          // For methods which are defined more than once, call the existing\n\t          // methods before calling the new property, merging if appropriate.\n\t          if (specPolicy === 'DEFINE_MANY_MERGED') {\n\t            proto[name] = createMergedResultFunction(proto[name], property);\n\t          } else if (specPolicy === 'DEFINE_MANY') {\n\t            proto[name] = createChainedFunction(proto[name], property);\n\t          }\n\t        } else {\n\t          proto[name] = property;\n\t          if (false) {\n\t            // Add verbose displayName to the function, which helps when looking\n\t            // at profiling tools.\n\t            if (typeof property === 'function' && spec.displayName) {\n\t              proto[name].displayName = spec.displayName + '_' + name;\n\t            }\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\tfunction mixStaticSpecIntoComponent(Constructor, statics) {\n\t  if (!statics) {\n\t    return;\n\t  }\n\t  for (var name in statics) {\n\t    var property = statics[name];\n\t    if (!statics.hasOwnProperty(name)) {\n\t      continue;\n\t    }\n\t\n\t    var isReserved = name in RESERVED_SPEC_KEYS;\n\t    !!isReserved ?  false ? invariant(false, 'ReactClass: You are attempting to define a reserved property, `%s`, that shouldn\\'t be on the \"statics\" key. Define it as an instance property instead; it will still be accessible on the constructor.', name) : _prodInvariant('78', name) : void 0;\n\t\n\t    var isInherited = name in Constructor;\n\t    !!isInherited ?  false ? invariant(false, 'ReactClass: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.', name) : _prodInvariant('79', name) : void 0;\n\t    Constructor[name] = property;\n\t  }\n\t}\n\t\n\t/**\n\t * Merge two objects, but throw if both contain the same key.\n\t *\n\t * @param {object} one The first object, which is mutated.\n\t * @param {object} two The second object\n\t * @return {object} one after it has been mutated to contain everything in two.\n\t */\n\tfunction mergeIntoWithNoDuplicateKeys(one, two) {\n\t  !(one && two && typeof one === 'object' && typeof two === 'object') ?  false ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.') : _prodInvariant('80') : void 0;\n\t\n\t  for (var key in two) {\n\t    if (two.hasOwnProperty(key)) {\n\t      !(one[key] === undefined) ?  false ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Tried to merge two objects with the same key: `%s`. This conflict may be due to a mixin; in particular, this may be caused by two getInitialState() or getDefaultProps() methods returning objects with clashing keys.', key) : _prodInvariant('81', key) : void 0;\n\t      one[key] = two[key];\n\t    }\n\t  }\n\t  return one;\n\t}\n\t\n\t/**\n\t * Creates a function that invokes two functions and merges their return values.\n\t *\n\t * @param {function} one Function to invoke first.\n\t * @param {function} two Function to invoke second.\n\t * @return {function} Function that invokes the two argument functions.\n\t * @private\n\t */\n\tfunction createMergedResultFunction(one, two) {\n\t  return function mergedResult() {\n\t    var a = one.apply(this, arguments);\n\t    var b = two.apply(this, arguments);\n\t    if (a == null) {\n\t      return b;\n\t    } else if (b == null) {\n\t      return a;\n\t    }\n\t    var c = {};\n\t    mergeIntoWithNoDuplicateKeys(c, a);\n\t    mergeIntoWithNoDuplicateKeys(c, b);\n\t    return c;\n\t  };\n\t}\n\t\n\t/**\n\t * Creates a function that invokes two functions and ignores their return vales.\n\t *\n\t * @param {function} one Function to invoke first.\n\t * @param {function} two Function to invoke second.\n\t * @return {function} Function that invokes the two argument functions.\n\t * @private\n\t */\n\tfunction createChainedFunction(one, two) {\n\t  return function chainedFunction() {\n\t    one.apply(this, arguments);\n\t    two.apply(this, arguments);\n\t  };\n\t}\n\t\n\t/**\n\t * Binds a method to the component.\n\t *\n\t * @param {object} component Component whose method is going to be bound.\n\t * @param {function} method Method to be bound.\n\t * @return {function} The bound method.\n\t */\n\tfunction bindAutoBindMethod(component, method) {\n\t  var boundMethod = method.bind(component);\n\t  if (false) {\n\t    boundMethod.__reactBoundContext = component;\n\t    boundMethod.__reactBoundMethod = method;\n\t    boundMethod.__reactBoundArguments = null;\n\t    var componentName = component.constructor.displayName;\n\t    var _bind = boundMethod.bind;\n\t    boundMethod.bind = function (newThis) {\n\t      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n\t        args[_key - 1] = arguments[_key];\n\t      }\n\t\n\t      // User is trying to bind() an autobound method; we effectively will\n\t      // ignore the value of \"this\" that the user is trying to use, so\n\t      // let's warn.\n\t      if (newThis !== component && newThis !== null) {\n\t        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): React component methods may only be bound to the ' + 'component instance. See %s', componentName) : void 0;\n\t      } else if (!args.length) {\n\t        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): You are binding a component method to the component. ' + 'React does this for you automatically in a high-performance ' + 'way, so you can safely remove this call. See %s', componentName) : void 0;\n\t        return boundMethod;\n\t      }\n\t      var reboundMethod = _bind.apply(boundMethod, arguments);\n\t      reboundMethod.__reactBoundContext = component;\n\t      reboundMethod.__reactBoundMethod = method;\n\t      reboundMethod.__reactBoundArguments = args;\n\t      return reboundMethod;\n\t    };\n\t  }\n\t  return boundMethod;\n\t}\n\t\n\t/**\n\t * Binds all auto-bound methods in a component.\n\t *\n\t * @param {object} component Component whose method is going to be bound.\n\t */\n\tfunction bindAutoBindMethods(component) {\n\t  var pairs = component.__reactAutoBindPairs;\n\t  for (var i = 0; i < pairs.length; i += 2) {\n\t    var autoBindKey = pairs[i];\n\t    var method = pairs[i + 1];\n\t    component[autoBindKey] = bindAutoBindMethod(component, method);\n\t  }\n\t}\n\t\n\t/**\n\t * Add more to the ReactClass base class. These are all legacy features and\n\t * therefore not already part of the modern ReactComponent.\n\t */\n\tvar ReactClassMixin = {\n\t\n\t  /**\n\t   * TODO: This will be deprecated because state should always keep a consistent\n\t   * type signature and the only use case for this, is to avoid that.\n\t   */\n\t  replaceState: function (newState, callback) {\n\t    this.updater.enqueueReplaceState(this, newState);\n\t    if (callback) {\n\t      this.updater.enqueueCallback(this, callback, 'replaceState');\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Checks whether or not this composite component is mounted.\n\t   * @return {boolean} True if mounted, false otherwise.\n\t   * @protected\n\t   * @final\n\t   */\n\t  isMounted: function () {\n\t    return this.updater.isMounted(this);\n\t  }\n\t};\n\t\n\tvar ReactClassComponent = function () {};\n\t_assign(ReactClassComponent.prototype, ReactComponent.prototype, ReactClassMixin);\n\t\n\tvar didWarnDeprecated = false;\n\t\n\t/**\n\t * Module for creating composite components.\n\t *\n\t * @class ReactClass\n\t */\n\tvar ReactClass = {\n\t\n\t  /**\n\t   * Creates a composite component class given a class specification.\n\t   * See https://facebook.github.io/react/docs/top-level-api.html#react.createclass\n\t   *\n\t   * @param {object} spec Class specification (which must define `render`).\n\t   * @return {function} Component constructor function.\n\t   * @public\n\t   */\n\t  createClass: function (spec) {\n\t    if (false) {\n\t      process.env.NODE_ENV !== 'production' ? warning(didWarnDeprecated, '%s: React.createClass is deprecated and will be removed in version 16. ' + 'Use plain JavaScript classes instead. If you\\'re not yet ready to ' + 'migrate, create-react-class is available on npm as a ' + 'drop-in replacement.', spec && spec.displayName || 'A Component') : void 0;\n\t      didWarnDeprecated = true;\n\t    }\n\t\n\t    // To keep our warnings more understandable, we'll use a little hack here to\n\t    // ensure that Constructor.name !== 'Constructor'. This makes sure we don't\n\t    // unnecessarily identify a class without displayName as 'Constructor'.\n\t    var Constructor = identity(function (props, context, updater) {\n\t      // This constructor gets overridden by mocks. The argument is used\n\t      // by mocks to assert on what gets mounted.\n\t\n\t      if (false) {\n\t        process.env.NODE_ENV !== 'production' ? warning(this instanceof Constructor, 'Something is calling a React component directly. Use a factory or ' + 'JSX instead. See: https://fb.me/react-legacyfactory') : void 0;\n\t      }\n\t\n\t      // Wire up auto-binding\n\t      if (this.__reactAutoBindPairs.length) {\n\t        bindAutoBindMethods(this);\n\t      }\n\t\n\t      this.props = props;\n\t      this.context = context;\n\t      this.refs = emptyObject;\n\t      this.updater = updater || ReactNoopUpdateQueue;\n\t\n\t      this.state = null;\n\t\n\t      // ReactClasses doesn't have constructors. Instead, they use the\n\t      // getInitialState and componentWillMount methods for initialization.\n\t\n\t      var initialState = this.getInitialState ? this.getInitialState() : null;\n\t      if (false) {\n\t        // We allow auto-mocks to proceed as if they're returning null.\n\t        if (initialState === undefined && this.getInitialState._isMockFunction) {\n\t          // This is probably bad practice. Consider warning here and\n\t          // deprecating this convenience.\n\t          initialState = null;\n\t        }\n\t      }\n\t      !(typeof initialState === 'object' && !Array.isArray(initialState)) ?  false ? invariant(false, '%s.getInitialState(): must return an object or null', Constructor.displayName || 'ReactCompositeComponent') : _prodInvariant('82', Constructor.displayName || 'ReactCompositeComponent') : void 0;\n\t\n\t      this.state = initialState;\n\t    });\n\t    Constructor.prototype = new ReactClassComponent();\n\t    Constructor.prototype.constructor = Constructor;\n\t    Constructor.prototype.__reactAutoBindPairs = [];\n\t\n\t    injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));\n\t\n\t    mixSpecIntoComponent(Constructor, spec);\n\t\n\t    // Initialize the defaultProps property after all mixins have been merged.\n\t    if (Constructor.getDefaultProps) {\n\t      Constructor.defaultProps = Constructor.getDefaultProps();\n\t    }\n\t\n\t    if (false) {\n\t      // This is a tag to indicate that the use of these method names is ok,\n\t      // since it's used with createClass. If it's not, then it's likely a\n\t      // mistake so we'll warn you to use the static property, property\n\t      // initializer or constructor respectively.\n\t      if (Constructor.getDefaultProps) {\n\t        Constructor.getDefaultProps.isReactClassApproved = {};\n\t      }\n\t      if (Constructor.prototype.getInitialState) {\n\t        Constructor.prototype.getInitialState.isReactClassApproved = {};\n\t      }\n\t    }\n\t\n\t    !Constructor.prototype.render ?  false ? invariant(false, 'createClass(...): Class specification must implement a `render` method.') : _prodInvariant('83') : void 0;\n\t\n\t    if (false) {\n\t      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentShouldUpdate, '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', spec.displayName || 'A component') : void 0;\n\t      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentWillRecieveProps, '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', spec.displayName || 'A component') : void 0;\n\t    }\n\t\n\t    // Reduce time spent doing lookups by setting these on the prototype.\n\t    for (var methodName in ReactClassInterface) {\n\t      if (!Constructor.prototype[methodName]) {\n\t        Constructor.prototype[methodName] = null;\n\t      }\n\t    }\n\t\n\t    return Constructor;\n\t  },\n\t\n\t  injection: {\n\t    injectMixin: function (mixin) {\n\t      injectedMixins.push(mixin);\n\t    }\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = ReactClass;\n\n/***/ },\n/* 173 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactElement = __webpack_require__(19);\n\t\n\t/**\n\t * Create a factory that creates HTML tag elements.\n\t *\n\t * @private\n\t */\n\tvar createDOMFactory = ReactElement.createFactory;\n\tif (false) {\n\t  var ReactElementValidator = require('./ReactElementValidator');\n\t  createDOMFactory = ReactElementValidator.createFactory;\n\t}\n\t\n\t/**\n\t * Creates a mapping from supported HTML tags to `ReactDOMComponent` classes.\n\t * This is also accessible via `React.DOM`.\n\t *\n\t * @public\n\t */\n\tvar ReactDOMFactories = {\n\t  a: createDOMFactory('a'),\n\t  abbr: createDOMFactory('abbr'),\n\t  address: createDOMFactory('address'),\n\t  area: createDOMFactory('area'),\n\t  article: createDOMFactory('article'),\n\t  aside: createDOMFactory('aside'),\n\t  audio: createDOMFactory('audio'),\n\t  b: createDOMFactory('b'),\n\t  base: createDOMFactory('base'),\n\t  bdi: createDOMFactory('bdi'),\n\t  bdo: createDOMFactory('bdo'),\n\t  big: createDOMFactory('big'),\n\t  blockquote: createDOMFactory('blockquote'),\n\t  body: createDOMFactory('body'),\n\t  br: createDOMFactory('br'),\n\t  button: createDOMFactory('button'),\n\t  canvas: createDOMFactory('canvas'),\n\t  caption: createDOMFactory('caption'),\n\t  cite: createDOMFactory('cite'),\n\t  code: createDOMFactory('code'),\n\t  col: createDOMFactory('col'),\n\t  colgroup: createDOMFactory('colgroup'),\n\t  data: createDOMFactory('data'),\n\t  datalist: createDOMFactory('datalist'),\n\t  dd: createDOMFactory('dd'),\n\t  del: createDOMFactory('del'),\n\t  details: createDOMFactory('details'),\n\t  dfn: createDOMFactory('dfn'),\n\t  dialog: createDOMFactory('dialog'),\n\t  div: createDOMFactory('div'),\n\t  dl: createDOMFactory('dl'),\n\t  dt: createDOMFactory('dt'),\n\t  em: createDOMFactory('em'),\n\t  embed: createDOMFactory('embed'),\n\t  fieldset: createDOMFactory('fieldset'),\n\t  figcaption: createDOMFactory('figcaption'),\n\t  figure: createDOMFactory('figure'),\n\t  footer: createDOMFactory('footer'),\n\t  form: createDOMFactory('form'),\n\t  h1: createDOMFactory('h1'),\n\t  h2: createDOMFactory('h2'),\n\t  h3: createDOMFactory('h3'),\n\t  h4: createDOMFactory('h4'),\n\t  h5: createDOMFactory('h5'),\n\t  h6: createDOMFactory('h6'),\n\t  head: createDOMFactory('head'),\n\t  header: createDOMFactory('header'),\n\t  hgroup: createDOMFactory('hgroup'),\n\t  hr: createDOMFactory('hr'),\n\t  html: createDOMFactory('html'),\n\t  i: createDOMFactory('i'),\n\t  iframe: createDOMFactory('iframe'),\n\t  img: createDOMFactory('img'),\n\t  input: createDOMFactory('input'),\n\t  ins: createDOMFactory('ins'),\n\t  kbd: createDOMFactory('kbd'),\n\t  keygen: createDOMFactory('keygen'),\n\t  label: createDOMFactory('label'),\n\t  legend: createDOMFactory('legend'),\n\t  li: createDOMFactory('li'),\n\t  link: createDOMFactory('link'),\n\t  main: createDOMFactory('main'),\n\t  map: createDOMFactory('map'),\n\t  mark: createDOMFactory('mark'),\n\t  menu: createDOMFactory('menu'),\n\t  menuitem: createDOMFactory('menuitem'),\n\t  meta: createDOMFactory('meta'),\n\t  meter: createDOMFactory('meter'),\n\t  nav: createDOMFactory('nav'),\n\t  noscript: createDOMFactory('noscript'),\n\t  object: createDOMFactory('object'),\n\t  ol: createDOMFactory('ol'),\n\t  optgroup: createDOMFactory('optgroup'),\n\t  option: createDOMFactory('option'),\n\t  output: createDOMFactory('output'),\n\t  p: createDOMFactory('p'),\n\t  param: createDOMFactory('param'),\n\t  picture: createDOMFactory('picture'),\n\t  pre: createDOMFactory('pre'),\n\t  progress: createDOMFactory('progress'),\n\t  q: createDOMFactory('q'),\n\t  rp: createDOMFactory('rp'),\n\t  rt: createDOMFactory('rt'),\n\t  ruby: createDOMFactory('ruby'),\n\t  s: createDOMFactory('s'),\n\t  samp: createDOMFactory('samp'),\n\t  script: createDOMFactory('script'),\n\t  section: createDOMFactory('section'),\n\t  select: createDOMFactory('select'),\n\t  small: createDOMFactory('small'),\n\t  source: createDOMFactory('source'),\n\t  span: createDOMFactory('span'),\n\t  strong: createDOMFactory('strong'),\n\t  style: createDOMFactory('style'),\n\t  sub: createDOMFactory('sub'),\n\t  summary: createDOMFactory('summary'),\n\t  sup: createDOMFactory('sup'),\n\t  table: createDOMFactory('table'),\n\t  tbody: createDOMFactory('tbody'),\n\t  td: createDOMFactory('td'),\n\t  textarea: createDOMFactory('textarea'),\n\t  tfoot: createDOMFactory('tfoot'),\n\t  th: createDOMFactory('th'),\n\t  thead: createDOMFactory('thead'),\n\t  time: createDOMFactory('time'),\n\t  title: createDOMFactory('title'),\n\t  tr: createDOMFactory('tr'),\n\t  track: createDOMFactory('track'),\n\t  u: createDOMFactory('u'),\n\t  ul: createDOMFactory('ul'),\n\t  'var': createDOMFactory('var'),\n\t  video: createDOMFactory('video'),\n\t  wbr: createDOMFactory('wbr'),\n\t\n\t  // SVG\n\t  circle: createDOMFactory('circle'),\n\t  clipPath: createDOMFactory('clipPath'),\n\t  defs: createDOMFactory('defs'),\n\t  ellipse: createDOMFactory('ellipse'),\n\t  g: createDOMFactory('g'),\n\t  image: createDOMFactory('image'),\n\t  line: createDOMFactory('line'),\n\t  linearGradient: createDOMFactory('linearGradient'),\n\t  mask: createDOMFactory('mask'),\n\t  path: createDOMFactory('path'),\n\t  pattern: createDOMFactory('pattern'),\n\t  polygon: createDOMFactory('polygon'),\n\t  polyline: createDOMFactory('polyline'),\n\t  radialGradient: createDOMFactory('radialGradient'),\n\t  rect: createDOMFactory('rect'),\n\t  stop: createDOMFactory('stop'),\n\t  svg: createDOMFactory('svg'),\n\t  text: createDOMFactory('text'),\n\t  tspan: createDOMFactory('tspan')\n\t};\n\t\n\tmodule.exports = ReactDOMFactories;\n\n/***/ },\n/* 174 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * \n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactPropTypeLocationNames = {};\n\t\n\tif (false) {\n\t  ReactPropTypeLocationNames = {\n\t    prop: 'prop',\n\t    context: 'context',\n\t    childContext: 'child context'\n\t  };\n\t}\n\t\n\tmodule.exports = ReactPropTypeLocationNames;\n\n/***/ },\n/* 175 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar _require = __webpack_require__(19),\n\t    isValidElement = _require.isValidElement;\n\t\n\tvar factory = __webpack_require__(183);\n\t\n\tmodule.exports = factory(isValidElement);\n\n/***/ },\n/* 176 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar _assign = __webpack_require__(30);\n\t\n\tvar ReactComponent = __webpack_require__(48);\n\tvar ReactNoopUpdateQueue = __webpack_require__(49);\n\t\n\tvar emptyObject = __webpack_require__(51);\n\t\n\t/**\n\t * Base class helpers for the updating state of a component.\n\t */\n\tfunction ReactPureComponent(props, context, updater) {\n\t  // Duplicated from ReactComponent.\n\t  this.props = props;\n\t  this.context = context;\n\t  this.refs = emptyObject;\n\t  // We initialize the default updater but the real one gets injected by the\n\t  // renderer.\n\t  this.updater = updater || ReactNoopUpdateQueue;\n\t}\n\t\n\tfunction ComponentDummy() {}\n\tComponentDummy.prototype = ReactComponent.prototype;\n\tReactPureComponent.prototype = new ComponentDummy();\n\tReactPureComponent.prototype.constructor = ReactPureComponent;\n\t// Avoid an extra prototype jump for these methods.\n\t_assign(ReactPureComponent.prototype, ReactComponent.prototype);\n\tReactPureComponent.prototype.isPureReactComponent = true;\n\t\n\tmodule.exports = ReactPureComponent;\n\n/***/ },\n/* 177 */\n121,\n/* 178 */\n140,\n/* 179 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * \n\t */\n\t\n\t'use strict';\n\t\n\tvar nextDebugID = 1;\n\t\n\tfunction getNextDebugID() {\n\t  return nextDebugID++;\n\t}\n\t\n\tmodule.exports = getNextDebugID;\n\n/***/ },\n/* 180 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(20);\n\t\n\tvar ReactElement = __webpack_require__(19);\n\t\n\tvar invariant = __webpack_require__(14);\n\t\n\t/**\n\t * Returns the first child in a collection of children and verifies that there\n\t * is only one child in the collection.\n\t *\n\t * See https://facebook.github.io/react/docs/top-level-api.html#react.children.only\n\t *\n\t * The current implementation of this function assumes that a single child gets\n\t * passed without a wrapper, but the purpose of this helper function is to\n\t * abstract away the particular structure of children.\n\t *\n\t * @param {?object} children Child collection structure.\n\t * @return {ReactElement} The first and only `ReactElement` contained in the\n\t * structure.\n\t */\n\tfunction onlyChild(children) {\n\t  !ReactElement.isValidElement(children) ?  false ? invariant(false, 'React.Children.only expected to receive a single React element child.') : _prodInvariant('143') : void 0;\n\t  return children;\n\t}\n\t\n\tmodule.exports = onlyChild;\n\n/***/ },\n/* 181 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(20);\n\t\n\tvar ReactCurrentOwner = __webpack_require__(11);\n\tvar REACT_ELEMENT_TYPE = __webpack_require__(79);\n\t\n\tvar getIteratorFn = __webpack_require__(178);\n\tvar invariant = __webpack_require__(14);\n\tvar KeyEscapeUtils = __webpack_require__(169);\n\tvar warning = __webpack_require__(12);\n\t\n\tvar SEPARATOR = '.';\n\tvar SUBSEPARATOR = ':';\n\t\n\t/**\n\t * This is inlined from ReactElement since this file is shared between\n\t * isomorphic and renderers. We could extract this to a\n\t *\n\t */\n\t\n\t/**\n\t * TODO: Test that a single child and an array with one item have the same key\n\t * pattern.\n\t */\n\t\n\tvar didWarnAboutMaps = false;\n\t\n\t/**\n\t * Generate a key string that identifies a component within a set.\n\t *\n\t * @param {*} component A component that could contain a manual key.\n\t * @param {number} index Index that is used if a manual key is not provided.\n\t * @return {string}\n\t */\n\tfunction getComponentKey(component, index) {\n\t  // Do some typechecking here since we call this blindly. We want to ensure\n\t  // that we don't block potential future ES APIs.\n\t  if (component && typeof component === 'object' && component.key != null) {\n\t    // Explicit key\n\t    return KeyEscapeUtils.escape(component.key);\n\t  }\n\t  // Implicit key determined by the index in the set\n\t  return index.toString(36);\n\t}\n\t\n\t/**\n\t * @param {?*} children Children tree container.\n\t * @param {!string} nameSoFar Name of the key path so far.\n\t * @param {!function} callback Callback to invoke with each child found.\n\t * @param {?*} traverseContext Used to pass information throughout the traversal\n\t * process.\n\t * @return {!number} The number of children in this subtree.\n\t */\n\tfunction traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {\n\t  var type = typeof children;\n\t\n\t  if (type === 'undefined' || type === 'boolean') {\n\t    // All of the above are perceived as null.\n\t    children = null;\n\t  }\n\t\n\t  if (children === null || type === 'string' || type === 'number' ||\n\t  // The following is inlined from ReactElement. This means we can optimize\n\t  // some checks. React Fiber also inlines this logic for similar purposes.\n\t  type === 'object' && children.$$typeof === REACT_ELEMENT_TYPE) {\n\t    callback(traverseContext, children,\n\t    // If it's the only child, treat the name as if it was wrapped in an array\n\t    // so that it's consistent if the number of children grows.\n\t    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);\n\t    return 1;\n\t  }\n\t\n\t  var child;\n\t  var nextName;\n\t  var subtreeCount = 0; // Count of children found in the current subtree.\n\t  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;\n\t\n\t  if (Array.isArray(children)) {\n\t    for (var i = 0; i < children.length; i++) {\n\t      child = children[i];\n\t      nextName = nextNamePrefix + getComponentKey(child, i);\n\t      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n\t    }\n\t  } else {\n\t    var iteratorFn = getIteratorFn(children);\n\t    if (iteratorFn) {\n\t      var iterator = iteratorFn.call(children);\n\t      var step;\n\t      if (iteratorFn !== children.entries) {\n\t        var ii = 0;\n\t        while (!(step = iterator.next()).done) {\n\t          child = step.value;\n\t          nextName = nextNamePrefix + getComponentKey(child, ii++);\n\t          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n\t        }\n\t      } else {\n\t        if (false) {\n\t          var mapsAsChildrenAddendum = '';\n\t          if (ReactCurrentOwner.current) {\n\t            var mapsAsChildrenOwnerName = ReactCurrentOwner.current.getName();\n\t            if (mapsAsChildrenOwnerName) {\n\t              mapsAsChildrenAddendum = ' Check the render method of `' + mapsAsChildrenOwnerName + '`.';\n\t            }\n\t          }\n\t          process.env.NODE_ENV !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.%s', mapsAsChildrenAddendum) : void 0;\n\t          didWarnAboutMaps = true;\n\t        }\n\t        // Iterator will provide entry [k,v] tuples rather than values.\n\t        while (!(step = iterator.next()).done) {\n\t          var entry = step.value;\n\t          if (entry) {\n\t            child = entry[1];\n\t            nextName = nextNamePrefix + KeyEscapeUtils.escape(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);\n\t            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n\t          }\n\t        }\n\t      }\n\t    } else if (type === 'object') {\n\t      var addendum = '';\n\t      if (false) {\n\t        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';\n\t        if (children._isReactElement) {\n\t          addendum = ' It looks like you\\'re using an element created by a different ' + 'version of React. Make sure to use only one copy of React.';\n\t        }\n\t        if (ReactCurrentOwner.current) {\n\t          var name = ReactCurrentOwner.current.getName();\n\t          if (name) {\n\t            addendum += ' Check the render method of `' + name + '`.';\n\t          }\n\t        }\n\t      }\n\t      var childrenString = String(children);\n\t       true ?  false ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : _prodInvariant('31', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : void 0;\n\t    }\n\t  }\n\t\n\t  return subtreeCount;\n\t}\n\t\n\t/**\n\t * Traverses children that are typically specified as `props.children`, but\n\t * might also be specified through attributes:\n\t *\n\t * - `traverseAllChildren(this.props.children, ...)`\n\t * - `traverseAllChildren(this.props.leftPanelChildren, ...)`\n\t *\n\t * The `traverseContext` is an optional argument that is passed through the\n\t * entire traversal. It can be used to store accumulations or anything else that\n\t * the callback might find relevant.\n\t *\n\t * @param {?*} children Children tree object.\n\t * @param {!function} callback To invoke upon traversing each child.\n\t * @param {?*} traverseContext Context for traversal.\n\t * @return {!number} The number of children in this subtree.\n\t */\n\tfunction traverseAllChildren(children, callback, traverseContext) {\n\t  if (children == null) {\n\t    return 0;\n\t  }\n\t\n\t  return traverseAllChildrenImpl(children, '', callback, traverseContext);\n\t}\n\t\n\tmodule.exports = traverseAllChildren;\n\n/***/ },\n/* 182 */\n157,\n/* 183 */\n[190, 184],\n/* 184 */\n[191, 50, 14, 12, 185, 182],\n/* 185 */\n160,\n/* 186 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tmodule.exports = __webpack_require__(18);\n\n\n/***/ },\n/* 187 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;(function(root, factory){\n\t\n\t\t//UMD\n\t\tif ( true ) {\n\t\t\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t\t\t\treturn factory();\n\t\t\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\t} else if (typeof module === \"object\") {\n\t\t\tmodule.exports = factory();\n\t \t} else {\n\t\t\troot.Tone = factory();\n\t\t}\n\t\n\t}(this, function(){\n\t\n\t\t\"use strict\";\n\t\t\n\t\tvar Tone;\n\t\t//constructs the main Tone object\n\t\tfunction Main(func){\n\t\t\tTone = func();\n\t\t}\n\t\t//invokes each of the modules with the main Tone object as the argument\n\t\tfunction Module(func){\n\t\t\tfunc(Tone);\n\t\t}\t/**\n\t\t *  Tone.js\n\t\t *  @author Yotam Mann\n\t\t *  @license http://opensource.org/licenses/MIT MIT License\n\t\t *  @copyright 2014-2017 Yotam Mann\n\t\t */\n\t\tMain(function () {\n\t\t    \n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    //\tTONE\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    /**\n\t\t\t *  @class  Tone is the base class of all other classes. It provides \n\t\t\t *          a lot of methods and functionality to all classes that extend\n\t\t\t *          it. \n\t\t\t *  \n\t\t\t *  @constructor\n\t\t\t *  @alias Tone\n\t\t\t *  @param {number} [inputs=1] the number of input nodes\n\t\t\t *  @param {number} [outputs=1] the number of output nodes\n\t\t\t */\n\t\t    var Tone = function (inputs, outputs) {\n\t\t        /**\n\t\t\t\t *  the input node(s)\n\t\t\t\t *  @type {GainNode|Array}\n\t\t\t\t */\n\t\t        if (this.isUndef(inputs) || inputs === 1) {\n\t\t            this.input = this.context.createGain();\n\t\t        } else if (inputs > 1) {\n\t\t            this.input = new Array(inputs);\n\t\t        }\n\t\t        /**\n\t\t\t\t *  the output node(s)\n\t\t\t\t *  @type {GainNode|Array}\n\t\t\t\t */\n\t\t        if (this.isUndef(outputs) || outputs === 1) {\n\t\t            this.output = this.context.createGain();\n\t\t        } else if (outputs > 1) {\n\t\t            this.output = new Array(inputs);\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Set the parameters at once. Either pass in an\n\t\t\t *  object mapping parameters to values, or to set a\n\t\t\t *  single parameter, by passing in a string and value.\n\t\t\t *  The last argument is an optional ramp time which \n\t\t\t *  will ramp any signal values to their destination value\n\t\t\t *  over the duration of the rampTime.\n\t\t\t *  @param {Object|string} params\n\t\t\t *  @param {number=} value\n\t\t\t *  @param {Time=} rampTime\n\t\t\t *  @returns {Tone} this\n\t\t\t *  @example\n\t\t\t * //set values using an object\n\t\t\t * filter.set({\n\t\t\t * \t\"frequency\" : 300,\n\t\t\t * \t\"type\" : highpass\n\t\t\t * });\n\t\t\t *  @example\n\t\t\t * filter.set(\"type\", \"highpass\");\n\t\t\t *  @example\n\t\t\t * //ramp to the value 220 over 3 seconds. \n\t\t\t * oscillator.set({\n\t\t\t * \t\"frequency\" : 220\n\t\t\t * }, 3);\n\t\t\t */\n\t\t    Tone.prototype.set = function (params, value, rampTime) {\n\t\t        if (this.isObject(params)) {\n\t\t            rampTime = value;\n\t\t        } else if (this.isString(params)) {\n\t\t            var tmpObj = {};\n\t\t            tmpObj[params] = value;\n\t\t            params = tmpObj;\n\t\t        }\n\t\t        paramLoop:\n\t\t            for (var attr in params) {\n\t\t                value = params[attr];\n\t\t                var parent = this;\n\t\t                if (attr.indexOf('.') !== -1) {\n\t\t                    var attrSplit = attr.split('.');\n\t\t                    for (var i = 0; i < attrSplit.length - 1; i++) {\n\t\t                        parent = parent[attrSplit[i]];\n\t\t                        if (parent instanceof Tone) {\n\t\t                            attrSplit.splice(0, i + 1);\n\t\t                            var innerParam = attrSplit.join('.');\n\t\t                            parent.set(innerParam, value);\n\t\t                            continue paramLoop;\n\t\t                        }\n\t\t                    }\n\t\t                    attr = attrSplit[attrSplit.length - 1];\n\t\t                }\n\t\t                var param = parent[attr];\n\t\t                if (this.isUndef(param)) {\n\t\t                    continue;\n\t\t                }\n\t\t                if (Tone.Signal && param instanceof Tone.Signal || Tone.Param && param instanceof Tone.Param) {\n\t\t                    if (param.value !== value) {\n\t\t                        if (this.isUndef(rampTime)) {\n\t\t                            param.value = value;\n\t\t                        } else {\n\t\t                            param.rampTo(value, rampTime);\n\t\t                        }\n\t\t                    }\n\t\t                } else if (param instanceof AudioParam) {\n\t\t                    if (param.value !== value) {\n\t\t                        param.value = value;\n\t\t                    }\n\t\t                } else if (param instanceof Tone) {\n\t\t                    param.set(value);\n\t\t                } else if (param !== value) {\n\t\t                    parent[attr] = value;\n\t\t                }\n\t\t            }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Get the object's attributes. Given no arguments get\n\t\t\t *  will return all available object properties and their corresponding\n\t\t\t *  values. Pass in a single attribute to retrieve or an array\n\t\t\t *  of attributes. The attribute strings can also include a \".\"\n\t\t\t *  to access deeper properties.\n\t\t\t *  @example\n\t\t\t * osc.get();\n\t\t\t * //returns {\"type\" : \"sine\", \"frequency\" : 440, ...etc}\n\t\t\t *  @example\n\t\t\t * osc.get(\"type\");\n\t\t\t * //returns { \"type\" : \"sine\"}\n\t\t\t * @example\n\t\t\t * //use dot notation to access deep properties\n\t\t\t * synth.get([\"envelope.attack\", \"envelope.release\"]);\n\t\t\t * //returns {\"envelope\" : {\"attack\" : 0.2, \"release\" : 0.4}}\n\t\t\t *  @param {Array=|string|undefined} params the parameters to get, otherwise will return \n\t\t\t *  \t\t\t\t\t                  all available.\n\t\t\t *  @returns {Object}\n\t\t\t */\n\t\t    Tone.prototype.get = function (params) {\n\t\t        if (this.isUndef(params)) {\n\t\t            params = this._collectDefaults(this.constructor);\n\t\t        } else if (this.isString(params)) {\n\t\t            params = [params];\n\t\t        }\n\t\t        var ret = {};\n\t\t        for (var i = 0; i < params.length; i++) {\n\t\t            var attr = params[i];\n\t\t            var parent = this;\n\t\t            var subRet = ret;\n\t\t            if (attr.indexOf('.') !== -1) {\n\t\t                var attrSplit = attr.split('.');\n\t\t                for (var j = 0; j < attrSplit.length - 1; j++) {\n\t\t                    var subAttr = attrSplit[j];\n\t\t                    subRet[subAttr] = subRet[subAttr] || {};\n\t\t                    subRet = subRet[subAttr];\n\t\t                    parent = parent[subAttr];\n\t\t                }\n\t\t                attr = attrSplit[attrSplit.length - 1];\n\t\t            }\n\t\t            var param = parent[attr];\n\t\t            if (this.isObject(params[attr])) {\n\t\t                subRet[attr] = param.get();\n\t\t            } else if (Tone.Signal && param instanceof Tone.Signal) {\n\t\t                subRet[attr] = param.value;\n\t\t            } else if (Tone.Param && param instanceof Tone.Param) {\n\t\t                subRet[attr] = param.value;\n\t\t            } else if (param instanceof AudioParam) {\n\t\t                subRet[attr] = param.value;\n\t\t            } else if (param instanceof Tone) {\n\t\t                subRet[attr] = param.get();\n\t\t            } else if (!this.isFunction(param) && !this.isUndef(param)) {\n\t\t                subRet[attr] = param;\n\t\t            }\n\t\t        }\n\t\t        return ret;\n\t\t    };\n\t\t    /**\n\t\t\t *  collect all of the default attributes in one\n\t\t\t *  @private\n\t\t\t *  @param {function} constr the constructor to find the defaults from\n\t\t\t *  @return {Array} all of the attributes which belong to the class\n\t\t\t */\n\t\t    Tone.prototype._collectDefaults = function (constr) {\n\t\t        var ret = [];\n\t\t        if (!this.isUndef(constr.defaults)) {\n\t\t            ret = Object.keys(constr.defaults);\n\t\t        }\n\t\t        if (!this.isUndef(constr._super)) {\n\t\t            var superDefs = this._collectDefaults(constr._super);\n\t\t            //filter out repeats\n\t\t            for (var i = 0; i < superDefs.length; i++) {\n\t\t                if (ret.indexOf(superDefs[i]) === -1) {\n\t\t                    ret.push(superDefs[i]);\n\t\t                }\n\t\t            }\n\t\t        }\n\t\t        return ret;\n\t\t    };\n\t\t    /**\n\t\t\t *  @returns {string} returns the name of the class as a string\n\t\t\t */\n\t\t    Tone.prototype.toString = function () {\n\t\t        for (var className in Tone) {\n\t\t            var isLetter = className[0].match(/^[A-Z]$/);\n\t\t            var sameConstructor = Tone[className] === this.constructor;\n\t\t            if (this.isFunction(Tone[className]) && isLetter && sameConstructor) {\n\t\t                return className;\n\t\t            }\n\t\t        }\n\t\t        return 'Tone';\n\t\t    };\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    //\tCLASS VARS\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    /**\n\t\t\t *  The number of inputs feeding into the AudioNode. \n\t\t\t *  For source nodes, this will be 0.\n\t\t\t *  @memberOf Tone#\n\t\t\t *  @name numberOfInputs\n\t\t\t *  @readOnly\n\t\t\t */\n\t\t    Object.defineProperty(Tone.prototype, 'numberOfInputs', {\n\t\t        get: function () {\n\t\t            if (this.input) {\n\t\t                if (this.isArray(this.input)) {\n\t\t                    return this.input.length;\n\t\t                } else {\n\t\t                    return 1;\n\t\t                }\n\t\t            } else {\n\t\t                return 0;\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The number of outputs coming out of the AudioNode. \n\t\t\t *  For source nodes, this will be 0.\n\t\t\t *  @memberOf Tone#\n\t\t\t *  @name numberOfInputs\n\t\t\t *  @readOnly\n\t\t\t */\n\t\t    Object.defineProperty(Tone.prototype, 'numberOfOutputs', {\n\t\t        get: function () {\n\t\t            if (this.output) {\n\t\t                if (this.isArray(this.output)) {\n\t\t                    return this.output.length;\n\t\t                } else {\n\t\t                    return 1;\n\t\t                }\n\t\t            } else {\n\t\t                return 0;\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    //\tCONNECTIONS\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    /**\n\t\t\t *  disconnect and dispose\n\t\t\t *  @returns {Tone} this\n\t\t\t */\n\t\t    Tone.prototype.dispose = function () {\n\t\t        if (!this.isUndef(this.input)) {\n\t\t            if (this.input instanceof AudioNode) {\n\t\t                this.input.disconnect();\n\t\t            }\n\t\t            this.input = null;\n\t\t        }\n\t\t        if (!this.isUndef(this.output)) {\n\t\t            if (this.output instanceof AudioNode) {\n\t\t                this.output.disconnect();\n\t\t            }\n\t\t            this.output = null;\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  connect the output of a ToneNode to an AudioParam, AudioNode, or ToneNode\n\t\t\t *  @param  {Tone | AudioParam | AudioNode} unit \n\t\t\t *  @param {number} [outputNum=0] optionally which output to connect from\n\t\t\t *  @param {number} [inputNum=0] optionally which input to connect to\n\t\t\t *  @returns {Tone} this\n\t\t\t */\n\t\t    Tone.prototype.connect = function (unit, outputNum, inputNum) {\n\t\t        if (Array.isArray(this.output)) {\n\t\t            outputNum = this.defaultArg(outputNum, 0);\n\t\t            this.output[outputNum].connect(unit, 0, inputNum);\n\t\t        } else {\n\t\t            this.output.connect(unit, outputNum, inputNum);\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  disconnect the output\n\t\t\t *  @param {Number|AudioNode} output Either the output index to disconnect\n\t\t\t *                                   if the output is an array, or the\n\t\t\t *                                   node to disconnect from.\n\t\t\t *  @returns {Tone} this\n\t\t\t */\n\t\t    Tone.prototype.disconnect = function (destination, outputNum, inputNum) {\n\t\t        if (this.isArray(this.output)) {\n\t\t            if (this.isNumber(destination)) {\n\t\t                this.output[destination].disconnect();\n\t\t            } else {\n\t\t                outputNum = this.defaultArg(outputNum, 0);\n\t\t                this.output[outputNum].disconnect(destination, 0, inputNum);\n\t\t            }\n\t\t        } else {\n\t\t            this.output.disconnect.apply(this.output, arguments);\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  connect together all of the arguments in series\n\t\t\t *  @param {...AudioParam|Tone|AudioNode} nodes\n\t\t\t *  @returns {Tone} this\n\t\t\t */\n\t\t    Tone.prototype.connectSeries = function () {\n\t\t        if (arguments.length > 1) {\n\t\t            var currentUnit = arguments[0];\n\t\t            for (var i = 1; i < arguments.length; i++) {\n\t\t                var toUnit = arguments[i];\n\t\t                currentUnit.connect(toUnit);\n\t\t                currentUnit = toUnit;\n\t\t            }\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Connect the output of this node to the rest of the nodes in series.\n\t\t\t *  @example\n\t\t\t *  //connect a node to an effect, panVol and then to the master output\n\t\t\t *  node.chain(effect, panVol, Tone.Master);\n\t\t\t *  @param {...AudioParam|Tone|AudioNode} nodes\n\t\t\t *  @returns {Tone} this\n\t\t\t */\n\t\t    Tone.prototype.chain = function () {\n\t\t        if (arguments.length > 0) {\n\t\t            var currentUnit = this;\n\t\t            for (var i = 0; i < arguments.length; i++) {\n\t\t                var toUnit = arguments[i];\n\t\t                currentUnit.connect(toUnit);\n\t\t                currentUnit = toUnit;\n\t\t            }\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  connect the output of this node to the rest of the nodes in parallel.\n\t\t\t *  @param {...AudioParam|Tone|AudioNode} nodes\n\t\t\t *  @returns {Tone} this\n\t\t\t */\n\t\t    Tone.prototype.fan = function () {\n\t\t        if (arguments.length > 0) {\n\t\t            for (var i = 0; i < arguments.length; i++) {\n\t\t                this.connect(arguments[i]);\n\t\t            }\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    //give native nodes chain and fan methods\n\t\t    AudioNode.prototype.chain = Tone.prototype.chain;\n\t\t    AudioNode.prototype.fan = Tone.prototype.fan;\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    //\tUTILITIES / HELPERS / MATHS\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    /**\n\t\t\t *  If the `given` parameter is undefined, use the `fallback`. \n\t\t\t *  If both `given` and `fallback` are object literals, it will\n\t\t\t *  return a deep copy which includes all of the parameters from both \n\t\t\t *  objects. If a parameter is undefined in given, it will return\n\t\t\t *  the fallback property. \n\t\t\t *  <br><br>\n\t\t\t *  WARNING: if object is self referential, it will go into an an \n\t\t\t *  infinite recursive loop.\n\t\t\t *  \n\t\t\t *  @param  {*} given    \n\t\t\t *  @param  {*} fallback \n\t\t\t *  @return {*}          \n\t\t\t */\n\t\t    Tone.prototype.defaultArg = function (given, fallback) {\n\t\t        if (this.isObject(given) && this.isObject(fallback)) {\n\t\t            var ret = {};\n\t\t            //make a deep copy of the given object\n\t\t            for (var givenProp in given) {\n\t\t                ret[givenProp] = this.defaultArg(fallback[givenProp], given[givenProp]);\n\t\t            }\n\t\t            for (var fallbackProp in fallback) {\n\t\t                ret[fallbackProp] = this.defaultArg(given[fallbackProp], fallback[fallbackProp]);\n\t\t            }\n\t\t            return ret;\n\t\t        } else {\n\t\t            return this.isUndef(given) ? fallback : given;\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  returns the args as an options object with given arguments\n\t\t\t *  mapped to the names provided. \n\t\t\t *\n\t\t\t *  if the args given is an array containing only one object, it is assumed\n\t\t\t *  that that's already the options object and will just return it. \n\t\t\t *  \n\t\t\t *  @param  {Array} values  the 'arguments' object of the function\n\t\t\t *  @param  {Array} keys the names of the arguments as they\n\t\t\t *                                 should appear in the options object\n\t\t\t *  @param {Object=} defaults optional defaults to mixin to the returned \n\t\t\t *                            options object                              \n\t\t\t *  @return {Object}       the options object with the names mapped to the arguments\n\t\t\t */\n\t\t    Tone.prototype.optionsObject = function (values, keys, defaults) {\n\t\t        var options = {};\n\t\t        if (values.length === 1 && this.isObject(values[0])) {\n\t\t            options = values[0];\n\t\t        } else {\n\t\t            for (var i = 0; i < keys.length; i++) {\n\t\t                options[keys[i]] = values[i];\n\t\t            }\n\t\t        }\n\t\t        if (!this.isUndef(defaults)) {\n\t\t            return this.defaultArg(options, defaults);\n\t\t        } else {\n\t\t            return options;\n\t\t        }\n\t\t    };\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    // TYPE CHECKING\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    /**\n\t\t\t *  test if the arg is undefined\n\t\t\t *  @param {*} arg the argument to test\n\t\t\t *  @returns {boolean} true if the arg is undefined\n\t\t\t *  @function\n\t\t\t */\n\t\t    Tone.prototype.isUndef = function (val) {\n\t\t        return typeof val === 'undefined';\n\t\t    };\n\t\t    /**\n\t\t\t *  test if the arg is a function\n\t\t\t *  @param {*} arg the argument to test\n\t\t\t *  @returns {boolean} true if the arg is a function\n\t\t\t *  @function\n\t\t\t */\n\t\t    Tone.prototype.isFunction = function (val) {\n\t\t        return typeof val === 'function';\n\t\t    };\n\t\t    /**\n\t\t\t *  Test if the argument is a number.\n\t\t\t *  @param {*} arg the argument to test\n\t\t\t *  @returns {boolean} true if the arg is a number\n\t\t\t */\n\t\t    Tone.prototype.isNumber = function (arg) {\n\t\t        return typeof arg === 'number';\n\t\t    };\n\t\t    /**\n\t\t\t *  Test if the given argument is an object literal (i.e. `{}`);\n\t\t\t *  @param {*} arg the argument to test\n\t\t\t *  @returns {boolean} true if the arg is an object literal.\n\t\t\t */\n\t\t    Tone.prototype.isObject = function (arg) {\n\t\t        return Object.prototype.toString.call(arg) === '[object Object]' && arg.constructor === Object;\n\t\t    };\n\t\t    /**\n\t\t\t *  Test if the argument is a boolean.\n\t\t\t *  @param {*} arg the argument to test\n\t\t\t *  @returns {boolean} true if the arg is a boolean\n\t\t\t */\n\t\t    Tone.prototype.isBoolean = function (arg) {\n\t\t        return typeof arg === 'boolean';\n\t\t    };\n\t\t    /**\n\t\t\t *  Test if the argument is an Array\n\t\t\t *  @param {*} arg the argument to test\n\t\t\t *  @returns {boolean} true if the arg is an array\n\t\t\t */\n\t\t    Tone.prototype.isArray = function (arg) {\n\t\t        return Array.isArray(arg);\n\t\t    };\n\t\t    /**\n\t\t\t *  Test if the argument is a string.\n\t\t\t *  @param {*} arg the argument to test\n\t\t\t *  @returns {boolean} true if the arg is a string\n\t\t\t */\n\t\t    Tone.prototype.isString = function (arg) {\n\t\t        return typeof arg === 'string';\n\t\t    };\n\t\t    /**\n\t\t\t *  An empty function.\n\t\t\t *  @static\n\t\t\t */\n\t\t    Tone.noOp = function () {\n\t\t    };\n\t\t    /**\n\t\t\t *  Make the property not writable. Internal use only. \n\t\t\t *  @private\n\t\t\t *  @param  {string}  property  the property to make not writable\n\t\t\t */\n\t\t    Tone.prototype._readOnly = function (property) {\n\t\t        if (Array.isArray(property)) {\n\t\t            for (var i = 0; i < property.length; i++) {\n\t\t                this._readOnly(property[i]);\n\t\t            }\n\t\t        } else {\n\t\t            Object.defineProperty(this, property, {\n\t\t                writable: false,\n\t\t                enumerable: true\n\t\t            });\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Make an attribute writeable. Interal use only. \n\t\t\t *  @private\n\t\t\t *  @param  {string}  property  the property to make writable\n\t\t\t */\n\t\t    Tone.prototype._writable = function (property) {\n\t\t        if (Array.isArray(property)) {\n\t\t            for (var i = 0; i < property.length; i++) {\n\t\t                this._writable(property[i]);\n\t\t            }\n\t\t        } else {\n\t\t            Object.defineProperty(this, property, { writable: true });\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t * Possible play states. \n\t\t\t * @enum {string}\n\t\t\t */\n\t\t    Tone.State = {\n\t\t        Started: 'started',\n\t\t        Stopped: 'stopped',\n\t\t        Paused: 'paused'\n\t\t    };\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    // CONVERSIONS\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    /**\n\t\t\t *  Equal power gain scale. Good for cross-fading.\n\t\t\t *  @param  {NormalRange} percent (0-1)\n\t\t\t *  @return {Number}         output gain (0-1)\n\t\t\t */\n\t\t    Tone.prototype.equalPowerScale = function (percent) {\n\t\t        var piFactor = 0.5 * Math.PI;\n\t\t        return Math.sin(percent * piFactor);\n\t\t    };\n\t\t    /**\n\t\t\t *  Convert decibels into gain.\n\t\t\t *  @param  {Decibels} db\n\t\t\t *  @return {Number}   \n\t\t\t */\n\t\t    Tone.prototype.dbToGain = function (db) {\n\t\t        return Math.pow(2, db / 6);\n\t\t    };\n\t\t    /**\n\t\t\t *  Convert gain to decibels.\n\t\t\t *  @param  {Number} gain (0-1)\n\t\t\t *  @return {Decibels}   \n\t\t\t */\n\t\t    Tone.prototype.gainToDb = function (gain) {\n\t\t        return 20 * (Math.log(gain) / Math.LN10);\n\t\t    };\n\t\t    /**\n\t\t\t *  Convert an interval (in semitones) to a frequency ratio.\n\t\t\t *  @param  {Interval} interval the number of semitones above the base note\n\t\t\t *  @return {number}          the frequency ratio\n\t\t\t *  @example\n\t\t\t * tone.intervalToFrequencyRatio(0); // 1\n\t\t\t * tone.intervalToFrequencyRatio(12); // 2\n\t\t\t * tone.intervalToFrequencyRatio(-12); // 0.5\n\t\t\t */\n\t\t    Tone.prototype.intervalToFrequencyRatio = function (interval) {\n\t\t        return Math.pow(2, interval / 12);\n\t\t    };\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    //\tTIMING\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    /**\n\t\t\t *  Return the current time of the AudioContext clock.\n\t\t\t *  @return {Number} the currentTime from the AudioContext\n\t\t\t */\n\t\t    Tone.prototype.now = function () {\n\t\t        return Tone.context.now();\n\t\t    };\n\t\t    /**\n\t\t\t *  Return the current time of the AudioContext clock.\n\t\t\t *  @return {Number} the currentTime from the AudioContext\n\t\t\t *  @static\n\t\t\t */\n\t\t    Tone.now = function () {\n\t\t        return Tone.context.now();\n\t\t    };\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    //\tINHERITANCE\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    /**\n\t\t\t *  have a child inherit all of Tone's (or a parent's) prototype\n\t\t\t *  to inherit the parent's properties, make sure to call \n\t\t\t *  Parent.call(this) in the child's constructor\n\t\t\t *\n\t\t\t *  based on closure library's inherit function\n\t\t\t *\n\t\t\t *  @static\n\t\t\t *  @param  {function} \tchild  \n\t\t\t *  @param  {function=} parent (optional) parent to inherit from\n\t\t\t *                             if no parent is supplied, the child\n\t\t\t *                             will inherit from Tone\n\t\t\t */\n\t\t    Tone.extend = function (child, parent) {\n\t\t        if (Tone.prototype.isUndef(parent)) {\n\t\t            parent = Tone;\n\t\t        }\n\t\t        function TempConstructor() {\n\t\t        }\n\t\t        TempConstructor.prototype = parent.prototype;\n\t\t        child.prototype = new TempConstructor();\n\t\t        /** @override */\n\t\t        child.prototype.constructor = child;\n\t\t        child._super = parent;\n\t\t    };\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    //\tCONTEXT\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    /**\n\t\t\t *  The private audio context shared by all Tone Nodes. \n\t\t\t *  @private\n\t\t\t *  @type {Tone.Context|undefined}\n\t\t\t */\n\t\t    var audioContext;\n\t\t    /**\n\t\t\t *  A static pointer to the audio context accessible as Tone.context. \n\t\t\t *  @type {Tone.Context}\n\t\t\t *  @name context\n\t\t\t *  @memberOf Tone\n\t\t\t */\n\t\t    Object.defineProperty(Tone, 'context', {\n\t\t        get: function () {\n\t\t            return audioContext;\n\t\t        },\n\t\t        set: function (context) {\n\t\t            if (Tone.Context && context instanceof Tone.Context) {\n\t\t                audioContext = context;\n\t\t            } else {\n\t\t                audioContext = new Tone.Context(context);\n\t\t            }\n\t\t            //initialize the new audio context\n\t\t            if (Tone.Context) {\n\t\t                Tone.Context.emit('init', audioContext);\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The AudioContext\n\t\t\t *  @type {Tone.Context}\n\t\t\t *  @name context\n\t\t\t *  @memberOf Tone#\n\t\t\t *  @readOnly\n\t\t\t */\n\t\t    Object.defineProperty(Tone.prototype, 'context', {\n\t\t        get: function () {\n\t\t            return Tone.context;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Tone automatically creates a context on init, but if you are working\n\t\t\t *  with other libraries which also create an AudioContext, it can be\n\t\t\t *  useful to set your own. If you are going to set your own context, \n\t\t\t *  be sure to do it at the start of your code, before creating any objects.\n\t\t\t *  @static\n\t\t\t *  @param {AudioContext} ctx The new audio context to set\n\t\t\t */\n\t\t    Tone.setContext = function (ctx) {\n\t\t        Tone.context = ctx;\n\t\t    };\n\t\t    /**\n\t\t\t *  The number of seconds of 1 processing block (128 samples)\n\t\t\t *  @type {Number}\n\t\t\t *  @name blockTime\n\t\t\t *  @memberOf Tone#\n\t\t\t *  @readOnly\n\t\t\t */\n\t\t    Object.defineProperty(Tone.prototype, 'blockTime', {\n\t\t        get: function () {\n\t\t            return 128 / this.context.sampleRate;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The duration in seconds of one sample.\n\t\t\t *  @type {Number}\n\t\t\t *  @name sampleTime\n\t\t\t *  @memberOf Tone#\n\t\t\t *  @readOnly\n\t\t\t */\n\t\t    Object.defineProperty(Tone.prototype, 'sampleTime', {\n\t\t        get: function () {\n\t\t            return 1 / this.context.sampleRate;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Whether or not all the technologies that Tone.js relies on are supported by the current browser. \n\t\t\t *  @type {Boolean}\n\t\t\t *  @name supported\n\t\t\t *  @memberOf Tone\n\t\t\t *  @readOnly\n\t\t\t */\n\t\t    Object.defineProperty(Tone, 'supported', {\n\t\t        get: function () {\n\t\t            var hasAudioContext = window.hasOwnProperty('AudioContext') || window.hasOwnProperty('webkitAudioContext');\n\t\t            var hasPromises = window.hasOwnProperty('Promise');\n\t\t            var hasWorkers = window.hasOwnProperty('Worker');\n\t\t            return hasAudioContext && hasPromises && hasWorkers;\n\t\t        }\n\t\t    });\n\t\t    Tone.version = 'r10';\n\t\t    // allow optional silencing of this log\n\t\t    if (!window.TONE_SILENCE_VERSION_LOGGING) {\n\t\t        console.log('%c * Tone.js ' + Tone.version + ' * ', 'background: #000; color: #fff');\n\t\t    }\n\t\t    return Tone;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  Base class for all Signals. Used Internally. \n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone}\n\t\t\t */\n\t\t    Tone.SignalBase = function () {\n\t\t    };\n\t\t    Tone.extend(Tone.SignalBase);\n\t\t    /**\n\t\t\t *  When signals connect to other signals or AudioParams, \n\t\t\t *  they take over the output value of that signal or AudioParam. \n\t\t\t *  For all other nodes, the behavior is the same as a default <code>connect</code>. \n\t\t\t *\n\t\t\t *  @override\n\t\t\t *  @param {AudioParam|AudioNode|Tone.Signal|Tone} node \n\t\t\t *  @param {number} [outputNumber=0] The output number to connect from.\n\t\t\t *  @param {number} [inputNumber=0] The input number to connect to.\n\t\t\t *  @returns {Tone.SignalBase} this\n\t\t\t */\n\t\t    Tone.SignalBase.prototype.connect = function (node, outputNumber, inputNumber) {\n\t\t        //zero it out so that the signal can have full control\n\t\t        if (Tone.Signal && Tone.Signal === node.constructor || Tone.Param && Tone.Param === node.constructor || Tone.TimelineSignal && Tone.TimelineSignal === node.constructor) {\n\t\t            //cancel changes\n\t\t            node._param.cancelScheduledValues(0);\n\t\t            //reset the value\n\t\t            node._param.value = 0;\n\t\t            //mark the value as overridden\n\t\t            node.overridden = true;\n\t\t        } else if (node instanceof AudioParam) {\n\t\t            node.cancelScheduledValues(0);\n\t\t            node.value = 0;\n\t\t        }\n\t\t        Tone.prototype.connect.call(this, node, outputNumber, inputNumber);\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.SignalBase;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Wraps the native Web Audio API \n\t\t\t *         [WaveShaperNode](http://webaudio.github.io/web-audio-api/#the-waveshapernode-interface).\n\t\t\t *\n\t\t\t *  @extends {Tone.SignalBase}\n\t\t\t *  @constructor\n\t\t\t *  @param {function|Array|Number} mapping The function used to define the values. \n\t\t\t *                                    The mapping function should take two arguments: \n\t\t\t *                                    the first is the value at the current position \n\t\t\t *                                    and the second is the array position. \n\t\t\t *                                    If the argument is an array, that array will be\n\t\t\t *                                    set as the wave shaping function. The input\n\t\t\t *                                    signal is an AudioRange [-1, 1] value and the output\n\t\t\t *                                    signal can take on any numerical values. \n\t\t\t *                                    \n\t\t\t *  @param {Number} [bufferLen=1024] The length of the WaveShaperNode buffer.\n\t\t\t *  @example\n\t\t\t * var timesTwo = new Tone.WaveShaper(function(val){\n\t\t\t * \treturn val * 2;\n\t\t\t * }, 2048);\n\t\t\t *  @example\n\t\t\t * //a waveshaper can also be constructed with an array of values\n\t\t\t * var invert = new Tone.WaveShaper([1, -1]);\n\t\t\t */\n\t\t    Tone.WaveShaper = function (mapping, bufferLen) {\n\t\t        /**\n\t\t\t\t *  the waveshaper\n\t\t\t\t *  @type {WaveShaperNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._shaper = this.input = this.output = this.context.createWaveShaper();\n\t\t        /**\n\t\t\t\t *  the waveshapers curve\n\t\t\t\t *  @type {Float32Array}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._curve = null;\n\t\t        if (Array.isArray(mapping)) {\n\t\t            this.curve = mapping;\n\t\t        } else if (isFinite(mapping) || this.isUndef(mapping)) {\n\t\t            this._curve = new Float32Array(this.defaultArg(mapping, 1024));\n\t\t        } else if (this.isFunction(mapping)) {\n\t\t            this._curve = new Float32Array(this.defaultArg(bufferLen, 1024));\n\t\t            this.setMap(mapping);\n\t\t        }\n\t\t    };\n\t\t    Tone.extend(Tone.WaveShaper, Tone.SignalBase);\n\t\t    /**\n\t\t\t *  Uses a mapping function to set the value of the curve. \n\t\t\t *  @param {function} mapping The function used to define the values. \n\t\t\t *                            The mapping function take two arguments: \n\t\t\t *                            the first is the value at the current position \n\t\t\t *                            which goes from -1 to 1 over the number of elements\n\t\t\t *                            in the curve array. The second argument is the array position. \n\t\t\t *  @returns {Tone.WaveShaper} this\n\t\t\t *  @example\n\t\t\t * //map the input signal from [-1, 1] to [0, 10]\n\t\t\t * shaper.setMap(function(val, index){\n\t\t\t * \treturn (val + 1) * 5;\n\t\t\t * })\n\t\t\t */\n\t\t    Tone.WaveShaper.prototype.setMap = function (mapping) {\n\t\t        for (var i = 0, len = this._curve.length; i < len; i++) {\n\t\t            var normalized = i / (len - 1) * 2 - 1;\n\t\t            this._curve[i] = mapping(normalized, i);\n\t\t        }\n\t\t        this._shaper.curve = this._curve;\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t * The array to set as the waveshaper curve. For linear curves\n\t\t\t * array length does not make much difference, but for complex curves\n\t\t\t * longer arrays will provide smoother interpolation. \n\t\t\t * @memberOf Tone.WaveShaper#\n\t\t\t * @type {Array}\n\t\t\t * @name curve\n\t\t\t */\n\t\t    Object.defineProperty(Tone.WaveShaper.prototype, 'curve', {\n\t\t        get: function () {\n\t\t            return this._shaper.curve;\n\t\t        },\n\t\t        set: function (mapping) {\n\t\t            this._curve = new Float32Array(mapping);\n\t\t            this._shaper.curve = this._curve;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * Specifies what type of oversampling (if any) should be used when \n\t\t\t * applying the shaping curve. Can either be \"none\", \"2x\" or \"4x\". \n\t\t\t * @memberOf Tone.WaveShaper#\n\t\t\t * @type {string}\n\t\t\t * @name oversample\n\t\t\t */\n\t\t    Object.defineProperty(Tone.WaveShaper.prototype, 'oversample', {\n\t\t        get: function () {\n\t\t            return this._shaper.oversample;\n\t\t        },\n\t\t        set: function (oversampling) {\n\t\t            if ([\n\t\t                    'none',\n\t\t                    '2x',\n\t\t                    '4x'\n\t\t                ].indexOf(oversampling) !== -1) {\n\t\t                this._shaper.oversample = oversampling;\n\t\t            } else {\n\t\t                throw new RangeError('Tone.WaveShaper: oversampling must be either \\'none\\', \\'2x\\', or \\'4x\\'');\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Clean up.\n\t\t\t *  @returns {Tone.WaveShaper} this\n\t\t\t */\n\t\t    Tone.WaveShaper.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._shaper.disconnect();\n\t\t        this._shaper = null;\n\t\t        this._curve = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.WaveShaper;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    /**\n\t\t\t *  @class Tone.TimeBase is a flexible encoding of time\n\t\t\t *         which can be evaluated to and from a string.\n\t\t\t *         Parsing code modified from https://code.google.com/p/tapdigit/\n\t\t\t *         Copyright 2011 2012 Ariya Hidayat, New BSD License\n\t\t\t *  @extends {Tone}\n\t\t\t *  @param  {Time}  val    The time value as a number or string\n\t\t\t *  @param  {String=}  units  Unit values\n\t\t\t *  @example\n\t\t\t * Tone.TimeBase(4, \"n\")\n\t\t\t * Tone.TimeBase(2, \"t\")\n\t\t\t * Tone.TimeBase(\"2t\").add(\"1m\")\n\t\t\t * Tone.TimeBase(\"2t + 1m\");\n\t\t\t */\n\t\t    Tone.TimeBase = function (val, units) {\n\t\t        //allows it to be constructed with or without 'new'\n\t\t        if (this instanceof Tone.TimeBase) {\n\t\t            /**\n\t\t\t\t\t *  Any expressions parsed from the Time\n\t\t\t\t\t *  @type  {Array}\n\t\t\t\t\t *  @private\n\t\t\t\t\t */\n\t\t            this._expr = this._noOp;\n\t\t            if (val instanceof Tone.TimeBase) {\n\t\t                this.copy(val);\n\t\t            } else if (!this.isUndef(units) || this.isNumber(val)) {\n\t\t                //default units\n\t\t                units = this.defaultArg(units, this._defaultUnits);\n\t\t                var method = this._primaryExpressions[units].method;\n\t\t                this._expr = method.bind(this, val);\n\t\t            } else if (this.isString(val)) {\n\t\t                this.set(val);\n\t\t            } else if (this.isUndef(val)) {\n\t\t                //default expression\n\t\t                this._expr = this._defaultExpr();\n\t\t            }\n\t\t        } else {\n\t\t            return new Tone.TimeBase(val, units);\n\t\t        }\n\t\t    };\n\t\t    Tone.extend(Tone.TimeBase);\n\t\t    /**\n\t\t\t *  Repalce the current time value with the value\n\t\t\t *  given by the expression string.\n\t\t\t *  @param  {String}  exprString\n\t\t\t *  @return {Tone.TimeBase} this\n\t\t\t */\n\t\t    Tone.TimeBase.prototype.set = function (exprString) {\n\t\t        this._expr = this._parseExprString(exprString);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Return a clone of the TimeBase object.\n\t\t\t *  @return  {Tone.TimeBase} The new cloned Tone.TimeBase\n\t\t\t */\n\t\t    Tone.TimeBase.prototype.clone = function () {\n\t\t        var instance = new this.constructor();\n\t\t        instance.copy(this);\n\t\t        return instance;\n\t\t    };\n\t\t    /**\n\t\t\t *  Copies the value of time to this Time\n\t\t\t *  @param {Tone.TimeBase} time\n\t\t\t *  @return  {TimeBase}\n\t\t\t */\n\t\t    Tone.TimeBase.prototype.copy = function (time) {\n\t\t        var val = time._expr();\n\t\t        return this.set(val);\n\t\t    };\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    //\tABSTRACT SYNTAX TREE PARSER\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    /**\n\t\t\t *  All the primary expressions.\n\t\t\t *  @private\n\t\t\t *  @type  {Object}\n\t\t\t */\n\t\t    Tone.TimeBase.prototype._primaryExpressions = {\n\t\t        'n': {\n\t\t            regexp: /^(\\d+)n/i,\n\t\t            method: function (value) {\n\t\t                value = parseInt(value);\n\t\t                if (value === 1) {\n\t\t                    return this._beatsToUnits(this._timeSignature());\n\t\t                } else {\n\t\t                    return this._beatsToUnits(4 / value);\n\t\t                }\n\t\t            }\n\t\t        },\n\t\t        't': {\n\t\t            regexp: /^(\\d+)t/i,\n\t\t            method: function (value) {\n\t\t                value = parseInt(value);\n\t\t                return this._beatsToUnits(8 / (parseInt(value) * 3));\n\t\t            }\n\t\t        },\n\t\t        'm': {\n\t\t            regexp: /^(\\d+)m/i,\n\t\t            method: function (value) {\n\t\t                return this._beatsToUnits(parseInt(value) * this._timeSignature());\n\t\t            }\n\t\t        },\n\t\t        'i': {\n\t\t            regexp: /^(\\d+)i/i,\n\t\t            method: function (value) {\n\t\t                return this._ticksToUnits(parseInt(value));\n\t\t            }\n\t\t        },\n\t\t        'hz': {\n\t\t            regexp: /^(\\d+(?:\\.\\d+)?)hz/i,\n\t\t            method: function (value) {\n\t\t                return this._frequencyToUnits(parseFloat(value));\n\t\t            }\n\t\t        },\n\t\t        'tr': {\n\t\t            regexp: /^(\\d+(?:\\.\\d+)?):(\\d+(?:\\.\\d+)?):?(\\d+(?:\\.\\d+)?)?/,\n\t\t            method: function (m, q, s) {\n\t\t                var total = 0;\n\t\t                if (m && m !== '0') {\n\t\t                    total += this._beatsToUnits(this._timeSignature() * parseFloat(m));\n\t\t                }\n\t\t                if (q && q !== '0') {\n\t\t                    total += this._beatsToUnits(parseFloat(q));\n\t\t                }\n\t\t                if (s && s !== '0') {\n\t\t                    total += this._beatsToUnits(parseFloat(s) / 4);\n\t\t                }\n\t\t                return total;\n\t\t            }\n\t\t        },\n\t\t        's': {\n\t\t            regexp: /^(\\d+(?:\\.\\d+)?s)/,\n\t\t            method: function (value) {\n\t\t                return this._secondsToUnits(parseFloat(value));\n\t\t            }\n\t\t        },\n\t\t        'samples': {\n\t\t            regexp: /^(\\d+)samples/,\n\t\t            method: function (value) {\n\t\t                return parseInt(value) / this.context.sampleRate;\n\t\t            }\n\t\t        },\n\t\t        'default': {\n\t\t            regexp: /^(\\d+(?:\\.\\d+)?)/,\n\t\t            method: function (value) {\n\t\t                return this._primaryExpressions[this._defaultUnits].method.call(this, value);\n\t\t            }\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  All the binary expressions that TimeBase can accept.\n\t\t\t *  @private\n\t\t\t *  @type  {Object}\n\t\t\t */\n\t\t    Tone.TimeBase.prototype._binaryExpressions = {\n\t\t        '+': {\n\t\t            regexp: /^\\+/,\n\t\t            precedence: 2,\n\t\t            method: function (lh, rh) {\n\t\t                return lh() + rh();\n\t\t            }\n\t\t        },\n\t\t        '-': {\n\t\t            regexp: /^\\-/,\n\t\t            precedence: 2,\n\t\t            method: function (lh, rh) {\n\t\t                return lh() - rh();\n\t\t            }\n\t\t        },\n\t\t        '*': {\n\t\t            regexp: /^\\*/,\n\t\t            precedence: 1,\n\t\t            method: function (lh, rh) {\n\t\t                return lh() * rh();\n\t\t            }\n\t\t        },\n\t\t        '/': {\n\t\t            regexp: /^\\//,\n\t\t            precedence: 1,\n\t\t            method: function (lh, rh) {\n\t\t                return lh() / rh();\n\t\t            }\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  All the unary expressions.\n\t\t\t *  @private\n\t\t\t *  @type  {Object}\n\t\t\t */\n\t\t    Tone.TimeBase.prototype._unaryExpressions = {\n\t\t        'neg': {\n\t\t            regexp: /^\\-/,\n\t\t            method: function (lh) {\n\t\t                return -lh();\n\t\t            }\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Syntactic glue which holds expressions together\n\t\t\t *  @private\n\t\t\t *  @type  {Object}\n\t\t\t */\n\t\t    Tone.TimeBase.prototype._syntaxGlue = {\n\t\t        '(': { regexp: /^\\(/ },\n\t\t        ')': { regexp: /^\\)/ }\n\t\t    };\n\t\t    /**\n\t\t\t *  tokenize the expression based on the Expressions object\n\t\t\t *  @param   {string} expr \n\t\t\t *  @return  {Object}      returns two methods on the tokenized list, next and peek\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.TimeBase.prototype._tokenize = function (expr) {\n\t\t        var position = -1;\n\t\t        var tokens = [];\n\t\t        while (expr.length > 0) {\n\t\t            expr = expr.trim();\n\t\t            var token = getNextToken(expr, this);\n\t\t            tokens.push(token);\n\t\t            expr = expr.substr(token.value.length);\n\t\t        }\n\t\t        function getNextToken(expr, context) {\n\t\t            var expressions = [\n\t\t                '_binaryExpressions',\n\t\t                '_unaryExpressions',\n\t\t                '_primaryExpressions',\n\t\t                '_syntaxGlue'\n\t\t            ];\n\t\t            for (var i = 0; i < expressions.length; i++) {\n\t\t                var group = context[expressions[i]];\n\t\t                for (var opName in group) {\n\t\t                    var op = group[opName];\n\t\t                    var reg = op.regexp;\n\t\t                    var match = expr.match(reg);\n\t\t                    if (match !== null) {\n\t\t                        return {\n\t\t                            method: op.method,\n\t\t                            precedence: op.precedence,\n\t\t                            regexp: op.regexp,\n\t\t                            value: match[0]\n\t\t                        };\n\t\t                    }\n\t\t                }\n\t\t            }\n\t\t            throw new SyntaxError('Tone.TimeBase: Unexpected token ' + expr);\n\t\t        }\n\t\t        return {\n\t\t            next: function () {\n\t\t                return tokens[++position];\n\t\t            },\n\t\t            peek: function () {\n\t\t                return tokens[position + 1];\n\t\t            }\n\t\t        };\n\t\t    };\n\t\t    /**\n\t\t\t *  Given a token, find the value within the groupName\n\t\t\t *  @param {Object} token\n\t\t\t *  @param {String} groupName\n\t\t\t *  @param {Number} precedence\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.TimeBase.prototype._matchGroup = function (token, group, prec) {\n\t\t        var ret = false;\n\t\t        if (!this.isUndef(token)) {\n\t\t            for (var opName in group) {\n\t\t                var op = group[opName];\n\t\t                if (op.regexp.test(token.value)) {\n\t\t                    if (!this.isUndef(prec)) {\n\t\t                        if (op.precedence === prec) {\n\t\t                            return op;\n\t\t                        }\n\t\t                    } else {\n\t\t                        return op;\n\t\t                    }\n\t\t                }\n\t\t            }\n\t\t        }\n\t\t        return ret;\n\t\t    };\n\t\t    /**\n\t\t\t *  Match a binary expression given the token and the precedence\n\t\t\t *  @param {Lexer} lexer\n\t\t\t *  @param {Number} precedence\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.TimeBase.prototype._parseBinary = function (lexer, precedence) {\n\t\t        if (this.isUndef(precedence)) {\n\t\t            precedence = 2;\n\t\t        }\n\t\t        var expr;\n\t\t        if (precedence < 0) {\n\t\t            expr = this._parseUnary(lexer);\n\t\t        } else {\n\t\t            expr = this._parseBinary(lexer, precedence - 1);\n\t\t        }\n\t\t        var token = lexer.peek();\n\t\t        while (token && this._matchGroup(token, this._binaryExpressions, precedence)) {\n\t\t            token = lexer.next();\n\t\t            expr = token.method.bind(this, expr, this._parseBinary(lexer, precedence - 1));\n\t\t            token = lexer.peek();\n\t\t        }\n\t\t        return expr;\n\t\t    };\n\t\t    /**\n\t\t\t *  Match a unary expression.\n\t\t\t *  @param {Lexer} lexer\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.TimeBase.prototype._parseUnary = function (lexer) {\n\t\t        var token, expr;\n\t\t        token = lexer.peek();\n\t\t        var op = this._matchGroup(token, this._unaryExpressions);\n\t\t        if (op) {\n\t\t            token = lexer.next();\n\t\t            expr = this._parseUnary(lexer);\n\t\t            return op.method.bind(this, expr);\n\t\t        }\n\t\t        return this._parsePrimary(lexer);\n\t\t    };\n\t\t    /**\n\t\t\t *  Match a primary expression (a value).\n\t\t\t *  @param {Lexer} lexer\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.TimeBase.prototype._parsePrimary = function (lexer) {\n\t\t        var token, expr;\n\t\t        token = lexer.peek();\n\t\t        if (this.isUndef(token)) {\n\t\t            throw new SyntaxError('Tone.TimeBase: Unexpected end of expression');\n\t\t        }\n\t\t        if (this._matchGroup(token, this._primaryExpressions)) {\n\t\t            token = lexer.next();\n\t\t            var matching = token.value.match(token.regexp);\n\t\t            return token.method.bind(this, matching[1], matching[2], matching[3]);\n\t\t        }\n\t\t        if (token && token.value === '(') {\n\t\t            lexer.next();\n\t\t            expr = this._parseBinary(lexer);\n\t\t            token = lexer.next();\n\t\t            if (!(token && token.value === ')')) {\n\t\t                throw new SyntaxError('Expected )');\n\t\t            }\n\t\t            return expr;\n\t\t        }\n\t\t        throw new SyntaxError('Tone.TimeBase: Cannot process token ' + token.value);\n\t\t    };\n\t\t    /**\n\t\t\t *  Recursively parse the string expression into a syntax tree.\n\t\t\t *  @param   {string} expr \n\t\t\t *  @return  {Function} the bound method to be evaluated later\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.TimeBase.prototype._parseExprString = function (exprString) {\n\t\t        if (!this.isString(exprString)) {\n\t\t            exprString = exprString.toString();\n\t\t        }\n\t\t        var lexer = this._tokenize(exprString);\n\t\t        var tree = this._parseBinary(lexer);\n\t\t        return tree;\n\t\t    };\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    //\tDEFAULTS\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    /**\n\t\t\t *  The initial expression value\n\t\t\t *  @return  {Number}  The initial value 0\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.TimeBase.prototype._noOp = function () {\n\t\t        return 0;\n\t\t    };\n\t\t    /**\n\t\t\t *  The default expression value if no arguments are given\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.TimeBase.prototype._defaultExpr = function () {\n\t\t        return this._noOp;\n\t\t    };\n\t\t    /**\n\t\t\t *  The default units if none are given.\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.TimeBase.prototype._defaultUnits = 's';\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    //\tUNIT CONVERSIONS\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    /**\n\t\t\t *  Returns the value of a frequency in the current units\n\t\t\t *  @param {Frequency} freq\n\t\t\t *  @return  {Number}\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.TimeBase.prototype._frequencyToUnits = function (freq) {\n\t\t        return 1 / freq;\n\t\t    };\n\t\t    /**\n\t\t\t *  Return the value of the beats in the current units\n\t\t\t *  @param {Number} beats\n\t\t\t *  @return  {Number}\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.TimeBase.prototype._beatsToUnits = function (beats) {\n\t\t        return 60 / Tone.Transport.bpm.value * beats;\n\t\t    };\n\t\t    /**\n\t\t\t *  Returns the value of a second in the current units\n\t\t\t *  @param {Seconds} seconds\n\t\t\t *  @return  {Number}\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.TimeBase.prototype._secondsToUnits = function (seconds) {\n\t\t        return seconds;\n\t\t    };\n\t\t    /**\n\t\t\t *  Returns the value of a tick in the current time units\n\t\t\t *  @param {Ticks} ticks\n\t\t\t *  @return  {Number}\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.TimeBase.prototype._ticksToUnits = function (ticks) {\n\t\t        return ticks * (this._beatsToUnits(1) / Tone.Transport.PPQ);\n\t\t    };\n\t\t    /**\n\t\t\t *  Return the time signature.\n\t\t\t *  @return  {Number}\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.TimeBase.prototype._timeSignature = function () {\n\t\t        return Tone.Transport.timeSignature;\n\t\t    };\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    //\tEXPRESSIONS\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    /**\n\t\t\t *  Push an expression onto the expression list\n\t\t\t *  @param  {Time}  val\n\t\t\t *  @param  {String}  type\n\t\t\t *  @param  {String}  units\n\t\t\t *  @return  {Tone.TimeBase} \n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.TimeBase.prototype._pushExpr = function (val, name, units) {\n\t\t        //create the expression\n\t\t        if (!(val instanceof Tone.TimeBase)) {\n\t\t            val = new this.constructor(val, units);\n\t\t        }\n\t\t        this._expr = this._binaryExpressions[name].method.bind(this, this._expr, val._expr);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Add to the current value.\n\t\t\t *  @param  {Time}  val    The value to add\n\t\t\t *  @param  {String=}  units  Optional units to use with the value.\n\t\t\t *  @return  {Tone.TimeBase}  this\n\t\t\t *  @example\n\t\t\t * Tone.TimeBase(\"2m\").add(\"1m\"); //\"3m\"\n\t\t\t */\n\t\t    Tone.TimeBase.prototype.add = function (val, units) {\n\t\t        return this._pushExpr(val, '+', units);\n\t\t    };\n\t\t    /**\n\t\t\t *  Subtract the value from the current time.\n\t\t\t *  @param  {Time}  val    The value to subtract\n\t\t\t *  @param  {String=}  units  Optional units to use with the value.\n\t\t\t *  @return  {Tone.TimeBase}  this\n\t\t\t *  @example\n\t\t\t * Tone.TimeBase(\"2m\").sub(\"1m\"); //\"1m\"\n\t\t\t */\n\t\t    Tone.TimeBase.prototype.sub = function (val, units) {\n\t\t        return this._pushExpr(val, '-', units);\n\t\t    };\n\t\t    /**\n\t\t\t *  Multiply the current value by the given time.\n\t\t\t *  @param  {Time}  val    The value to multiply\n\t\t\t *  @param  {String=}  units  Optional units to use with the value.\n\t\t\t *  @return  {Tone.TimeBase}  this\n\t\t\t *  @example\n\t\t\t * Tone.TimeBase(\"2m\").mult(\"2\"); //\"4m\"\n\t\t\t */\n\t\t    Tone.TimeBase.prototype.mult = function (val, units) {\n\t\t        return this._pushExpr(val, '*', units);\n\t\t    };\n\t\t    /**\n\t\t\t *  Divide the current value by the given time.\n\t\t\t *  @param  {Time}  val    The value to divide by\n\t\t\t *  @param  {String=}  units  Optional units to use with the value.\n\t\t\t *  @return  {Tone.TimeBase}  this\n\t\t\t *  @example\n\t\t\t * Tone.TimeBase(\"2m\").div(2); //\"1m\"\n\t\t\t */\n\t\t    Tone.TimeBase.prototype.div = function (val, units) {\n\t\t        return this._pushExpr(val, '/', units);\n\t\t    };\n\t\t    /**\n\t\t\t *  Evaluate the time value. Returns the time\n\t\t\t *  in seconds.\n\t\t\t *  @return  {Seconds} \n\t\t\t */\n\t\t    Tone.TimeBase.prototype.valueOf = function () {\n\t\t        return this._expr();\n\t\t    };\n\t\t    /**\n\t\t\t *  Clean up\n\t\t\t *  @return {Tone.TimeBase} this\n\t\t\t */\n\t\t    Tone.TimeBase.prototype.dispose = function () {\n\t\t        this._expr = null;\n\t\t    };\n\t\t    return Tone.TimeBase;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    /**\n\t\t\t *  @class Tone.Time is a primitive type for encoding Time values. \n\t\t\t *         Eventually all time values are evaluated to seconds\n\t\t\t *         using the `eval` method. Tone.Time can be constructed\n\t\t\t *         with or without the `new` keyword. Tone.Time can be passed\n\t\t\t *         into the parameter of any method which takes time as an argument. \n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.TimeBase}\n\t\t\t *  @param  {String|Number}  val    The time value.\n\t\t\t *  @param  {String=}  units  The units of the value.\n\t\t\t *  @example\n\t\t\t * var t = Tone.Time(\"4n\");//encodes a quarter note\n\t\t\t * t.mult(4); // multiply that value by 4\n\t\t\t * t.toNotation(); //returns \"1m\"\n\t\t\t */\n\t\t    Tone.Time = function (val, units) {\n\t\t        if (this instanceof Tone.Time) {\n\t\t            /**\n\t\t\t\t\t *  If the current clock time should\n\t\t\t\t\t *  be added to the output\n\t\t\t\t\t *  @type  {Boolean}\n\t\t\t\t\t *  @private\n\t\t\t\t\t */\n\t\t            this._plusNow = false;\n\t\t            Tone.TimeBase.call(this, val, units);\n\t\t        } else {\n\t\t            return new Tone.Time(val, units);\n\t\t        }\n\t\t    };\n\t\t    Tone.extend(Tone.Time, Tone.TimeBase);\n\t\t    //clone the expressions so that \n\t\t    //we can add more without modifying the original\n\t\t    Tone.Time.prototype._unaryExpressions = Object.create(Tone.TimeBase.prototype._unaryExpressions);\n\t\t    /*\n\t\t\t *  Adds an additional unary expression\n\t\t\t *  which quantizes values to the next subdivision\n\t\t\t *  @type {Object}\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Time.prototype._unaryExpressions.quantize = {\n\t\t        regexp: /^@/,\n\t\t        method: function (rh) {\n\t\t            return Tone.Transport.nextSubdivision(rh());\n\t\t        }\n\t\t    };\n\t\t    /*\n\t\t\t *  Adds an additional unary expression\n\t\t\t *  which adds the current clock time.\n\t\t\t *  @type {Object}\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Time.prototype._unaryExpressions.now = {\n\t\t        regexp: /^\\+/,\n\t\t        method: function (lh) {\n\t\t            this._plusNow = true;\n\t\t            return lh();\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Quantize the time by the given subdivision. Optionally add a\n\t\t\t *  percentage which will move the time value towards the ideal\n\t\t\t *  quantized value by that percentage. \n\t\t\t *  @param  {Number|Time}  val    The subdivision to quantize to\n\t\t\t *  @param  {NormalRange}  [percent=1]  Move the time value\n\t\t\t *                                   towards the quantized value by\n\t\t\t *                                   a percentage.\n\t\t\t *  @return  {Tone.Time}  this\n\t\t\t *  @example\n\t\t\t * Tone.Time(21).quantize(2) //returns 22\n\t\t\t * Tone.Time(0.6).quantize(\"4n\", 0.5) //returns 0.55\n\t\t\t */\n\t\t    Tone.Time.prototype.quantize = function (subdiv, percent) {\n\t\t        percent = this.defaultArg(percent, 1);\n\t\t        this._expr = function (expr, subdivision, percent) {\n\t\t            expr = expr();\n\t\t            subdivision = subdivision.toSeconds();\n\t\t            var multiple = Math.round(expr / subdivision);\n\t\t            var ideal = multiple * subdivision;\n\t\t            var diff = ideal - expr;\n\t\t            return expr + diff * percent;\n\t\t        }.bind(this, this._expr, new this.constructor(subdiv), percent);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Adds the clock time to the time expression at the \n\t\t\t *  moment of evaluation. \n\t\t\t *  @return  {Tone.Time}  this\n\t\t\t */\n\t\t    Tone.Time.prototype.addNow = function () {\n\t\t        this._plusNow = true;\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  @override\n\t\t\t *  Override the default value return when no arguments are passed in.\n\t\t\t *  The default value is 'now'\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Time.prototype._defaultExpr = function () {\n\t\t        this._plusNow = true;\n\t\t        return this._noOp;\n\t\t    };\n\t\t    /**\n\t\t\t *  Copies the value of time to this Time\n\t\t\t *  @param {Tone.Time} time\n\t\t\t *  @return  {Time}\n\t\t\t */\n\t\t    Tone.Time.prototype.copy = function (time) {\n\t\t        Tone.TimeBase.prototype.copy.call(this, time);\n\t\t        this._plusNow = time._plusNow;\n\t\t        return this;\n\t\t    };\n\t\t    //CONVERSIONS//////////////////////////////////////////////////////////////\n\t\t    /**\n\t\t\t *  Convert a Time to Notation. Values will be thresholded to the nearest 128th note. \n\t\t\t *  @return {Notation} \n\t\t\t *  @example\n\t\t\t * //if the Transport is at 120bpm:\n\t\t\t * Tone.Time(2).toNotation();//returns \"1m\"\n\t\t\t */\n\t\t    Tone.Time.prototype.toNotation = function () {\n\t\t        var time = this.toSeconds();\n\t\t        var testNotations = [\n\t\t            '1m',\n\t\t            '2n',\n\t\t            '4n',\n\t\t            '8n',\n\t\t            '16n',\n\t\t            '32n',\n\t\t            '64n',\n\t\t            '128n'\n\t\t        ];\n\t\t        var retNotation = this._toNotationHelper(time, testNotations);\n\t\t        //try the same thing but with tripelets\n\t\t        var testTripletNotations = [\n\t\t            '1m',\n\t\t            '2n',\n\t\t            '2t',\n\t\t            '4n',\n\t\t            '4t',\n\t\t            '8n',\n\t\t            '8t',\n\t\t            '16n',\n\t\t            '16t',\n\t\t            '32n',\n\t\t            '32t',\n\t\t            '64n',\n\t\t            '64t',\n\t\t            '128n'\n\t\t        ];\n\t\t        var retTripletNotation = this._toNotationHelper(time, testTripletNotations);\n\t\t        //choose the simpler expression of the two\n\t\t        if (retTripletNotation.split('+').length < retNotation.split('+').length) {\n\t\t            return retTripletNotation;\n\t\t        } else {\n\t\t            return retNotation;\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Helper method for Tone.toNotation\n\t\t\t *  @param {Number} units \n\t\t\t *  @param {Array} testNotations\n\t\t\t *  @return {String}\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Time.prototype._toNotationHelper = function (units, testNotations) {\n\t\t        //the threshold is the last value in the array\n\t\t        var threshold = this._notationToUnits(testNotations[testNotations.length - 1]);\n\t\t        var retNotation = '';\n\t\t        for (var i = 0; i < testNotations.length; i++) {\n\t\t            var notationTime = this._notationToUnits(testNotations[i]);\n\t\t            //account for floating point errors (i.e. round up if the value is 0.999999)\n\t\t            var multiple = units / notationTime;\n\t\t            var floatingPointError = 0.000001;\n\t\t            if (1 - multiple % 1 < floatingPointError) {\n\t\t                multiple += floatingPointError;\n\t\t            }\n\t\t            multiple = Math.floor(multiple);\n\t\t            if (multiple > 0) {\n\t\t                if (multiple === 1) {\n\t\t                    retNotation += testNotations[i];\n\t\t                } else {\n\t\t                    retNotation += multiple.toString() + '*' + testNotations[i];\n\t\t                }\n\t\t                units -= multiple * notationTime;\n\t\t                if (units < threshold) {\n\t\t                    break;\n\t\t                } else {\n\t\t                    retNotation += ' + ';\n\t\t                }\n\t\t            }\n\t\t        }\n\t\t        if (retNotation === '') {\n\t\t            retNotation = '0';\n\t\t        }\n\t\t        return retNotation;\n\t\t    };\n\t\t    /**\n\t\t\t *  Convert a notation value to the current units\n\t\t\t *  @param  {Notation}  notation \n\t\t\t *  @return  {Number} \n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Time.prototype._notationToUnits = function (notation) {\n\t\t        var primaryExprs = this._primaryExpressions;\n\t\t        var notationExprs = [\n\t\t            primaryExprs.n,\n\t\t            primaryExprs.t,\n\t\t            primaryExprs.m\n\t\t        ];\n\t\t        for (var i = 0; i < notationExprs.length; i++) {\n\t\t            var expr = notationExprs[i];\n\t\t            var match = notation.match(expr.regexp);\n\t\t            if (match) {\n\t\t                return expr.method.call(this, match[1]);\n\t\t            }\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Return the time encoded as Bars:Beats:Sixteenths.\n\t\t\t *  @return  {BarsBeatsSixteenths}\n\t\t\t */\n\t\t    Tone.Time.prototype.toBarsBeatsSixteenths = function () {\n\t\t        var quarterTime = this._beatsToUnits(1);\n\t\t        var quarters = this.toSeconds() / quarterTime;\n\t\t        var measures = Math.floor(quarters / this._timeSignature());\n\t\t        var sixteenths = quarters % 1 * 4;\n\t\t        quarters = Math.floor(quarters) % this._timeSignature();\n\t\t        sixteenths = sixteenths.toString();\n\t\t        if (sixteenths.length > 3) {\n\t\t            sixteenths = parseFloat(sixteenths).toFixed(3);\n\t\t        }\n\t\t        var progress = [\n\t\t            measures,\n\t\t            quarters,\n\t\t            sixteenths\n\t\t        ];\n\t\t        return progress.join(':');\n\t\t    };\n\t\t    /**\n\t\t\t *  Return the time in ticks.\n\t\t\t *  @return  {Ticks}\n\t\t\t */\n\t\t    Tone.Time.prototype.toTicks = function () {\n\t\t        var quarterTime = this._beatsToUnits(1);\n\t\t        var quarters = this.valueOf() / quarterTime;\n\t\t        return Math.floor(quarters * Tone.Transport.PPQ);\n\t\t    };\n\t\t    /**\n\t\t\t *  Return the time in samples\n\t\t\t *  @return  {Samples}  \n\t\t\t */\n\t\t    Tone.Time.prototype.toSamples = function () {\n\t\t        return this.toSeconds() * this.context.sampleRate;\n\t\t    };\n\t\t    /**\n\t\t\t *  Return the time as a frequency value\n\t\t\t *  @return  {Frequency} \n\t\t\t *  @example\n\t\t\t * Tone.Time(2).toFrequency(); //0.5\n\t\t\t */\n\t\t    Tone.Time.prototype.toFrequency = function () {\n\t\t        return 1 / this.toSeconds();\n\t\t    };\n\t\t    /**\n\t\t\t *  Return the time in seconds.\n\t\t\t *  @return  {Seconds} \n\t\t\t */\n\t\t    Tone.Time.prototype.toSeconds = function () {\n\t\t        return this.valueOf();\n\t\t    };\n\t\t    /**\n\t\t\t *  Return the time in milliseconds.\n\t\t\t *  @return  {Milliseconds} \n\t\t\t */\n\t\t    Tone.Time.prototype.toMilliseconds = function () {\n\t\t        return this.toSeconds() * 1000;\n\t\t    };\n\t\t    /**\n\t\t\t *  Return the time in seconds.\n\t\t\t *  @return  {Seconds} \n\t\t\t */\n\t\t    Tone.Time.prototype.valueOf = function () {\n\t\t        var val = this._expr();\n\t\t        return val + (this._plusNow ? this.now() : 0);\n\t\t    };\n\t\t    return Tone.Time;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    /**\n\t\t\t *  @class Tone.Frequency is a primitive type for encoding Frequency values. \n\t\t\t *         Eventually all time values are evaluated to hertz\n\t\t\t *         using the `eval` method. \n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.TimeBase}\n\t\t\t *  @param  {String|Number}  val    The time value.\n\t\t\t *  @param  {String=}  units  The units of the value.\n\t\t\t *  @example\n\t\t\t * Tone.Frequency(\"C3\") // 261\n\t\t\t * Tone.Frequency(38, \"midi\") //\n\t\t\t * Tone.Frequency(\"C3\").transpose(4);\n\t\t\t */\n\t\t    Tone.Frequency = function (val, units) {\n\t\t        if (this instanceof Tone.Frequency) {\n\t\t            Tone.TimeBase.call(this, val, units);\n\t\t        } else {\n\t\t            return new Tone.Frequency(val, units);\n\t\t        }\n\t\t    };\n\t\t    Tone.extend(Tone.Frequency, Tone.TimeBase);\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    //\tAUGMENT BASE EXPRESSIONS\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    //clone the expressions so that \n\t\t    //we can add more without modifying the original\n\t\t    Tone.Frequency.prototype._primaryExpressions = Object.create(Tone.TimeBase.prototype._primaryExpressions);\n\t\t    /*\n\t\t\t *  midi type primary expression\n\t\t\t *  @type {Object}\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Frequency.prototype._primaryExpressions.midi = {\n\t\t        regexp: /^(\\d+(?:\\.\\d+)?midi)/,\n\t\t        method: function (value) {\n\t\t            return this.midiToFrequency(value);\n\t\t        }\n\t\t    };\n\t\t    /*\n\t\t\t *  note type primary expression\n\t\t\t *  @type {Object}\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Frequency.prototype._primaryExpressions.note = {\n\t\t        regexp: /^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i,\n\t\t        method: function (pitch, octave) {\n\t\t            var index = noteToScaleIndex[pitch.toLowerCase()];\n\t\t            var noteNumber = index + (parseInt(octave) + 1) * 12;\n\t\t            return this.midiToFrequency(noteNumber);\n\t\t        }\n\t\t    };\n\t\t    /*\n\t\t\t *  BeatsBarsSixteenths type primary expression\n\t\t\t *  @type {Object}\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Frequency.prototype._primaryExpressions.tr = {\n\t\t        regexp: /^(\\d+(?:\\.\\d+)?):(\\d+(?:\\.\\d+)?):?(\\d+(?:\\.\\d+)?)?/,\n\t\t        method: function (m, q, s) {\n\t\t            var total = 1;\n\t\t            if (m && m !== '0') {\n\t\t                total *= this._beatsToUnits(this._timeSignature() * parseFloat(m));\n\t\t            }\n\t\t            if (q && q !== '0') {\n\t\t                total *= this._beatsToUnits(parseFloat(q));\n\t\t            }\n\t\t            if (s && s !== '0') {\n\t\t                total *= this._beatsToUnits(parseFloat(s) / 4);\n\t\t            }\n\t\t            return total;\n\t\t        }\n\t\t    };\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    //\tEXPRESSIONS\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    /**\n\t\t\t *  Transposes the frequency by the given number of semitones.\n\t\t\t *  @param  {Interval}  interval\n\t\t\t *  @return  {Tone.Frequency} this\n\t\t\t *  @example\n\t\t\t * Tone.Frequency(\"A4\").transpose(3); //\"C5\"\n\t\t\t */\n\t\t    Tone.Frequency.prototype.transpose = function (interval) {\n\t\t        this._expr = function (expr, interval) {\n\t\t            var val = expr();\n\t\t            return val * this.intervalToFrequencyRatio(interval);\n\t\t        }.bind(this, this._expr, interval);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Takes an array of semitone intervals and returns\n\t\t\t *  an array of frequencies transposed by those intervals.\n\t\t\t *  @param  {Array}  intervals\n\t\t\t *  @return  {Tone.Frequency} this\n\t\t\t *  @example\n\t\t\t * Tone.Frequency(\"A4\").harmonize([0, 3, 7]); //[\"A4\", \"C5\", \"E5\"]\n\t\t\t */\n\t\t    Tone.Frequency.prototype.harmonize = function (intervals) {\n\t\t        this._expr = function (expr, intervals) {\n\t\t            var val = expr();\n\t\t            var ret = [];\n\t\t            for (var i = 0; i < intervals.length; i++) {\n\t\t                ret[i] = val * this.intervalToFrequencyRatio(intervals[i]);\n\t\t            }\n\t\t            return ret;\n\t\t        }.bind(this, this._expr, intervals);\n\t\t        return this;\n\t\t    };\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    //\tUNIT CONVERSIONS\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    /**\n\t\t\t *  Return the value of the frequency as a MIDI note\n\t\t\t *  @return  {MIDI}\n\t\t\t *  @example\n\t\t\t * Tone.Frequency(\"C4\").toMidi(); //60\n\t\t\t */\n\t\t    Tone.Frequency.prototype.toMidi = function () {\n\t\t        return this.frequencyToMidi(this.valueOf());\n\t\t    };\n\t\t    /**\n\t\t\t *  Return the value of the frequency in Scientific Pitch Notation\n\t\t\t *  @return  {Note}\n\t\t\t *  @example\n\t\t\t * Tone.Frequency(69, \"midi\").toNote(); //\"A4\"\n\t\t\t */\n\t\t    Tone.Frequency.prototype.toNote = function () {\n\t\t        var freq = this.valueOf();\n\t\t        var log = Math.log(freq / Tone.Frequency.A4) / Math.LN2;\n\t\t        var noteNumber = Math.round(12 * log) + 57;\n\t\t        var octave = Math.floor(noteNumber / 12);\n\t\t        if (octave < 0) {\n\t\t            noteNumber += -12 * octave;\n\t\t        }\n\t\t        var noteName = scaleIndexToNote[noteNumber % 12];\n\t\t        return noteName + octave.toString();\n\t\t    };\n\t\t    /**\n\t\t\t *  Return the duration of one cycle in seconds.\n\t\t\t *  @return  {Seconds}\n\t\t\t */\n\t\t    Tone.Frequency.prototype.toSeconds = function () {\n\t\t        return 1 / this.valueOf();\n\t\t    };\n\t\t    /**\n\t\t\t *  Return the value in Hertz\n\t\t\t *  @return  {Frequency}\n\t\t\t */\n\t\t    Tone.Frequency.prototype.toFrequency = function () {\n\t\t        return this.valueOf();\n\t\t    };\n\t\t    /**\n\t\t\t *  Return the duration of one cycle in ticks\n\t\t\t *  @return  {Ticks}\n\t\t\t */\n\t\t    Tone.Frequency.prototype.toTicks = function () {\n\t\t        var quarterTime = this._beatsToUnits(1);\n\t\t        var quarters = this.valueOf() / quarterTime;\n\t\t        return Math.floor(quarters * Tone.Transport.PPQ);\n\t\t    };\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    //\tUNIT CONVERSIONS HELPERS\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    /**\n\t\t\t *  Returns the value of a frequency in the current units\n\t\t\t *  @param {Frequency} freq\n\t\t\t *  @return  {Number}\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Frequency.prototype._frequencyToUnits = function (freq) {\n\t\t        return freq;\n\t\t    };\n\t\t    /**\n\t\t\t *  Returns the value of a tick in the current time units\n\t\t\t *  @param {Ticks} ticks\n\t\t\t *  @return  {Number}\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Frequency.prototype._ticksToUnits = function (ticks) {\n\t\t        return 1 / (ticks * 60 / (Tone.Transport.bpm.value * Tone.Transport.PPQ));\n\t\t    };\n\t\t    /**\n\t\t\t *  Return the value of the beats in the current units\n\t\t\t *  @param {Number} beats\n\t\t\t *  @return  {Number}\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Frequency.prototype._beatsToUnits = function (beats) {\n\t\t        return 1 / Tone.TimeBase.prototype._beatsToUnits.call(this, beats);\n\t\t    };\n\t\t    /**\n\t\t\t *  Returns the value of a second in the current units\n\t\t\t *  @param {Seconds} seconds\n\t\t\t *  @return  {Number}\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Frequency.prototype._secondsToUnits = function (seconds) {\n\t\t        return 1 / seconds;\n\t\t    };\n\t\t    /**\n\t\t\t *  The default units if none are given.\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Frequency.prototype._defaultUnits = 'hz';\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    //\tFREQUENCY CONVERSIONS\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    /**\n\t\t\t *  Note to scale index\n\t\t\t *  @type  {Object}\n\t\t\t */\n\t\t    var noteToScaleIndex = {\n\t\t        'cbb': -2,\n\t\t        'cb': -1,\n\t\t        'c': 0,\n\t\t        'c#': 1,\n\t\t        'cx': 2,\n\t\t        'dbb': 0,\n\t\t        'db': 1,\n\t\t        'd': 2,\n\t\t        'd#': 3,\n\t\t        'dx': 4,\n\t\t        'ebb': 2,\n\t\t        'eb': 3,\n\t\t        'e': 4,\n\t\t        'e#': 5,\n\t\t        'ex': 6,\n\t\t        'fbb': 3,\n\t\t        'fb': 4,\n\t\t        'f': 5,\n\t\t        'f#': 6,\n\t\t        'fx': 7,\n\t\t        'gbb': 5,\n\t\t        'gb': 6,\n\t\t        'g': 7,\n\t\t        'g#': 8,\n\t\t        'gx': 9,\n\t\t        'abb': 7,\n\t\t        'ab': 8,\n\t\t        'a': 9,\n\t\t        'a#': 10,\n\t\t        'ax': 11,\n\t\t        'bbb': 9,\n\t\t        'bb': 10,\n\t\t        'b': 11,\n\t\t        'b#': 12,\n\t\t        'bx': 13\n\t\t    };\n\t\t    /**\n\t\t\t *  scale index to note (sharps)\n\t\t\t *  @type  {Array}\n\t\t\t */\n\t\t    var scaleIndexToNote = [\n\t\t        'C',\n\t\t        'C#',\n\t\t        'D',\n\t\t        'D#',\n\t\t        'E',\n\t\t        'F',\n\t\t        'F#',\n\t\t        'G',\n\t\t        'G#',\n\t\t        'A',\n\t\t        'A#',\n\t\t        'B'\n\t\t    ];\n\t\t    /**\n\t\t\t *  The [concert pitch](https://en.wikipedia.org/wiki/Concert_pitch)\n\t\t\t *  A4's values in Hertz. \n\t\t\t *  @type {Frequency}\n\t\t\t *  @static\n\t\t\t */\n\t\t    Tone.Frequency.A4 = 440;\n\t\t    /**\n\t\t\t *  Convert a MIDI note to frequency value. \n\t\t\t *  @param  {MIDI} midi The midi number to convert.\n\t\t\t *  @return {Frequency} the corresponding frequency value\n\t\t\t *  @example\n\t\t\t * tone.midiToFrequency(69); // returns 440\n\t\t\t */\n\t\t    Tone.Frequency.prototype.midiToFrequency = function (midi) {\n\t\t        return Tone.Frequency.A4 * Math.pow(2, (midi - 69) / 12);\n\t\t    };\n\t\t    /**\n\t\t\t *  Convert a frequency value to a MIDI note.\n\t\t\t *  @param {Frequency} frequency The value to frequency value to convert.\n\t\t\t *  @returns  {MIDI}\n\t\t\t *  @example\n\t\t\t * tone.midiToFrequency(440); // returns 69\n\t\t\t */\n\t\t    Tone.Frequency.prototype.frequencyToMidi = function (frequency) {\n\t\t        return 69 + 12 * Math.log(frequency / Tone.Frequency.A4) / Math.LN2;\n\t\t    };\n\t\t    return Tone.Frequency;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    /**\n\t\t\t *  @class Tone.TransportTime is a the time along the Transport's\n\t\t\t *         timeline. It is similar to Tone.Time, but instead of evaluating\n\t\t\t *         against the AudioContext's clock, it is evaluated against\n\t\t\t *         the Transport's position. See [TransportTime wiki](https://github.com/Tonejs/Tone.js/wiki/TransportTime).\n\t\t\t *  @constructor\n\t\t\t *  @param  {Time}  val    The time value as a number or string\n\t\t\t *  @param  {String=}  units  Unit values\n\t\t\t *  @extends {Tone.Time}\n\t\t\t */\n\t\t    Tone.TransportTime = function (val, units) {\n\t\t        if (this instanceof Tone.TransportTime) {\n\t\t            Tone.Time.call(this, val, units);\n\t\t        } else {\n\t\t            return new Tone.TransportTime(val, units);\n\t\t        }\n\t\t    };\n\t\t    Tone.extend(Tone.TransportTime, Tone.Time);\n\t\t    //clone the expressions so that \n\t\t    //we can add more without modifying the original\n\t\t    Tone.TransportTime.prototype._unaryExpressions = Object.create(Tone.Time.prototype._unaryExpressions);\n\t\t    /**\n\t\t\t *  Adds an additional unary expression\n\t\t\t *  which quantizes values to the next subdivision\n\t\t\t *  @type {Object}\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.TransportTime.prototype._unaryExpressions.quantize = {\n\t\t        regexp: /^@/,\n\t\t        method: function (rh) {\n\t\t            var subdivision = this._secondsToTicks(rh());\n\t\t            var multiple = Math.ceil(Tone.Transport.ticks / subdivision);\n\t\t            return this._ticksToUnits(multiple * subdivision);\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Convert seconds into ticks\n\t\t\t *  @param {Seconds} seconds\n\t\t\t *  @return  {Ticks}\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.TransportTime.prototype._secondsToTicks = function (seconds) {\n\t\t        var quarterTime = this._beatsToUnits(1);\n\t\t        var quarters = seconds / quarterTime;\n\t\t        return Math.round(quarters * Tone.Transport.PPQ);\n\t\t    };\n\t\t    /**\n\t\t\t *  Evaluate the time expression. Returns values in ticks\n\t\t\t *  @return {Ticks}\n\t\t\t */\n\t\t    Tone.TransportTime.prototype.valueOf = function () {\n\t\t        var val = this._secondsToTicks(this._expr());\n\t\t        return val + (this._plusNow ? Tone.Transport.ticks : 0);\n\t\t    };\n\t\t    /**\n\t\t\t *  Return the time in ticks.\n\t\t\t *  @return  {Ticks}\n\t\t\t */\n\t\t    Tone.TransportTime.prototype.toTicks = function () {\n\t\t        return this.valueOf();\n\t\t    };\n\t\t    /**\n\t\t\t *  Return the time in seconds.\n\t\t\t *  @return  {Seconds}\n\t\t\t */\n\t\t    Tone.TransportTime.prototype.toSeconds = function () {\n\t\t        var val = this._expr();\n\t\t        return val + (this._plusNow ? Tone.Transport.seconds : 0);\n\t\t    };\n\t\t    /**\n\t\t\t *  Return the time as a frequency value\n\t\t\t *  @return  {Frequency} \n\t\t\t */\n\t\t    Tone.TransportTime.prototype.toFrequency = function () {\n\t\t        return 1 / this.toSeconds();\n\t\t    };\n\t\t    return Tone.TransportTime;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Tone.Emitter gives classes which extend it\n\t\t\t *         the ability to listen for and emit events. \n\t\t\t *         Inspiration and reference from Jerome Etienne's [MicroEvent](https://github.com/jeromeetienne/microevent.js).\n\t\t\t *         MIT (c) 2011 Jerome Etienne.\n\t\t\t *         \n\t\t\t *  @extends {Tone}\n\t\t\t */\n\t\t    Tone.Emitter = function () {\n\t\t        /**\n\t\t\t\t *  Contains all of the events.\n\t\t\t\t *  @private\n\t\t\t\t *  @type  {Object}\n\t\t\t\t */\n\t\t        this._events = {};\n\t\t    };\n\t\t    Tone.extend(Tone.Emitter);\n\t\t    /**\n\t\t\t *  Bind a callback to a specific event.\n\t\t\t *  @param  {String}    event     The name of the event to listen for.\n\t\t\t *  @param  {Function}  callback  The callback to invoke when the\n\t\t\t *                                event is emitted\n\t\t\t *  @return  {Tone.Emitter}    this\n\t\t\t */\n\t\t    Tone.Emitter.prototype.on = function (event, callback) {\n\t\t        //split the event\n\t\t        var events = event.split(/\\W+/);\n\t\t        for (var i = 0; i < events.length; i++) {\n\t\t            var eventName = events[i];\n\t\t            if (!this._events.hasOwnProperty(eventName)) {\n\t\t                this._events[eventName] = [];\n\t\t            }\n\t\t            this._events[eventName].push(callback);\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Remove the event listener.\n\t\t\t *  @param  {String}    event     The event to stop listening to.\n\t\t\t *  @param  {Function=}  callback  The callback which was bound to \n\t\t\t *                                the event with Tone.Emitter.on.\n\t\t\t *                                If no callback is given, all callbacks\n\t\t\t *                                events are removed.\n\t\t\t *  @return  {Tone.Emitter}    this\n\t\t\t */\n\t\t    Tone.Emitter.prototype.off = function (event, callback) {\n\t\t        var events = event.split(/\\W+/);\n\t\t        for (var ev = 0; ev < events.length; ev++) {\n\t\t            event = events[ev];\n\t\t            if (this._events.hasOwnProperty(event)) {\n\t\t                if (Tone.prototype.isUndef(callback)) {\n\t\t                    this._events[event] = [];\n\t\t                } else {\n\t\t                    var eventList = this._events[event];\n\t\t                    for (var i = 0; i < eventList.length; i++) {\n\t\t                        if (eventList[i] === callback) {\n\t\t                            eventList.splice(i, 1);\n\t\t                        }\n\t\t                    }\n\t\t                }\n\t\t            }\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Invoke all of the callbacks bound to the event\n\t\t\t *  with any arguments passed in. \n\t\t\t *  @param  {String}  event  The name of the event.\n\t\t\t *  @param {*...} args The arguments to pass to the functions listening.\n\t\t\t *  @return  {Tone.Emitter}  this\n\t\t\t */\n\t\t    Tone.Emitter.prototype.emit = function (event) {\n\t\t        if (this._events) {\n\t\t            var args = Array.apply(null, arguments).slice(1);\n\t\t            if (this._events.hasOwnProperty(event)) {\n\t\t                var eventList = this._events[event];\n\t\t                for (var i = 0, len = eventList.length; i < len; i++) {\n\t\t                    eventList[i].apply(this, args);\n\t\t                }\n\t\t            }\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Add Emitter functions (on/off/emit) to the object\n\t\t\t *  @param  {Object|Function}  object  The object or class to extend.\n\t\t\t */\n\t\t    Tone.Emitter.mixin = function (object) {\n\t\t        var functions = [\n\t\t            'on',\n\t\t            'off',\n\t\t            'emit'\n\t\t        ];\n\t\t        object._events = {};\n\t\t        for (var i = 0; i < functions.length; i++) {\n\t\t            var func = functions[i];\n\t\t            var emitterFunc = Tone.Emitter.prototype[func];\n\t\t            object[func] = emitterFunc;\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Clean up\n\t\t\t *  @return  {Tone.Emitter}  this\n\t\t\t */\n\t\t    Tone.Emitter.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._events = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Emitter;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    /**\n\t\t\t *  shim\n\t\t\t *  @private\n\t\t\t */\n\t\t    if (!window.hasOwnProperty('AudioContext') && window.hasOwnProperty('webkitAudioContext')) {\n\t\t        window.AudioContext = window.webkitAudioContext;\n\t\t    }\n\t\t    /**\n\t\t\t *  @class Wrapper around the native AudioContext.\n\t\t\t *  @extends {Tone.Emitter}\n\t\t\t *  @param {AudioContext=} context optionally pass in a context\n\t\t\t */\n\t\t    Tone.Context = function (context) {\n\t\t        Tone.Emitter.call(this);\n\t\t        if (!context) {\n\t\t            context = new window.AudioContext();\n\t\t        }\n\t\t        this._context = context;\n\t\t        // extend all of the methods\n\t\t        for (var prop in this._context) {\n\t\t            this._defineProperty(this._context, prop);\n\t\t        }\n\t\t        ///////////////////////////////////////////////////////////////////////\n\t\t        // WORKER\n\t\t        ///////////////////////////////////////////////////////////////////////\n\t\t        /**\n\t\t\t\t *  The default latency hint\n\t\t\t\t *  @type  {String}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._latencyHint = 'interactive';\n\t\t        /**\n\t\t\t\t *  The amount of time events are scheduled\n\t\t\t\t *  into the future\n\t\t\t\t *  @type  {Number}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._lookAhead = 0.1;\n\t\t        /**\n\t\t\t\t *  How often the update look runs\n\t\t\t\t *  @type  {Number}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._updateInterval = this._lookAhead / 3;\n\t\t        /**\n\t\t\t\t *  A reference to the actual computed update interval\n\t\t\t\t *  @type  {Number}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._computedUpdateInterval = 0;\n\t\t        /**\n\t\t\t\t *  The web worker which is used to update Tone.Clock\n\t\t\t\t *  @private\n\t\t\t\t *  @type  {WebWorker}\n\t\t\t\t */\n\t\t        this._worker = this._createWorker();\n\t\t        /**\n\t\t\t\t *  An object containing all of the constants AudioBufferSourceNodes\n\t\t\t\t *  @type  {Object}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._constants = {};\n\t\t    };\n\t\t    Tone.extend(Tone.Context, Tone.Emitter);\n\t\t    Tone.Emitter.mixin(Tone.Context);\n\t\t    /**\n\t\t\t *  Define a property on this Tone.Context. \n\t\t\t *  This is used to extend the native AudioContext\n\t\t\t *  @param  {AudioContext}  context\n\t\t\t *  @param  {String}  prop \n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Context.prototype._defineProperty = function (context, prop) {\n\t\t        if (this.isUndef(this[prop])) {\n\t\t            Object.defineProperty(this, prop, {\n\t\t                get: function () {\n\t\t                    if (typeof context[prop] === 'function') {\n\t\t                        return context[prop].bind(context);\n\t\t                    } else {\n\t\t                        return context[prop];\n\t\t                    }\n\t\t                },\n\t\t                set: function (val) {\n\t\t                    context[prop] = val;\n\t\t                }\n\t\t            });\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  The current audio context time\n\t\t\t *  @return  {Number}\n\t\t\t */\n\t\t    Tone.Context.prototype.now = function () {\n\t\t        return this._context.currentTime;\n\t\t    };\n\t\t    /**\n\t\t\t *  Generate a web worker\n\t\t\t *  @return  {WebWorker}\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Context.prototype._createWorker = function () {\n\t\t        //URL Shim\n\t\t        window.URL = window.URL || window.webkitURL;\n\t\t        var blob = new Blob([//the initial timeout time\n\t\t            'var timeoutTime = ' + (this._updateInterval * 1000).toFixed(1) + ';' + //onmessage callback\n\t\t            'self.onmessage = function(msg){' + '\\ttimeoutTime = parseInt(msg.data);' + '};' + //the tick function which posts a message\n\t\t            //and schedules a new tick\n\t\t            'function tick(){' + '\\tsetTimeout(tick, timeoutTime);' + '\\tself.postMessage(\\'tick\\');' + '}' + //call tick initially\n\t\t            'tick();']);\n\t\t        var blobUrl = URL.createObjectURL(blob);\n\t\t        var worker = new Worker(blobUrl);\n\t\t        worker.addEventListener('message', function () {\n\t\t            // tick the clock\n\t\t            this.emit('tick');\n\t\t        }.bind(this));\n\t\t        //lag compensation\n\t\t        worker.addEventListener('message', function () {\n\t\t            var now = this.now();\n\t\t            if (this.isNumber(this._lastUpdate)) {\n\t\t                var diff = now - this._lastUpdate;\n\t\t                this._computedUpdateInterval = Math.max(diff, this._computedUpdateInterval * 0.97);\n\t\t            }\n\t\t            this._lastUpdate = now;\n\t\t        }.bind(this));\n\t\t        return worker;\n\t\t    };\n\t\t    /**\n\t\t\t *  Generate a looped buffer at some constant value.\n\t\t\t *  @param  {Number}  val\n\t\t\t *  @return  {BufferSourceNode}\n\t\t\t */\n\t\t    Tone.Context.prototype.getConstant = function (val) {\n\t\t        if (this._constants[val]) {\n\t\t            return this._constants[val];\n\t\t        } else {\n\t\t            var buffer = this._context.createBuffer(1, 128, this._context.sampleRate);\n\t\t            var arr = buffer.getChannelData(0);\n\t\t            for (var i = 0; i < arr.length; i++) {\n\t\t                arr[i] = val;\n\t\t            }\n\t\t            var constant = this._context.createBufferSource();\n\t\t            constant.channelCount = 1;\n\t\t            constant.channelCountMode = 'explicit';\n\t\t            constant.buffer = buffer;\n\t\t            constant.loop = true;\n\t\t            constant.start(0);\n\t\t            this._constants[val] = constant;\n\t\t            return constant;\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  This is the time that the clock is falling behind\n\t\t\t *  the scheduled update interval. The Context automatically\n\t\t\t *  adjusts for the lag and schedules further in advance.\n\t\t\t *  @type {Number}\n\t\t\t *  @memberOf Tone.Context\n\t\t\t *  @name lag\n\t\t\t *  @static\n\t\t\t *  @readOnly\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Context.prototype, 'lag', {\n\t\t        get: function () {\n\t\t            var diff = this._computedUpdateInterval - this._updateInterval;\n\t\t            diff = Math.max(diff, 0);\n\t\t            return diff;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The amount of time in advance that events are scheduled.\n\t\t\t *  The lookAhead will adjust slightly in response to the \n\t\t\t *  measured update time to try to avoid clicks.\n\t\t\t *  @type {Number}\n\t\t\t *  @memberOf Tone.Context\n\t\t\t *  @name lookAhead\n\t\t\t *  @static\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Context.prototype, 'lookAhead', {\n\t\t        get: function () {\n\t\t            return this._lookAhead;\n\t\t        },\n\t\t        set: function (lA) {\n\t\t            this._lookAhead = lA;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  How often the Web Worker callback is invoked.\n\t\t\t *  This number corresponds to how responsive the scheduling\n\t\t\t *  can be. Context.updateInterval + Context.lookAhead gives you the\n\t\t\t *  total latency between scheduling an event and hearing it.\n\t\t\t *  @type {Number}\n\t\t\t *  @memberOf Tone.Context\n\t\t\t *  @name updateInterval\n\t\t\t *  @static\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Context.prototype, 'updateInterval', {\n\t\t        get: function () {\n\t\t            return this._updateInterval;\n\t\t        },\n\t\t        set: function (interval) {\n\t\t            this._updateInterval = Math.max(interval, Tone.prototype.blockTime);\n\t\t            this._worker.postMessage(Math.max(interval * 1000, 1));\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The type of playback, which affects tradeoffs between audio \n\t\t\t *  output latency and responsiveness. \n\t\t\t *  \n\t\t\t *  In addition to setting the value in seconds, the latencyHint also\n\t\t\t *  accepts the strings \"interactive\" (prioritizes low latency), \n\t\t\t *  \"playback\" (prioritizes sustained playback), \"balanced\" (balances\n\t\t\t *  latency and performance), and \"fastest\" (lowest latency, might glitch more often). \n\t\t\t *  @type {String|Seconds}\n\t\t\t *  @memberOf Tone.Context#\n\t\t\t *  @name latencyHint\n\t\t\t *  @static\n\t\t\t *  @example\n\t\t\t * //set the lookAhead to 0.3 seconds\n\t\t\t * Tone.context.latencyHint = 0.3;\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Context.prototype, 'latencyHint', {\n\t\t        get: function () {\n\t\t            return this._latencyHint;\n\t\t        },\n\t\t        set: function (hint) {\n\t\t            var lookAhead = hint;\n\t\t            this._latencyHint = hint;\n\t\t            if (this.isString(hint)) {\n\t\t                switch (hint) {\n\t\t                case 'interactive':\n\t\t                    lookAhead = 0.1;\n\t\t                    this._context.latencyHint = hint;\n\t\t                    break;\n\t\t                case 'playback':\n\t\t                    lookAhead = 0.8;\n\t\t                    this._context.latencyHint = hint;\n\t\t                    break;\n\t\t                case 'balanced':\n\t\t                    lookAhead = 0.25;\n\t\t                    this._context.latencyHint = hint;\n\t\t                    break;\n\t\t                case 'fastest':\n\t\t                    lookAhead = 0.01;\n\t\t                    break;\n\t\t                }\n\t\t            }\n\t\t            this.lookAhead = lookAhead;\n\t\t            this.updateInterval = lookAhead / 3;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Shim all connect/disconnect and some deprecated methods which are still in\n\t\t\t *  some older implementations.\n\t\t\t *  @private\n\t\t\t */\n\t\t    function shimConnect() {\n\t\t        var nativeConnect = AudioNode.prototype.connect;\n\t\t        var nativeDisconnect = AudioNode.prototype.disconnect;\n\t\t        //replace the old connect method\n\t\t        function toneConnect(B, outNum, inNum) {\n\t\t            if (B.input) {\n\t\t                if (Array.isArray(B.input)) {\n\t\t                    if (Tone.prototype.isUndef(inNum)) {\n\t\t                        inNum = 0;\n\t\t                    }\n\t\t                    this.connect(B.input[inNum]);\n\t\t                } else {\n\t\t                    this.connect(B.input, outNum, inNum);\n\t\t                }\n\t\t            } else {\n\t\t                try {\n\t\t                    if (B instanceof AudioNode) {\n\t\t                        nativeConnect.call(this, B, outNum, inNum);\n\t\t                    } else {\n\t\t                        nativeConnect.call(this, B, outNum);\n\t\t                    }\n\t\t                } catch (e) {\n\t\t                    throw new Error('error connecting to node: ' + B + '\\n' + e);\n\t\t                }\n\t\t            }\n\t\t        }\n\t\t        //replace the old disconnect method\n\t\t        function toneDisconnect(B, outNum, inNum) {\n\t\t            if (B && B.input && Array.isArray(B.input)) {\n\t\t                if (Tone.prototype.isUndef(inNum)) {\n\t\t                    inNum = 0;\n\t\t                }\n\t\t                this.disconnect(B.input[inNum], outNum, inNum);\n\t\t            } else if (B && B.input) {\n\t\t                this.disconnect(B.input, outNum, inNum);\n\t\t            } else {\n\t\t                try {\n\t\t                    nativeDisconnect.apply(this, arguments);\n\t\t                } catch (e) {\n\t\t                    throw new Error('error disconnecting node: ' + B + '\\n' + e);\n\t\t                }\n\t\t            }\n\t\t        }\n\t\t        if (AudioNode.prototype.connect !== toneConnect) {\n\t\t            AudioNode.prototype.connect = toneConnect;\n\t\t            AudioNode.prototype.disconnect = toneDisconnect;\n\t\t        }\n\t\t    }\n\t\t    // set the audio context initially\n\t\t    if (Tone.supported) {\n\t\t        shimConnect();\n\t\t        Tone.context = new Tone.Context();\n\t\t    } else {\n\t\t        console.warn('This browser does not support Tone.js');\n\t\t    }\n\t\t    return Tone.Context;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    //\tTYPES\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    /**\n\t\t\t * Units which a value can take on.\n\t\t\t * @enum {String}\n\t\t\t */\n\t\t    Tone.Type = {\n\t\t        /** \n\t\t\t\t *  Default units\n\t\t\t\t *  @typedef {Default}\n\t\t\t\t */\n\t\t        Default: 'number',\n\t\t        /**\n\t\t\t\t *  Time can be described in a number of ways. Read more [Time](https://github.com/Tonejs/Tone.js/wiki/Time).\n\t\t\t\t *\n\t\t\t\t *  <ul>\n\t\t\t\t *  <li>Numbers, which will be taken literally as the time (in seconds).</li>\n\t\t\t\t *  <li>Notation, (\"4n\", \"8t\") describes time in BPM and time signature relative values.</li>\n\t\t\t\t *  <li>TransportTime, (\"4:3:2\") will also provide tempo and time signature relative times \n\t\t\t\t *  in the form BARS:QUARTERS:SIXTEENTHS.</li>\n\t\t\t\t *  <li>Frequency, (\"8hz\") is converted to the length of the cycle in seconds.</li>\n\t\t\t\t *  <li>Now-Relative, (\"+1\") prefix any of the above with \"+\" and it will be interpreted as \n\t\t\t\t *  \"the current time plus whatever expression follows\".</li>\n\t\t\t\t *  <li>Expressions, (\"3:0 + 2 - (1m / 7)\") any of the above can also be combined \n\t\t\t\t *  into a mathematical expression which will be evaluated to compute the desired time.</li>\n\t\t\t\t *  <li>No Argument, for methods which accept time, no argument will be interpreted as \n\t\t\t\t *  \"now\" (i.e. the currentTime).</li>\n\t\t\t\t *  </ul>\n\t\t\t\t *  \n\t\t\t\t *  @typedef {Time}\n\t\t\t\t */\n\t\t        Time: 'time',\n\t\t        /**\n\t\t\t\t *  Frequency can be described similar to time, except ultimately the\n\t\t\t\t *  values are converted to frequency instead of seconds. A number\n\t\t\t\t *  is taken literally as the value in hertz. Additionally any of the \n\t\t\t\t *  Time encodings can be used. Note names in the form\n\t\t\t\t *  of NOTE OCTAVE (i.e. C4) are also accepted and converted to their\n\t\t\t\t *  frequency value. \n\t\t\t\t *  @typedef {Frequency}\n\t\t\t\t */\n\t\t        Frequency: 'frequency',\n\t\t        /**\n\t\t\t\t *  TransportTime describes a position along the Transport's timeline. It is\n\t\t\t\t *  similar to Time in that it uses all the same encodings, but TransportTime specifically\n\t\t\t\t *  pertains to the Transport's timeline, which is startable, stoppable, loopable, and seekable. \n\t\t\t\t *  [Read more](https://github.com/Tonejs/Tone.js/wiki/TransportTime)\n\t\t\t\t *  @typedef {TransportTime}\n\t\t\t\t */\n\t\t        TransportTime: 'transportTime',\n\t\t        /** \n\t\t\t\t *  Ticks are the basic subunit of the Transport. They are\n\t\t\t\t *  the smallest unit of time that the Transport supports.\n\t\t\t\t *  @typedef {Ticks}\n\t\t\t\t */\n\t\t        Ticks: 'ticks',\n\t\t        /** \n\t\t\t\t *  Normal values are within the range [0, 1].\n\t\t\t\t *  @typedef {NormalRange}\n\t\t\t\t */\n\t\t        NormalRange: 'normalRange',\n\t\t        /** \n\t\t\t\t *  AudioRange values are between [-1, 1].\n\t\t\t\t *  @typedef {AudioRange}\n\t\t\t\t */\n\t\t        AudioRange: 'audioRange',\n\t\t        /** \n\t\t\t\t *  Decibels are a logarithmic unit of measurement which is useful for volume\n\t\t\t\t *  because of the logarithmic way that we perceive loudness. 0 decibels \n\t\t\t\t *  means no change in volume. -10db is approximately half as loud and 10db \n\t\t\t\t *  is twice is loud. \n\t\t\t\t *  @typedef {Decibels}\n\t\t\t\t */\n\t\t        Decibels: 'db',\n\t\t        /** \n\t\t\t\t *  Half-step note increments, i.e. 12 is an octave above the root. and 1 is a half-step up.\n\t\t\t\t *  @typedef {Interval}\n\t\t\t\t */\n\t\t        Interval: 'interval',\n\t\t        /** \n\t\t\t\t *  Beats per minute. \n\t\t\t\t *  @typedef {BPM}\n\t\t\t\t */\n\t\t        BPM: 'bpm',\n\t\t        /** \n\t\t\t\t *  The value must be greater than or equal to 0.\n\t\t\t\t *  @typedef {Positive}\n\t\t\t\t */\n\t\t        Positive: 'positive',\n\t\t        /** \n\t\t\t\t *  A cent is a hundredth of a semitone. \n\t\t\t\t *  @typedef {Cents}\n\t\t\t\t */\n\t\t        Cents: 'cents',\n\t\t        /** \n\t\t\t\t *  Angle between 0 and 360. \n\t\t\t\t *  @typedef {Degrees}\n\t\t\t\t */\n\t\t        Degrees: 'degrees',\n\t\t        /** \n\t\t\t\t *  A number representing a midi note.\n\t\t\t\t *  @typedef {MIDI}\n\t\t\t\t */\n\t\t        MIDI: 'midi',\n\t\t        /** \n\t\t\t\t *  A colon-separated representation of time in the form of\n\t\t\t\t *  Bars:Beats:Sixteenths. \n\t\t\t\t *  @typedef {BarsBeatsSixteenths}\n\t\t\t\t */\n\t\t        BarsBeatsSixteenths: 'barsBeatsSixteenths',\n\t\t        /** \n\t\t\t\t *  Sampling is the reduction of a continuous signal to a discrete signal.\n\t\t\t\t *  Audio is typically sampled 44100 times per second. \n\t\t\t\t *  @typedef {Samples}\n\t\t\t\t */\n\t\t        Samples: 'samples',\n\t\t        /** \n\t\t\t\t *  Hertz are a frequency representation defined as one cycle per second.\n\t\t\t\t *  @typedef {Hertz}\n\t\t\t\t */\n\t\t        Hertz: 'hertz',\n\t\t        /** \n\t\t\t\t *  A frequency represented by a letter name, \n\t\t\t\t *  accidental and octave. This system is known as\n\t\t\t\t *  [Scientific Pitch Notation](https://en.wikipedia.org/wiki/Scientific_pitch_notation).\n\t\t\t\t *  @typedef {Note}\n\t\t\t\t */\n\t\t        Note: 'note',\n\t\t        /** \n\t\t\t\t *  One millisecond is a thousandth of a second. \n\t\t\t\t *  @typedef {Milliseconds}\n\t\t\t\t */\n\t\t        Milliseconds: 'milliseconds',\n\t\t        /** \n\t\t\t\t *  Seconds are the time unit of the AudioContext. In the end, \n\t\t\t\t *  all values need to be evaluated to seconds. \n\t\t\t\t *  @typedef {Seconds}\n\t\t\t\t */\n\t\t        Seconds: 'seconds',\n\t\t        /** \n\t\t\t\t *  A string representing a duration relative to a measure. \n\t\t\t\t *  <ul>\n\t\t\t\t *  \t<li>\"4n\" = quarter note</li>\n\t\t\t\t *   \t<li>\"2m\" = two measures</li>\n\t\t\t\t *    \t<li>\"8t\" = eighth-note triplet</li>\n\t\t\t\t *  </ul>\n\t\t\t\t *  @typedef {Notation}\n\t\t\t\t */\n\t\t        Notation: 'notation'\n\t\t    };\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    // AUGMENT TONE's PROTOTYPE\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    /**\n\t\t\t *  Convert Time into seconds.\n\t\t\t *  \n\t\t\t *  Unlike the method which it overrides, this takes into account \n\t\t\t *  transporttime and musical notation.\n\t\t\t *\n\t\t\t *  Time : 1.40\n\t\t\t *  Notation: 4n|1m|2t\n\t\t\t *  Now Relative: +3n\n\t\t\t *  Math: 3n+16n or even complicated expressions ((3n*2)/6 + 1)\n\t\t\t *\n\t\t\t *  @param  {Time} time \n\t\t\t *  @return {Seconds} \n\t\t\t */\n\t\t    Tone.prototype.toSeconds = function (time) {\n\t\t        if (this.isNumber(time)) {\n\t\t            return time;\n\t\t        } else if (this.isUndef(time)) {\n\t\t            return this.now();\n\t\t        } else if (this.isString(time)) {\n\t\t            return new Tone.Time(time).toSeconds();\n\t\t        } else if (time instanceof Tone.TimeBase) {\n\t\t            return time.toSeconds();\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Convert a frequency representation into a number.\n\t\t\t *  @param  {Frequency} freq \n\t\t\t *  @return {Hertz}      the frequency in hertz\n\t\t\t */\n\t\t    Tone.prototype.toFrequency = function (freq) {\n\t\t        if (this.isNumber(freq)) {\n\t\t            return freq;\n\t\t        } else if (this.isString(freq) || this.isUndef(freq)) {\n\t\t            return new Tone.Frequency(freq).valueOf();\n\t\t        } else if (freq instanceof Tone.TimeBase) {\n\t\t            return freq.toFrequency();\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Convert a time representation into ticks.\n\t\t\t *  @param  {Time} time\n\t\t\t *  @return {Ticks}  the time in ticks\n\t\t\t */\n\t\t    Tone.prototype.toTicks = function (time) {\n\t\t        if (this.isNumber(time) || this.isString(time)) {\n\t\t            return new Tone.TransportTime(time).toTicks();\n\t\t        } else if (this.isUndef(time)) {\n\t\t            return Tone.Transport.ticks;\n\t\t        } else if (time instanceof Tone.TimeBase) {\n\t\t            return time.toTicks();\n\t\t        }\n\t\t    };\n\t\t    return Tone;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Tone.Param wraps the native Web Audio's AudioParam to provide\n\t\t\t *         additional unit conversion functionality. It also\n\t\t\t *         serves as a base-class for classes which have a single,\n\t\t\t *         automatable parameter. \n\t\t\t *  @extends {Tone}\n\t\t\t *  @param  {AudioParam}  param  The parameter to wrap.\n\t\t\t *  @param  {Tone.Type} units The units of the audio param.\n\t\t\t *  @param  {Boolean} convert If the param should be converted.\n\t\t\t */\n\t\t    Tone.Param = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'param',\n\t\t            'units',\n\t\t            'convert'\n\t\t        ], Tone.Param.defaults);\n\t\t        /**\n\t\t\t\t *  The native parameter to control\n\t\t\t\t *  @type  {AudioParam}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._param = this.input = options.param;\n\t\t        /**\n\t\t\t\t *  The units of the parameter\n\t\t\t\t *  @type {Tone.Type}\n\t\t\t\t */\n\t\t        this.units = options.units;\n\t\t        /**\n\t\t\t\t *  If the value should be converted or not\n\t\t\t\t *  @type {Boolean}\n\t\t\t\t */\n\t\t        this.convert = options.convert;\n\t\t        /**\n\t\t\t\t *  True if the signal value is being overridden by \n\t\t\t\t *  a connected signal.\n\t\t\t\t *  @readOnly\n\t\t\t\t *  @type  {boolean}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this.overridden = false;\n\t\t        /**\n\t\t\t\t *  If there is an LFO, this is where it is held.\n\t\t\t\t *  @type  {Tone.LFO}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._lfo = null;\n\t\t        if (this.isObject(options.lfo)) {\n\t\t            this.value = options.lfo;\n\t\t        } else if (!this.isUndef(options.value)) {\n\t\t            this.value = options.value;\n\t\t        }\n\t\t    };\n\t\t    Tone.extend(Tone.Param);\n\t\t    /**\n\t\t\t *  Defaults\n\t\t\t *  @type  {Object}\n\t\t\t *  @const\n\t\t\t */\n\t\t    Tone.Param.defaults = {\n\t\t        'units': Tone.Type.Default,\n\t\t        'convert': true,\n\t\t        'param': undefined\n\t\t    };\n\t\t    /**\n\t\t\t * The current value of the parameter. \n\t\t\t * @memberOf Tone.Param#\n\t\t\t * @type {Number}\n\t\t\t * @name value\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Param.prototype, 'value', {\n\t\t        get: function () {\n\t\t            return this._toUnits(this._param.value);\n\t\t        },\n\t\t        set: function (value) {\n\t\t            if (this.isObject(value)) {\n\t\t                //throw an error if the LFO needs to be included\n\t\t                if (this.isUndef(Tone.LFO)) {\n\t\t                    throw new Error('Include \\'Tone.LFO\\' to use an LFO as a Param value.');\n\t\t                }\n\t\t                //remove the old one\n\t\t                if (this._lfo) {\n\t\t                    this._lfo.dispose();\n\t\t                }\n\t\t                this._lfo = new Tone.LFO(value).start();\n\t\t                this._lfo.connect(this.input);\n\t\t            } else {\n\t\t                var convertedVal = this._fromUnits(value);\n\t\t                this._param.cancelScheduledValues(0);\n\t\t                this._param.value = convertedVal;\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Convert the given value from the type specified by Tone.Param.units\n\t\t\t *  into the destination value (such as Gain or Frequency).\n\t\t\t *  @private\n\t\t\t *  @param  {*} val the value to convert\n\t\t\t *  @return {number}     the number which the value should be set to\n\t\t\t */\n\t\t    Tone.Param.prototype._fromUnits = function (val) {\n\t\t        if (this.convert || this.isUndef(this.convert)) {\n\t\t            switch (this.units) {\n\t\t            case Tone.Type.Time:\n\t\t                return this.toSeconds(val);\n\t\t            case Tone.Type.Frequency:\n\t\t                return this.toFrequency(val);\n\t\t            case Tone.Type.Decibels:\n\t\t                return this.dbToGain(val);\n\t\t            case Tone.Type.NormalRange:\n\t\t                return Math.min(Math.max(val, 0), 1);\n\t\t            case Tone.Type.AudioRange:\n\t\t                return Math.min(Math.max(val, -1), 1);\n\t\t            case Tone.Type.Positive:\n\t\t                return Math.max(val, 0);\n\t\t            default:\n\t\t                return val;\n\t\t            }\n\t\t        } else {\n\t\t            return val;\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t * Convert the parameters value into the units specified by Tone.Param.units.\n\t\t\t * @private\n\t\t\t * @param  {number} val the value to convert\n\t\t\t * @return {number}\n\t\t\t */\n\t\t    Tone.Param.prototype._toUnits = function (val) {\n\t\t        if (this.convert || this.isUndef(this.convert)) {\n\t\t            switch (this.units) {\n\t\t            case Tone.Type.Decibels:\n\t\t                return this.gainToDb(val);\n\t\t            default:\n\t\t                return val;\n\t\t            }\n\t\t        } else {\n\t\t            return val;\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  the minimum output value\n\t\t\t *  @type {Number}\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Param.prototype._minOutput = 0.00001;\n\t\t    /**\n\t\t\t *  Schedules a parameter value change at the given time.\n\t\t\t *  @param {*}\tvalue The value to set the signal.\n\t\t\t *  @param {Time}  time The time when the change should occur.\n\t\t\t *  @returns {Tone.Param} this\n\t\t\t *  @example\n\t\t\t * //set the frequency to \"G4\" in exactly 1 second from now. \n\t\t\t * freq.setValueAtTime(\"G4\", \"+1\");\n\t\t\t */\n\t\t    Tone.Param.prototype.setValueAtTime = function (value, time) {\n\t\t        value = this._fromUnits(value);\n\t\t        time = this.toSeconds(time);\n\t\t        if (time <= this.now() + this.blockTime) {\n\t\t            this._param.value = value;\n\t\t        } else {\n\t\t            this._param.setValueAtTime(value, time);\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Creates a schedule point with the current value at the current time.\n\t\t\t *  This is useful for creating an automation anchor point in order to \n\t\t\t *  schedule changes from the current value. \n\t\t\t *\n\t\t\t *  @param {number=} now (Optionally) pass the now value in. \n\t\t\t *  @returns {Tone.Param} this\n\t\t\t */\n\t\t    Tone.Param.prototype.setRampPoint = function (now) {\n\t\t        now = this.defaultArg(now, this.now());\n\t\t        var currentVal = this._param.value;\n\t\t        // exponentialRampToValueAt cannot ever ramp from or to 0\n\t\t        // More info: https://bugzilla.mozilla.org/show_bug.cgi?id=1125600#c2\n\t\t        if (currentVal === 0) {\n\t\t            currentVal = this._minOutput;\n\t\t        }\n\t\t        this._param.setValueAtTime(currentVal, now);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Schedules a linear continuous change in parameter value from the \n\t\t\t *  previous scheduled parameter value to the given value.\n\t\t\t *  \n\t\t\t *  @param  {number} value   \n\t\t\t *  @param  {Time} endTime \n\t\t\t *  @returns {Tone.Param} this\n\t\t\t */\n\t\t    Tone.Param.prototype.linearRampToValueAtTime = function (value, endTime) {\n\t\t        value = this._fromUnits(value);\n\t\t        this._param.linearRampToValueAtTime(value, this.toSeconds(endTime));\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Schedules an exponential continuous change in parameter value from \n\t\t\t *  the previous scheduled parameter value to the given value.\n\t\t\t *  \n\t\t\t *  @param  {number} value   \n\t\t\t *  @param  {Time} endTime \n\t\t\t *  @returns {Tone.Param} this\n\t\t\t */\n\t\t    Tone.Param.prototype.exponentialRampToValueAtTime = function (value, endTime) {\n\t\t        value = this._fromUnits(value);\n\t\t        value = Math.max(this._minOutput, value);\n\t\t        this._param.exponentialRampToValueAtTime(value, this.toSeconds(endTime));\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Schedules an exponential continuous change in parameter value from \n\t\t\t *  the current time and current value to the given value over the \n\t\t\t *  duration of the rampTime.\n\t\t\t *  \n\t\t\t *  @param  {number} value   The value to ramp to.\n\t\t\t *  @param  {Time} rampTime the time that it takes the \n\t\t\t *                               value to ramp from it's current value\n\t\t\t *  @param {Time}\t[startTime=now] \tWhen the ramp should start. \n\t\t\t *  @returns {Tone.Param} this\n\t\t\t *  @example\n\t\t\t * //exponentially ramp to the value 2 over 4 seconds. \n\t\t\t * signal.exponentialRampToValue(2, 4);\n\t\t\t */\n\t\t    Tone.Param.prototype.exponentialRampToValue = function (value, rampTime, startTime) {\n\t\t        startTime = this.toSeconds(startTime);\n\t\t        this.setRampPoint(startTime);\n\t\t        this.exponentialRampToValueAtTime(value, startTime + this.toSeconds(rampTime));\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Schedules an linear continuous change in parameter value from \n\t\t\t *  the current time and current value to the given value over the \n\t\t\t *  duration of the rampTime.\n\t\t\t *  \n\t\t\t *  @param  {number} value   The value to ramp to.\n\t\t\t *  @param  {Time} rampTime the time that it takes the \n\t\t\t *                               value to ramp from it's current value\n\t\t\t *  @param {Time}\t[startTime=now] \tWhen the ramp should start. \n\t\t\t *  @returns {Tone.Param} this\n\t\t\t *  @example\n\t\t\t * //linearly ramp to the value 4 over 3 seconds. \n\t\t\t * signal.linearRampToValue(4, 3);\n\t\t\t */\n\t\t    Tone.Param.prototype.linearRampToValue = function (value, rampTime, startTime) {\n\t\t        startTime = this.toSeconds(startTime);\n\t\t        this.setRampPoint(startTime);\n\t\t        this.linearRampToValueAtTime(value, startTime + this.toSeconds(rampTime));\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Start exponentially approaching the target value at the given time with\n\t\t\t *  a rate having the given time constant.\n\t\t\t *  @param {number} value        \n\t\t\t *  @param {Time} startTime    \n\t\t\t *  @param {number} timeConstant \n\t\t\t *  @returns {Tone.Param} this \n\t\t\t */\n\t\t    Tone.Param.prototype.setTargetAtTime = function (value, startTime, timeConstant) {\n\t\t        value = this._fromUnits(value);\n\t\t        // The value will never be able to approach without timeConstant > 0.\n\t\t        // http://www.w3.org/TR/webaudio/#dfn-setTargetAtTime, where the equation\n\t\t        // is described. 0 results in a division by 0.\n\t\t        value = Math.max(this._minOutput, value);\n\t\t        timeConstant = Math.max(this._minOutput, timeConstant);\n\t\t        this._param.setTargetAtTime(value, this.toSeconds(startTime), timeConstant);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Sets an array of arbitrary parameter values starting at the given time\n\t\t\t *  for the given duration.\n\t\t\t *  \t\n\t\t\t *  @param {Array} values    \n\t\t\t *  @param {Time} startTime \n\t\t\t *  @param {Time} duration  \n\t\t\t *  @returns {Tone.Param} this\n\t\t\t */\n\t\t    Tone.Param.prototype.setValueCurveAtTime = function (values, startTime, duration) {\n\t\t        for (var i = 0; i < values.length; i++) {\n\t\t            values[i] = this._fromUnits(values[i]);\n\t\t        }\n\t\t        this._param.setValueCurveAtTime(values, this.toSeconds(startTime), this.toSeconds(duration));\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Cancels all scheduled parameter changes with times greater than or \n\t\t\t *  equal to startTime.\n\t\t\t *  \n\t\t\t *  @param  {Time} startTime\n\t\t\t *  @returns {Tone.Param} this\n\t\t\t */\n\t\t    Tone.Param.prototype.cancelScheduledValues = function (startTime) {\n\t\t        this._param.cancelScheduledValues(this.toSeconds(startTime));\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Ramps to the given value over the duration of the rampTime. \n\t\t\t *  Automatically selects the best ramp type (exponential or linear)\n\t\t\t *  depending on the `units` of the signal\n\t\t\t *  \n\t\t\t *  @param  {number} value   \n\t\t\t *  @param  {Time} rampTime \tThe time that it takes the \n\t\t\t *                              value to ramp from it's current value\n\t\t\t *  @param {Time}\t[startTime=now] \tWhen the ramp should start. \n\t\t\t *  @returns {Tone.Param} this\n\t\t\t *  @example\n\t\t\t * //ramp to the value either linearly or exponentially \n\t\t\t * //depending on the \"units\" value of the signal\n\t\t\t * signal.rampTo(0, 10);\n\t\t\t *  @example\n\t\t\t * //schedule it to ramp starting at a specific time\n\t\t\t * signal.rampTo(0, 10, 5)\n\t\t\t */\n\t\t    Tone.Param.prototype.rampTo = function (value, rampTime, startTime) {\n\t\t        rampTime = this.defaultArg(rampTime, 0);\n\t\t        if (this.units === Tone.Type.Frequency || this.units === Tone.Type.BPM || this.units === Tone.Type.Decibels) {\n\t\t            this.exponentialRampToValue(value, rampTime, startTime);\n\t\t        } else {\n\t\t            this.linearRampToValue(value, rampTime, startTime);\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  The LFO created by the signal instance. If none\n\t\t\t *  was created, this is null.\n\t\t\t *  @type {Tone.LFO}\n\t\t\t *  @readOnly\n\t\t\t *  @memberOf Tone.Param#\n\t\t\t *  @name lfo\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Param.prototype, 'lfo', {\n\t\t        get: function () {\n\t\t            return this._lfo;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Clean up\n\t\t\t *  @returns {Tone.Param} this\n\t\t\t */\n\t\t    Tone.Param.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._param = null;\n\t\t        if (this._lfo) {\n\t\t            this._lfo.dispose();\n\t\t            this._lfo = null;\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Param;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  createGain shim\n\t\t\t *  @private\n\t\t\t */\n\t\t    if (window.GainNode && !AudioContext.prototype.createGain) {\n\t\t        AudioContext.prototype.createGain = AudioContext.prototype.createGainNode;\n\t\t    }\n\t\t    /**\n\t\t\t *  @class A thin wrapper around the Native Web Audio GainNode.\n\t\t\t *         The GainNode is a basic building block of the Web Audio\n\t\t\t *         API and is useful for routing audio and adjusting gains. \n\t\t\t *  @extends {Tone}\n\t\t\t *  @param  {Number=}  gain  The initial gain of the GainNode\n\t\t\t *  @param {Tone.Type=} units The units of the gain parameter. \n\t\t\t */\n\t\t    Tone.Gain = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'gain',\n\t\t            'units'\n\t\t        ], Tone.Gain.defaults);\n\t\t        /**\n\t\t\t\t *  The GainNode\n\t\t\t\t *  @type  {GainNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this.input = this.output = this._gainNode = this.context.createGain();\n\t\t        /**\n\t\t\t\t *  The gain parameter of the gain node.\n\t\t\t\t *  @type {Tone.Param}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.gain = new Tone.Param({\n\t\t            'param': this._gainNode.gain,\n\t\t            'units': options.units,\n\t\t            'value': options.gain,\n\t\t            'convert': options.convert\n\t\t        });\n\t\t        this._readOnly('gain');\n\t\t    };\n\t\t    Tone.extend(Tone.Gain);\n\t\t    /**\n\t\t\t *  The defaults\n\t\t\t *  @const\n\t\t\t *  @type  {Object}\n\t\t\t */\n\t\t    Tone.Gain.defaults = {\n\t\t        'gain': 1,\n\t\t        'convert': true\n\t\t    };\n\t\t    /**\n\t\t\t *  Clean up.\n\t\t\t *  @return  {Tone.Gain}  this\n\t\t\t */\n\t\t    Tone.Gain.prototype.dispose = function () {\n\t\t        Tone.Param.prototype.dispose.call(this);\n\t\t        this._gainNode.disconnect();\n\t\t        this._gainNode = null;\n\t\t        this._writable('gain');\n\t\t        this.gain.dispose();\n\t\t        this.gain = null;\n\t\t    };\n\t\t    //STATIC///////////////////////////////////////////////////////////////////\n\t\t    /**\n\t\t\t *  Create input and outputs for this object.\n\t\t\t *  @param  {Number}  input   The number of inputs\n\t\t\t *  @param  {Number=}  outputs  The number of outputs\n\t\t\t *  @return  {Tone}  this\n\t\t\t *  @internal\n\t\t\t */\n\t\t    Tone.prototype.createInsOuts = function (inputs, outputs) {\n\t\t        if (inputs === 1) {\n\t\t            this.input = new Tone.Gain();\n\t\t        } else if (inputs > 1) {\n\t\t            this.input = new Array(inputs);\n\t\t        }\n\t\t        if (outputs === 1) {\n\t\t            this.output = new Tone.Gain();\n\t\t        } else if (outputs > 1) {\n\t\t            this.output = new Array(inputs);\n\t\t        }\n\t\t    };\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    return Tone.Gain;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  A signal is an audio-rate value. Tone.Signal is a core component of the library.\n\t\t\t *          Unlike a number, Signals can be scheduled with sample-level accuracy. Tone.Signal\n\t\t\t *          has all of the methods available to native Web Audio \n\t\t\t *          [AudioParam](http://webaudio.github.io/web-audio-api/#the-audioparam-interface)\n\t\t\t *          as well as additional conveniences. Read more about working with signals \n\t\t\t *          [here](https://github.com/Tonejs/Tone.js/wiki/Signals).\n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.Param}\n\t\t\t *  @param {Number|AudioParam} [value] Initial value of the signal. If an AudioParam\n\t\t\t *                                     is passed in, that parameter will be wrapped\n\t\t\t *                                     and controlled by the Signal. \n\t\t\t *  @param {string} [units=Number] unit The units the signal is in. \n\t\t\t *  @example\n\t\t\t * var signal = new Tone.Signal(10);\n\t\t\t */\n\t\t    Tone.Signal = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'value',\n\t\t            'units'\n\t\t        ], Tone.Signal.defaults);\n\t\t        /**\n\t\t\t\t * The node where the constant signal value is scaled.\n\t\t\t\t * @type {GainNode}\n\t\t\t\t * @private\n\t\t\t\t */\n\t\t        this.output = this._gain = this.context.createGain();\n\t\t        options.param = this._gain.gain;\n\t\t        Tone.Param.call(this, options);\n\t\t        /**\n\t\t\t\t * The node where the value is set.\n\t\t\t\t * @type {Tone.Param}\n\t\t\t\t * @private\n\t\t\t\t */\n\t\t        this.input = this._param = this._gain.gain;\n\t\t        //connect the const output to the node output\n\t\t        this.context.getConstant(1).chain(this._gain);\n\t\t    };\n\t\t    Tone.extend(Tone.Signal, Tone.Param);\n\t\t    /**\n\t\t\t *  The default values\n\t\t\t *  @type  {Object}\n\t\t\t *  @static\n\t\t\t *  @const\n\t\t\t */\n\t\t    Tone.Signal.defaults = {\n\t\t        'value': 0,\n\t\t        'units': Tone.Type.Default,\n\t\t        'convert': true\n\t\t    };\n\t\t    /**\n\t\t\t *  When signals connect to other signals or AudioParams, \n\t\t\t *  they take over the output value of that signal or AudioParam. \n\t\t\t *  For all other nodes, the behavior is the same as a default <code>connect</code>. \n\t\t\t *\n\t\t\t *  @override\n\t\t\t *  @param {AudioParam|AudioNode|Tone.Signal|Tone} node \n\t\t\t *  @param {number} [outputNumber=0] The output number to connect from.\n\t\t\t *  @param {number} [inputNumber=0] The input number to connect to.\n\t\t\t *  @returns {Tone.SignalBase} this\n\t\t\t *  @method\n\t\t\t */\n\t\t    Tone.Signal.prototype.connect = Tone.SignalBase.prototype.connect;\n\t\t    /**\n\t\t\t *  dispose and disconnect\n\t\t\t *  @returns {Tone.Signal} this\n\t\t\t */\n\t\t    Tone.Signal.prototype.dispose = function () {\n\t\t        Tone.Param.prototype.dispose.call(this);\n\t\t        this._param = null;\n\t\t        this._gain.disconnect();\n\t\t        this._gain = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Signal;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class A Timeline class for scheduling and maintaining state\n\t\t\t *         along a timeline. All events must have a \"time\" property. \n\t\t\t *         Internally, events are stored in time order for fast \n\t\t\t *         retrieval.\n\t\t\t *  @extends {Tone}\n\t\t\t *  @param {Positive} [memory=Infinity] The number of previous events that are retained.\n\t\t\t */\n\t\t    Tone.Timeline = function () {\n\t\t        var options = this.optionsObject(arguments, ['memory'], Tone.Timeline.defaults);\n\t\t        /**\n\t\t\t\t *  The array of scheduled timeline events\n\t\t\t\t *  @type  {Array}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._timeline = [];\n\t\t        /**\n\t\t\t\t *  An array of items to remove from the list. \n\t\t\t\t *  @type {Array}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._toRemove = [];\n\t\t        /**\n\t\t\t\t *  Flag if the tieline is mid iteration\n\t\t\t\t *  @private\n\t\t\t\t *  @type {Boolean}\n\t\t\t\t */\n\t\t        this._iterating = false;\n\t\t        /**\n\t\t\t\t *  The memory of the timeline, i.e.\n\t\t\t\t *  how many events in the past it will retain\n\t\t\t\t *  @type {Positive}\n\t\t\t\t */\n\t\t        this.memory = options.memory;\n\t\t    };\n\t\t    Tone.extend(Tone.Timeline);\n\t\t    /**\n\t\t\t *  the default parameters\n\t\t\t *  @static\n\t\t\t *  @const\n\t\t\t */\n\t\t    Tone.Timeline.defaults = { 'memory': Infinity };\n\t\t    /**\n\t\t\t *  The number of items in the timeline.\n\t\t\t *  @type {Number}\n\t\t\t *  @memberOf Tone.Timeline#\n\t\t\t *  @name length\n\t\t\t *  @readOnly\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Timeline.prototype, 'length', {\n\t\t        get: function () {\n\t\t            return this._timeline.length;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Insert an event object onto the timeline. Events must have a \"time\" attribute.\n\t\t\t *  @param  {Object}  event  The event object to insert into the \n\t\t\t *                           timeline. \n\t\t\t *  @returns {Tone.Timeline} this\n\t\t\t */\n\t\t    Tone.Timeline.prototype.add = function (event) {\n\t\t        //the event needs to have a time attribute\n\t\t        if (this.isUndef(event.time)) {\n\t\t            throw new Error('Tone.Timeline: events must have a time attribute');\n\t\t        }\n\t\t        if (this._timeline.length) {\n\t\t            var index = this._search(event.time);\n\t\t            this._timeline.splice(index + 1, 0, event);\n\t\t        } else {\n\t\t            this._timeline.push(event);\n\t\t        }\n\t\t        //if the length is more than the memory, remove the previous ones\n\t\t        if (this.length > this.memory) {\n\t\t            var diff = this.length - this.memory;\n\t\t            this._timeline.splice(0, diff);\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Remove an event from the timeline.\n\t\t\t *  @param  {Object}  event  The event object to remove from the list.\n\t\t\t *  @returns {Tone.Timeline} this\n\t\t\t */\n\t\t    Tone.Timeline.prototype.remove = function (event) {\n\t\t        if (this._iterating) {\n\t\t            this._toRemove.push(event);\n\t\t        } else {\n\t\t            var index = this._timeline.indexOf(event);\n\t\t            if (index !== -1) {\n\t\t                this._timeline.splice(index, 1);\n\t\t            }\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Get the nearest event whose time is less than or equal to the given time.\n\t\t\t *  @param  {Number}  time  The time to query.\n\t\t\t *  @returns {Object} The event object set after that time.\n\t\t\t */\n\t\t    Tone.Timeline.prototype.get = function (time) {\n\t\t        var index = this._search(time);\n\t\t        if (index !== -1) {\n\t\t            return this._timeline[index];\n\t\t        } else {\n\t\t            return null;\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Return the first event in the timeline without removing it\n\t\t\t *  @returns {Object} The first event object\n\t\t\t */\n\t\t    Tone.Timeline.prototype.peek = function () {\n\t\t        return this._timeline[0];\n\t\t    };\n\t\t    /**\n\t\t\t *  Return the first event in the timeline and remove it\n\t\t\t *  @returns {Object} The first event object\n\t\t\t */\n\t\t    Tone.Timeline.prototype.shift = function () {\n\t\t        return this._timeline.shift();\n\t\t    };\n\t\t    /**\n\t\t\t *  Get the event which is scheduled after the given time.\n\t\t\t *  @param  {Number}  time  The time to query.\n\t\t\t *  @returns {Object} The event object after the given time\n\t\t\t */\n\t\t    Tone.Timeline.prototype.getAfter = function (time) {\n\t\t        var index = this._search(time);\n\t\t        if (index + 1 < this._timeline.length) {\n\t\t            return this._timeline[index + 1];\n\t\t        } else {\n\t\t            return null;\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Get the event before the event at the given time.\n\t\t\t *  @param  {Number}  time  The time to query.\n\t\t\t *  @returns {Object} The event object before the given time\n\t\t\t */\n\t\t    Tone.Timeline.prototype.getBefore = function (time) {\n\t\t        var len = this._timeline.length;\n\t\t        //if it's after the last item, return the last item\n\t\t        if (len > 0 && this._timeline[len - 1].time < time) {\n\t\t            return this._timeline[len - 1];\n\t\t        }\n\t\t        var index = this._search(time);\n\t\t        if (index - 1 >= 0) {\n\t\t            return this._timeline[index - 1];\n\t\t        } else {\n\t\t            return null;\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Cancel events after the given time\n\t\t\t *  @param  {Number}  time  The time to query.\n\t\t\t *  @returns {Tone.Timeline} this\n\t\t\t */\n\t\t    Tone.Timeline.prototype.cancel = function (after) {\n\t\t        if (this._timeline.length > 1) {\n\t\t            var index = this._search(after);\n\t\t            if (index >= 0) {\n\t\t                if (this._timeline[index].time === after) {\n\t\t                    //get the first item with that time\n\t\t                    for (var i = index; i >= 0; i--) {\n\t\t                        if (this._timeline[i].time === after) {\n\t\t                            index = i;\n\t\t                        } else {\n\t\t                            break;\n\t\t                        }\n\t\t                    }\n\t\t                    this._timeline = this._timeline.slice(0, index);\n\t\t                } else {\n\t\t                    this._timeline = this._timeline.slice(0, index + 1);\n\t\t                }\n\t\t            } else {\n\t\t                this._timeline = [];\n\t\t            }\n\t\t        } else if (this._timeline.length === 1) {\n\t\t            //the first item's time\n\t\t            if (this._timeline[0].time >= after) {\n\t\t                this._timeline = [];\n\t\t            }\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Cancel events before or equal to the given time.\n\t\t\t *  @param  {Number}  time  The time to cancel before.\n\t\t\t *  @returns {Tone.Timeline} this\n\t\t\t */\n\t\t    Tone.Timeline.prototype.cancelBefore = function (time) {\n\t\t        if (this._timeline.length) {\n\t\t            var index = this._search(time);\n\t\t            if (index >= 0) {\n\t\t                this._timeline = this._timeline.slice(index + 1);\n\t\t            }\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Does a binary serach on the timeline array and returns the \n\t\t\t *  nearest event index whose time is after or equal to the given time.\n\t\t\t *  If a time is searched before the first index in the timeline, -1 is returned.\n\t\t\t *  If the time is after the end, the index of the last item is returned.\n\t\t\t *  @param  {Number}  time  \n\t\t\t *  @return  {Number} the index in the timeline array \n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Timeline.prototype._search = function (time) {\n\t\t        var beginning = 0;\n\t\t        var len = this._timeline.length;\n\t\t        var end = len;\n\t\t        if (len > 0 && this._timeline[len - 1].time <= time) {\n\t\t            return len - 1;\n\t\t        }\n\t\t        while (beginning < end) {\n\t\t            // calculate the midpoint for roughly equal partition\n\t\t            var midPoint = Math.floor(beginning + (end - beginning) / 2);\n\t\t            var event = this._timeline[midPoint];\n\t\t            var nextEvent = this._timeline[midPoint + 1];\n\t\t            if (event.time === time) {\n\t\t                //choose the last one that has the same time\n\t\t                for (var i = midPoint; i < this._timeline.length; i++) {\n\t\t                    var testEvent = this._timeline[i];\n\t\t                    if (testEvent.time === time) {\n\t\t                        midPoint = i;\n\t\t                    }\n\t\t                }\n\t\t                return midPoint;\n\t\t            } else if (event.time < time && nextEvent.time > time) {\n\t\t                return midPoint;\n\t\t            } else if (event.time > time) {\n\t\t                //search lower\n\t\t                end = midPoint;\n\t\t            } else if (event.time < time) {\n\t\t                //search upper\n\t\t                beginning = midPoint + 1;\n\t\t            }\n\t\t        }\n\t\t        return -1;\n\t\t    };\n\t\t    /**\n\t\t\t *  Internal iterator. Applies extra safety checks for \n\t\t\t *  removing items from the array. \n\t\t\t *  @param  {Function}  callback \n\t\t\t *  @param  {Number=}    lowerBound     \n\t\t\t *  @param  {Number=}    upperBound    \n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Timeline.prototype._iterate = function (callback, lowerBound, upperBound) {\n\t\t        this._iterating = true;\n\t\t        lowerBound = this.defaultArg(lowerBound, 0);\n\t\t        upperBound = this.defaultArg(upperBound, this._timeline.length - 1);\n\t\t        for (var i = lowerBound; i <= upperBound; i++) {\n\t\t            callback(this._timeline[i]);\n\t\t        }\n\t\t        this._iterating = false;\n\t\t        if (this._toRemove.length > 0) {\n\t\t            for (var j = 0; j < this._toRemove.length; j++) {\n\t\t                var index = this._timeline.indexOf(this._toRemove[j]);\n\t\t                if (index !== -1) {\n\t\t                    this._timeline.splice(index, 1);\n\t\t                }\n\t\t            }\n\t\t            this._toRemove = [];\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Iterate over everything in the array\n\t\t\t *  @param  {Function}  callback The callback to invoke with every item\n\t\t\t *  @returns {Tone.Timeline} this\n\t\t\t */\n\t\t    Tone.Timeline.prototype.forEach = function (callback) {\n\t\t        this._iterate(callback);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Iterate over everything in the array at or before the given time.\n\t\t\t *  @param  {Number}  time The time to check if items are before\n\t\t\t *  @param  {Function}  callback The callback to invoke with every item\n\t\t\t *  @returns {Tone.Timeline} this\n\t\t\t */\n\t\t    Tone.Timeline.prototype.forEachBefore = function (time, callback) {\n\t\t        //iterate over the items in reverse so that removing an item doesn't break things\n\t\t        var upperBound = this._search(time);\n\t\t        if (upperBound !== -1) {\n\t\t            this._iterate(callback, 0, upperBound);\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Iterate over everything in the array after the given time.\n\t\t\t *  @param  {Number}  time The time to check if items are before\n\t\t\t *  @param  {Function}  callback The callback to invoke with every item\n\t\t\t *  @returns {Tone.Timeline} this\n\t\t\t */\n\t\t    Tone.Timeline.prototype.forEachAfter = function (time, callback) {\n\t\t        //iterate over the items in reverse so that removing an item doesn't break things\n\t\t        var lowerBound = this._search(time);\n\t\t        this._iterate(callback, lowerBound + 1);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Iterate over everything in the array at or after the given time. Similar to \n\t\t\t *  forEachAfter, but includes the item(s) at the given time.\n\t\t\t *  @param  {Number}  time The time to check if items are before\n\t\t\t *  @param  {Function}  callback The callback to invoke with every item\n\t\t\t *  @returns {Tone.Timeline} this\n\t\t\t */\n\t\t    Tone.Timeline.prototype.forEachFrom = function (time, callback) {\n\t\t        //iterate over the items in reverse so that removing an item doesn't break things\n\t\t        var lowerBound = this._search(time);\n\t\t        //work backwards until the event time is less than time\n\t\t        while (lowerBound >= 0 && this._timeline[lowerBound].time >= time) {\n\t\t            lowerBound--;\n\t\t        }\n\t\t        this._iterate(callback, lowerBound + 1);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Iterate over everything in the array at the given time\n\t\t\t *  @param  {Number}  time The time to check if items are before\n\t\t\t *  @param  {Function}  callback The callback to invoke with every item\n\t\t\t *  @returns {Tone.Timeline} this\n\t\t\t */\n\t\t    Tone.Timeline.prototype.forEachAtTime = function (time, callback) {\n\t\t        //iterate over the items in reverse so that removing an item doesn't break things\n\t\t        var upperBound = this._search(time);\n\t\t        if (upperBound !== -1) {\n\t\t            this._iterate(function (event) {\n\t\t                if (event.time === time) {\n\t\t                    callback(event);\n\t\t                }\n\t\t            }, 0, upperBound);\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Clean up.\n\t\t\t *  @return  {Tone.Timeline}  this\n\t\t\t */\n\t\t    Tone.Timeline.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._timeline = null;\n\t\t        this._toRemove = null;\n\t\t    };\n\t\t    return Tone.Timeline;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class A signal which adds the method getValueAtTime. \n\t\t\t *         Code and inspiration from https://github.com/jsantell/web-audio-automation-timeline\n\t\t\t *  @extends {Tone.Param}\n\t\t\t *  @param {Number=} value The initial value of the signal\n\t\t\t *  @param {String=} units The conversion units of the signal.\n\t\t\t */\n\t\t    Tone.TimelineSignal = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'value',\n\t\t            'units'\n\t\t        ], Tone.Signal.defaults);\n\t\t        /**\n\t\t\t\t *  The scheduled events\n\t\t\t\t *  @type {Tone.Timeline}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._events = new Tone.Timeline(10);\n\t\t        //constructors\n\t\t        Tone.Signal.apply(this, options);\n\t\t        options.param = this._param;\n\t\t        Tone.Param.call(this, options);\n\t\t        /**\n\t\t\t\t *  The initial scheduled value\n\t\t\t\t *  @type {Number}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._initial = this._fromUnits(this._param.value);\n\t\t    };\n\t\t    Tone.extend(Tone.TimelineSignal, Tone.Param);\n\t\t    /**\n\t\t\t *  The event types of a schedulable signal.\n\t\t\t *  @enum {String}\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.TimelineSignal.Type = {\n\t\t        Linear: 'linear',\n\t\t        Exponential: 'exponential',\n\t\t        Target: 'target',\n\t\t        Curve: 'curve',\n\t\t        Set: 'set'\n\t\t    };\n\t\t    /**\n\t\t\t * The current value of the signal. \n\t\t\t * @memberOf Tone.TimelineSignal#\n\t\t\t * @type {Number}\n\t\t\t * @name value\n\t\t\t */\n\t\t    Object.defineProperty(Tone.TimelineSignal.prototype, 'value', {\n\t\t        get: function () {\n\t\t            var now = this.now();\n\t\t            var val = this.getValueAtTime(now);\n\t\t            return this._toUnits(val);\n\t\t        },\n\t\t        set: function (value) {\n\t\t            var convertedVal = this._fromUnits(value);\n\t\t            this._initial = convertedVal;\n\t\t            this.cancelScheduledValues();\n\t\t            this._param.value = convertedVal;\n\t\t        }\n\t\t    });\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    //\tSCHEDULING\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    /**\n\t\t\t *  Schedules a parameter value change at the given time.\n\t\t\t *  @param {*}\tvalue The value to set the signal.\n\t\t\t *  @param {Time}  time The time when the change should occur.\n\t\t\t *  @returns {Tone.TimelineSignal} this\n\t\t\t *  @example\n\t\t\t * //set the frequency to \"G4\" in exactly 1 second from now. \n\t\t\t * freq.setValueAtTime(\"G4\", \"+1\");\n\t\t\t */\n\t\t    Tone.TimelineSignal.prototype.setValueAtTime = function (value, startTime) {\n\t\t        value = this._fromUnits(value);\n\t\t        startTime = this.toSeconds(startTime);\n\t\t        this._events.add({\n\t\t            'type': Tone.TimelineSignal.Type.Set,\n\t\t            'value': value,\n\t\t            'time': startTime\n\t\t        });\n\t\t        //invoke the original event\n\t\t        this._param.setValueAtTime(value, startTime);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Schedules a linear continuous change in parameter value from the \n\t\t\t *  previous scheduled parameter value to the given value.\n\t\t\t *  \n\t\t\t *  @param  {number} value   \n\t\t\t *  @param  {Time} endTime \n\t\t\t *  @returns {Tone.TimelineSignal} this\n\t\t\t */\n\t\t    Tone.TimelineSignal.prototype.linearRampToValueAtTime = function (value, endTime) {\n\t\t        value = this._fromUnits(value);\n\t\t        endTime = this.toSeconds(endTime);\n\t\t        this._events.add({\n\t\t            'type': Tone.TimelineSignal.Type.Linear,\n\t\t            'value': value,\n\t\t            'time': endTime\n\t\t        });\n\t\t        this._param.linearRampToValueAtTime(value, endTime);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Schedules an exponential continuous change in parameter value from \n\t\t\t *  the previous scheduled parameter value to the given value.\n\t\t\t *  \n\t\t\t *  @param  {number} value   \n\t\t\t *  @param  {Time} endTime \n\t\t\t *  @returns {Tone.TimelineSignal} this\n\t\t\t */\n\t\t    Tone.TimelineSignal.prototype.exponentialRampToValueAtTime = function (value, endTime) {\n\t\t        //get the previous event and make sure it's not starting from 0\n\t\t        endTime = this.toSeconds(endTime);\n\t\t        var beforeEvent = this._searchBefore(endTime);\n\t\t        if (beforeEvent && beforeEvent.value === 0) {\n\t\t            //reschedule that event\n\t\t            this.setValueAtTime(this._minOutput, beforeEvent.time);\n\t\t        }\n\t\t        value = this._fromUnits(value);\n\t\t        var setValue = Math.max(value, this._minOutput);\n\t\t        this._events.add({\n\t\t            'type': Tone.TimelineSignal.Type.Exponential,\n\t\t            'value': setValue,\n\t\t            'time': endTime\n\t\t        });\n\t\t        //if the ramped to value is 0, make it go to the min output, and then set to 0.\n\t\t        if (value < this._minOutput) {\n\t\t            this._param.exponentialRampToValueAtTime(this._minOutput, endTime - this.sampleTime);\n\t\t            this.setValueAtTime(0, endTime);\n\t\t        } else {\n\t\t            this._param.exponentialRampToValueAtTime(value, endTime);\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Start exponentially approaching the target value at the given time with\n\t\t\t *  a rate having the given time constant.\n\t\t\t *  @param {number} value        \n\t\t\t *  @param {Time} startTime    \n\t\t\t *  @param {number} timeConstant \n\t\t\t *  @returns {Tone.TimelineSignal} this \n\t\t\t */\n\t\t    Tone.TimelineSignal.prototype.setTargetAtTime = function (value, startTime, timeConstant) {\n\t\t        value = this._fromUnits(value);\n\t\t        value = Math.max(this._minOutput, value);\n\t\t        timeConstant = Math.max(this._minOutput, timeConstant);\n\t\t        startTime = this.toSeconds(startTime);\n\t\t        this._events.add({\n\t\t            'type': Tone.TimelineSignal.Type.Target,\n\t\t            'value': value,\n\t\t            'time': startTime,\n\t\t            'constant': timeConstant\n\t\t        });\n\t\t        this._param.setTargetAtTime(value, startTime, timeConstant);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Set an array of arbitrary values starting at the given time for the given duration.\n\t\t\t *  @param {Float32Array} values        \n\t\t\t *  @param {Time} startTime    \n\t\t\t *  @param {Time} duration\n\t\t\t *  @param {NormalRange} [scaling=1] If the values in the curve should be scaled by some value\n\t\t\t *  @returns {Tone.TimelineSignal} this \n\t\t\t */\n\t\t    Tone.TimelineSignal.prototype.setValueCurveAtTime = function (values, startTime, duration, scaling) {\n\t\t        scaling = this.defaultArg(scaling, 1);\n\t\t        //copy the array\n\t\t        var floats = new Array(values.length);\n\t\t        for (var i = 0; i < floats.length; i++) {\n\t\t            floats[i] = this._fromUnits(values[i]) * scaling;\n\t\t        }\n\t\t        startTime = this.toSeconds(startTime);\n\t\t        duration = this.toSeconds(duration);\n\t\t        this._events.add({\n\t\t            'type': Tone.TimelineSignal.Type.Curve,\n\t\t            'value': floats,\n\t\t            'time': startTime,\n\t\t            'duration': duration\n\t\t        });\n\t\t        //set the first value\n\t\t        this._param.setValueAtTime(floats[0], startTime);\n\t\t        //schedule a lienar ramp for each of the segments\n\t\t        for (var j = 1; j < floats.length; j++) {\n\t\t            var segmentTime = startTime + j / (floats.length - 1) * duration;\n\t\t            this._param.linearRampToValueAtTime(floats[j], segmentTime);\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Cancels all scheduled parameter changes with times greater than or \n\t\t\t *  equal to startTime.\n\t\t\t *  \n\t\t\t *  @param  {Time} startTime\n\t\t\t *  @returns {Tone.TimelineSignal} this\n\t\t\t */\n\t\t    Tone.TimelineSignal.prototype.cancelScheduledValues = function (after) {\n\t\t        after = this.toSeconds(after);\n\t\t        this._events.cancel(after);\n\t\t        this._param.cancelScheduledValues(after);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Sets the computed value at the given time. This provides\n\t\t\t *  a point from which a linear or exponential curve\n\t\t\t *  can be scheduled after. Will cancel events after \n\t\t\t *  the given time and shorten the currently scheduled\n\t\t\t *  linear or exponential ramp so that it ends at `time` .\n\t\t\t *  This is to avoid discontinuities and clicks in envelopes. \n\t\t\t *  @param {Time} time When to set the ramp point\n\t\t\t *  @returns {Tone.TimelineSignal} this\n\t\t\t */\n\t\t    Tone.TimelineSignal.prototype.setRampPoint = function (time) {\n\t\t        time = this.toSeconds(time);\n\t\t        //get the value at the given time\n\t\t        var val = this._toUnits(this.getValueAtTime(time));\n\t\t        //if there is an event at the given time\n\t\t        //and that even is not a \"set\"\n\t\t        var before = this._searchBefore(time);\n\t\t        if (before && before.time === time) {\n\t\t            //remove everything after\n\t\t            this.cancelScheduledValues(time + this.sampleTime);\n\t\t        } else if (before && before.type === Tone.TimelineSignal.Type.Curve && before.time + before.duration > time) {\n\t\t            //if the curve is still playing\n\t\t            //cancel the curve\n\t\t            this.cancelScheduledValues(time);\n\t\t            this.linearRampToValueAtTime(val, time);\n\t\t        } else {\n\t\t            //reschedule the next event to end at the given time\n\t\t            var after = this._searchAfter(time);\n\t\t            if (after) {\n\t\t                //cancel the next event(s)\n\t\t                this.cancelScheduledValues(time);\n\t\t                if (after.type === Tone.TimelineSignal.Type.Linear) {\n\t\t                    this.linearRampToValueAtTime(val, time);\n\t\t                } else if (after.type === Tone.TimelineSignal.Type.Exponential) {\n\t\t                    this.exponentialRampToValueAtTime(val, time);\n\t\t                }\n\t\t            }\n\t\t            this.setValueAtTime(val, time);\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Do a linear ramp to the given value between the start and finish times.\n\t\t\t *  @param {Number} value The value to ramp to.\n\t\t\t *  @param {Time} start The beginning anchor point to do the linear ramp\n\t\t\t *  @param {Time} finish The ending anchor point by which the value of\n\t\t\t *                       the signal will equal the given value.\n\t\t\t *  @returns {Tone.TimelineSignal} this\n\t\t\t */\n\t\t    Tone.TimelineSignal.prototype.linearRampToValueBetween = function (value, start, finish) {\n\t\t        this.setRampPoint(start);\n\t\t        this.linearRampToValueAtTime(value, finish);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Do a exponential ramp to the given value between the start and finish times.\n\t\t\t *  @param {Number} value The value to ramp to.\n\t\t\t *  @param {Time} start The beginning anchor point to do the exponential ramp\n\t\t\t *  @param {Time} finish The ending anchor point by which the value of\n\t\t\t *                       the signal will equal the given value.\n\t\t\t *  @returns {Tone.TimelineSignal} this\n\t\t\t */\n\t\t    Tone.TimelineSignal.prototype.exponentialRampToValueBetween = function (value, start, finish) {\n\t\t        this.setRampPoint(start);\n\t\t        this.exponentialRampToValueAtTime(value, finish);\n\t\t        return this;\n\t\t    };\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    //\tGETTING SCHEDULED VALUES\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    /**\n\t\t\t *  Returns the value before or equal to the given time\n\t\t\t *  @param  {Number}  time  The time to query\n\t\t\t *  @return  {Object}  The event at or before the given time.\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.TimelineSignal.prototype._searchBefore = function (time) {\n\t\t        return this._events.get(time);\n\t\t    };\n\t\t    /**\n\t\t\t *  The event after the given time\n\t\t\t *  @param  {Number}  time  The time to query.\n\t\t\t *  @return  {Object}  The next event after the given time\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.TimelineSignal.prototype._searchAfter = function (time) {\n\t\t        return this._events.getAfter(time);\n\t\t    };\n\t\t    /**\n\t\t\t *  Get the scheduled value at the given time. This will\n\t\t\t *  return the unconverted (raw) value.\n\t\t\t *  @param  {Number}  time  The time in seconds.\n\t\t\t *  @return  {Number}  The scheduled value at the given time.\n\t\t\t */\n\t\t    Tone.TimelineSignal.prototype.getValueAtTime = function (time) {\n\t\t        time = this.toSeconds(time);\n\t\t        var after = this._searchAfter(time);\n\t\t        var before = this._searchBefore(time);\n\t\t        var value = this._initial;\n\t\t        //if it was set by\n\t\t        if (before === null) {\n\t\t            value = this._initial;\n\t\t        } else if (before.type === Tone.TimelineSignal.Type.Target) {\n\t\t            var previous = this._events.getBefore(before.time);\n\t\t            var previouVal;\n\t\t            if (previous === null) {\n\t\t                previouVal = this._initial;\n\t\t            } else {\n\t\t                previouVal = previous.value;\n\t\t            }\n\t\t            value = this._exponentialApproach(before.time, previouVal, before.value, before.constant, time);\n\t\t        } else if (before.type === Tone.TimelineSignal.Type.Curve) {\n\t\t            value = this._curveInterpolate(before.time, before.value, before.duration, time);\n\t\t        } else if (after === null) {\n\t\t            value = before.value;\n\t\t        } else if (after.type === Tone.TimelineSignal.Type.Linear) {\n\t\t            value = this._linearInterpolate(before.time, before.value, after.time, after.value, time);\n\t\t        } else if (after.type === Tone.TimelineSignal.Type.Exponential) {\n\t\t            value = this._exponentialInterpolate(before.time, before.value, after.time, after.value, time);\n\t\t        } else {\n\t\t            value = before.value;\n\t\t        }\n\t\t        return value;\n\t\t    };\n\t\t    /**\n\t\t\t *  When signals connect to other signals or AudioParams, \n\t\t\t *  they take over the output value of that signal or AudioParam. \n\t\t\t *  For all other nodes, the behavior is the same as a default <code>connect</code>. \n\t\t\t *\n\t\t\t *  @override\n\t\t\t *  @param {AudioParam|AudioNode|Tone.Signal|Tone} node \n\t\t\t *  @param {number} [outputNumber=0] The output number to connect from.\n\t\t\t *  @param {number} [inputNumber=0] The input number to connect to.\n\t\t\t *  @returns {Tone.TimelineSignal} this\n\t\t\t *  @method\n\t\t\t */\n\t\t    Tone.TimelineSignal.prototype.connect = Tone.SignalBase.prototype.connect;\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    //\tAUTOMATION CURVE CALCULATIONS\n\t\t    //\tMIT License, copyright (c) 2014 Jordan Santell\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    /**\n\t\t\t *  Calculates the the value along the curve produced by setTargetAtTime\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.TimelineSignal.prototype._exponentialApproach = function (t0, v0, v1, timeConstant, t) {\n\t\t        return v1 + (v0 - v1) * Math.exp(-(t - t0) / timeConstant);\n\t\t    };\n\t\t    /**\n\t\t\t *  Calculates the the value along the curve produced by linearRampToValueAtTime\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.TimelineSignal.prototype._linearInterpolate = function (t0, v0, t1, v1, t) {\n\t\t        return v0 + (v1 - v0) * ((t - t0) / (t1 - t0));\n\t\t    };\n\t\t    /**\n\t\t\t *  Calculates the the value along the curve produced by exponentialRampToValueAtTime\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.TimelineSignal.prototype._exponentialInterpolate = function (t0, v0, t1, v1, t) {\n\t\t        v0 = Math.max(this._minOutput, v0);\n\t\t        return v0 * Math.pow(v1 / v0, (t - t0) / (t1 - t0));\n\t\t    };\n\t\t    /**\n\t\t\t *  Calculates the the value along the curve produced by setValueCurveAtTime\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.TimelineSignal.prototype._curveInterpolate = function (start, curve, duration, time) {\n\t\t        var len = curve.length;\n\t\t        // If time is after duration, return the last curve value\n\t\t        if (time >= start + duration) {\n\t\t            return curve[len - 1];\n\t\t        } else if (time <= start) {\n\t\t            return curve[0];\n\t\t        } else {\n\t\t            var progress = (time - start) / duration;\n\t\t            var lowerIndex = Math.floor((len - 1) * progress);\n\t\t            var upperIndex = Math.ceil((len - 1) * progress);\n\t\t            var lowerVal = curve[lowerIndex];\n\t\t            var upperVal = curve[upperIndex];\n\t\t            if (upperIndex === lowerIndex) {\n\t\t                return lowerVal;\n\t\t            } else {\n\t\t                return this._linearInterpolate(lowerIndex, lowerVal, upperIndex, upperVal, progress * (len - 1));\n\t\t            }\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Clean up.\n\t\t\t *  @return {Tone.TimelineSignal} this\n\t\t\t */\n\t\t    Tone.TimelineSignal.prototype.dispose = function () {\n\t\t        Tone.Signal.prototype.dispose.call(this);\n\t\t        Tone.Param.prototype.dispose.call(this);\n\t\t        this._events.dispose();\n\t\t        this._events = null;\n\t\t    };\n\t\t    return Tone.TimelineSignal;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Pow applies an exponent to the incoming signal. The incoming signal\n\t\t\t *         must be AudioRange.\n\t\t\t *\n\t\t\t *  @extends {Tone.SignalBase}\n\t\t\t *  @constructor\n\t\t\t *  @param {Positive} exp The exponent to apply to the incoming signal, must be at least 2. \n\t\t\t *  @example\n\t\t\t * var pow = new Tone.Pow(2);\n\t\t\t * var sig = new Tone.Signal(0.5).connect(pow);\n\t\t\t * //output of pow is 0.25. \n\t\t\t */\n\t\t    Tone.Pow = function (exp) {\n\t\t        /**\n\t\t\t\t * the exponent\n\t\t\t\t * @private\n\t\t\t\t * @type {number}\n\t\t\t\t */\n\t\t        this._exp = this.defaultArg(exp, 1);\n\t\t        /**\n\t\t\t\t *  @type {WaveShaperNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._expScaler = this.input = this.output = new Tone.WaveShaper(this._expFunc(this._exp), 8192);\n\t\t    };\n\t\t    Tone.extend(Tone.Pow, Tone.SignalBase);\n\t\t    /**\n\t\t\t * The value of the exponent.\n\t\t\t * @memberOf Tone.Pow#\n\t\t\t * @type {number}\n\t\t\t * @name value\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Pow.prototype, 'value', {\n\t\t        get: function () {\n\t\t            return this._exp;\n\t\t        },\n\t\t        set: function (exp) {\n\t\t            this._exp = exp;\n\t\t            this._expScaler.setMap(this._expFunc(this._exp));\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  the function which maps the waveshaper\n\t\t\t *  @param   {number} exp\n\t\t\t *  @return {function}\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Pow.prototype._expFunc = function (exp) {\n\t\t        return function (val) {\n\t\t            return Math.pow(Math.abs(val), exp);\n\t\t        };\n\t\t    };\n\t\t    /**\n\t\t\t *  Clean up.\n\t\t\t *  @returns {Tone.Pow} this\n\t\t\t */\n\t\t    Tone.Pow.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._expScaler.dispose();\n\t\t        this._expScaler = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Pow;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  Tone.Envelope is an [ADSR](https://en.wikipedia.org/wiki/Synthesizer#ADSR_envelope)\n\t\t\t *          envelope generator. Tone.Envelope outputs a signal which \n\t\t\t *          can be connected to an AudioParam or Tone.Signal. \n\t\t\t *          <img src=\"https://upload.wikimedia.org/wikipedia/commons/e/ea/ADSR_parameter.svg\">\n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone}\n\t\t\t *  @param {Time} [attack] The amount of time it takes for the envelope to go from \n\t\t\t *                         0 to it's maximum value. \n\t\t\t *  @param {Time} [decay]\tThe period of time after the attack that it takes for the envelope\n\t\t\t *                       \tto fall to the sustain value. \n\t\t\t *  @param {NormalRange} [sustain]\tThe percent of the maximum value that the envelope rests at until\n\t\t\t *                                \tthe release is triggered. \n\t\t\t *  @param {Time} [release]\tThe amount of time after the release is triggered it takes to reach 0. \n\t\t\t *  @example\n\t\t\t * //an amplitude envelope\n\t\t\t * var gainNode = Tone.context.createGain();\n\t\t\t * var env = new Tone.Envelope({\n\t\t\t * \t\"attack\" : 0.1,\n\t\t\t * \t\"decay\" : 0.2,\n\t\t\t * \t\"sustain\" : 1,\n\t\t\t * \t\"release\" : 0.8,\n\t\t\t * });\n\t\t\t * env.connect(gainNode.gain);\n\t\t\t */\n\t\t    Tone.Envelope = function () {\n\t\t        //get all of the defaults\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'attack',\n\t\t            'decay',\n\t\t            'sustain',\n\t\t            'release'\n\t\t        ], Tone.Envelope.defaults);\n\t\t        /** \n\t\t\t\t *  When triggerAttack is called, the attack time is the amount of\n\t\t\t\t *  time it takes for the envelope to reach it's maximum value. \n\t\t\t\t *  @type {Time}\n\t\t\t\t */\n\t\t        this.attack = options.attack;\n\t\t        /**\n\t\t\t\t *  After the attack portion of the envelope, the value will fall\n\t\t\t\t *  over the duration of the decay time to it's sustain value. \n\t\t\t\t *  @type {Time}\n\t\t\t\t */\n\t\t        this.decay = options.decay;\n\t\t        /**\n\t\t\t\t * \tThe sustain value is the value \n\t\t\t\t * \twhich the envelope rests at after triggerAttack is\n\t\t\t\t * \tcalled, but before triggerRelease is invoked. \n\t\t\t\t *  @type {NormalRange}\n\t\t\t\t */\n\t\t        this.sustain = options.sustain;\n\t\t        /**\n\t\t\t\t *  After triggerRelease is called, the envelope's\n\t\t\t\t *  value will fall to it's miminum value over the\n\t\t\t\t *  duration of the release time. \n\t\t\t\t *  @type {Time}\n\t\t\t\t */\n\t\t        this.release = options.release;\n\t\t        /**\n\t\t\t\t *  the next time the envelope is at standby\n\t\t\t\t *  @type {number}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._attackCurve = 'linear';\n\t\t        /**\n\t\t\t\t *  the next time the envelope is at standby\n\t\t\t\t *  @type {number}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._releaseCurve = 'exponential';\n\t\t        /**\n\t\t\t\t *  the signal\n\t\t\t\t *  @type {Tone.TimelineSignal}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._sig = this.output = new Tone.TimelineSignal();\n\t\t        this._sig.setValueAtTime(0, 0);\n\t\t        //set the attackCurve initially\n\t\t        this.attackCurve = options.attackCurve;\n\t\t        this.releaseCurve = options.releaseCurve;\n\t\t    };\n\t\t    Tone.extend(Tone.Envelope);\n\t\t    /**\n\t\t\t *  the default parameters\n\t\t\t *  @static\n\t\t\t *  @const\n\t\t\t */\n\t\t    Tone.Envelope.defaults = {\n\t\t        'attack': 0.01,\n\t\t        'decay': 0.1,\n\t\t        'sustain': 0.5,\n\t\t        'release': 1,\n\t\t        'attackCurve': 'linear',\n\t\t        'releaseCurve': 'exponential'\n\t\t    };\n\t\t    /**\n\t\t\t * Read the current value of the envelope. Useful for \n\t\t\t * syncronizing visual output to the envelope. \n\t\t\t * @memberOf Tone.Envelope#\n\t\t\t * @type {Number}\n\t\t\t * @name value\n\t\t\t * @readOnly\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Envelope.prototype, 'value', {\n\t\t        get: function () {\n\t\t            return this.getValueAtTime(this.now());\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The shape of the attack. \n\t\t\t * Can be any of these strings:\n\t\t\t * <ul>\n\t\t\t *   <li>linear</li>\n\t\t\t *   <li>exponential</li>\n\t\t\t *   <li>sine</li>\n\t\t\t *   <li>cosine</li>\n\t\t\t *   <li>bounce</li>\n\t\t\t *   <li>ripple</li>\n\t\t\t *   <li>step</li>\n\t\t\t * </ul>\n\t\t\t * Can also be an array which describes the curve. Values\n\t\t\t * in the array are evenly subdivided and linearly\n\t\t\t * interpolated over the duration of the attack. \n\t\t\t * @memberOf Tone.Envelope#\n\t\t\t * @type {String|Array}\n\t\t\t * @name attackCurve\n\t\t\t * @example\n\t\t\t * env.attackCurve = \"linear\";\n\t\t\t * @example\n\t\t\t * //can also be an array\n\t\t\t * env.attackCurve = [0, 0.2, 0.3, 0.4, 1]\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Envelope.prototype, 'attackCurve', {\n\t\t        get: function () {\n\t\t            if (this.isString(this._attackCurve)) {\n\t\t                return this._attackCurve;\n\t\t            } else if (this.isArray(this._attackCurve)) {\n\t\t                //look up the name in the curves array\n\t\t                for (var type in Tone.Envelope.Type) {\n\t\t                    if (Tone.Envelope.Type[type].In === this._attackCurve) {\n\t\t                        return type;\n\t\t                    }\n\t\t                }\n\t\t                //otherwise just return the array\n\t\t                return this._attackCurve;\n\t\t            }\n\t\t        },\n\t\t        set: function (curve) {\n\t\t            //check if it's a valid type\n\t\t            if (Tone.Envelope.Type.hasOwnProperty(curve)) {\n\t\t                var curveDef = Tone.Envelope.Type[curve];\n\t\t                if (this.isObject(curveDef)) {\n\t\t                    this._attackCurve = curveDef.In;\n\t\t                } else {\n\t\t                    this._attackCurve = curveDef;\n\t\t                }\n\t\t            } else if (this.isArray(curve)) {\n\t\t                this._attackCurve = curve;\n\t\t            } else {\n\t\t                throw new Error('Tone.Envelope: invalid curve: ' + curve);\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The shape of the release. See the attack curve types. \n\t\t\t * @memberOf Tone.Envelope#\n\t\t\t * @type {String|Array}\n\t\t\t * @name releaseCurve\n\t\t\t * @example\n\t\t\t * env.releaseCurve = \"linear\";\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Envelope.prototype, 'releaseCurve', {\n\t\t        get: function () {\n\t\t            if (this.isString(this._releaseCurve)) {\n\t\t                return this._releaseCurve;\n\t\t            } else if (this.isArray(this._releaseCurve)) {\n\t\t                //look up the name in the curves array\n\t\t                for (var type in Tone.Envelope.Type) {\n\t\t                    if (Tone.Envelope.Type[type].Out === this._releaseCurve) {\n\t\t                        return type;\n\t\t                    }\n\t\t                }\n\t\t                //otherwise just return the array\n\t\t                return this._releaseCurve;\n\t\t            }\n\t\t        },\n\t\t        set: function (curve) {\n\t\t            //check if it's a valid type\n\t\t            if (Tone.Envelope.Type.hasOwnProperty(curve)) {\n\t\t                var curveDef = Tone.Envelope.Type[curve];\n\t\t                if (this.isObject(curveDef)) {\n\t\t                    this._releaseCurve = curveDef.Out;\n\t\t                } else {\n\t\t                    this._releaseCurve = curveDef;\n\t\t                }\n\t\t            } else if (this.isArray(curve)) {\n\t\t                this._releaseCurve = curve;\n\t\t            } else {\n\t\t                throw new Error('Tone.Envelope: invalid curve: ' + curve);\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Trigger the attack/decay portion of the ADSR envelope. \n\t\t\t *  @param  {Time} [time=now] When the attack should start.\n\t\t\t *  @param {NormalRange} [velocity=1] The velocity of the envelope scales the vales.\n\t\t\t *                               number between 0-1\n\t\t\t *  @returns {Tone.Envelope} this\n\t\t\t *  @example\n\t\t\t *  //trigger the attack 0.5 seconds from now with a velocity of 0.2\n\t\t\t *  env.triggerAttack(\"+0.5\", 0.2);\n\t\t\t */\n\t\t    Tone.Envelope.prototype.triggerAttack = function (time, velocity) {\n\t\t        time = this.toSeconds(time);\n\t\t        var originalAttack = this.toSeconds(this.attack);\n\t\t        var attack = originalAttack;\n\t\t        var decay = this.toSeconds(this.decay);\n\t\t        velocity = this.defaultArg(velocity, 1);\n\t\t        //check if it's not a complete attack\n\t\t        var currentValue = this.getValueAtTime(time);\n\t\t        if (currentValue > 0) {\n\t\t            //subtract the current value from the attack time\n\t\t            var attackRate = 1 / attack;\n\t\t            var remainingDistance = 1 - currentValue;\n\t\t            //the attack is now the remaining time\n\t\t            attack = remainingDistance / attackRate;\n\t\t        }\n\t\t        //attack\n\t\t        if (this._attackCurve === 'linear') {\n\t\t            this._sig.linearRampToValue(velocity, attack, time);\n\t\t        } else if (this._attackCurve === 'exponential') {\n\t\t            this._sig.exponentialRampToValue(velocity, attack, time);\n\t\t        } else if (attack > 0) {\n\t\t            this._sig.setRampPoint(time);\n\t\t            var curve = this._attackCurve;\n\t\t            //take only a portion of the curve\n\t\t            if (attack < originalAttack) {\n\t\t                var percentComplete = 1 - attack / originalAttack;\n\t\t                var sliceIndex = Math.floor(percentComplete * this._attackCurve.length);\n\t\t                curve = this._attackCurve.slice(sliceIndex);\n\t\t                //the first index is the current value\n\t\t                curve[0] = currentValue;\n\t\t            }\n\t\t            this._sig.setValueCurveAtTime(curve, time, attack, velocity);\n\t\t        }\n\t\t        //decay\n\t\t        this._sig.exponentialRampToValue(velocity * this.sustain, decay, attack + time);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Triggers the release of the envelope.\n\t\t\t *  @param  {Time} [time=now] When the release portion of the envelope should start. \n\t\t\t *  @returns {Tone.Envelope} this\n\t\t\t *  @example\n\t\t\t *  //trigger release immediately\n\t\t\t *  env.triggerRelease();\n\t\t\t */\n\t\t    Tone.Envelope.prototype.triggerRelease = function (time) {\n\t\t        time = this.toSeconds(time);\n\t\t        var currentValue = this.getValueAtTime(time);\n\t\t        if (currentValue > 0) {\n\t\t            var release = this.toSeconds(this.release);\n\t\t            if (this._releaseCurve === 'linear') {\n\t\t                this._sig.linearRampToValue(0, release, time);\n\t\t            } else if (this._releaseCurve === 'exponential') {\n\t\t                this._sig.exponentialRampToValue(0, release, time);\n\t\t            } else {\n\t\t                var curve = this._releaseCurve;\n\t\t                if (this.isArray(curve)) {\n\t\t                    this._sig.setRampPoint(time);\n\t\t                    this._sig.setValueCurveAtTime(curve, time, release, currentValue);\n\t\t                }\n\t\t            }\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Get the scheduled value at the given time. This will\n\t\t\t *  return the unconverted (raw) value.\n\t\t\t *  @param  {Number}  time  The time in seconds.\n\t\t\t *  @return  {Number}  The scheduled value at the given time.\n\t\t\t */\n\t\t    Tone.Envelope.prototype.getValueAtTime = function (time) {\n\t\t        return this._sig.getValueAtTime(time);\n\t\t    };\n\t\t    /**\n\t\t\t *  triggerAttackRelease is shorthand for triggerAttack, then waiting\n\t\t\t *  some duration, then triggerRelease. \n\t\t\t *  @param {Time} duration The duration of the sustain.\n\t\t\t *  @param {Time} [time=now] When the attack should be triggered.\n\t\t\t *  @param {number} [velocity=1] The velocity of the envelope. \n\t\t\t *  @returns {Tone.Envelope} this\n\t\t\t *  @example\n\t\t\t * //trigger the attack and then the release after 0.6 seconds.\n\t\t\t * env.triggerAttackRelease(0.6);\n\t\t\t */\n\t\t    Tone.Envelope.prototype.triggerAttackRelease = function (duration, time, velocity) {\n\t\t        time = this.toSeconds(time);\n\t\t        this.triggerAttack(time, velocity);\n\t\t        this.triggerRelease(time + this.toSeconds(duration));\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Cancels all scheduled envelope changes after the given time.\n\t\t\t *  @param  {Time} after\n\t\t\t *  @returns {Tone.Envelope} this\n\t\t\t */\n\t\t    Tone.Envelope.prototype.cancel = function (after) {\n\t\t        this._sig.cancelScheduledValues(after);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Borrows the connect method from Tone.Signal. \n\t\t\t *  @function\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Envelope.prototype.connect = Tone.Signal.prototype.connect;\n\t\t    /**\n\t\t \t *  Generate some complex envelope curves. \n\t\t \t */\n\t\t    (function _createCurves() {\n\t\t        var curveLen = 128;\n\t\t        var i, k;\n\t\t        //cosine curve\n\t\t        var cosineCurve = [];\n\t\t        for (i = 0; i < curveLen; i++) {\n\t\t            cosineCurve[i] = Math.sin(i / (curveLen - 1) * (Math.PI / 2));\n\t\t        }\n\t\t        //ripple curve\n\t\t        var rippleCurve = [];\n\t\t        var rippleCurveFreq = 6.4;\n\t\t        for (i = 0; i < curveLen - 1; i++) {\n\t\t            k = i / (curveLen - 1);\n\t\t            var sineWave = Math.sin(k * (Math.PI * 2) * rippleCurveFreq - Math.PI / 2) + 1;\n\t\t            rippleCurve[i] = sineWave / 10 + k * 0.83;\n\t\t        }\n\t\t        rippleCurve[curveLen - 1] = 1;\n\t\t        //stairs curve\n\t\t        var stairsCurve = [];\n\t\t        var steps = 5;\n\t\t        for (i = 0; i < curveLen; i++) {\n\t\t            stairsCurve[i] = Math.ceil(i / (curveLen - 1) * steps) / steps;\n\t\t        }\n\t\t        //in-out easing curve\n\t\t        var sineCurve = [];\n\t\t        for (i = 0; i < curveLen; i++) {\n\t\t            k = i / (curveLen - 1);\n\t\t            sineCurve[i] = 0.5 * (1 - Math.cos(Math.PI * k));\n\t\t        }\n\t\t        //a bounce curve\n\t\t        var bounceCurve = [];\n\t\t        for (i = 0; i < curveLen; i++) {\n\t\t            k = i / (curveLen - 1);\n\t\t            var freq = Math.pow(k, 3) * 4 + 0.2;\n\t\t            var val = Math.cos(freq * Math.PI * 2 * k);\n\t\t            bounceCurve[i] = Math.abs(val * (1 - k));\n\t\t        }\n\t\t        /**\n\t\t\t\t *  Invert a value curve to make it work for the release\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        function invertCurve(curve) {\n\t\t            var out = new Array(curve.length);\n\t\t            for (var j = 0; j < curve.length; j++) {\n\t\t                out[j] = 1 - curve[j];\n\t\t            }\n\t\t            return out;\n\t\t        }\n\t\t        /**\n\t\t\t\t *  reverse the curve\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        function reverseCurve(curve) {\n\t\t            return curve.slice(0).reverse();\n\t\t        }\n\t\t        /**\n\t\t\t\t *  attack and release curve arrays\n\t\t\t\t *  @type  {Object}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        Tone.Envelope.Type = {\n\t\t            'linear': 'linear',\n\t\t            'exponential': 'exponential',\n\t\t            'bounce': {\n\t\t                In: invertCurve(bounceCurve),\n\t\t                Out: bounceCurve\n\t\t            },\n\t\t            'cosine': {\n\t\t                In: cosineCurve,\n\t\t                Out: reverseCurve(cosineCurve)\n\t\t            },\n\t\t            'step': {\n\t\t                In: stairsCurve,\n\t\t                Out: invertCurve(stairsCurve)\n\t\t            },\n\t\t            'ripple': {\n\t\t                In: rippleCurve,\n\t\t                Out: invertCurve(rippleCurve)\n\t\t            },\n\t\t            'sine': {\n\t\t                In: sineCurve,\n\t\t                Out: invertCurve(sineCurve)\n\t\t            }\n\t\t        };\n\t\t    }());\n\t\t    /**\n\t\t\t *  Disconnect and dispose.\n\t\t\t *  @returns {Tone.Envelope} this\n\t\t\t */\n\t\t    Tone.Envelope.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._sig.dispose();\n\t\t        this._sig = null;\n\t\t        this._attackCurve = null;\n\t\t        this._releaseCurve = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Envelope;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  Tone.AmplitudeEnvelope is a Tone.Envelope connected to a gain node. \n\t\t\t *          Unlike Tone.Envelope, which outputs the envelope's value, Tone.AmplitudeEnvelope accepts\n\t\t\t *          an audio signal as the input and will apply the envelope to the amplitude\n\t\t\t *          of the signal. Read more about ADSR Envelopes on [Wikipedia](https://en.wikipedia.org/wiki/Synthesizer#ADSR_envelope).\n\t\t\t *  \n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.Envelope}\n\t\t\t *  @param {Time|Object} [attack] The amount of time it takes for the envelope to go from \n\t\t\t *                               0 to it's maximum value. \n\t\t\t *  @param {Time} [decay]\tThe period of time after the attack that it takes for the envelope\n\t\t\t *                       \tto fall to the sustain value. \n\t\t\t *  @param {NormalRange} [sustain]\tThe percent of the maximum value that the envelope rests at until\n\t\t\t *                                \tthe release is triggered. \n\t\t\t *  @param {Time} [release]\tThe amount of time after the release is triggered it takes to reach 0. \n\t\t\t *  @example\n\t\t\t * var ampEnv = new Tone.AmplitudeEnvelope({\n\t\t\t * \t\"attack\": 0.1,\n\t\t\t * \t\"decay\": 0.2,\n\t\t\t * \t\"sustain\": 1.0,\n\t\t\t * \t\"release\": 0.8\n\t\t\t * }).toMaster();\n\t\t\t * //create an oscillator and connect it\n\t\t\t * var osc = new Tone.Oscillator().connect(ampEnv).start();\n\t\t\t * //trigger the envelopes attack and release \"8t\" apart\n\t\t\t * ampEnv.triggerAttackRelease(\"8t\");\n\t\t\t */\n\t\t    Tone.AmplitudeEnvelope = function () {\n\t\t        Tone.Envelope.apply(this, arguments);\n\t\t        /**\n\t\t\t\t *  the input node\n\t\t\t\t *  @type {GainNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this.input = this.output = new Tone.Gain();\n\t\t        this._sig.connect(this.output.gain);\n\t\t    };\n\t\t    Tone.extend(Tone.AmplitudeEnvelope, Tone.Envelope);\n\t\t    /**\n\t\t\t *  Clean up\n\t\t\t *  @return  {Tone.AmplitudeEnvelope}  this\n\t\t\t */\n\t\t    Tone.AmplitudeEnvelope.prototype.dispose = function () {\n\t\t        this.input.dispose();\n\t\t        this.input = null;\n\t\t        Tone.Envelope.prototype.dispose.call(this);\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.AmplitudeEnvelope;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  AnalyserNode.getFloatTimeDomainData polyfill\n\t\t\t *  @private\n\t\t\t */\n\t\t    if (window.AnalyserNode && !AnalyserNode.prototype.getFloatTimeDomainData) {\n\t\t        //referenced https://github.com/mohayonao/get-float-time-domain-data \n\t\t        AnalyserNode.prototype.getFloatTimeDomainData = function (array) {\n\t\t            var uint8 = new Uint8Array(array.length);\n\t\t            this.getByteTimeDomainData(uint8);\n\t\t            for (var i = 0; i < uint8.length; i++) {\n\t\t                array[i] = (uint8[i] - 128) / 128;\n\t\t            }\n\t\t        };\n\t\t    }\n\t\t    /**\n\t\t\t *  @class  Wrapper around the native Web Audio's \n\t\t\t *          [AnalyserNode](http://webaudio.github.io/web-audio-api/#idl-def-AnalyserNode).\n\t\t\t *          Extracts FFT or Waveform data from the incoming signal.\n\t\t\t *  @extends {Tone}\n\t\t\t *  @param {String=} type The return type of the analysis, either \"fft\", or \"waveform\". \n\t\t\t *  @param {Number=} size The size of the FFT. Value must be a power of \n\t\t\t *                       two in the range 32 to 32768.\n\t\t\t */\n\t\t    Tone.Analyser = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'type',\n\t\t            'size'\n\t\t        ], Tone.Analyser.defaults);\n\t\t        /**\n\t\t\t\t *  The analyser node.\n\t\t\t\t *  @private\n\t\t\t\t *  @type {AnalyserNode}\n\t\t\t\t */\n\t\t        this._analyser = this.input = this.output = this.context.createAnalyser();\n\t\t        /**\n\t\t\t\t *  The analysis type\n\t\t\t\t *  @type {String}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._type = options.type;\n\t\t        /**\n\t\t\t\t *  The return type of the analysis\n\t\t\t\t *  @type {String}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._returnType = options.returnType;\n\t\t        /**\n\t\t\t\t *  The buffer that the FFT data is written to\n\t\t\t\t *  @type {TypedArray}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._buffer = null;\n\t\t        //set the values initially\n\t\t        this.size = options.size;\n\t\t        this.type = options.type;\n\t\t        this.returnType = options.returnType;\n\t\t        this.minDecibels = options.minDecibels;\n\t\t        this.maxDecibels = options.maxDecibels;\n\t\t    };\n\t\t    Tone.extend(Tone.Analyser);\n\t\t    /**\n\t\t\t *  The default values.\n\t\t\t *  @type {Object}\n\t\t\t *  @const\n\t\t\t */\n\t\t    Tone.Analyser.defaults = {\n\t\t        'size': 1024,\n\t\t        'returnType': 'byte',\n\t\t        'type': 'fft',\n\t\t        'smoothing': 0.8,\n\t\t        'maxDecibels': -30,\n\t\t        'minDecibels': -100\n\t\t    };\n\t\t    /**\n\t\t\t *  Possible return types of Tone.Analyser.analyse()\n\t\t\t *  @enum {String}\n\t\t\t */\n\t\t    Tone.Analyser.Type = {\n\t\t        Waveform: 'waveform',\n\t\t        FFT: 'fft'\n\t\t    };\n\t\t    /**\n\t\t\t *  Possible return types of Tone.Analyser.analyse(). \n\t\t\t *  byte values are between [0,255]. float values are between \n\t\t\t *  [-1, 1] when the type is set to \"waveform\" and between \n\t\t\t *  [minDecibels,maxDecibels] when the type is \"fft\".\n\t\t\t *  @enum {String}\n\t\t\t */\n\t\t    Tone.Analyser.ReturnType = {\n\t\t        Byte: 'byte',\n\t\t        Float: 'float'\n\t\t    };\n\t\t    /**\n\t\t\t *  Run the analysis given the current settings and return the \n\t\t\t *  result as a TypedArray. \n\t\t\t *  @returns {TypedArray}\n\t\t\t */\n\t\t    Tone.Analyser.prototype.analyse = function () {\n\t\t        if (this._type === Tone.Analyser.Type.FFT) {\n\t\t            if (this._returnType === Tone.Analyser.ReturnType.Byte) {\n\t\t                this._analyser.getByteFrequencyData(this._buffer);\n\t\t            } else {\n\t\t                this._analyser.getFloatFrequencyData(this._buffer);\n\t\t            }\n\t\t        } else if (this._type === Tone.Analyser.Type.Waveform) {\n\t\t            if (this._returnType === Tone.Analyser.ReturnType.Byte) {\n\t\t                this._analyser.getByteTimeDomainData(this._buffer);\n\t\t            } else {\n\t\t                this._analyser.getFloatTimeDomainData(this._buffer);\n\t\t            }\n\t\t        }\n\t\t        return this._buffer;\n\t\t    };\n\t\t    /**\n\t\t\t *  The size of analysis. This must be a power of two in the range 32 to 32768.\n\t\t\t *  @memberOf Tone.Analyser#\n\t\t\t *  @type {Number}\n\t\t\t *  @name size\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Analyser.prototype, 'size', {\n\t\t        get: function () {\n\t\t            return this._analyser.frequencyBinCount;\n\t\t        },\n\t\t        set: function (size) {\n\t\t            this._analyser.fftSize = size * 2;\n\t\t            this.type = this._type;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The return type of Tone.Analyser.analyse(), either \"byte\" or \"float\". \n\t\t\t *  When the type is set to \"byte\" the range of values returned in the array\n\t\t\t *  are between 0-255. \"float\" values are between \n\t\t\t *  [-1, 1] when the type is set to \"waveform\" and between \n\t\t\t *  [minDecibels,maxDecibels] when the type is \"fft\".\n\t\t\t *  @memberOf Tone.Analyser#\n\t\t\t *  @type {String}\n\t\t\t *  @name type\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Analyser.prototype, 'returnType', {\n\t\t        get: function () {\n\t\t            return this._returnType;\n\t\t        },\n\t\t        set: function (type) {\n\t\t            if (type === Tone.Analyser.ReturnType.Byte) {\n\t\t                this._buffer = new Uint8Array(this._analyser.frequencyBinCount);\n\t\t            } else if (type === Tone.Analyser.ReturnType.Float) {\n\t\t                this._buffer = new Float32Array(this._analyser.frequencyBinCount);\n\t\t            } else {\n\t\t                throw new TypeError('Tone.Analayser: invalid return type: ' + type);\n\t\t            }\n\t\t            this._returnType = type;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The analysis function returned by Tone.Analyser.analyse(), either \"fft\" or \"waveform\". \n\t\t\t *  @memberOf Tone.Analyser#\n\t\t\t *  @type {String}\n\t\t\t *  @name type\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Analyser.prototype, 'type', {\n\t\t        get: function () {\n\t\t            return this._type;\n\t\t        },\n\t\t        set: function (type) {\n\t\t            if (type !== Tone.Analyser.Type.Waveform && type !== Tone.Analyser.Type.FFT) {\n\t\t                throw new TypeError('Tone.Analyser: invalid type: ' + type);\n\t\t            }\n\t\t            this._type = type;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  0 represents no time averaging with the last analysis frame.\n\t\t\t *  @memberOf Tone.Analyser#\n\t\t\t *  @type {NormalRange}\n\t\t\t *  @name smoothing\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Analyser.prototype, 'smoothing', {\n\t\t        get: function () {\n\t\t            return this._analyser.smoothingTimeConstant;\n\t\t        },\n\t\t        set: function (val) {\n\t\t            this._analyser.smoothingTimeConstant = val;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The smallest decibel value which is analysed by the FFT. \n\t\t\t *  @memberOf Tone.Analyser#\n\t\t\t *  @type {Decibels}\n\t\t\t *  @name minDecibels\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Analyser.prototype, 'minDecibels', {\n\t\t        get: function () {\n\t\t            return this._analyser.minDecibels;\n\t\t        },\n\t\t        set: function (val) {\n\t\t            this._analyser.minDecibels = val;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The largest decibel value which is analysed by the FFT. \n\t\t\t *  @memberOf Tone.Analyser#\n\t\t\t *  @type {Decibels}\n\t\t\t *  @name maxDecibels\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Analyser.prototype, 'maxDecibels', {\n\t\t        get: function () {\n\t\t            return this._analyser.maxDecibels;\n\t\t        },\n\t\t        set: function (val) {\n\t\t            this._analyser.maxDecibels = val;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Clean up.\n\t\t\t *  @return  {Tone.Analyser}  this\n\t\t\t */\n\t\t    Tone.Analyser.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._analyser.disconnect();\n\t\t        this._analyser = null;\n\t\t        this._buffer = null;\n\t\t    };\n\t\t    return Tone.Analyser;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Tone.Compressor is a thin wrapper around the Web Audio \n\t\t\t *         [DynamicsCompressorNode](http://webaudio.github.io/web-audio-api/#the-dynamicscompressornode-interface).\n\t\t\t *         Compression reduces the volume of loud sounds or amplifies quiet sounds \n\t\t\t *         by narrowing or \"compressing\" an audio signal's dynamic range. \n\t\t\t *         Read more on [Wikipedia](https://en.wikipedia.org/wiki/Dynamic_range_compression).\n\t\t\t *\n\t\t\t *  @extends {Tone}\n\t\t\t *  @constructor\n\t\t\t *  @param {Decibels|Object} [threshold] The value above which the compression starts to be applied.\n\t\t\t *  @param {Positive} [ratio] The gain reduction ratio.\n\t\t\t *  @example\n\t\t\t * var comp = new Tone.Compressor(-30, 3);\n\t\t\t */\n\t\t    Tone.Compressor = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'threshold',\n\t\t            'ratio'\n\t\t        ], Tone.Compressor.defaults);\n\t\t        /**\n\t\t\t\t *  the compressor node\n\t\t\t\t *  @type {DynamicsCompressorNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._compressor = this.input = this.output = this.context.createDynamicsCompressor();\n\t\t        /**\n\t\t\t\t *  the threshold vaue\n\t\t\t\t *  @type {Decibels}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.threshold = new Tone.Param({\n\t\t            'param': this._compressor.threshold,\n\t\t            'units': Tone.Type.Decibels,\n\t\t            'convert': false\n\t\t        });\n\t\t        /**\n\t\t\t\t *  The attack parameter\n\t\t\t\t *  @type {Time}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.attack = new Tone.Param(this._compressor.attack, Tone.Type.Time);\n\t\t        /**\n\t\t\t\t *  The release parameter\n\t\t\t\t *  @type {Time}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.release = new Tone.Param(this._compressor.release, Tone.Type.Time);\n\t\t        /**\n\t\t\t\t *  The knee parameter\n\t\t\t\t *  @type {Decibels}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.knee = new Tone.Param({\n\t\t            'param': this._compressor.knee,\n\t\t            'units': Tone.Type.Decibels,\n\t\t            'convert': false\n\t\t        });\n\t\t        /**\n\t\t\t\t *  The ratio value\n\t\t\t\t *  @type {Number}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.ratio = new Tone.Param({\n\t\t            'param': this._compressor.ratio,\n\t\t            'convert': false\n\t\t        });\n\t\t        //set the defaults\n\t\t        this._readOnly([\n\t\t            'knee',\n\t\t            'release',\n\t\t            'attack',\n\t\t            'ratio',\n\t\t            'threshold'\n\t\t        ]);\n\t\t        this.set(options);\n\t\t    };\n\t\t    Tone.extend(Tone.Compressor);\n\t\t    /**\n\t\t\t *  @static\n\t\t\t *  @const\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.Compressor.defaults = {\n\t\t        'ratio': 12,\n\t\t        'threshold': -24,\n\t\t        'release': 0.25,\n\t\t        'attack': 0.003,\n\t\t        'knee': 30\n\t\t    };\n\t\t    /**\n\t\t\t *  clean up\n\t\t\t *  @returns {Tone.Compressor} this\n\t\t\t */\n\t\t    Tone.Compressor.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._writable([\n\t\t            'knee',\n\t\t            'release',\n\t\t            'attack',\n\t\t            'ratio',\n\t\t            'threshold'\n\t\t        ]);\n\t\t        this._compressor.disconnect();\n\t\t        this._compressor = null;\n\t\t        this.attack.dispose();\n\t\t        this.attack = null;\n\t\t        this.release.dispose();\n\t\t        this.release = null;\n\t\t        this.threshold.dispose();\n\t\t        this.threshold = null;\n\t\t        this.ratio.dispose();\n\t\t        this.ratio = null;\n\t\t        this.knee.dispose();\n\t\t        this.knee = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Compressor;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Add a signal and a number or two signals. When no value is\n\t\t\t *         passed into the constructor, Tone.Add will sum <code>input[0]</code>\n\t\t\t *         and <code>input[1]</code>. If a value is passed into the constructor, \n\t\t\t *         the it will be added to the input.\n\t\t\t *  \n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.Signal}\n\t\t\t *  @param {number=} value If no value is provided, Tone.Add will sum the first\n\t\t\t *                         and second inputs. \n\t\t\t *  @example\n\t\t\t * var signal = new Tone.Signal(2);\n\t\t\t * var add = new Tone.Add(2);\n\t\t\t * signal.connect(add);\n\t\t\t * //the output of add equals 4\n\t\t\t *  @example\n\t\t\t * //if constructed with no arguments\n\t\t\t * //it will add the first and second inputs\n\t\t\t * var add = new Tone.Add();\n\t\t\t * var sig0 = new Tone.Signal(3).connect(add, 0, 0);\n\t\t\t * var sig1 = new Tone.Signal(4).connect(add, 0, 1);\n\t\t\t * //the output of add equals 7. \n\t\t\t */\n\t\t    Tone.Add = function (value) {\n\t\t        this.createInsOuts(2, 0);\n\t\t        /**\n\t\t\t\t *  the summing node\n\t\t\t\t *  @type {GainNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._sum = this.input[0] = this.input[1] = this.output = new Tone.Gain();\n\t\t        /**\n\t\t\t\t *  @private\n\t\t\t\t *  @type {Tone.Signal}\n\t\t\t\t */\n\t\t        this._param = this.input[1] = new Tone.Signal(value);\n\t\t        this._param.connect(this._sum);\n\t\t    };\n\t\t    Tone.extend(Tone.Add, Tone.Signal);\n\t\t    /**\n\t\t\t *  Clean up.\n\t\t\t *  @returns {Tone.Add} this\n\t\t\t */\n\t\t    Tone.Add.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._sum.dispose();\n\t\t        this._sum = null;\n\t\t        this._param.dispose();\n\t\t        this._param = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Add;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  Multiply two incoming signals. Or, if a number is given in the constructor, \n\t\t\t *          multiplies the incoming signal by that value. \n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.Signal}\n\t\t\t *  @param {number=} value Constant value to multiple. If no value is provided,\n\t\t\t *                         it will return the product of the first and second inputs\n\t\t\t *  @example\n\t\t\t * var mult = new Tone.Multiply();\n\t\t\t * var sigA = new Tone.Signal(3);\n\t\t\t * var sigB = new Tone.Signal(4);\n\t\t\t * sigA.connect(mult, 0, 0);\n\t\t\t * sigB.connect(mult, 0, 1);\n\t\t\t * //output of mult is 12.\n\t\t\t *  @example\n\t\t\t * var mult = new Tone.Multiply(10);\n\t\t\t * var sig = new Tone.Signal(2).connect(mult);\n\t\t\t * //the output of mult is 20. \n\t\t\t */\n\t\t    Tone.Multiply = function (value) {\n\t\t        this.createInsOuts(2, 0);\n\t\t        /**\n\t\t\t\t *  the input node is the same as the output node\n\t\t\t\t *  it is also the GainNode which handles the scaling of incoming signal\n\t\t\t\t *  \n\t\t\t\t *  @type {GainNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._mult = this.input[0] = this.output = new Tone.Gain();\n\t\t        /**\n\t\t\t\t *  the scaling parameter\n\t\t\t\t *  @type {AudioParam}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._param = this.input[1] = this.output.gain;\n\t\t        this._param.value = this.defaultArg(value, 0);\n\t\t    };\n\t\t    Tone.extend(Tone.Multiply, Tone.Signal);\n\t\t    /**\n\t\t\t *  clean up\n\t\t\t *  @returns {Tone.Multiply} this\n\t\t\t */\n\t\t    Tone.Multiply.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._mult.dispose();\n\t\t        this._mult = null;\n\t\t        this._param = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Multiply;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Negate the incoming signal. i.e. an input signal of 10 will output -10\n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.SignalBase}\n\t\t\t *  @example\n\t\t\t * var neg = new Tone.Negate();\n\t\t\t * var sig = new Tone.Signal(-2).connect(neg);\n\t\t\t * //output of neg is positive 2. \n\t\t\t */\n\t\t    Tone.Negate = function () {\n\t\t        /**\n\t\t\t\t *  negation is done by multiplying by -1\n\t\t\t\t *  @type {Tone.Multiply}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._multiply = this.input = this.output = new Tone.Multiply(-1);\n\t\t    };\n\t\t    Tone.extend(Tone.Negate, Tone.SignalBase);\n\t\t    /**\n\t\t\t *  clean up\n\t\t\t *  @returns {Tone.Negate} this\n\t\t\t */\n\t\t    Tone.Negate.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._multiply.dispose();\n\t\t        this._multiply = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Negate;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Subtract the signal connected to <code>input[1]</code> from the signal connected \n\t\t\t *         to <code>input[0]</code>. If an argument is provided in the constructor, the \n\t\t\t *         signals <code>.value</code> will be subtracted from the incoming signal.\n\t\t\t *\n\t\t\t *  @extends {Tone.Signal}\n\t\t\t *  @constructor\n\t\t\t *  @param {number=} value The value to subtract from the incoming signal. If the value\n\t\t\t *                         is omitted, it will subtract the second signal from the first.\n\t\t\t *  @example\n\t\t\t * var sub = new Tone.Subtract(1);\n\t\t\t * var sig = new Tone.Signal(4).connect(sub);\n\t\t\t * //the output of sub is 3. \n\t\t\t *  @example\n\t\t\t * var sub = new Tone.Subtract();\n\t\t\t * var sigA = new Tone.Signal(10);\n\t\t\t * var sigB = new Tone.Signal(2.5);\n\t\t\t * sigA.connect(sub, 0, 0);\n\t\t\t * sigB.connect(sub, 0, 1);\n\t\t\t * //output of sub is 7.5\n\t\t\t */\n\t\t    Tone.Subtract = function (value) {\n\t\t        this.createInsOuts(2, 0);\n\t\t        /**\n\t\t\t\t *  the summing node\n\t\t\t\t *  @type {GainNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._sum = this.input[0] = this.output = new Tone.Gain();\n\t\t        /**\n\t\t\t\t *  negate the input of the second input before connecting it\n\t\t\t\t *  to the summing node.\n\t\t\t\t *  @type {Tone.Negate}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._neg = new Tone.Negate();\n\t\t        /**\n\t\t\t\t *  the node where the value is set\n\t\t\t\t *  @private\n\t\t\t\t *  @type {Tone.Signal}\n\t\t\t\t */\n\t\t        this._param = this.input[1] = new Tone.Signal(value);\n\t\t        this._param.chain(this._neg, this._sum);\n\t\t    };\n\t\t    Tone.extend(Tone.Subtract, Tone.Signal);\n\t\t    /**\n\t\t\t *  Clean up.\n\t\t\t *  @returns {Tone.SignalBase} this\n\t\t\t */\n\t\t    Tone.Subtract.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._neg.dispose();\n\t\t        this._neg = null;\n\t\t        this._sum.disconnect();\n\t\t        this._sum = null;\n\t\t        this._param.dispose();\n\t\t        this._param = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Subtract;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  GreaterThanZero outputs 1 when the input is strictly greater than zero\n\t\t\t *  \n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.SignalBase}\n\t\t\t *  @example\n\t\t\t * var gt0 = new Tone.GreaterThanZero();\n\t\t\t * var sig = new Tone.Signal(0.01).connect(gt0);\n\t\t\t * //the output of gt0 is 1. \n\t\t\t * sig.value = 0;\n\t\t\t * //the output of gt0 is 0. \n\t\t\t */\n\t\t    Tone.GreaterThanZero = function () {\n\t\t        /**\n\t\t\t\t *  @type {Tone.WaveShaper}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._thresh = this.output = new Tone.WaveShaper(function (val) {\n\t\t            if (val <= 0) {\n\t\t                return 0;\n\t\t            } else {\n\t\t                return 1;\n\t\t            }\n\t\t        }, 127);\n\t\t        /**\n\t\t\t\t *  scale the first thresholded signal by a large value.\n\t\t\t\t *  this will help with values which are very close to 0\n\t\t\t\t *  @type {Tone.Multiply}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._scale = this.input = new Tone.Multiply(10000);\n\t\t        //connections\n\t\t        this._scale.connect(this._thresh);\n\t\t    };\n\t\t    Tone.extend(Tone.GreaterThanZero, Tone.SignalBase);\n\t\t    /**\n\t\t\t *  dispose method\n\t\t\t *  @returns {Tone.GreaterThanZero} this\n\t\t\t */\n\t\t    Tone.GreaterThanZero.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._scale.dispose();\n\t\t        this._scale = null;\n\t\t        this._thresh.dispose();\n\t\t        this._thresh = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.GreaterThanZero;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  Output 1 if the signal is greater than the value, otherwise outputs 0.\n\t\t\t *          can compare two signals or a signal and a number. \n\t\t\t *  \n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.Signal}\n\t\t\t *  @param {number} [value=0] the value to compare to the incoming signal\n\t\t\t *  @example\n\t\t\t * var gt = new Tone.GreaterThan(2);\n\t\t\t * var sig = new Tone.Signal(4).connect(gt);\n\t\t\t * //output of gt is equal 1. \n\t\t\t */\n\t\t    Tone.GreaterThan = function (value) {\n\t\t        this.createInsOuts(2, 0);\n\t\t        /**\n\t\t\t\t *  subtract the amount from the incoming signal\n\t\t\t\t *  @type {Tone.Subtract}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._param = this.input[0] = new Tone.Subtract(value);\n\t\t        this.input[1] = this._param.input[1];\n\t\t        /**\n\t\t\t\t *  compare that amount to zero\n\t\t\t\t *  @type {Tone.GreaterThanZero}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._gtz = this.output = new Tone.GreaterThanZero();\n\t\t        //connect\n\t\t        this._param.connect(this._gtz);\n\t\t    };\n\t\t    Tone.extend(Tone.GreaterThan, Tone.Signal);\n\t\t    /**\n\t\t\t *  dispose method\n\t\t\t *  @returns {Tone.GreaterThan} this\n\t\t\t */\n\t\t    Tone.GreaterThan.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._param.dispose();\n\t\t        this._param = null;\n\t\t        this._gtz.dispose();\n\t\t        this._gtz = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.GreaterThan;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Return the absolute value of an incoming signal. \n\t\t\t *  \n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.SignalBase}\n\t\t\t *  @example\n\t\t\t * var signal = new Tone.Signal(-1);\n\t\t\t * var abs = new Tone.Abs();\n\t\t\t * signal.connect(abs);\n\t\t\t * //the output of abs is 1. \n\t\t\t */\n\t\t    Tone.Abs = function () {\n\t\t        /**\n\t\t\t\t *  @type {Tone.LessThan}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._abs = this.input = this.output = new Tone.WaveShaper(function (val) {\n\t\t            if (val === 0) {\n\t\t                return 0;\n\t\t            } else {\n\t\t                return Math.abs(val);\n\t\t            }\n\t\t        }, 127);\n\t\t    };\n\t\t    Tone.extend(Tone.Abs, Tone.SignalBase);\n\t\t    /**\n\t\t\t *  dispose method\n\t\t\t *  @returns {Tone.Abs} this\n\t\t\t */\n\t\t    Tone.Abs.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._abs.dispose();\n\t\t        this._abs = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Abs;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Signal-rate modulo operator. Only works in AudioRange [-1, 1] and for modulus\n\t\t\t *         values in the NormalRange. \n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.SignalBase}\n\t\t\t *  @param {NormalRange} modulus The modulus to apply.\n\t\t\t *  @example\n\t\t\t * var mod = new Tone.Modulo(0.2)\n\t\t\t * var sig = new Tone.Signal(0.5).connect(mod);\n\t\t\t * //mod outputs 0.1\n\t\t\t */\n\t\t    Tone.Modulo = function (modulus) {\n\t\t        this.createInsOuts(1, 0);\n\t\t        /**\n\t\t\t\t *  A waveshaper gets the integer multiple of \n\t\t\t\t *  the input signal and the modulus.\n\t\t\t\t *  @private\n\t\t\t\t *  @type {Tone.WaveShaper}\n\t\t\t\t */\n\t\t        this._shaper = new Tone.WaveShaper(Math.pow(2, 16));\n\t\t        /**\n\t\t\t\t *  the integer multiple is multiplied by the modulus\n\t\t\t\t *  @type  {Tone.Multiply}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._multiply = new Tone.Multiply();\n\t\t        /**\n\t\t\t\t *  and subtracted from the input signal\n\t\t\t\t *  @type  {Tone.Subtract}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._subtract = this.output = new Tone.Subtract();\n\t\t        /**\n\t\t\t\t *  the modulus signal\n\t\t\t\t *  @type  {Tone.Signal}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._modSignal = new Tone.Signal(modulus);\n\t\t        //connections\n\t\t        this.input.fan(this._shaper, this._subtract);\n\t\t        this._modSignal.connect(this._multiply, 0, 0);\n\t\t        this._shaper.connect(this._multiply, 0, 1);\n\t\t        this._multiply.connect(this._subtract, 0, 1);\n\t\t        this._setWaveShaper(modulus);\n\t\t    };\n\t\t    Tone.extend(Tone.Modulo, Tone.SignalBase);\n\t\t    /**\n\t\t\t *  @param  {number}  mod  the modulus to apply\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Modulo.prototype._setWaveShaper = function (mod) {\n\t\t        this._shaper.setMap(function (val) {\n\t\t            var multiple = Math.floor((val + 0.0001) / mod);\n\t\t            return multiple;\n\t\t        });\n\t\t    };\n\t\t    /**\n\t\t\t * The modulus value.\n\t\t\t * @memberOf Tone.Modulo#\n\t\t\t * @type {NormalRange}\n\t\t\t * @name value\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Modulo.prototype, 'value', {\n\t\t        get: function () {\n\t\t            return this._modSignal.value;\n\t\t        },\n\t\t        set: function (mod) {\n\t\t            this._modSignal.value = mod;\n\t\t            this._setWaveShaper(mod);\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * clean up\n\t\t\t *  @returns {Tone.Modulo} this\n\t\t\t */\n\t\t    Tone.Modulo.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._shaper.dispose();\n\t\t        this._shaper = null;\n\t\t        this._multiply.dispose();\n\t\t        this._multiply = null;\n\t\t        this._subtract.dispose();\n\t\t        this._subtract = null;\n\t\t        this._modSignal.dispose();\n\t\t        this._modSignal = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Modulo;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class AudioToGain converts an input in AudioRange [-1,1] to NormalRange [0,1]. \n\t\t\t *         See Tone.GainToAudio.\n\t\t\t *\n\t\t\t *  @extends {Tone.SignalBase}\n\t\t\t *  @constructor\n\t\t\t *  @example\n\t\t\t *  var a2g = new Tone.AudioToGain();\n\t\t\t */\n\t\t    Tone.AudioToGain = function () {\n\t\t        /**\n\t\t\t\t *  @type {WaveShaperNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._norm = this.input = this.output = new Tone.WaveShaper(function (x) {\n\t\t            return (x + 1) / 2;\n\t\t        });\n\t\t    };\n\t\t    Tone.extend(Tone.AudioToGain, Tone.SignalBase);\n\t\t    /**\n\t\t\t *  clean up\n\t\t\t *  @returns {Tone.AudioToGain} this\n\t\t\t */\n\t\t    Tone.AudioToGain.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._norm.dispose();\n\t\t        this._norm = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.AudioToGain;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Evaluate an expression at audio rate. <br><br>\n\t\t\t *         Parsing code modified from https://code.google.com/p/tapdigit/\n\t\t\t *         Copyright 2011 2012 Ariya Hidayat, New BSD License\n\t\t\t *\n\t\t\t *  @extends {Tone.SignalBase}\n\t\t\t *  @constructor\n\t\t\t *  @param {string} expr the expression to generate\n\t\t\t *  @example\n\t\t\t * //adds the signals from input[0] and input[1].\n\t\t\t * var expr = new Tone.Expr(\"$0 + $1\");\n\t\t\t */\n\t\t    Tone.Expr = function () {\n\t\t        var expr = this._replacements(Array.prototype.slice.call(arguments));\n\t\t        var inputCount = this._parseInputs(expr);\n\t\t        /**\n\t\t\t\t *  hold onto all of the nodes for disposal\n\t\t\t\t *  @type {Array}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._nodes = [];\n\t\t        /**\n\t\t\t\t *  The inputs. The length is determined by the expression. \n\t\t\t\t *  @type {Array}\n\t\t\t\t */\n\t\t        this.input = new Array(inputCount);\n\t\t        //create a gain for each input\n\t\t        for (var i = 0; i < inputCount; i++) {\n\t\t            this.input[i] = this.context.createGain();\n\t\t        }\n\t\t        //parse the syntax tree\n\t\t        var tree = this._parseTree(expr);\n\t\t        //evaluate the results\n\t\t        var result;\n\t\t        try {\n\t\t            result = this._eval(tree);\n\t\t        } catch (e) {\n\t\t            this._disposeNodes();\n\t\t            throw new Error('Tone.Expr: Could evaluate expression: ' + expr);\n\t\t        }\n\t\t        /**\n\t\t\t\t *  The output node is the result of the expression\n\t\t\t\t *  @type {Tone}\n\t\t\t\t */\n\t\t        this.output = result;\n\t\t    };\n\t\t    Tone.extend(Tone.Expr, Tone.SignalBase);\n\t\t    //some helpers to cut down the amount of code\n\t\t    function applyBinary(Constructor, args, self) {\n\t\t        var op = new Constructor();\n\t\t        self._eval(args[0]).connect(op, 0, 0);\n\t\t        self._eval(args[1]).connect(op, 0, 1);\n\t\t        return op;\n\t\t    }\n\t\t    function applyUnary(Constructor, args, self) {\n\t\t        var op = new Constructor();\n\t\t        self._eval(args[0]).connect(op, 0, 0);\n\t\t        return op;\n\t\t    }\n\t\t    function getNumber(arg) {\n\t\t        return arg ? parseFloat(arg) : undefined;\n\t\t    }\n\t\t    function literalNumber(arg) {\n\t\t        return arg && arg.args ? parseFloat(arg.args) : undefined;\n\t\t    }\n\t\t    /*\n\t\t\t *  the Expressions that Tone.Expr can parse.\n\t\t\t *\n\t\t\t *  each expression belongs to a group and contains a regexp \n\t\t\t *  for selecting the operator as well as that operators method\n\t\t\t *  \n\t\t\t *  @type {Object}\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Expr._Expressions = {\n\t\t        //values\n\t\t        'value': {\n\t\t            'signal': {\n\t\t                regexp: /^\\d+\\.\\d+|^\\d+/,\n\t\t                method: function (arg) {\n\t\t                    var sig = new Tone.Signal(getNumber(arg));\n\t\t                    return sig;\n\t\t                }\n\t\t            },\n\t\t            'input': {\n\t\t                regexp: /^\\$\\d/,\n\t\t                method: function (arg, self) {\n\t\t                    return self.input[getNumber(arg.substr(1))];\n\t\t                }\n\t\t            }\n\t\t        },\n\t\t        //syntactic glue\n\t\t        'glue': {\n\t\t            '(': { regexp: /^\\(/ },\n\t\t            ')': { regexp: /^\\)/ },\n\t\t            ',': { regexp: /^,/ }\n\t\t        },\n\t\t        //functions\n\t\t        'func': {\n\t\t            'abs': {\n\t\t                regexp: /^abs/,\n\t\t                method: applyUnary.bind(this, Tone.Abs)\n\t\t            },\n\t\t            'mod': {\n\t\t                regexp: /^mod/,\n\t\t                method: function (args, self) {\n\t\t                    var modulus = literalNumber(args[1]);\n\t\t                    var op = new Tone.Modulo(modulus);\n\t\t                    self._eval(args[0]).connect(op);\n\t\t                    return op;\n\t\t                }\n\t\t            },\n\t\t            'pow': {\n\t\t                regexp: /^pow/,\n\t\t                method: function (args, self) {\n\t\t                    var exp = literalNumber(args[1]);\n\t\t                    var op = new Tone.Pow(exp);\n\t\t                    self._eval(args[0]).connect(op);\n\t\t                    return op;\n\t\t                }\n\t\t            },\n\t\t            'a2g': {\n\t\t                regexp: /^a2g/,\n\t\t                method: function (args, self) {\n\t\t                    var op = new Tone.AudioToGain();\n\t\t                    self._eval(args[0]).connect(op);\n\t\t                    return op;\n\t\t                }\n\t\t            }\n\t\t        },\n\t\t        //binary expressions\n\t\t        'binary': {\n\t\t            '+': {\n\t\t                regexp: /^\\+/,\n\t\t                precedence: 1,\n\t\t                method: applyBinary.bind(this, Tone.Add)\n\t\t            },\n\t\t            '-': {\n\t\t                regexp: /^\\-/,\n\t\t                precedence: 1,\n\t\t                method: function (args, self) {\n\t\t                    //both unary and binary op\n\t\t                    if (args.length === 1) {\n\t\t                        return applyUnary(Tone.Negate, args, self);\n\t\t                    } else {\n\t\t                        return applyBinary(Tone.Subtract, args, self);\n\t\t                    }\n\t\t                }\n\t\t            },\n\t\t            '*': {\n\t\t                regexp: /^\\*/,\n\t\t                precedence: 0,\n\t\t                method: applyBinary.bind(this, Tone.Multiply)\n\t\t            }\n\t\t        },\n\t\t        //unary expressions\n\t\t        'unary': {\n\t\t            '-': {\n\t\t                regexp: /^\\-/,\n\t\t                method: applyUnary.bind(this, Tone.Negate)\n\t\t            },\n\t\t            '!': {\n\t\t                regexp: /^\\!/,\n\t\t                method: applyUnary.bind(this, Tone.NOT)\n\t\t            }\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  @param   {string} expr the expression string\n\t\t\t *  @return  {number}      the input count\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Expr.prototype._parseInputs = function (expr) {\n\t\t        var inputArray = expr.match(/\\$\\d/g);\n\t\t        var inputMax = 0;\n\t\t        if (inputArray !== null) {\n\t\t            for (var i = 0; i < inputArray.length; i++) {\n\t\t                var inputNum = parseInt(inputArray[i].substr(1)) + 1;\n\t\t                inputMax = Math.max(inputMax, inputNum);\n\t\t            }\n\t\t        }\n\t\t        return inputMax;\n\t\t    };\n\t\t    /**\n\t\t\t *  @param   {Array} args \tan array of arguments\n\t\t\t *  @return  {string} the results of the replacements being replaced\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Expr.prototype._replacements = function (args) {\n\t\t        var expr = args.shift();\n\t\t        for (var i = 0; i < args.length; i++) {\n\t\t            expr = expr.replace(/\\%/i, args[i]);\n\t\t        }\n\t\t        return expr;\n\t\t    };\n\t\t    /**\n\t\t\t *  tokenize the expression based on the Expressions object\n\t\t\t *  @param   {string} expr \n\t\t\t *  @return  {Object}      returns two methods on the tokenized list, next and peek\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Expr.prototype._tokenize = function (expr) {\n\t\t        var position = -1;\n\t\t        var tokens = [];\n\t\t        while (expr.length > 0) {\n\t\t            expr = expr.trim();\n\t\t            var token = getNextToken(expr);\n\t\t            tokens.push(token);\n\t\t            expr = expr.substr(token.value.length);\n\t\t        }\n\t\t        function getNextToken(expr) {\n\t\t            for (var type in Tone.Expr._Expressions) {\n\t\t                var group = Tone.Expr._Expressions[type];\n\t\t                for (var opName in group) {\n\t\t                    var op = group[opName];\n\t\t                    var reg = op.regexp;\n\t\t                    var match = expr.match(reg);\n\t\t                    if (match !== null) {\n\t\t                        return {\n\t\t                            type: type,\n\t\t                            value: match[0],\n\t\t                            method: op.method\n\t\t                        };\n\t\t                    }\n\t\t                }\n\t\t            }\n\t\t            throw new SyntaxError('Tone.Expr: Unexpected token ' + expr);\n\t\t        }\n\t\t        return {\n\t\t            next: function () {\n\t\t                return tokens[++position];\n\t\t            },\n\t\t            peek: function () {\n\t\t                return tokens[position + 1];\n\t\t            }\n\t\t        };\n\t\t    };\n\t\t    /**\n\t\t\t *  recursively parse the string expression into a syntax tree\n\t\t\t *  \n\t\t\t *  @param   {string} expr \n\t\t\t *  @return  {Object}\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Expr.prototype._parseTree = function (expr) {\n\t\t        var lexer = this._tokenize(expr);\n\t\t        var isUndef = this.isUndef.bind(this);\n\t\t        function matchSyntax(token, syn) {\n\t\t            return !isUndef(token) && token.type === 'glue' && token.value === syn;\n\t\t        }\n\t\t        function matchGroup(token, groupName, prec) {\n\t\t            var ret = false;\n\t\t            var group = Tone.Expr._Expressions[groupName];\n\t\t            if (!isUndef(token)) {\n\t\t                for (var opName in group) {\n\t\t                    var op = group[opName];\n\t\t                    if (op.regexp.test(token.value)) {\n\t\t                        if (!isUndef(prec)) {\n\t\t                            if (op.precedence === prec) {\n\t\t                                return true;\n\t\t                            }\n\t\t                        } else {\n\t\t                            return true;\n\t\t                        }\n\t\t                    }\n\t\t                }\n\t\t            }\n\t\t            return ret;\n\t\t        }\n\t\t        function parseExpression(precedence) {\n\t\t            if (isUndef(precedence)) {\n\t\t                precedence = 5;\n\t\t            }\n\t\t            var expr;\n\t\t            if (precedence < 0) {\n\t\t                expr = parseUnary();\n\t\t            } else {\n\t\t                expr = parseExpression(precedence - 1);\n\t\t            }\n\t\t            var token = lexer.peek();\n\t\t            while (matchGroup(token, 'binary', precedence)) {\n\t\t                token = lexer.next();\n\t\t                expr = {\n\t\t                    operator: token.value,\n\t\t                    method: token.method,\n\t\t                    args: [\n\t\t                        expr,\n\t\t                        parseExpression(precedence - 1)\n\t\t                    ]\n\t\t                };\n\t\t                token = lexer.peek();\n\t\t            }\n\t\t            return expr;\n\t\t        }\n\t\t        function parseUnary() {\n\t\t            var token, expr;\n\t\t            token = lexer.peek();\n\t\t            if (matchGroup(token, 'unary')) {\n\t\t                token = lexer.next();\n\t\t                expr = parseUnary();\n\t\t                return {\n\t\t                    operator: token.value,\n\t\t                    method: token.method,\n\t\t                    args: [expr]\n\t\t                };\n\t\t            }\n\t\t            return parsePrimary();\n\t\t        }\n\t\t        function parsePrimary() {\n\t\t            var token, expr;\n\t\t            token = lexer.peek();\n\t\t            if (isUndef(token)) {\n\t\t                throw new SyntaxError('Tone.Expr: Unexpected termination of expression');\n\t\t            }\n\t\t            if (token.type === 'func') {\n\t\t                token = lexer.next();\n\t\t                return parseFunctionCall(token);\n\t\t            }\n\t\t            if (token.type === 'value') {\n\t\t                token = lexer.next();\n\t\t                return {\n\t\t                    method: token.method,\n\t\t                    args: token.value\n\t\t                };\n\t\t            }\n\t\t            if (matchSyntax(token, '(')) {\n\t\t                lexer.next();\n\t\t                expr = parseExpression();\n\t\t                token = lexer.next();\n\t\t                if (!matchSyntax(token, ')')) {\n\t\t                    throw new SyntaxError('Expected )');\n\t\t                }\n\t\t                return expr;\n\t\t            }\n\t\t            throw new SyntaxError('Tone.Expr: Parse error, cannot process token ' + token.value);\n\t\t        }\n\t\t        function parseFunctionCall(func) {\n\t\t            var token, args = [];\n\t\t            token = lexer.next();\n\t\t            if (!matchSyntax(token, '(')) {\n\t\t                throw new SyntaxError('Tone.Expr: Expected ( in a function call \"' + func.value + '\"');\n\t\t            }\n\t\t            token = lexer.peek();\n\t\t            if (!matchSyntax(token, ')')) {\n\t\t                args = parseArgumentList();\n\t\t            }\n\t\t            token = lexer.next();\n\t\t            if (!matchSyntax(token, ')')) {\n\t\t                throw new SyntaxError('Tone.Expr: Expected ) in a function call \"' + func.value + '\"');\n\t\t            }\n\t\t            return {\n\t\t                method: func.method,\n\t\t                args: args,\n\t\t                name: name\n\t\t            };\n\t\t        }\n\t\t        function parseArgumentList() {\n\t\t            var token, expr, args = [];\n\t\t            while (true) {\n\t\t                expr = parseExpression();\n\t\t                if (isUndef(expr)) {\n\t\t                    // TODO maybe throw exception?\n\t\t                    break;\n\t\t                }\n\t\t                args.push(expr);\n\t\t                token = lexer.peek();\n\t\t                if (!matchSyntax(token, ',')) {\n\t\t                    break;\n\t\t                }\n\t\t                lexer.next();\n\t\t            }\n\t\t            return args;\n\t\t        }\n\t\t        return parseExpression();\n\t\t    };\n\t\t    /**\n\t\t\t *  recursively evaluate the expression tree\n\t\t\t *  @param   {Object} tree \n\t\t\t *  @return  {AudioNode}      the resulting audio node from the expression\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Expr.prototype._eval = function (tree) {\n\t\t        if (!this.isUndef(tree)) {\n\t\t            var node = tree.method(tree.args, this);\n\t\t            this._nodes.push(node);\n\t\t            return node;\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  dispose all the nodes\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Expr.prototype._disposeNodes = function () {\n\t\t        for (var i = 0; i < this._nodes.length; i++) {\n\t\t            var node = this._nodes[i];\n\t\t            if (this.isFunction(node.dispose)) {\n\t\t                node.dispose();\n\t\t            } else if (this.isFunction(node.disconnect)) {\n\t\t                node.disconnect();\n\t\t            }\n\t\t            node = null;\n\t\t            this._nodes[i] = null;\n\t\t        }\n\t\t        this._nodes = null;\n\t\t    };\n\t\t    /**\n\t\t\t *  clean up\n\t\t\t */\n\t\t    Tone.Expr.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._disposeNodes();\n\t\t    };\n\t\t    return Tone.Expr;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Convert an incoming signal between 0, 1 to an equal power gain scale.\n\t\t\t *\n\t\t\t *  @extends {Tone.SignalBase}\n\t\t\t *  @constructor\n\t\t\t *  @example\n\t\t\t * var eqPowGain = new Tone.EqualPowerGain();\n\t\t\t */\n\t\t    Tone.EqualPowerGain = function () {\n\t\t        /**\n\t\t\t\t *  @type {Tone.WaveShaper}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._eqPower = this.input = this.output = new Tone.WaveShaper(function (val) {\n\t\t            if (Math.abs(val) < 0.001) {\n\t\t                //should output 0 when input is 0\n\t\t                return 0;\n\t\t            } else {\n\t\t                return this.equalPowerScale(val);\n\t\t            }\n\t\t        }.bind(this), 4096);\n\t\t    };\n\t\t    Tone.extend(Tone.EqualPowerGain, Tone.SignalBase);\n\t\t    /**\n\t\t\t *  clean up\n\t\t\t *  @returns {Tone.EqualPowerGain} this\n\t\t\t */\n\t\t    Tone.EqualPowerGain.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._eqPower.dispose();\n\t\t        this._eqPower = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.EqualPowerGain;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t * @class  Tone.Crossfade provides equal power fading between two inputs. \n\t\t\t *         More on crossfading technique [here](https://en.wikipedia.org/wiki/Fade_(audio_engineering)#Crossfading).\n\t\t\t *\n\t\t\t * @constructor\n\t\t\t * @extends {Tone}\n\t\t\t * @param {NormalRange} [initialFade=0.5]\n\t\t\t * @example\n\t\t\t * var crossFade = new Tone.CrossFade(0.5);\n\t\t\t * //connect effect A to crossfade from\n\t\t\t * //effect output 0 to crossfade input 0\n\t\t\t * effectA.connect(crossFade, 0, 0);\n\t\t\t * //connect effect B to crossfade from\n\t\t\t * //effect output 0 to crossfade input 1\n\t\t\t * effectB.connect(crossFade, 0, 1);\n\t\t\t * crossFade.fade.value = 0;\n\t\t\t * // ^ only effectA is output\n\t\t\t * crossFade.fade.value = 1;\n\t\t\t * // ^ only effectB is output\n\t\t\t * crossFade.fade.value = 0.5;\n\t\t\t * // ^ the two signals are mixed equally. \n\t\t\t */\n\t\t    Tone.CrossFade = function (initialFade) {\n\t\t        this.createInsOuts(2, 1);\n\t\t        /**\n\t\t\t\t *  Alias for <code>input[0]</code>. \n\t\t\t\t *  @type {Tone.Gain}\n\t\t\t\t */\n\t\t        this.a = this.input[0] = new Tone.Gain();\n\t\t        /**\n\t\t\t\t *  Alias for <code>input[1]</code>. \n\t\t\t\t *  @type {Tone.Gain}\n\t\t\t\t */\n\t\t        this.b = this.input[1] = new Tone.Gain();\n\t\t        /**\n\t\t\t\t * \tThe mix between the two inputs. A fade value of 0\n\t\t\t\t * \twill output 100% <code>input[0]</code> and \n\t\t\t\t * \ta value of 1 will output 100% <code>input[1]</code>. \n\t\t\t\t *  @type {NormalRange}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.fade = new Tone.Signal(this.defaultArg(initialFade, 0.5), Tone.Type.NormalRange);\n\t\t        /**\n\t\t\t\t *  equal power gain cross fade\n\t\t\t\t *  @private\n\t\t\t\t *  @type {Tone.EqualPowerGain}\n\t\t\t\t */\n\t\t        this._equalPowerA = new Tone.EqualPowerGain();\n\t\t        /**\n\t\t\t\t *  equal power gain cross fade\n\t\t\t\t *  @private\n\t\t\t\t *  @type {Tone.EqualPowerGain}\n\t\t\t\t */\n\t\t        this._equalPowerB = new Tone.EqualPowerGain();\n\t\t        /**\n\t\t\t\t *  invert the incoming signal\n\t\t\t\t *  @private\n\t\t\t\t *  @type {Tone}\n\t\t\t\t */\n\t\t        this._invert = new Tone.Expr('1 - $0');\n\t\t        //connections\n\t\t        this.a.connect(this.output);\n\t\t        this.b.connect(this.output);\n\t\t        this.fade.chain(this._equalPowerB, this.b.gain);\n\t\t        this.fade.chain(this._invert, this._equalPowerA, this.a.gain);\n\t\t        this._readOnly('fade');\n\t\t    };\n\t\t    Tone.extend(Tone.CrossFade);\n\t\t    /**\n\t\t\t *  clean up\n\t\t\t *  @returns {Tone.CrossFade} this\n\t\t\t */\n\t\t    Tone.CrossFade.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._writable('fade');\n\t\t        this._equalPowerA.dispose();\n\t\t        this._equalPowerA = null;\n\t\t        this._equalPowerB.dispose();\n\t\t        this._equalPowerB = null;\n\t\t        this.fade.dispose();\n\t\t        this.fade = null;\n\t\t        this._invert.dispose();\n\t\t        this._invert = null;\n\t\t        this.a.dispose();\n\t\t        this.a = null;\n\t\t        this.b.dispose();\n\t\t        this.b = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.CrossFade;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  Tone.Filter is a filter which allows for all of the same native methods\n\t\t\t *          as the [BiquadFilterNode](http://webaudio.github.io/web-audio-api/#the-biquadfilternode-interface). \n\t\t\t *          Tone.Filter has the added ability to set the filter rolloff at -12 \n\t\t\t *          (default), -24 and -48. \n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone}\n\t\t\t *  @param {Frequency|Object} [frequency] The cutoff frequency of the filter.\n\t\t\t *  @param {string=} type The type of filter.\n\t\t\t *  @param {number=} rolloff The drop in decibels per octave after the cutoff frequency.\n\t\t\t *                            3 choices: -12, -24, and -48\n\t\t\t *  @example\n\t\t\t *  var filter = new Tone.Filter(200, \"highpass\");\n\t\t\t */\n\t\t    Tone.Filter = function () {\n\t\t        this.createInsOuts(1, 1);\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'frequency',\n\t\t            'type',\n\t\t            'rolloff'\n\t\t        ], Tone.Filter.defaults);\n\t\t        /**\n\t\t\t\t *  the filter(s)\n\t\t\t\t *  @type {Array}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._filters = [];\n\t\t        /**\n\t\t\t\t *  The cutoff frequency of the filter. \n\t\t\t\t *  @type {Frequency}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.frequency = new Tone.Signal(options.frequency, Tone.Type.Frequency);\n\t\t        /**\n\t\t\t\t *  The detune parameter\n\t\t\t\t *  @type {Cents}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.detune = new Tone.Signal(0, Tone.Type.Cents);\n\t\t        /**\n\t\t\t\t *  The gain of the filter, only used in certain filter types\n\t\t\t\t *  @type {Number}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.gain = new Tone.Signal({\n\t\t            'value': options.gain,\n\t\t            'convert': false\n\t\t        });\n\t\t        /**\n\t\t\t\t *  The Q or Quality of the filter\n\t\t\t\t *  @type {Positive}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.Q = new Tone.Signal(options.Q);\n\t\t        /**\n\t\t\t\t *  the type of the filter\n\t\t\t\t *  @type {string}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._type = options.type;\n\t\t        /**\n\t\t\t\t *  the rolloff value of the filter\n\t\t\t\t *  @type {number}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._rolloff = options.rolloff;\n\t\t        //set the rolloff;\n\t\t        this.rolloff = options.rolloff;\n\t\t        this._readOnly([\n\t\t            'detune',\n\t\t            'frequency',\n\t\t            'gain',\n\t\t            'Q'\n\t\t        ]);\n\t\t    };\n\t\t    Tone.extend(Tone.Filter);\n\t\t    /**\n\t\t\t *  the default parameters\n\t\t\t *\n\t\t\t *  @static\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.Filter.defaults = {\n\t\t        'type': 'lowpass',\n\t\t        'frequency': 350,\n\t\t        'rolloff': -12,\n\t\t        'Q': 1,\n\t\t        'gain': 0\n\t\t    };\n\t\t    /**\n\t\t\t * The type of the filter. Types: \"lowpass\", \"highpass\", \n\t\t\t * \"bandpass\", \"lowshelf\", \"highshelf\", \"notch\", \"allpass\", or \"peaking\". \n\t\t\t * @memberOf Tone.Filter#\n\t\t\t * @type {string}\n\t\t\t * @name type\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Filter.prototype, 'type', {\n\t\t        get: function () {\n\t\t            return this._type;\n\t\t        },\n\t\t        set: function (type) {\n\t\t            var types = [\n\t\t                'lowpass',\n\t\t                'highpass',\n\t\t                'bandpass',\n\t\t                'lowshelf',\n\t\t                'highshelf',\n\t\t                'notch',\n\t\t                'allpass',\n\t\t                'peaking'\n\t\t            ];\n\t\t            if (types.indexOf(type) === -1) {\n\t\t                throw new TypeError('Tone.Filter: invalid type ' + type);\n\t\t            }\n\t\t            this._type = type;\n\t\t            for (var i = 0; i < this._filters.length; i++) {\n\t\t                this._filters[i].type = type;\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The rolloff of the filter which is the drop in db\n\t\t\t * per octave. Implemented internally by cascading filters.\n\t\t\t * Only accepts the values -12, -24, -48 and -96.\n\t\t\t * @memberOf Tone.Filter#\n\t\t\t * @type {number}\n\t\t\t * @name rolloff\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Filter.prototype, 'rolloff', {\n\t\t        get: function () {\n\t\t            return this._rolloff;\n\t\t        },\n\t\t        set: function (rolloff) {\n\t\t            rolloff = parseInt(rolloff, 10);\n\t\t            var possibilities = [\n\t\t                -12,\n\t\t                -24,\n\t\t                -48,\n\t\t                -96\n\t\t            ];\n\t\t            var cascadingCount = possibilities.indexOf(rolloff);\n\t\t            //check the rolloff is valid\n\t\t            if (cascadingCount === -1) {\n\t\t                throw new RangeError('Tone.Filter: rolloff can only be -12, -24, -48 or -96');\n\t\t            }\n\t\t            cascadingCount += 1;\n\t\t            this._rolloff = rolloff;\n\t\t            //first disconnect the filters and throw them away\n\t\t            this.input.disconnect();\n\t\t            for (var i = 0; i < this._filters.length; i++) {\n\t\t                this._filters[i].disconnect();\n\t\t                this._filters[i] = null;\n\t\t            }\n\t\t            this._filters = new Array(cascadingCount);\n\t\t            for (var count = 0; count < cascadingCount; count++) {\n\t\t                var filter = this.context.createBiquadFilter();\n\t\t                filter.type = this._type;\n\t\t                this.frequency.connect(filter.frequency);\n\t\t                this.detune.connect(filter.detune);\n\t\t                this.Q.connect(filter.Q);\n\t\t                this.gain.connect(filter.gain);\n\t\t                this._filters[count] = filter;\n\t\t            }\n\t\t            //connect them up\n\t\t            var connectionChain = [this.input].concat(this._filters).concat([this.output]);\n\t\t            this.connectSeries.apply(this, connectionChain);\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Clean up. \n\t\t\t *  @return {Tone.Filter} this\n\t\t\t */\n\t\t    Tone.Filter.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        for (var i = 0; i < this._filters.length; i++) {\n\t\t            this._filters[i].disconnect();\n\t\t            this._filters[i] = null;\n\t\t        }\n\t\t        this._filters = null;\n\t\t        this._writable([\n\t\t            'detune',\n\t\t            'frequency',\n\t\t            'gain',\n\t\t            'Q'\n\t\t        ]);\n\t\t        this.frequency.dispose();\n\t\t        this.Q.dispose();\n\t\t        this.frequency = null;\n\t\t        this.Q = null;\n\t\t        this.detune.dispose();\n\t\t        this.detune = null;\n\t\t        this.gain.dispose();\n\t\t        this.gain = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Filter;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Split the incoming signal into three bands (low, mid, high)\n\t\t\t *         with two crossover frequency controls. \n\t\t\t *\n\t\t\t *  @extends {Tone}\n\t\t\t *  @constructor\n\t\t\t *  @param {Frequency|Object} [lowFrequency] the low/mid crossover frequency\n\t\t\t *  @param {Frequency} [highFrequency] the mid/high crossover frequency\n\t\t\t */\n\t\t    Tone.MultibandSplit = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'lowFrequency',\n\t\t            'highFrequency'\n\t\t        ], Tone.MultibandSplit.defaults);\n\t\t        /**\n\t\t\t\t *  the input\n\t\t\t\t *  @type {Tone.Gain}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this.input = new Tone.Gain();\n\t\t        /**\n\t\t\t\t *  the outputs\n\t\t\t\t *  @type {Array}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this.output = new Array(3);\n\t\t        /**\n\t\t\t\t *  The low band. Alias for <code>output[0]</code>\n\t\t\t\t *  @type {Tone.Filter}\n\t\t\t\t */\n\t\t        this.low = this.output[0] = new Tone.Filter(0, 'lowpass');\n\t\t        /**\n\t\t\t\t *  the lower filter of the mid band\n\t\t\t\t *  @type {Tone.Filter}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._lowMidFilter = new Tone.Filter(0, 'highpass');\n\t\t        /**\n\t\t\t\t *  The mid band output. Alias for <code>output[1]</code>\n\t\t\t\t *  @type {Tone.Filter}\n\t\t\t\t */\n\t\t        this.mid = this.output[1] = new Tone.Filter(0, 'lowpass');\n\t\t        /**\n\t\t\t\t *  The high band output. Alias for <code>output[2]</code>\n\t\t\t\t *  @type {Tone.Filter}\n\t\t\t\t */\n\t\t        this.high = this.output[2] = new Tone.Filter(0, 'highpass');\n\t\t        /**\n\t\t\t\t *  The low/mid crossover frequency.\n\t\t\t\t *  @type {Frequency}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.lowFrequency = new Tone.Signal(options.lowFrequency, Tone.Type.Frequency);\n\t\t        /**\n\t\t\t\t *  The mid/high crossover frequency.\n\t\t\t\t *  @type {Frequency}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.highFrequency = new Tone.Signal(options.highFrequency, Tone.Type.Frequency);\n\t\t        /**\n\t\t\t\t *  The quality of all the filters\n\t\t\t\t *  @type {Number}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.Q = new Tone.Signal(options.Q);\n\t\t        this.input.fan(this.low, this.high);\n\t\t        this.input.chain(this._lowMidFilter, this.mid);\n\t\t        //the frequency control signal\n\t\t        this.lowFrequency.connect(this.low.frequency);\n\t\t        this.lowFrequency.connect(this._lowMidFilter.frequency);\n\t\t        this.highFrequency.connect(this.mid.frequency);\n\t\t        this.highFrequency.connect(this.high.frequency);\n\t\t        //the Q value\n\t\t        this.Q.connect(this.low.Q);\n\t\t        this.Q.connect(this._lowMidFilter.Q);\n\t\t        this.Q.connect(this.mid.Q);\n\t\t        this.Q.connect(this.high.Q);\n\t\t        this._readOnly([\n\t\t            'high',\n\t\t            'mid',\n\t\t            'low',\n\t\t            'highFrequency',\n\t\t            'lowFrequency'\n\t\t        ]);\n\t\t    };\n\t\t    Tone.extend(Tone.MultibandSplit);\n\t\t    /**\n\t\t\t *  @private\n\t\t\t *  @static\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.MultibandSplit.defaults = {\n\t\t        'lowFrequency': 400,\n\t\t        'highFrequency': 2500,\n\t\t        'Q': 1\n\t\t    };\n\t\t    /**\n\t\t\t *  Clean up.\n\t\t\t *  @returns {Tone.MultibandSplit} this\n\t\t\t */\n\t\t    Tone.MultibandSplit.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._writable([\n\t\t            'high',\n\t\t            'mid',\n\t\t            'low',\n\t\t            'highFrequency',\n\t\t            'lowFrequency'\n\t\t        ]);\n\t\t        this.low.dispose();\n\t\t        this.low = null;\n\t\t        this._lowMidFilter.dispose();\n\t\t        this._lowMidFilter = null;\n\t\t        this.mid.dispose();\n\t\t        this.mid = null;\n\t\t        this.high.dispose();\n\t\t        this.high = null;\n\t\t        this.lowFrequency.dispose();\n\t\t        this.lowFrequency = null;\n\t\t        this.highFrequency.dispose();\n\t\t        this.highFrequency = null;\n\t\t        this.Q.dispose();\n\t\t        this.Q = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.MultibandSplit;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Tone.EQ3 is a three band EQ with control over low, mid, and high gain as\n\t\t\t *         well as the low and high crossover frequencies.\n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone}\n\t\t\t *  \n\t\t\t *  @param {Decibels|Object} [lowLevel] The gain applied to the lows.\n\t\t\t *  @param {Decibels} [midLevel] The gain applied to the mid.\n\t\t\t *  @param {Decibels} [highLevel] The gain applied to the high.\n\t\t\t *  @example\n\t\t\t * var eq = new Tone.EQ3(-10, 3, -20);\n\t\t\t */\n\t\t    Tone.EQ3 = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'low',\n\t\t            'mid',\n\t\t            'high'\n\t\t        ], Tone.EQ3.defaults);\n\t\t        /**\n\t\t\t\t *  the output node\n\t\t\t\t *  @type {GainNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this.output = new Tone.Gain();\n\t\t        /**\n\t\t\t\t *  the multiband split\n\t\t\t\t *  @type {Tone.MultibandSplit}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._multibandSplit = this.input = new Tone.MultibandSplit({\n\t\t            'lowFrequency': options.lowFrequency,\n\t\t            'highFrequency': options.highFrequency\n\t\t        });\n\t\t        /**\n\t\t\t\t *  The gain for the lower signals\n\t\t\t\t *  @type  {Tone.Gain}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._lowGain = new Tone.Gain(options.low, Tone.Type.Decibels);\n\t\t        /**\n\t\t\t\t *  The gain for the mid signals\n\t\t\t\t *  @type  {Tone.Gain}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._midGain = new Tone.Gain(options.mid, Tone.Type.Decibels);\n\t\t        /**\n\t\t\t\t * The gain in decibels of the high part\n\t\t\t\t * @type {Tone.Gain}\n\t\t\t\t * @private\n\t\t\t\t */\n\t\t        this._highGain = new Tone.Gain(options.high, Tone.Type.Decibels);\n\t\t        /**\n\t\t\t\t * The gain in decibels of the low part\n\t\t\t\t * @type {Decibels}\n\t\t\t\t * @signal\n\t\t\t\t */\n\t\t        this.low = this._lowGain.gain;\n\t\t        /**\n\t\t\t\t * The gain in decibels of the mid part\n\t\t\t\t * @type {Decibels}\n\t\t\t\t * @signal\n\t\t\t\t */\n\t\t        this.mid = this._midGain.gain;\n\t\t        /**\n\t\t\t\t * The gain in decibels of the high part\n\t\t\t\t * @type {Decibels}\n\t\t\t\t * @signal\n\t\t\t\t */\n\t\t        this.high = this._highGain.gain;\n\t\t        /**\n\t\t\t\t *  The Q value for all of the filters. \n\t\t\t\t *  @type {Positive}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.Q = this._multibandSplit.Q;\n\t\t        /**\n\t\t\t\t *  The low/mid crossover frequency. \n\t\t\t\t *  @type {Frequency}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.lowFrequency = this._multibandSplit.lowFrequency;\n\t\t        /**\n\t\t\t\t *  The mid/high crossover frequency. \n\t\t\t\t *  @type {Frequency}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.highFrequency = this._multibandSplit.highFrequency;\n\t\t        //the frequency bands\n\t\t        this._multibandSplit.low.chain(this._lowGain, this.output);\n\t\t        this._multibandSplit.mid.chain(this._midGain, this.output);\n\t\t        this._multibandSplit.high.chain(this._highGain, this.output);\n\t\t        this._readOnly([\n\t\t            'low',\n\t\t            'mid',\n\t\t            'high',\n\t\t            'lowFrequency',\n\t\t            'highFrequency'\n\t\t        ]);\n\t\t    };\n\t\t    Tone.extend(Tone.EQ3);\n\t\t    /**\n\t\t\t *  the default values\n\t\t\t */\n\t\t    Tone.EQ3.defaults = {\n\t\t        'low': 0,\n\t\t        'mid': 0,\n\t\t        'high': 0,\n\t\t        'lowFrequency': 400,\n\t\t        'highFrequency': 2500\n\t\t    };\n\t\t    /**\n\t\t\t *  clean up\n\t\t\t *  @returns {Tone.EQ3} this\n\t\t\t */\n\t\t    Tone.EQ3.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._writable([\n\t\t            'low',\n\t\t            'mid',\n\t\t            'high',\n\t\t            'lowFrequency',\n\t\t            'highFrequency'\n\t\t        ]);\n\t\t        this._multibandSplit.dispose();\n\t\t        this._multibandSplit = null;\n\t\t        this.lowFrequency = null;\n\t\t        this.highFrequency = null;\n\t\t        this._lowGain.dispose();\n\t\t        this._lowGain = null;\n\t\t        this._midGain.dispose();\n\t\t        this._midGain = null;\n\t\t        this._highGain.dispose();\n\t\t        this._highGain = null;\n\t\t        this.low = null;\n\t\t        this.mid = null;\n\t\t        this.high = null;\n\t\t        this.Q = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.EQ3;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  Performs a linear scaling on an input signal.\n\t\t\t *          Scales a NormalRange input to between\n\t\t\t *          outputMin and outputMax.\n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.SignalBase}\n\t\t\t *  @param {number} [outputMin=0] The output value when the input is 0. \n\t\t\t *  @param {number} [outputMax=1]\tThe output value when the input is 1. \n\t\t\t *  @example\n\t\t\t * var scale = new Tone.Scale(50, 100);\n\t\t\t * var signal = new Tone.Signal(0.5).connect(scale);\n\t\t\t * //the output of scale equals 75\n\t\t\t */\n\t\t    Tone.Scale = function (outputMin, outputMax) {\n\t\t        /** \n\t\t\t\t *  @private\n\t\t\t\t *  @type {number}\n\t\t\t\t */\n\t\t        this._outputMin = this.defaultArg(outputMin, 0);\n\t\t        /** \n\t\t\t\t *  @private\n\t\t\t\t *  @type {number}\n\t\t\t\t */\n\t\t        this._outputMax = this.defaultArg(outputMax, 1);\n\t\t        /** \n\t\t\t\t *  @private\n\t\t\t\t *  @type {Tone.Multiply}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._scale = this.input = new Tone.Multiply(1);\n\t\t        /** \n\t\t\t\t *  @private\n\t\t\t\t *  @type {Tone.Add}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._add = this.output = new Tone.Add(0);\n\t\t        this._scale.connect(this._add);\n\t\t        this._setRange();\n\t\t    };\n\t\t    Tone.extend(Tone.Scale, Tone.SignalBase);\n\t\t    /**\n\t\t\t * The minimum output value. This number is output when \n\t\t\t * the value input value is 0. \n\t\t\t * @memberOf Tone.Scale#\n\t\t\t * @type {number}\n\t\t\t * @name min\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Scale.prototype, 'min', {\n\t\t        get: function () {\n\t\t            return this._outputMin;\n\t\t        },\n\t\t        set: function (min) {\n\t\t            this._outputMin = min;\n\t\t            this._setRange();\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The maximum output value. This number is output when \n\t\t\t * the value input value is 1. \n\t\t\t * @memberOf Tone.Scale#\n\t\t\t * @type {number}\n\t\t\t * @name max\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Scale.prototype, 'max', {\n\t\t        get: function () {\n\t\t            return this._outputMax;\n\t\t        },\n\t\t        set: function (max) {\n\t\t            this._outputMax = max;\n\t\t            this._setRange();\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  set the values\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Scale.prototype._setRange = function () {\n\t\t        this._add.value = this._outputMin;\n\t\t        this._scale.value = this._outputMax - this._outputMin;\n\t\t    };\n\t\t    /**\n\t\t\t *  Clean up.\n\t\t\t *  @returns {Tone.Scale} this\n\t\t\t */\n\t\t    Tone.Scale.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._add.dispose();\n\t\t        this._add = null;\n\t\t        this._scale.dispose();\n\t\t        this._scale = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Scale;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    /**\n\t\t\t *  @class  Performs an exponential scaling on an input signal.\n\t\t\t *          Scales a NormalRange value [0,1] exponentially\n\t\t\t *          to the output range of outputMin to outputMax.\n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.SignalBase}\n\t\t\t *  @param {number} [outputMin=0] The output value when the input is 0. \n\t\t\t *  @param {number} [outputMax=1]\tThe output value when the input is 1. \n\t\t\t *  @param {number} [exponent=2] The exponent which scales the incoming signal.\n\t\t\t *  @example\n\t\t\t * var scaleExp = new Tone.ScaleExp(0, 100, 2);\n\t\t\t * var signal = new Tone.Signal(0.5).connect(scaleExp);\n\t\t\t */\n\t\t    Tone.ScaleExp = function (outputMin, outputMax, exponent) {\n\t\t        /**\n\t\t\t\t *  scale the input to the output range\n\t\t\t\t *  @type {Tone.Scale}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._scale = this.output = new Tone.Scale(outputMin, outputMax);\n\t\t        /**\n\t\t\t\t *  @private\n\t\t\t\t *  @type {Tone.Pow}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._exp = this.input = new Tone.Pow(this.defaultArg(exponent, 2));\n\t\t        this._exp.connect(this._scale);\n\t\t    };\n\t\t    Tone.extend(Tone.ScaleExp, Tone.SignalBase);\n\t\t    /**\n\t\t\t * Instead of interpolating linearly between the <code>min</code> and \n\t\t\t * <code>max</code> values, setting the exponent will interpolate between\n\t\t\t * the two values with an exponential curve. \n\t\t\t * @memberOf Tone.ScaleExp#\n\t\t\t * @type {number}\n\t\t\t * @name exponent\n\t\t\t */\n\t\t    Object.defineProperty(Tone.ScaleExp.prototype, 'exponent', {\n\t\t        get: function () {\n\t\t            return this._exp.value;\n\t\t        },\n\t\t        set: function (exp) {\n\t\t            this._exp.value = exp;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The minimum output value. This number is output when \n\t\t\t * the value input value is 0. \n\t\t\t * @memberOf Tone.ScaleExp#\n\t\t\t * @type {number}\n\t\t\t * @name min\n\t\t\t */\n\t\t    Object.defineProperty(Tone.ScaleExp.prototype, 'min', {\n\t\t        get: function () {\n\t\t            return this._scale.min;\n\t\t        },\n\t\t        set: function (min) {\n\t\t            this._scale.min = min;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The maximum output value. This number is output when \n\t\t\t * the value input value is 1. \n\t\t\t * @memberOf Tone.ScaleExp#\n\t\t\t * @type {number}\n\t\t\t * @name max\n\t\t\t */\n\t\t    Object.defineProperty(Tone.ScaleExp.prototype, 'max', {\n\t\t        get: function () {\n\t\t            return this._scale.max;\n\t\t        },\n\t\t        set: function (max) {\n\t\t            this._scale.max = max;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Clean up.\n\t\t\t *  @returns {Tone.ScaleExp} this\n\t\t\t */\n\t\t    Tone.ScaleExp.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._scale.dispose();\n\t\t        this._scale = null;\n\t\t        this._exp.dispose();\n\t\t        this._exp = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.ScaleExp;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  createDelay shim\n\t\t\t *  @private\n\t\t\t */\n\t\t    if (window.DelayNode && !AudioContext.prototype.createDelay) {\n\t\t        AudioContext.prototype.createDelay = AudioContext.prototype.createDelayNode;\n\t\t    }\n\t\t    /**\n\t\t\t *  @class Wrapper around Web Audio's native [DelayNode](http://webaudio.github.io/web-audio-api/#the-delaynode-interface). \n\t\t\t *  @extends {Tone}\n\t\t\t *  @param {Time=} delayTime The delay applied to the incoming signal.\n\t\t\t *  @param {Time=} maxDelay The maximum delay time. \n\t\t\t */\n\t\t    Tone.Delay = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'delayTime',\n\t\t            'maxDelay'\n\t\t        ], Tone.Delay.defaults);\n\t\t        /**\n\t\t\t\t *  The native delay node\n\t\t\t\t *  @type {DelayNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._delayNode = this.input = this.output = this.context.createDelay(this.toSeconds(options.maxDelay));\n\t\t        /**\n\t\t\t\t *  The amount of time the incoming signal is\n\t\t\t\t *  delayed. \n\t\t\t\t *  @type {Tone.Param}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.delayTime = new Tone.Param({\n\t\t            'param': this._delayNode.delayTime,\n\t\t            'units': Tone.Type.Time,\n\t\t            'value': options.delayTime\n\t\t        });\n\t\t        this._readOnly('delayTime');\n\t\t    };\n\t\t    Tone.extend(Tone.Delay);\n\t\t    /**\n\t\t\t *  The defaults\n\t\t\t *  @const\n\t\t\t *  @type  {Object}\n\t\t\t */\n\t\t    Tone.Delay.defaults = {\n\t\t        'maxDelay': 1,\n\t\t        'delayTime': 0\n\t\t    };\n\t\t    /**\n\t\t\t *  Clean up.\n\t\t\t *  @return  {Tone.Delay}  this\n\t\t\t */\n\t\t    Tone.Delay.prototype.dispose = function () {\n\t\t        Tone.Param.prototype.dispose.call(this);\n\t\t        this._delayNode.disconnect();\n\t\t        this._delayNode = null;\n\t\t        this._writable('delayTime');\n\t\t        this.delayTime = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Delay;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Comb filters are basic building blocks for physical modeling. Read more\n\t\t\t *         about comb filters on [CCRMA's website](https://ccrma.stanford.edu/~jos/pasp/Feedback_Comb_Filters.html).\n\t\t\t *\n\t\t\t *  @extends {Tone}\n\t\t\t *  @constructor\n\t\t\t *  @param {Time|Object} [delayTime] The delay time of the filter. \n\t\t\t *  @param {NormalRange=} resonance The amount of feedback the filter has. \n\t\t\t */\n\t\t    Tone.FeedbackCombFilter = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'delayTime',\n\t\t            'resonance'\n\t\t        ], Tone.FeedbackCombFilter.defaults);\n\t\t        /**\n\t\t\t\t *  the delay node\n\t\t\t\t *  @type {DelayNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._delay = this.input = this.output = new Tone.Delay(options.delayTime);\n\t\t        /**\n\t\t\t\t *  The amount of delay of the comb filter. \n\t\t\t\t *  @type {Time}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.delayTime = this._delay.delayTime;\n\t\t        /**\n\t\t\t\t *  the feedback node\n\t\t\t\t *  @type {GainNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._feedback = new Tone.Gain(options.resonance, Tone.Type.NormalRange);\n\t\t        /**\n\t\t\t\t *  The amount of feedback of the delayed signal. \n\t\t\t\t *  @type {NormalRange}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.resonance = this._feedback.gain;\n\t\t        this._delay.chain(this._feedback, this._delay);\n\t\t        this._readOnly([\n\t\t            'resonance',\n\t\t            'delayTime'\n\t\t        ]);\n\t\t    };\n\t\t    Tone.extend(Tone.FeedbackCombFilter);\n\t\t    /**\n\t\t\t *  the default parameters\n\t\t\t *  @static\n\t\t\t *  @const\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.FeedbackCombFilter.defaults = {\n\t\t        'delayTime': 0.1,\n\t\t        'resonance': 0.5\n\t\t    };\n\t\t    /**\n\t\t\t *  clean up\n\t\t\t *  @returns {Tone.FeedbackCombFilter} this\n\t\t\t */\n\t\t    Tone.FeedbackCombFilter.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._writable([\n\t\t            'resonance',\n\t\t            'delayTime'\n\t\t        ]);\n\t\t        this._delay.dispose();\n\t\t        this._delay = null;\n\t\t        this.delayTime = null;\n\t\t        this._feedback.dispose();\n\t\t        this._feedback = null;\n\t\t        this.resonance = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.FeedbackCombFilter;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  Tone.Follower is a  crude envelope follower which will follow \n\t\t\t *          the amplitude of an incoming signal. \n\t\t\t *          Take care with small (< 0.02) attack or decay values \n\t\t\t *          as follower has some ripple which is exaggerated\n\t\t\t *          at these values. Read more about envelope followers (also known \n\t\t\t *          as envelope detectors) on [Wikipedia](https://en.wikipedia.org/wiki/Envelope_detector).\n\t\t\t *  \n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone}\n\t\t\t *  @param {Time|Object} [attack] The rate at which the follower rises.\n\t\t\t *  @param {Time=} release The rate at which the folower falls. \n\t\t\t *  @example\n\t\t\t * var follower = new Tone.Follower(0.2, 0.4);\n\t\t\t */\n\t\t    Tone.Follower = function () {\n\t\t        this.createInsOuts(1, 1);\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'attack',\n\t\t            'release'\n\t\t        ], Tone.Follower.defaults);\n\t\t        /**\n\t\t\t\t *  @type {Tone.Abs}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._abs = new Tone.Abs();\n\t\t        /**\n\t\t\t\t *  the lowpass filter which smooths the input\n\t\t\t\t *  @type {BiquadFilterNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._filter = this.context.createBiquadFilter();\n\t\t        this._filter.type = 'lowpass';\n\t\t        this._filter.frequency.value = 0;\n\t\t        this._filter.Q.value = -100;\n\t\t        /**\n\t\t\t\t *  @type {WaveShaperNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._frequencyValues = new Tone.WaveShaper();\n\t\t        /**\n\t\t\t\t *  @type {Tone.Subtract}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._sub = new Tone.Subtract();\n\t\t        /**\n\t\t\t\t *  @type {Tone.Delay}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._delay = new Tone.Delay(this.blockTime);\n\t\t        /**\n\t\t\t\t *  this keeps it far from 0, even for very small differences\n\t\t\t\t *  @type {Tone.Multiply}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._mult = new Tone.Multiply(10000);\n\t\t        /**\n\t\t\t\t *  @private\n\t\t\t\t *  @type {number}\n\t\t\t\t */\n\t\t        this._attack = options.attack;\n\t\t        /**\n\t\t\t\t *  @private\n\t\t\t\t *  @type {number}\n\t\t\t\t */\n\t\t        this._release = options.release;\n\t\t        //the smoothed signal to get the values\n\t\t        this.input.chain(this._abs, this._filter, this.output);\n\t\t        //the difference path\n\t\t        this._abs.connect(this._sub, 0, 1);\n\t\t        this._filter.chain(this._delay, this._sub);\n\t\t        //threshold the difference and use the thresh to set the frequency\n\t\t        this._sub.chain(this._mult, this._frequencyValues, this._filter.frequency);\n\t\t        //set the attack and release values in the table\n\t\t        this._setAttackRelease(this._attack, this._release);\n\t\t    };\n\t\t    Tone.extend(Tone.Follower);\n\t\t    /**\n\t\t\t *  @static\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.Follower.defaults = {\n\t\t        'attack': 0.05,\n\t\t        'release': 0.5\n\t\t    };\n\t\t    /**\n\t\t\t *  sets the attack and release times in the wave shaper\n\t\t\t *  @param   {Time} attack  \n\t\t\t *  @param   {Time} release \n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Follower.prototype._setAttackRelease = function (attack, release) {\n\t\t        var minTime = this.blockTime;\n\t\t        attack = Tone.Time(attack).toFrequency();\n\t\t        release = Tone.Time(release).toFrequency();\n\t\t        attack = Math.max(attack, minTime);\n\t\t        release = Math.max(release, minTime);\n\t\t        this._frequencyValues.setMap(function (val) {\n\t\t            if (val <= 0) {\n\t\t                return attack;\n\t\t            } else {\n\t\t                return release;\n\t\t            }\n\t\t        });\n\t\t    };\n\t\t    /**\n\t\t\t * The attack time.\n\t\t\t * @memberOf Tone.Follower#\n\t\t\t * @type {Time}\n\t\t\t * @name attack\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Follower.prototype, 'attack', {\n\t\t        get: function () {\n\t\t            return this._attack;\n\t\t        },\n\t\t        set: function (attack) {\n\t\t            this._attack = attack;\n\t\t            this._setAttackRelease(this._attack, this._release);\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The release time.\n\t\t\t * @memberOf Tone.Follower#\n\t\t\t * @type {Time}\n\t\t\t * @name release\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Follower.prototype, 'release', {\n\t\t        get: function () {\n\t\t            return this._release;\n\t\t        },\n\t\t        set: function (release) {\n\t\t            this._release = release;\n\t\t            this._setAttackRelease(this._attack, this._release);\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Borrows the connect method from Signal so that the output can be used\n\t\t\t *  as a Tone.Signal control signal.\n\t\t\t *  @function\n\t\t\t */\n\t\t    Tone.Follower.prototype.connect = Tone.Signal.prototype.connect;\n\t\t    /**\n\t\t\t *  dispose\n\t\t\t *  @returns {Tone.Follower} this\n\t\t\t */\n\t\t    Tone.Follower.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._filter.disconnect();\n\t\t        this._filter = null;\n\t\t        this._frequencyValues.disconnect();\n\t\t        this._frequencyValues = null;\n\t\t        this._delay.dispose();\n\t\t        this._delay = null;\n\t\t        this._sub.disconnect();\n\t\t        this._sub = null;\n\t\t        this._abs.dispose();\n\t\t        this._abs = null;\n\t\t        this._mult.dispose();\n\t\t        this._mult = null;\n\t\t        this._curve = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Follower;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Tone.ScaledEnvelop is an envelope which can be scaled \n\t\t\t *         to any range. It's useful for applying an envelope \n\t\t\t *         to a frequency or any other non-NormalRange signal \n\t\t\t *         parameter. \n\t\t\t *\n\t\t\t *  @extends {Tone.Envelope}\n\t\t\t *  @constructor\n\t\t\t *  @param {Time|Object} [attack]\tthe attack time in seconds\n\t\t\t *  @param {Time} [decay]\tthe decay time in seconds\n\t\t\t *  @param {number} [sustain] \ta percentage (0-1) of the full amplitude\n\t\t\t *  @param {Time} [release]\tthe release time in seconds\n\t\t\t *  @example\n\t\t\t *  var scaledEnv = new Tone.ScaledEnvelope({\n\t\t\t *  \t\"attack\" : 0.2,\n\t\t\t *  \t\"min\" : 200,\n\t\t\t *  \t\"max\" : 2000\n\t\t\t *  });\n\t\t\t *  scaledEnv.connect(oscillator.frequency);\n\t\t\t */\n\t\t    Tone.ScaledEnvelope = function () {\n\t\t        //get all of the defaults\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'attack',\n\t\t            'decay',\n\t\t            'sustain',\n\t\t            'release'\n\t\t        ], Tone.Envelope.defaults);\n\t\t        Tone.Envelope.call(this, options);\n\t\t        options = this.defaultArg(options, Tone.ScaledEnvelope.defaults);\n\t\t        /** \n\t\t\t\t *  scale the incoming signal by an exponent\n\t\t\t\t *  @type {Tone.Pow}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._exp = this.output = new Tone.Pow(options.exponent);\n\t\t        /**\n\t\t\t\t *  scale the signal to the desired range\n\t\t\t\t *  @type {Tone.Multiply}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._scale = this.output = new Tone.Scale(options.min, options.max);\n\t\t        this._sig.chain(this._exp, this._scale);\n\t\t    };\n\t\t    Tone.extend(Tone.ScaledEnvelope, Tone.Envelope);\n\t\t    /**\n\t\t\t *  the default parameters\n\t\t\t *  @static\n\t\t\t */\n\t\t    Tone.ScaledEnvelope.defaults = {\n\t\t        'min': 0,\n\t\t        'max': 1,\n\t\t        'exponent': 1\n\t\t    };\n\t\t    /**\n\t\t\t * The envelope's min output value. This is the value which it\n\t\t\t * starts at. \n\t\t\t * @memberOf Tone.ScaledEnvelope#\n\t\t\t * @type {number}\n\t\t\t * @name min\n\t\t\t */\n\t\t    Object.defineProperty(Tone.ScaledEnvelope.prototype, 'min', {\n\t\t        get: function () {\n\t\t            return this._scale.min;\n\t\t        },\n\t\t        set: function (min) {\n\t\t            this._scale.min = min;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The envelope's max output value. In other words, the value\n\t\t\t * at the peak of the attack portion of the envelope. \n\t\t\t * @memberOf Tone.ScaledEnvelope#\n\t\t\t * @type {number}\n\t\t\t * @name max\n\t\t\t */\n\t\t    Object.defineProperty(Tone.ScaledEnvelope.prototype, 'max', {\n\t\t        get: function () {\n\t\t            return this._scale.max;\n\t\t        },\n\t\t        set: function (max) {\n\t\t            this._scale.max = max;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The envelope's exponent value. \n\t\t\t * @memberOf Tone.ScaledEnvelope#\n\t\t\t * @type {number}\n\t\t\t * @name exponent\n\t\t\t */\n\t\t    Object.defineProperty(Tone.ScaledEnvelope.prototype, 'exponent', {\n\t\t        get: function () {\n\t\t            return this._exp.value;\n\t\t        },\n\t\t        set: function (exp) {\n\t\t            this._exp.value = exp;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  clean up\n\t\t\t *  @returns {Tone.ScaledEnvelope} this\n\t\t\t */\n\t\t    Tone.ScaledEnvelope.prototype.dispose = function () {\n\t\t        Tone.Envelope.prototype.dispose.call(this);\n\t\t        this._scale.dispose();\n\t\t        this._scale = null;\n\t\t        this._exp.dispose();\n\t\t        this._exp = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.ScaledEnvelope;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Tone.FrequencyEnvelope is a Tone.ScaledEnvelope, but instead of `min` and `max`\n\t\t\t *         it's got a `baseFrequency` and `octaves` parameter. \n\t\t\t *\n\t\t\t *  @extends {Tone.Envelope}\n\t\t\t *  @constructor\n\t\t\t *  @param {Time|Object} [attack]\tthe attack time in seconds\n\t\t\t *  @param {Time} [decay]\tthe decay time in seconds\n\t\t\t *  @param {number} [sustain] \ta percentage (0-1) of the full amplitude\n\t\t\t *  @param {Time} [release]\tthe release time in seconds\n\t\t\t *  @example\n\t\t\t *  var env = new Tone.FrequencyEnvelope({\n\t\t\t *  \t\"attack\" : 0.2,\n\t\t\t *  \t\"baseFrequency\" : \"C2\",\n\t\t\t *  \t\"octaves\" : 4\n\t\t\t *  });\n\t\t\t *  scaledEnv.connect(oscillator.frequency);\n\t\t\t */\n\t\t    Tone.FrequencyEnvelope = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'attack',\n\t\t            'decay',\n\t\t            'sustain',\n\t\t            'release'\n\t\t        ], Tone.Envelope.defaults);\n\t\t        Tone.ScaledEnvelope.call(this, options);\n\t\t        options = this.defaultArg(options, Tone.FrequencyEnvelope.defaults);\n\t\t        /**\n\t\t\t\t *  Stores the octave value\n\t\t\t\t *  @type {Positive}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._octaves = options.octaves;\n\t\t        //setup\n\t\t        this.baseFrequency = options.baseFrequency;\n\t\t        this.octaves = options.octaves;\n\t\t    };\n\t\t    Tone.extend(Tone.FrequencyEnvelope, Tone.Envelope);\n\t\t    /**\n\t\t\t *  the default parameters\n\t\t\t *  @static\n\t\t\t */\n\t\t    Tone.FrequencyEnvelope.defaults = {\n\t\t        'baseFrequency': 200,\n\t\t        'octaves': 4,\n\t\t        'exponent': 2\n\t\t    };\n\t\t    /**\n\t\t\t * The envelope's mininum output value. This is the value which it\n\t\t\t * starts at. \n\t\t\t * @memberOf Tone.FrequencyEnvelope#\n\t\t\t * @type {Frequency}\n\t\t\t * @name baseFrequency\n\t\t\t */\n\t\t    Object.defineProperty(Tone.FrequencyEnvelope.prototype, 'baseFrequency', {\n\t\t        get: function () {\n\t\t            return this._scale.min;\n\t\t        },\n\t\t        set: function (min) {\n\t\t            this._scale.min = this.toFrequency(min);\n\t\t            //also update the octaves\n\t\t            this.octaves = this._octaves;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The number of octaves above the baseFrequency that the\n\t\t\t * envelope will scale to.\n\t\t\t * @memberOf Tone.FrequencyEnvelope#\n\t\t\t * @type {Positive}\n\t\t\t * @name octaves\n\t\t\t */\n\t\t    Object.defineProperty(Tone.FrequencyEnvelope.prototype, 'octaves', {\n\t\t        get: function () {\n\t\t            return this._octaves;\n\t\t        },\n\t\t        set: function (octaves) {\n\t\t            this._octaves = octaves;\n\t\t            this._scale.max = this.baseFrequency * Math.pow(2, octaves);\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The envelope's exponent value. \n\t\t\t * @memberOf Tone.FrequencyEnvelope#\n\t\t\t * @type {number}\n\t\t\t * @name exponent\n\t\t\t */\n\t\t    Object.defineProperty(Tone.FrequencyEnvelope.prototype, 'exponent', {\n\t\t        get: function () {\n\t\t            return this._exp.value;\n\t\t        },\n\t\t        set: function (exp) {\n\t\t            this._exp.value = exp;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  clean up\n\t\t\t *  @returns {Tone.FrequencyEnvelope} this\n\t\t\t */\n\t\t    Tone.FrequencyEnvelope.prototype.dispose = function () {\n\t\t        Tone.ScaledEnvelope.prototype.dispose.call(this);\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.FrequencyEnvelope;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  Tone.Gate only passes a signal through when the incoming \n\t\t\t *          signal exceeds a specified threshold. To do this, Gate uses \n\t\t\t *          a Tone.Follower to follow the amplitude of the incoming signal. \n\t\t\t *          A common implementation of this class is a [Noise Gate](https://en.wikipedia.org/wiki/Noise_gate).\n\t\t\t *  \n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone}\n\t\t\t *  @param {Decibels|Object} [threshold] The threshold above which the gate will open. \n\t\t\t *  @param {Time=} attack The follower's attack time\n\t\t\t *  @param {Time=} release The follower's release time\n\t\t\t *  @example\n\t\t\t * var gate = new Tone.Gate(-30, 0.2, 0.3).toMaster();\n\t\t\t * var mic = new Tone.UserMedia().connect(gate);\n\t\t\t * //the gate will only pass through the incoming \n\t\t\t * //signal when it's louder than -30db\n\t\t\t */\n\t\t    Tone.Gate = function () {\n\t\t        this.createInsOuts(1, 1);\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'threshold',\n\t\t            'attack',\n\t\t            'release'\n\t\t        ], Tone.Gate.defaults);\n\t\t        /**\n\t\t\t\t *  @type {Tone.Follower}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._follower = new Tone.Follower(options.attack, options.release);\n\t\t        /**\n\t\t\t\t *  @type {Tone.GreaterThan}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._gt = new Tone.GreaterThan(this.dbToGain(options.threshold));\n\t\t        //the connections\n\t\t        this.input.connect(this.output);\n\t\t        //the control signal\n\t\t        this.input.chain(this._gt, this._follower, this.output.gain);\n\t\t    };\n\t\t    Tone.extend(Tone.Gate);\n\t\t    /**\n\t\t\t *  @const\n\t\t\t *  @static\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.Gate.defaults = {\n\t\t        'attack': 0.1,\n\t\t        'release': 0.1,\n\t\t        'threshold': -40\n\t\t    };\n\t\t    /**\n\t\t\t * The threshold of the gate in decibels\n\t\t\t * @memberOf Tone.Gate#\n\t\t\t * @type {Decibels}\n\t\t\t * @name threshold\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Gate.prototype, 'threshold', {\n\t\t        get: function () {\n\t\t            return this.gainToDb(this._gt.value);\n\t\t        },\n\t\t        set: function (thresh) {\n\t\t            this._gt.value = this.dbToGain(thresh);\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The attack speed of the gate\n\t\t\t * @memberOf Tone.Gate#\n\t\t\t * @type {Time}\n\t\t\t * @name attack\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Gate.prototype, 'attack', {\n\t\t        get: function () {\n\t\t            return this._follower.attack;\n\t\t        },\n\t\t        set: function (attackTime) {\n\t\t            this._follower.attack = attackTime;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The release speed of the gate\n\t\t\t * @memberOf Tone.Gate#\n\t\t\t * @type {Time}\n\t\t\t * @name release\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Gate.prototype, 'release', {\n\t\t        get: function () {\n\t\t            return this._follower.release;\n\t\t        },\n\t\t        set: function (releaseTime) {\n\t\t            this._follower.release = releaseTime;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Clean up. \n\t\t\t *  @returns {Tone.Gate} this\n\t\t\t */\n\t\t    Tone.Gate.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._follower.dispose();\n\t\t        this._gt.dispose();\n\t\t        this._follower = null;\n\t\t        this._gt = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Gate;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  A Timeline State. Provides the methods: <code>setStateAtTime(\"state\", time)</code>\n\t\t\t *          and <code>getValueAtTime(time)</code>.\n\t\t\t *\n\t\t\t *  @extends {Tone.Timeline}\n\t\t\t *  @param {String} initial The initial state of the TimelineState. \n\t\t\t *                          Defaults to <code>undefined</code>\n\t\t\t */\n\t\t    Tone.TimelineState = function (initial) {\n\t\t        Tone.Timeline.call(this);\n\t\t        /**\n\t\t\t\t *  The initial state\n\t\t\t\t *  @private\n\t\t\t\t *  @type {String}\n\t\t\t\t */\n\t\t        this._initial = initial;\n\t\t    };\n\t\t    Tone.extend(Tone.TimelineState, Tone.Timeline);\n\t\t    /**\n\t\t\t *  Returns the scheduled state scheduled before or at\n\t\t\t *  the given time.\n\t\t\t *  @param  {Number}  time  The time to query.\n\t\t\t *  @return  {String}  The name of the state input in setStateAtTime.\n\t\t\t */\n\t\t    Tone.TimelineState.prototype.getValueAtTime = function (time) {\n\t\t        var event = this.get(time);\n\t\t        if (event !== null) {\n\t\t            return event.state;\n\t\t        } else {\n\t\t            return this._initial;\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Returns the scheduled state scheduled before or at\n\t\t\t *  the given time.\n\t\t\t *  @param  {String}  state The name of the state to set.\n\t\t\t *  @param  {Number}  time  The time to query.\n\t\t\t */\n\t\t    Tone.TimelineState.prototype.setStateAtTime = function (state, time) {\n\t\t        this.add({\n\t\t            'state': state,\n\t\t            'time': time\n\t\t        });\n\t\t    };\n\t\t    return Tone.TimelineState;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  A sample accurate clock which provides a callback at the given rate. \n\t\t\t *          While the callback is not sample-accurate (it is still susceptible to\n\t\t\t *          loose JS timing), the time passed in as the argument to the callback\n\t\t\t *          is precise. For most applications, it is better to use Tone.Transport\n\t\t\t *          instead of the Clock by itself since you can synchronize multiple callbacks.\n\t\t\t *\n\t\t\t * \t@constructor\n\t\t\t *  @extends {Tone.Emitter}\n\t\t\t * \t@param {function} callback The callback to be invoked with the time of the audio event\n\t\t\t * \t@param {Frequency} frequency The rate of the callback\n\t\t\t * \t@example\n\t\t\t * //the callback will be invoked approximately once a second\n\t\t\t * //and will print the time exactly once a second apart.\n\t\t\t * var clock = new Tone.Clock(function(time){\n\t\t\t * \tconsole.log(time);\n\t\t\t * }, 1);\n\t\t\t */\n\t\t    Tone.Clock = function () {\n\t\t        Tone.Emitter.call(this);\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'callback',\n\t\t            'frequency'\n\t\t        ], Tone.Clock.defaults);\n\t\t        /**\n\t\t\t\t *  The callback function to invoke at the scheduled tick.\n\t\t\t\t *  @type  {Function}\n\t\t\t\t */\n\t\t        this.callback = options.callback;\n\t\t        /**\n\t\t\t\t *  The next time the callback is scheduled.\n\t\t\t\t *  @type {Number}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._nextTick = 0;\n\t\t        /**\n\t\t\t\t *  The last state of the clock.\n\t\t\t\t *  @type  {State}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._lastState = Tone.State.Stopped;\n\t\t        /**\n\t\t\t\t *  The rate the callback function should be invoked. \n\t\t\t\t *  @type  {BPM}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.frequency = new Tone.TimelineSignal(options.frequency, Tone.Type.Frequency);\n\t\t        this._readOnly('frequency');\n\t\t        /**\n\t\t\t\t *  The number of times the callback was invoked. Starts counting at 0\n\t\t\t\t *  and increments after the callback was invoked. \n\t\t\t\t *  @type {Ticks}\n\t\t\t\t *  @readOnly\n\t\t\t\t */\n\t\t        this.ticks = 0;\n\t\t        /**\n\t\t\t\t *  The state timeline\n\t\t\t\t *  @type {Tone.TimelineState}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._state = new Tone.TimelineState(Tone.State.Stopped);\n\t\t        /**\n\t\t\t\t *  The loop function bound to its context. \n\t\t\t\t *  This is necessary to remove the event in the end.\n\t\t\t\t *  @type {Function}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._boundLoop = this._loop.bind(this);\n\t\t        //bind a callback to the worker thread\n\t\t        this.context.on('tick', this._boundLoop);\n\t\t    };\n\t\t    Tone.extend(Tone.Clock, Tone.Emitter);\n\t\t    /**\n\t\t\t *  The defaults\n\t\t\t *  @const\n\t\t\t *  @type  {Object}\n\t\t\t */\n\t\t    Tone.Clock.defaults = {\n\t\t        'callback': Tone.noOp,\n\t\t        'frequency': 1,\n\t\t        'lookAhead': 'auto'\n\t\t    };\n\t\t    /**\n\t\t\t *  Returns the playback state of the source, either \"started\", \"stopped\" or \"paused\".\n\t\t\t *  @type {Tone.State}\n\t\t\t *  @readOnly\n\t\t\t *  @memberOf Tone.Clock#\n\t\t\t *  @name state\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Clock.prototype, 'state', {\n\t\t        get: function () {\n\t\t            return this._state.getValueAtTime(this.now());\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Start the clock at the given time. Optionally pass in an offset\n\t\t\t *  of where to start the tick counter from.\n\t\t\t *  @param  {Time}  time    The time the clock should start\n\t\t\t *  @param  {Ticks=}  offset  Where the tick counter starts counting from.\n\t\t\t *  @return  {Tone.Clock}  this\n\t\t\t */\n\t\t    Tone.Clock.prototype.start = function (time, offset) {\n\t\t        time = this.toSeconds(time);\n\t\t        if (this._state.getValueAtTime(time) !== Tone.State.Started) {\n\t\t            this._state.add({\n\t\t                'state': Tone.State.Started,\n\t\t                'time': time,\n\t\t                'offset': offset\n\t\t            });\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Stop the clock. Stopping the clock resets the tick counter to 0.\n\t\t\t *  @param {Time} [time=now] The time when the clock should stop.\n\t\t\t *  @returns {Tone.Clock} this\n\t\t\t *  @example\n\t\t\t * clock.stop();\n\t\t\t */\n\t\t    Tone.Clock.prototype.stop = function (time) {\n\t\t        time = this.toSeconds(time);\n\t\t        this._state.cancel(time);\n\t\t        this._state.setStateAtTime(Tone.State.Stopped, time);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Pause the clock. Pausing does not reset the tick counter.\n\t\t\t *  @param {Time} [time=now] The time when the clock should stop.\n\t\t\t *  @returns {Tone.Clock} this\n\t\t\t */\n\t\t    Tone.Clock.prototype.pause = function (time) {\n\t\t        time = this.toSeconds(time);\n\t\t        if (this._state.getValueAtTime(time) === Tone.State.Started) {\n\t\t            this._state.setStateAtTime(Tone.State.Paused, time);\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  The scheduling loop.\n\t\t\t *  @param  {Number}  time  The current page time starting from 0\n\t\t\t *                          when the page was loaded.\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Clock.prototype._loop = function () {\n\t\t        //get the frequency value to compute the value of the next loop\n\t\t        var now = this.now();\n\t\t        //if it's started\n\t\t        var lookAhead = this.context.lookAhead;\n\t\t        var updateInterval = this.context.updateInterval;\n\t\t        var lagCompensation = this.context.lag * 2;\n\t\t        var loopInterval = now + lookAhead + updateInterval + lagCompensation;\n\t\t        while (loopInterval > this._nextTick && this._state) {\n\t\t            var currentState = this._state.getValueAtTime(this._nextTick);\n\t\t            if (currentState !== this._lastState) {\n\t\t                this._lastState = currentState;\n\t\t                var event = this._state.get(this._nextTick);\n\t\t                // emit an event\n\t\t                if (currentState === Tone.State.Started) {\n\t\t                    //correct the time\n\t\t                    this._nextTick = event.time;\n\t\t                    if (!this.isUndef(event.offset)) {\n\t\t                        this.ticks = event.offset;\n\t\t                    }\n\t\t                    this.emit('start', event.time, this.ticks);\n\t\t                } else if (currentState === Tone.State.Stopped) {\n\t\t                    this.ticks = 0;\n\t\t                    this.emit('stop', event.time);\n\t\t                } else if (currentState === Tone.State.Paused) {\n\t\t                    this.emit('pause', event.time);\n\t\t                }\n\t\t            }\n\t\t            var tickTime = this._nextTick;\n\t\t            if (this.frequency) {\n\t\t                this._nextTick += 1 / this.frequency.getValueAtTime(this._nextTick);\n\t\t                if (currentState === Tone.State.Started) {\n\t\t                    this.callback(tickTime);\n\t\t                    this.ticks++;\n\t\t                }\n\t\t            }\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Returns the scheduled state at the given time.\n\t\t\t *  @param  {Time}  time  The time to query.\n\t\t\t *  @return  {String}  The name of the state input in setStateAtTime.\n\t\t\t *  @example\n\t\t\t * clock.start(\"+0.1\");\n\t\t\t * clock.getStateAtTime(\"+0.1\"); //returns \"started\"\n\t\t\t */\n\t\t    Tone.Clock.prototype.getStateAtTime = function (time) {\n\t\t        time = this.toSeconds(time);\n\t\t        return this._state.getValueAtTime(time);\n\t\t    };\n\t\t    /**\n\t\t\t *  Clean up\n\t\t\t *  @returns {Tone.Clock} this\n\t\t\t */\n\t\t    Tone.Clock.prototype.dispose = function () {\n\t\t        Tone.Emitter.prototype.dispose.call(this);\n\t\t        this.context.off('tick', this._boundLoop);\n\t\t        this._writable('frequency');\n\t\t        this.frequency.dispose();\n\t\t        this.frequency = null;\n\t\t        this._boundLoop = null;\n\t\t        this._nextTick = Infinity;\n\t\t        this.callback = null;\n\t\t        this._state.dispose();\n\t\t        this._state = null;\n\t\t    };\n\t\t    return Tone.Clock;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Similar to Tone.Timeline, but all events represent\n\t\t\t *         intervals with both \"time\" and \"duration\" times. The \n\t\t\t *         events are placed in a tree structure optimized\n\t\t\t *         for querying an intersection point with the timeline\n\t\t\t *         events. Internally uses an [Interval Tree](https://en.wikipedia.org/wiki/Interval_tree)\n\t\t\t *         to represent the data.\n\t\t\t *  @extends {Tone}\n\t\t\t */\n\t\t    Tone.IntervalTimeline = function () {\n\t\t        /**\n\t\t\t\t *  The root node of the inteval tree\n\t\t\t\t *  @type  {IntervalNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._root = null;\n\t\t        /**\n\t\t\t\t *  Keep track of the length of the timeline.\n\t\t\t\t *  @type  {Number}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._length = 0;\n\t\t    };\n\t\t    Tone.extend(Tone.IntervalTimeline);\n\t\t    /**\n\t\t\t *  The event to add to the timeline. All events must \n\t\t\t *  have a time and duration value\n\t\t\t *  @param  {Object}  event  The event to add to the timeline\n\t\t\t *  @return  {Tone.IntervalTimeline}  this\n\t\t\t */\n\t\t    Tone.IntervalTimeline.prototype.add = function (event) {\n\t\t        if (this.isUndef(event.time) || this.isUndef(event.duration)) {\n\t\t            throw new Error('Tone.IntervalTimeline: events must have time and duration parameters');\n\t\t        }\n\t\t        var node = new IntervalNode(event.time, event.time + event.duration, event);\n\t\t        if (this._root === null) {\n\t\t            this._root = node;\n\t\t        } else {\n\t\t            this._root.insert(node);\n\t\t        }\n\t\t        this._length++;\n\t\t        // Restructure tree to be balanced\n\t\t        while (node !== null) {\n\t\t            node.updateHeight();\n\t\t            node.updateMax();\n\t\t            this._rebalance(node);\n\t\t            node = node.parent;\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Remove an event from the timeline.\n\t\t\t *  @param  {Object}  event  The event to remove from the timeline\n\t\t\t *  @return  {Tone.IntervalTimeline}  this\n\t\t\t */\n\t\t    Tone.IntervalTimeline.prototype.remove = function (event) {\n\t\t        if (this._root !== null) {\n\t\t            var results = [];\n\t\t            this._root.search(event.time, results);\n\t\t            for (var i = 0; i < results.length; i++) {\n\t\t                var node = results[i];\n\t\t                if (node.event === event) {\n\t\t                    this._removeNode(node);\n\t\t                    this._length--;\n\t\t                    break;\n\t\t                }\n\t\t            }\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  The number of items in the timeline.\n\t\t\t *  @type {Number}\n\t\t\t *  @memberOf Tone.IntervalTimeline#\n\t\t\t *  @name length\n\t\t\t *  @readOnly\n\t\t\t */\n\t\t    Object.defineProperty(Tone.IntervalTimeline.prototype, 'length', {\n\t\t        get: function () {\n\t\t            return this._length;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Remove events whose time time is after the given time\n\t\t\t *  @param  {Number}  time  The time to query.\n\t\t\t *  @returns {Tone.IntervalTimeline} this\n\t\t\t */\n\t\t    Tone.IntervalTimeline.prototype.cancel = function (after) {\n\t\t        this.forEachAfter(after, function (event) {\n\t\t            this.remove(event);\n\t\t        }.bind(this));\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Set the root node as the given node\n\t\t\t *  @param {IntervalNode} node\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.IntervalTimeline.prototype._setRoot = function (node) {\n\t\t        this._root = node;\n\t\t        if (this._root !== null) {\n\t\t            this._root.parent = null;\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Replace the references to the node in the node's parent\n\t\t\t *  with the replacement node.\n\t\t\t *  @param  {IntervalNode}  node        \n\t\t\t *  @param  {IntervalNode}  replacement \n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.IntervalTimeline.prototype._replaceNodeInParent = function (node, replacement) {\n\t\t        if (node.parent !== null) {\n\t\t            if (node.isLeftChild()) {\n\t\t                node.parent.left = replacement;\n\t\t            } else {\n\t\t                node.parent.right = replacement;\n\t\t            }\n\t\t            this._rebalance(node.parent);\n\t\t        } else {\n\t\t            this._setRoot(replacement);\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Remove the node from the tree and replace it with \n\t\t\t *  a successor which follows the schema.\n\t\t\t *  @param  {IntervalNode}  node\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.IntervalTimeline.prototype._removeNode = function (node) {\n\t\t        if (node.left === null && node.right === null) {\n\t\t            this._replaceNodeInParent(node, null);\n\t\t        } else if (node.right === null) {\n\t\t            this._replaceNodeInParent(node, node.left);\n\t\t        } else if (node.left === null) {\n\t\t            this._replaceNodeInParent(node, node.right);\n\t\t        } else {\n\t\t            var balance = node.getBalance();\n\t\t            var replacement, temp;\n\t\t            if (balance > 0) {\n\t\t                if (node.left.right === null) {\n\t\t                    replacement = node.left;\n\t\t                    replacement.right = node.right;\n\t\t                    temp = replacement;\n\t\t                } else {\n\t\t                    replacement = node.left.right;\n\t\t                    while (replacement.right !== null) {\n\t\t                        replacement = replacement.right;\n\t\t                    }\n\t\t                    replacement.parent.right = replacement.left;\n\t\t                    temp = replacement.parent;\n\t\t                    replacement.left = node.left;\n\t\t                    replacement.right = node.right;\n\t\t                }\n\t\t            } else {\n\t\t                if (node.right.left === null) {\n\t\t                    replacement = node.right;\n\t\t                    replacement.left = node.left;\n\t\t                    temp = replacement;\n\t\t                } else {\n\t\t                    replacement = node.right.left;\n\t\t                    while (replacement.left !== null) {\n\t\t                        replacement = replacement.left;\n\t\t                    }\n\t\t                    replacement.parent = replacement.parent;\n\t\t                    replacement.parent.left = replacement.right;\n\t\t                    temp = replacement.parent;\n\t\t                    replacement.left = node.left;\n\t\t                    replacement.right = node.right;\n\t\t                }\n\t\t            }\n\t\t            if (node.parent !== null) {\n\t\t                if (node.isLeftChild()) {\n\t\t                    node.parent.left = replacement;\n\t\t                } else {\n\t\t                    node.parent.right = replacement;\n\t\t                }\n\t\t            } else {\n\t\t                this._setRoot(replacement);\n\t\t            }\n\t\t            // this._replaceNodeInParent(node, replacement);\n\t\t            this._rebalance(temp);\n\t\t        }\n\t\t        node.dispose();\n\t\t    };\n\t\t    /**\n\t\t\t *  Rotate the tree to the left\n\t\t\t *  @param  {IntervalNode}  node\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.IntervalTimeline.prototype._rotateLeft = function (node) {\n\t\t        var parent = node.parent;\n\t\t        var isLeftChild = node.isLeftChild();\n\t\t        // Make node.right the new root of this sub tree (instead of node)\n\t\t        var pivotNode = node.right;\n\t\t        node.right = pivotNode.left;\n\t\t        pivotNode.left = node;\n\t\t        if (parent !== null) {\n\t\t            if (isLeftChild) {\n\t\t                parent.left = pivotNode;\n\t\t            } else {\n\t\t                parent.right = pivotNode;\n\t\t            }\n\t\t        } else {\n\t\t            this._setRoot(pivotNode);\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Rotate the tree to the right\n\t\t\t *  @param  {IntervalNode}  node\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.IntervalTimeline.prototype._rotateRight = function (node) {\n\t\t        var parent = node.parent;\n\t\t        var isLeftChild = node.isLeftChild();\n\t\t        // Make node.left the new root of this sub tree (instead of node)\n\t\t        var pivotNode = node.left;\n\t\t        node.left = pivotNode.right;\n\t\t        pivotNode.right = node;\n\t\t        if (parent !== null) {\n\t\t            if (isLeftChild) {\n\t\t                parent.left = pivotNode;\n\t\t            } else {\n\t\t                parent.right = pivotNode;\n\t\t            }\n\t\t        } else {\n\t\t            this._setRoot(pivotNode);\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Balance the BST\n\t\t\t *  @param  {IntervalNode}  node\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.IntervalTimeline.prototype._rebalance = function (node) {\n\t\t        var balance = node.getBalance();\n\t\t        if (balance > 1) {\n\t\t            if (node.left.getBalance() < 0) {\n\t\t                this._rotateLeft(node.left);\n\t\t            } else {\n\t\t                this._rotateRight(node);\n\t\t            }\n\t\t        } else if (balance < -1) {\n\t\t            if (node.right.getBalance() > 0) {\n\t\t                this._rotateRight(node.right);\n\t\t            } else {\n\t\t                this._rotateLeft(node);\n\t\t            }\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Get an event whose time and duration span the give time. Will\n\t\t\t *  return the match whose \"time\" value is closest to the given time.\n\t\t\t *  @param  {Object}  event  The event to add to the timeline\n\t\t\t *  @return  {Object}  The event which spans the desired time\n\t\t\t */\n\t\t    Tone.IntervalTimeline.prototype.get = function (time) {\n\t\t        if (this._root !== null) {\n\t\t            var results = [];\n\t\t            this._root.search(time, results);\n\t\t            if (results.length > 0) {\n\t\t                var max = results[0];\n\t\t                for (var i = 1; i < results.length; i++) {\n\t\t                    if (results[i].low > max.low) {\n\t\t                        max = results[i];\n\t\t                    }\n\t\t                }\n\t\t                return max.event;\n\t\t            }\n\t\t        }\n\t\t        return null;\n\t\t    };\n\t\t    /**\n\t\t\t *  Iterate over everything in the timeline.\n\t\t\t *  @param  {Function}  callback The callback to invoke with every item\n\t\t\t *  @returns {Tone.IntervalTimeline} this\n\t\t\t */\n\t\t    Tone.IntervalTimeline.prototype.forEach = function (callback) {\n\t\t        if (this._root !== null) {\n\t\t            var allNodes = [];\n\t\t            if (this._root !== null) {\n\t\t                this._root.traverse(function (node) {\n\t\t                    allNodes.push(node);\n\t\t                });\n\t\t            }\n\t\t            for (var i = 0; i < allNodes.length; i++) {\n\t\t                var ev = allNodes[i].event;\n\t\t                if (ev) {\n\t\t                    callback(ev);\n\t\t                }\n\t\t            }\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Iterate over everything in the array in which the given time\n\t\t\t *  overlaps with the time and duration time of the event.\n\t\t\t *  @param  {Number}  time The time to check if items are overlapping\n\t\t\t *  @param  {Function}  callback The callback to invoke with every item\n\t\t\t *  @returns {Tone.IntervalTimeline} this\n\t\t\t */\n\t\t    Tone.IntervalTimeline.prototype.forEachAtTime = function (time, callback) {\n\t\t        if (this._root !== null) {\n\t\t            var results = [];\n\t\t            this._root.search(time, results);\n\t\t            for (var i = results.length - 1; i >= 0; i--) {\n\t\t                var ev = results[i].event;\n\t\t                if (ev) {\n\t\t                    callback(ev);\n\t\t                }\n\t\t            }\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Iterate over everything in the array in which the time is greater\n\t\t\t *  than the given time.\n\t\t\t *  @param  {Number}  time The time to check if items are before\n\t\t\t *  @param  {Function}  callback The callback to invoke with every item\n\t\t\t *  @returns {Tone.IntervalTimeline} this\n\t\t\t */\n\t\t    Tone.IntervalTimeline.prototype.forEachAfter = function (time, callback) {\n\t\t        if (this._root !== null) {\n\t\t            var results = [];\n\t\t            this._root.searchAfter(time, results);\n\t\t            for (var i = results.length - 1; i >= 0; i--) {\n\t\t                var ev = results[i].event;\n\t\t                if (ev) {\n\t\t                    callback(ev);\n\t\t                }\n\t\t            }\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Clean up\n\t\t\t *  @return  {Tone.IntervalTimeline}  this\n\t\t\t */\n\t\t    Tone.IntervalTimeline.prototype.dispose = function () {\n\t\t        var allNodes = [];\n\t\t        if (this._root !== null) {\n\t\t            this._root.traverse(function (node) {\n\t\t                allNodes.push(node);\n\t\t            });\n\t\t        }\n\t\t        for (var i = 0; i < allNodes.length; i++) {\n\t\t            allNodes[i].dispose();\n\t\t        }\n\t\t        allNodes = null;\n\t\t        this._root = null;\n\t\t        return this;\n\t\t    };\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    //\tINTERVAL NODE HELPER\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    /**\n\t\t\t *  Represents a node in the binary search tree, with the addition\n\t\t\t *  of a \"high\" value which keeps track of the highest value of\n\t\t\t *  its children. \n\t\t\t *  References: \n\t\t\t *  https://brooknovak.wordpress.com/2013/12/07/augmented-interval-tree-in-c/\n\t\t\t *  http://www.mif.vu.lt/~valdas/ALGORITMAI/LITERATURA/Cormen/Cormen.pdf\n\t\t\t *  @param {Number} low\n\t\t\t *  @param {Number} high\n\t\t\t *  @private\n\t\t\t */\n\t\t    var IntervalNode = function (low, high, event) {\n\t\t        //the event container\n\t\t        this.event = event;\n\t\t        //the low value\n\t\t        this.low = low;\n\t\t        //the high value\n\t\t        this.high = high;\n\t\t        //the high value for this and all child nodes\n\t\t        this.max = this.high;\n\t\t        //the nodes to the left\n\t\t        this._left = null;\n\t\t        //the nodes to the right\n\t\t        this._right = null;\n\t\t        //the parent node\n\t\t        this.parent = null;\n\t\t        //the number of child nodes\n\t\t        this.height = 0;\n\t\t    };\n\t\t    /** \n\t\t\t *  Insert a node into the correct spot in the tree\n\t\t\t *  @param  {IntervalNode}  node\n\t\t\t */\n\t\t    IntervalNode.prototype.insert = function (node) {\n\t\t        if (node.low <= this.low) {\n\t\t            if (this.left === null) {\n\t\t                this.left = node;\n\t\t            } else {\n\t\t                this.left.insert(node);\n\t\t            }\n\t\t        } else {\n\t\t            if (this.right === null) {\n\t\t                this.right = node;\n\t\t            } else {\n\t\t                this.right.insert(node);\n\t\t            }\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Search the tree for nodes which overlap \n\t\t\t *  with the given point\n\t\t\t *  @param  {Number}  point  The point to query\n\t\t\t *  @param  {Array}  results  The array to put the results\n\t\t\t */\n\t\t    IntervalNode.prototype.search = function (point, results) {\n\t\t        // If p is to the right of the rightmost point of any interval\n\t\t        // in this node and all children, there won't be any matches.\n\t\t        if (point > this.max) {\n\t\t            return;\n\t\t        }\n\t\t        // Search left children\n\t\t        if (this.left !== null) {\n\t\t            this.left.search(point, results);\n\t\t        }\n\t\t        // Check this node\n\t\t        if (this.low <= point && this.high > point) {\n\t\t            results.push(this);\n\t\t        }\n\t\t        // If p is to the left of the time of this interval,\n\t\t        // then it can't be in any child to the right.\n\t\t        if (this.low > point) {\n\t\t            return;\n\t\t        }\n\t\t        // Search right children\n\t\t        if (this.right !== null) {\n\t\t            this.right.search(point, results);\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Search the tree for nodes which are less \n\t\t\t *  than the given point\n\t\t\t *  @param  {Number}  point  The point to query\n\t\t\t *  @param  {Array}  results  The array to put the results\n\t\t\t */\n\t\t    IntervalNode.prototype.searchAfter = function (point, results) {\n\t\t        // Check this node\n\t\t        if (this.low >= point) {\n\t\t            results.push(this);\n\t\t            if (this.left !== null) {\n\t\t                this.left.searchAfter(point, results);\n\t\t            }\n\t\t        }\n\t\t        // search the right side\n\t\t        if (this.right !== null) {\n\t\t            this.right.searchAfter(point, results);\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Invoke the callback on this element and both it's branches\n\t\t\t *  @param  {Function}  callback\n\t\t\t */\n\t\t    IntervalNode.prototype.traverse = function (callback) {\n\t\t        callback(this);\n\t\t        if (this.left !== null) {\n\t\t            this.left.traverse(callback);\n\t\t        }\n\t\t        if (this.right !== null) {\n\t\t            this.right.traverse(callback);\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Update the height of the node\n\t\t\t */\n\t\t    IntervalNode.prototype.updateHeight = function () {\n\t\t        if (this.left !== null && this.right !== null) {\n\t\t            this.height = Math.max(this.left.height, this.right.height) + 1;\n\t\t        } else if (this.right !== null) {\n\t\t            this.height = this.right.height + 1;\n\t\t        } else if (this.left !== null) {\n\t\t            this.height = this.left.height + 1;\n\t\t        } else {\n\t\t            this.height = 0;\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Update the height of the node\n\t\t\t */\n\t\t    IntervalNode.prototype.updateMax = function () {\n\t\t        this.max = this.high;\n\t\t        if (this.left !== null) {\n\t\t            this.max = Math.max(this.max, this.left.max);\n\t\t        }\n\t\t        if (this.right !== null) {\n\t\t            this.max = Math.max(this.max, this.right.max);\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  The balance is how the leafs are distributed on the node\n\t\t\t *  @return  {Number}  Negative numbers are balanced to the right\n\t\t\t */\n\t\t    IntervalNode.prototype.getBalance = function () {\n\t\t        var balance = 0;\n\t\t        if (this.left !== null && this.right !== null) {\n\t\t            balance = this.left.height - this.right.height;\n\t\t        } else if (this.left !== null) {\n\t\t            balance = this.left.height + 1;\n\t\t        } else if (this.right !== null) {\n\t\t            balance = -(this.right.height + 1);\n\t\t        }\n\t\t        return balance;\n\t\t    };\n\t\t    /**\n\t\t\t *  @returns {Boolean} true if this node is the left child\n\t\t\t *  of its parent\n\t\t\t */\n\t\t    IntervalNode.prototype.isLeftChild = function () {\n\t\t        return this.parent !== null && this.parent.left === this;\n\t\t    };\n\t\t    /**\n\t\t\t *  get/set the left node\n\t\t\t *  @type {IntervalNode}\n\t\t\t */\n\t\t    Object.defineProperty(IntervalNode.prototype, 'left', {\n\t\t        get: function () {\n\t\t            return this._left;\n\t\t        },\n\t\t        set: function (node) {\n\t\t            this._left = node;\n\t\t            if (node !== null) {\n\t\t                node.parent = this;\n\t\t            }\n\t\t            this.updateHeight();\n\t\t            this.updateMax();\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  get/set the right node\n\t\t\t *  @type {IntervalNode}\n\t\t\t */\n\t\t    Object.defineProperty(IntervalNode.prototype, 'right', {\n\t\t        get: function () {\n\t\t            return this._right;\n\t\t        },\n\t\t        set: function (node) {\n\t\t            this._right = node;\n\t\t            if (node !== null) {\n\t\t                node.parent = this;\n\t\t            }\n\t\t            this.updateHeight();\n\t\t            this.updateMax();\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  null out references.\n\t\t\t */\n\t\t    IntervalNode.prototype.dispose = function () {\n\t\t        this.parent = null;\n\t\t        this._left = null;\n\t\t        this._right = null;\n\t\t        this.event = null;\n\t\t    };\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    //\tEND INTERVAL NODE HELPER\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    return Tone.IntervalTimeline;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  Transport for timing musical events.\n\t\t\t *          Supports tempo curves and time changes. Unlike browser-based timing (setInterval, requestAnimationFrame)\n\t\t\t *          Tone.Transport timing events pass in the exact time of the scheduled event\n\t\t\t *          in the argument of the callback function. Pass that time value to the object\n\t\t\t *          you're scheduling. <br><br>\n\t\t\t *          A single transport is created for you when the library is initialized. \n\t\t\t *          <br><br>\n\t\t\t *          The transport emits the events: \"start\", \"stop\", \"pause\", and \"loop\" which are\n\t\t\t *          called with the time of that event as the argument. \n\t\t\t *\n\t\t\t *  @extends {Tone.Emitter}\n\t\t\t *  @singleton\n\t\t\t *  @example\n\t\t\t * //repeated event every 8th note\n\t\t\t * Tone.Transport.scheduleRepeat(function(time){\n\t\t\t * \t//do something with the time\n\t\t\t * }, \"8n\");\n\t\t\t *  @example\n\t\t\t * //schedule an event on the 16th measure\n\t\t\t * Tone.Transport.schedule(function(time){\n\t\t\t * \t//do something with the time\n\t\t\t * }, \"16:0:0\");\n\t\t\t */\n\t\t    Tone.Transport = function () {\n\t\t        Tone.Emitter.call(this);\n\t\t        ///////////////////////////////////////////////////////////////////////\n\t\t        //\tLOOPING\n\t\t        //////////////////////////////////////////////////////////////////////\n\t\t        /** \n\t\t\t\t * \tIf the transport loops or not.\n\t\t\t\t *  @type {boolean}\n\t\t\t\t */\n\t\t        this.loop = false;\n\t\t        /** \n\t\t\t\t * \tThe loop start position in ticks\n\t\t\t\t *  @type {Ticks}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._loopStart = 0;\n\t\t        /** \n\t\t\t\t * \tThe loop end position in ticks\n\t\t\t\t *  @type {Ticks}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._loopEnd = 0;\n\t\t        ///////////////////////////////////////////////////////////////////////\n\t\t        //\tCLOCK/TEMPO\n\t\t        //////////////////////////////////////////////////////////////////////\n\t\t        /**\n\t\t\t\t *  Pulses per quarter is the number of ticks per quarter note.\n\t\t\t\t *  @private\n\t\t\t\t *  @type  {Number}\n\t\t\t\t */\n\t\t        this._ppq = TransportConstructor.defaults.PPQ;\n\t\t        /**\n\t\t\t\t *  watches the main oscillator for timing ticks\n\t\t\t\t *  initially starts at 120bpm\n\t\t\t\t *  @private\n\t\t\t\t *  @type {Tone.Clock}\n\t\t\t\t */\n\t\t        this._clock = new Tone.Clock({\n\t\t            'callback': this._processTick.bind(this),\n\t\t            'frequency': 0\n\t\t        });\n\t\t        this._bindClockEvents();\n\t\t        /**\n\t\t\t\t *  The Beats Per Minute of the Transport. \n\t\t\t\t *  @type {BPM}\n\t\t\t\t *  @signal\n\t\t\t\t *  @example\n\t\t\t\t * Tone.Transport.bpm.value = 80;\n\t\t\t\t * //ramp the bpm to 120 over 10 seconds\n\t\t\t\t * Tone.Transport.bpm.rampTo(120, 10);\n\t\t\t\t */\n\t\t        this.bpm = this._clock.frequency;\n\t\t        this.bpm._toUnits = this._toUnits.bind(this);\n\t\t        this.bpm._fromUnits = this._fromUnits.bind(this);\n\t\t        this.bpm.units = Tone.Type.BPM;\n\t\t        this.bpm.value = TransportConstructor.defaults.bpm;\n\t\t        this._readOnly('bpm');\n\t\t        /**\n\t\t\t\t *  The time signature, or more accurately the numerator\n\t\t\t\t *  of the time signature over a denominator of 4. \n\t\t\t\t *  @type {Number}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._timeSignature = TransportConstructor.defaults.timeSignature;\n\t\t        ///////////////////////////////////////////////////////////////////////\n\t\t        //\tTIMELINE EVENTS\n\t\t        //////////////////////////////////////////////////////////////////////\n\t\t        /**\n\t\t\t\t *  All the events in an object to keep track by ID\n\t\t\t\t *  @type {Object}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._scheduledEvents = {};\n\t\t        /**\n\t\t\t\t *  The event ID counter\n\t\t\t\t *  @type {Number}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._eventID = 0;\n\t\t        /**\n\t\t\t\t * \tThe scheduled events.\n\t\t\t\t *  @type {Tone.Timeline}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._timeline = new Tone.Timeline();\n\t\t        /**\n\t\t\t\t *  Repeated events\n\t\t\t\t *  @type {Array}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._repeatedEvents = new Tone.IntervalTimeline();\n\t\t        /**\n\t\t\t\t *  Events that occur once\n\t\t\t\t *  @type {Array}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._onceEvents = new Tone.Timeline();\n\t\t        /** \n\t\t\t\t *  All of the synced Signals\n\t\t\t\t *  @private \n\t\t\t\t *  @type {Array}\n\t\t\t\t */\n\t\t        this._syncedSignals = [];\n\t\t        ///////////////////////////////////////////////////////////////////////\n\t\t        //\tSWING\n\t\t        //////////////////////////////////////////////////////////////////////\n\t\t        /**\n\t\t\t\t *  The subdivision of the swing\n\t\t\t\t *  @type  {Ticks}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._swingTicks = TransportConstructor.defaults.PPQ / 2;\n\t\t        //8n\n\t\t        /**\n\t\t\t\t *  The swing amount\n\t\t\t\t *  @type {NormalRange}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._swingAmount = 0;\n\t\t    };\n\t\t    Tone.extend(Tone.Transport, Tone.Emitter);\n\t\t    /**\n\t\t\t *  the defaults\n\t\t\t *  @type {Object}\n\t\t\t *  @const\n\t\t\t *  @static\n\t\t\t */\n\t\t    Tone.Transport.defaults = {\n\t\t        'bpm': 120,\n\t\t        'swing': 0,\n\t\t        'swingSubdivision': '8n',\n\t\t        'timeSignature': 4,\n\t\t        'loopStart': 0,\n\t\t        'loopEnd': '4m',\n\t\t        'PPQ': 192\n\t\t    };\n\t\t    ///////////////////////////////////////////////////////////////////////////////\n\t\t    //\tTICKS\n\t\t    ///////////////////////////////////////////////////////////////////////////////\n\t\t    /**\n\t\t\t *  called on every tick\n\t\t\t *  @param   {number} tickTime clock relative tick time\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Transport.prototype._processTick = function (tickTime) {\n\t\t        var ticks = this._clock.ticks;\n\t\t        //handle swing\n\t\t        if (this._swingAmount > 0 && ticks % this._ppq !== 0 && //not on a downbeat\n\t\t            ticks % (this._swingTicks * 2) !== 0) {\n\t\t            //add some swing\n\t\t            var progress = ticks % (this._swingTicks * 2) / (this._swingTicks * 2);\n\t\t            var amount = Math.sin(progress * Math.PI) * this._swingAmount;\n\t\t            tickTime += Tone.Time(this._swingTicks * 2 / 3, 'i') * amount;\n\t\t        }\n\t\t        //do the loop test\n\t\t        if (this.loop) {\n\t\t            if (ticks === this._loopEnd) {\n\t\t                this.emit('loopEnd', tickTime);\n\t\t                this._clock.ticks = this._loopStart;\n\t\t                ticks = this._loopStart;\n\t\t                this.emit('loopStart', tickTime, this.seconds);\n\t\t                this.emit('loop', tickTime);\n\t\t            }\n\t\t        }\n\t\t        //process the single occurrence events\n\t\t        this._onceEvents.forEachBefore(ticks, function (event) {\n\t\t            event.callback(tickTime);\n\t\t            //remove the event\n\t\t            delete this._scheduledEvents[event.id.toString()];\n\t\t        }.bind(this));\n\t\t        //and clear the single occurrence timeline\n\t\t        this._onceEvents.cancelBefore(ticks);\n\t\t        //fire the next tick events if their time has come\n\t\t        this._timeline.forEachAtTime(ticks, function (event) {\n\t\t            event.callback(tickTime);\n\t\t        });\n\t\t        //process the repeated events\n\t\t        this._repeatedEvents.forEachAtTime(ticks, function (event) {\n\t\t            if ((ticks - event.time) % event.interval === 0) {\n\t\t                event.callback(tickTime);\n\t\t            }\n\t\t        });\n\t\t    };\n\t\t    ///////////////////////////////////////////////////////////////////////////////\n\t\t    //\tSCHEDULABLE EVENTS\n\t\t    ///////////////////////////////////////////////////////////////////////////////\n\t\t    /**\n\t\t\t *  Schedule an event along the timeline.\n\t\t\t *  @param {Function} callback The callback to be invoked at the time.\n\t\t\t *  @param {TransportTime}  time The time to invoke the callback at.\n\t\t\t *  @return {Number} The id of the event which can be used for canceling the event. \n\t\t\t *  @example\n\t\t\t * //trigger the callback when the Transport reaches the desired time\n\t\t\t * Tone.Transport.schedule(function(time){\n\t\t\t * \tenvelope.triggerAttack(time);\n\t\t\t * }, \"128i\");\n\t\t\t */\n\t\t    Tone.Transport.prototype.schedule = function (callback, time) {\n\t\t        var event = {\n\t\t            'time': this.toTicks(time),\n\t\t            'callback': callback\n\t\t        };\n\t\t        var id = this._eventID++;\n\t\t        this._scheduledEvents[id.toString()] = {\n\t\t            'event': event,\n\t\t            'timeline': this._timeline\n\t\t        };\n\t\t        this._timeline.add(event);\n\t\t        return id;\n\t\t    };\n\t\t    /**\n\t\t\t *  Schedule a repeated event along the timeline. The event will fire\n\t\t\t *  at the `interval` starting at the `startTime` and for the specified\n\t\t\t *  `duration`. \n\t\t\t *  @param  {Function}  callback   The callback to invoke.\n\t\t\t *  @param  {Time}    interval   The duration between successive\n\t\t\t *                               callbacks.\n\t\t\t *  @param  {TimelinePosition=}    startTime  When along the timeline the events should\n\t\t\t *                               start being invoked.\n\t\t\t *  @param {Time} [duration=Infinity] How long the event should repeat. \n\t\t\t *  @return  {Number}    The ID of the scheduled event. Use this to cancel\n\t\t\t *                           the event. \n\t\t\t *  @example\n\t\t\t * //a callback invoked every eighth note after the first measure\n\t\t\t * Tone.Transport.scheduleRepeat(callback, \"8n\", \"1m\");\n\t\t\t */\n\t\t    Tone.Transport.prototype.scheduleRepeat = function (callback, interval, startTime, duration) {\n\t\t        if (interval <= 0) {\n\t\t            throw new Error('Tone.Transport: repeat events must have an interval larger than 0');\n\t\t        }\n\t\t        var event = {\n\t\t            'time': this.toTicks(startTime),\n\t\t            'duration': this.toTicks(this.defaultArg(duration, Infinity)),\n\t\t            'interval': this.toTicks(interval),\n\t\t            'callback': callback\n\t\t        };\n\t\t        var id = this._eventID++;\n\t\t        this._scheduledEvents[id.toString()] = {\n\t\t            'event': event,\n\t\t            'timeline': this._repeatedEvents\n\t\t        };\n\t\t        this._repeatedEvents.add(event);\n\t\t        return id;\n\t\t    };\n\t\t    /**\n\t\t\t *  Schedule an event that will be removed after it is invoked. \n\t\t\t *  Note that if the given time is less than the current transport time, \n\t\t\t *  the event will be invoked immediately. \n\t\t\t *  @param {Function} callback The callback to invoke once.\n\t\t\t *  @param {TransportTime} time The time the callback should be invoked.\n\t\t\t *  @returns {Number} The ID of the scheduled event. \n\t\t\t */\n\t\t    Tone.Transport.prototype.scheduleOnce = function (callback, time) {\n\t\t        var id = this._eventID++;\n\t\t        var event = {\n\t\t            'time': this.toTicks(time),\n\t\t            'callback': callback,\n\t\t            'id': id\n\t\t        };\n\t\t        this._scheduledEvents[id.toString()] = {\n\t\t            'event': event,\n\t\t            'timeline': this._onceEvents\n\t\t        };\n\t\t        this._onceEvents.add(event);\n\t\t        return id;\n\t\t    };\n\t\t    /**\n\t\t\t *  Clear the passed in event id from the timeline\n\t\t\t *  @param {Number} eventId The id of the event.\n\t\t\t *  @returns {Tone.Transport} this\n\t\t\t */\n\t\t    Tone.Transport.prototype.clear = function (eventId) {\n\t\t        if (this._scheduledEvents.hasOwnProperty(eventId)) {\n\t\t            var item = this._scheduledEvents[eventId.toString()];\n\t\t            item.timeline.remove(item.event);\n\t\t            delete this._scheduledEvents[eventId.toString()];\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Remove scheduled events from the timeline after\n\t\t\t *  the given time. Repeated events will be removed\n\t\t\t *  if their startTime is after the given time\n\t\t\t *  @param {TransportTime} [after=0] Clear all events after\n\t\t\t *                          this time. \n\t\t\t *  @returns {Tone.Transport} this\n\t\t\t */\n\t\t    Tone.Transport.prototype.cancel = function (after) {\n\t\t        after = this.defaultArg(after, 0);\n\t\t        after = this.toTicks(after);\n\t\t        this._timeline.cancel(after);\n\t\t        this._onceEvents.cancel(after);\n\t\t        this._repeatedEvents.cancel(after);\n\t\t        return this;\n\t\t    };\n\t\t    ///////////////////////////////////////////////////////////////////////////////\n\t\t    //\tSTART/STOP/PAUSE\n\t\t    ///////////////////////////////////////////////////////////////////////////////\n\t\t    /**\n\t\t\t *  Bind start/stop/pause events from the clock and emit them.\n\t\t\t */\n\t\t    Tone.Transport.prototype._bindClockEvents = function () {\n\t\t        this._clock.on('start', function (time, offset) {\n\t\t            offset = Tone.Time(this._clock.ticks, 'i').toSeconds();\n\t\t            this.emit('start', time, offset);\n\t\t        }.bind(this));\n\t\t        this._clock.on('stop', function (time) {\n\t\t            this.emit('stop', time);\n\t\t        }.bind(this));\n\t\t        this._clock.on('pause', function (time) {\n\t\t            this.emit('pause', time);\n\t\t        }.bind(this));\n\t\t    };\n\t\t    /**\n\t\t\t *  Returns the playback state of the source, either \"started\", \"stopped\", or \"paused\"\n\t\t\t *  @type {Tone.State}\n\t\t\t *  @readOnly\n\t\t\t *  @memberOf Tone.Transport#\n\t\t\t *  @name state\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Transport.prototype, 'state', {\n\t\t        get: function () {\n\t\t            return this._clock.getStateAtTime(this.now());\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Start the transport and all sources synced to the transport.\n\t\t\t *  @param  {Time} [time=now] The time when the transport should start.\n\t\t\t *  @param  {TransportTime=} offset The timeline offset to start the transport.\n\t\t\t *  @returns {Tone.Transport} this\n\t\t\t *  @example\n\t\t\t * //start the transport in one second starting at beginning of the 5th measure. \n\t\t\t * Tone.Transport.start(\"+1\", \"4:0:0\");\n\t\t\t */\n\t\t    Tone.Transport.prototype.start = function (time, offset) {\n\t\t        //start the clock\n\t\t        if (!this.isUndef(offset)) {\n\t\t            offset = this.toTicks(offset);\n\t\t        }\n\t\t        this._clock.start(time, offset);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Stop the transport and all sources synced to the transport.\n\t\t\t *  @param  {Time} [time=now] The time when the transport should stop. \n\t\t\t *  @returns {Tone.Transport} this\n\t\t\t *  @example\n\t\t\t * Tone.Transport.stop();\n\t\t\t */\n\t\t    Tone.Transport.prototype.stop = function (time) {\n\t\t        this._clock.stop(time);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Pause the transport and all sources synced to the transport.\n\t\t\t *  @param  {Time} [time=now]\n\t\t\t *  @returns {Tone.Transport} this\n\t\t\t */\n\t\t    Tone.Transport.prototype.pause = function (time) {\n\t\t        this._clock.pause(time);\n\t\t        return this;\n\t\t    };\n\t\t    ///////////////////////////////////////////////////////////////////////////////\n\t\t    //\tSETTERS/GETTERS\n\t\t    ///////////////////////////////////////////////////////////////////////////////\n\t\t    /**\n\t\t\t *  The time signature as just the numerator over 4. \n\t\t\t *  For example 4/4 would be just 4 and 6/8 would be 3.\n\t\t\t *  @memberOf Tone.Transport#\n\t\t\t *  @type {Number|Array}\n\t\t\t *  @name timeSignature\n\t\t\t *  @example\n\t\t\t * //common time\n\t\t\t * Tone.Transport.timeSignature = 4;\n\t\t\t * // 7/8\n\t\t\t * Tone.Transport.timeSignature = [7, 8];\n\t\t\t * //this will be reduced to a single number\n\t\t\t * Tone.Transport.timeSignature; //returns 3.5\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Transport.prototype, 'timeSignature', {\n\t\t        get: function () {\n\t\t            return this._timeSignature;\n\t\t        },\n\t\t        set: function (timeSig) {\n\t\t            if (this.isArray(timeSig)) {\n\t\t                timeSig = timeSig[0] / timeSig[1] * 4;\n\t\t            }\n\t\t            this._timeSignature = timeSig;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * When the Tone.Transport.loop = true, this is the starting position of the loop.\n\t\t\t * @memberOf Tone.Transport#\n\t\t\t * @type {TransportTime}\n\t\t\t * @name loopStart\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Transport.prototype, 'loopStart', {\n\t\t        get: function () {\n\t\t            return Tone.TransportTime(this._loopStart, 'i').toSeconds();\n\t\t        },\n\t\t        set: function (startPosition) {\n\t\t            this._loopStart = this.toTicks(startPosition);\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * When the Tone.Transport.loop = true, this is the ending position of the loop.\n\t\t\t * @memberOf Tone.Transport#\n\t\t\t * @type {TransportTime}\n\t\t\t * @name loopEnd\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Transport.prototype, 'loopEnd', {\n\t\t        get: function () {\n\t\t            return Tone.TransportTime(this._loopEnd, 'i').toSeconds();\n\t\t        },\n\t\t        set: function (endPosition) {\n\t\t            this._loopEnd = this.toTicks(endPosition);\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Set the loop start and stop at the same time. \n\t\t\t *  @param {TransportTime} startPosition \n\t\t\t *  @param {TransportTime} endPosition   \n\t\t\t *  @returns {Tone.Transport} this\n\t\t\t *  @example\n\t\t\t * //loop over the first measure\n\t\t\t * Tone.Transport.setLoopPoints(0, \"1m\");\n\t\t\t * Tone.Transport.loop = true;\n\t\t\t */\n\t\t    Tone.Transport.prototype.setLoopPoints = function (startPosition, endPosition) {\n\t\t        this.loopStart = startPosition;\n\t\t        this.loopEnd = endPosition;\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  The swing value. Between 0-1 where 1 equal to \n\t\t\t *  the note + half the subdivision.\n\t\t\t *  @memberOf Tone.Transport#\n\t\t\t *  @type {NormalRange}\n\t\t\t *  @name swing\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Transport.prototype, 'swing', {\n\t\t        get: function () {\n\t\t            return this._swingAmount;\n\t\t        },\n\t\t        set: function (amount) {\n\t\t            //scale the values to a normal range\n\t\t            this._swingAmount = amount;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Set the subdivision which the swing will be applied to. \n\t\t\t *  The default value is an 8th note. Value must be less \n\t\t\t *  than a quarter note.\n\t\t\t *  \n\t\t\t *  @memberOf Tone.Transport#\n\t\t\t *  @type {Time}\n\t\t\t *  @name swingSubdivision\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Transport.prototype, 'swingSubdivision', {\n\t\t        get: function () {\n\t\t            return Tone.Time(this._swingTicks, 'i').toNotation();\n\t\t        },\n\t\t        set: function (subdivision) {\n\t\t            this._swingTicks = this.toTicks(subdivision);\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The Transport's position in Bars:Beats:Sixteenths.\n\t\t\t *  Setting the value will jump to that position right away. \n\t\t\t *  @memberOf Tone.Transport#\n\t\t\t *  @type {BarsBeatsSixteenths}\n\t\t\t *  @name position\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Transport.prototype, 'position', {\n\t\t        get: function () {\n\t\t            return Tone.TransportTime(this.ticks, 'i').toBarsBeatsSixteenths();\n\t\t        },\n\t\t        set: function (progress) {\n\t\t            var ticks = this.toTicks(progress);\n\t\t            this.ticks = ticks;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The Transport's position in seconds\n\t\t\t *  Setting the value will jump to that position right away. \n\t\t\t *  @memberOf Tone.Transport#\n\t\t\t *  @type {Seconds}\n\t\t\t *  @name seconds\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Transport.prototype, 'seconds', {\n\t\t        get: function () {\n\t\t            return Tone.TransportTime(this.ticks, 'i').toSeconds();\n\t\t        },\n\t\t        set: function (progress) {\n\t\t            var ticks = this.toTicks(progress);\n\t\t            this.ticks = ticks;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The Transport's loop position as a normalized value. Always\n\t\t\t *  returns 0 if the transport if loop is not true. \n\t\t\t *  @memberOf Tone.Transport#\n\t\t\t *  @name progress\n\t\t\t *  @type {NormalRange}\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Transport.prototype, 'progress', {\n\t\t        get: function () {\n\t\t            if (this.loop) {\n\t\t                return (this.ticks - this._loopStart) / (this._loopEnd - this._loopStart);\n\t\t            } else {\n\t\t                return 0;\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The transports current tick position.\n\t\t\t *  \n\t\t\t *  @memberOf Tone.Transport#\n\t\t\t *  @type {Ticks}\n\t\t\t *  @name ticks\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Transport.prototype, 'ticks', {\n\t\t        get: function () {\n\t\t            return this._clock.ticks;\n\t\t        },\n\t\t        set: function (t) {\n\t\t            if (this._clock.ticks !== t) {\n\t\t                var now = this.now();\n\t\t                //stop everything synced to the transport\n\t\t                if (this.state === Tone.State.Started) {\n\t\t                    this.emit('stop', now);\n\t\t                    this._clock.ticks = t;\n\t\t                    //restart it with the new time\n\t\t                    this.emit('start', now, this.seconds);\n\t\t                } else {\n\t\t                    this._clock.ticks = t;\n\t\t                }\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Pulses Per Quarter note. This is the smallest resolution\n\t\t\t *  the Transport timing supports. This should be set once\n\t\t\t *  on initialization and not set again. Changing this value \n\t\t\t *  after other objects have been created can cause problems. \n\t\t\t *  \n\t\t\t *  @memberOf Tone.Transport#\n\t\t\t *  @type {Number}\n\t\t\t *  @name PPQ\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Transport.prototype, 'PPQ', {\n\t\t        get: function () {\n\t\t            return this._ppq;\n\t\t        },\n\t\t        set: function (ppq) {\n\t\t            var bpm = this.bpm.value;\n\t\t            this._ppq = ppq;\n\t\t            this.bpm.value = bpm;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The hint to the type of playback. Affects tradeoffs between audio \n\t\t\t *  output latency and responsiveness. \n\t\t\t *  \n\t\t\t *  In addition to setting the value in seconds, the latencyHint also\n\t\t\t *  accepts the strings \"interactive\" (prioritizes low latency), \n\t\t\t *  \"playback\" (prioritizes sustained playback), \"balanced\" (balances\n\t\t\t *  latency and performance), and \"fastest\" (lowest latency, might glitch more often). \n\t\t\t *  @memberOf Tone.Transport#\n\t\t\t *  @type {Seconds|String}\n\t\t\t *  @name latencyHint\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Transport.prototype, 'latencyHint', {\n\t\t        get: function () {\n\t\t            return Tone.Clock.latencyHint;\n\t\t        },\n\t\t        set: function (hint) {\n\t\t            Tone.Clock.latencyHint = hint;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Convert from BPM to frequency (factoring in PPQ)\n\t\t\t *  @param  {BPM}  bpm The BPM value to convert to frequency\n\t\t\t *  @return  {Frequency}  The BPM as a frequency with PPQ factored in.\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Transport.prototype._fromUnits = function (bpm) {\n\t\t        return 1 / (60 / bpm / this.PPQ);\n\t\t    };\n\t\t    /**\n\t\t\t *  Convert from frequency (with PPQ) into BPM\n\t\t\t *  @param  {Frequency}  freq The clocks frequency to convert to BPM\n\t\t\t *  @return  {BPM}  The frequency value as BPM.\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Transport.prototype._toUnits = function (freq) {\n\t\t        return freq / this.PPQ * 60;\n\t\t    };\n\t\t    ///////////////////////////////////////////////////////////////////////////////\n\t\t    //\tSYNCING\n\t\t    ///////////////////////////////////////////////////////////////////////////////\n\t\t    /**\n\t\t\t *  Returns the time aligned to the next subdivision\n\t\t\t *  of the Transport. If the Transport is not started,\n\t\t\t *  it will return 0.\n\t\t\t *  Note: this will not work precisely during tempo ramps.\n\t\t\t *  @param  {Time}  subdivision  The subdivision to quantize to\n\t\t\t *  @return  {Number}  The context time of the next subdivision.\n\t\t\t *  @example\n\t\t\t * Tone.Transport.start(); //the transport must be started\n\t\t\t * Tone.Transport.nextSubdivision(\"4n\");\n\t\t\t */\n\t\t    Tone.Transport.prototype.nextSubdivision = function (subdivision) {\n\t\t        subdivision = this.toSeconds(subdivision);\n\t\t        //if the transport's not started, return 0\n\t\t        var now;\n\t\t        if (this.state === Tone.State.Started) {\n\t\t            now = this._clock._nextTick;\n\t\t        } else {\n\t\t            return 0;\n\t\t        }\n\t\t        var transportPos = Tone.Time(this.ticks, 'i');\n\t\t        var remainingTime = subdivision - transportPos % subdivision;\n\t\t        if (remainingTime === 0) {\n\t\t            remainingTime = subdivision;\n\t\t        }\n\t\t        return now + remainingTime;\n\t\t    };\n\t\t    /**\n\t\t\t *  Attaches the signal to the tempo control signal so that \n\t\t\t *  any changes in the tempo will change the signal in the same\n\t\t\t *  ratio. \n\t\t\t *  \n\t\t\t *  @param  {Tone.Signal} signal \n\t\t\t *  @param {number=} ratio Optionally pass in the ratio between\n\t\t\t *                         the two signals. Otherwise it will be computed\n\t\t\t *                         based on their current values. \n\t\t\t *  @returns {Tone.Transport} this\n\t\t\t */\n\t\t    Tone.Transport.prototype.syncSignal = function (signal, ratio) {\n\t\t        if (!ratio) {\n\t\t            //get the sync ratio\n\t\t            if (signal._param.value !== 0) {\n\t\t                ratio = signal._param.value / this.bpm._param.value;\n\t\t            } else {\n\t\t                ratio = 0;\n\t\t            }\n\t\t        }\n\t\t        var ratioSignal = new Tone.Gain(ratio);\n\t\t        this.bpm.chain(ratioSignal, signal._param);\n\t\t        this._syncedSignals.push({\n\t\t            'ratio': ratioSignal,\n\t\t            'signal': signal,\n\t\t            'initial': signal._param.value\n\t\t        });\n\t\t        signal._param.value = 0;\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Unsyncs a previously synced signal from the transport's control. \n\t\t\t *  See Tone.Transport.syncSignal.\n\t\t\t *  @param  {Tone.Signal} signal \n\t\t\t *  @returns {Tone.Transport} this\n\t\t\t */\n\t\t    Tone.Transport.prototype.unsyncSignal = function (signal) {\n\t\t        for (var i = this._syncedSignals.length - 1; i >= 0; i--) {\n\t\t            var syncedSignal = this._syncedSignals[i];\n\t\t            if (syncedSignal.signal === signal) {\n\t\t                syncedSignal.ratio.dispose();\n\t\t                syncedSignal.signal._param.value = syncedSignal.initial;\n\t\t                this._syncedSignals.splice(i, 1);\n\t\t            }\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Clean up. \n\t\t\t *  @returns {Tone.Transport} this\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Transport.prototype.dispose = function () {\n\t\t        Tone.Emitter.prototype.dispose.call(this);\n\t\t        this._clock.dispose();\n\t\t        this._clock = null;\n\t\t        this._writable('bpm');\n\t\t        this.bpm = null;\n\t\t        this._timeline.dispose();\n\t\t        this._timeline = null;\n\t\t        this._onceEvents.dispose();\n\t\t        this._onceEvents = null;\n\t\t        this._repeatedEvents.dispose();\n\t\t        this._repeatedEvents = null;\n\t\t        return this;\n\t\t    };\n\t\t    ///////////////////////////////////////////////////////////////////////////////\n\t\t    //\tINITIALIZATION\n\t\t    ///////////////////////////////////////////////////////////////////////////////\n\t\t    var TransportConstructor = Tone.Transport;\n\t\t    Tone.Transport = new TransportConstructor();\n\t\t    Tone.Context.on('init', function (context) {\n\t\t        if (context.Transport instanceof TransportConstructor) {\n\t\t            Tone.Transport = context.Transport;\n\t\t        } else {\n\t\t            Tone.Transport = new TransportConstructor();\n\t\t            //store the Transport on the context so it can be retrieved later\n\t\t            context.Transport = Tone.Transport;\n\t\t        }\n\t\t    });\n\t\t    return Tone.Transport;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Tone.Volume is a simple volume node, useful for creating a volume fader. \n\t\t\t *\n\t\t\t *  @extends {Tone}\n\t\t\t *  @constructor\n\t\t\t *  @param {Decibels} [volume=0] the initial volume\n\t\t\t *  @example\n\t\t\t * var vol = new Tone.Volume(-12);\n\t\t\t * instrument.chain(vol, Tone.Master);\n\t\t\t */\n\t\t    Tone.Volume = function () {\n\t\t        var options = this.optionsObject(arguments, ['volume'], Tone.Volume.defaults);\n\t\t        /**\n\t\t\t\t * the output node\n\t\t\t\t * @type {GainNode}\n\t\t\t\t * @private\n\t\t\t\t */\n\t\t        this.output = this.input = new Tone.Gain(options.volume, Tone.Type.Decibels);\n\t\t        /**\n\t\t\t\t * The unmuted volume\n\t\t\t\t * @type {Decibels}\n\t\t\t\t * @private\n\t\t\t\t */\n\t\t        this._unmutedVolume = options.volume;\n\t\t        /**\n\t\t\t\t *  The volume control in decibels. \n\t\t\t\t *  @type {Decibels}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.volume = this.output.gain;\n\t\t        this._readOnly('volume');\n\t\t        //set the mute initially\n\t\t        this.mute = options.mute;\n\t\t    };\n\t\t    Tone.extend(Tone.Volume);\n\t\t    /**\n\t\t\t *  Defaults\n\t\t\t *  @type  {Object}\n\t\t\t *  @const\n\t\t\t *  @static\n\t\t\t */\n\t\t    Tone.Volume.defaults = {\n\t\t        'volume': 0,\n\t\t        'mute': false\n\t\t    };\n\t\t    /**\n\t\t\t * Mute the output. \n\t\t\t * @memberOf Tone.Volume#\n\t\t\t * @type {boolean}\n\t\t\t * @name mute\n\t\t\t * @example\n\t\t\t * //mute the output\n\t\t\t * volume.mute = true;\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Volume.prototype, 'mute', {\n\t\t        get: function () {\n\t\t            return this.volume.value === -Infinity;\n\t\t        },\n\t\t        set: function (mute) {\n\t\t            if (!this.mute && mute) {\n\t\t                this._unmutedVolume = this.volume.value;\n\t\t                //maybe it should ramp here?\n\t\t                this.volume.value = -Infinity;\n\t\t            } else if (this.mute && !mute) {\n\t\t                this.volume.value = this._unmutedVolume;\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  clean up\n\t\t\t *  @returns {Tone.Volume} this\n\t\t\t */\n\t\t    Tone.Volume.prototype.dispose = function () {\n\t\t        this.input.dispose();\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._writable('volume');\n\t\t        this.volume.dispose();\n\t\t        this.volume = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Volume;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  A single master output which is connected to the\n\t\t\t *          AudioDestinationNode (aka your speakers). \n\t\t\t *          It provides useful conveniences such as the ability \n\t\t\t *          to set the volume and mute the entire application. \n\t\t\t *          It also gives you the ability to apply master effects to your application. \n\t\t\t *          <br><br>\n\t\t\t *          Like Tone.Transport, A single Tone.Master is created\n\t\t\t *          on initialization and you do not need to explicitly construct one.\n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone}\n\t\t\t *  @singleton\n\t\t\t *  @example\n\t\t\t * //the audio will go from the oscillator to the speakers\n\t\t\t * oscillator.connect(Tone.Master);\n\t\t\t * //a convenience for connecting to the master output is also provided:\n\t\t\t * oscillator.toMaster();\n\t\t\t * //the above two examples are equivalent.\n\t\t\t */\n\t\t    Tone.Master = function () {\n\t\t        this.createInsOuts(1, 1);\n\t\t        /**\n\t\t\t\t *  The private volume node\n\t\t\t\t *  @type  {Tone.Volume}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._volume = this.output = new Tone.Volume();\n\t\t        /**\n\t\t\t\t * The volume of the master output.\n\t\t\t\t * @type {Decibels}\n\t\t\t\t * @signal\n\t\t\t\t */\n\t\t        this.volume = this._volume.volume;\n\t\t        this._readOnly('volume');\n\t\t        //connections\n\t\t        this.input.chain(this.output, this.context.destination);\n\t\t    };\n\t\t    Tone.extend(Tone.Master);\n\t\t    /**\n\t\t\t *  @type {Object}\n\t\t\t *  @const\n\t\t\t */\n\t\t    Tone.Master.defaults = {\n\t\t        'volume': 0,\n\t\t        'mute': false\n\t\t    };\n\t\t    /**\n\t\t\t * Mute the output. \n\t\t\t * @memberOf Tone.Master#\n\t\t\t * @type {boolean}\n\t\t\t * @name mute\n\t\t\t * @example\n\t\t\t * //mute the output\n\t\t\t * Tone.Master.mute = true;\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Master.prototype, 'mute', {\n\t\t        get: function () {\n\t\t            return this._volume.mute;\n\t\t        },\n\t\t        set: function (mute) {\n\t\t            this._volume.mute = mute;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Add a master effects chain. NOTE: this will disconnect any nodes which were previously \n\t\t\t *  chained in the master effects chain. \n\t\t\t *  @param {AudioNode|Tone...} args All arguments will be connected in a row\n\t\t\t *                                  and the Master will be routed through it.\n\t\t\t *  @return  {Tone.Master}  this\n\t\t\t *  @example\n\t\t\t * //some overall compression to keep the levels in check\n\t\t\t * var masterCompressor = new Tone.Compressor({\n\t\t\t * \t\"threshold\" : -6,\n\t\t\t * \t\"ratio\" : 3,\n\t\t\t * \t\"attack\" : 0.5,\n\t\t\t * \t\"release\" : 0.1\n\t\t\t * });\n\t\t\t * //give a little boost to the lows\n\t\t\t * var lowBump = new Tone.Filter(200, \"lowshelf\");\n\t\t\t * //route everything through the filter \n\t\t\t * //and compressor before going to the speakers\n\t\t\t * Tone.Master.chain(lowBump, masterCompressor);\n\t\t\t */\n\t\t    Tone.Master.prototype.chain = function () {\n\t\t        this.input.disconnect();\n\t\t        this.input.chain.apply(this.input, arguments);\n\t\t        arguments[arguments.length - 1].connect(this.output);\n\t\t    };\n\t\t    /**\n\t\t\t *  Clean up\n\t\t\t *  @return  {Tone.Master}  this\n\t\t\t */\n\t\t    Tone.Master.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._writable('volume');\n\t\t        this._volume.dispose();\n\t\t        this._volume = null;\n\t\t        this.volume = null;\n\t\t    };\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    //\tAUGMENT TONE's PROTOTYPE\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    /**\n\t\t\t *  Connect 'this' to the master output. Shorthand for this.connect(Tone.Master)\n\t\t\t *  @returns {Tone} this\n\t\t\t *  @example\n\t\t\t * //connect an oscillator to the master output\n\t\t\t * var osc = new Tone.Oscillator().toMaster();\n\t\t\t */\n\t\t    Tone.prototype.toMaster = function () {\n\t\t        this.connect(Tone.Master);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Also augment AudioNode's prototype to include toMaster\n\t\t\t *  as a convenience\n\t\t\t *  @returns {AudioNode} this\n\t\t\t */\n\t\t    AudioNode.prototype.toMaster = function () {\n\t\t        this.connect(Tone.Master);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  initialize the module and listen for new audio contexts\n\t\t\t */\n\t\t    var MasterConstructor = Tone.Master;\n\t\t    Tone.Master = new MasterConstructor();\n\t\t    Tone.Context.on('init', function (context) {\n\t\t        // if it already exists, just restore it\n\t\t        if (context.Master instanceof MasterConstructor) {\n\t\t            Tone.Master = context.Master;\n\t\t        } else {\n\t\t            Tone.Master = new MasterConstructor();\n\t\t        }\n\t\t        context.Master = Tone.Master;\n\t\t    });\n\t\t    return Tone.Master;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  Base class for sources. Sources have start/stop methods\n\t\t\t *          and the ability to be synced to the \n\t\t\t *          start/stop of Tone.Transport. \n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone}\n\t\t\t *  @example\n\t\t\t * //Multiple state change events can be chained together,\n\t\t\t * //but must be set in the correct order and with ascending times\n\t\t\t * \n\t\t\t * // OK\n\t\t\t * state.start().stop(\"+0.2\");\n\t\t\t * // AND\n\t\t\t * state.start().stop(\"+0.2\").start(\"+0.4\").stop(\"+0.7\")\n\t\t\t *\n\t\t\t * // BAD\n\t\t\t * state.stop(\"+0.2\").start();\n\t\t\t * // OR\n\t\t\t * state.start(\"+0.3\").stop(\"+0.2\");\n\t\t\t * \n\t\t\t */\n\t\t    Tone.Source = function (options) {\n\t\t        // this.createInsOuts(0, 1);\n\t\t        options = this.defaultArg(options, Tone.Source.defaults);\n\t\t        /**\n\t\t\t\t *  The output volume node\n\t\t\t\t *  @type  {Tone.Volume}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._volume = this.output = new Tone.Volume(options.volume);\n\t\t        /**\n\t\t\t\t * The volume of the output in decibels.\n\t\t\t\t * @type {Decibels}\n\t\t\t\t * @signal\n\t\t\t\t * @example\n\t\t\t\t * source.volume.value = -6;\n\t\t\t\t */\n\t\t        this.volume = this._volume.volume;\n\t\t        this._readOnly('volume');\n\t\t        /**\n\t\t\t\t * \tKeep track of the scheduled state.\n\t\t\t\t *  @type {Tone.TimelineState}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._state = new Tone.TimelineState(Tone.State.Stopped);\n\t\t        this._state.memory = 10;\n\t\t        /**\n\t\t\t\t *  The synced `start` callback function from the transport\n\t\t\t\t *  @type {Function}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._synced = false;\n\t\t        /**\n\t\t\t\t *  Keep track of all of the scheduled event ids\n\t\t\t\t *  @type  {Array}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._scheduled = [];\n\t\t        //make the output explicitly stereo\n\t\t        this._volume.output.output.channelCount = 2;\n\t\t        this._volume.output.output.channelCountMode = 'explicit';\n\t\t        //mute initially\n\t\t        this.mute = options.mute;\n\t\t    };\n\t\t    Tone.extend(Tone.Source);\n\t\t    /**\n\t\t\t *  The default parameters\n\t\t\t *  @static\n\t\t\t *  @const\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.Source.defaults = {\n\t\t        'volume': 0,\n\t\t        'mute': false\n\t\t    };\n\t\t    /**\n\t\t\t *  Returns the playback state of the source, either \"started\" or \"stopped\".\n\t\t\t *  @type {Tone.State}\n\t\t\t *  @readOnly\n\t\t\t *  @memberOf Tone.Source#\n\t\t\t *  @name state\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Source.prototype, 'state', {\n\t\t        get: function () {\n\t\t            if (this._synced) {\n\t\t                if (Tone.Transport.state === Tone.State.Started) {\n\t\t                    return this._state.getValueAtTime(Tone.Transport.seconds);\n\t\t                } else {\n\t\t                    return Tone.State.Stopped;\n\t\t                }\n\t\t            } else {\n\t\t                return this._state.getValueAtTime(this.now());\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * Mute the output. \n\t\t\t * @memberOf Tone.Source#\n\t\t\t * @type {boolean}\n\t\t\t * @name mute\n\t\t\t * @example\n\t\t\t * //mute the output\n\t\t\t * source.mute = true;\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Source.prototype, 'mute', {\n\t\t        get: function () {\n\t\t            return this._volume.mute;\n\t\t        },\n\t\t        set: function (mute) {\n\t\t            this._volume.mute = mute;\n\t\t        }\n\t\t    });\n\t\t    //overwrite these functions\n\t\t    Tone.Source.prototype._start = Tone.noOp;\n\t\t    Tone.Source.prototype._stop = Tone.noOp;\n\t\t    /**\n\t\t\t *  Start the source at the specified time. If no time is given, \n\t\t\t *  start the source now.\n\t\t\t *  @param  {Time} [time=now] When the source should be started.\n\t\t\t *  @returns {Tone.Source} this\n\t\t\t *  @example\n\t\t\t * source.start(\"+0.5\"); //starts the source 0.5 seconds from now\n\t\t\t */\n\t\t    Tone.Source.prototype.start = function (time, offset, duration) {\n\t\t        if (this.isUndef(time) && this._synced) {\n\t\t            time = Tone.Transport.seconds;\n\t\t        } else {\n\t\t            time = this.toSeconds(time);\n\t\t        }\n\t\t        //if it's started, stop it and restart it\n\t\t        if (!this.retrigger && this._state.getValueAtTime(time) === Tone.State.Started) {\n\t\t            this.stop(time);\n\t\t        }\n\t\t        this._state.setStateAtTime(Tone.State.Started, time);\n\t\t        if (this._synced) {\n\t\t            // add the offset time to the event\n\t\t            var event = this._state.get(time);\n\t\t            event.offset = this.defaultArg(offset, 0);\n\t\t            event.duration = duration;\n\t\t            var sched = Tone.Transport.schedule(function (t) {\n\t\t                this._start(t, offset, duration);\n\t\t            }.bind(this), time);\n\t\t            this._scheduled.push(sched);\n\t\t        } else {\n\t\t            this._start.apply(this, arguments);\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Stop the source at the specified time. If no time is given, \n\t\t\t *  stop the source now.\n\t\t\t *  @param  {Time} [time=now] When the source should be stopped. \n\t\t\t *  @returns {Tone.Source} this\n\t\t\t *  @example\n\t\t\t * source.stop(); // stops the source immediately\n\t\t\t */\n\t\t    Tone.Source.prototype.stop = function (time) {\n\t\t        if (this.isUndef(time) && this._synced) {\n\t\t            time = Tone.Transport.seconds;\n\t\t        } else {\n\t\t            time = this.toSeconds(time);\n\t\t        }\n\t\t        this._state.cancel(time);\n\t\t        this._state.setStateAtTime(Tone.State.Stopped, time);\n\t\t        if (!this._synced) {\n\t\t            this._stop.apply(this, arguments);\n\t\t        } else {\n\t\t            var sched = Tone.Transport.schedule(this._stop.bind(this), time);\n\t\t            this._scheduled.push(sched);\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Sync the source to the Transport so that all subsequent\n\t\t\t *  calls to `start` and `stop` are synced to the TransportTime\n\t\t\t *  instead of the AudioContext time. \n\t\t\t *\n\t\t\t *  @returns {Tone.Source} this\n\t\t\t *  @example\n\t\t\t * //sync the source so that it plays between 0 and 0.3 on the Transport's timeline\n\t\t\t * source.sync().start(0).stop(0.3);\n\t\t\t * //start the transport.\n\t\t\t * Tone.Transport.start();\n\t\t\t *\n\t\t\t *  @example\n\t\t\t * //start the transport with an offset and the sync'ed sources\n\t\t\t * //will start in the correct position\n\t\t\t * source.sync().start(0.1);\n\t\t\t * //the source will be invoked with an offset of 0.4\n\t\t\t * Tone.Transport.start(\"+0.5\", 0.5);\n\t\t\t */\n\t\t    Tone.Source.prototype.sync = function () {\n\t\t        this._synced = true;\n\t\t        Tone.Transport.on('start loopStart', function (time, offset) {\n\t\t            if (offset > 0) {\n\t\t                // get the playback state at that time\n\t\t                var stateEvent = this._state.get(offset);\n\t\t                // listen for start events which may occur in the middle of the sync'ed time\n\t\t                if (stateEvent && stateEvent.state === Tone.State.Started && stateEvent.time !== offset) {\n\t\t                    // get the offset\n\t\t                    var startOffset = offset - this.toSeconds(stateEvent.time);\n\t\t                    var duration;\n\t\t                    if (stateEvent.duration) {\n\t\t                        duration = this.toSeconds(stateEvent.duration) - startOffset;\n\t\t                    }\n\t\t                    this._start(time, this.toSeconds(stateEvent.offset) + startOffset, duration);\n\t\t                }\n\t\t            }\n\t\t        }.bind(this));\n\t\t        Tone.Transport.on('stop pause loopEnd', function (time) {\n\t\t            if (this._state.getValueAtTime(Tone.Transport.seconds) === Tone.State.Started) {\n\t\t                this._stop(time);\n\t\t            }\n\t\t        }.bind(this));\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Unsync the source to the Transport. See Tone.Source.sync\n\t\t\t *  @returns {Tone.Source} this\n\t\t\t */\n\t\t    Tone.Source.prototype.unsync = function () {\n\t\t        this._synced = false;\n\t\t        Tone.Transport.off('start stop pause loopEnd loopStart');\n\t\t        // clear all of the scheduled ids\n\t\t        for (var i = 0; i < this._scheduled.length; i++) {\n\t\t            var id = this._scheduled[i];\n\t\t            Tone.Transport.clear(id);\n\t\t        }\n\t\t        this._scheduled = [];\n\t\t        this._state.cancel(0);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *\tClean up.\n\t\t\t *  @return {Tone.Source} this\n\t\t\t */\n\t\t    Tone.Source.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this.unsync();\n\t\t        this._scheduled = null;\n\t\t        this._writable('volume');\n\t\t        this._volume.dispose();\n\t\t        this._volume = null;\n\t\t        this.volume = null;\n\t\t        this._state.dispose();\n\t\t        this._state = null;\n\t\t    };\n\t\t    return Tone.Source;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  OscillatorNode shim\n\t\t\t *  @private\n\t\t\t */\n\t\t    if (window.OscillatorNode && !OscillatorNode.prototype.start) {\n\t\t        OscillatorNode.prototype.start = OscillatorNode.prototype.noteOn;\n\t\t        OscillatorNode.prototype.stop = OscillatorNode.prototype.noteOff;\n\t\t        if (!OscillatorNode.prototype.setPeriodicWave) {\n\t\t            OscillatorNode.prototype.setPeriodicWave = OscillatorNode.prototype.setWaveTable;\n\t\t        }\n\t\t        if (!AudioContext.prototype.createPeriodicWave) {\n\t\t            AudioContext.prototype.createPeriodicWave = AudioContext.prototype.createWaveTable;\n\t\t        }\n\t\t    }\n\t\t    /**\n\t\t\t *  @class Tone.Oscillator supports a number of features including\n\t\t\t *         phase rotation, multiple oscillator types (see Tone.Oscillator.type), \n\t\t\t *         and Transport syncing (see Tone.Oscillator.syncFrequency).\n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.Source}\n\t\t\t *  @param {Frequency} [frequency] Starting frequency\n\t\t\t *  @param {string} [type] The oscillator type. Read more about type below.\n\t\t\t *  @example\n\t\t\t * //make and start a 440hz sine tone\n\t\t\t * var osc = new Tone.Oscillator(440, \"sine\").toMaster().start();\n\t\t\t */\n\t\t    Tone.Oscillator = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'frequency',\n\t\t            'type'\n\t\t        ], Tone.Oscillator.defaults);\n\t\t        Tone.Source.call(this, options);\n\t\t        /**\n\t\t\t\t *  the main oscillator\n\t\t\t\t *  @type {OscillatorNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._oscillator = null;\n\t\t        /**\n\t\t\t\t *  The frequency control.\n\t\t\t\t *  @type {Frequency}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.frequency = new Tone.Signal(options.frequency, Tone.Type.Frequency);\n\t\t        /**\n\t\t\t\t *  The detune control signal.\n\t\t\t\t *  @type {Cents}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.detune = new Tone.Signal(options.detune, Tone.Type.Cents);\n\t\t        /**\n\t\t\t\t *  the periodic wave\n\t\t\t\t *  @type {PeriodicWave}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._wave = null;\n\t\t        /**\n\t\t\t\t *  The partials of the oscillator\n\t\t\t\t *  @type {Array}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._partials = this.defaultArg(options.partials, [1]);\n\t\t        /**\n\t\t\t\t *  the phase of the oscillator\n\t\t\t\t *  between 0 - 360\n\t\t\t\t *  @type {number}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._phase = options.phase;\n\t\t        /**\n\t\t\t\t *  the type of the oscillator\n\t\t\t\t *  @type {string}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._type = null;\n\t\t        //setup\n\t\t        this.type = options.type;\n\t\t        this.phase = this._phase;\n\t\t        this._readOnly([\n\t\t            'frequency',\n\t\t            'detune'\n\t\t        ]);\n\t\t    };\n\t\t    Tone.extend(Tone.Oscillator, Tone.Source);\n\t\t    /**\n\t\t\t *  the default parameters\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.Oscillator.defaults = {\n\t\t        'type': 'sine',\n\t\t        'frequency': 440,\n\t\t        'detune': 0,\n\t\t        'phase': 0,\n\t\t        'partials': []\n\t\t    };\n\t\t    /**\n\t\t\t *  The Oscillator types\n\t\t\t *  @enum {String}\n\t\t\t */\n\t\t    Tone.Oscillator.Type = {\n\t\t        Sine: 'sine',\n\t\t        Triangle: 'triangle',\n\t\t        Sawtooth: 'sawtooth',\n\t\t        Square: 'square',\n\t\t        Custom: 'custom'\n\t\t    };\n\t\t    /**\n\t\t\t *  start the oscillator\n\t\t\t *  @param  {Time} [time=now] \n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Oscillator.prototype._start = function (time) {\n\t\t        //new oscillator with previous values\n\t\t        this._oscillator = this.context.createOscillator();\n\t\t        this._oscillator.setPeriodicWave(this._wave);\n\t\t        //connect the control signal to the oscillator frequency & detune\n\t\t        this._oscillator.connect(this.output);\n\t\t        this.frequency.connect(this._oscillator.frequency);\n\t\t        this.detune.connect(this._oscillator.detune);\n\t\t        //start the oscillator\n\t\t        this._oscillator.start(this.toSeconds(time));\n\t\t    };\n\t\t    /**\n\t\t\t *  stop the oscillator\n\t\t\t *  @private\n\t\t\t *  @param  {Time} [time=now] (optional) timing parameter\n\t\t\t *  @returns {Tone.Oscillator} this\n\t\t\t */\n\t\t    Tone.Oscillator.prototype._stop = function (time) {\n\t\t        if (this._oscillator) {\n\t\t            this._oscillator.stop(this.toSeconds(time));\n\t\t            this._oscillator = null;\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Sync the signal to the Transport's bpm. Any changes to the transports bpm,\n\t\t\t *  will also affect the oscillators frequency. \n\t\t\t *  @returns {Tone.Oscillator} this\n\t\t\t *  @example\n\t\t\t * Tone.Transport.bpm.value = 120;\n\t\t\t * osc.frequency.value = 440;\n\t\t\t * //the ration between the bpm and the frequency will be maintained\n\t\t\t * osc.syncFrequency();\n\t\t\t * Tone.Transport.bpm.value = 240; \n\t\t\t * // the frequency of the oscillator is doubled to 880\n\t\t\t */\n\t\t    Tone.Oscillator.prototype.syncFrequency = function () {\n\t\t        Tone.Transport.syncSignal(this.frequency);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Unsync the oscillator's frequency from the Transport. \n\t\t\t *  See Tone.Oscillator.syncFrequency\n\t\t\t *  @returns {Tone.Oscillator} this\n\t\t\t */\n\t\t    Tone.Oscillator.prototype.unsyncFrequency = function () {\n\t\t        Tone.Transport.unsyncSignal(this.frequency);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t * The type of the oscillator: either sine, square, triangle, or sawtooth. Also capable of\n\t\t\t * setting the first x number of partials of the oscillator. For example: \"sine4\" would\n\t\t\t * set be the first 4 partials of the sine wave and \"triangle8\" would set the first\n\t\t\t * 8 partials of the triangle wave.\n\t\t\t * <br><br> \n\t\t\t * Uses PeriodicWave internally even for native types so that it can set the phase. \n\t\t\t * PeriodicWave equations are from the \n\t\t\t * [Webkit Web Audio implementation](https://code.google.com/p/chromium/codesearch#chromium/src/third_party/WebKit/Source/modules/webaudio/PeriodicWave.cpp&sq=package:chromium).\n\t\t\t *  \n\t\t\t * @memberOf Tone.Oscillator#\n\t\t\t * @type {string}\n\t\t\t * @name type\n\t\t\t * @example\n\t\t\t * //set it to a square wave\n\t\t\t * osc.type = \"square\";\n\t\t\t * @example\n\t\t\t * //set the first 6 partials of a sawtooth wave\n\t\t\t * osc.type = \"sawtooth6\";\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Oscillator.prototype, 'type', {\n\t\t        get: function () {\n\t\t            return this._type;\n\t\t        },\n\t\t        set: function (type) {\n\t\t            var coefs = this._getRealImaginary(type, this._phase);\n\t\t            var periodicWave = this.context.createPeriodicWave(coefs[0], coefs[1]);\n\t\t            this._wave = periodicWave;\n\t\t            if (this._oscillator !== null) {\n\t\t                this._oscillator.setPeriodicWave(this._wave);\n\t\t            }\n\t\t            this._type = type;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Returns the real and imaginary components based \n\t\t\t *  on the oscillator type.\n\t\t\t *  @returns {Array} [real, imaginary]\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Oscillator.prototype._getRealImaginary = function (type, phase) {\n\t\t        var fftSize = 4096;\n\t\t        var periodicWaveSize = fftSize / 2;\n\t\t        var real = new Float32Array(periodicWaveSize);\n\t\t        var imag = new Float32Array(periodicWaveSize);\n\t\t        var partialCount = 1;\n\t\t        if (type === Tone.Oscillator.Type.Custom) {\n\t\t            partialCount = this._partials.length + 1;\n\t\t            periodicWaveSize = partialCount;\n\t\t        } else {\n\t\t            var partial = /^(sine|triangle|square|sawtooth)(\\d+)$/.exec(type);\n\t\t            if (partial) {\n\t\t                partialCount = parseInt(partial[2]) + 1;\n\t\t                type = partial[1];\n\t\t                partialCount = Math.max(partialCount, 2);\n\t\t                periodicWaveSize = partialCount;\n\t\t            }\n\t\t        }\n\t\t        for (var n = 1; n < periodicWaveSize; ++n) {\n\t\t            var piFactor = 2 / (n * Math.PI);\n\t\t            var b;\n\t\t            switch (type) {\n\t\t            case Tone.Oscillator.Type.Sine:\n\t\t                b = n <= partialCount ? 1 : 0;\n\t\t                break;\n\t\t            case Tone.Oscillator.Type.Square:\n\t\t                b = n & 1 ? 2 * piFactor : 0;\n\t\t                break;\n\t\t            case Tone.Oscillator.Type.Sawtooth:\n\t\t                b = piFactor * (n & 1 ? 1 : -1);\n\t\t                break;\n\t\t            case Tone.Oscillator.Type.Triangle:\n\t\t                if (n & 1) {\n\t\t                    b = 2 * (piFactor * piFactor) * (n - 1 >> 1 & 1 ? -1 : 1);\n\t\t                } else {\n\t\t                    b = 0;\n\t\t                }\n\t\t                break;\n\t\t            case Tone.Oscillator.Type.Custom:\n\t\t                b = this._partials[n - 1];\n\t\t                break;\n\t\t            default:\n\t\t                throw new TypeError('Tone.Oscillator: invalid type: ' + type);\n\t\t            }\n\t\t            if (b !== 0) {\n\t\t                real[n] = -b * Math.sin(phase * n);\n\t\t                imag[n] = b * Math.cos(phase * n);\n\t\t            } else {\n\t\t                real[n] = 0;\n\t\t                imag[n] = 0;\n\t\t            }\n\t\t        }\n\t\t        return [\n\t\t            real,\n\t\t            imag\n\t\t        ];\n\t\t    };\n\t\t    /**\n\t\t\t *  Compute the inverse FFT for a given phase.\t\n\t\t\t *  @param  {Float32Array}  real\n\t\t\t *  @param  {Float32Array}  imag \n\t\t\t *  @param  {NormalRange}  phase \n\t\t\t *  @return  {AudioRange}\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Oscillator.prototype._inverseFFT = function (real, imag, phase) {\n\t\t        var sum = 0;\n\t\t        var len = real.length;\n\t\t        for (var i = 0; i < len; i++) {\n\t\t            sum += real[i] * Math.cos(i * phase) + imag[i] * Math.sin(i * phase);\n\t\t        }\n\t\t        return sum;\n\t\t    };\n\t\t    /**\n\t\t\t *  Returns the initial value of the oscillator.\n\t\t\t *  @return  {AudioRange}\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Oscillator.prototype._getInitialValue = function () {\n\t\t        var coefs = this._getRealImaginary(this._type, 0);\n\t\t        var real = coefs[0];\n\t\t        var imag = coefs[1];\n\t\t        var maxValue = 0;\n\t\t        var twoPi = Math.PI * 2;\n\t\t        //check for peaks in 8 places\n\t\t        for (var i = 0; i < 8; i++) {\n\t\t            maxValue = Math.max(this._inverseFFT(real, imag, i / 8 * twoPi), maxValue);\n\t\t        }\n\t\t        return -this._inverseFFT(real, imag, this._phase) / maxValue;\n\t\t    };\n\t\t    /**\n\t\t\t * The partials of the waveform. A partial represents \n\t\t\t * the amplitude at a harmonic. The first harmonic is the \n\t\t\t * fundamental frequency, the second is the octave and so on\n\t\t\t * following the harmonic series. \n\t\t\t * Setting this value will automatically set the type to \"custom\". \n\t\t\t * The value is an empty array when the type is not \"custom\". \n\t\t\t * @memberOf Tone.Oscillator#\n\t\t\t * @type {Array}\n\t\t\t * @name partials\n\t\t\t * @example\n\t\t\t * osc.partials = [1, 0.2, 0.01];\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Oscillator.prototype, 'partials', {\n\t\t        get: function () {\n\t\t            if (this._type !== Tone.Oscillator.Type.Custom) {\n\t\t                return [];\n\t\t            } else {\n\t\t                return this._partials;\n\t\t            }\n\t\t        },\n\t\t        set: function (partials) {\n\t\t            this._partials = partials;\n\t\t            this.type = Tone.Oscillator.Type.Custom;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The phase of the oscillator in degrees. \n\t\t\t * @memberOf Tone.Oscillator#\n\t\t\t * @type {Degrees}\n\t\t\t * @name phase\n\t\t\t * @example\n\t\t\t * osc.phase = 180; //flips the phase of the oscillator\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Oscillator.prototype, 'phase', {\n\t\t        get: function () {\n\t\t            return this._phase * (180 / Math.PI);\n\t\t        },\n\t\t        set: function (phase) {\n\t\t            this._phase = phase * Math.PI / 180;\n\t\t            //reset the type\n\t\t            this.type = this._type;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Dispose and disconnect.\n\t\t\t *  @return {Tone.Oscillator} this\n\t\t\t */\n\t\t    Tone.Oscillator.prototype.dispose = function () {\n\t\t        Tone.Source.prototype.dispose.call(this);\n\t\t        if (this._oscillator !== null) {\n\t\t            this._oscillator.disconnect();\n\t\t            this._oscillator = null;\n\t\t        }\n\t\t        this._wave = null;\n\t\t        this._writable([\n\t\t            'frequency',\n\t\t            'detune'\n\t\t        ]);\n\t\t        this.frequency.dispose();\n\t\t        this.frequency = null;\n\t\t        this.detune.dispose();\n\t\t        this.detune = null;\n\t\t        this._partials = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Oscillator;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    /**\n\t\t\t *  @class Tone.Zero outputs 0's at audio-rate. The reason this has to be\n\t\t\t *         it's own class is that many browsers optimize out Tone.Signal\n\t\t\t *         with a value of 0 and will not process nodes further down the graph. \n\t\t\t *  @extends {Tone}\n\t\t\t */\n\t\t    Tone.Zero = function () {\n\t\t        /**\n\t\t\t\t *  The gain node\n\t\t\t\t *  @type  {Tone.Gain}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._gain = this.input = this.output = new Tone.Gain();\n\t\t        this.context.getConstant(0).connect(this._gain);\n\t\t    };\n\t\t    Tone.extend(Tone.Zero);\n\t\t    /**\n\t\t\t *  clean up\n\t\t\t *  @return  {Tone.Zero}  this\n\t\t\t */\n\t\t    Tone.Zero.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._gain.dispose();\n\t\t        this._gain = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Zero;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  LFO stands for low frequency oscillator. Tone.LFO produces an output signal \n\t\t\t *          which can be attached to an AudioParam or Tone.Signal \n\t\t\t *          in order to modulate that parameter with an oscillator. The LFO can \n\t\t\t *          also be synced to the transport to start/stop and change when the tempo changes.\n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.Oscillator}\n\t\t\t *  @param {Frequency|Object} [frequency] The frequency of the oscillation. Typically, LFOs will be\n\t\t\t *                               in the frequency range of 0.1 to 10 hertz. \n\t\t\t *  @param {number=} min The minimum output value of the LFO. \n\t\t\t *  @param {number=} max The maximum value of the LFO. \n\t\t\t *  @example\n\t\t\t * var lfo = new Tone.LFO(\"4n\", 400, 4000);\n\t\t\t * lfo.connect(filter.frequency);\n\t\t\t */\n\t\t    Tone.LFO = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'frequency',\n\t\t            'min',\n\t\t            'max'\n\t\t        ], Tone.LFO.defaults);\n\t\t        /** \n\t\t\t\t *  The oscillator. \n\t\t\t\t *  @type {Tone.Oscillator}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._oscillator = new Tone.Oscillator({\n\t\t            'frequency': options.frequency,\n\t\t            'type': options.type\n\t\t        });\n\t\t        /**\n\t\t\t\t *  the lfo's frequency\n\t\t\t\t *  @type {Frequency}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.frequency = this._oscillator.frequency;\n\t\t        /**\n\t\t\t\t * The amplitude of the LFO, which controls the output range between\n\t\t\t\t * the min and max output. For example if the min is -10 and the max \n\t\t\t\t * is 10, setting the amplitude to 0.5 would make the LFO modulate\n\t\t\t\t * between -5 and 5. \n\t\t\t\t * @type {Number}\n\t\t\t\t * @signal\n\t\t\t\t */\n\t\t        this.amplitude = this._oscillator.volume;\n\t\t        this.amplitude.units = Tone.Type.NormalRange;\n\t\t        this.amplitude.value = options.amplitude;\n\t\t        /**\n\t\t\t\t *  The signal which is output when the LFO is stopped\n\t\t\t\t *  @type  {Tone.Signal}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._stoppedSignal = new Tone.Signal(0, Tone.Type.AudioRange);\n\t\t        /**\n\t\t\t\t *  Just outputs zeros.\n\t\t\t\t *  @type {Tone.Zero}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._zeros = new Tone.Zero();\n\t\t        /**\n\t\t\t\t *  The value that the LFO outputs when it's stopped\n\t\t\t\t *  @type {AudioRange}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._stoppedValue = 0;\n\t\t        /**\n\t\t\t\t *  @type {Tone.AudioToGain} \n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._a2g = new Tone.AudioToGain();\n\t\t        /**\n\t\t\t\t *  @type {Tone.Scale} \n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._scaler = this.output = new Tone.Scale(options.min, options.max);\n\t\t        /**\n\t\t\t\t *  the units of the LFO (used for converting)\n\t\t\t\t *  @type {Tone.Type} \n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._units = Tone.Type.Default;\n\t\t        this.units = options.units;\n\t\t        //connect it up\n\t\t        this._oscillator.chain(this._a2g, this._scaler);\n\t\t        this._zeros.connect(this._a2g);\n\t\t        this._stoppedSignal.connect(this._a2g);\n\t\t        this._readOnly([\n\t\t            'amplitude',\n\t\t            'frequency'\n\t\t        ]);\n\t\t        this.phase = options.phase;\n\t\t    };\n\t\t    Tone.extend(Tone.LFO, Tone.Oscillator);\n\t\t    /**\n\t\t\t *  the default parameters\n\t\t\t *\n\t\t\t *  @static\n\t\t\t *  @const\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.LFO.defaults = {\n\t\t        'type': 'sine',\n\t\t        'min': 0,\n\t\t        'max': 1,\n\t\t        'phase': 0,\n\t\t        'frequency': '4n',\n\t\t        'amplitude': 1,\n\t\t        'units': Tone.Type.Default\n\t\t    };\n\t\t    /**\n\t\t\t *  Start the LFO. \n\t\t\t *  @param  {Time} [time=now] the time the LFO will start\n\t\t\t *  @returns {Tone.LFO} this\n\t\t\t */\n\t\t    Tone.LFO.prototype.start = function (time) {\n\t\t        time = this.toSeconds(time);\n\t\t        this._stoppedSignal.setValueAtTime(0, time);\n\t\t        this._oscillator.start(time);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Stop the LFO. \n\t\t\t *  @param  {Time} [time=now] the time the LFO will stop\n\t\t\t *  @returns {Tone.LFO} this\n\t\t\t */\n\t\t    Tone.LFO.prototype.stop = function (time) {\n\t\t        time = this.toSeconds(time);\n\t\t        this._stoppedSignal.setValueAtTime(this._stoppedValue, time);\n\t\t        this._oscillator.stop(time);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Sync the start/stop/pause to the transport \n\t\t\t *  and the frequency to the bpm of the transport\n\t\t\t *  @returns {Tone.LFO} this\n\t\t\t *  @example\n\t\t\t *  lfo.frequency.value = \"8n\";\n\t\t\t *  lfo.sync().start(0)\n\t\t\t *  //the rate of the LFO will always be an eighth note, \n\t\t\t *  //even as the tempo changes\n\t\t\t */\n\t\t    Tone.LFO.prototype.sync = function () {\n\t\t        this._oscillator.sync();\n\t\t        this._oscillator.syncFrequency();\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  unsync the LFO from transport control\n\t\t\t *  @returns {Tone.LFO} this\n\t\t\t */\n\t\t    Tone.LFO.prototype.unsync = function () {\n\t\t        this._oscillator.unsync();\n\t\t        this._oscillator.unsyncFrequency();\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t * The miniumum output of the LFO.\n\t\t\t * @memberOf Tone.LFO#\n\t\t\t * @type {number}\n\t\t\t * @name min\n\t\t\t */\n\t\t    Object.defineProperty(Tone.LFO.prototype, 'min', {\n\t\t        get: function () {\n\t\t            return this._toUnits(this._scaler.min);\n\t\t        },\n\t\t        set: function (min) {\n\t\t            min = this._fromUnits(min);\n\t\t            this._scaler.min = min;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The maximum output of the LFO.\n\t\t\t * @memberOf Tone.LFO#\n\t\t\t * @type {number}\n\t\t\t * @name max\n\t\t\t */\n\t\t    Object.defineProperty(Tone.LFO.prototype, 'max', {\n\t\t        get: function () {\n\t\t            return this._toUnits(this._scaler.max);\n\t\t        },\n\t\t        set: function (max) {\n\t\t            max = this._fromUnits(max);\n\t\t            this._scaler.max = max;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The type of the oscillator: sine, square, sawtooth, triangle. \n\t\t\t * @memberOf Tone.LFO#\n\t\t\t * @type {string}\n\t\t\t * @name type\n\t\t\t */\n\t\t    Object.defineProperty(Tone.LFO.prototype, 'type', {\n\t\t        get: function () {\n\t\t            return this._oscillator.type;\n\t\t        },\n\t\t        set: function (type) {\n\t\t            this._oscillator.type = type;\n\t\t            this._stoppedValue = this._oscillator._getInitialValue();\n\t\t            this._stoppedSignal.value = this._stoppedValue;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The phase of the LFO.\n\t\t\t * @memberOf Tone.LFO#\n\t\t\t * @type {number}\n\t\t\t * @name phase\n\t\t\t */\n\t\t    Object.defineProperty(Tone.LFO.prototype, 'phase', {\n\t\t        get: function () {\n\t\t            return this._oscillator.phase;\n\t\t        },\n\t\t        set: function (phase) {\n\t\t            this._oscillator.phase = phase;\n\t\t            this._stoppedValue = this._oscillator._getInitialValue();\n\t\t            this._stoppedSignal.value = this._stoppedValue;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The output units of the LFO.\n\t\t\t * @memberOf Tone.LFO#\n\t\t\t * @type {Tone.Type}\n\t\t\t * @name units\n\t\t\t */\n\t\t    Object.defineProperty(Tone.LFO.prototype, 'units', {\n\t\t        get: function () {\n\t\t            return this._units;\n\t\t        },\n\t\t        set: function (val) {\n\t\t            var currentMin = this.min;\n\t\t            var currentMax = this.max;\n\t\t            //convert the min and the max\n\t\t            this._units = val;\n\t\t            this.min = currentMin;\n\t\t            this.max = currentMax;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * Mute the output. \n\t\t\t * @memberOf Tone.LFO#\n\t\t\t * @type {Boolean}\n\t\t\t * @name mute\n\t\t\t */\n\t\t    Object.defineProperty(Tone.LFO.prototype, 'mute', {\n\t\t        get: function () {\n\t\t            return this._oscillator.mute;\n\t\t        },\n\t\t        set: function (mute) {\n\t\t            this._oscillator.mute = mute;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Returns the playback state of the source, either \"started\" or \"stopped\".\n\t\t\t *  @type {Tone.State}\n\t\t\t *  @readOnly\n\t\t\t *  @memberOf Tone.LFO#\n\t\t\t *  @name state\n\t\t\t */\n\t\t    Object.defineProperty(Tone.LFO.prototype, 'state', {\n\t\t        get: function () {\n\t\t            return this._oscillator.state;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Connect the output of the LFO to an AudioParam, AudioNode, or Tone Node. \n\t\t\t *  Tone.LFO will automatically convert to the destination units of the \n\t\t\t *  will get the units from the connected node.\n\t\t\t *  @param  {Tone | AudioParam | AudioNode} node \n\t\t\t *  @param {number} [outputNum=0] optionally which output to connect from\n\t\t\t *  @param {number} [inputNum=0] optionally which input to connect to\n\t\t\t *  @returns {Tone.LFO} this\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.LFO.prototype.connect = function (node) {\n\t\t        if (node.constructor === Tone.Signal || node.constructor === Tone.Param || node.constructor === Tone.TimelineSignal) {\n\t\t            this.convert = node.convert;\n\t\t            this.units = node.units;\n\t\t        }\n\t\t        Tone.Signal.prototype.connect.apply(this, arguments);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  private method borrowed from Param converts \n\t\t\t *  units from their destination value\n\t\t\t *  @function\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.LFO.prototype._fromUnits = Tone.Param.prototype._fromUnits;\n\t\t    /**\n\t\t\t *  private method borrowed from Param converts \n\t\t\t *  units to their destination value\n\t\t\t *  @function\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.LFO.prototype._toUnits = Tone.Param.prototype._toUnits;\n\t\t    /**\n\t\t\t *  disconnect and dispose\n\t\t\t *  @returns {Tone.LFO} this\n\t\t\t */\n\t\t    Tone.LFO.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._writable([\n\t\t            'amplitude',\n\t\t            'frequency'\n\t\t        ]);\n\t\t        this._oscillator.dispose();\n\t\t        this._oscillator = null;\n\t\t        this._stoppedSignal.dispose();\n\t\t        this._stoppedSignal = null;\n\t\t        this._zeros.dispose();\n\t\t        this._zeros = null;\n\t\t        this._scaler.dispose();\n\t\t        this._scaler = null;\n\t\t        this._a2g.dispose();\n\t\t        this._a2g = null;\n\t\t        this.frequency = null;\n\t\t        this.amplitude = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.LFO;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Tone.Limiter will limit the loudness of an incoming signal. \n\t\t\t *         It is composed of a Tone.Compressor with a fast attack \n\t\t\t *         and release. Limiters are commonly used to safeguard against \n\t\t\t *         signal clipping. Unlike a compressor, limiters do not provide \n\t\t\t *         smooth gain reduction and almost completely prevent \n\t\t\t *         additional gain above the threshold.\n\t\t\t *\n\t\t\t *  @extends {Tone}\n\t\t\t *  @constructor\n\t\t\t *  @param {number} threshold The theshold above which the limiting is applied. \n\t\t\t *  @example\n\t\t\t *  var limiter = new Tone.Limiter(-6);\n\t\t\t */\n\t\t    Tone.Limiter = function () {\n\t\t        var options = this.optionsObject(arguments, ['threshold'], Tone.Limiter.defaults);\n\t\t        /**\n\t\t\t\t *  the compressor\n\t\t\t\t *  @private\n\t\t\t\t *  @type {Tone.Compressor}\n\t\t\t\t */\n\t\t        this._compressor = this.input = this.output = new Tone.Compressor({\n\t\t            'attack': 0.001,\n\t\t            'decay': 0.001,\n\t\t            'threshold': options.threshold\n\t\t        });\n\t\t        /**\n\t\t\t\t * The threshold of of the limiter\n\t\t\t\t * @type {Decibel}\n\t\t\t\t * @signal\n\t\t\t\t */\n\t\t        this.threshold = this._compressor.threshold;\n\t\t        this._readOnly('threshold');\n\t\t    };\n\t\t    Tone.extend(Tone.Limiter);\n\t\t    /**\n\t\t\t *  The default value\n\t\t\t *  @type {Object}\n\t\t\t *  @const\n\t\t\t *  @static\n\t\t\t */\n\t\t    Tone.Limiter.defaults = { 'threshold': -12 };\n\t\t    /**\n\t\t\t *  Clean up.\n\t\t\t *  @returns {Tone.Limiter} this\n\t\t\t */\n\t\t    Tone.Limiter.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._compressor.dispose();\n\t\t        this._compressor = null;\n\t\t        this._writable('threshold');\n\t\t        this.threshold = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Limiter;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Tone.Lowpass is a lowpass feedback comb filter. It is similar to \n\t\t\t *         Tone.FeedbackCombFilter, but includes a lowpass filter.\n\t\t\t *\n\t\t\t *  @extends {Tone}\n\t\t\t *  @constructor\n\t\t\t *  @param {Time|Object} [delayTime] The delay time of the comb filter\n\t\t\t *  @param {NormalRange=} resonance The resonance (feedback) of the comb filter\n\t\t\t *  @param {Frequency=} dampening The cutoff of the lowpass filter dampens the\n\t\t\t *                                signal as it is fedback. \n\t\t\t */\n\t\t    Tone.LowpassCombFilter = function () {\n\t\t        this.createInsOuts(1, 1);\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'delayTime',\n\t\t            'resonance',\n\t\t            'dampening'\n\t\t        ], Tone.LowpassCombFilter.defaults);\n\t\t        /**\n\t\t\t\t *  the delay node\n\t\t\t\t *  @type {DelayNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._delay = this.input = new Tone.Delay(options.delayTime);\n\t\t        /**\n\t\t\t\t *  The delayTime of the comb filter. \n\t\t\t\t *  @type {Time}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.delayTime = this._delay.delayTime;\n\t\t        /**\n\t\t\t\t *  the lowpass filter\n\t\t\t\t *  @type  {BiquadFilterNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._lowpass = this.output = this.context.createBiquadFilter();\n\t\t        this._lowpass.Q.value = -3.0102999566398125;\n\t\t        this._lowpass.type = 'lowpass';\n\t\t        /**\n\t\t\t\t *  The dampening control of the feedback\n\t\t\t\t *  @type {Frequency}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.dampening = new Tone.Param({\n\t\t            'param': this._lowpass.frequency,\n\t\t            'units': Tone.Type.Frequency,\n\t\t            'value': options.dampening\n\t\t        });\n\t\t        /**\n\t\t\t\t *  the feedback gain\n\t\t\t\t *  @type {Tone.Gain}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._feedback = new Tone.Gain(options.resonance, Tone.Type.NormalRange);\n\t\t        /**\n\t\t\t\t *  The amount of feedback of the delayed signal. \n\t\t\t\t *  @type {NormalRange}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.resonance = this._feedback.gain;\n\t\t        //connections\n\t\t        this._delay.chain(this._lowpass, this._feedback, this._delay);\n\t\t        this._readOnly([\n\t\t            'dampening',\n\t\t            'resonance',\n\t\t            'delayTime'\n\t\t        ]);\n\t\t    };\n\t\t    Tone.extend(Tone.LowpassCombFilter);\n\t\t    /**\n\t\t\t *  the default parameters\n\t\t\t *  @static\n\t\t\t *  @const\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.LowpassCombFilter.defaults = {\n\t\t        'delayTime': 0.1,\n\t\t        'resonance': 0.5,\n\t\t        'dampening': 3000\n\t\t    };\n\t\t    /**\n\t\t\t *  Clean up. \n\t\t\t *  @returns {Tone.LowpassCombFilter} this\n\t\t\t */\n\t\t    Tone.LowpassCombFilter.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._writable([\n\t\t            'dampening',\n\t\t            'resonance',\n\t\t            'delayTime'\n\t\t        ]);\n\t\t        this.dampening.dispose();\n\t\t        this.dampening = null;\n\t\t        this.resonance.dispose();\n\t\t        this.resonance = null;\n\t\t        this._delay.dispose();\n\t\t        this._delay = null;\n\t\t        this.delayTime = null;\n\t\t        this._lowpass.disconnect();\n\t\t        this._lowpass = null;\n\t\t        this._feedback.disconnect();\n\t\t        this._feedback = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.LowpassCombFilter;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  Tone.Merge brings two signals into the left and right \n\t\t\t *          channels of a single stereo channel.\n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone}\n\t\t\t *  @example\n\t\t\t * var merge = new Tone.Merge().toMaster();\n\t\t\t * //routing a sine tone in the left channel\n\t\t\t * //and noise in the right channel\n\t\t\t * var osc = new Tone.Oscillator().connect(merge.left);\n\t\t\t * var noise = new Tone.Noise().connect(merge.right);\n\t\t\t * //starting our oscillators\n\t\t\t * noise.start();\n\t\t\t * osc.start();\n\t\t\t */\n\t\t    Tone.Merge = function () {\n\t\t        this.createInsOuts(2, 0);\n\t\t        /**\n\t\t\t\t *  The left input channel.\n\t\t\t\t *  Alias for <code>input[0]</code>\n\t\t\t\t *  @type {GainNode}\n\t\t\t\t */\n\t\t        this.left = this.input[0] = new Tone.Gain();\n\t\t        /**\n\t\t\t\t *  The right input channel.\n\t\t\t\t *  Alias for <code>input[1]</code>.\n\t\t\t\t *  @type {GainNode}\n\t\t\t\t */\n\t\t        this.right = this.input[1] = new Tone.Gain();\n\t\t        /**\n\t\t\t\t *  the merger node for the two channels\n\t\t\t\t *  @type {ChannelMergerNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._merger = this.output = this.context.createChannelMerger(2);\n\t\t        //connections\n\t\t        this.left.connect(this._merger, 0, 0);\n\t\t        this.right.connect(this._merger, 0, 1);\n\t\t        this.left.channelCount = 1;\n\t\t        this.right.channelCount = 1;\n\t\t        this.left.channelCountMode = 'explicit';\n\t\t        this.right.channelCountMode = 'explicit';\n\t\t    };\n\t\t    Tone.extend(Tone.Merge);\n\t\t    /**\n\t\t\t *  Clean up.\n\t\t\t *  @returns {Tone.Merge} this\n\t\t\t */\n\t\t    Tone.Merge.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this.left.dispose();\n\t\t        this.left = null;\n\t\t        this.right.dispose();\n\t\t        this.right = null;\n\t\t        this._merger.disconnect();\n\t\t        this._merger = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Merge;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  Tone.Meter gets the [RMS](https://en.wikipedia.org/wiki/Root_mean_square)\n\t\t\t *          of an input signal with some averaging applied. It can also get the raw \n\t\t\t *          value of the input signal.\n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone}\n\t\t\t *  @param {String} type Either \"level\" or \"signal\". \n\t\t\t *  @param {Number} smoothing The amount of smoothing applied between frames.\n\t\t\t *  @example\n\t\t\t * var meter = new Tone.Meter();\n\t\t\t * var mic = new Tone.UserMedia().start();\n\t\t\t * //connect mic to the meter\n\t\t\t * mic.connect(meter);\n\t\t\t * //the current level of the mic input\n\t\t\t * var level = meter.value;\n\t\t\t */\n\t\t    Tone.Meter = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'type',\n\t\t            'smoothing'\n\t\t        ], Tone.Meter.defaults);\n\t\t        /**\n\t\t\t\t *  The type of the meter, either \"level\" or \"signal\". \n\t\t\t\t *  A \"level\" meter will return the volume level (rms) of the \n\t\t\t\t *  input signal and a \"signal\" meter will return\n\t\t\t\t *  the signal value of the input. \n\t\t\t\t *  @type  {String}\n\t\t\t\t */\n\t\t        this.type = options.type;\n\t\t        /**\n\t\t\t\t *  The analyser node which computes the levels.\n\t\t\t\t *  @private\n\t\t\t\t *  @type  {Tone.Analyser}\n\t\t\t\t */\n\t\t        this.input = this.output = this._analyser = new Tone.Analyser('waveform', 512);\n\t\t        this._analyser.returnType = 'float';\n\t\t        /**\n\t\t\t\t *  The amount of carryover between the current and last frame. \n\t\t\t\t *  Only applied meter for \"level\" type.\n\t\t\t\t *  @type  {Number}\n\t\t\t\t */\n\t\t        this.smoothing = options.smoothing;\n\t\t        /**\n\t\t\t\t *  The last computed value\n\t\t\t\t *  @type {Number}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._lastValue = 0;\n\t\t    };\n\t\t    Tone.extend(Tone.Meter);\n\t\t    /**\n\t\t\t *  @private\n\t\t\t *  @enum {String}\n\t\t\t */\n\t\t    Tone.Meter.Type = {\n\t\t        Level: 'level',\n\t\t        Signal: 'signal'\n\t\t    };\n\t\t    /**\n\t\t\t *  The defaults\n\t\t\t *  @type {Object}\n\t\t\t *  @static\n\t\t\t *  @const\n\t\t\t */\n\t\t    Tone.Meter.defaults = {\n\t\t        'smoothing': 0.8,\n\t\t        'type': Tone.Meter.Type.Level\n\t\t    };\n\t\t    /**\n\t\t\t * The current value of the meter. A value of 1 is\n\t\t\t * \"unity\".\n\t\t\t * @memberOf Tone.Meter#\n\t\t\t * @type {Number}\n\t\t\t * @name value\n\t\t\t * @readOnly\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Meter.prototype, 'value', {\n\t\t        get: function () {\n\t\t            var signal = this._analyser.analyse();\n\t\t            if (this.type === Tone.Meter.Type.Level) {\n\t\t                //rms\n\t\t                var sum = 0;\n\t\t                for (var i = 0; i < signal.length; i++) {\n\t\t                    sum += Math.pow(signal[i], 2);\n\t\t                }\n\t\t                var rms = Math.sqrt(sum / signal.length);\n\t\t                //smooth it\n\t\t                rms = Math.max(rms, this._lastValue * this.smoothing);\n\t\t                this._lastValue = rms;\n\t\t                //scale it\n\t\t                var unity = 0.35;\n\t\t                var val = rms / unity;\n\t\t                //scale the output curve\n\t\t                return Math.sqrt(val);\n\t\t            } else {\n\t\t                return signal[0];\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Clean up.\n\t\t\t *  @returns {Tone.Meter} this\n\t\t\t */\n\t\t    Tone.Meter.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._analyser.dispose();\n\t\t        this._analyser = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Meter;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *\t@class  Tone.Split splits an incoming signal into left and right channels.\n\t\t\t *\t\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone}\n\t\t\t *  @example\n\t\t\t * var split = new Tone.Split();\n\t\t\t * stereoSignal.connect(split);\n\t\t\t */\n\t\t    Tone.Split = function () {\n\t\t        this.createInsOuts(0, 2);\n\t\t        /** \n\t\t\t\t *  @type {ChannelSplitterNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._splitter = this.input = this.context.createChannelSplitter(2);\n\t\t        /** \n\t\t\t\t *  Left channel output. \n\t\t\t\t *  Alias for <code>output[0]</code>\n\t\t\t\t *  @type {Tone.Gain}\n\t\t\t\t */\n\t\t        this.left = this.output[0] = new Tone.Gain();\n\t\t        /**\n\t\t\t\t *  Right channel output.\n\t\t\t\t *  Alias for <code>output[1]</code>\n\t\t\t\t *  @type {Tone.Gain}\n\t\t\t\t */\n\t\t        this.right = this.output[1] = new Tone.Gain();\n\t\t        //connections\n\t\t        this._splitter.connect(this.left, 0, 0);\n\t\t        this._splitter.connect(this.right, 1, 0);\n\t\t    };\n\t\t    Tone.extend(Tone.Split);\n\t\t    /**\n\t\t\t *  Clean up. \n\t\t\t *  @returns {Tone.Split} this\n\t\t\t */\n\t\t    Tone.Split.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._splitter.disconnect();\n\t\t        this.left.dispose();\n\t\t        this.left = null;\n\t\t        this.right.dispose();\n\t\t        this.right = null;\n\t\t        this._splitter = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Split;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Mid/Side processing separates the the 'mid' signal \n\t\t\t *         (which comes out of both the left and the right channel) \n\t\t\t *         and the 'side' (which only comes out of the the side channels). <br><br>\n\t\t\t *         <code>\n\t\t\t *         Mid = (Left+Right)/sqrt(2);   // obtain mid-signal from left and right<br>\n\t\t\t *         Side = (Left-Right)/sqrt(2);   // obtain side-signal from left and righ<br>\n\t\t\t *         </code>\n\t\t\t *\n\t\t\t *  @extends {Tone}\n\t\t\t *  @constructor\n\t\t\t */\n\t\t    Tone.MidSideSplit = function () {\n\t\t        this.createInsOuts(0, 2);\n\t\t        /**\n\t\t\t\t *  split the incoming signal into left and right channels\n\t\t\t\t *  @type  {Tone.Split}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._split = this.input = new Tone.Split();\n\t\t        /**\n\t\t\t\t *  The mid send. Connect to mid processing. Alias for\n\t\t\t\t *  <code>output[0]</code>\n\t\t\t\t *  @type {Tone.Expr}\n\t\t\t\t */\n\t\t        this.mid = this.output[0] = new Tone.Expr('($0 + $1) * $2');\n\t\t        /**\n\t\t\t\t *  The side output. Connect to side processing. Alias for\n\t\t\t\t *  <code>output[1]</code>\n\t\t\t\t *  @type {Tone.Expr}\n\t\t\t\t */\n\t\t        this.side = this.output[1] = new Tone.Expr('($0 - $1) * $2');\n\t\t        this._split.connect(this.mid, 0, 0);\n\t\t        this._split.connect(this.mid, 1, 1);\n\t\t        this._split.connect(this.side, 0, 0);\n\t\t        this._split.connect(this.side, 1, 1);\n\t\t        this.context.getConstant(Math.SQRT1_2).connect(this.mid, 0, 2);\n\t\t        this.context.getConstant(Math.SQRT1_2).connect(this.side, 0, 2);\n\t\t    };\n\t\t    Tone.extend(Tone.MidSideSplit);\n\t\t    /**\n\t\t\t *  clean up\n\t\t\t *  @returns {Tone.MidSideSplit} this\n\t\t\t */\n\t\t    Tone.MidSideSplit.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this.mid.dispose();\n\t\t        this.mid = null;\n\t\t        this.side.dispose();\n\t\t        this.side = null;\n\t\t        this._split.dispose();\n\t\t        this._split = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.MidSideSplit;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Mid/Side processing separates the the 'mid' signal \n\t\t\t *         (which comes out of both the left and the right channel) \n\t\t\t *         and the 'side' (which only comes out of the the side channels). \n\t\t\t *         MidSideMerge merges the mid and side signal after they've been seperated\n\t\t\t *         by Tone.MidSideSplit.<br><br>\n\t\t\t *         <code>\n\t\t\t *         Left = (Mid+Side)/sqrt(2);   // obtain left signal from mid and side<br>\n\t\t\t *         Right = (Mid-Side)/sqrt(2);   // obtain right signal from mid and side<br>\n\t\t\t *         </code>\n\t\t\t *\n\t\t\t *  @extends {Tone.StereoEffect}\n\t\t\t *  @constructor\n\t\t\t */\n\t\t    Tone.MidSideMerge = function () {\n\t\t        this.createInsOuts(2, 0);\n\t\t        /**\n\t\t\t\t *  The mid signal input. Alias for\n\t\t\t\t *  <code>input[0]</code>\n\t\t\t\t *  @type  {Tone.Gain}\n\t\t\t\t */\n\t\t        this.mid = this.input[0] = new Tone.Gain();\n\t\t        /**\n\t\t\t\t *  recombine the mid/side into Left\n\t\t\t\t *  @type {Tone.Expr}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._left = new Tone.Expr('($0 + $1) * $2');\n\t\t        /**\n\t\t\t\t *  The side signal input. Alias for\n\t\t\t\t *  <code>input[1]</code>\n\t\t\t\t *  @type  {Tone.Gain}\n\t\t\t\t */\n\t\t        this.side = this.input[1] = new Tone.Gain();\n\t\t        /**\n\t\t\t\t *  recombine the mid/side into Right\n\t\t\t\t *  @type {Tone.Expr}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._right = new Tone.Expr('($0 - $1) * $2');\n\t\t        /**\n\t\t\t\t *  Merge the left/right signal back into a stereo signal.\n\t\t\t\t *  @type {Tone.Merge}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._merge = this.output = new Tone.Merge();\n\t\t        this.mid.connect(this._left, 0, 0);\n\t\t        this.side.connect(this._left, 0, 1);\n\t\t        this.mid.connect(this._right, 0, 0);\n\t\t        this.side.connect(this._right, 0, 1);\n\t\t        this._left.connect(this._merge, 0, 0);\n\t\t        this._right.connect(this._merge, 0, 1);\n\t\t        this.context.getConstant(Math.SQRT1_2).connect(this._left, 0, 2);\n\t\t        this.context.getConstant(Math.SQRT1_2).connect(this._right, 0, 2);\n\t\t    };\n\t\t    Tone.extend(Tone.MidSideMerge);\n\t\t    /**\n\t\t\t *  clean up\n\t\t\t *  @returns {Tone.MidSideMerge} this\n\t\t\t */\n\t\t    Tone.MidSideMerge.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this.mid.dispose();\n\t\t        this.mid = null;\n\t\t        this.side.dispose();\n\t\t        this.side = null;\n\t\t        this._left.dispose();\n\t\t        this._left = null;\n\t\t        this._right.dispose();\n\t\t        this._right = null;\n\t\t        this._merge.dispose();\n\t\t        this._merge = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.MidSideMerge;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Tone.MidSideCompressor applies two different compressors to the mid\n\t\t\t *         and side signal components. See Tone.MidSideSplit. \n\t\t\t *\n\t\t\t *  @extends {Tone}\n\t\t\t *  @param {Object} options The options that are passed to the mid and side\n\t\t\t *                          compressors. \n\t\t\t *  @constructor\n\t\t\t */\n\t\t    Tone.MidSideCompressor = function (options) {\n\t\t        options = this.defaultArg(options, Tone.MidSideCompressor.defaults);\n\t\t        /**\n\t\t\t\t *  the mid/side split\n\t\t\t\t *  @type  {Tone.MidSideSplit}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._midSideSplit = this.input = new Tone.MidSideSplit();\n\t\t        /**\n\t\t\t\t *  the mid/side recombination\n\t\t\t\t *  @type  {Tone.MidSideMerge}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._midSideMerge = this.output = new Tone.MidSideMerge();\n\t\t        /**\n\t\t\t\t *  The compressor applied to the mid signal\n\t\t\t\t *  @type  {Tone.Compressor}\n\t\t\t\t */\n\t\t        this.mid = new Tone.Compressor(options.mid);\n\t\t        /**\n\t\t\t\t *  The compressor applied to the side signal\n\t\t\t\t *  @type  {Tone.Compressor}\n\t\t\t\t */\n\t\t        this.side = new Tone.Compressor(options.side);\n\t\t        this._midSideSplit.mid.chain(this.mid, this._midSideMerge.mid);\n\t\t        this._midSideSplit.side.chain(this.side, this._midSideMerge.side);\n\t\t        this._readOnly([\n\t\t            'mid',\n\t\t            'side'\n\t\t        ]);\n\t\t    };\n\t\t    Tone.extend(Tone.MidSideCompressor);\n\t\t    /**\n\t\t\t *  @const\n\t\t\t *  @static\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.MidSideCompressor.defaults = {\n\t\t        'mid': {\n\t\t            'ratio': 3,\n\t\t            'threshold': -24,\n\t\t            'release': 0.03,\n\t\t            'attack': 0.02,\n\t\t            'knee': 16\n\t\t        },\n\t\t        'side': {\n\t\t            'ratio': 6,\n\t\t            'threshold': -30,\n\t\t            'release': 0.25,\n\t\t            'attack': 0.03,\n\t\t            'knee': 10\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Clean up.\n\t\t\t *  @returns {Tone.MidSideCompressor} this\n\t\t\t */\n\t\t    Tone.MidSideCompressor.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._writable([\n\t\t            'mid',\n\t\t            'side'\n\t\t        ]);\n\t\t        this.mid.dispose();\n\t\t        this.mid = null;\n\t\t        this.side.dispose();\n\t\t        this.side = null;\n\t\t        this._midSideSplit.dispose();\n\t\t        this._midSideSplit = null;\n\t\t        this._midSideMerge.dispose();\n\t\t        this._midSideMerge = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.MidSideCompressor;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Tone.Mono coerces the incoming mono or stereo signal into a mono signal\n\t\t\t *         where both left and right channels have the same value. This can be useful \n\t\t\t *         for [stereo imaging](https://en.wikipedia.org/wiki/Stereo_imaging).\n\t\t\t *\n\t\t\t *  @extends {Tone}\n\t\t\t *  @constructor\n\t\t\t */\n\t\t    Tone.Mono = function () {\n\t\t        this.createInsOuts(1, 0);\n\t\t        /**\n\t\t\t\t *  merge the signal\n\t\t\t\t *  @type {Tone.Merge}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._merge = this.output = new Tone.Merge();\n\t\t        this.input.connect(this._merge, 0, 0);\n\t\t        this.input.connect(this._merge, 0, 1);\n\t\t        this.input.gain.value = this.dbToGain(-10);\n\t\t    };\n\t\t    Tone.extend(Tone.Mono);\n\t\t    /**\n\t\t\t *  clean up\n\t\t\t *  @returns {Tone.Mono} this\n\t\t\t */\n\t\t    Tone.Mono.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._merge.dispose();\n\t\t        this._merge = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Mono;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class A compressor with seperate controls over low/mid/high dynamics\n\t\t\t *\n\t\t\t *  @extends {Tone}\n\t\t\t *  @constructor\n\t\t\t *  @param {Object} options The low/mid/high compressor settings.\n\t\t\t *  @example\n\t\t\t *  var multiband = new Tone.MultibandCompressor({\n\t\t\t *  \t\"lowFrequency\" : 200,\n\t\t\t *  \t\"highFrequency\" : 1300\n\t\t\t *  \t\"low\" : {\n\t\t\t *  \t\t\"threshold\" : -12\n\t\t\t *  \t}\n\t\t\t *  })\n\t\t\t */\n\t\t    Tone.MultibandCompressor = function (options) {\n\t\t        options = this.defaultArg(arguments, Tone.MultibandCompressor.defaults);\n\t\t        /**\n\t\t\t\t *  split the incoming signal into high/mid/low\n\t\t\t\t *  @type {Tone.MultibandSplit}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._splitter = this.input = new Tone.MultibandSplit({\n\t\t            'lowFrequency': options.lowFrequency,\n\t\t            'highFrequency': options.highFrequency\n\t\t        });\n\t\t        /**\n\t\t\t\t *  low/mid crossover frequency.\n\t\t\t\t *  @type {Frequency}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.lowFrequency = this._splitter.lowFrequency;\n\t\t        /**\n\t\t\t\t *  mid/high crossover frequency.\n\t\t\t\t *  @type {Frequency}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.highFrequency = this._splitter.highFrequency;\n\t\t        /**\n\t\t\t\t *  the output\n\t\t\t\t *  @type {Tone.Gain}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this.output = new Tone.Gain();\n\t\t        /**\n\t\t\t\t *  The compressor applied to the low frequencies.\n\t\t\t\t *  @type {Tone.Compressor}\n\t\t\t\t */\n\t\t        this.low = new Tone.Compressor(options.low);\n\t\t        /**\n\t\t\t\t *  The compressor applied to the mid frequencies.\n\t\t\t\t *  @type {Tone.Compressor}\n\t\t\t\t */\n\t\t        this.mid = new Tone.Compressor(options.mid);\n\t\t        /**\n\t\t\t\t *  The compressor applied to the high frequencies.\n\t\t\t\t *  @type {Tone.Compressor}\n\t\t\t\t */\n\t\t        this.high = new Tone.Compressor(options.high);\n\t\t        //connect the compressor\n\t\t        this._splitter.low.chain(this.low, this.output);\n\t\t        this._splitter.mid.chain(this.mid, this.output);\n\t\t        this._splitter.high.chain(this.high, this.output);\n\t\t        this._readOnly([\n\t\t            'high',\n\t\t            'mid',\n\t\t            'low',\n\t\t            'highFrequency',\n\t\t            'lowFrequency'\n\t\t        ]);\n\t\t    };\n\t\t    Tone.extend(Tone.MultibandCompressor);\n\t\t    /**\n\t\t\t *  @const\n\t\t\t *  @static\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.MultibandCompressor.defaults = {\n\t\t        'low': Tone.Compressor.defaults,\n\t\t        'mid': Tone.Compressor.defaults,\n\t\t        'high': Tone.Compressor.defaults,\n\t\t        'lowFrequency': 250,\n\t\t        'highFrequency': 2000\n\t\t    };\n\t\t    /**\n\t\t\t *  clean up\n\t\t\t *  @returns {Tone.MultibandCompressor} this\n\t\t\t */\n\t\t    Tone.MultibandCompressor.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._splitter.dispose();\n\t\t        this._writable([\n\t\t            'high',\n\t\t            'mid',\n\t\t            'low',\n\t\t            'highFrequency',\n\t\t            'lowFrequency'\n\t\t        ]);\n\t\t        this.low.dispose();\n\t\t        this.mid.dispose();\n\t\t        this.high.dispose();\n\t\t        this._splitter = null;\n\t\t        this.low = null;\n\t\t        this.mid = null;\n\t\t        this.high = null;\n\t\t        this.lowFrequency = null;\n\t\t        this.highFrequency = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.MultibandCompressor;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  Tone.Panner is an equal power Left/Right Panner and does not\n\t\t\t *          support 3D. Panner uses the StereoPannerNode when available. \n\t\t\t *  \n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone}\n\t\t\t *  @param {NormalRange} [initialPan=0] The initail panner value (defaults to 0 = center)\n\t\t\t *  @example\n\t\t\t *  //pan the input signal hard right. \n\t\t\t *  var panner = new Tone.Panner(1);\n\t\t\t */\n\t\t    Tone.Panner = function (initialPan) {\n\t\t        if (this._hasStereoPanner) {\n\t\t            /**\n\t\t\t\t\t *  the panner node\n\t\t\t\t\t *  @type {StereoPannerNode}\n\t\t\t\t\t *  @private\n\t\t\t\t\t */\n\t\t            this._panner = this.input = this.output = this.context.createStereoPanner();\n\t\t            /**\n\t\t\t\t\t *  The pan control. -1 = hard left, 1 = hard right. \n\t\t\t\t\t *  @type {NormalRange}\n\t\t\t\t\t *  @signal\n\t\t\t\t\t */\n\t\t            this.pan = this._panner.pan;\n\t\t        } else {\n\t\t            /**\n\t\t\t\t\t *  the dry/wet knob\n\t\t\t\t\t *  @type {Tone.CrossFade}\n\t\t\t\t\t *  @private\n\t\t\t\t\t */\n\t\t            this._crossFade = new Tone.CrossFade();\n\t\t            /**\n\t\t\t\t\t *  @type {Tone.Merge}\n\t\t\t\t\t *  @private\n\t\t\t\t\t */\n\t\t            this._merger = this.output = new Tone.Merge();\n\t\t            /**\n\t\t\t\t\t *  @type {Tone.Split}\n\t\t\t\t\t *  @private\n\t\t\t\t\t */\n\t\t            this._splitter = this.input = new Tone.Split();\n\t\t            /**\n\t\t\t\t\t *  The pan control. -1 = hard left, 1 = hard right. \n\t\t\t\t\t *  @type {AudioRange}\n\t\t\t\t\t *  @signal\n\t\t\t\t\t */\n\t\t            this.pan = new Tone.Signal(0, Tone.Type.AudioRange);\n\t\t            /**\n\t\t\t\t\t *  always sends 0\n\t\t\t\t\t *  @type {Tone.Zero}\n\t\t\t\t\t *  @private\n\t\t\t\t\t */\n\t\t            this._zero = new Tone.Zero();\n\t\t            /**\n\t\t\t\t\t *  The analog to gain conversion\n\t\t\t\t\t *  @type  {Tone.AudioToGain}\n\t\t\t\t\t *  @private\n\t\t\t\t\t */\n\t\t            this._a2g = new Tone.AudioToGain();\n\t\t            //CONNECTIONS:\n\t\t            this._zero.connect(this._a2g);\n\t\t            this.pan.chain(this._a2g, this._crossFade.fade);\n\t\t            //left channel is a, right channel is b\n\t\t            this._splitter.connect(this._crossFade, 0, 0);\n\t\t            this._splitter.connect(this._crossFade, 1, 1);\n\t\t            //merge it back together\n\t\t            this._crossFade.a.connect(this._merger, 0, 0);\n\t\t            this._crossFade.b.connect(this._merger, 0, 1);\n\t\t        }\n\t\t        //initial value\n\t\t        this.pan.value = this.defaultArg(initialPan, 0);\n\t\t        this._readOnly('pan');\n\t\t    };\n\t\t    Tone.extend(Tone.Panner);\n\t\t    /**\n\t\t\t *  indicates if the panner is using the new StereoPannerNode internally\n\t\t\t *  @type  {boolean}\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Panner.prototype._hasStereoPanner = Tone.prototype.isFunction(Tone.context.createStereoPanner);\n\t\t    /**\n\t\t\t *  Clean up.\n\t\t\t *  @returns {Tone.Panner} this\n\t\t\t */\n\t\t    Tone.Panner.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._writable('pan');\n\t\t        if (this._hasStereoPanner) {\n\t\t            this._panner.disconnect();\n\t\t            this._panner = null;\n\t\t            this.pan = null;\n\t\t        } else {\n\t\t            this._zero.dispose();\n\t\t            this._zero = null;\n\t\t            this._crossFade.dispose();\n\t\t            this._crossFade = null;\n\t\t            this._splitter.dispose();\n\t\t            this._splitter = null;\n\t\t            this._merger.dispose();\n\t\t            this._merger = null;\n\t\t            this.pan.dispose();\n\t\t            this.pan = null;\n\t\t            this._a2g.dispose();\n\t\t            this._a2g = null;\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Panner;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  A spatialized panner node which supports equalpower or HRTF panning.\n\t\t\t *          Tries to normalize the API across various browsers. See Tone.Listener\n\t\t\t *  \n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone}\n\t\t\t *  @param {Number} positionX The initial x position.\n\t\t\t *  @param {Number} positionY The initial y position.\n\t\t\t *  @param {Number} positionZ The initial z position.\n\t\t\t */\n\t\t    Tone.Panner3D = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'positionX',\n\t\t            'positionY',\n\t\t            'positionZ'\n\t\t        ], Tone.Panner3D.defaults);\n\t\t        /**\n\t\t\t\t *  The panner node\n\t\t\t\t *  @type {PannerNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._panner = this.input = this.output = this.context.createPanner();\n\t\t        //set some values\n\t\t        this._panner.panningModel = options.panningModel;\n\t\t        this._panner.maxDistance = options.maxDistance;\n\t\t        this._panner.distanceModel = options.distanceModel;\n\t\t        this._panner.coneOuterGain = options.coneOuterGain;\n\t\t        this._panner.coneOuterAngle = options.coneOuterAngle;\n\t\t        this._panner.coneInnerAngle = options.coneInnerAngle;\n\t\t        this._panner.refDistance = options.refDistance;\n\t\t        this._panner.rolloffFactor = options.rolloffFactor;\n\t\t        /**\n\t\t\t\t *  Holds the current orientation\n\t\t\t\t *  @type  {Array}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._orientation = [\n\t\t            options.orientationX,\n\t\t            options.orientationY,\n\t\t            options.orientationZ\n\t\t        ];\n\t\t        /**\n\t\t\t\t *  Holds the current position\n\t\t\t\t *  @type  {Array}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._position = [\n\t\t            options.positionX,\n\t\t            options.positionY,\n\t\t            options.positionZ\n\t\t        ];\n\t\t        // set the default position/orientation\n\t\t        this.orientationX = options.orientationX;\n\t\t        this.orientationY = options.orientationY;\n\t\t        this.orientationZ = options.orientationZ;\n\t\t        this.positionX = options.positionX;\n\t\t        this.positionY = options.positionY;\n\t\t        this.positionZ = options.positionZ;\n\t\t    };\n\t\t    Tone.extend(Tone.Panner3D);\n\t\t    /**\n\t\t\t *  the default parameters\n\t\t\t *  @static\n\t\t\t *  @const\n\t\t\t *  @type {Object}\n\t\t\t *  Defaults according to the specification\n\t\t\t */\n\t\t    Tone.Panner3D.defaults = {\n\t\t        'positionX': 0,\n\t\t        'positionY': 0,\n\t\t        'positionZ': 0,\n\t\t        'orientationX': 0,\n\t\t        'orientationY': 0,\n\t\t        'orientationZ': 0,\n\t\t        'panningModel': 'equalpower',\n\t\t        'maxDistance': 10000,\n\t\t        'distanceModel': 'inverse',\n\t\t        'coneOuterGain': 0,\n\t\t        'coneOuterAngle': 360,\n\t\t        'coneInnerAngle': 360,\n\t\t        'refDistance': 1,\n\t\t        'rolloffFactor': 1\n\t\t    };\n\t\t    /**\n\t\t\t * The ramp time which is applied to the setTargetAtTime\n\t\t\t * @type {Number}\n\t\t\t * @private\n\t\t\t */\n\t\t    Tone.Panner3D.prototype._rampTimeConstant = 0.01;\n\t\t    /**\n\t\t\t *  Sets the position of the source in 3d space.\t\n\t\t\t *  @param  {Number}  x\n\t\t\t *  @param  {Number}  y\n\t\t\t *  @param  {Number}  z\n\t\t\t *  @return {Tone.Panner3D} this\n\t\t\t */\n\t\t    Tone.Panner3D.prototype.setPosition = function (x, y, z) {\n\t\t        if (this._panner.positionX) {\n\t\t            var now = this.now();\n\t\t            this._panner.positionX.setTargetAtTime(x, now, this._rampTimeConstant);\n\t\t            this._panner.positionY.setTargetAtTime(y, now, this._rampTimeConstant);\n\t\t            this._panner.positionZ.setTargetAtTime(z, now, this._rampTimeConstant);\n\t\t        } else {\n\t\t            this._panner.setPosition(x, y, z);\n\t\t        }\n\t\t        this._position = Array.prototype.slice.call(arguments);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Sets the orientation of the source in 3d space.\t\n\t\t\t *  @param  {Number}  x\n\t\t\t *  @param  {Number}  y\n\t\t\t *  @param  {Number}  z\n\t\t\t *  @return {Tone.Panner3D} this\n\t\t\t */\n\t\t    Tone.Panner3D.prototype.setOrientation = function (x, y, z) {\n\t\t        if (this._panner.orientationX) {\n\t\t            var now = this.now();\n\t\t            this._panner.orientationX.setTargetAtTime(x, now, this._rampTimeConstant);\n\t\t            this._panner.orientationY.setTargetAtTime(y, now, this._rampTimeConstant);\n\t\t            this._panner.orientationZ.setTargetAtTime(z, now, this._rampTimeConstant);\n\t\t        } else {\n\t\t            this._panner.setOrientation(x, y, z);\n\t\t        }\n\t\t        this._orientation = Array.prototype.slice.call(arguments);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  The x position of the panner object.\n\t\t\t *  @type {Number}\n\t\t\t *  @memberOf Tone.Panner3D#\n\t\t\t *  @name positionX\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Panner3D.prototype, 'positionX', {\n\t\t        set: function (pos) {\n\t\t            this._position[0] = pos;\n\t\t            this.setPosition.apply(this, this._position);\n\t\t        },\n\t\t        get: function () {\n\t\t            return this._position[0];\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The y position of the panner object.\n\t\t\t *  @type {Number}\n\t\t\t *  @memberOf Tone.Panner3D#\n\t\t\t *  @name positionY\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Panner3D.prototype, 'positionY', {\n\t\t        set: function (pos) {\n\t\t            this._position[1] = pos;\n\t\t            this.setPosition.apply(this, this._position);\n\t\t        },\n\t\t        get: function () {\n\t\t            return this._position[1];\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The z position of the panner object.\n\t\t\t *  @type {Number}\n\t\t\t *  @memberOf Tone.Panner3D#\n\t\t\t *  @name positionZ\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Panner3D.prototype, 'positionZ', {\n\t\t        set: function (pos) {\n\t\t            this._position[2] = pos;\n\t\t            this.setPosition.apply(this, this._position);\n\t\t        },\n\t\t        get: function () {\n\t\t            return this._position[2];\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The x orientation of the panner object.\n\t\t\t *  @type {Number}\n\t\t\t *  @memberOf Tone.Panner3D#\n\t\t\t *  @name orientationX\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Panner3D.prototype, 'orientationX', {\n\t\t        set: function (pos) {\n\t\t            this._orientation[0] = pos;\n\t\t            this.setOrientation.apply(this, this._orientation);\n\t\t        },\n\t\t        get: function () {\n\t\t            return this._orientation[0];\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The y orientation of the panner object.\n\t\t\t *  @type {Number}\n\t\t\t *  @memberOf Tone.Panner3D#\n\t\t\t *  @name orientationY\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Panner3D.prototype, 'orientationY', {\n\t\t        set: function (pos) {\n\t\t            this._orientation[1] = pos;\n\t\t            this.setOrientation.apply(this, this._orientation);\n\t\t        },\n\t\t        get: function () {\n\t\t            return this._orientation[1];\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The z orientation of the panner object.\n\t\t\t *  @type {Number}\n\t\t\t *  @memberOf Tone.Panner3D#\n\t\t\t *  @name orientationZ\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Panner3D.prototype, 'orientationZ', {\n\t\t        set: function (pos) {\n\t\t            this._orientation[2] = pos;\n\t\t            this.setOrientation.apply(this, this._orientation);\n\t\t        },\n\t\t        get: function () {\n\t\t            return this._orientation[2];\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Proxy a property on the panner to an exposed public propery\n\t\t\t *  @param  {String}  prop\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Panner3D._aliasProperty = function (prop) {\n\t\t        Object.defineProperty(Tone.Panner3D.prototype, prop, {\n\t\t            set: function (val) {\n\t\t                this._panner[prop] = val;\n\t\t            },\n\t\t            get: function () {\n\t\t                return this._panner[prop];\n\t\t            }\n\t\t        });\n\t\t    };\n\t\t    /**\n\t\t\t *  The panning model. Either \"equalpower\" or \"HRTF\".\n\t\t\t *  @type {String}\n\t\t\t *  @memberOf Tone.Panner3D#\n\t\t\t *  @name panningModel\n\t\t\t */\n\t\t    Tone.Panner3D._aliasProperty('panningModel');\n\t\t    /**\n\t\t\t *  A reference distance for reducing volume as source move further from the listener\n\t\t\t *  @type {Number}\n\t\t\t *  @memberOf Tone.Panner3D#\n\t\t\t *  @name refDistance\n\t\t\t */\n\t\t    Tone.Panner3D._aliasProperty('refDistance');\n\t\t    /**\n\t\t\t *  Describes how quickly the volume is reduced as source moves away from listener.\n\t\t\t *  @type {Number}\n\t\t\t *  @memberOf Tone.Panner3D#\n\t\t\t *  @name rolloffFactor\n\t\t\t */\n\t\t    Tone.Panner3D._aliasProperty('rolloffFactor');\n\t\t    /**\n\t\t\t *  The distance model used by,  \"linear\", \"inverse\", or \"exponential\".\n\t\t\t *  @type {String}\n\t\t\t *  @memberOf Tone.Panner3D#\n\t\t\t *  @name distanceModel\n\t\t\t */\n\t\t    Tone.Panner3D._aliasProperty('distanceModel');\n\t\t    /**\n\t\t\t *  The angle, in degrees, inside of which there will be no volume reduction\n\t\t\t *  @type {Degrees}\n\t\t\t *  @memberOf Tone.Panner3D#\n\t\t\t *  @name coneInnerAngle\n\t\t\t */\n\t\t    Tone.Panner3D._aliasProperty('coneInnerAngle');\n\t\t    /**\n\t\t\t *  The angle, in degrees, outside of which the volume will be reduced \n\t\t\t *  to a constant value of coneOuterGain\n\t\t\t *  @type {Degrees}\n\t\t\t *  @memberOf Tone.Panner3D#\n\t\t\t *  @name coneOuterAngle\n\t\t\t */\n\t\t    Tone.Panner3D._aliasProperty('coneOuterAngle');\n\t\t    /**\n\t\t\t *  The gain outside of the coneOuterAngle\n\t\t\t *  @type {Gain}\n\t\t\t *  @memberOf Tone.Panner3D#\n\t\t\t *  @name coneOuterGain\n\t\t\t */\n\t\t    Tone.Panner3D._aliasProperty('coneOuterGain');\n\t\t    /**\n\t\t\t *  The maximum distance between source and listener, \n\t\t\t *  after which the volume will not be reduced any further.\n\t\t\t *  @type {Positive}\n\t\t\t *  @memberOf Tone.Panner3D#\n\t\t\t *  @name maxDistance\n\t\t\t */\n\t\t    Tone.Panner3D._aliasProperty('maxDistance');\n\t\t    /**\n\t\t\t *  Clean up.\n\t\t\t *  @returns {Tone.Panner3D} this\n\t\t\t */\n\t\t    Tone.Panner3D.prototype.dispose = function () {\n\t\t        this._panner.disconnect();\n\t\t        this._panner = null;\n\t\t        this._orientation = null;\n\t\t        this._position = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Panner3D;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Tone.PanVol is a Tone.Panner and Tone.Volume in one.\n\t\t\t *\n\t\t\t *  @extends {Tone}\n\t\t\t *  @constructor\n\t\t\t *  @param {AudioRange} pan the initial pan\n\t\t\t *  @param {number} volume The output volume. \n\t\t\t *  @example\n\t\t\t * //pan the incoming signal left and drop the volume\n\t\t\t * var panVol = new Tone.PanVol(0.25, -12);\n\t\t\t */\n\t\t    Tone.PanVol = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'pan',\n\t\t            'volume'\n\t\t        ], Tone.PanVol.defaults);\n\t\t        /**\n\t\t\t\t *  The panning node\n\t\t\t\t *  @type {Tone.Panner}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._panner = this.input = new Tone.Panner(options.pan);\n\t\t        /**\n\t\t\t\t *  The L/R panning control.\n\t\t\t\t *  @type {AudioRange}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.pan = this._panner.pan;\n\t\t        /**\n\t\t\t\t *  The volume node\n\t\t\t\t *  @type {Tone.Volume}\n\t\t\t\t */\n\t\t        this._volume = this.output = new Tone.Volume(options.volume);\n\t\t        /**\n\t\t\t\t *  The volume control in decibels. \n\t\t\t\t *  @type {Decibels}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.volume = this._volume.volume;\n\t\t        //connections\n\t\t        this._panner.connect(this._volume);\n\t\t        this._readOnly([\n\t\t            'pan',\n\t\t            'volume'\n\t\t        ]);\n\t\t    };\n\t\t    Tone.extend(Tone.PanVol);\n\t\t    /**\n\t\t\t *  The defaults\n\t\t\t *  @type  {Object}\n\t\t\t *  @const\n\t\t\t *  @static\n\t\t\t */\n\t\t    Tone.PanVol.defaults = {\n\t\t        'pan': 0.5,\n\t\t        'volume': 0\n\t\t    };\n\t\t    /**\n\t\t\t *  clean up\n\t\t\t *  @returns {Tone.PanVol} this\n\t\t\t */\n\t\t    Tone.PanVol.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._writable([\n\t\t            'pan',\n\t\t            'volume'\n\t\t        ]);\n\t\t        this._panner.dispose();\n\t\t        this._panner = null;\n\t\t        this.pan = null;\n\t\t        this._volume.dispose();\n\t\t        this._volume = null;\n\t\t        this.volume = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.PanVol;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Tone.CtrlInterpolate will interpolate between given values based\n\t\t\t *         on the \"index\" property. Passing in an array or object literal\n\t\t\t *         will interpolate each of the parameters. Note (i.e. \"C3\")\n\t\t\t *         and Time (i.e. \"4n + 2\") can be interpolated. All other values are\n\t\t\t *         assumed to be numbers. \n\t\t\t *  @example\n\t\t\t * var interp = new Tone.CtrlInterpolate([0, 2, 9, 4]);\n\t\t\t * interp.index = 0.75;\n\t\t\t * interp.value; //returns 1.5\n\t\t\t *\n\t\t\t *  @example\n\t\t\t * var interp = new Tone.CtrlInterpolate([\n\t\t\t * \t[2, 4, 5],\n\t\t\t * \t[9, 3, 2],\n\t\t\t * ]);\n\t\t\t * @param {Array} values The array of values to interpolate over\n\t\t\t * @param {Positive} index The initial interpolation index.\n\t\t\t * @extends {Tone}\n\t\t\t */\n\t\t    Tone.CtrlInterpolate = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'values',\n\t\t            'index'\n\t\t        ], Tone.CtrlInterpolate.defaults);\n\t\t        /**\n\t\t\t\t *  The values to interpolate between\n\t\t\t\t *  @type  {Array}\n\t\t\t\t */\n\t\t        this.values = options.values;\n\t\t        /**\n\t\t\t\t *  The interpolated index between values. For example: a value of 1.5\n\t\t\t\t *  would interpolate equally between the value at index 1\n\t\t\t\t *  and the value at index 2. \n\t\t\t\t *  @example\n\t\t\t\t * interp.index = 0; \n\t\t\t\t * interp.value; //returns the value at 0\n\t\t\t\t * interp.index = 0.5;\n\t\t\t\t * interp.value; //returns the value between indices 0 and 1. \n\t\t\t\t *  @type  {Positive}\n\t\t\t\t */\n\t\t        this.index = options.index;\n\t\t    };\n\t\t    Tone.extend(Tone.CtrlInterpolate);\n\t\t    /**\n\t\t\t *  The defaults\n\t\t\t *  @const\n\t\t\t *  @type  {Object}\n\t\t\t */\n\t\t    Tone.CtrlInterpolate.defaults = {\n\t\t        'index': 0,\n\t\t        'values': []\n\t\t    };\n\t\t    /**\n\t\t\t *  The current interpolated value based on the index\n\t\t\t *  @readOnly\n\t\t\t *  @memberOf Tone.CtrlInterpolate#\n\t\t\t *  @type {*}\n\t\t\t *  @name value\n\t\t\t */\n\t\t    Object.defineProperty(Tone.CtrlInterpolate.prototype, 'value', {\n\t\t        get: function () {\n\t\t            var index = this.index;\n\t\t            index = Math.min(index, this.values.length - 1);\n\t\t            var lowerPosition = Math.floor(index);\n\t\t            var lower = this.values[lowerPosition];\n\t\t            var upper = this.values[Math.ceil(index)];\n\t\t            return this._interpolate(index - lowerPosition, lower, upper);\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Internal interpolation routine\n\t\t\t *  @param  {NormalRange}  index  The index between the lower and upper\n\t\t\t *  @param  {*}  lower \n\t\t\t *  @param  {*}  upper \n\t\t\t *  @return  {*}  The interpolated value\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.CtrlInterpolate.prototype._interpolate = function (index, lower, upper) {\n\t\t        if (this.isArray(lower)) {\n\t\t            var retArray = [];\n\t\t            for (var i = 0; i < lower.length; i++) {\n\t\t                retArray[i] = this._interpolate(index, lower[i], upper[i]);\n\t\t            }\n\t\t            return retArray;\n\t\t        } else if (this.isObject(lower)) {\n\t\t            var retObj = {};\n\t\t            for (var attr in lower) {\n\t\t                retObj[attr] = this._interpolate(index, lower[attr], upper[attr]);\n\t\t            }\n\t\t            return retObj;\n\t\t        } else {\n\t\t            lower = this._toNumber(lower);\n\t\t            upper = this._toNumber(upper);\n\t\t            return (1 - index) * lower + index * upper;\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Convert from the given type into a number\n\t\t\t *  @param  {Number|String}  value\n\t\t\t *  @return  {Number}\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.CtrlInterpolate.prototype._toNumber = function (val) {\n\t\t        if (this.isNumber(val)) {\n\t\t            return val;\n\t\t        } else {\n\t\t            //otherwise assume that it's Time...\n\t\t            return this.toSeconds(val);\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Clean up\n\t\t\t *  @return  {Tone.CtrlInterpolate}  this\n\t\t\t */\n\t\t    Tone.CtrlInterpolate.prototype.dispose = function () {\n\t\t        this.values = null;\n\t\t    };\n\t\t    return Tone.CtrlInterpolate;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Tone.CtrlMarkov represents a Markov Chain where each call\n\t\t\t *         to Tone.CtrlMarkov.next will move to the next state. If the next\n\t\t\t *         state choice is an array, the next state is chosen randomly with\n\t\t\t *         even probability for all of the choices. For a weighted probability\n\t\t\t *         of the next choices, pass in an object with \"state\" and \"probability\" attributes. \n\t\t\t *         The probabilities will be normalized and then chosen. If no next options\n\t\t\t *         are given for the current state, the state will stay there. \n\t\t\t *  @extends {Tone}\n\t\t\t *  @example\n\t\t\t * var chain = new Tone.CtrlMarkov({\n\t\t\t * \t\"beginning\" : [\"end\", \"middle\"],\n\t\t\t * \t\"middle\" : \"end\"\n\t\t\t * });\n\t\t\t * chain.value = \"beginning\";\n\t\t\t * chain.next(); //returns \"end\" or \"middle\" with 50% probability\n\t\t\t *\n\t\t\t *  @example\n\t\t\t * var chain = new Tone.CtrlMarkov({\n\t\t\t * \t\"beginning\" : [{\"value\" : \"end\", \"probability\" : 0.8}, \n\t\t\t * \t\t\t\t\t{\"value\" : \"middle\", \"probability\" : 0.2}],\n\t\t\t * \t\"middle\" : \"end\"\n\t\t\t * });\n\t\t\t * chain.value = \"beginning\";\n\t\t\t * chain.next(); //returns \"end\" with 80% probability or \"middle\" with 20%.\n\t\t\t *  @param {Object} values An object with the state names as the keys\n\t\t\t *                         and the next state(s) as the values. \n\t\t\t */\n\t\t    Tone.CtrlMarkov = function (values, initial) {\n\t\t        /**\n\t\t\t\t *  The Markov values with states as the keys\n\t\t\t\t *  and next state(s) as the values. \n\t\t\t\t *  @type {Object}\n\t\t\t\t */\n\t\t        this.values = this.defaultArg(values, {});\n\t\t        /**\n\t\t\t\t *  The current state of the Markov values. The next\n\t\t\t\t *  state will be evaluated and returned when Tone.CtrlMarkov.next\n\t\t\t\t *  is invoked.\n\t\t\t\t *  @type {String}\n\t\t\t\t */\n\t\t        this.value = this.defaultArg(initial, Object.keys(this.values)[0]);\n\t\t    };\n\t\t    Tone.extend(Tone.CtrlMarkov);\n\t\t    /**\n\t\t\t *  Returns the next state of the Markov values. \n\t\t\t *  @return  {String}\n\t\t\t */\n\t\t    Tone.CtrlMarkov.prototype.next = function () {\n\t\t        if (this.values.hasOwnProperty(this.value)) {\n\t\t            var next = this.values[this.value];\n\t\t            if (this.isArray(next)) {\n\t\t                var distribution = this._getProbDistribution(next);\n\t\t                var rand = Math.random();\n\t\t                var total = 0;\n\t\t                for (var i = 0; i < distribution.length; i++) {\n\t\t                    var dist = distribution[i];\n\t\t                    if (rand > total && rand < total + dist) {\n\t\t                        var chosen = next[i];\n\t\t                        if (this.isObject(chosen)) {\n\t\t                            this.value = chosen.value;\n\t\t                        } else {\n\t\t                            this.value = chosen;\n\t\t                        }\n\t\t                    }\n\t\t                    total += dist;\n\t\t                }\n\t\t            } else {\n\t\t                this.value = next;\n\t\t            }\n\t\t        }\n\t\t        return this.value;\n\t\t    };\n\t\t    /**\n\t\t\t *  Choose randomly from an array weighted options in the form \n\t\t\t *  {\"state\" : string, \"probability\" : number} or an array of values\n\t\t\t *  @param  {Array}  options \n\t\t\t *  @return  {Array}  The randomly selected choice\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.CtrlMarkov.prototype._getProbDistribution = function (options) {\n\t\t        var distribution = [];\n\t\t        var total = 0;\n\t\t        var needsNormalizing = false;\n\t\t        for (var i = 0; i < options.length; i++) {\n\t\t            var option = options[i];\n\t\t            if (this.isObject(option)) {\n\t\t                needsNormalizing = true;\n\t\t                distribution[i] = option.probability;\n\t\t            } else {\n\t\t                distribution[i] = 1 / options.length;\n\t\t            }\n\t\t            total += distribution[i];\n\t\t        }\n\t\t        if (needsNormalizing) {\n\t\t            //normalize the values\n\t\t            for (var j = 0; j < distribution.length; j++) {\n\t\t                distribution[j] = distribution[j] / total;\n\t\t            }\n\t\t        }\n\t\t        return distribution;\n\t\t    };\n\t\t    /**\n\t\t\t *  Clean up\n\t\t\t *  @return  {Tone.CtrlMarkov}  this\n\t\t\t */\n\t\t    Tone.CtrlMarkov.prototype.dispose = function () {\n\t\t        this.values = null;\n\t\t    };\n\t\t    return Tone.CtrlMarkov;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Generate patterns from an array of values.\n\t\t\t *         Has a number of arpeggiation and randomized\n\t\t\t *         selection patterns. \n\t\t\t *           <ul>\n\t\t\t *  \t        <li>\"up\" - cycles upward</li>\n\t\t\t *  \t\t\t<li>\"down\" - cycles downward</li>\n\t\t\t *  \t\t\t<li>\"upDown\" - up then and down</li>\n\t\t\t *  \t\t\t<li>\"downUp\" - cycles down then and up</li>\n\t\t\t *  \t\t\t<li>\"alternateUp\" - jump up two and down one</li>\n\t\t\t *  \t\t\t<li>\"alternateDown\" - jump down two and up one</li>\n\t\t\t *  \t\t\t<li>\"random\" - randomly select an index</li>\n\t\t\t *  \t\t\t<li>\"randomWalk\" - randomly moves one index away from the current position</li>\n\t\t\t *  \t\t\t<li>\"randomOnce\" - randomly select an index without repeating until all values have been chosen.</li>\n\t\t\t *     \t\t</ul>\n\t\t\t *  @param  {Array}  values   An array of options to choose from.\n\t\t\t *  @param  {Tone.CtrlPattern.Type=}  type  The name of the pattern.\n\t\t\t *  @extends {Tone}\n\t\t\t */\n\t\t    Tone.CtrlPattern = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'values',\n\t\t            'type'\n\t\t        ], Tone.CtrlPattern.defaults);\n\t\t        /**\n\t\t\t\t *  The array of values to arpeggiate over\n\t\t\t\t *  @type {Array}\n\t\t\t\t */\n\t\t        this.values = options.values;\n\t\t        /**\n\t\t\t\t *  The current position in the values array\n\t\t\t\t *  @type  {Number}\n\t\t\t\t */\n\t\t        this.index = 0;\n\t\t        /**\n\t\t\t\t *  The type placeholder\n\t\t\t\t *  @type {Tone.CtrlPattern.Type}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._type = null;\n\t\t        /**\n\t\t\t\t *  Shuffled values for the RandomOnce type\n\t\t\t\t *  @type {Array}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._shuffled = null;\n\t\t        /**\n\t\t\t\t *  The direction of the movement\n\t\t\t\t *  @type {String}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._direction = null;\n\t\t        this.type = options.type;\n\t\t    };\n\t\t    Tone.extend(Tone.CtrlPattern);\n\t\t    /**\n\t\t\t *  The Control Patterns\n\t\t\t *  @type  {Object}\n\t\t\t *  @static\n\t\t\t */\n\t\t    Tone.CtrlPattern.Type = {\n\t\t        Up: 'up',\n\t\t        Down: 'down',\n\t\t        UpDown: 'upDown',\n\t\t        DownUp: 'downUp',\n\t\t        AlternateUp: 'alternateUp',\n\t\t        AlternateDown: 'alternateDown',\n\t\t        Random: 'random',\n\t\t        RandomWalk: 'randomWalk',\n\t\t        RandomOnce: 'randomOnce'\n\t\t    };\n\t\t    /**\n\t\t\t *  The default values. \n\t\t\t *  @type  {Object}\n\t\t\t */\n\t\t    Tone.CtrlPattern.defaults = {\n\t\t        'type': Tone.CtrlPattern.Type.Up,\n\t\t        'values': []\n\t\t    };\n\t\t    /**\n\t\t\t *  The value at the current index of the pattern.\n\t\t\t *  @readOnly\n\t\t\t *  @memberOf Tone.CtrlPattern#\n\t\t\t *  @type {*}\n\t\t\t *  @name value\n\t\t\t */\n\t\t    Object.defineProperty(Tone.CtrlPattern.prototype, 'value', {\n\t\t        get: function () {\n\t\t            //some safeguards\n\t\t            if (this.values.length === 0) {\n\t\t                return;\n\t\t            } else if (this.values.length === 1) {\n\t\t                return this.values[0];\n\t\t            }\n\t\t            this.index = Math.min(this.index, this.values.length - 1);\n\t\t            var val = this.values[this.index];\n\t\t            if (this.type === Tone.CtrlPattern.Type.RandomOnce) {\n\t\t                if (this.values.length !== this._shuffled.length) {\n\t\t                    this._shuffleValues();\n\t\t                }\n\t\t                val = this.values[this._shuffled[this.index]];\n\t\t            }\n\t\t            return val;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The pattern used to select the next\n\t\t\t *  item from the values array\n\t\t\t *  @memberOf Tone.CtrlPattern#\n\t\t\t *  @type {Tone.CtrlPattern.Type}\n\t\t\t *  @name type\n\t\t\t */\n\t\t    Object.defineProperty(Tone.CtrlPattern.prototype, 'type', {\n\t\t        get: function () {\n\t\t            return this._type;\n\t\t        },\n\t\t        set: function (type) {\n\t\t            this._type = type;\n\t\t            this._shuffled = null;\n\t\t            //the first index\n\t\t            if (this._type === Tone.CtrlPattern.Type.Up || this._type === Tone.CtrlPattern.Type.UpDown || this._type === Tone.CtrlPattern.Type.RandomOnce || this._type === Tone.CtrlPattern.Type.AlternateUp) {\n\t\t                this.index = 0;\n\t\t            } else if (this._type === Tone.CtrlPattern.Type.Down || this._type === Tone.CtrlPattern.Type.DownUp || this._type === Tone.CtrlPattern.Type.AlternateDown) {\n\t\t                this.index = this.values.length - 1;\n\t\t            }\n\t\t            //the direction\n\t\t            if (this._type === Tone.CtrlPattern.Type.UpDown || this._type === Tone.CtrlPattern.Type.AlternateUp) {\n\t\t                this._direction = Tone.CtrlPattern.Type.Up;\n\t\t            } else if (this._type === Tone.CtrlPattern.Type.DownUp || this._type === Tone.CtrlPattern.Type.AlternateDown) {\n\t\t                this._direction = Tone.CtrlPattern.Type.Down;\n\t\t            }\n\t\t            //randoms\n\t\t            if (this._type === Tone.CtrlPattern.Type.RandomOnce) {\n\t\t                this._shuffleValues();\n\t\t            } else if (this._type === Tone.CtrlPattern.Random) {\n\t\t                this.index = Math.floor(Math.random() * this.values.length);\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Return the next value given the current position\n\t\t\t *  and pattern.\n\t\t\t *  @return {*} The next value\n\t\t\t */\n\t\t    Tone.CtrlPattern.prototype.next = function () {\n\t\t        var type = this.type;\n\t\t        //choose the next index\n\t\t        if (type === Tone.CtrlPattern.Type.Up) {\n\t\t            this.index++;\n\t\t            if (this.index >= this.values.length) {\n\t\t                this.index = 0;\n\t\t            }\n\t\t        } else if (type === Tone.CtrlPattern.Type.Down) {\n\t\t            this.index--;\n\t\t            if (this.index < 0) {\n\t\t                this.index = this.values.length - 1;\n\t\t            }\n\t\t        } else if (type === Tone.CtrlPattern.Type.UpDown || type === Tone.CtrlPattern.Type.DownUp) {\n\t\t            if (this._direction === Tone.CtrlPattern.Type.Up) {\n\t\t                this.index++;\n\t\t            } else {\n\t\t                this.index--;\n\t\t            }\n\t\t            if (this.index < 0) {\n\t\t                this.index = 1;\n\t\t                this._direction = Tone.CtrlPattern.Type.Up;\n\t\t            } else if (this.index >= this.values.length) {\n\t\t                this.index = this.values.length - 2;\n\t\t                this._direction = Tone.CtrlPattern.Type.Down;\n\t\t            }\n\t\t        } else if (type === Tone.CtrlPattern.Type.Random) {\n\t\t            this.index = Math.floor(Math.random() * this.values.length);\n\t\t        } else if (type === Tone.CtrlPattern.Type.RandomWalk) {\n\t\t            if (Math.random() < 0.5) {\n\t\t                this.index--;\n\t\t                this.index = Math.max(this.index, 0);\n\t\t            } else {\n\t\t                this.index++;\n\t\t                this.index = Math.min(this.index, this.values.length - 1);\n\t\t            }\n\t\t        } else if (type === Tone.CtrlPattern.Type.RandomOnce) {\n\t\t            this.index++;\n\t\t            if (this.index >= this.values.length) {\n\t\t                this.index = 0;\n\t\t                //reshuffle the values for next time\n\t\t                this._shuffleValues();\n\t\t            }\n\t\t        } else if (type === Tone.CtrlPattern.Type.AlternateUp) {\n\t\t            if (this._direction === Tone.CtrlPattern.Type.Up) {\n\t\t                this.index += 2;\n\t\t                this._direction = Tone.CtrlPattern.Type.Down;\n\t\t            } else {\n\t\t                this.index -= 1;\n\t\t                this._direction = Tone.CtrlPattern.Type.Up;\n\t\t            }\n\t\t            if (this.index >= this.values.length) {\n\t\t                this.index = 0;\n\t\t                this._direction = Tone.CtrlPattern.Type.Up;\n\t\t            }\n\t\t        } else if (type === Tone.CtrlPattern.Type.AlternateDown) {\n\t\t            if (this._direction === Tone.CtrlPattern.Type.Up) {\n\t\t                this.index += 1;\n\t\t                this._direction = Tone.CtrlPattern.Type.Down;\n\t\t            } else {\n\t\t                this.index -= 2;\n\t\t                this._direction = Tone.CtrlPattern.Type.Up;\n\t\t            }\n\t\t            if (this.index < 0) {\n\t\t                this.index = this.values.length - 1;\n\t\t                this._direction = Tone.CtrlPattern.Type.Down;\n\t\t            }\n\t\t        }\n\t\t        return this.value;\n\t\t    };\n\t\t    /**\n\t\t\t *  Shuffles the values and places the results into the _shuffled\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.CtrlPattern.prototype._shuffleValues = function () {\n\t\t        var copy = [];\n\t\t        this._shuffled = [];\n\t\t        for (var i = 0; i < this.values.length; i++) {\n\t\t            copy[i] = i;\n\t\t        }\n\t\t        while (copy.length > 0) {\n\t\t            var randVal = copy.splice(Math.floor(copy.length * Math.random()), 1);\n\t\t            this._shuffled.push(randVal[0]);\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Clean up\n\t\t\t *  @returns {Tone.CtrlPattern} this\n\t\t\t */\n\t\t    Tone.CtrlPattern.prototype.dispose = function () {\n\t\t        this._shuffled = null;\n\t\t        this.values = null;\n\t\t    };\n\t\t    return Tone.CtrlPattern;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  Choose a random value.\n\t\t\t *  @extends {Tone}\n\t\t\t *  @example\n\t\t\t * var randomWalk = new Tone.CtrlRandom({\n\t\t\t * \t\"min\" : 0,\n\t\t\t * \t\"max\" : 10,\n\t\t\t * \t\"integer\" : true\n\t\t\t * });\n\t\t\t * randomWalk.eval();\n\t\t\t *\n\t\t\t *  @param {Number|Time=} min The minimum return value.\n\t\t\t *  @param {Number|Time=} max The maximum return value.\n\t\t\t */\n\t\t    Tone.CtrlRandom = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'min',\n\t\t            'max'\n\t\t        ], Tone.CtrlRandom.defaults);\n\t\t        /**\n\t\t\t\t *  The minimum return value\n\t\t\t\t *  @type  {Number|Time}\n\t\t\t\t */\n\t\t        this.min = options.min;\n\t\t        /**\n\t\t\t\t *  The maximum return value\n\t\t\t\t *  @type  {Number|Time}\n\t\t\t\t */\n\t\t        this.max = options.max;\n\t\t        /**\n\t\t\t\t *  If the return value should be an integer\n\t\t\t\t *  @type  {Boolean}\n\t\t\t\t */\n\t\t        this.integer = options.integer;\n\t\t    };\n\t\t    Tone.extend(Tone.CtrlRandom);\n\t\t    /**\n\t\t\t *  The defaults\n\t\t\t *  @const\n\t\t\t *  @type  {Object}\n\t\t\t */\n\t\t    Tone.CtrlRandom.defaults = {\n\t\t        'min': 0,\n\t\t        'max': 1,\n\t\t        'integer': false\n\t\t    };\n\t\t    /**\n\t\t\t *  Return a random value between min and max. \n\t\t\t *  @readOnly\n\t\t\t *  @memberOf Tone.CtrlRandom#\n\t\t\t *  @type {*}\n\t\t\t *  @name value\n\t\t\t */\n\t\t    Object.defineProperty(Tone.CtrlRandom.prototype, 'value', {\n\t\t        get: function () {\n\t\t            var min = this.toSeconds(this.min);\n\t\t            var max = this.toSeconds(this.max);\n\t\t            var rand = Math.random();\n\t\t            var val = rand * min + (1 - rand) * max;\n\t\t            if (this.integer) {\n\t\t                val = Math.floor(val);\n\t\t            }\n\t\t            return val;\n\t\t        }\n\t\t    });\n\t\t    return Tone.CtrlRandom;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  AudioBuffer.copyToChannel polyfill\n\t\t\t *  @private\n\t\t\t */\n\t\t    if (window.AudioBuffer && !AudioBuffer.prototype.copyToChannel) {\n\t\t        AudioBuffer.prototype.copyToChannel = function (src, chanNum, start) {\n\t\t            var channel = this.getChannelData(chanNum);\n\t\t            start = start || 0;\n\t\t            for (var i = 0; i < channel.length; i++) {\n\t\t                channel[i + start] = src[i];\n\t\t            }\n\t\t        };\n\t\t        AudioBuffer.prototype.copyFromChannel = function (dest, chanNum, start) {\n\t\t            var channel = this.getChannelData(chanNum);\n\t\t            start = start || 0;\n\t\t            for (var i = 0; i < channel.length; i++) {\n\t\t                dest[i] = channel[i + start];\n\t\t            }\n\t\t        };\n\t\t    }\n\t\t    /**\n\t\t\t *  @class  Buffer loading and storage. Tone.Buffer is used internally by all \n\t\t\t *          classes that make requests for audio files such as Tone.Player,\n\t\t\t *          Tone.Sampler and Tone.Convolver.\n\t\t\t *          <br><br>\n\t\t\t *          Aside from load callbacks from individual buffers, Tone.Buffer \n\t\t\t *  \t\tprovides static methods which keep track of the loading progress \n\t\t\t *  \t\tof all of the buffers. These methods are Tone.Buffer.on(\"load\" / \"progress\" / \"error\")\n\t\t\t *\n\t\t\t *  @constructor \n\t\t\t *  @extends {Tone}\n\t\t\t *  @param {AudioBuffer|string} url The url to load, or the audio buffer to set. \n\t\t\t *  @param {Function=} onload A callback which is invoked after the buffer is loaded. \n\t\t\t *                            It's recommended to use Tone.Buffer.onload instead \n\t\t\t *                            since it will give you a callback when ALL buffers are loaded.\n\t\t\t *  @param {Function=} onerror The callback to invoke if there is an error\n\t\t\t *  @example\n\t\t\t * var buffer = new Tone.Buffer(\"path/to/sound.mp3\", function(){\n\t\t\t * \t//the buffer is now available.\n\t\t\t * \tvar buff = buffer.get();\n\t\t\t * });\n\t\t\t */\n\t\t    Tone.Buffer = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'url',\n\t\t            'onload',\n\t\t            'onerror'\n\t\t        ], Tone.Buffer.defaults);\n\t\t        /**\n\t\t\t\t *  stores the loaded AudioBuffer\n\t\t\t\t *  @type {AudioBuffer}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._buffer = null;\n\t\t        /**\n\t\t\t\t *  indicates if the buffer should be reversed or not\n\t\t\t\t *  @type {Boolean}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._reversed = options.reverse;\n\t\t        /**\n\t\t\t\t *  The XHR\n\t\t\t\t *  @type  {XMLHttpRequest}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._xhr = null;\n\t\t        if (options.url instanceof AudioBuffer || options.url instanceof Tone.Buffer) {\n\t\t            this.set(options.url);\n\t\t            // invoke the onload callback\n\t\t            if (options.onload) {\n\t\t                options.onload(this);\n\t\t            }\n\t\t        } else if (this.isString(options.url)) {\n\t\t            this.load(options.url, options.onload, options.onerror);\n\t\t        }\n\t\t    };\n\t\t    Tone.extend(Tone.Buffer);\n\t\t    /**\n\t\t\t *  the default parameters\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.Buffer.defaults = {\n\t\t        'url': undefined,\n\t\t        'reverse': false\n\t\t    };\n\t\t    /**\n\t\t\t *  Pass in an AudioBuffer or Tone.Buffer to set the value\n\t\t\t *  of this buffer.\n\t\t\t *  @param {AudioBuffer|Tone.Buffer} buffer the buffer\n\t\t\t *  @returns {Tone.Buffer} this\n\t\t\t */\n\t\t    Tone.Buffer.prototype.set = function (buffer) {\n\t\t        if (buffer instanceof Tone.Buffer) {\n\t\t            this._buffer = buffer.get();\n\t\t        } else {\n\t\t            this._buffer = buffer;\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  @return {AudioBuffer} The audio buffer stored in the object.\n\t\t\t */\n\t\t    Tone.Buffer.prototype.get = function () {\n\t\t        return this._buffer;\n\t\t    };\n\t\t    /**\n\t\t\t *  Makes an xhr reqest for the selected url then decodes\n\t\t\t *  the file as an audio buffer. Invokes\n\t\t\t *  the callback once the audio buffer loads.\n\t\t\t *  @param {String} url The url of the buffer to load.\n\t\t\t *                      filetype support depends on the\n\t\t\t *                      browser.\n\t\t\t *  @returns {Promise} returns a Promise which resolves with the Tone.Buffer\n\t\t\t */\n\t\t    Tone.Buffer.prototype.load = function (url, onload, onerror) {\n\t\t        var promise = new Promise(function (load, error) {\n\t\t            this._xhr = Tone.Buffer.load(url, //success\n\t\t            function (buff) {\n\t\t                this._xhr = null;\n\t\t                this.set(buff);\n\t\t                load(this);\n\t\t                if (onload) {\n\t\t                    onload(this);\n\t\t                }\n\t\t            }.bind(this), //error\n\t\t            function (err) {\n\t\t                this._xhr = null;\n\t\t                error(err);\n\t\t                if (onerror) {\n\t\t                    onerror(err);\n\t\t                }\n\t\t            }.bind(this));\n\t\t        }.bind(this));\n\t\t        return promise;\n\t\t    };\n\t\t    /**\n\t\t\t *  dispose and disconnect\n\t\t\t *  @returns {Tone.Buffer} this\n\t\t\t */\n\t\t    Tone.Buffer.prototype.dispose = function () {\n\t\t        Tone.Emitter.prototype.dispose.call(this);\n\t\t        this._buffer = null;\n\t\t        if (this._xhr) {\n\t\t            Tone.Buffer._currentDownloads--;\n\t\t            this._xhr.abort();\n\t\t            this._xhr = null;\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t * If the buffer is loaded or not\n\t\t\t * @memberOf Tone.Buffer#\n\t\t\t * @type {Boolean}\n\t\t\t * @name loaded\n\t\t\t * @readOnly\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Buffer.prototype, 'loaded', {\n\t\t        get: function () {\n\t\t            return this.length > 0;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The duration of the buffer. \n\t\t\t * @memberOf Tone.Buffer#\n\t\t\t * @type {Number}\n\t\t\t * @name duration\n\t\t\t * @readOnly\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Buffer.prototype, 'duration', {\n\t\t        get: function () {\n\t\t            if (this._buffer) {\n\t\t                return this._buffer.duration;\n\t\t            } else {\n\t\t                return 0;\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The length of the buffer in samples\n\t\t\t * @memberOf Tone.Buffer#\n\t\t\t * @type {Number}\n\t\t\t * @name length\n\t\t\t * @readOnly\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Buffer.prototype, 'length', {\n\t\t        get: function () {\n\t\t            if (this._buffer) {\n\t\t                return this._buffer.length;\n\t\t            } else {\n\t\t                return 0;\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The number of discrete audio channels. Returns 0 if no buffer\n\t\t\t * is loaded.\n\t\t\t * @memberOf Tone.Buffer#\n\t\t\t * @type {Number}\n\t\t\t * @name numberOfChannels\n\t\t\t * @readOnly\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Buffer.prototype, 'numberOfChannels', {\n\t\t        get: function () {\n\t\t            if (this._buffer) {\n\t\t                return this._buffer.numberOfChannels;\n\t\t            } else {\n\t\t                return 0;\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Set the audio buffer from the array\n\t\t\t *  @param {Float32Array} array The array to fill the audio buffer\n\t\t\t *  @param {Number} [channels=1] The number of channels contained in the array. \n\t\t\t *                               If the channel is more than 1, the input array\n\t\t\t *                               is expected to be a multidimensional array\n\t\t\t *                               with dimensions equal to the number of channels.\n\t\t\t *  @return {Tone.Buffer} this\n\t\t\t */\n\t\t    Tone.Buffer.prototype.fromArray = function (array) {\n\t\t        var isMultidimensional = array[0].length > 0;\n\t\t        var channels = isMultidimensional ? array.length : 1;\n\t\t        var len = isMultidimensional ? array[0].length : array.length;\n\t\t        var buffer = this.context.createBuffer(channels, len, this.context.sampleRate);\n\t\t        if (!isMultidimensional && channels === 1) {\n\t\t            array = [array];\n\t\t        }\n\t\t        for (var c = 0; c < channels; c++) {\n\t\t            buffer.copyToChannel(array[c], c);\n\t\t        }\n\t\t        this._buffer = buffer;\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t * \tSums muliple channels into 1 channel\n\t\t\t *  @param {Number=} channel Optionally only copy a single channel from the array.\n\t\t\t *  @return {Array}\n\t\t\t */\n\t\t    Tone.Buffer.prototype.toMono = function (chanNum) {\n\t\t        if (this.isNumber(chanNum)) {\n\t\t            this.fromArray(this.toArray(chanNum));\n\t\t        } else {\n\t\t            var outputArray = new Float32Array(this.length);\n\t\t            var numChannels = this.numberOfChannels;\n\t\t            for (var channel = 0; channel < numChannels; channel++) {\n\t\t                var channelArray = this.toArray(channel);\n\t\t                for (var i = 0; i < channelArray.length; i++) {\n\t\t                    outputArray[i] += channelArray[i];\n\t\t                }\n\t\t            }\n\t\t            //divide by the number of channels\n\t\t            outputArray = outputArray.map(function (sample) {\n\t\t                return sample / numChannels;\n\t\t            });\n\t\t            this.fromArray(outputArray);\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t * \tGet the buffer as an array. Single channel buffers will return a 1-dimensional \n\t\t\t * \tFloat32Array, and multichannel buffers will return multidimensional arrays.\n\t\t\t *  @param {Number=} channel Optionally only copy a single channel from the array.\n\t\t\t *  @return {Array}\n\t\t\t */\n\t\t    Tone.Buffer.prototype.toArray = function (channel) {\n\t\t        if (this.isNumber(channel)) {\n\t\t            return this.getChannelData(channel);\n\t\t        } else if (this.numberOfChannels === 1) {\n\t\t            return this.toArray(0);\n\t\t        } else {\n\t\t            var ret = [];\n\t\t            for (var c = 0; c < this.numberOfChannels; c++) {\n\t\t                ret[c] = this.getChannelData(c);\n\t\t            }\n\t\t            return ret;\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Returns the Float32Array representing the PCM audio data for the specific channel.\n\t\t\t *  @param  {Number}  channel  The channel number to return\n\t\t\t *  @return  {Float32Array}  The audio as a TypedArray\n\t\t\t */\n\t\t    Tone.Buffer.prototype.getChannelData = function (channel) {\n\t\t        return this._buffer.getChannelData(channel);\n\t\t    };\n\t\t    /**\n\t\t\t *  Cut a subsection of the array and return a buffer of the\n\t\t\t *  subsection. Does not modify the original buffer\n\t\t\t *  @param {Time} start The time to start the slice\n\t\t\t *  @param {Time=} end The end time to slice. If none is given\n\t\t\t *                     will default to the end of the buffer\n\t\t\t *  @return {Tone.Buffer} this\n\t\t\t */\n\t\t    Tone.Buffer.prototype.slice = function (start, end) {\n\t\t        end = this.defaultArg(end, this.duration);\n\t\t        var startSamples = Math.floor(this.context.sampleRate * this.toSeconds(start));\n\t\t        var endSamples = Math.floor(this.context.sampleRate * this.toSeconds(end));\n\t\t        var replacement = [];\n\t\t        for (var i = 0; i < this.numberOfChannels; i++) {\n\t\t            replacement[i] = this.toArray(i).slice(startSamples, endSamples);\n\t\t        }\n\t\t        var retBuffer = new Tone.Buffer().fromArray(replacement);\n\t\t        return retBuffer;\n\t\t    };\n\t\t    /**\n\t\t\t *  Reverse the buffer.\n\t\t\t *  @private\n\t\t\t *  @return {Tone.Buffer} this\n\t\t\t */\n\t\t    Tone.Buffer.prototype._reverse = function () {\n\t\t        if (this.loaded) {\n\t\t            for (var i = 0; i < this.numberOfChannels; i++) {\n\t\t                Array.prototype.reverse.call(this.getChannelData(i));\n\t\t            }\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t * Reverse the buffer.\n\t\t\t * @memberOf Tone.Buffer#\n\t\t\t * @type {Boolean}\n\t\t\t * @name reverse\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Buffer.prototype, 'reverse', {\n\t\t        get: function () {\n\t\t            return this._reversed;\n\t\t        },\n\t\t        set: function (rev) {\n\t\t            if (this._reversed !== rev) {\n\t\t                this._reversed = rev;\n\t\t                this._reverse();\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    // STATIC METHODS\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    //statically inherits Emitter methods\n\t\t    Tone.Emitter.mixin(Tone.Buffer);\n\t\t    /**\n\t\t\t *  the static queue for all of the xhr requests\n\t\t\t *  @type {Array}\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Buffer._downloadQueue = [];\n\t\t    /**\n\t\t\t *  the total number of downloads\n\t\t\t *  @type {Number}\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Buffer._currentDownloads = 0;\n\t\t    /**\n\t\t\t *  A path which is prefixed before every url.\n\t\t\t *  @type  {String}\n\t\t\t *  @static\n\t\t\t */\n\t\t    Tone.Buffer.baseUrl = '';\n\t\t    /**\n\t\t\t *  Loads a url using XMLHttpRequest.\n\t\t\t *  @param {String} url\n\t\t\t *  @param {Function} onload\n\t\t\t *  @param {Function} onerror\n\t\t\t *  @param {Function} onprogress\n\t\t\t *  @return {XMLHttpRequest}\n\t\t\t */\n\t\t    Tone.Buffer.load = function (url, onload, onerror) {\n\t\t        //default\n\t\t        onload = onload || Tone.noOp;\n\t\t        function onError(e) {\n\t\t            if (onerror) {\n\t\t                onerror(e);\n\t\t                Tone.Buffer.emit('error', e);\n\t\t            } else {\n\t\t                throw new Error(e);\n\t\t            }\n\t\t        }\n\t\t        function onProgress() {\n\t\t            //calculate the progress\n\t\t            var totalProgress = 0;\n\t\t            for (var i = 0; i < Tone.Buffer._downloadQueue.length; i++) {\n\t\t                totalProgress += Tone.Buffer._downloadQueue[i].progress;\n\t\t            }\n\t\t            Tone.Buffer.emit('progress', totalProgress / Tone.Buffer._downloadQueue.length);\n\t\t        }\n\t\t        var request = new XMLHttpRequest();\n\t\t        request.open('GET', Tone.Buffer.baseUrl + url, true);\n\t\t        request.responseType = 'arraybuffer';\n\t\t        //start out as 0\n\t\t        request.progress = 0;\n\t\t        Tone.Buffer._currentDownloads++;\n\t\t        Tone.Buffer._downloadQueue.push(request);\n\t\t        request.addEventListener('load', function () {\n\t\t            if (request.status === 200) {\n\t\t                Tone.context.decodeAudioData(request.response, function (buff) {\n\t\t                    request.progress = 1;\n\t\t                    onProgress();\n\t\t                    onload(buff);\n\t\t                    Tone.Buffer._currentDownloads--;\n\t\t                    if (Tone.Buffer._currentDownloads === 0) {\n\t\t                        // clear the downloads\n\t\t                        Tone.Buffer._downloadQueue = [];\n\t\t                        //emit the event at the end\n\t\t                        Tone.Buffer.emit('load');\n\t\t                    }\n\t\t                }, function () {\n\t\t                    onError('Tone.Buffer: could not decode audio data: ' + url);\n\t\t                });\n\t\t            } else {\n\t\t                onError('Tone.Buffer: could not locate file: ' + url);\n\t\t            }\n\t\t        });\n\t\t        request.addEventListener('error', onError);\n\t\t        request.addEventListener('progress', function (event) {\n\t\t            if (event.lengthComputable) {\n\t\t                //only go to 95%, the last 5% is when the audio is decoded\n\t\t                request.progress = event.loaded / event.total * 0.95;\n\t\t                onProgress();\n\t\t            }\n\t\t        });\n\t\t        request.send();\n\t\t        return request;\n\t\t    };\n\t\t    /**\n\t\t\t *  Stop all of the downloads in progress\n\t\t\t *  @return {Tone.Buffer}\n\t\t\t *  @static\n\t\t\t */\n\t\t    Tone.Buffer.cancelDownloads = function () {\n\t\t        Tone.Buffer._downloadQueue.forEach(function (request) {\n\t\t            request.abort();\n\t\t        });\n\t\t        Tone.Buffer._currentDownloads = 0;\n\t\t        return Tone.Buffer;\n\t\t    };\n\t\t    /**\n\t\t\t *  Checks a url's extension to see if the current browser can play that file type.\n\t\t\t *  @param {String} url The url/extension to test\n\t\t\t *  @return {Boolean} If the file extension can be played\n\t\t\t *  @static\n\t\t\t *  @example\n\t\t\t * Tone.Buffer.supportsType(\"wav\"); //returns true\n\t\t\t * Tone.Buffer.supportsType(\"path/to/file.wav\"); //returns true\n\t\t\t */\n\t\t    Tone.Buffer.supportsType = function (url) {\n\t\t        var extension = url.split('.');\n\t\t        extension = extension[extension.length - 1];\n\t\t        var response = document.createElement('audio').canPlayType('audio/' + extension);\n\t\t        return response !== '';\n\t\t    };\n\t\t    /**\n\t\t\t *  Returns a Promise which resolves when all of the buffers have loaded\n\t\t\t *  @return {Promise}\n\t\t\t */\n\t\t    Tone.loaded = function () {\n\t\t        var onload, onerror;\n\t\t        function removeEvents() {\n\t\t            //remove the events when it's resolved\n\t\t            Tone.Buffer.off('load', onload);\n\t\t            Tone.Buffer.off('error', onerror);\n\t\t        }\n\t\t        return new Promise(function (success, fail) {\n\t\t            onload = function () {\n\t\t                success();\n\t\t            };\n\t\t            onerror = function () {\n\t\t                fail();\n\t\t            };\n\t\t            //add the event listeners\n\t\t            Tone.Buffer.on('load', onload);\n\t\t            Tone.Buffer.on('error', onerror);\n\t\t        }).then(removeEvents).catch(function (e) {\n\t\t            removeEvents();\n\t\t            throw new Error(e);\n\t\t        });\n\t\t    };\n\t\t    return Tone.Buffer;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    /**\n\t\t\t *  @class A data structure for holding multiple buffers.\n\t\t\t *  \n\t\t\t *  @param  {Object|Array}    urls      An object literal or array\n\t\t\t *                                      of urls to load.\n\t\t\t *  @param  {Function=}  callback  The callback to invoke when\n\t\t\t *                                 the buffers are loaded. \n\t\t\t *  @extends {Tone}\n\t\t\t *  @example\n\t\t\t * //load a whole bank of piano samples\n\t\t\t * var pianoSamples = new Tone.Buffers({\n\t\t\t * \t\"C4\" : \"path/to/C4.mp3\"\n\t\t\t * \t\"C#4\" : \"path/to/C#4.mp3\"\n\t\t\t * \t\"D4\" : \"path/to/D4.mp3\"\n\t\t\t * \t\"D#4\" : \"path/to/D#4.mp3\"\n\t\t\t * \t...\n\t\t\t * }, function(){\n\t\t\t * \t//play one of the samples when they all load\n\t\t\t * \tplayer.buffer = pianoSamples.get(\"C4\");\n\t\t\t * \tplayer.start();\n\t\t\t * });\n\t\t\t * \n\t\t\t */\n\t\t    Tone.Buffers = function (urls, onload, baseUrl) {\n\t\t        /**\n\t\t\t\t *  All of the buffers\n\t\t\t\t *  @type  {Object}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._buffers = {};\n\t\t        /**\n\t\t\t\t *  A path which is prefixed before every url.\n\t\t\t\t *  @type  {String}\n\t\t\t\t */\n\t\t        this.baseUrl = this.defaultArg(baseUrl, '');\n\t\t        urls = this._flattenUrls(urls);\n\t\t        this._loadingCount = 0;\n\t\t        //add each one\n\t\t        for (var key in urls) {\n\t\t            this._loadingCount++;\n\t\t            this.add(key, urls[key], this._bufferLoaded.bind(this, onload));\n\t\t        }\n\t\t    };\n\t\t    Tone.extend(Tone.Buffers);\n\t\t    /**\n\t\t\t *  True if the buffers object has a buffer by that name.\n\t\t\t *  @param  {String|Number}  name  The key or index of the \n\t\t\t *                                 buffer.\n\t\t\t *  @return  {Boolean}\n\t\t\t */\n\t\t    Tone.Buffers.prototype.has = function (name) {\n\t\t        return this._buffers.hasOwnProperty(name);\n\t\t    };\n\t\t    /**\n\t\t\t *  Get a buffer by name. If an array was loaded, \n\t\t\t *  then use the array index.\n\t\t\t *  @param  {String|Number}  name  The key or index of the \n\t\t\t *                                 buffer.\n\t\t\t *  @return  {Tone.Buffer}\n\t\t\t */\n\t\t    Tone.Buffers.prototype.get = function (name) {\n\t\t        if (this.has(name)) {\n\t\t            return this._buffers[name];\n\t\t        } else {\n\t\t            throw new Error('Tone.Buffers: no buffer named ' + name);\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  A buffer was loaded. decrement the counter.\n\t\t\t *  @param  {Function}  callback \n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Buffers.prototype._bufferLoaded = function (callback) {\n\t\t        this._loadingCount--;\n\t\t        if (this._loadingCount === 0 && callback) {\n\t\t            callback(this);\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t * If the buffers are loaded or not\n\t\t\t * @memberOf Tone.Buffers#\n\t\t\t * @type {Boolean}\n\t\t\t * @name loaded\n\t\t\t * @readOnly\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Buffers.prototype, 'loaded', {\n\t\t        get: function () {\n\t\t            var isLoaded = true;\n\t\t            for (var buffName in this._buffers) {\n\t\t                var buff = this.get(buffName);\n\t\t                isLoaded = isLoaded && buff.loaded;\n\t\t            }\n\t\t            return isLoaded;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Add a buffer by name and url to the Buffers\n\t\t\t *  @param  {String}    name      A unique name to give\n\t\t\t *                                the buffer\n\t\t\t *  @param  {String|Tone.Buffer|Audiobuffer}  url  Either the url of the bufer, \n\t\t\t *                                                 or a buffer which will be added\n\t\t\t *                                                 with the given name.\n\t\t\t *  @param  {Function=}  callback  The callback to invoke \n\t\t\t *                                 when the url is loaded.\n\t\t\t */\n\t\t    Tone.Buffers.prototype.add = function (name, url, callback) {\n\t\t        callback = this.defaultArg(callback, Tone.noOp);\n\t\t        if (url instanceof Tone.Buffer) {\n\t\t            this._buffers[name] = url;\n\t\t            callback(this);\n\t\t        } else if (url instanceof AudioBuffer) {\n\t\t            this._buffers[name] = new Tone.Buffer(url);\n\t\t            callback(this);\n\t\t        } else if (this.isString(url)) {\n\t\t            this._buffers[name] = new Tone.Buffer(this.baseUrl + url, callback);\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Flatten an object into a single depth object. \n\t\t\t *  thanks to https://gist.github.com/penguinboy/762197\n\t\t\t *  @param   {Object} ob \t\n\t\t\t *  @return  {Object}    \n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Buffers.prototype._flattenUrls = function (ob) {\n\t\t        var toReturn = {};\n\t\t        for (var i in ob) {\n\t\t            if (!ob.hasOwnProperty(i))\n\t\t                continue;\n\t\t            if (this.isObject(ob[i])) {\n\t\t                var flatObject = this._flattenUrls(ob[i]);\n\t\t                for (var x in flatObject) {\n\t\t                    if (!flatObject.hasOwnProperty(x))\n\t\t                        continue;\n\t\t                    toReturn[i + '.' + x] = flatObject[x];\n\t\t                }\n\t\t            } else {\n\t\t                toReturn[i] = ob[i];\n\t\t            }\n\t\t        }\n\t\t        return toReturn;\n\t\t    };\n\t\t    /**\n\t\t\t *  Clean up.\n\t\t\t *  @return  {Tone.Buffers} this\n\t\t\t */\n\t\t    Tone.Buffers.prototype.dispose = function () {\n\t\t        for (var name in this._buffers) {\n\t\t            this._buffers[name].dispose();\n\t\t        }\n\t\t        this._buffers = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Buffers;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  buses are another way of routing audio\n\t\t\t *\n\t\t\t *  augments Tone.prototype to include send and recieve\n\t\t\t */\n\t\t    /**\n\t\t\t  *  All of the routes\n\t\t\t  *  \n\t\t\t  *  @type {Object}\n\t\t\t  *  @static\n\t\t\t  *  @private\n\t\t\t  */\n\t\t    var Buses = {};\n\t\t    /**\n\t\t\t *  Send this signal to the channel name. \n\t\t\t *  @param  {string} channelName A named channel to send the signal to.\n\t\t\t *  @param  {Decibels} amount The amount of the source to send to the bus. \n\t\t\t *  @return {GainNode} The gain node which connects this node to the desired channel. \n\t\t\t *                     Can be used to adjust the levels of the send.\n\t\t\t *  @example\n\t\t\t * source.send(\"reverb\", -12);\n\t\t\t */\n\t\t    Tone.prototype.send = function (channelName, amount) {\n\t\t        if (!Buses.hasOwnProperty(channelName)) {\n\t\t            Buses[channelName] = this.context.createGain();\n\t\t        }\n\t\t        amount = this.defaultArg(amount, 0);\n\t\t        var sendKnob = new Tone.Gain(amount, Tone.Type.Decibels);\n\t\t        this.output.chain(sendKnob, Buses[channelName]);\n\t\t        return sendKnob;\n\t\t    };\n\t\t    /**\n\t\t\t *  Recieve the input from the desired channelName to the input\n\t\t\t *\n\t\t\t *  @param  {string} channelName A named channel to send the signal to.\n\t\t\t *  @param {AudioNode} [input] If no input is selected, the\n\t\t\t *                                         input of the current node is\n\t\t\t *                                         chosen. \n\t\t\t *  @returns {Tone} this\n\t\t\t *  @example\n\t\t\t * reverbEffect.receive(\"reverb\");\n\t\t\t */\n\t\t    Tone.prototype.receive = function (channelName, input) {\n\t\t        if (!Buses.hasOwnProperty(channelName)) {\n\t\t            Buses[channelName] = this.context.createGain();\n\t\t        }\n\t\t        if (this.isUndef(input)) {\n\t\t            input = this.input;\n\t\t        }\n\t\t        Buses[channelName].connect(input);\n\t\t        return this;\n\t\t    };\n\t\t    //remove all the send/receives when a new audio context is passed in\n\t\t    Tone.Context.on('init', function (context) {\n\t\t        if (context.Buses) {\n\t\t            Buses = context.Buses;\n\t\t        } else {\n\t\t            Buses = {};\n\t\t            context.Buses = Buses;\n\t\t        }\n\t\t    });\n\t\t    return Tone;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Tone.Draw is useful for synchronizing visuals and audio events.\n\t\t\t *         Callbacks from Tone.Transport or any of the Tone.Event classes\n\t\t\t *         always happen _before_ the scheduled time and are not synchronized\n\t\t\t *         to the animation frame so they are not good for triggering tightly\n\t\t\t *         synchronized visuals and sound. Tone.Draw makes it easy to schedule\n\t\t\t *         callbacks using the AudioContext time and uses requestAnimationFrame.\n\t\t\t *         \n\t\t\t *  @singleton\n\t\t\t *  @extends {Tone}\n\t\t\t *  @example\n\t\t\t * Tone.Transport.schedule(function(time){\n\t\t\t * \t//use the time argument to schedule a callback with Tone.Draw\n\t\t\t * \tTone.Draw.schedule(function(){\n\t\t\t * \t\t//do drawing or DOM manipulation here\n\t\t\t * \t}, time)\n\t\t\t * }, \"+0.5\")\n\t\t\t */\n\t\t    Tone.Draw = function () {\n\t\t        /**\n\t\t\t\t *  All of the events.\n\t\t\t\t *  @type  {Tone.Timeline}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._events = new Tone.Timeline();\n\t\t        /**\n\t\t\t\t *  The duration after which events are not invoked.\n\t\t\t\t *  @type  {Number}\n\t\t\t\t *  @default 0.25\n\t\t\t\t */\n\t\t        this.expiration = 0.25;\n\t\t        /**\n\t\t\t\t *  The amount of time before the scheduled time \n\t\t\t\t *  that the callback can be invoked. Default is\n\t\t\t\t *  half the time of an animation frame (0.008 seconds).\n\t\t\t\t *  @type  {Number}\n\t\t\t\t *  @default 0.008\n\t\t\t\t */\n\t\t        this.anticipation = 0.008;\n\t\t        /**\n\t\t\t\t *  The draw loop\n\t\t\t\t *  @type  {Function}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._boundDrawLoop = this._drawLoop.bind(this);\n\t\t    };\n\t\t    Tone.extend(Tone.Draw);\n\t\t    /**\n\t\t\t *  Schedule a function at the given time to be invoked\n\t\t\t *  on the nearest animation frame.\n\t\t\t *  @param  {Function}  callback  Callback is invoked at the given time.\n\t\t\t *  @param  {Time}    time      The time relative to the AudioContext time\n\t\t\t *                              to invoke the callback.\n\t\t\t *  @return  {Tone.Draw}    this\n\t\t\t */\n\t\t    Tone.Draw.prototype.schedule = function (callback, time) {\n\t\t        this._events.add({\n\t\t            callback: callback,\n\t\t            time: this.toSeconds(time)\n\t\t        });\n\t\t        //start the draw loop on the first event\n\t\t        if (this._events.length === 1) {\n\t\t            requestAnimationFrame(this._boundDrawLoop);\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Cancel events scheduled after the given time\n\t\t\t *  @param  {Time=}  after  Time after which scheduled events will \n\t\t\t *                          be removed from the scheduling timeline.\n\t\t\t *  @return  {Tone.Draw}  this\n\t\t\t */\n\t\t    Tone.Draw.prototype.cancel = function (after) {\n\t\t        this._events.cancel(this.toSeconds(after));\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  The draw loop\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Draw.prototype._drawLoop = function () {\n\t\t        var now = Tone.now();\n\t\t        while (this._events.length && this._events.peek().time - this.anticipation <= now) {\n\t\t            var event = this._events.shift();\n\t\t            if (now - event.time <= this.expiration) {\n\t\t                event.callback();\n\t\t            }\n\t\t        }\n\t\t        if (this._events.length > 0) {\n\t\t            requestAnimationFrame(this._boundDrawLoop);\n\t\t        }\n\t\t    };\n\t\t    //make a singleton\n\t\t    Tone.Draw = new Tone.Draw();\n\t\t    return Tone.Draw;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  Both Tone.Panner3D and Tone.Listener have a position in 3D space \n\t\t\t *          using a right-handed cartesian coordinate system. \n\t\t\t *          The units used in the coordinate system are not defined; \n\t\t\t *          these coordinates are independent/invariant of any particular \n\t\t\t *          units such as meters or feet. Tone.Panner3D objects have an forward \n\t\t\t *          vector representing the direction the sound is projecting. Additionally, \n\t\t\t *          they have a sound cone representing how directional the sound is. \n\t\t\t *          For example, the sound could be omnidirectional, in which case it would \n\t\t\t *          be heard anywhere regardless of its forward, or it can be more directional \n\t\t\t *          and heard only if it is facing the listener. Tone.Listener objects \n\t\t\t *          (representing a person's ears) have an forward and up vector \n\t\t\t *          representing in which direction the person is facing. Because both the \n\t\t\t *          source stream and the listener can be moving, they both have a velocity \n\t\t\t *          vector representing both the speed and direction of movement. Taken together, \n\t\t\t *          these two velocities can be used to generate a doppler shift effect which changes the pitch.\n\t\t\t *          <br><br>\n\t\t\t *          Note: the position of the Listener will have no effect on nodes not connected to a Tone.Panner3D\n\t\t\t *  \n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone}\n\t\t\t *  @singleton\n\t\t\t *  @param {Number} positionX The initial x position.\n\t\t\t *  @param {Number} positionY The initial y position.\n\t\t\t *  @param {Number} positionZ The initial z position.\n\t\t\t */\n\t\t    Tone.Listener = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'positionX',\n\t\t            'positionY',\n\t\t            'positionZ'\n\t\t        ], ListenerConstructor.defaults);\n\t\t        /**\n\t\t\t\t *  Holds the current forward orientation\n\t\t\t\t *  @type  {Array}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._orientation = [\n\t\t            options.forwardX,\n\t\t            options.forwardY,\n\t\t            options.forwardZ,\n\t\t            options.upX,\n\t\t            options.upY,\n\t\t            options.upZ\n\t\t        ];\n\t\t        /**\n\t\t\t\t *  Holds the current position\n\t\t\t\t *  @type  {Array}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._position = [\n\t\t            options.positionX,\n\t\t            options.positionY,\n\t\t            options.positionZ\n\t\t        ];\n\t\t        // set the default position/forward\n\t\t        this.forwardX = options.forwardX;\n\t\t        this.forwardY = options.forwardY;\n\t\t        this.forwardZ = options.forwardZ;\n\t\t        this.upX = options.upX;\n\t\t        this.upY = options.upY;\n\t\t        this.upZ = options.upZ;\n\t\t        this.positionX = options.positionX;\n\t\t        this.positionY = options.positionY;\n\t\t        this.positionZ = options.positionZ;\n\t\t    };\n\t\t    Tone.extend(Tone.Listener);\n\t\t    /**\n\t\t\t *  the default parameters\n\t\t\t *  @static\n\t\t\t *  @const\n\t\t\t *  @type {Object}\n\t\t\t *  Defaults according to the specification\n\t\t\t */\n\t\t    Tone.Listener.defaults = {\n\t\t        'positionX': 0,\n\t\t        'positionY': 0,\n\t\t        'positionZ': 0,\n\t\t        'forwardX': 0,\n\t\t        'forwardY': 0,\n\t\t        'forwardZ': 1,\n\t\t        'upX': 0,\n\t\t        'upY': 1,\n\t\t        'upZ': 0\n\t\t    };\n\t\t    /**\n\t\t\t * The ramp time which is applied to the setTargetAtTime\n\t\t\t * @type {Number}\n\t\t\t * @private\n\t\t\t */\n\t\t    Tone.Listener.prototype._rampTimeConstant = 0.01;\n\t\t    /**\n\t\t\t *  Sets the position of the listener in 3d space.\t\n\t\t\t *  @param  {Number}  x\n\t\t\t *  @param  {Number}  y\n\t\t\t *  @param  {Number}  z\n\t\t\t *  @return {Tone.Listener} this\n\t\t\t */\n\t\t    Tone.Listener.prototype.setPosition = function (x, y, z) {\n\t\t        if (this.context.listener.positionX) {\n\t\t            var now = this.now();\n\t\t            this.context.listener.positionX.setTargetAtTime(x, now, this._rampTimeConstant);\n\t\t            this.context.listener.positionY.setTargetAtTime(y, now, this._rampTimeConstant);\n\t\t            this.context.listener.positionZ.setTargetAtTime(z, now, this._rampTimeConstant);\n\t\t        } else {\n\t\t            this.context.listener.setPosition(x, y, z);\n\t\t        }\n\t\t        this._position = Array.prototype.slice.call(arguments);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Sets the orientation of the listener using two vectors, the forward\n\t\t\t *  vector (which direction the listener is facing) and the up vector \n\t\t\t *  (which the up direction of the listener). An up vector\n\t\t\t *  of 0, 0, 1 is equivalent to the listener standing up in the Z direction. \n\t\t\t *  @param  {Number}  x\n\t\t\t *  @param  {Number}  y\n\t\t\t *  @param  {Number}  z\n\t\t\t *  @param  {Number}  upX\n\t\t\t *  @param  {Number}  upY\n\t\t\t *  @param  {Number}  upZ\n\t\t\t *  @return {Tone.Listener} this\n\t\t\t */\n\t\t    Tone.Listener.prototype.setOrientation = function (x, y, z, upX, upY, upZ) {\n\t\t        if (this.context.listener.forwardX) {\n\t\t            var now = this.now();\n\t\t            this.context.listener.forwardX.setTargetAtTime(x, now, this._rampTimeConstant);\n\t\t            this.context.listener.forwardY.setTargetAtTime(y, now, this._rampTimeConstant);\n\t\t            this.context.listener.forwardZ.setTargetAtTime(z, now, this._rampTimeConstant);\n\t\t            this.context.listener.upX.setTargetAtTime(upX, now, this._rampTimeConstant);\n\t\t            this.context.listener.upY.setTargetAtTime(upY, now, this._rampTimeConstant);\n\t\t            this.context.listener.upZ.setTargetAtTime(upZ, now, this._rampTimeConstant);\n\t\t        } else {\n\t\t            this.context.listener.setOrientation(x, y, z, upX, upY, upZ);\n\t\t        }\n\t\t        this._orientation = Array.prototype.slice.call(arguments);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  The x position of the panner object.\n\t\t\t *  @type {Number}\n\t\t\t *  @memberOf Tone.Listener#\n\t\t\t *  @name positionX\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Listener.prototype, 'positionX', {\n\t\t        set: function (pos) {\n\t\t            this._position[0] = pos;\n\t\t            this.setPosition.apply(this, this._position);\n\t\t        },\n\t\t        get: function () {\n\t\t            return this._position[0];\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The y position of the panner object.\n\t\t\t *  @type {Number}\n\t\t\t *  @memberOf Tone.Listener#\n\t\t\t *  @name positionY\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Listener.prototype, 'positionY', {\n\t\t        set: function (pos) {\n\t\t            this._position[1] = pos;\n\t\t            this.setPosition.apply(this, this._position);\n\t\t        },\n\t\t        get: function () {\n\t\t            return this._position[1];\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The z position of the panner object.\n\t\t\t *  @type {Number}\n\t\t\t *  @memberOf Tone.Listener#\n\t\t\t *  @name positionZ\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Listener.prototype, 'positionZ', {\n\t\t        set: function (pos) {\n\t\t            this._position[2] = pos;\n\t\t            this.setPosition.apply(this, this._position);\n\t\t        },\n\t\t        get: function () {\n\t\t            return this._position[2];\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The x coordinate of the listeners front direction. i.e. \n\t\t\t *  which way they are facing.\n\t\t\t *  @type {Number}\n\t\t\t *  @memberOf Tone.Listener#\n\t\t\t *  @name forwardX\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Listener.prototype, 'forwardX', {\n\t\t        set: function (pos) {\n\t\t            this._orientation[0] = pos;\n\t\t            this.setOrientation.apply(this, this._orientation);\n\t\t        },\n\t\t        get: function () {\n\t\t            return this._orientation[0];\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The y coordinate of the listeners front direction. i.e. \n\t\t\t *  which way they are facing.\n\t\t\t *  @type {Number}\n\t\t\t *  @memberOf Tone.Listener#\n\t\t\t *  @name forwardY\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Listener.prototype, 'forwardY', {\n\t\t        set: function (pos) {\n\t\t            this._orientation[1] = pos;\n\t\t            this.setOrientation.apply(this, this._orientation);\n\t\t        },\n\t\t        get: function () {\n\t\t            return this._orientation[1];\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The z coordinate of the listeners front direction. i.e. \n\t\t\t *  which way they are facing.\n\t\t\t *  @type {Number}\n\t\t\t *  @memberOf Tone.Listener#\n\t\t\t *  @name forwardZ\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Listener.prototype, 'forwardZ', {\n\t\t        set: function (pos) {\n\t\t            this._orientation[2] = pos;\n\t\t            this.setOrientation.apply(this, this._orientation);\n\t\t        },\n\t\t        get: function () {\n\t\t            return this._orientation[2];\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The x coordinate of the listener's up direction. i.e.\n\t\t\t *  the direction the listener is standing in.\n\t\t\t *  @type {Number}\n\t\t\t *  @memberOf Tone.Listener#\n\t\t\t *  @name upX\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Listener.prototype, 'upX', {\n\t\t        set: function (pos) {\n\t\t            this._orientation[3] = pos;\n\t\t            this.setOrientation.apply(this, this._orientation);\n\t\t        },\n\t\t        get: function () {\n\t\t            return this._orientation[3];\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The y coordinate of the listener's up direction. i.e.\n\t\t\t *  the direction the listener is standing in.\n\t\t\t *  @type {Number}\n\t\t\t *  @memberOf Tone.Listener#\n\t\t\t *  @name upY\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Listener.prototype, 'upY', {\n\t\t        set: function (pos) {\n\t\t            this._orientation[4] = pos;\n\t\t            this.setOrientation.apply(this, this._orientation);\n\t\t        },\n\t\t        get: function () {\n\t\t            return this._orientation[4];\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The z coordinate of the listener's up direction. i.e.\n\t\t\t *  the direction the listener is standing in.\n\t\t\t *  @type {Number}\n\t\t\t *  @memberOf Tone.Listener#\n\t\t\t *  @name upZ\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Listener.prototype, 'upZ', {\n\t\t        set: function (pos) {\n\t\t            this._orientation[5] = pos;\n\t\t            this.setOrientation.apply(this, this._orientation);\n\t\t        },\n\t\t        get: function () {\n\t\t            return this._orientation[5];\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Clean up.\n\t\t\t *  @returns {Tone.Listener} this\n\t\t\t */\n\t\t    Tone.Listener.prototype.dispose = function () {\n\t\t        this._orientation = null;\n\t\t        this._position = null;\n\t\t        return this;\n\t\t    };\n\t\t    //SINGLETON SETUP\n\t\t    var ListenerConstructor = Tone.Listener;\n\t\t    Tone.Listener = new ListenerConstructor();\n\t\t    Tone.Context.on('init', function (context) {\n\t\t        if (context.Listener instanceof ListenerConstructor) {\n\t\t            //a single listener object\n\t\t            Tone.Listener = context.Listener;\n\t\t        } else {\n\t\t            //make new Listener insides\n\t\t            Tone.Listener = new ListenerConstructor();\n\t\t        }\n\t\t        context.Listener = Tone.Listener;\n\t\t    });\n\t\t    //END SINGLETON SETUP\n\t\t    return Tone.Listener;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    /**\n\t\t\t *  shim\n\t\t\t *  @private\n\t\t\t */\n\t\t    if (!window.hasOwnProperty('OfflineAudioContext') && window.hasOwnProperty('webkitOfflineAudioContext')) {\n\t\t        window.OfflineAudioContext = window.webkitOfflineAudioContext;\n\t\t    }\n\t\t    /**\n\t\t\t *  @class Wrapper around the OfflineAudioContext\n\t\t\t *  @extends {Tone.Context\n\t\t\t *  @param  {Number}  channels  The number of channels to render\n\t\t\t *  @param  {Number}  duration  The duration to render in samples\n\t\t\t *  @param {Number} sampleRate the sample rate to render at\n\t\t\t */\n\t\t    Tone.OfflineContext = function (channels, duration, sampleRate) {\n\t\t        /**\n\t\t\t\t *  The offline context\n\t\t\t\t *  @private\n\t\t\t\t *  @type  {OfflineAudioContext}\n\t\t\t\t */\n\t\t        var offlineContext = new OfflineAudioContext(channels, duration * sampleRate, sampleRate);\n\t\t        //wrap the methods/members\n\t\t        Tone.Context.call(this, offlineContext);\n\t\t        /**\n\t\t\t\t *  A private reference to the duration\n\t\t\t\t *  @private\n\t\t\t\t *  @type  {Number}\n\t\t\t\t */\n\t\t        this._duration = duration;\n\t\t        /**\n\t\t\t\t *  An artificial clock source\n\t\t\t\t *  @type  {Number}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._currentTime = 0;\n\t\t        //modify the lookAhead and updateInterval to one block\n\t\t        this.lookAhead = this.blockTime;\n\t\t        this.updateInterval = this.blockTime;\n\t\t    };\n\t\t    Tone.extend(Tone.OfflineContext, Tone.Context);\n\t\t    /**\n\t\t\t *  Override the now method to point to the internal clock time\n\t\t\t *  @return  {Number}\n\t\t\t */\n\t\t    Tone.OfflineContext.prototype.now = function () {\n\t\t        return this._currentTime;\n\t\t    };\n\t\t    /**\n\t\t\t *  Overwrite this method since the worker is not necessary for the offline context\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.OfflineContext.prototype._createWorker = function () {\n\t\t        //dummy worker that does nothing\n\t\t        return {\n\t\t            postMessage: function () {\n\t\t            }\n\t\t        };\n\t\t    };\n\t\t    /**\n\t\t\t *  Render the output of the OfflineContext\n\t\t\t *  @return  {Promise}\n\t\t\t */\n\t\t    Tone.OfflineContext.prototype.render = function () {\n\t\t        while (this._duration - this._currentTime >= 0) {\n\t\t            //invoke all the callbacks on that time\n\t\t            this.emit('tick');\n\t\t            //increment the clock\n\t\t            this._currentTime += Tone.prototype.blockTime;\n\t\t        }\n\t\t        //promise returned is not yet implemented in all browsers\n\t\t        return new Promise(function (done) {\n\t\t            this._context.oncomplete = function (e) {\n\t\t                done(e.renderedBuffer);\n\t\t            };\n\t\t            this._context.startRendering();\n\t\t        }.bind(this));\n\t\t    };\n\t\t    return Tone.OfflineContext;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    /**\n\t\t\t *  Generate a buffer by rendering all of the Tone.js code within the callback using the OfflineAudioContext. \n\t\t\t *  The OfflineAudioContext is capable of rendering much faster than real time in many cases. \n\t\t\t *  The callback function also passes in an offline instance of Tone.Transport which can be used\n\t\t\t *  to schedule events along the Transport. \n\t\t\t *  @param  {Function}  callback  All Tone.js nodes which are created and scheduled within this callback are recorded into the output Buffer.\n\t\t\t *  @param  {Time}  duration     the amount of time to record for.\n\t\t\t *  @return  {Promise}  The promise which is invoked with the Tone.Buffer of the recorded output.\n\t\t\t *  @example\n\t\t\t * //render 2 seconds of the oscillator\n\t\t\t * Tone.Offline(function(){\n\t\t\t * \t//only nodes created in this callback will be recorded\n\t\t\t * \tvar oscillator = new Tone.Oscillator().toMaster().start(0)\n\t\t\t * \t//schedule their events\n\t\t\t * }, 2).then(function(buffer){\n\t\t\t * \t//do something with the output buffer\n\t\t\t * })\n\t\t\t * @example\n\t\t\t * //can also schedule events along the Transport\n\t\t\t * //using the passed in Offline Transport\n\t\t\t * Tone.Offline(function(Transport){\n\t\t\t * \tvar osc = new Tone.Oscillator().toMaster()\n\t\t\t * \tTransport.schedule(function(time){\n\t\t\t * \t\tosc.start(time).stop(time + 0.1)\n\t\t\t * \t}, 1)\n\t\t\t * \tTransport.start(0.2)\n\t\t\t * }, 4).then(function(buffer){\n\t\t\t * \t//do something with the output buffer\n\t\t\t * })\n\t\t\t */\n\t\t    Tone.Offline = function (callback, duration) {\n\t\t        //set the OfflineAudioContext\n\t\t        var sampleRate = Tone.context.sampleRate;\n\t\t        var originalContext = Tone.context;\n\t\t        var context = new Tone.OfflineContext(2, duration, sampleRate);\n\t\t        Tone.context = context;\n\t\t        //invoke the callback/scheduling\n\t\t        callback(Tone.Transport);\n\t\t        //process the audio\n\t\t        var rendered = context.render();\n\t\t        //return the original AudioContext\n\t\t        Tone.context = originalContext;\n\t\t        //return the audio\n\t\t        return rendered.then(function (buffer) {\n\t\t            //wrap it in a Tone.Buffer\n\t\t            return new Tone.Buffer(buffer);\n\t\t        });\n\t\t    };\n\t\t    return Tone.Offline;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t * \t@class  Tone.Effect is the base class for effects. Connect the effect between\n\t\t\t * \t        the effectSend and effectReturn GainNodes, then control the amount of\n\t\t\t * \t        effect which goes to the output using the wet control.\n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone}\n\t\t\t *  @param {NormalRange|Object} [wet] The starting wet value. \n\t\t\t */\n\t\t    Tone.Effect = function () {\n\t\t        this.createInsOuts(1, 1);\n\t\t        //get all of the defaults\n\t\t        var options = this.optionsObject(arguments, ['wet'], Tone.Effect.defaults);\n\t\t        /**\n\t\t\t\t *  the drywet knob to control the amount of effect\n\t\t\t\t *  @type {Tone.CrossFade}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._dryWet = new Tone.CrossFade(options.wet);\n\t\t        /**\n\t\t\t\t *  The wet control is how much of the effected\n\t\t\t\t *  will pass through to the output. 1 = 100% effected\n\t\t\t\t *  signal, 0 = 100% dry signal. \n\t\t\t\t *  @type {NormalRange}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.wet = this._dryWet.fade;\n\t\t        /**\n\t\t\t\t *  connect the effectSend to the input of hte effect\n\t\t\t\t *  @type {Tone.Gain}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this.effectSend = new Tone.Gain();\n\t\t        /**\n\t\t\t\t *  connect the output of the effect to the effectReturn\n\t\t\t\t *  @type {Tone.Gain}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this.effectReturn = new Tone.Gain();\n\t\t        //connections\n\t\t        this.input.connect(this._dryWet.a);\n\t\t        this.input.connect(this.effectSend);\n\t\t        this.effectReturn.connect(this._dryWet.b);\n\t\t        this._dryWet.connect(this.output);\n\t\t        this._readOnly(['wet']);\n\t\t    };\n\t\t    Tone.extend(Tone.Effect);\n\t\t    /**\n\t\t\t *  @static\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.Effect.defaults = { 'wet': 1 };\n\t\t    /**\n\t\t\t *  chains the effect in between the effectSend and effectReturn\n\t\t\t *  @param  {Tone} effect\n\t\t\t *  @private\n\t\t\t *  @returns {Tone.Effect} this\n\t\t\t */\n\t\t    Tone.Effect.prototype.connectEffect = function (effect) {\n\t\t        this.effectSend.chain(effect, this.effectReturn);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Clean up. \n\t\t\t *  @returns {Tone.Effect} this\n\t\t\t */\n\t\t    Tone.Effect.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._dryWet.dispose();\n\t\t        this._dryWet = null;\n\t\t        this.effectSend.dispose();\n\t\t        this.effectSend = null;\n\t\t        this.effectReturn.dispose();\n\t\t        this.effectReturn = null;\n\t\t        this._writable(['wet']);\n\t\t        this.wet = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Effect;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Tone.AutoFilter is a Tone.Filter with a Tone.LFO connected to the filter cutoff frequency.\n\t\t\t *         Setting the LFO rate and depth allows for control over the filter modulation rate \n\t\t\t *         and depth.\n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.Effect}\n\t\t\t *  @param {Time|Object} [frequency] The rate of the LFO.\n\t\t\t *  @param {Frequency=} baseFrequency The lower value of the LFOs oscillation\n\t\t \t *  @param {Frequency=} octaves The number of octaves above the baseFrequency\n\t\t\t *  @example\n\t\t\t * //create an autofilter and start it's LFO\n\t\t\t * var autoFilter = new Tone.AutoFilter(\"4n\").toMaster().start();\n\t\t\t * //route an oscillator through the filter and start it\n\t\t\t * var oscillator = new Tone.Oscillator().connect(autoFilter).start();\n\t\t\t */\n\t\t    Tone.AutoFilter = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'frequency',\n\t\t            'baseFrequency',\n\t\t            'octaves'\n\t\t        ], Tone.AutoFilter.defaults);\n\t\t        Tone.Effect.call(this, options);\n\t\t        /**\n\t\t\t\t *  the lfo which drives the filter cutoff\n\t\t\t\t *  @type {Tone.LFO}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._lfo = new Tone.LFO({\n\t\t            'frequency': options.frequency,\n\t\t            'amplitude': options.depth\n\t\t        });\n\t\t        /**\n\t\t\t\t * The range of the filter modulating between the min and max frequency. \n\t\t\t\t * 0 = no modulation. 1 = full modulation.\n\t\t\t\t * @type {NormalRange}\n\t\t\t\t * @signal\n\t\t\t\t */\n\t\t        this.depth = this._lfo.amplitude;\n\t\t        /**\n\t\t\t\t * How fast the filter modulates between min and max. \n\t\t\t\t * @type {Frequency}\n\t\t\t\t * @signal\n\t\t\t\t */\n\t\t        this.frequency = this._lfo.frequency;\n\t\t        /**\n\t\t\t\t *  The filter node\n\t\t\t\t *  @type {Tone.Filter}\n\t\t\t\t */\n\t\t        this.filter = new Tone.Filter(options.filter);\n\t\t        /**\n\t\t\t\t *  The octaves placeholder\n\t\t\t\t *  @type {Positive}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._octaves = 0;\n\t\t        //connections\n\t\t        this.connectEffect(this.filter);\n\t\t        this._lfo.connect(this.filter.frequency);\n\t\t        this.type = options.type;\n\t\t        this._readOnly([\n\t\t            'frequency',\n\t\t            'depth'\n\t\t        ]);\n\t\t        this.octaves = options.octaves;\n\t\t        this.baseFrequency = options.baseFrequency;\n\t\t    };\n\t\t    //extend Effect\n\t\t    Tone.extend(Tone.AutoFilter, Tone.Effect);\n\t\t    /**\n\t\t\t *  defaults\n\t\t\t *  @static\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.AutoFilter.defaults = {\n\t\t        'frequency': 1,\n\t\t        'type': 'sine',\n\t\t        'depth': 1,\n\t\t        'baseFrequency': 200,\n\t\t        'octaves': 2.6,\n\t\t        'filter': {\n\t\t            'type': 'lowpass',\n\t\t            'rolloff': -12,\n\t\t            'Q': 1\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t * Start the effect.\n\t\t\t * @param {Time} [time=now] When the LFO will start. \n\t\t\t * @returns {Tone.AutoFilter} this\n\t\t\t */\n\t\t    Tone.AutoFilter.prototype.start = function (time) {\n\t\t        this._lfo.start(time);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t * Stop the effect.\n\t\t\t * @param {Time} [time=now] When the LFO will stop. \n\t\t\t * @returns {Tone.AutoFilter} this\n\t\t\t */\n\t\t    Tone.AutoFilter.prototype.stop = function (time) {\n\t\t        this._lfo.stop(time);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t * Sync the filter to the transport.\n\t\t\t * @param {Time} [delay=0] Delay time before starting the effect after the\n\t\t\t *                               Transport has started. \n\t\t\t * @returns {Tone.AutoFilter} this\n\t\t\t */\n\t\t    Tone.AutoFilter.prototype.sync = function (delay) {\n\t\t        this._lfo.sync(delay);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t * Unsync the filter from the transport.\n\t\t\t * @returns {Tone.AutoFilter} this\n\t\t\t */\n\t\t    Tone.AutoFilter.prototype.unsync = function () {\n\t\t        this._lfo.unsync();\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t * Type of oscillator attached to the AutoFilter. \n\t\t\t * Possible values: \"sine\", \"square\", \"triangle\", \"sawtooth\".\n\t\t\t * @memberOf Tone.AutoFilter#\n\t\t\t * @type {string}\n\t\t\t * @name type\n\t\t\t */\n\t\t    Object.defineProperty(Tone.AutoFilter.prototype, 'type', {\n\t\t        get: function () {\n\t\t            return this._lfo.type;\n\t\t        },\n\t\t        set: function (type) {\n\t\t            this._lfo.type = type;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The minimum value of the filter's cutoff frequency.\n\t\t\t * @memberOf Tone.AutoFilter#\n\t\t\t * @type {Frequency}\n\t\t\t * @name min\n\t\t\t */\n\t\t    Object.defineProperty(Tone.AutoFilter.prototype, 'baseFrequency', {\n\t\t        get: function () {\n\t\t            return this._lfo.min;\n\t\t        },\n\t\t        set: function (freq) {\n\t\t            this._lfo.min = this.toFrequency(freq);\n\t\t            //and set the max\n\t\t            this.octaves = this._octaves;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The maximum value of the filter's cutoff frequency. \n\t\t\t * @memberOf Tone.AutoFilter#\n\t\t\t * @type {Positive}\n\t\t\t * @name octaves\n\t\t\t */\n\t\t    Object.defineProperty(Tone.AutoFilter.prototype, 'octaves', {\n\t\t        get: function () {\n\t\t            return this._octaves;\n\t\t        },\n\t\t        set: function (oct) {\n\t\t            this._octaves = oct;\n\t\t            this._lfo.max = this.baseFrequency * Math.pow(2, oct);\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Clean up. \n\t\t\t *  @returns {Tone.AutoFilter} this\n\t\t\t */\n\t\t    Tone.AutoFilter.prototype.dispose = function () {\n\t\t        Tone.Effect.prototype.dispose.call(this);\n\t\t        this._lfo.dispose();\n\t\t        this._lfo = null;\n\t\t        this.filter.dispose();\n\t\t        this.filter = null;\n\t\t        this._writable([\n\t\t            'frequency',\n\t\t            'depth'\n\t\t        ]);\n\t\t        this.frequency = null;\n\t\t        this.depth = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.AutoFilter;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Tone.AutoPanner is a Tone.Panner with an LFO connected to the pan amount. \n\t\t\t *         More on using autopanners [here](https://www.ableton.com/en/blog/autopan-chopper-effect-and-more-liveschool/).\n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.Effect}\n\t\t\t *  @param {Frequency|Object} [frequency] Rate of left-right oscillation. \n\t\t\t *  @example\n\t\t\t * //create an autopanner and start it's LFO\n\t\t\t * var autoPanner = new Tone.AutoPanner(\"4n\").toMaster().start();\n\t\t\t * //route an oscillator through the panner and start it\n\t\t\t * var oscillator = new Tone.Oscillator().connect(autoPanner).start();\n\t\t\t */\n\t\t    Tone.AutoPanner = function () {\n\t\t        var options = this.optionsObject(arguments, ['frequency'], Tone.AutoPanner.defaults);\n\t\t        Tone.Effect.call(this, options);\n\t\t        /**\n\t\t\t\t *  the lfo which drives the panning\n\t\t\t\t *  @type {Tone.LFO}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._lfo = new Tone.LFO({\n\t\t            'frequency': options.frequency,\n\t\t            'amplitude': options.depth,\n\t\t            'min': -1,\n\t\t            'max': 1\n\t\t        });\n\t\t        /**\n\t\t\t\t * The amount of panning between left and right. \n\t\t\t\t * 0 = always center. 1 = full range between left and right. \n\t\t\t\t * @type {NormalRange}\n\t\t\t\t * @signal\n\t\t\t\t */\n\t\t        this.depth = this._lfo.amplitude;\n\t\t        /**\n\t\t\t\t *  the panner node which does the panning\n\t\t\t\t *  @type {Tone.Panner}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._panner = new Tone.Panner();\n\t\t        /**\n\t\t\t\t * How fast the panner modulates between left and right. \n\t\t\t\t * @type {Frequency}\n\t\t\t\t * @signal\n\t\t\t\t */\n\t\t        this.frequency = this._lfo.frequency;\n\t\t        //connections\n\t\t        this.connectEffect(this._panner);\n\t\t        this._lfo.connect(this._panner.pan);\n\t\t        this.type = options.type;\n\t\t        this._readOnly([\n\t\t            'depth',\n\t\t            'frequency'\n\t\t        ]);\n\t\t    };\n\t\t    //extend Effect\n\t\t    Tone.extend(Tone.AutoPanner, Tone.Effect);\n\t\t    /**\n\t\t\t *  defaults\n\t\t\t *  @static\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.AutoPanner.defaults = {\n\t\t        'frequency': 1,\n\t\t        'type': 'sine',\n\t\t        'depth': 1\n\t\t    };\n\t\t    /**\n\t\t\t * Start the effect.\n\t\t\t * @param {Time} [time=now] When the LFO will start. \n\t\t\t * @returns {Tone.AutoPanner} this\n\t\t\t */\n\t\t    Tone.AutoPanner.prototype.start = function (time) {\n\t\t        this._lfo.start(time);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t * Stop the effect.\n\t\t\t * @param {Time} [time=now] When the LFO will stop. \n\t\t\t * @returns {Tone.AutoPanner} this\n\t\t\t */\n\t\t    Tone.AutoPanner.prototype.stop = function (time) {\n\t\t        this._lfo.stop(time);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t * Sync the panner to the transport.\n\t\t\t * @param {Time} [delay=0] Delay time before starting the effect after the\n\t\t\t *                               Transport has started. \n\t\t\t * @returns {Tone.AutoPanner} this\n\t\t\t */\n\t\t    Tone.AutoPanner.prototype.sync = function (delay) {\n\t\t        this._lfo.sync(delay);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t * Unsync the panner from the transport\n\t\t\t * @returns {Tone.AutoPanner} this\n\t\t\t */\n\t\t    Tone.AutoPanner.prototype.unsync = function () {\n\t\t        this._lfo.unsync();\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t * Type of oscillator attached to the AutoFilter. \n\t\t\t * Possible values: \"sine\", \"square\", \"triangle\", \"sawtooth\".\n\t\t\t * @memberOf Tone.AutoFilter#\n\t\t\t * @type {string}\n\t\t\t * @name type\n\t\t\t */\n\t\t    Object.defineProperty(Tone.AutoPanner.prototype, 'type', {\n\t\t        get: function () {\n\t\t            return this._lfo.type;\n\t\t        },\n\t\t        set: function (type) {\n\t\t            this._lfo.type = type;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  clean up\n\t\t\t *  @returns {Tone.AutoPanner} this\n\t\t\t */\n\t\t    Tone.AutoPanner.prototype.dispose = function () {\n\t\t        Tone.Effect.prototype.dispose.call(this);\n\t\t        this._lfo.dispose();\n\t\t        this._lfo = null;\n\t\t        this._panner.dispose();\n\t\t        this._panner = null;\n\t\t        this._writable([\n\t\t            'depth',\n\t\t            'frequency'\n\t\t        ]);\n\t\t        this.frequency = null;\n\t\t        this.depth = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.AutoPanner;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  Tone.AutoWah connects a Tone.Follower to a bandpass filter (Tone.Filter).\n\t\t\t *          The frequency of the filter is adjusted proportionally to the \n\t\t\t *          incoming signal's amplitude. Inspiration from [Tuna.js](https://github.com/Dinahmoe/tuna).\n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.Effect}\n\t\t\t *  @param {Frequency|Object} [baseFrequency] The frequency the filter is set \n\t\t\t *                                            to at the low point of the wah\n\t\t\t *  @param {Positive} [octaves] The number of octaves above the baseFrequency\n\t\t\t *                                the filter will sweep to when fully open\n\t\t\t *  @param {Decibels} [sensitivity] The decibel threshold sensitivity for \n\t\t\t *                                   the incoming signal. Normal range of -40 to 0. \n\t\t\t *  @example\n\t\t\t * var autoWah = new Tone.AutoWah(50, 6, -30).toMaster();\n\t\t\t * //initialize the synth and connect to autowah\n\t\t\t * var synth = new Synth.connect(autoWah);\n\t\t\t * //Q value influences the effect of the wah - default is 2\n\t\t\t * autoWah.Q.value = 6;\n\t\t\t * //more audible on higher notes\n\t\t\t * synth.triggerAttackRelease(\"C4\", \"8n\")\n\t\t\t */\n\t\t    Tone.AutoWah = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'baseFrequency',\n\t\t            'octaves',\n\t\t            'sensitivity'\n\t\t        ], Tone.AutoWah.defaults);\n\t\t        Tone.Effect.call(this, options);\n\t\t        /**\n\t\t\t\t *  The envelope follower. Set the attack/release\n\t\t\t\t *  timing to adjust how the envelope is followed. \n\t\t\t\t *  @type {Tone.Follower}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this.follower = new Tone.Follower(options.follower);\n\t\t        /**\n\t\t\t\t *  scales the follower value to the frequency domain\n\t\t\t\t *  @type {Tone}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._sweepRange = new Tone.ScaleExp(0, 1, 0.5);\n\t\t        /**\n\t\t\t\t *  @type {number}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._baseFrequency = options.baseFrequency;\n\t\t        /**\n\t\t\t\t *  @type {number}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._octaves = options.octaves;\n\t\t        /**\n\t\t\t\t *  the input gain to adjust the sensitivity\n\t\t\t\t *  @type {Tone.Gain}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._inputBoost = new Tone.Gain();\n\t\t        /**\n\t\t\t\t *  @type {BiquadFilterNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._bandpass = new Tone.Filter({\n\t\t            'rolloff': -48,\n\t\t            'frequency': 0,\n\t\t            'Q': options.Q\n\t\t        });\n\t\t        /**\n\t\t\t\t *  @type {Tone.Filter}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._peaking = new Tone.Filter(0, 'peaking');\n\t\t        this._peaking.gain.value = options.gain;\n\t\t        /**\n\t\t\t\t * The gain of the filter.\n\t\t\t\t * @type {Number}\n\t\t\t\t * @signal\n\t\t\t\t */\n\t\t        this.gain = this._peaking.gain;\n\t\t        /**\n\t\t\t\t * The quality of the filter.\n\t\t\t\t * @type {Positive}\n\t\t\t\t * @signal\n\t\t\t\t */\n\t\t        this.Q = this._bandpass.Q;\n\t\t        //the control signal path\n\t\t        this.effectSend.chain(this._inputBoost, this.follower, this._sweepRange);\n\t\t        this._sweepRange.connect(this._bandpass.frequency);\n\t\t        this._sweepRange.connect(this._peaking.frequency);\n\t\t        //the filtered path\n\t\t        this.effectSend.chain(this._bandpass, this._peaking, this.effectReturn);\n\t\t        //set the initial value\n\t\t        this._setSweepRange();\n\t\t        this.sensitivity = options.sensitivity;\n\t\t        this._readOnly([\n\t\t            'gain',\n\t\t            'Q'\n\t\t        ]);\n\t\t    };\n\t\t    Tone.extend(Tone.AutoWah, Tone.Effect);\n\t\t    /**\n\t\t\t *  @static\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.AutoWah.defaults = {\n\t\t        'baseFrequency': 100,\n\t\t        'octaves': 6,\n\t\t        'sensitivity': 0,\n\t\t        'Q': 2,\n\t\t        'gain': 2,\n\t\t        'follower': {\n\t\t            'attack': 0.3,\n\t\t            'release': 0.5\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t * The number of octaves that the filter will sweep above the \n\t\t\t * baseFrequency. \n\t\t\t * @memberOf Tone.AutoWah#\n\t\t\t * @type {Number}\n\t\t\t * @name octaves\n\t\t\t */\n\t\t    Object.defineProperty(Tone.AutoWah.prototype, 'octaves', {\n\t\t        get: function () {\n\t\t            return this._octaves;\n\t\t        },\n\t\t        set: function (octaves) {\n\t\t            this._octaves = octaves;\n\t\t            this._setSweepRange();\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The base frequency from which the sweep will start from.\n\t\t\t * @memberOf Tone.AutoWah#\n\t\t\t * @type {Frequency}\n\t\t\t * @name baseFrequency\n\t\t\t */\n\t\t    Object.defineProperty(Tone.AutoWah.prototype, 'baseFrequency', {\n\t\t        get: function () {\n\t\t            return this._baseFrequency;\n\t\t        },\n\t\t        set: function (baseFreq) {\n\t\t            this._baseFrequency = baseFreq;\n\t\t            this._setSweepRange();\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The sensitivity to control how responsive to the input signal the filter is. \n\t\t\t * @memberOf Tone.AutoWah#\n\t\t\t * @type {Decibels}\n\t\t\t * @name sensitivity\n\t\t\t */\n\t\t    Object.defineProperty(Tone.AutoWah.prototype, 'sensitivity', {\n\t\t        get: function () {\n\t\t            return this.gainToDb(1 / this._inputBoost.gain.value);\n\t\t        },\n\t\t        set: function (sensitivy) {\n\t\t            this._inputBoost.gain.value = 1 / this.dbToGain(sensitivy);\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  sets the sweep range of the scaler\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.AutoWah.prototype._setSweepRange = function () {\n\t\t        this._sweepRange.min = this._baseFrequency;\n\t\t        this._sweepRange.max = Math.min(this._baseFrequency * Math.pow(2, this._octaves), this.context.sampleRate / 2);\n\t\t    };\n\t\t    /**\n\t\t\t *  Clean up.\n\t\t\t *  @returns {Tone.AutoWah} this\n\t\t\t */\n\t\t    Tone.AutoWah.prototype.dispose = function () {\n\t\t        Tone.Effect.prototype.dispose.call(this);\n\t\t        this.follower.dispose();\n\t\t        this.follower = null;\n\t\t        this._sweepRange.dispose();\n\t\t        this._sweepRange = null;\n\t\t        this._bandpass.dispose();\n\t\t        this._bandpass = null;\n\t\t        this._peaking.dispose();\n\t\t        this._peaking = null;\n\t\t        this._inputBoost.dispose();\n\t\t        this._inputBoost = null;\n\t\t        this._writable([\n\t\t            'gain',\n\t\t            'Q'\n\t\t        ]);\n\t\t        this.gain = null;\n\t\t        this.Q = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.AutoWah;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Tone.Bitcrusher downsamples the incoming signal to a different bitdepth. \n\t\t\t *         Lowering the bitdepth of the signal creates distortion. Read more about Bitcrushing\n\t\t\t *         on [Wikipedia](https://en.wikipedia.org/wiki/Bitcrusher).\n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.Effect}\n\t\t\t *  @param {Number} bits The number of bits to downsample the signal. Nominal range\n\t\t\t *                       of 1 to 8. \n\t\t\t *  @example\n\t\t\t * //initialize crusher and route a synth through it\n\t\t\t * var crusher = new Tone.BitCrusher(4).toMaster();\n\t\t\t * var synth = new Tone.MonoSynth().connect(crusher);\n\t\t\t */\n\t\t    Tone.BitCrusher = function () {\n\t\t        var options = this.optionsObject(arguments, ['bits'], Tone.BitCrusher.defaults);\n\t\t        Tone.Effect.call(this, options);\n\t\t        var invStepSize = 1 / Math.pow(2, options.bits - 1);\n\t\t        /**\n\t\t\t\t *  Subtract the input signal and the modulus of the input signal\n\t\t\t\t *  @type {Tone.Subtract}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._subtract = new Tone.Subtract();\n\t\t        /**\n\t\t\t\t *  The mod function\n\t\t\t\t *  @type  {Tone.Modulo}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._modulo = new Tone.Modulo(invStepSize);\n\t\t        /**\n\t\t\t\t *  keeps track of the bits\n\t\t\t\t *  @type {number}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._bits = options.bits;\n\t\t        //connect it up\n\t\t        this.effectSend.fan(this._subtract, this._modulo);\n\t\t        this._modulo.connect(this._subtract, 0, 1);\n\t\t        this._subtract.connect(this.effectReturn);\n\t\t    };\n\t\t    Tone.extend(Tone.BitCrusher, Tone.Effect);\n\t\t    /**\n\t\t\t *  the default values\n\t\t\t *  @static\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.BitCrusher.defaults = { 'bits': 4 };\n\t\t    /**\n\t\t\t * The bit depth of the effect. Nominal range of 1-8. \n\t\t\t * @memberOf Tone.BitCrusher#\n\t\t\t * @type {number}\n\t\t\t * @name bits\n\t\t\t */\n\t\t    Object.defineProperty(Tone.BitCrusher.prototype, 'bits', {\n\t\t        get: function () {\n\t\t            return this._bits;\n\t\t        },\n\t\t        set: function (bits) {\n\t\t            this._bits = bits;\n\t\t            var invStepSize = 1 / Math.pow(2, bits - 1);\n\t\t            this._modulo.value = invStepSize;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Clean up. \n\t\t\t *  @returns {Tone.BitCrusher} this\n\t\t\t */\n\t\t    Tone.BitCrusher.prototype.dispose = function () {\n\t\t        Tone.Effect.prototype.dispose.call(this);\n\t\t        this._subtract.dispose();\n\t\t        this._subtract = null;\n\t\t        this._modulo.dispose();\n\t\t        this._modulo = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.BitCrusher;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Tone.ChebyShev is a Chebyshev waveshaper, an effect which is good \n\t\t\t *         for making different types of distortion sounds.\n\t\t\t *         Note that odd orders sound very different from even ones, \n\t\t\t *         and order = 1 is no change. \n\t\t\t *         Read more at [music.columbia.edu](http://music.columbia.edu/cmc/musicandcomputers/chapter4/04_06.php).\n\t\t\t *\n\t\t\t *  @extends {Tone.Effect}\n\t\t\t *  @constructor\n\t\t\t *  @param {Positive|Object} [order] The order of the chebyshev polynomial. Normal range between 1-100. \n\t\t\t *  @example\n\t\t\t * //create a new cheby\n\t\t\t * var cheby = new Tone.Chebyshev(50);\n\t\t\t * //create a monosynth connected to our cheby\n\t\t\t * synth = new Tone.MonoSynth().connect(cheby);\n\t\t\t */\n\t\t    Tone.Chebyshev = function () {\n\t\t        var options = this.optionsObject(arguments, ['order'], Tone.Chebyshev.defaults);\n\t\t        Tone.Effect.call(this, options);\n\t\t        /**\n\t\t\t\t *  @type {WaveShaperNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._shaper = new Tone.WaveShaper(4096);\n\t\t        /**\n\t\t\t\t * holds onto the order of the filter\n\t\t\t\t * @type {number}\n\t\t\t\t * @private\n\t\t\t\t */\n\t\t        this._order = options.order;\n\t\t        this.connectEffect(this._shaper);\n\t\t        this.order = options.order;\n\t\t        this.oversample = options.oversample;\n\t\t    };\n\t\t    Tone.extend(Tone.Chebyshev, Tone.Effect);\n\t\t    /**\n\t\t\t *  @static\n\t\t\t *  @const\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.Chebyshev.defaults = {\n\t\t        'order': 1,\n\t\t        'oversample': 'none'\n\t\t    };\n\t\t    /**\n\t\t\t *  get the coefficient for that degree\n\t\t\t *  @param {number} x the x value\n\t\t\t *  @param   {number} degree \n\t\t\t *  @param {Object} memo memoize the computed value. \n\t\t\t *                       this speeds up computation greatly. \n\t\t\t *  @return  {number}       the coefficient \n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Chebyshev.prototype._getCoefficient = function (x, degree, memo) {\n\t\t        if (memo.hasOwnProperty(degree)) {\n\t\t            return memo[degree];\n\t\t        } else if (degree === 0) {\n\t\t            memo[degree] = 0;\n\t\t        } else if (degree === 1) {\n\t\t            memo[degree] = x;\n\t\t        } else {\n\t\t            memo[degree] = 2 * x * this._getCoefficient(x, degree - 1, memo) - this._getCoefficient(x, degree - 2, memo);\n\t\t        }\n\t\t        return memo[degree];\n\t\t    };\n\t\t    /**\n\t\t\t * The order of the Chebyshev polynomial which creates\n\t\t\t * the equation which is applied to the incoming \n\t\t\t * signal through a Tone.WaveShaper. The equations\n\t\t\t * are in the form:<br>\n\t\t\t * order 2: 2x^2 + 1<br>\n\t\t\t * order 3: 4x^3 + 3x <br>\n\t\t\t * @memberOf Tone.Chebyshev#\n\t\t\t * @type {Positive}\n\t\t\t * @name order\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Chebyshev.prototype, 'order', {\n\t\t        get: function () {\n\t\t            return this._order;\n\t\t        },\n\t\t        set: function (order) {\n\t\t            this._order = order;\n\t\t            var curve = new Array(4096);\n\t\t            var len = curve.length;\n\t\t            for (var i = 0; i < len; ++i) {\n\t\t                var x = i * 2 / len - 1;\n\t\t                if (x === 0) {\n\t\t                    //should output 0 when input is 0\n\t\t                    curve[i] = 0;\n\t\t                } else {\n\t\t                    curve[i] = this._getCoefficient(x, order, {});\n\t\t                }\n\t\t            }\n\t\t            this._shaper.curve = curve;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The oversampling of the effect. Can either be \"none\", \"2x\" or \"4x\".\n\t\t\t * @memberOf Tone.Chebyshev#\n\t\t\t * @type {string}\n\t\t\t * @name oversample\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Chebyshev.prototype, 'oversample', {\n\t\t        get: function () {\n\t\t            return this._shaper.oversample;\n\t\t        },\n\t\t        set: function (oversampling) {\n\t\t            this._shaper.oversample = oversampling;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Clean up. \n\t\t\t *  @returns {Tone.Chebyshev} this\n\t\t\t */\n\t\t    Tone.Chebyshev.prototype.dispose = function () {\n\t\t        Tone.Effect.prototype.dispose.call(this);\n\t\t        this._shaper.dispose();\n\t\t        this._shaper = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Chebyshev;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Base class for Stereo effects. Provides effectSendL/R and effectReturnL/R. \n\t\t\t *\n\t\t\t *\t@constructor\n\t\t\t *\t@extends {Tone.Effect}\n\t\t\t */\n\t\t    Tone.StereoEffect = function () {\n\t\t        this.createInsOuts(1, 1);\n\t\t        //get the defaults\n\t\t        var options = this.optionsObject(arguments, ['wet'], Tone.Effect.defaults);\n\t\t        /**\n\t\t\t\t *  the drywet knob to control the amount of effect\n\t\t\t\t *  @type {Tone.CrossFade}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._dryWet = new Tone.CrossFade(options.wet);\n\t\t        /**\n\t\t\t\t *  The wet control, i.e. how much of the effected\n\t\t\t\t *  will pass through to the output. \n\t\t\t\t *  @type {NormalRange}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.wet = this._dryWet.fade;\n\t\t        /**\n\t\t\t\t *  then split it\n\t\t\t\t *  @type {Tone.Split}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._split = new Tone.Split();\n\t\t        /**\n\t\t\t\t *  the effects send LEFT\n\t\t\t\t *  @type {GainNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this.effectSendL = this._split.left;\n\t\t        /**\n\t\t\t\t *  the effects send RIGHT\n\t\t\t\t *  @type {GainNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this.effectSendR = this._split.right;\n\t\t        /**\n\t\t\t\t *  the stereo effect merger\n\t\t\t\t *  @type {Tone.Merge}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._merge = new Tone.Merge();\n\t\t        /**\n\t\t\t\t *  the effect return LEFT\n\t\t\t\t *  @type {GainNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this.effectReturnL = this._merge.left;\n\t\t        /**\n\t\t\t\t *  the effect return RIGHT\n\t\t\t\t *  @type {GainNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this.effectReturnR = this._merge.right;\n\t\t        //connections\n\t\t        this.input.connect(this._split);\n\t\t        //dry wet connections\n\t\t        this.input.connect(this._dryWet, 0, 0);\n\t\t        this._merge.connect(this._dryWet, 0, 1);\n\t\t        this._dryWet.connect(this.output);\n\t\t        this._readOnly(['wet']);\n\t\t    };\n\t\t    Tone.extend(Tone.StereoEffect, Tone.Effect);\n\t\t    /**\n\t\t\t *  Clean up. \n\t\t\t *  @returns {Tone.StereoEffect} this\n\t\t\t */\n\t\t    Tone.StereoEffect.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._dryWet.dispose();\n\t\t        this._dryWet = null;\n\t\t        this._split.dispose();\n\t\t        this._split = null;\n\t\t        this._merge.dispose();\n\t\t        this._merge = null;\n\t\t        this.effectSendL = null;\n\t\t        this.effectSendR = null;\n\t\t        this.effectReturnL = null;\n\t\t        this.effectReturnR = null;\n\t\t        this._writable(['wet']);\n\t\t        this.wet = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.StereoEffect;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t * \t@class  Tone.FeedbackEffect provides a loop between an \n\t\t\t * \t        audio source and its own output. This is a base-class\n\t\t\t * \t        for feedback effects. \n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.Effect}\n\t\t\t *  @param {NormalRange|Object} [feedback] The initial feedback value.\n\t\t\t */\n\t\t    Tone.FeedbackEffect = function () {\n\t\t        var options = this.optionsObject(arguments, ['feedback']);\n\t\t        options = this.defaultArg(options, Tone.FeedbackEffect.defaults);\n\t\t        Tone.Effect.call(this, options);\n\t\t        /**\n\t\t\t\t *  the gain which controls the feedback\n\t\t\t\t *  @type {Tone.Gain}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._feedbackGain = new Tone.Gain(options.feedback, Tone.Type.NormalRange);\n\t\t        /**\n\t\t\t\t *  The amount of signal which is fed back into the effect input. \n\t\t\t\t *  @type {NormalRange}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.feedback = this._feedbackGain.gain;\n\t\t        //the feedback loop\n\t\t        this.effectReturn.chain(this._feedbackGain, this.effectSend);\n\t\t        this._readOnly(['feedback']);\n\t\t    };\n\t\t    Tone.extend(Tone.FeedbackEffect, Tone.Effect);\n\t\t    /**\n\t\t\t *  @static\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.FeedbackEffect.defaults = { 'feedback': 0.125 };\n\t\t    /**\n\t\t\t *  Clean up. \n\t\t\t *  @returns {Tone.FeedbackEffect} this\n\t\t\t */\n\t\t    Tone.FeedbackEffect.prototype.dispose = function () {\n\t\t        Tone.Effect.prototype.dispose.call(this);\n\t\t        this._writable(['feedback']);\n\t\t        this._feedbackGain.dispose();\n\t\t        this._feedbackGain = null;\n\t\t        this.feedback = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.FeedbackEffect;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Just like a stereo feedback effect, but the feedback is routed from left to right\n\t\t\t *         and right to left instead of on the same channel.\n\t\t\t *\n\t\t\t *\t@constructor\n\t\t\t *\t@extends {Tone.FeedbackEffect}\n\t\t\t */\n\t\t    Tone.StereoXFeedbackEffect = function () {\n\t\t        var options = this.optionsObject(arguments, ['feedback'], Tone.FeedbackEffect.defaults);\n\t\t        Tone.StereoEffect.call(this, options);\n\t\t        /**\n\t\t\t\t *  The amount of feedback from the output\n\t\t\t\t *  back into the input of the effect (routed\n\t\t\t\t *  across left and right channels).\n\t\t\t\t *  @type {NormalRange}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.feedback = new Tone.Signal(options.feedback, Tone.Type.NormalRange);\n\t\t        /**\n\t\t\t\t *  the left side feeback\n\t\t\t\t *  @type {Tone.Gain}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._feedbackLR = new Tone.Gain();\n\t\t        /**\n\t\t\t\t *  the right side feeback\n\t\t\t\t *  @type {Tone.Gain}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._feedbackRL = new Tone.Gain();\n\t\t        //connect it up\n\t\t        this.effectReturnL.chain(this._feedbackLR, this.effectSendR);\n\t\t        this.effectReturnR.chain(this._feedbackRL, this.effectSendL);\n\t\t        this.feedback.fan(this._feedbackLR.gain, this._feedbackRL.gain);\n\t\t        this._readOnly(['feedback']);\n\t\t    };\n\t\t    Tone.extend(Tone.StereoXFeedbackEffect, Tone.FeedbackEffect);\n\t\t    /**\n\t\t\t *  clean up\n\t\t\t *  @returns {Tone.StereoXFeedbackEffect} this\n\t\t\t */\n\t\t    Tone.StereoXFeedbackEffect.prototype.dispose = function () {\n\t\t        Tone.StereoEffect.prototype.dispose.call(this);\n\t\t        this._writable(['feedback']);\n\t\t        this.feedback.dispose();\n\t\t        this.feedback = null;\n\t\t        this._feedbackLR.dispose();\n\t\t        this._feedbackLR = null;\n\t\t        this._feedbackRL.dispose();\n\t\t        this._feedbackRL = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.StereoXFeedbackEffect;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Tone.Chorus is a stereo chorus effect with feedback composed of \n\t\t\t *         a left and right delay with a Tone.LFO applied to the delayTime of each channel. \n\t\t\t *         Inspiration from [Tuna.js](https://github.com/Dinahmoe/tuna/blob/master/tuna.js).\n\t\t\t *         Read more on the chorus effect on [SoundOnSound](http://www.soundonsound.com/sos/jun04/articles/synthsecrets.htm).\n\t\t\t *\n\t\t\t *\t@constructor\n\t\t\t *\t@extends {Tone.StereoXFeedbackEffect}\n\t\t\t *\t@param {Frequency|Object} [frequency] The frequency of the LFO.\n\t\t\t *\t@param {Milliseconds} [delayTime] The delay of the chorus effect in ms. \n\t\t\t *\t@param {NormalRange} [depth] The depth of the chorus.\n\t\t\t *\t@example\n\t\t\t * var chorus = new Tone.Chorus(4, 2.5, 0.5);\n\t\t\t * var synth = new Tone.PolySynth(4, Tone.MonoSynth).connect(chorus);\n\t\t\t * synth.triggerAttackRelease([\"C3\",\"E3\",\"G3\"], \"8n\");\n\t\t\t */\n\t\t    Tone.Chorus = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'frequency',\n\t\t            'delayTime',\n\t\t            'depth'\n\t\t        ], Tone.Chorus.defaults);\n\t\t        Tone.StereoXFeedbackEffect.call(this, options);\n\t\t        /**\n\t\t\t\t *  the depth of the chorus\n\t\t\t\t *  @type {number}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._depth = options.depth;\n\t\t        /**\n\t\t\t\t *  the delayTime\n\t\t\t\t *  @type {number}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._delayTime = options.delayTime / 1000;\n\t\t        /**\n\t\t\t\t *  the lfo which controls the delayTime\n\t\t\t\t *  @type {Tone.LFO}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._lfoL = new Tone.LFO({\n\t\t            'frequency': options.frequency,\n\t\t            'min': 0,\n\t\t            'max': 1\n\t\t        });\n\t\t        /**\n\t\t\t\t *  another LFO for the right side with a 180 degree phase diff\n\t\t\t\t *  @type {Tone.LFO}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._lfoR = new Tone.LFO({\n\t\t            'frequency': options.frequency,\n\t\t            'min': 0,\n\t\t            'max': 1,\n\t\t            'phase': 180\n\t\t        });\n\t\t        /**\n\t\t\t\t *  delay for left\n\t\t\t\t *  @type {Tone.Delay}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._delayNodeL = new Tone.Delay();\n\t\t        /**\n\t\t\t\t *  delay for right\n\t\t\t\t *  @type {Tone.Delay}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._delayNodeR = new Tone.Delay();\n\t\t        /**\n\t\t\t\t * The frequency of the LFO which modulates the delayTime. \n\t\t\t\t * @type {Frequency}\n\t\t\t\t * @signal\n\t\t\t\t */\n\t\t        this.frequency = this._lfoL.frequency;\n\t\t        //connections\n\t\t        this.effectSendL.chain(this._delayNodeL, this.effectReturnL);\n\t\t        this.effectSendR.chain(this._delayNodeR, this.effectReturnR);\n\t\t        //and pass through to make the detune apparent\n\t\t        this.effectSendL.connect(this.effectReturnL);\n\t\t        this.effectSendR.connect(this.effectReturnR);\n\t\t        //lfo setup\n\t\t        this._lfoL.connect(this._delayNodeL.delayTime);\n\t\t        this._lfoR.connect(this._delayNodeR.delayTime);\n\t\t        //start the lfo\n\t\t        this._lfoL.start();\n\t\t        this._lfoR.start();\n\t\t        //have one LFO frequency control the other\n\t\t        this._lfoL.frequency.connect(this._lfoR.frequency);\n\t\t        //set the initial values\n\t\t        this.depth = this._depth;\n\t\t        this.frequency.value = options.frequency;\n\t\t        this.type = options.type;\n\t\t        this._readOnly(['frequency']);\n\t\t        this.spread = options.spread;\n\t\t    };\n\t\t    Tone.extend(Tone.Chorus, Tone.StereoXFeedbackEffect);\n\t\t    /**\n\t\t\t *  @static\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.Chorus.defaults = {\n\t\t        'frequency': 1.5,\n\t\t        'delayTime': 3.5,\n\t\t        'depth': 0.7,\n\t\t        'feedback': 0.1,\n\t\t        'type': 'sine',\n\t\t        'spread': 180\n\t\t    };\n\t\t    /**\n\t\t\t * The depth of the effect. A depth of 1 makes the delayTime\n\t\t\t * modulate between 0 and 2*delayTime (centered around the delayTime). \n\t\t\t * @memberOf Tone.Chorus#\n\t\t\t * @type {NormalRange}\n\t\t\t * @name depth\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Chorus.prototype, 'depth', {\n\t\t        get: function () {\n\t\t            return this._depth;\n\t\t        },\n\t\t        set: function (depth) {\n\t\t            this._depth = depth;\n\t\t            var deviation = this._delayTime * depth;\n\t\t            this._lfoL.min = Math.max(this._delayTime - deviation, 0);\n\t\t            this._lfoL.max = this._delayTime + deviation;\n\t\t            this._lfoR.min = Math.max(this._delayTime - deviation, 0);\n\t\t            this._lfoR.max = this._delayTime + deviation;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The delayTime in milliseconds of the chorus. A larger delayTime\n\t\t\t * will give a more pronounced effect. Nominal range a delayTime\n\t\t\t * is between 2 and 20ms. \n\t\t\t * @memberOf Tone.Chorus#\n\t\t\t * @type {Milliseconds}\n\t\t\t * @name delayTime\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Chorus.prototype, 'delayTime', {\n\t\t        get: function () {\n\t\t            return this._delayTime * 1000;\n\t\t        },\n\t\t        set: function (delayTime) {\n\t\t            this._delayTime = delayTime / 1000;\n\t\t            this.depth = this._depth;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The oscillator type of the LFO. \n\t\t\t * @memberOf Tone.Chorus#\n\t\t\t * @type {string}\n\t\t\t * @name type\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Chorus.prototype, 'type', {\n\t\t        get: function () {\n\t\t            return this._lfoL.type;\n\t\t        },\n\t\t        set: function (type) {\n\t\t            this._lfoL.type = type;\n\t\t            this._lfoR.type = type;\n\t\t        }\n\t\t    });\n\t\t    /** \n\t\t\t * Amount of stereo spread. When set to 0, both LFO's will be panned centrally.\n\t\t\t * When set to 180, LFO's will be panned hard left and right respectively.\n\t\t\t * @memberOf Tone.Chorus#\n\t\t\t * @type {Degrees}\n\t\t\t * @name spread\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Chorus.prototype, 'spread', {\n\t\t        get: function () {\n\t\t            return this._lfoR.phase - this._lfoL.phase;    //180\n\t\t        },\n\t\t        set: function (spread) {\n\t\t            this._lfoL.phase = 90 - spread / 2;\n\t\t            this._lfoR.phase = spread / 2 + 90;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Clean up. \n\t\t\t *  @returns {Tone.Chorus} this\n\t\t\t */\n\t\t    Tone.Chorus.prototype.dispose = function () {\n\t\t        Tone.StereoXFeedbackEffect.prototype.dispose.call(this);\n\t\t        this._lfoL.dispose();\n\t\t        this._lfoL = null;\n\t\t        this._lfoR.dispose();\n\t\t        this._lfoR = null;\n\t\t        this._delayNodeL.dispose();\n\t\t        this._delayNodeL = null;\n\t\t        this._delayNodeR.dispose();\n\t\t        this._delayNodeR = null;\n\t\t        this._writable('frequency');\n\t\t        this.frequency = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Chorus;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  Tone.Convolver is a wrapper around the Native Web Audio \n\t\t\t *          [ConvolverNode](http://webaudio.github.io/web-audio-api/#the-convolvernode-interface).\n\t\t\t *          Convolution is useful for reverb and filter emulation. Read more about convolution reverb on\n\t\t\t *          [Wikipedia](https://en.wikipedia.org/wiki/Convolution_reverb).\n\t\t\t *  \n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.Effect}\n\t\t\t *  @param {string|Tone.Buffer|Object} [url] The URL of the impulse response or the Tone.Buffer\n\t\t\t *                                           contianing the impulse response. \n\t\t\t *  @param {Function} onload The callback to invoke when the url is loaded.\n\t\t\t *  @example\n\t\t\t * //initializing the convolver with an impulse response\n\t\t\t * var convolver = new Tone.Convolver(\"./path/to/ir.wav\").toMaster();\n\t\t\t */\n\t\t    Tone.Convolver = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'url',\n\t\t            'onload'\n\t\t        ], Tone.Convolver.defaults);\n\t\t        Tone.Effect.call(this, options);\n\t\t        /**\n\t\t\t\t *  convolver node\n\t\t\t\t *  @type {ConvolverNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._convolver = this.context.createConvolver();\n\t\t        /**\n\t\t\t\t *  the convolution buffer\n\t\t\t\t *  @type {Tone.Buffer}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._buffer = new Tone.Buffer();\n\t\t        if (this.isString(options.url)) {\n\t\t            this._buffer.load(options.url, function (buffer) {\n\t\t                this.buffer = buffer;\n\t\t                options.onload();\n\t\t            }.bind(this));\n\t\t        } else if (options.url) {\n\t\t            this.buffer = options.url;\n\t\t            options.onload();\n\t\t        }\n\t\t        this.connectEffect(this._convolver);\n\t\t    };\n\t\t    Tone.extend(Tone.Convolver, Tone.Effect);\n\t\t    /**\n\t\t\t *  @static\n\t\t\t *  @const\n\t\t\t *  @type  {Object}\n\t\t\t */\n\t\t    Tone.Convolver.defaults = { 'onload': Tone.noOp };\n\t\t    /**\n\t\t\t *  The convolver's buffer\n\t\t\t *  @memberOf Tone.Convolver#\n\t\t\t *  @type {AudioBuffer}\n\t\t\t *  @name buffer\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Convolver.prototype, 'buffer', {\n\t\t        get: function () {\n\t\t            return this._buffer.get();\n\t\t        },\n\t\t        set: function (buffer) {\n\t\t            this._buffer.set(buffer);\n\t\t            this._convolver.buffer = this._buffer.get();\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Load an impulse response url as an audio buffer.\n\t\t\t *  Decodes the audio asynchronously and invokes\n\t\t\t *  the callback once the audio buffer loads.\n\t\t\t *  @param {string} url The url of the buffer to load.\n\t\t\t *                      filetype support depends on the\n\t\t\t *                      browser.\n\t\t\t *  @param  {function=} callback\n\t\t\t *  @returns {Promise}\n\t\t\t */\n\t\t    Tone.Convolver.prototype.load = function (url, callback) {\n\t\t        return this._buffer.load(url, function (buff) {\n\t\t            this.buffer = buff;\n\t\t            if (callback) {\n\t\t                callback();\n\t\t            }\n\t\t        }.bind(this));\n\t\t    };\n\t\t    /**\n\t\t\t *  Clean up. \n\t\t\t *  @returns {Tone.Convolver} this\n\t\t\t */\n\t\t    Tone.Convolver.prototype.dispose = function () {\n\t\t        Tone.Effect.prototype.dispose.call(this);\n\t\t        this._convolver.disconnect();\n\t\t        this._convolver = null;\n\t\t        this._buffer.dispose();\n\t\t        this._buffer = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Convolver;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Tone.Distortion is a simple distortion effect using Tone.WaveShaper.\n\t\t\t *         Algorithm from [a stackoverflow answer](http://stackoverflow.com/a/22313408).\n\t\t\t *\n\t\t\t *  @extends {Tone.Effect}\n\t\t\t *  @constructor\n\t\t\t *  @param {Number|Object} [distortion] The amount of distortion (nominal range of 0-1)\n\t\t\t *  @example\n\t\t\t * var dist = new Tone.Distortion(0.8).toMaster();\n\t\t\t * var fm = new Tone.SimpleFM().connect(dist);\n\t\t\t * //this sounds good on bass notes\n\t\t\t * fm.triggerAttackRelease(\"A1\", \"8n\");\n\t\t\t */\n\t\t    Tone.Distortion = function () {\n\t\t        var options = this.optionsObject(arguments, ['distortion'], Tone.Distortion.defaults);\n\t\t        Tone.Effect.call(this, options);\n\t\t        /**\n\t\t\t\t *  @type {Tone.WaveShaper}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._shaper = new Tone.WaveShaper(4096);\n\t\t        /**\n\t\t\t\t * holds the distortion amount\n\t\t\t\t * @type {number}\n\t\t\t\t * @private\n\t\t\t\t */\n\t\t        this._distortion = options.distortion;\n\t\t        this.connectEffect(this._shaper);\n\t\t        this.distortion = options.distortion;\n\t\t        this.oversample = options.oversample;\n\t\t    };\n\t\t    Tone.extend(Tone.Distortion, Tone.Effect);\n\t\t    /**\n\t\t\t *  @static\n\t\t\t *  @const\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.Distortion.defaults = {\n\t\t        'distortion': 0.4,\n\t\t        'oversample': 'none'\n\t\t    };\n\t\t    /**\n\t\t\t * The amount of distortion.\n\t\t\t * @memberOf Tone.Distortion#\n\t\t\t * @type {NormalRange}\n\t\t\t * @name distortion\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Distortion.prototype, 'distortion', {\n\t\t        get: function () {\n\t\t            return this._distortion;\n\t\t        },\n\t\t        set: function (amount) {\n\t\t            this._distortion = amount;\n\t\t            var k = amount * 100;\n\t\t            var deg = Math.PI / 180;\n\t\t            this._shaper.setMap(function (x) {\n\t\t                if (Math.abs(x) < 0.001) {\n\t\t                    //should output 0 when input is 0\n\t\t                    return 0;\n\t\t                } else {\n\t\t                    return (3 + k) * x * 20 * deg / (Math.PI + k * Math.abs(x));\n\t\t                }\n\t\t            });\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The oversampling of the effect. Can either be \"none\", \"2x\" or \"4x\".\n\t\t\t * @memberOf Tone.Distortion#\n\t\t\t * @type {string}\n\t\t\t * @name oversample\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Distortion.prototype, 'oversample', {\n\t\t        get: function () {\n\t\t            return this._shaper.oversample;\n\t\t        },\n\t\t        set: function (oversampling) {\n\t\t            this._shaper.oversample = oversampling;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Clean up. \n\t\t\t *  @returns {Tone.Distortion} this\n\t\t\t */\n\t\t    Tone.Distortion.prototype.dispose = function () {\n\t\t        Tone.Effect.prototype.dispose.call(this);\n\t\t        this._shaper.dispose();\n\t\t        this._shaper = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Distortion;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  Tone.FeedbackDelay is a DelayNode in which part of output\n\t\t\t *          signal is fed back into the delay. \n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.FeedbackEffect}\n\t\t\t *  @param {Time|Object} [delayTime] The delay applied to the incoming signal. \n\t\t\t *  @param {NormalRange=} feedback The amount of the effected signal which \n\t\t\t *                            is fed back through the delay.\n\t\t\t *  @example\n\t\t\t * var feedbackDelay = new Tone.FeedbackDelay(\"8n\", 0.5).toMaster();\n\t\t\t * var tom = new Tone.DrumSynth({\n\t\t\t * \t\"octaves\" : 4,\n\t\t\t * \t\"pitchDecay\" : 0.1\n\t\t\t * }).connect(feedbackDelay);\n\t\t\t * tom.triggerAttackRelease(\"A2\",\"32n\");\n\t\t\t */\n\t\t    Tone.FeedbackDelay = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'delayTime',\n\t\t            'feedback'\n\t\t        ], Tone.FeedbackDelay.defaults);\n\t\t        Tone.FeedbackEffect.call(this, options);\n\t\t        /**\n\t\t\t\t *  the delay node\n\t\t\t\t *  @type {Tone.Delay}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._delayNode = new Tone.Delay(options.delayTime);\n\t\t        /**\n\t\t\t\t *  The delayTime of the DelayNode. \n\t\t\t\t *  @type {Time}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.delayTime = this._delayNode.delayTime;\n\t\t        // connect it up\n\t\t        this.connectEffect(this._delayNode);\n\t\t        this._readOnly(['delayTime']);\n\t\t    };\n\t\t    Tone.extend(Tone.FeedbackDelay, Tone.FeedbackEffect);\n\t\t    /**\n\t\t\t *  The default values. \n\t\t\t *  @const\n\t\t\t *  @static\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.FeedbackDelay.defaults = { 'delayTime': 0.25 };\n\t\t    /**\n\t\t\t *  clean up\n\t\t\t *  @returns {Tone.FeedbackDelay} this\n\t\t\t */\n\t\t    Tone.FeedbackDelay.prototype.dispose = function () {\n\t\t        Tone.FeedbackEffect.prototype.dispose.call(this);\n\t\t        this._delayNode.dispose();\n\t\t        this._delayNode = null;\n\t\t        this._writable(['delayTime']);\n\t\t        this.delayTime = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.FeedbackDelay;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  an array of comb filter delay values from Freeverb implementation\n\t\t\t *  @static\n\t\t\t *  @private\n\t\t\t *  @type {Array}\n\t\t\t */\n\t\t    var combFilterTunings = [\n\t\t        1557 / 44100,\n\t\t        1617 / 44100,\n\t\t        1491 / 44100,\n\t\t        1422 / 44100,\n\t\t        1277 / 44100,\n\t\t        1356 / 44100,\n\t\t        1188 / 44100,\n\t\t        1116 / 44100\n\t\t    ];\n\t\t    /**\n\t\t\t *  an array of allpass filter frequency values from Freeverb implementation\n\t\t\t *  @private\n\t\t\t *  @static\n\t\t\t *  @type {Array}\n\t\t\t */\n\t\t    var allpassFilterFrequencies = [\n\t\t        225,\n\t\t        556,\n\t\t        441,\n\t\t        341\n\t\t    ];\n\t\t    /**\n\t\t\t *  @class Tone.Freeverb is a reverb based on [Freeverb](https://ccrma.stanford.edu/~jos/pasp/Freeverb.html).\n\t\t\t *         Read more on reverb on [SoundOnSound](http://www.soundonsound.com/sos/may00/articles/reverb.htm).\n\t\t\t *\n\t\t\t *  @extends {Tone.Effect}\n\t\t\t *  @constructor\n\t\t\t *  @param {NormalRange|Object} [roomSize] Correlated to the decay time. \n\t\t\t *  @param {Frequency} [dampening] The cutoff frequency of a lowpass filter as part \n\t\t\t *                                 of the reverb. \n\t\t\t *  @example\n\t\t\t * var freeverb = new Tone.Freeverb().toMaster();\n\t\t\t * freeverb.dampening.value = 1000;\n\t\t\t * //routing synth through the reverb\n\t\t\t * var synth = new Tone.AMSynth().connect(freeverb);\n\t\t\t */\n\t\t    Tone.Freeverb = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'roomSize',\n\t\t            'dampening'\n\t\t        ], Tone.Freeverb.defaults);\n\t\t        Tone.StereoEffect.call(this, options);\n\t\t        /**\n\t\t\t\t *  The roomSize value between. A larger roomSize\n\t\t\t\t *  will result in a longer decay. \n\t\t\t\t *  @type {NormalRange}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.roomSize = new Tone.Signal(options.roomSize, Tone.Type.NormalRange);\n\t\t        /**\n\t\t\t\t *  The amount of dampening of the reverberant signal. \n\t\t\t\t *  @type {Frequency}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.dampening = new Tone.Signal(options.dampening, Tone.Type.Frequency);\n\t\t        /**\n\t\t\t\t *  the comb filters\n\t\t\t\t *  @type {Array}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._combFilters = [];\n\t\t        /**\n\t\t\t\t *  the allpass filters on the left\n\t\t\t\t *  @type {Array}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._allpassFiltersL = [];\n\t\t        /**\n\t\t\t\t *  the allpass filters on the right\n\t\t\t\t *  @type {Array}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._allpassFiltersR = [];\n\t\t        //make the allpass filters on the right\n\t\t        for (var l = 0; l < allpassFilterFrequencies.length; l++) {\n\t\t            var allpassL = this.context.createBiquadFilter();\n\t\t            allpassL.type = 'allpass';\n\t\t            allpassL.frequency.value = allpassFilterFrequencies[l];\n\t\t            this._allpassFiltersL.push(allpassL);\n\t\t        }\n\t\t        //make the allpass filters on the left\n\t\t        for (var r = 0; r < allpassFilterFrequencies.length; r++) {\n\t\t            var allpassR = this.context.createBiquadFilter();\n\t\t            allpassR.type = 'allpass';\n\t\t            allpassR.frequency.value = allpassFilterFrequencies[r];\n\t\t            this._allpassFiltersR.push(allpassR);\n\t\t        }\n\t\t        //make the comb filters\n\t\t        for (var c = 0; c < combFilterTunings.length; c++) {\n\t\t            var lfpf = new Tone.LowpassCombFilter(combFilterTunings[c]);\n\t\t            if (c < combFilterTunings.length / 2) {\n\t\t                this.effectSendL.chain(lfpf, this._allpassFiltersL[0]);\n\t\t            } else {\n\t\t                this.effectSendR.chain(lfpf, this._allpassFiltersR[0]);\n\t\t            }\n\t\t            this.roomSize.connect(lfpf.resonance);\n\t\t            this.dampening.connect(lfpf.dampening);\n\t\t            this._combFilters.push(lfpf);\n\t\t        }\n\t\t        //chain the allpass filters togetehr\n\t\t        this.connectSeries.apply(this, this._allpassFiltersL);\n\t\t        this.connectSeries.apply(this, this._allpassFiltersR);\n\t\t        this._allpassFiltersL[this._allpassFiltersL.length - 1].connect(this.effectReturnL);\n\t\t        this._allpassFiltersR[this._allpassFiltersR.length - 1].connect(this.effectReturnR);\n\t\t        this._readOnly([\n\t\t            'roomSize',\n\t\t            'dampening'\n\t\t        ]);\n\t\t    };\n\t\t    Tone.extend(Tone.Freeverb, Tone.StereoEffect);\n\t\t    /**\n\t\t\t *  @static\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.Freeverb.defaults = {\n\t\t        'roomSize': 0.7,\n\t\t        'dampening': 3000\n\t\t    };\n\t\t    /**\n\t\t\t *  Clean up. \n\t\t\t *  @returns {Tone.Freeverb} this\n\t\t\t */\n\t\t    Tone.Freeverb.prototype.dispose = function () {\n\t\t        Tone.StereoEffect.prototype.dispose.call(this);\n\t\t        for (var al = 0; al < this._allpassFiltersL.length; al++) {\n\t\t            this._allpassFiltersL[al].disconnect();\n\t\t            this._allpassFiltersL[al] = null;\n\t\t        }\n\t\t        this._allpassFiltersL = null;\n\t\t        for (var ar = 0; ar < this._allpassFiltersR.length; ar++) {\n\t\t            this._allpassFiltersR[ar].disconnect();\n\t\t            this._allpassFiltersR[ar] = null;\n\t\t        }\n\t\t        this._allpassFiltersR = null;\n\t\t        for (var cf = 0; cf < this._combFilters.length; cf++) {\n\t\t            this._combFilters[cf].dispose();\n\t\t            this._combFilters[cf] = null;\n\t\t        }\n\t\t        this._combFilters = null;\n\t\t        this._writable([\n\t\t            'roomSize',\n\t\t            'dampening'\n\t\t        ]);\n\t\t        this.roomSize.dispose();\n\t\t        this.roomSize = null;\n\t\t        this.dampening.dispose();\n\t\t        this.dampening = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Freeverb;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  an array of the comb filter delay time values\n\t\t\t *  @private\n\t\t\t *  @static\n\t\t\t *  @type {Array}\n\t\t\t */\n\t\t    var combFilterDelayTimes = [\n\t\t        1687 / 25000,\n\t\t        1601 / 25000,\n\t\t        2053 / 25000,\n\t\t        2251 / 25000\n\t\t    ];\n\t\t    /**\n\t\t\t *  the resonances of each of the comb filters\n\t\t\t *  @private\n\t\t\t *  @static\n\t\t\t *  @type {Array}\n\t\t\t */\n\t\t    var combFilterResonances = [\n\t\t        0.773,\n\t\t        0.802,\n\t\t        0.753,\n\t\t        0.733\n\t\t    ];\n\t\t    /**\n\t\t\t *  the allpass filter frequencies\n\t\t\t *  @private\n\t\t\t *  @static\n\t\t\t *  @type {Array}\n\t\t\t */\n\t\t    var allpassFilterFreqs = [\n\t\t        347,\n\t\t        113,\n\t\t        37\n\t\t    ];\n\t\t    /**\n\t\t\t *  @class Tone.JCReverb is a simple [Schroeder Reverberator](https://ccrma.stanford.edu/~jos/pasp/Schroeder_Reverberators.html)\n\t\t\t *         tuned by John Chowning in 1970.\n\t\t\t *         It is made up of three allpass filters and four Tone.FeedbackCombFilter. \n\t\t\t *         \n\t\t\t *\n\t\t\t *  @extends {Tone.Effect}\n\t\t\t *  @constructor\n\t\t\t *  @param {NormalRange|Object} [roomSize] Coorelates to the decay time.\n\t\t\t *  @example\n\t\t\t * var reverb = new Tone.JCReverb(0.4).connect(Tone.Master);\n\t\t\t * var delay = new Tone.FeedbackDelay(0.5); \n\t\t\t * //connecting the synth to reverb through delay\n\t\t\t * var synth = new Tone.DuoSynth().chain(delay, reverb);\n\t\t\t * synth.triggerAttackRelease(\"A4\",\"8n\");\n\t\t\t */\n\t\t    Tone.JCReverb = function () {\n\t\t        var options = this.optionsObject(arguments, ['roomSize'], Tone.JCReverb.defaults);\n\t\t        Tone.StereoEffect.call(this, options);\n\t\t        /**\n\t\t\t\t *  room size control values between [0,1]\n\t\t\t\t *  @type {NormalRange}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.roomSize = new Tone.Signal(options.roomSize, Tone.Type.NormalRange);\n\t\t        /**\n\t\t\t\t *  scale the room size\n\t\t\t\t *  @type {Tone.Scale}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._scaleRoomSize = new Tone.Scale(-0.733, 0.197);\n\t\t        /**\n\t\t\t\t *  a series of allpass filters\n\t\t\t\t *  @type {Array}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._allpassFilters = [];\n\t\t        /**\n\t\t\t\t *  parallel feedback comb filters\n\t\t\t\t *  @type {Array}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._feedbackCombFilters = [];\n\t\t        //make the allpass filters\n\t\t        for (var af = 0; af < allpassFilterFreqs.length; af++) {\n\t\t            var allpass = this.context.createBiquadFilter();\n\t\t            allpass.type = 'allpass';\n\t\t            allpass.frequency.value = allpassFilterFreqs[af];\n\t\t            this._allpassFilters.push(allpass);\n\t\t        }\n\t\t        //and the comb filters\n\t\t        for (var cf = 0; cf < combFilterDelayTimes.length; cf++) {\n\t\t            var fbcf = new Tone.FeedbackCombFilter(combFilterDelayTimes[cf], 0.1);\n\t\t            this._scaleRoomSize.connect(fbcf.resonance);\n\t\t            fbcf.resonance.value = combFilterResonances[cf];\n\t\t            this._allpassFilters[this._allpassFilters.length - 1].connect(fbcf);\n\t\t            if (cf < combFilterDelayTimes.length / 2) {\n\t\t                fbcf.connect(this.effectReturnL);\n\t\t            } else {\n\t\t                fbcf.connect(this.effectReturnR);\n\t\t            }\n\t\t            this._feedbackCombFilters.push(fbcf);\n\t\t        }\n\t\t        //chain the allpass filters together\n\t\t        this.roomSize.connect(this._scaleRoomSize);\n\t\t        this.connectSeries.apply(this, this._allpassFilters);\n\t\t        this.effectSendL.connect(this._allpassFilters[0]);\n\t\t        this.effectSendR.connect(this._allpassFilters[0]);\n\t\t        this._readOnly(['roomSize']);\n\t\t    };\n\t\t    Tone.extend(Tone.JCReverb, Tone.StereoEffect);\n\t\t    /**\n\t\t\t *  the default values\n\t\t\t *  @static\n\t\t\t *  @const\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.JCReverb.defaults = { 'roomSize': 0.5 };\n\t\t    /**\n\t\t\t *  Clean up. \n\t\t\t *  @returns {Tone.JCReverb} this\n\t\t\t */\n\t\t    Tone.JCReverb.prototype.dispose = function () {\n\t\t        Tone.StereoEffect.prototype.dispose.call(this);\n\t\t        for (var apf = 0; apf < this._allpassFilters.length; apf++) {\n\t\t            this._allpassFilters[apf].disconnect();\n\t\t            this._allpassFilters[apf] = null;\n\t\t        }\n\t\t        this._allpassFilters = null;\n\t\t        for (var fbcf = 0; fbcf < this._feedbackCombFilters.length; fbcf++) {\n\t\t            this._feedbackCombFilters[fbcf].dispose();\n\t\t            this._feedbackCombFilters[fbcf] = null;\n\t\t        }\n\t\t        this._feedbackCombFilters = null;\n\t\t        this._writable(['roomSize']);\n\t\t        this.roomSize.dispose();\n\t\t        this.roomSize = null;\n\t\t        this._scaleRoomSize.dispose();\n\t\t        this._scaleRoomSize = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.JCReverb;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Mid/Side processing separates the the 'mid' signal \n\t\t\t *         (which comes out of both the left and the right channel) \n\t\t\t *         and the 'side' (which only comes out of the the side channels) \n\t\t\t *         and effects them separately before being recombined.\n\t\t\t *         Applies a Mid/Side seperation and recombination.\n\t\t\t *         Algorithm found in [kvraudio forums](http://www.kvraudio.com/forum/viewtopic.php?t=212587).\n\t\t\t *         <br><br>\n\t\t\t *         This is a base-class for Mid/Side Effects. \n\t\t\t *\n\t\t\t *  @extends {Tone.Effect}\n\t\t\t *  @constructor\n\t\t\t */\n\t\t    Tone.MidSideEffect = function () {\n\t\t        Tone.Effect.apply(this, arguments);\n\t\t        /**\n\t\t\t\t *  The mid/side split\n\t\t\t\t *  @type  {Tone.MidSideSplit}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._midSideSplit = new Tone.MidSideSplit();\n\t\t        /**\n\t\t\t\t *  The mid/side merge\n\t\t\t\t *  @type  {Tone.MidSideMerge}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._midSideMerge = new Tone.MidSideMerge();\n\t\t        /**\n\t\t\t\t *  The mid send. Connect to mid processing\n\t\t\t\t *  @type {Tone.Expr}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this.midSend = this._midSideSplit.mid;\n\t\t        /**\n\t\t\t\t *  The side send. Connect to side processing\n\t\t\t\t *  @type {Tone.Expr}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this.sideSend = this._midSideSplit.side;\n\t\t        /**\n\t\t\t\t *  The mid return connection\n\t\t\t\t *  @type {GainNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this.midReturn = this._midSideMerge.mid;\n\t\t        /**\n\t\t\t\t *  The side return connection\n\t\t\t\t *  @type {GainNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this.sideReturn = this._midSideMerge.side;\n\t\t        //the connections\n\t\t        this.effectSend.connect(this._midSideSplit);\n\t\t        this._midSideMerge.connect(this.effectReturn);\n\t\t    };\n\t\t    Tone.extend(Tone.MidSideEffect, Tone.Effect);\n\t\t    /**\n\t\t\t *  Clean up. \n\t\t\t *  @returns {Tone.MidSideEffect} this\n\t\t\t */\n\t\t    Tone.MidSideEffect.prototype.dispose = function () {\n\t\t        Tone.Effect.prototype.dispose.call(this);\n\t\t        this._midSideSplit.dispose();\n\t\t        this._midSideSplit = null;\n\t\t        this._midSideMerge.dispose();\n\t\t        this._midSideMerge = null;\n\t\t        this.midSend = null;\n\t\t        this.sideSend = null;\n\t\t        this.midReturn = null;\n\t\t        this.sideReturn = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.MidSideEffect;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Tone.Phaser is a phaser effect. Phasers work by changing the phase\n\t\t\t *         of different frequency components of an incoming signal. Read more on \n\t\t\t *         [Wikipedia](https://en.wikipedia.org/wiki/Phaser_(effect)). \n\t\t\t *         Inspiration for this phaser comes from [Tuna.js](https://github.com/Dinahmoe/tuna/).\n\t\t\t *\n\t\t\t *\t@extends {Tone.StereoEffect}\n\t\t\t *\t@constructor\n\t\t\t *\t@param {Frequency|Object} [frequency] The speed of the phasing. \n\t\t\t *\t@param {number} [octaves] The octaves of the effect. \n\t\t\t *\t@param {Frequency} [baseFrequency] The base frequency of the filters. \n\t\t\t *\t@example\n\t\t\t * var phaser = new Tone.Phaser({\n\t\t\t * \t\"frequency\" : 15, \n\t\t\t * \t\"octaves\" : 5, \n\t\t\t * \t\"baseFrequency\" : 1000\n\t\t\t * }).toMaster();\n\t\t\t * var synth = new Tone.FMSynth().connect(phaser);\n\t\t\t * synth.triggerAttackRelease(\"E3\", \"2n\");\n\t\t\t */\n\t\t    Tone.Phaser = function () {\n\t\t        //set the defaults\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'frequency',\n\t\t            'octaves',\n\t\t            'baseFrequency'\n\t\t        ], Tone.Phaser.defaults);\n\t\t        Tone.StereoEffect.call(this, options);\n\t\t        /**\n\t\t\t\t *  the lfo which controls the frequency on the left side\n\t\t\t\t *  @type {Tone.LFO}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._lfoL = new Tone.LFO(options.frequency, 0, 1);\n\t\t        /**\n\t\t\t\t *  the lfo which controls the frequency on the right side\n\t\t\t\t *  @type {Tone.LFO}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._lfoR = new Tone.LFO(options.frequency, 0, 1);\n\t\t        this._lfoR.phase = 180;\n\t\t        /**\n\t\t\t\t *  the base modulation frequency\n\t\t\t\t *  @type {number}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._baseFrequency = options.baseFrequency;\n\t\t        /**\n\t\t\t\t *  the octaves of the phasing\n\t\t\t\t *  @type {number}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._octaves = options.octaves;\n\t\t        /**\n\t\t\t\t *  The quality factor of the filters\n\t\t\t\t *  @type {Positive}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.Q = new Tone.Signal(options.Q, Tone.Type.Positive);\n\t\t        /**\n\t\t\t\t *  the array of filters for the left side\n\t\t\t\t *  @type {Array}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._filtersL = this._makeFilters(options.stages, this._lfoL, this.Q);\n\t\t        /**\n\t\t\t\t *  the array of filters for the left side\n\t\t\t\t *  @type {Array}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._filtersR = this._makeFilters(options.stages, this._lfoR, this.Q);\n\t\t        /**\n\t\t\t\t * the frequency of the effect\n\t\t\t\t * @type {Tone.Signal}\n\t\t\t\t */\n\t\t        this.frequency = this._lfoL.frequency;\n\t\t        this.frequency.value = options.frequency;\n\t\t        //connect them up\n\t\t        this.effectSendL.connect(this._filtersL[0]);\n\t\t        this.effectSendR.connect(this._filtersR[0]);\n\t\t        this._filtersL[options.stages - 1].connect(this.effectReturnL);\n\t\t        this._filtersR[options.stages - 1].connect(this.effectReturnR);\n\t\t        //control the frequency with one LFO\n\t\t        this._lfoL.frequency.connect(this._lfoR.frequency);\n\t\t        //set the options\n\t\t        this.baseFrequency = options.baseFrequency;\n\t\t        this.octaves = options.octaves;\n\t\t        //start the lfo\n\t\t        this._lfoL.start();\n\t\t        this._lfoR.start();\n\t\t        this._readOnly([\n\t\t            'frequency',\n\t\t            'Q'\n\t\t        ]);\n\t\t    };\n\t\t    Tone.extend(Tone.Phaser, Tone.StereoEffect);\n\t\t    /**\n\t\t\t *  defaults\n\t\t\t *  @static\n\t\t\t *  @type {object}\n\t\t\t */\n\t\t    Tone.Phaser.defaults = {\n\t\t        'frequency': 0.5,\n\t\t        'octaves': 3,\n\t\t        'stages': 10,\n\t\t        'Q': 10,\n\t\t        'baseFrequency': 350\n\t\t    };\n\t\t    /**\n\t\t\t *  @param {number} stages\n\t\t\t *  @returns {Array} the number of filters all connected together\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Phaser.prototype._makeFilters = function (stages, connectToFreq, Q) {\n\t\t        var filters = new Array(stages);\n\t\t        //make all the filters\n\t\t        for (var i = 0; i < stages; i++) {\n\t\t            var filter = this.context.createBiquadFilter();\n\t\t            filter.type = 'allpass';\n\t\t            Q.connect(filter.Q);\n\t\t            connectToFreq.connect(filter.frequency);\n\t\t            filters[i] = filter;\n\t\t        }\n\t\t        this.connectSeries.apply(this, filters);\n\t\t        return filters;\n\t\t    };\n\t\t    /**\n\t\t\t * The number of octaves the phase goes above\n\t\t\t * the baseFrequency\n\t\t\t * @memberOf Tone.Phaser#\n\t\t\t * @type {Positive}\n\t\t\t * @name octaves\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Phaser.prototype, 'octaves', {\n\t\t        get: function () {\n\t\t            return this._octaves;\n\t\t        },\n\t\t        set: function (octaves) {\n\t\t            this._octaves = octaves;\n\t\t            var max = this._baseFrequency * Math.pow(2, octaves);\n\t\t            this._lfoL.max = max;\n\t\t            this._lfoR.max = max;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The the base frequency of the filters. \n\t\t\t * @memberOf Tone.Phaser#\n\t\t\t * @type {number}\n\t\t\t * @name baseFrequency\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Phaser.prototype, 'baseFrequency', {\n\t\t        get: function () {\n\t\t            return this._baseFrequency;\n\t\t        },\n\t\t        set: function (freq) {\n\t\t            this._baseFrequency = freq;\n\t\t            this._lfoL.min = freq;\n\t\t            this._lfoR.min = freq;\n\t\t            this.octaves = this._octaves;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  clean up\n\t\t\t *  @returns {Tone.Phaser} this\n\t\t\t */\n\t\t    Tone.Phaser.prototype.dispose = function () {\n\t\t        Tone.StereoEffect.prototype.dispose.call(this);\n\t\t        this._writable([\n\t\t            'frequency',\n\t\t            'Q'\n\t\t        ]);\n\t\t        this.Q.dispose();\n\t\t        this.Q = null;\n\t\t        this._lfoL.dispose();\n\t\t        this._lfoL = null;\n\t\t        this._lfoR.dispose();\n\t\t        this._lfoR = null;\n\t\t        for (var i = 0; i < this._filtersL.length; i++) {\n\t\t            this._filtersL[i].disconnect();\n\t\t            this._filtersL[i] = null;\n\t\t        }\n\t\t        this._filtersL = null;\n\t\t        for (var j = 0; j < this._filtersR.length; j++) {\n\t\t            this._filtersR[j].disconnect();\n\t\t            this._filtersR[j] = null;\n\t\t        }\n\t\t        this._filtersR = null;\n\t\t        this.frequency = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Phaser;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  Tone.PingPongDelay is a feedback delay effect where the echo is heard\n\t\t\t *          first in one channel and next in the opposite channel. In a stereo\n\t\t\t *          system these are the right and left channels.\n\t\t\t *          PingPongDelay in more simplified terms is two Tone.FeedbackDelays \n\t\t\t *          with independent delay values. Each delay is routed to one channel\n\t\t\t *          (left or right), and the channel triggered second will always \n\t\t\t *          trigger at the same interval after the first.\n\t\t\t *\n\t\t\t * \t@constructor\n\t\t\t * \t@extends {Tone.StereoXFeedbackEffect}\n\t\t\t *  @param {Time|Object} [delayTime] The delayTime between consecutive echos.\n\t\t\t *  @param {NormalRange=} feedback The amount of the effected signal which \n\t\t\t *                                 is fed back through the delay.\n\t\t\t *  @example\n\t\t\t * var pingPong = new Tone.PingPongDelay(\"4n\", 0.2).toMaster();\n\t\t\t * var drum = new Tone.DrumSynth().connect(pingPong);\n\t\t\t * drum.triggerAttackRelease(\"C4\", \"32n\");\n\t\t\t */\n\t\t    Tone.PingPongDelay = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'delayTime',\n\t\t            'feedback'\n\t\t        ], Tone.PingPongDelay.defaults);\n\t\t        Tone.StereoXFeedbackEffect.call(this, options);\n\t\t        /**\n\t\t\t\t *  the delay node on the left side\n\t\t\t\t *  @type {Tone.Delay}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._leftDelay = new Tone.Delay(0, options.maxDelayTime);\n\t\t        /**\n\t\t\t\t *  the delay node on the right side\n\t\t\t\t *  @type {Tone.Delay}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._rightDelay = new Tone.Delay(0, options.maxDelayTime);\n\t\t        /**\n\t\t\t\t *  the predelay on the right side\n\t\t\t\t *  @type {Tone.Delay}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._rightPreDelay = new Tone.Delay(0, options.maxDelayTime);\n\t\t        /**\n\t\t\t\t *  the delay time signal\n\t\t\t\t *  @type {Time}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.delayTime = new Tone.Signal(options.delayTime, Tone.Type.Time);\n\t\t        //connect it up\n\t\t        this.effectSendL.chain(this._leftDelay, this.effectReturnL);\n\t\t        this.effectSendR.chain(this._rightPreDelay, this._rightDelay, this.effectReturnR);\n\t\t        this.delayTime.fan(this._leftDelay.delayTime, this._rightDelay.delayTime, this._rightPreDelay.delayTime);\n\t\t        //rearranged the feedback to be after the rightPreDelay\n\t\t        this._feedbackLR.disconnect();\n\t\t        this._feedbackLR.connect(this._rightDelay);\n\t\t        this._readOnly(['delayTime']);\n\t\t    };\n\t\t    Tone.extend(Tone.PingPongDelay, Tone.StereoXFeedbackEffect);\n\t\t    /**\n\t\t\t *  @static\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.PingPongDelay.defaults = {\n\t\t        'delayTime': 0.25,\n\t\t        'maxDelayTime': 1\n\t\t    };\n\t\t    /**\n\t\t\t *  Clean up. \n\t\t\t *  @returns {Tone.PingPongDelay} this\n\t\t\t */\n\t\t    Tone.PingPongDelay.prototype.dispose = function () {\n\t\t        Tone.StereoXFeedbackEffect.prototype.dispose.call(this);\n\t\t        this._leftDelay.dispose();\n\t\t        this._leftDelay = null;\n\t\t        this._rightDelay.dispose();\n\t\t        this._rightDelay = null;\n\t\t        this._rightPreDelay.dispose();\n\t\t        this._rightPreDelay = null;\n\t\t        this._writable(['delayTime']);\n\t\t        this.delayTime.dispose();\n\t\t        this.delayTime = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.PingPongDelay;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Tone.PitchShift does near-realtime pitch shifting to the incoming signal. \n\t\t\t *         The effect is achieved by speeding up or slowing down the delayTime\n\t\t\t *         of a DelayNode using a sawtooth wave. \n\t\t\t *         Algorithm found in [this pdf](http://dsp-book.narod.ru/soundproc.pdf).\n\t\t\t *         Additional reference by [Miller Pucket](http://msp.ucsd.edu/techniques/v0.11/book-html/node115.html).\n\t\t\t *         \n\t\t\t *  @extends {Tone.FeedbackEffect}\n\t\t\t *  @param {Interval=} pitch The interval to transpose the incoming signal by. \n\t\t\t */\n\t\t    Tone.PitchShift = function () {\n\t\t        var options = this.optionsObject(arguments, ['pitch'], Tone.PitchShift.defaults);\n\t\t        Tone.FeedbackEffect.call(this, options);\n\t\t        /**\n\t\t\t\t *  The pitch signal\n\t\t\t\t *  @type  {Tone.Signal}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._frequency = new Tone.Signal(0);\n\t\t        /**\n\t\t\t\t *  Uses two DelayNodes to cover up the jump in\n\t\t\t\t *  the sawtooth wave. \n\t\t\t\t *  @type  {DelayNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._delayA = new Tone.Delay(0, 1);\n\t\t        /**\n\t\t\t\t *  The first LFO.\n\t\t\t\t *  @type  {Tone.LFO}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._lfoA = new Tone.LFO({\n\t\t            'min': 0,\n\t\t            'max': 0.1,\n\t\t            'type': 'sawtooth'\n\t\t        }).connect(this._delayA.delayTime);\n\t\t        /**\n\t\t\t\t *  The second DelayNode\n\t\t\t\t *  @type  {DelayNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._delayB = new Tone.Delay(0, 1);\n\t\t        /**\n\t\t\t\t *  The first LFO.\n\t\t\t\t *  @type  {Tone.LFO}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._lfoB = new Tone.LFO({\n\t\t            'min': 0,\n\t\t            'max': 0.1,\n\t\t            'type': 'sawtooth',\n\t\t            'phase': 180\n\t\t        }).connect(this._delayB.delayTime);\n\t\t        /**\n\t\t\t\t *  Crossfade quickly between the two delay lines\n\t\t\t\t *  to cover up the jump in the sawtooth wave\n\t\t\t\t *  @type  {Tone.CrossFade}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._crossFade = new Tone.CrossFade();\n\t\t        /**\n\t\t\t\t *  LFO which alternates between the two\n\t\t\t\t *  delay lines to cover up the disparity in the\n\t\t\t\t *  sawtooth wave. \n\t\t\t\t *  @type  {Tone.LFO}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._crossFadeLFO = new Tone.LFO({\n\t\t            'min': 0,\n\t\t            'max': 1,\n\t\t            'type': 'triangle',\n\t\t            'phase': 90\n\t\t        }).connect(this._crossFade.fade);\n\t\t        /**\n\t\t\t\t *  The delay node\n\t\t\t\t *  @type {Tone.Delay}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._feedbackDelay = new Tone.Delay(options.delayTime);\n\t\t        /**\n\t\t\t\t *  The amount of delay on the input signal\n\t\t\t\t *  @type {Time}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.delayTime = this._feedbackDelay.delayTime;\n\t\t        this._readOnly('delayTime');\n\t\t        /**\n\t\t\t\t *  Hold the current pitch\n\t\t\t\t *  @type {Number}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._pitch = options.pitch;\n\t\t        /**\n\t\t\t\t *  Hold the current windowSize\n\t\t\t\t *  @type {Number}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._windowSize = options.windowSize;\n\t\t        //connect the two delay lines up\n\t\t        this._delayA.connect(this._crossFade.a);\n\t\t        this._delayB.connect(this._crossFade.b);\n\t\t        //connect the frequency\n\t\t        this._frequency.fan(this._lfoA.frequency, this._lfoB.frequency, this._crossFadeLFO.frequency);\n\t\t        //route the input\n\t\t        this.effectSend.fan(this._delayA, this._delayB);\n\t\t        this._crossFade.chain(this._feedbackDelay, this.effectReturn);\n\t\t        //start the LFOs at the same time\n\t\t        var now = this.now();\n\t\t        this._lfoA.start(now);\n\t\t        this._lfoB.start(now);\n\t\t        this._crossFadeLFO.start(now);\n\t\t        //set the initial value\n\t\t        this.windowSize = this._windowSize;\n\t\t    };\n\t\t    Tone.extend(Tone.PitchShift, Tone.FeedbackEffect);\n\t\t    /**\n\t\t\t *  default values\n\t\t\t *  @static\n\t\t\t *  @type {Object}\n\t\t\t *  @const\n\t\t\t */\n\t\t    Tone.PitchShift.defaults = {\n\t\t        'pitch': 0,\n\t\t        'windowSize': 0.1,\n\t\t        'delayTime': 0,\n\t\t        'feedback': 0\n\t\t    };\n\t\t    /**\n\t\t\t * Repitch the incoming signal by some interval (measured\n\t\t\t * in semi-tones). \n\t\t\t * @memberOf Tone.PitchShift#\n\t\t\t * @type {Interval}\n\t\t\t * @name pitch\n\t\t\t * @example\n\t\t\t * pitchShift.pitch = -12; //down one octave\n\t\t\t * pitchShift.pitch = 7; //up a fifth\n\t\t\t */\n\t\t    Object.defineProperty(Tone.PitchShift.prototype, 'pitch', {\n\t\t        get: function () {\n\t\t            return this._pitch;\n\t\t        },\n\t\t        set: function (interval) {\n\t\t            this._pitch = interval;\n\t\t            var factor = 0;\n\t\t            if (interval < 0) {\n\t\t                this._lfoA.min = 0;\n\t\t                this._lfoA.max = this._windowSize;\n\t\t                this._lfoB.min = 0;\n\t\t                this._lfoB.max = this._windowSize;\n\t\t                factor = this.intervalToFrequencyRatio(interval - 1) + 1;\n\t\t            } else {\n\t\t                this._lfoA.min = this._windowSize;\n\t\t                this._lfoA.max = 0;\n\t\t                this._lfoB.min = this._windowSize;\n\t\t                this._lfoB.max = 0;\n\t\t                factor = this.intervalToFrequencyRatio(interval) - 1;\n\t\t            }\n\t\t            this._frequency.value = factor * (1.2 / this._windowSize);\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The window size corresponds roughly to the sample length in a looping sampler. \n\t\t\t * Smaller values are desirable for a less noticeable delay time of the pitch shifted\n\t\t\t * signal, but larger values will result in smoother pitch shifting for larger intervals. \n\t\t\t * A nominal range of 0.03 to 0.1 is recommended. \n\t\t\t * @memberOf Tone.PitchShift#\n\t\t\t * @type {Time}\n\t\t\t * @name windowSize\n\t\t\t * @example\n\t\t\t * pitchShift.windowSize = 0.1;\n\t\t\t */\n\t\t    Object.defineProperty(Tone.PitchShift.prototype, 'windowSize', {\n\t\t        get: function () {\n\t\t            return this._windowSize;\n\t\t        },\n\t\t        set: function (size) {\n\t\t            this._windowSize = this.toSeconds(size);\n\t\t            this.pitch = this._pitch;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Clean up.\n\t\t\t *  @return  {Tone.PitchShift}  this\n\t\t\t */\n\t\t    Tone.PitchShift.prototype.dispose = function () {\n\t\t        Tone.FeedbackEffect.prototype.dispose.call(this);\n\t\t        this._frequency.dispose();\n\t\t        this._frequency = null;\n\t\t        this._delayA.disconnect();\n\t\t        this._delayA = null;\n\t\t        this._delayB.disconnect();\n\t\t        this._delayB = null;\n\t\t        this._lfoA.dispose();\n\t\t        this._lfoA = null;\n\t\t        this._lfoB.dispose();\n\t\t        this._lfoB = null;\n\t\t        this._crossFade.dispose();\n\t\t        this._crossFade = null;\n\t\t        this._crossFadeLFO.dispose();\n\t\t        this._crossFadeLFO = null;\n\t\t        this._writable('delayTime');\n\t\t        this._feedbackDelay.dispose();\n\t\t        this._feedbackDelay = null;\n\t\t        this.delayTime = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.PitchShift;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Base class for stereo feedback effects where the effectReturn\n\t\t\t *         is fed back into the same channel. \n\t\t\t *\n\t\t\t *\t@constructor\n\t\t\t *\t@extends {Tone.FeedbackEffect}\n\t\t\t */\n\t\t    Tone.StereoFeedbackEffect = function () {\n\t\t        var options = this.optionsObject(arguments, ['feedback'], Tone.FeedbackEffect.defaults);\n\t\t        Tone.StereoEffect.call(this, options);\n\t\t        /**\n\t\t\t\t *  controls the amount of feedback\n\t\t\t\t *  @type {NormalRange}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.feedback = new Tone.Signal(options.feedback, Tone.Type.NormalRange);\n\t\t        /**\n\t\t\t\t *  the left side feeback\n\t\t\t\t *  @type {Tone.Gain}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._feedbackL = new Tone.Gain();\n\t\t        /**\n\t\t\t\t *  the right side feeback\n\t\t\t\t *  @type {Tone.Gain}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._feedbackR = new Tone.Gain();\n\t\t        //connect it up\n\t\t        this.effectReturnL.chain(this._feedbackL, this.effectSendL);\n\t\t        this.effectReturnR.chain(this._feedbackR, this.effectSendR);\n\t\t        this.feedback.fan(this._feedbackL.gain, this._feedbackR.gain);\n\t\t        this._readOnly(['feedback']);\n\t\t    };\n\t\t    Tone.extend(Tone.StereoFeedbackEffect, Tone.FeedbackEffect);\n\t\t    /**\n\t\t\t *  clean up\n\t\t\t *  @returns {Tone.StereoFeedbackEffect} this\n\t\t\t */\n\t\t    Tone.StereoFeedbackEffect.prototype.dispose = function () {\n\t\t        Tone.StereoEffect.prototype.dispose.call(this);\n\t\t        this._writable(['feedback']);\n\t\t        this.feedback.dispose();\n\t\t        this.feedback = null;\n\t\t        this._feedbackL.dispose();\n\t\t        this._feedbackL = null;\n\t\t        this._feedbackR.dispose();\n\t\t        this._feedbackR = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.StereoFeedbackEffect;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Applies a width factor to the mid/side seperation. \n\t\t\t *         0 is all mid and 1 is all side.\n\t\t\t *         Algorithm found in [kvraudio forums](http://www.kvraudio.com/forum/viewtopic.php?t=212587).\n\t\t\t *         <br><br>\n\t\t\t *         <code>\n\t\t\t *         Mid *= 2*(1-width)<br>\n\t\t\t *         Side *= 2*width\n\t\t\t *         </code>\n\t\t\t *\n\t\t\t *  @extends {Tone.MidSideEffect}\n\t\t\t *  @constructor\n\t\t\t *  @param {NormalRange|Object} [width] The stereo width. A width of 0 is mono and 1 is stereo. 0.5 is no change.\n\t\t\t */\n\t\t    Tone.StereoWidener = function () {\n\t\t        var options = this.optionsObject(arguments, ['width'], Tone.StereoWidener.defaults);\n\t\t        Tone.MidSideEffect.call(this, options);\n\t\t        /**\n\t\t\t\t *  The width control. 0 = 100% mid. 1 = 100% side. 0.5 = no change. \n\t\t\t\t *  @type {NormalRange}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.width = new Tone.Signal(options.width, Tone.Type.NormalRange);\n\t\t        /**\n\t\t\t\t *  Mid multiplier\n\t\t\t\t *  @type {Tone.Expr}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._midMult = new Tone.Expr('$0 * ($1 * (1 - $2))');\n\t\t        /**\n\t\t\t\t *  Side multiplier\n\t\t\t\t *  @type {Tone.Expr}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._sideMult = new Tone.Expr('$0 * ($1 * $2)');\n\t\t        /**\n\t\t\t\t *  constant output of 2\n\t\t\t\t *  @type {Tone}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._two = new Tone.Signal(2);\n\t\t        //the mid chain\n\t\t        this._two.connect(this._midMult, 0, 1);\n\t\t        this.width.connect(this._midMult, 0, 2);\n\t\t        //the side chain\n\t\t        this._two.connect(this._sideMult, 0, 1);\n\t\t        this.width.connect(this._sideMult, 0, 2);\n\t\t        //connect it to the effect send/return\n\t\t        this.midSend.chain(this._midMult, this.midReturn);\n\t\t        this.sideSend.chain(this._sideMult, this.sideReturn);\n\t\t        this._readOnly(['width']);\n\t\t    };\n\t\t    Tone.extend(Tone.StereoWidener, Tone.MidSideEffect);\n\t\t    /**\n\t\t\t *  the default values\n\t\t\t *  @static\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.StereoWidener.defaults = { 'width': 0.5 };\n\t\t    /**\n\t\t\t *  Clean up. \n\t\t\t *  @returns {Tone.StereoWidener} this\n\t\t\t */\n\t\t    Tone.StereoWidener.prototype.dispose = function () {\n\t\t        Tone.MidSideEffect.prototype.dispose.call(this);\n\t\t        this._writable(['width']);\n\t\t        this.width.dispose();\n\t\t        this.width = null;\n\t\t        this._midMult.dispose();\n\t\t        this._midMult = null;\n\t\t        this._sideMult.dispose();\n\t\t        this._sideMult = null;\n\t\t        this._two.dispose();\n\t\t        this._two = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.StereoWidener;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Tone.Tremolo modulates the amplitude of an incoming signal using a Tone.LFO.\n\t\t\t *         The type, frequency, and depth of the LFO is controllable.\n\t\t\t *\n\t\t\t *  @extends {Tone.StereoEffect}\n\t\t\t *  @constructor\n\t\t\t *  @param {Frequency} [frequency] The rate of the effect.\n\t\t\t *  @param {NormalRange} [depth] The depth of the effect.\n\t\t\t *  @example\n\t\t\t * //create a tremolo and start it's LFO\n\t\t\t * var tremolo = new Tone.Tremolo(9, 0.75).toMaster().start();\n\t\t\t * //route an oscillator through the tremolo and start it\n\t\t\t * var oscillator = new Tone.Oscillator().connect(tremolo).start();\n\t\t\t */\n\t\t    Tone.Tremolo = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'frequency',\n\t\t            'depth'\n\t\t        ], Tone.Tremolo.defaults);\n\t\t        Tone.StereoEffect.call(this, options);\n\t\t        /**\n\t\t\t\t *  The tremelo LFO in the left channel\n\t\t\t\t *  @type  {Tone.LFO}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._lfoL = new Tone.LFO({\n\t\t            'phase': options.spread,\n\t\t            'min': 1,\n\t\t            'max': 0\n\t\t        });\n\t\t        /**\n\t\t\t\t *  The tremelo LFO in the left channel\n\t\t\t\t *  @type  {Tone.LFO}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._lfoR = new Tone.LFO({\n\t\t            'phase': options.spread,\n\t\t            'min': 1,\n\t\t            'max': 0\n\t\t        });\n\t\t        /**\n\t\t\t\t *  Where the gain is multiplied\n\t\t\t\t *  @type  {Tone.Gain}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._amplitudeL = new Tone.Gain();\n\t\t        /**\n\t\t\t\t *  Where the gain is multiplied\n\t\t\t\t *  @type  {Tone.Gain}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._amplitudeR = new Tone.Gain();\n\t\t        /**\n\t\t\t\t *  The frequency of the tremolo.\n\t\t\t\t *  @type  {Frequency}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.frequency = new Tone.Signal(options.frequency, Tone.Type.Frequency);\n\t\t        /**\n\t\t\t\t *  The depth of the effect. A depth of 0, has no effect\n\t\t\t\t *  on the amplitude, and a depth of 1 makes the amplitude\n\t\t\t\t *  modulate fully between 0 and 1.\n\t\t\t\t *  @type  {NormalRange}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.depth = new Tone.Signal(options.depth, Tone.Type.NormalRange);\n\t\t        this._readOnly([\n\t\t            'frequency',\n\t\t            'depth'\n\t\t        ]);\n\t\t        this.effectSendL.chain(this._amplitudeL, this.effectReturnL);\n\t\t        this.effectSendR.chain(this._amplitudeR, this.effectReturnR);\n\t\t        this._lfoL.connect(this._amplitudeL.gain);\n\t\t        this._lfoR.connect(this._amplitudeR.gain);\n\t\t        this.frequency.fan(this._lfoL.frequency, this._lfoR.frequency);\n\t\t        this.depth.fan(this._lfoR.amplitude, this._lfoL.amplitude);\n\t\t        this.type = options.type;\n\t\t        this.spread = options.spread;\n\t\t    };\n\t\t    Tone.extend(Tone.Tremolo, Tone.StereoEffect);\n\t\t    /**\n\t\t\t *  @static\n\t\t\t *  @const\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.Tremolo.defaults = {\n\t\t        'frequency': 10,\n\t\t        'type': 'sine',\n\t\t        'depth': 0.5,\n\t\t        'spread': 180\n\t\t    };\n\t\t    /**\n\t\t\t * Start the tremolo.\n\t\t\t * @param {Time} [time=now] When the tremolo begins.\n\t\t\t * @returns {Tone.Tremolo} this\n\t\t\t */\n\t\t    Tone.Tremolo.prototype.start = function (time) {\n\t\t        this._lfoL.start(time);\n\t\t        this._lfoR.start(time);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t * Stop the tremolo.\n\t\t\t * @param {Time} [time=now] When the tremolo stops.\n\t\t\t * @returns {Tone.Tremolo} this\n\t\t\t */\n\t\t    Tone.Tremolo.prototype.stop = function (time) {\n\t\t        this._lfoL.stop(time);\n\t\t        this._lfoR.stop(time);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t * Sync the effect to the transport.\n\t\t\t * @param {Time} [delay=0] Delay time before starting the effect after the\n\t\t\t *                              Transport has started.\n\t\t\t * @returns {Tone.AutoFilter} this\n\t\t\t */\n\t\t    Tone.Tremolo.prototype.sync = function (delay) {\n\t\t        this._lfoL.sync(delay);\n\t\t        this._lfoR.sync(delay);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t * Unsync the filter from the transport\n\t\t\t * @returns {Tone.Tremolo} this\n\t\t\t */\n\t\t    Tone.Tremolo.prototype.unsync = function () {\n\t\t        this._lfoL.unsync();\n\t\t        this._lfoR.unsync();\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t * The Tremolo's oscillator type.\n\t\t\t * @memberOf Tone.Tremolo#\n\t\t\t * @type {string}\n\t\t\t * @name type\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Tremolo.prototype, 'type', {\n\t\t        get: function () {\n\t\t            return this._lfoL.type;\n\t\t        },\n\t\t        set: function (type) {\n\t\t            this._lfoL.type = type;\n\t\t            this._lfoR.type = type;\n\t\t        }\n\t\t    });\n\t\t    /** \n\t\t\t * Amount of stereo spread. When set to 0, both LFO's will be panned centrally.\n\t\t\t * When set to 180, LFO's will be panned hard left and right respectively.\n\t\t\t * @memberOf Tone.Tremolo#\n\t\t\t * @type {Degrees}\n\t\t\t * @name spread\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Tremolo.prototype, 'spread', {\n\t\t        get: function () {\n\t\t            return this._lfoR.phase - this._lfoL.phase;    //180\n\t\t        },\n\t\t        set: function (spread) {\n\t\t            this._lfoL.phase = 90 - spread / 2;\n\t\t            this._lfoR.phase = spread / 2 + 90;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  clean up\n\t\t\t *  @returns {Tone.Tremolo} this\n\t\t\t */\n\t\t    Tone.Tremolo.prototype.dispose = function () {\n\t\t        Tone.StereoEffect.prototype.dispose.call(this);\n\t\t        this._writable([\n\t\t            'frequency',\n\t\t            'depth'\n\t\t        ]);\n\t\t        this._lfoL.dispose();\n\t\t        this._lfoL = null;\n\t\t        this._lfoR.dispose();\n\t\t        this._lfoR = null;\n\t\t        this._amplitudeL.dispose();\n\t\t        this._amplitudeL = null;\n\t\t        this._amplitudeR.dispose();\n\t\t        this._amplitudeR = null;\n\t\t        this.frequency = null;\n\t\t        this.depth = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Tremolo;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class A Vibrato effect composed of a Tone.Delay and a Tone.LFO. The LFO\n\t\t\t *         modulates the delayTime of the delay, causing the pitch to rise\n\t\t\t *         and fall. \n\t\t\t *  @extends {Tone.Effect}\n\t\t\t *  @param {Frequency} frequency The frequency of the vibrato.\n\t\t\t *  @param {NormalRange} depth The amount the pitch is modulated.\n\t\t\t */\n\t\t    Tone.Vibrato = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'frequency',\n\t\t            'depth'\n\t\t        ], Tone.Vibrato.defaults);\n\t\t        Tone.Effect.call(this, options);\n\t\t        /**\n\t\t\t\t *  The delay node used for the vibrato effect\n\t\t\t\t *  @type {Tone.Delay}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._delayNode = new Tone.Delay(0, options.maxDelay);\n\t\t        /**\n\t\t\t\t *  The LFO used to control the vibrato\n\t\t\t\t *  @type {Tone.LFO}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._lfo = new Tone.LFO({\n\t\t            'type': options.type,\n\t\t            'min': 0,\n\t\t            'max': options.maxDelay,\n\t\t            'frequency': options.frequency,\n\t\t            'phase': -90    //offse the phase so the resting position is in the center\n\t\t        }).start().connect(this._delayNode.delayTime);\n\t\t        /**\n\t\t\t\t *  The frequency of the vibrato\n\t\t\t\t *  @type {Frequency}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.frequency = this._lfo.frequency;\n\t\t        /**\n\t\t\t\t *  The depth of the vibrato. \n\t\t\t\t *  @type {NormalRange}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.depth = this._lfo.amplitude;\n\t\t        this.depth.value = options.depth;\n\t\t        this._readOnly([\n\t\t            'frequency',\n\t\t            'depth'\n\t\t        ]);\n\t\t        this.effectSend.chain(this._delayNode, this.effectReturn);\n\t\t    };\n\t\t    Tone.extend(Tone.Vibrato, Tone.Effect);\n\t\t    /**\n\t\t\t *  The defaults\n\t\t\t *  @type  {Object}\n\t\t\t *  @const\n\t\t\t */\n\t\t    Tone.Vibrato.defaults = {\n\t\t        'maxDelay': 0.005,\n\t\t        'frequency': 5,\n\t\t        'depth': 0.1,\n\t\t        'type': 'sine'\n\t\t    };\n\t\t    /**\n\t\t\t * Type of oscillator attached to the Vibrato.\n\t\t\t * @memberOf Tone.Vibrato#\n\t\t\t * @type {string}\n\t\t\t * @name type\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Vibrato.prototype, 'type', {\n\t\t        get: function () {\n\t\t            return this._lfo.type;\n\t\t        },\n\t\t        set: function (type) {\n\t\t            this._lfo.type = type;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Clean up.\n\t\t\t *  @returns {Tone.Vibrato} this\n\t\t\t */\n\t\t    Tone.Vibrato.prototype.dispose = function () {\n\t\t        Tone.Effect.prototype.dispose.call(this);\n\t\t        this._delayNode.dispose();\n\t\t        this._delayNode = null;\n\t\t        this._lfo.dispose();\n\t\t        this._lfo = null;\n\t\t        this._writable([\n\t\t            'frequency',\n\t\t            'depth'\n\t\t        ]);\n\t\t        this.frequency = null;\n\t\t        this.depth = null;\n\t\t    };\n\t\t    return Tone.Vibrato;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  Tone.Event abstracts away Tone.Transport.schedule and provides a schedulable\n\t\t\t *          callback for a single or repeatable events along the timeline. \n\t\t\t *\n\t\t\t *  @extends {Tone}\n\t\t\t *  @param {function} callback The callback to invoke at the time. \n\t\t\t *  @param {*} value The value or values which should be passed to\n\t\t\t *                      the callback function on invocation.  \n\t\t\t *  @example\n\t\t\t * var chord = new Tone.Event(function(time, chord){\n\t\t\t * \t//the chord as well as the exact time of the event\n\t\t\t * \t//are passed in as arguments to the callback function\n\t\t\t * }, [\"D4\", \"E4\", \"F4\"]);\n\t\t\t * //start the chord at the beginning of the transport timeline\n\t\t\t * chord.start();\n\t\t\t * //loop it every measure for 8 measures\n\t\t\t * chord.loop = 8;\n\t\t\t * chord.loopEnd = \"1m\";\n\t\t\t */\n\t\t    Tone.Event = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'callback',\n\t\t            'value'\n\t\t        ], Tone.Event.defaults);\n\t\t        /**\n\t\t\t\t *  Loop value\n\t\t\t\t *  @type  {Boolean|Positive}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._loop = options.loop;\n\t\t        /**\n\t\t\t\t *  The callback to invoke. \n\t\t\t\t *  @type  {Function}\n\t\t\t\t */\n\t\t        this.callback = options.callback;\n\t\t        /**\n\t\t\t\t *  The value which is passed to the\n\t\t\t\t *  callback function.\n\t\t\t\t *  @type  {*}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this.value = options.value;\n\t\t        /**\n\t\t\t\t *  When the note is scheduled to start.\n\t\t\t\t *  @type  {Number}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._loopStart = this.toTicks(options.loopStart);\n\t\t        /**\n\t\t\t\t *  When the note is scheduled to start.\n\t\t\t\t *  @type  {Number}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._loopEnd = this.toTicks(options.loopEnd);\n\t\t        /**\n\t\t\t\t *  Tracks the scheduled events\n\t\t\t\t *  @type {Tone.TimelineState}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._state = new Tone.TimelineState(Tone.State.Stopped);\n\t\t        /**\n\t\t\t\t *  The playback speed of the note. A speed of 1\n\t\t\t\t *  is no change. \n\t\t\t\t *  @private\n\t\t\t\t *  @type {Positive}\n\t\t\t\t */\n\t\t        this._playbackRate = 1;\n\t\t        /**\n\t\t\t\t *  A delay time from when the event is scheduled to start\n\t\t\t\t *  @type {Ticks}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._startOffset = 0;\n\t\t        /**\n\t\t\t\t *  The probability that the callback will be invoked\n\t\t\t\t *  at the scheduled time. \n\t\t\t\t *  @type {NormalRange}\n\t\t\t\t *  @example\n\t\t\t\t * //the callback will be invoked 50% of the time\n\t\t\t\t * event.probability = 0.5;\n\t\t\t\t */\n\t\t        this.probability = options.probability;\n\t\t        /**\n\t\t\t\t *  If set to true, will apply small (+/-0.02 seconds) random variation\n\t\t\t\t *  to the callback time. If the value is given as a time, it will randomize\n\t\t\t\t *  by that amount.\n\t\t\t\t *  @example\n\t\t\t\t * event.humanize = true;\n\t\t\t\t *  @type {Boolean|Time}\n\t\t\t\t */\n\t\t        this.humanize = options.humanize;\n\t\t        /**\n\t\t\t\t *  If mute is true, the callback won't be\n\t\t\t\t *  invoked.\n\t\t\t\t *  @type {Boolean}\n\t\t\t\t */\n\t\t        this.mute = options.mute;\n\t\t        //set the initial values\n\t\t        this.playbackRate = options.playbackRate;\n\t\t    };\n\t\t    Tone.extend(Tone.Event);\n\t\t    /**\n\t\t\t *  The default values\n\t\t\t *  @type  {Object}\n\t\t\t *  @const\n\t\t\t */\n\t\t    Tone.Event.defaults = {\n\t\t        'callback': Tone.noOp,\n\t\t        'loop': false,\n\t\t        'loopEnd': '1m',\n\t\t        'loopStart': 0,\n\t\t        'playbackRate': 1,\n\t\t        'value': null,\n\t\t        'probability': 1,\n\t\t        'mute': false,\n\t\t        'humanize': false\n\t\t    };\n\t\t    /**\n\t\t\t *  Reschedule all of the events along the timeline\n\t\t\t *  with the updated values.\n\t\t\t *  @param {Time} after Only reschedules events after the given time.\n\t\t\t *  @return  {Tone.Event}  this\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Event.prototype._rescheduleEvents = function (after) {\n\t\t        //if no argument is given, schedules all of the events\n\t\t        after = this.defaultArg(after, -1);\n\t\t        this._state.forEachFrom(after, function (event) {\n\t\t            var duration;\n\t\t            if (event.state === Tone.State.Started) {\n\t\t                if (!this.isUndef(event.id)) {\n\t\t                    Tone.Transport.clear(event.id);\n\t\t                }\n\t\t                var startTick = event.time + Math.round(this.startOffset / this._playbackRate);\n\t\t                if (this._loop) {\n\t\t                    duration = Infinity;\n\t\t                    if (this.isNumber(this._loop)) {\n\t\t                        duration = this._loop * this._getLoopDuration();\n\t\t                    }\n\t\t                    var nextEvent = this._state.getAfter(startTick);\n\t\t                    if (nextEvent !== null) {\n\t\t                        duration = Math.min(duration, nextEvent.time - startTick);\n\t\t                    }\n\t\t                    if (duration !== Infinity) {\n\t\t                        //schedule a stop since it's finite duration\n\t\t                        this._state.setStateAtTime(Tone.State.Stopped, startTick + duration + 1);\n\t\t                        duration = Tone.Time(duration, 'i');\n\t\t                    }\n\t\t                    var interval = Tone.Time(this._getLoopDuration(), 'i');\n\t\t                    event.id = Tone.Transport.scheduleRepeat(this._tick.bind(this), interval, Tone.TransportTime(startTick, 'i'), duration);\n\t\t                } else {\n\t\t                    event.id = Tone.Transport.schedule(this._tick.bind(this), startTick + 'i');\n\t\t                }\n\t\t            }\n\t\t        }.bind(this));\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Returns the playback state of the note, either \"started\" or \"stopped\".\n\t\t\t *  @type {String}\n\t\t\t *  @readOnly\n\t\t\t *  @memberOf Tone.Event#\n\t\t\t *  @name state\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Event.prototype, 'state', {\n\t\t        get: function () {\n\t\t            return this._state.getValueAtTime(Tone.Transport.ticks);\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The start from the scheduled start time\n\t\t\t *  @type {Ticks}\n\t\t\t *  @memberOf Tone.Event#\n\t\t\t *  @name startOffset\n\t\t\t *  @private\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Event.prototype, 'startOffset', {\n\t\t        get: function () {\n\t\t            return this._startOffset;\n\t\t        },\n\t\t        set: function (offset) {\n\t\t            this._startOffset = offset;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Start the note at the given time. \n\t\t\t *  @param  {TimelinePosition}  time  When the note should start.\n\t\t\t *  @return  {Tone.Event}  this\n\t\t\t */\n\t\t    Tone.Event.prototype.start = function (time) {\n\t\t        time = this.toTicks(time);\n\t\t        if (this._state.getValueAtTime(time) === Tone.State.Stopped) {\n\t\t            this._state.add({\n\t\t                'state': Tone.State.Started,\n\t\t                'time': time,\n\t\t                'id': undefined\n\t\t            });\n\t\t            this._rescheduleEvents(time);\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Stop the Event at the given time.\n\t\t\t *  @param  {TimelinePosition}  time  When the note should stop.\n\t\t\t *  @return  {Tone.Event}  this\n\t\t\t */\n\t\t    Tone.Event.prototype.stop = function (time) {\n\t\t        this.cancel(time);\n\t\t        time = this.toTicks(time);\n\t\t        if (this._state.getValueAtTime(time) === Tone.State.Started) {\n\t\t            this._state.setStateAtTime(Tone.State.Stopped, time);\n\t\t            var previousEvent = this._state.getBefore(time);\n\t\t            var reschedulTime = time;\n\t\t            if (previousEvent !== null) {\n\t\t                reschedulTime = previousEvent.time;\n\t\t            }\n\t\t            this._rescheduleEvents(reschedulTime);\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Cancel all scheduled events greater than or equal to the given time\n\t\t\t *  @param  {TimelinePosition}  [time=0]  The time after which events will be cancel.\n\t\t\t *  @return  {Tone.Event}  this\n\t\t\t */\n\t\t    Tone.Event.prototype.cancel = function (time) {\n\t\t        time = this.defaultArg(time, -Infinity);\n\t\t        time = this.toTicks(time);\n\t\t        this._state.forEachFrom(time, function (event) {\n\t\t            Tone.Transport.clear(event.id);\n\t\t        });\n\t\t        this._state.cancel(time);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  The callback function invoker. Also \n\t\t\t *  checks if the Event is done playing\n\t\t\t *  @param  {Number}  time  The time of the event in seconds\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Event.prototype._tick = function (time) {\n\t\t        if (!this.mute && this._state.getValueAtTime(Tone.Transport.ticks) === Tone.State.Started) {\n\t\t            if (this.probability < 1 && Math.random() > this.probability) {\n\t\t                return;\n\t\t            }\n\t\t            if (this.humanize) {\n\t\t                var variation = 0.02;\n\t\t                if (!this.isBoolean(this.humanize)) {\n\t\t                    variation = this.toSeconds(this.humanize);\n\t\t                }\n\t\t                time += (Math.random() * 2 - 1) * variation;\n\t\t            }\n\t\t            this.callback(time, this.value);\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Get the duration of the loop.\n\t\t\t *  @return  {Ticks}\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Event.prototype._getLoopDuration = function () {\n\t\t        return Math.round((this._loopEnd - this._loopStart) / this._playbackRate);\n\t\t    };\n\t\t    /**\n\t\t\t *  If the note should loop or not\n\t\t\t *  between Tone.Event.loopStart and \n\t\t\t *  Tone.Event.loopEnd. An integer\n\t\t\t *  value corresponds to the number of\n\t\t\t *  loops the Event does after it starts.\n\t\t\t *  @memberOf Tone.Event#\n\t\t\t *  @type {Boolean|Positive}\n\t\t\t *  @name loop\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Event.prototype, 'loop', {\n\t\t        get: function () {\n\t\t            return this._loop;\n\t\t        },\n\t\t        set: function (loop) {\n\t\t            this._loop = loop;\n\t\t            this._rescheduleEvents();\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * \tThe playback rate of the note. Defaults to 1.\n\t\t\t *  @memberOf Tone.Event#\n\t\t\t *  @type {Positive}\n\t\t\t *  @name playbackRate\n\t\t\t *  @example\n\t\t\t * note.loop = true;\n\t\t\t * //repeat the note twice as fast\n\t\t\t * note.playbackRate = 2;\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Event.prototype, 'playbackRate', {\n\t\t        get: function () {\n\t\t            return this._playbackRate;\n\t\t        },\n\t\t        set: function (rate) {\n\t\t            this._playbackRate = rate;\n\t\t            this._rescheduleEvents();\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The loopEnd point is the time the event will loop\n\t\t\t *  if Tone.Event.loop is true.\n\t\t\t *  @memberOf Tone.Event#\n\t\t\t *  @type {TransportTime}\n\t\t\t *  @name loopEnd\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Event.prototype, 'loopEnd', {\n\t\t        get: function () {\n\t\t            return Tone.TransportTime(this._loopEnd, 'i').toNotation();\n\t\t        },\n\t\t        set: function (loopEnd) {\n\t\t            this._loopEnd = this.toTicks(loopEnd);\n\t\t            if (this._loop) {\n\t\t                this._rescheduleEvents();\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The time when the loop should start. \n\t\t\t *  @memberOf Tone.Event#\n\t\t\t *  @type {TransportTime}\n\t\t\t *  @name loopStart\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Event.prototype, 'loopStart', {\n\t\t        get: function () {\n\t\t            return Tone.TransportTime(this._loopStart, 'i').toNotation();\n\t\t        },\n\t\t        set: function (loopStart) {\n\t\t            this._loopStart = this.toTicks(loopStart);\n\t\t            if (this._loop) {\n\t\t                this._rescheduleEvents();\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The current progress of the loop interval.\n\t\t\t *  Returns 0 if the event is not started yet or\n\t\t\t *  it is not set to loop.\n\t\t\t *  @memberOf Tone.Event#\n\t\t\t *  @type {NormalRange}\n\t\t\t *  @name progress\n\t\t\t *  @readOnly\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Event.prototype, 'progress', {\n\t\t        get: function () {\n\t\t            if (this._loop) {\n\t\t                var ticks = Tone.Transport.ticks;\n\t\t                var lastEvent = this._state.get(ticks);\n\t\t                if (lastEvent !== null && lastEvent.state === Tone.State.Started) {\n\t\t                    var loopDuration = this._getLoopDuration();\n\t\t                    var progress = (ticks - lastEvent.time) % loopDuration;\n\t\t                    return progress / loopDuration;\n\t\t                } else {\n\t\t                    return 0;\n\t\t                }\n\t\t            } else {\n\t\t                return 0;\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Clean up\n\t\t\t *  @return  {Tone.Event}  this\n\t\t\t */\n\t\t    Tone.Event.prototype.dispose = function () {\n\t\t        this.cancel();\n\t\t        this._state.dispose();\n\t\t        this._state = null;\n\t\t        this.callback = null;\n\t\t        this.value = null;\n\t\t    };\n\t\t    return Tone.Event;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    /**\n\t\t\t *  @class Tone.Loop creates a looped callback at the \n\t\t\t *         specified interval. The callback can be \n\t\t\t *         started, stopped and scheduled along\n\t\t\t *         the Transport's timeline. \n\t\t\t *  @example\n\t\t\t * var loop = new Tone.Loop(function(time){\n\t\t\t * \t//triggered every eighth note. \n\t\t\t * \tconsole.log(time);\n\t\t\t * }, \"8n\").start(0);\n\t\t\t * Tone.Transport.start();\n\t\t\t *  @extends {Tone}\n\t\t\t *  @param {Function} callback The callback to invoke with the event.\n\t\t\t *  @param {Time} interval The time between successive callback calls. \n\t\t\t */\n\t\t    Tone.Loop = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'callback',\n\t\t            'interval'\n\t\t        ], Tone.Loop.defaults);\n\t\t        /**\n\t\t\t\t *  The event which produces the callbacks\n\t\t\t\t */\n\t\t        this._event = new Tone.Event({\n\t\t            'callback': this._tick.bind(this),\n\t\t            'loop': true,\n\t\t            'loopEnd': options.interval,\n\t\t            'playbackRate': options.playbackRate,\n\t\t            'probability': options.probability\n\t\t        });\n\t\t        /**\n\t\t\t\t *  The callback to invoke with the next event in the pattern\n\t\t\t\t *  @type {Function}\n\t\t\t\t */\n\t\t        this.callback = options.callback;\n\t\t        //set the iterations\n\t\t        this.iterations = options.iterations;\n\t\t    };\n\t\t    Tone.extend(Tone.Loop);\n\t\t    /**\n\t\t\t *  The defaults\n\t\t\t *  @const\n\t\t\t *  @type  {Object}\n\t\t\t */\n\t\t    Tone.Loop.defaults = {\n\t\t        'interval': '4n',\n\t\t        'callback': Tone.noOp,\n\t\t        'playbackRate': 1,\n\t\t        'iterations': Infinity,\n\t\t        'probability': true,\n\t\t        'mute': false\n\t\t    };\n\t\t    /**\n\t\t\t *  Start the loop at the specified time along the Transport's\n\t\t\t *  timeline.\n\t\t\t *  @param  {TimelinePosition=}  time  When to start the Loop.\n\t\t\t *  @return  {Tone.Loop}  this\n\t\t\t */\n\t\t    Tone.Loop.prototype.start = function (time) {\n\t\t        this._event.start(time);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Stop the loop at the given time.\n\t\t\t *  @param  {TimelinePosition=}  time  When to stop the Arpeggio\n\t\t\t *  @return  {Tone.Loop}  this\n\t\t\t */\n\t\t    Tone.Loop.prototype.stop = function (time) {\n\t\t        this._event.stop(time);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Cancel all scheduled events greater than or equal to the given time\n\t\t\t *  @param  {TimelinePosition}  [time=0]  The time after which events will be cancel.\n\t\t\t *  @return  {Tone.Loop}  this\n\t\t\t */\n\t\t    Tone.Loop.prototype.cancel = function (time) {\n\t\t        this._event.cancel(time);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Internal function called when the notes should be called\n\t\t\t *  @param  {Number}  time  The time the event occurs\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Loop.prototype._tick = function (time) {\n\t\t        this.callback(time);\n\t\t    };\n\t\t    /**\n\t\t\t *  The state of the Loop, either started or stopped.\n\t\t\t *  @memberOf Tone.Loop#\n\t\t\t *  @type {String}\n\t\t\t *  @name state\n\t\t\t *  @readOnly\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Loop.prototype, 'state', {\n\t\t        get: function () {\n\t\t            return this._event.state;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The progress of the loop as a value between 0-1. 0, when\n\t\t\t *  the loop is stopped or done iterating. \n\t\t\t *  @memberOf Tone.Loop#\n\t\t\t *  @type {NormalRange}\n\t\t\t *  @name progress\n\t\t\t *  @readOnly\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Loop.prototype, 'progress', {\n\t\t        get: function () {\n\t\t            return this._event.progress;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The time between successive callbacks. \n\t\t\t *  @example\n\t\t\t * loop.interval = \"8n\"; //loop every 8n\n\t\t\t *  @memberOf Tone.Loop#\n\t\t\t *  @type {Time}\n\t\t\t *  @name interval\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Loop.prototype, 'interval', {\n\t\t        get: function () {\n\t\t            return this._event.loopEnd;\n\t\t        },\n\t\t        set: function (interval) {\n\t\t            this._event.loopEnd = interval;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The playback rate of the loop. The normal playback rate is 1 (no change). \n\t\t\t *  A `playbackRate` of 2 would be twice as fast. \n\t\t\t *  @memberOf Tone.Loop#\n\t\t\t *  @type {Time}\n\t\t\t *  @name playbackRate\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Loop.prototype, 'playbackRate', {\n\t\t        get: function () {\n\t\t            return this._event.playbackRate;\n\t\t        },\n\t\t        set: function (rate) {\n\t\t            this._event.playbackRate = rate;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Random variation +/-0.01s to the scheduled time. \n\t\t\t *  Or give it a time value which it will randomize by.\n\t\t\t *  @type {Boolean|Time}\n\t\t\t *  @memberOf Tone.Loop#\n\t\t\t *  @name humanize\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Loop.prototype, 'humanize', {\n\t\t        get: function () {\n\t\t            return this._event.humanize;\n\t\t        },\n\t\t        set: function (variation) {\n\t\t            this._event.humanize = variation;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The probably of the callback being invoked.\n\t\t\t *  @memberOf Tone.Loop#\n\t\t\t *  @type {NormalRange}\n\t\t\t *  @name probability\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Loop.prototype, 'probability', {\n\t\t        get: function () {\n\t\t            return this._event.probability;\n\t\t        },\n\t\t        set: function (prob) {\n\t\t            this._event.probability = prob;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Muting the Loop means that no callbacks are invoked.\n\t\t\t *  @memberOf Tone.Loop#\n\t\t\t *  @type {Boolean}\n\t\t\t *  @name mute\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Loop.prototype, 'mute', {\n\t\t        get: function () {\n\t\t            return this._event.mute;\n\t\t        },\n\t\t        set: function (mute) {\n\t\t            this._event.mute = mute;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The number of iterations of the loop. The default\n\t\t\t *  value is Infinity (loop forever).\n\t\t\t *  @memberOf Tone.Loop#\n\t\t\t *  @type {Positive}\n\t\t\t *  @name iterations\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Loop.prototype, 'iterations', {\n\t\t        get: function () {\n\t\t            if (this._event.loop === true) {\n\t\t                return Infinity;\n\t\t            } else {\n\t\t                return this._event.loop;\n\t\t            }\n\t\t            return this._pattern.index;\n\t\t        },\n\t\t        set: function (iters) {\n\t\t            if (iters === Infinity) {\n\t\t                this._event.loop = true;\n\t\t            } else {\n\t\t                this._event.loop = iters;\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Clean up\n\t\t\t *  @return  {Tone.Loop}  this\n\t\t\t */\n\t\t    Tone.Loop.prototype.dispose = function () {\n\t\t        this._event.dispose();\n\t\t        this._event = null;\n\t\t        this.callback = null;\n\t\t    };\n\t\t    return Tone.Loop;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Tone.Part is a collection Tone.Events which can be\n\t\t\t *         started/stoped and looped as a single unit.\n\t\t\t *\n\t\t\t *  @extends {Tone.Event}\n\t\t\t *  @param {Function} callback The callback to invoke on each event\n\t\t\t *  @param {Array} events the array of events\n\t\t\t *  @example\n\t\t\t * var part = new Tone.Part(function(time, note){\n\t\t\t * \t//the notes given as the second element in the array\n\t\t\t * \t//will be passed in as the second argument\n\t\t\t * \tsynth.triggerAttackRelease(note, \"8n\", time);\n\t\t\t * }, [[0, \"C2\"], [\"0:2\", \"C3\"], [\"0:3:2\", \"G2\"]]);\n\t\t\t *  @example\n\t\t\t * //use an array of objects as long as the object has a \"time\" attribute\n\t\t\t * var part = new Tone.Part(function(time, value){\n\t\t\t * \t//the value is an object which contains both the note and the velocity\n\t\t\t * \tsynth.triggerAttackRelease(value.note, \"8n\", time, value.velocity);\n\t\t\t * }, [{\"time\" : 0, \"note\" : \"C3\", \"velocity\": 0.9}, \n\t\t\t * \t   {\"time\" : \"0:2\", \"note\" : \"C4\", \"velocity\": 0.5}\n\t\t\t * ]).start(0);\n\t\t\t */\n\t\t    Tone.Part = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'callback',\n\t\t            'events'\n\t\t        ], Tone.Part.defaults);\n\t\t        /**\n\t\t\t\t *  If the part is looping or not\n\t\t\t\t *  @type  {Boolean|Positive}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._loop = options.loop;\n\t\t        /**\n\t\t\t\t *  When the note is scheduled to start.\n\t\t\t\t *  @type  {Ticks}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._loopStart = this.toTicks(options.loopStart);\n\t\t        /**\n\t\t\t\t *  When the note is scheduled to start.\n\t\t\t\t *  @type  {Ticks}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._loopEnd = this.toTicks(options.loopEnd);\n\t\t        /**\n\t\t\t\t *  The playback rate of the part\n\t\t\t\t *  @type  {Positive}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._playbackRate = options.playbackRate;\n\t\t        /**\n\t\t\t\t *  private holder of probability value\n\t\t\t\t *  @type {NormalRange}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._probability = options.probability;\n\t\t        /**\n\t\t\t\t *  the amount of variation from the\n\t\t\t\t *  given time. \n\t\t\t\t *  @type {Boolean|Time}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._humanize = options.humanize;\n\t\t        /**\n\t\t\t\t *  The start offset\n\t\t\t\t *  @type {Ticks}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._startOffset = 0;\n\t\t        /**\n\t\t\t\t *  Keeps track of the current state\n\t\t\t\t *  @type {Tone.TimelineState}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._state = new Tone.TimelineState(Tone.State.Stopped);\n\t\t        /**\n\t\t\t\t *  An array of Objects. \n\t\t\t\t *  @type  {Array}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._events = [];\n\t\t        /**\n\t\t\t\t *  The callback to invoke at all the scheduled events.\n\t\t\t\t *  @type {Function}\n\t\t\t\t */\n\t\t        this.callback = options.callback;\n\t\t        /**\n\t\t\t\t *  If mute is true, the callback won't be\n\t\t\t\t *  invoked.\n\t\t\t\t *  @type {Boolean}\n\t\t\t\t */\n\t\t        this.mute = options.mute;\n\t\t        //add the events\n\t\t        var events = this.defaultArg(options.events, []);\n\t\t        if (!this.isUndef(options.events)) {\n\t\t            for (var i = 0; i < events.length; i++) {\n\t\t                if (Array.isArray(events[i])) {\n\t\t                    this.add(events[i][0], events[i][1]);\n\t\t                } else {\n\t\t                    this.add(events[i]);\n\t\t                }\n\t\t            }\n\t\t        }\n\t\t    };\n\t\t    Tone.extend(Tone.Part, Tone.Event);\n\t\t    /**\n\t\t\t *  The default values\n\t\t\t *  @type  {Object}\n\t\t\t *  @const\n\t\t\t */\n\t\t    Tone.Part.defaults = {\n\t\t        'callback': Tone.noOp,\n\t\t        'loop': false,\n\t\t        'loopEnd': '1m',\n\t\t        'loopStart': 0,\n\t\t        'playbackRate': 1,\n\t\t        'probability': 1,\n\t\t        'humanize': false,\n\t\t        'mute': false\n\t\t    };\n\t\t    /**\n\t\t\t *  Start the part at the given time. \n\t\t\t *  @param  {TransportTime}  time    When to start the part.\n\t\t\t *  @param  {Time=}  offset  The offset from the start of the part\n\t\t\t *                           to begin playing at.\n\t\t\t *  @return  {Tone.Part}  this\n\t\t\t */\n\t\t    Tone.Part.prototype.start = function (time, offset) {\n\t\t        var ticks = this.toTicks(time);\n\t\t        if (this._state.getValueAtTime(ticks) !== Tone.State.Started) {\n\t\t            if (this._loop) {\n\t\t                offset = this.defaultArg(offset, this._loopStart);\n\t\t            } else {\n\t\t                offset = this.defaultArg(offset, 0);\n\t\t            }\n\t\t            offset = this.toTicks(offset);\n\t\t            this._state.add({\n\t\t                'state': Tone.State.Started,\n\t\t                'time': ticks,\n\t\t                'offset': offset\n\t\t            });\n\t\t            this._forEach(function (event) {\n\t\t                this._startNote(event, ticks, offset);\n\t\t            });\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Start the event in the given event at the correct time given\n\t\t\t *  the ticks and offset and looping.\n\t\t\t *  @param  {Tone.Event}  event \n\t\t\t *  @param  {Ticks}  ticks\n\t\t\t *  @param  {Ticks}  offset\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Part.prototype._startNote = function (event, ticks, offset) {\n\t\t        ticks -= offset;\n\t\t        if (this._loop) {\n\t\t            if (event.startOffset >= this._loopStart && event.startOffset < this._loopEnd) {\n\t\t                if (event.startOffset < offset) {\n\t\t                    //start it on the next loop\n\t\t                    ticks += this._getLoopDuration();\n\t\t                }\n\t\t                event.start(Tone.TransportTime(ticks, 'i'));\n\t\t            } else if (event.startOffset < this._loopStart && event.startOffset >= offset) {\n\t\t                event.loop = false;\n\t\t                event.start(Tone.TransportTime(ticks, 'i'));\n\t\t            }\n\t\t        } else {\n\t\t            if (event.startOffset >= offset) {\n\t\t                event.start(Tone.TransportTime(ticks, 'i'));\n\t\t            }\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  The start from the scheduled start time\n\t\t\t *  @type {Ticks}\n\t\t\t *  @memberOf Tone.Part#\n\t\t\t *  @name startOffset\n\t\t\t *  @private\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Part.prototype, 'startOffset', {\n\t\t        get: function () {\n\t\t            return this._startOffset;\n\t\t        },\n\t\t        set: function (offset) {\n\t\t            this._startOffset = offset;\n\t\t            this._forEach(function (event) {\n\t\t                event.startOffset += this._startOffset;\n\t\t            });\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Stop the part at the given time.\n\t\t\t *  @param  {TimelinePosition}  time  When to stop the part.\n\t\t\t *  @return  {Tone.Part}  this\n\t\t\t */\n\t\t    Tone.Part.prototype.stop = function (time) {\n\t\t        var ticks = this.toTicks(time);\n\t\t        this._state.cancel(ticks);\n\t\t        this._state.setStateAtTime(Tone.State.Stopped, ticks);\n\t\t        this._forEach(function (event) {\n\t\t            event.stop(time);\n\t\t        });\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Get/Set an Event's value at the given time. \n\t\t\t *  If a value is passed in and no event exists at\n\t\t\t *  the given time, one will be created with that value. \n\t\t\t *  If two events are at the same time, the first one will\n\t\t\t *  be returned.\n\t\t\t *  @example\n\t\t\t * part.at(\"1m\"); //returns the part at the first measure\n\t\t\t *\n\t\t\t * part.at(\"2m\", \"C2\"); //set the value at \"2m\" to C2. \n\t\t\t * //if an event didn't exist at that time, it will be created.\n\t\t\t *  @param {TransportTime} time The time of the event to get or set.\n\t\t\t *  @param {*=} value If a value is passed in, the value of the\n\t\t\t *                    event at the given time will be set to it.\n\t\t\t *  @return {Tone.Event} the event at the time\n\t\t\t */\n\t\t    Tone.Part.prototype.at = function (time, value) {\n\t\t        time = Tone.TransportTime(time);\n\t\t        var tickTime = Tone.Time(1, 'i').toSeconds();\n\t\t        for (var i = 0; i < this._events.length; i++) {\n\t\t            var event = this._events[i];\n\t\t            if (Math.abs(time.toTicks() - event.startOffset) < tickTime) {\n\t\t                if (!this.isUndef(value)) {\n\t\t                    event.value = value;\n\t\t                }\n\t\t                return event;\n\t\t            }\n\t\t        }\n\t\t        //if there was no event at that time, create one\n\t\t        if (!this.isUndef(value)) {\n\t\t            this.add(time, value);\n\t\t            //return the new event\n\t\t            return this._events[this._events.length - 1];\n\t\t        } else {\n\t\t            return null;\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Add a an event to the part. \n\t\t\t *  @param {Time} time The time the note should start.\n\t\t\t *                            If an object is passed in, it should\n\t\t\t *                            have a 'time' attribute and the rest\n\t\t\t *                            of the object will be used as the 'value'.\n\t\t\t *  @param  {Tone.Event|*}  value \n\t\t\t *  @returns {Tone.Part} this\n\t\t\t *  @example\n\t\t\t * part.add(\"1m\", \"C#+11\");\n\t\t\t */\n\t\t    Tone.Part.prototype.add = function (time, value) {\n\t\t        //extract the parameters\n\t\t        if (time.hasOwnProperty('time')) {\n\t\t            value = time;\n\t\t            time = value.time;\n\t\t        }\n\t\t        time = this.toTicks(time);\n\t\t        var event;\n\t\t        if (value instanceof Tone.Event) {\n\t\t            event = value;\n\t\t            event.callback = this._tick.bind(this);\n\t\t        } else {\n\t\t            event = new Tone.Event({\n\t\t                'callback': this._tick.bind(this),\n\t\t                'value': value\n\t\t            });\n\t\t        }\n\t\t        //the start offset\n\t\t        event.startOffset = time;\n\t\t        //initialize the values\n\t\t        event.set({\n\t\t            'loopEnd': this.loopEnd,\n\t\t            'loopStart': this.loopStart,\n\t\t            'loop': this.loop,\n\t\t            'humanize': this.humanize,\n\t\t            'playbackRate': this.playbackRate,\n\t\t            'probability': this.probability\n\t\t        });\n\t\t        this._events.push(event);\n\t\t        //start the note if it should be played right now\n\t\t        this._restartEvent(event);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Restart the given event\n\t\t\t *  @param  {Tone.Event}  event \n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Part.prototype._restartEvent = function (event) {\n\t\t        this._state.forEach(function (stateEvent) {\n\t\t            if (stateEvent.state === Tone.State.Started) {\n\t\t                this._startNote(event, stateEvent.time, stateEvent.offset);\n\t\t            } else {\n\t\t                //stop the note\n\t\t                event.stop(Tone.TransportTime(stateEvent.time, 'i'));\n\t\t            }\n\t\t        }.bind(this));\n\t\t    };\n\t\t    /**\n\t\t\t *  Remove an event from the part. Will recursively iterate\n\t\t\t *  into nested parts to find the event.\n\t\t\t *  @param {Time} time The time of the event\n\t\t\t *  @param {*} value Optionally select only a specific event value\n\t\t\t *  @return  {Tone.Part}  this\n\t\t\t */\n\t\t    Tone.Part.prototype.remove = function (time, value) {\n\t\t        //extract the parameters\n\t\t        if (time.hasOwnProperty('time')) {\n\t\t            value = time;\n\t\t            time = value.time;\n\t\t        }\n\t\t        time = this.toTicks(time);\n\t\t        for (var i = this._events.length - 1; i >= 0; i--) {\n\t\t            var event = this._events[i];\n\t\t            if (event instanceof Tone.Part) {\n\t\t                event.remove(time, value);\n\t\t            } else {\n\t\t                if (event.startOffset === time) {\n\t\t                    if (this.isUndef(value) || !this.isUndef(value) && event.value === value) {\n\t\t                        this._events.splice(i, 1);\n\t\t                        event.dispose();\n\t\t                    }\n\t\t                }\n\t\t            }\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Remove all of the notes from the group. \n\t\t\t *  @return  {Tone.Part}  this\n\t\t\t */\n\t\t    Tone.Part.prototype.removeAll = function () {\n\t\t        this._forEach(function (event) {\n\t\t            event.dispose();\n\t\t        });\n\t\t        this._events = [];\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Cancel scheduled state change events: i.e. \"start\" and \"stop\".\n\t\t\t *  @param {TimelinePosition} after The time after which to cancel the scheduled events.\n\t\t\t *  @return  {Tone.Part}  this\n\t\t\t */\n\t\t    Tone.Part.prototype.cancel = function (after) {\n\t\t        after = this.toTicks(after);\n\t\t        this._forEach(function (event) {\n\t\t            event.cancel(after);\n\t\t        });\n\t\t        this._state.cancel(after);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Iterate over all of the events\n\t\t\t *  @param {Function} callback\n\t\t\t *  @param {Object} ctx The context\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Part.prototype._forEach = function (callback, ctx) {\n\t\t        ctx = this.defaultArg(ctx, this);\n\t\t        for (var i = this._events.length - 1; i >= 0; i--) {\n\t\t            var e = this._events[i];\n\t\t            if (e instanceof Tone.Part) {\n\t\t                e._forEach(callback, ctx);\n\t\t            } else {\n\t\t                callback.call(ctx, e);\n\t\t            }\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Set the attribute of all of the events\n\t\t\t *  @param  {String}  attr  the attribute to set\n\t\t\t *  @param  {*}  value      The value to set it to\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Part.prototype._setAll = function (attr, value) {\n\t\t        this._forEach(function (event) {\n\t\t            event[attr] = value;\n\t\t        });\n\t\t    };\n\t\t    /**\n\t\t\t *  Internal tick method\n\t\t\t *  @param  {Number}  time  The time of the event in seconds\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Part.prototype._tick = function (time, value) {\n\t\t        if (!this.mute) {\n\t\t            this.callback(time, value);\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Determine if the event should be currently looping\n\t\t\t *  given the loop boundries of this Part.\n\t\t\t *  @param  {Tone.Event}  event  The event to test\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Part.prototype._testLoopBoundries = function (event) {\n\t\t        if (event.startOffset < this._loopStart || event.startOffset >= this._loopEnd) {\n\t\t            event.cancel(0);\n\t\t        } else {\n\t\t            //reschedule it if it's stopped\n\t\t            if (event.state === Tone.State.Stopped) {\n\t\t                this._restartEvent(event);\n\t\t            }\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  The probability of the notes being triggered.\n\t\t\t *  @memberOf Tone.Part#\n\t\t\t *  @type {NormalRange}\n\t\t\t *  @name probability\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Part.prototype, 'probability', {\n\t\t        get: function () {\n\t\t            return this._probability;\n\t\t        },\n\t\t        set: function (prob) {\n\t\t            this._probability = prob;\n\t\t            this._setAll('probability', prob);\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  If set to true, will apply small random variation\n\t\t\t *  to the callback time. If the value is given as a time, it will randomize\n\t\t\t *  by that amount.\n\t\t\t *  @example\n\t\t\t * event.humanize = true;\n\t\t\t *  @type {Boolean|Time}\n\t\t\t *  @name humanize\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Part.prototype, 'humanize', {\n\t\t        get: function () {\n\t\t            return this._humanize;\n\t\t        },\n\t\t        set: function (variation) {\n\t\t            this._humanize = variation;\n\t\t            this._setAll('humanize', variation);\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  If the part should loop or not\n\t\t\t *  between Tone.Part.loopStart and \n\t\t\t *  Tone.Part.loopEnd. An integer\n\t\t\t *  value corresponds to the number of\n\t\t\t *  loops the Part does after it starts.\n\t\t\t *  @memberOf Tone.Part#\n\t\t\t *  @type {Boolean|Positive}\n\t\t\t *  @name loop\n\t\t\t *  @example\n\t\t\t * //loop the part 8 times\n\t\t\t * part.loop = 8;\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Part.prototype, 'loop', {\n\t\t        get: function () {\n\t\t            return this._loop;\n\t\t        },\n\t\t        set: function (loop) {\n\t\t            this._loop = loop;\n\t\t            this._forEach(function (event) {\n\t\t                event._loopStart = this._loopStart;\n\t\t                event._loopEnd = this._loopEnd;\n\t\t                event.loop = loop;\n\t\t                this._testLoopBoundries(event);\n\t\t            });\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The loopEnd point determines when it will \n\t\t\t *  loop if Tone.Part.loop is true.\n\t\t\t *  @memberOf Tone.Part#\n\t\t\t *  @type {TransportTime}\n\t\t\t *  @name loopEnd\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Part.prototype, 'loopEnd', {\n\t\t        get: function () {\n\t\t            return Tone.TransportTime(this._loopEnd, 'i').toNotation();\n\t\t        },\n\t\t        set: function (loopEnd) {\n\t\t            this._loopEnd = this.toTicks(loopEnd);\n\t\t            if (this._loop) {\n\t\t                this._forEach(function (event) {\n\t\t                    event.loopEnd = loopEnd;\n\t\t                    this._testLoopBoundries(event);\n\t\t                });\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The loopStart point determines when it will \n\t\t\t *  loop if Tone.Part.loop is true.\n\t\t\t *  @memberOf Tone.Part#\n\t\t\t *  @type {TransportTime}\n\t\t\t *  @name loopStart\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Part.prototype, 'loopStart', {\n\t\t        get: function () {\n\t\t            return Tone.TransportTime(this._loopStart, 'i').toNotation();\n\t\t        },\n\t\t        set: function (loopStart) {\n\t\t            this._loopStart = this.toTicks(loopStart);\n\t\t            if (this._loop) {\n\t\t                this._forEach(function (event) {\n\t\t                    event.loopStart = this.loopStart;\n\t\t                    this._testLoopBoundries(event);\n\t\t                });\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * \tThe playback rate of the part\n\t\t\t *  @memberOf Tone.Part#\n\t\t\t *  @type {Positive}\n\t\t\t *  @name playbackRate\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Part.prototype, 'playbackRate', {\n\t\t        get: function () {\n\t\t            return this._playbackRate;\n\t\t        },\n\t\t        set: function (rate) {\n\t\t            this._playbackRate = rate;\n\t\t            this._setAll('playbackRate', rate);\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * \tThe number of scheduled notes in the part. \n\t\t\t *  @memberOf Tone.Part#\n\t\t\t *  @type {Positive}\n\t\t\t *  @name length\n\t\t\t *  @readOnly\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Part.prototype, 'length', {\n\t\t        get: function () {\n\t\t            return this._events.length;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Clean up\n\t\t\t *  @return  {Tone.Part}  this\n\t\t\t */\n\t\t    Tone.Part.prototype.dispose = function () {\n\t\t        this.removeAll();\n\t\t        this._state.dispose();\n\t\t        this._state = null;\n\t\t        this.callback = null;\n\t\t        this._events = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Part;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    /**\n\t\t\t *  @class Tone.Pattern arpeggiates between the given notes\n\t\t\t *         in a number of patterns. See Tone.CtrlPattern for\n\t\t\t *         a full list of patterns.\n\t\t\t *  @example\n\t\t\t * var pattern = new Tone.Pattern(function(time, note){\n\t\t\t *   //the order of the notes passed in depends on the pattern\n\t\t\t * }, [\"C2\", \"D4\", \"E5\", \"A6\"], \"upDown\");\n\t\t\t *  @extends {Tone.Loop}\n\t\t\t *  @param {Function} callback The callback to invoke with the\n\t\t\t *                             event.\n\t\t\t *  @param {Array} values The values to arpeggiate over.\n\t\t\t */\n\t\t    Tone.Pattern = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'callback',\n\t\t            'values',\n\t\t            'pattern'\n\t\t        ], Tone.Pattern.defaults);\n\t\t        Tone.Loop.call(this, options);\n\t\t        /**\n\t\t\t\t *  The pattern manager\n\t\t\t\t *  @type {Tone.CtrlPattern}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._pattern = new Tone.CtrlPattern({\n\t\t            'values': options.values,\n\t\t            'type': options.pattern,\n\t\t            'index': options.index\n\t\t        });\n\t\t    };\n\t\t    Tone.extend(Tone.Pattern, Tone.Loop);\n\t\t    /**\n\t\t\t *  The defaults\n\t\t\t *  @const\n\t\t\t *  @type  {Object}\n\t\t\t */\n\t\t    Tone.Pattern.defaults = {\n\t\t        'pattern': Tone.CtrlPattern.Type.Up,\n\t\t        'values': []\n\t\t    };\n\t\t    /**\n\t\t\t *  Internal function called when the notes should be called\n\t\t\t *  @param  {Number}  time  The time the event occurs\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Pattern.prototype._tick = function (time) {\n\t\t        this.callback(time, this._pattern.value);\n\t\t        this._pattern.next();\n\t\t    };\n\t\t    /**\n\t\t\t *  The current index in the values array.\n\t\t\t *  @memberOf Tone.Pattern#\n\t\t\t *  @type {Positive}\n\t\t\t *  @name index\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Pattern.prototype, 'index', {\n\t\t        get: function () {\n\t\t            return this._pattern.index;\n\t\t        },\n\t\t        set: function (i) {\n\t\t            this._pattern.index = i;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The array of events.\n\t\t\t *  @memberOf Tone.Pattern#\n\t\t\t *  @type {Array}\n\t\t\t *  @name values\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Pattern.prototype, 'values', {\n\t\t        get: function () {\n\t\t            return this._pattern.values;\n\t\t        },\n\t\t        set: function (vals) {\n\t\t            this._pattern.values = vals;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The current value of the pattern.\n\t\t\t *  @memberOf Tone.Pattern#\n\t\t\t *  @type {*}\n\t\t\t *  @name value\n\t\t\t *  @readOnly\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Pattern.prototype, 'value', {\n\t\t        get: function () {\n\t\t            return this._pattern.value;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The pattern type. See Tone.CtrlPattern for the full list of patterns.\n\t\t\t *  @memberOf Tone.Pattern#\n\t\t\t *  @type {String}\n\t\t\t *  @name pattern\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Pattern.prototype, 'pattern', {\n\t\t        get: function () {\n\t\t            return this._pattern.type;\n\t\t        },\n\t\t        set: function (pattern) {\n\t\t            this._pattern.type = pattern;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Clean up\n\t\t\t *  @return  {Tone.Pattern}  this\n\t\t\t */\n\t\t    Tone.Pattern.prototype.dispose = function () {\n\t\t        Tone.Loop.prototype.dispose.call(this);\n\t\t        this._pattern.dispose();\n\t\t        this._pattern = null;\n\t\t    };\n\t\t    return Tone.Pattern;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class A sequence is an alternate notation of a part. Instead\n\t\t\t *         of passing in an array of [time, event] pairs, pass\n\t\t\t *         in an array of events which will be spaced at the\n\t\t\t *         given subdivision. Sub-arrays will subdivide that beat\n\t\t\t *         by the number of items are in the array. \n\t\t\t *         Sequence notation inspiration from [Tidal](http://yaxu.org/tidal/)\n\t\t\t *  @param  {Function}  callback  The callback to invoke with every note\n\t\t\t *  @param  {Array}    events  The sequence\n\t\t\t *  @param  {Time} subdivision  The subdivision between which events are placed. \n\t\t\t *  @extends {Tone.Part}\n\t\t\t *  @example\n\t\t\t * var seq = new Tone.Sequence(function(time, note){\n\t\t\t * \tconsole.log(note);\n\t\t\t * //straight quater notes\n\t\t\t * }, [\"C4\", \"E4\", \"G4\", \"A4\"], \"4n\");\n\t\t\t *  @example\n\t\t\t * var seq = new Tone.Sequence(function(time, note){\n\t\t\t * \tconsole.log(note);\n\t\t\t * //subdivisions are given as subarrays\n\t\t\t * }, [\"C4\", [\"E4\", \"D4\", \"E4\"], \"G4\", [\"A4\", \"G4\"]]);\n\t\t\t */\n\t\t    Tone.Sequence = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'callback',\n\t\t            'events',\n\t\t            'subdivision'\n\t\t        ], Tone.Sequence.defaults);\n\t\t        //remove the events\n\t\t        var events = options.events;\n\t\t        delete options.events;\n\t\t        Tone.Part.call(this, options);\n\t\t        /**\n\t\t\t\t *  The subdivison of each note\n\t\t\t\t *  @type  {Ticks}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._subdivision = this.toTicks(options.subdivision);\n\t\t        //if no time was passed in, the loop end is the end of the cycle\n\t\t        if (this.isUndef(options.loopEnd) && !this.isUndef(events)) {\n\t\t            this._loopEnd = events.length * this._subdivision;\n\t\t        }\n\t\t        //defaults to looping\n\t\t        this._loop = true;\n\t\t        //add all of the events\n\t\t        if (!this.isUndef(events)) {\n\t\t            for (var i = 0; i < events.length; i++) {\n\t\t                this.add(i, events[i]);\n\t\t            }\n\t\t        }\n\t\t    };\n\t\t    Tone.extend(Tone.Sequence, Tone.Part);\n\t\t    /**\n\t\t\t *  The default values.\n\t\t\t *  @type  {Object}\n\t\t\t */\n\t\t    Tone.Sequence.defaults = { 'subdivision': '4n' };\n\t\t    /**\n\t\t\t *  The subdivision of the sequence. This can only be \n\t\t\t *  set in the constructor. The subdivision is the \n\t\t\t *  interval between successive steps. \n\t\t\t *  @type {Time}\n\t\t\t *  @memberOf Tone.Sequence#\n\t\t\t *  @name subdivision\n\t\t\t *  @readOnly\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Sequence.prototype, 'subdivision', {\n\t\t        get: function () {\n\t\t            return Tone.Time(this._subdivision, 'i').toNotation();\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Get/Set an index of the sequence. If the index contains a subarray, \n\t\t\t *  a Tone.Sequence representing that sub-array will be returned. \n\t\t\t *  @example\n\t\t\t * var sequence = new Tone.Sequence(playNote, [\"E4\", \"C4\", \"F#4\", [\"A4\", \"Bb3\"]])\n\t\t\t * sequence.at(0)// => returns \"E4\"\n\t\t\t * //set a value\n\t\t\t * sequence.at(0, \"G3\");\n\t\t\t * //get a nested sequence\n\t\t\t * sequence.at(3).at(1)// => returns \"Bb3\"\n\t\t\t * @param {Positive} index The index to get or set\n\t\t\t * @param {*} value Optionally pass in the value to set at the given index.\n\t\t\t */\n\t\t    Tone.Sequence.prototype.at = function (index, value) {\n\t\t        //if the value is an array, \n\t\t        if (this.isArray(value)) {\n\t\t            //remove the current event at that index\n\t\t            this.remove(index);\n\t\t        }\n\t\t        //call the parent's method\n\t\t        return Tone.Part.prototype.at.call(this, this._indexTime(index), value);\n\t\t    };\n\t\t    /**\n\t\t\t *  Add an event at an index, if there's already something\n\t\t\t *  at that index, overwrite it. If `value` is an array, \n\t\t\t *  it will be parsed as a subsequence.\n\t\t\t *  @param {Number} index The index to add the event to\n\t\t\t *  @param {*} value The value to add at that index\n\t\t\t *  @returns {Tone.Sequence} this\n\t\t\t */\n\t\t    Tone.Sequence.prototype.add = function (index, value) {\n\t\t        if (value === null) {\n\t\t            return this;\n\t\t        }\n\t\t        if (this.isArray(value)) {\n\t\t            //make a subsequence and add that to the sequence\n\t\t            var subSubdivision = Math.round(this._subdivision / value.length);\n\t\t            value = new Tone.Sequence(this._tick.bind(this), value, Tone.Time(subSubdivision, 'i'));\n\t\t        }\n\t\t        Tone.Part.prototype.add.call(this, this._indexTime(index), value);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Remove a value from the sequence by index\n\t\t\t *  @param {Number} index The index of the event to remove\n\t\t\t *  @returns {Tone.Sequence} this\n\t\t\t */\n\t\t    Tone.Sequence.prototype.remove = function (index, value) {\n\t\t        Tone.Part.prototype.remove.call(this, this._indexTime(index), value);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Get the time of the index given the Sequence's subdivision\n\t\t\t *  @param  {Number}  index \n\t\t\t *  @return  {Time}  The time of that index\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Sequence.prototype._indexTime = function (index) {\n\t\t        if (index instanceof Tone.TransportTime) {\n\t\t            return index;\n\t\t        } else {\n\t\t            return Tone.TransportTime(index * this._subdivision + this.startOffset, 'i');\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Clean up.\n\t\t\t *  @return {Tone.Sequence} this\n\t\t\t */\n\t\t    Tone.Sequence.prototype.dispose = function () {\n\t\t        Tone.Part.prototype.dispose.call(this);\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Sequence;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Tone.PulseOscillator is a pulse oscillator with control over pulse width,\n\t\t\t *         also known as the duty cycle. At 50% duty cycle (width = 0.5) the wave is \n\t\t\t *         a square and only odd-numbered harmonics are present. At all other widths \n\t\t\t *         even-numbered harmonics are present. Read more \n\t\t\t *         [here](https://wigglewave.wordpress.com/2014/08/16/pulse-waveforms-and-harmonics/).\n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.Oscillator}\n\t\t\t *  @param {Frequency} [frequency] The frequency of the oscillator\n\t\t\t *  @param {NormalRange} [width] The width of the pulse\n\t\t\t *  @example\n\t\t\t * var pulse = new Tone.PulseOscillator(\"E5\", 0.4).toMaster().start();\n\t\t\t */\n\t\t    Tone.PulseOscillator = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'frequency',\n\t\t            'width'\n\t\t        ], Tone.Oscillator.defaults);\n\t\t        Tone.Source.call(this, options);\n\t\t        /**\n\t\t\t\t *  The width of the pulse. \n\t\t\t\t *  @type {NormalRange}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.width = new Tone.Signal(options.width, Tone.Type.NormalRange);\n\t\t        /**\n\t\t\t\t *  gate the width amount\n\t\t\t\t *  @type {Tone.Gain}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._widthGate = new Tone.Gain();\n\t\t        /**\n\t\t\t\t *  the sawtooth oscillator\n\t\t\t\t *  @type {Tone.Oscillator}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._sawtooth = new Tone.Oscillator({\n\t\t            frequency: options.frequency,\n\t\t            detune: options.detune,\n\t\t            type: 'sawtooth',\n\t\t            phase: options.phase\n\t\t        });\n\t\t        /**\n\t\t\t\t *  The frequency control.\n\t\t\t\t *  @type {Frequency}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.frequency = this._sawtooth.frequency;\n\t\t        /**\n\t\t\t\t *  The detune in cents. \n\t\t\t\t *  @type {Cents}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.detune = this._sawtooth.detune;\n\t\t        /**\n\t\t\t\t *  Threshold the signal to turn it into a square\n\t\t\t\t *  @type {Tone.WaveShaper}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._thresh = new Tone.WaveShaper(function (val) {\n\t\t            if (val < 0) {\n\t\t                return -1;\n\t\t            } else {\n\t\t                return 1;\n\t\t            }\n\t\t        });\n\t\t        //connections\n\t\t        this._sawtooth.chain(this._thresh, this.output);\n\t\t        this.width.chain(this._widthGate, this._thresh);\n\t\t        this._readOnly([\n\t\t            'width',\n\t\t            'frequency',\n\t\t            'detune'\n\t\t        ]);\n\t\t    };\n\t\t    Tone.extend(Tone.PulseOscillator, Tone.Oscillator);\n\t\t    /**\n\t\t\t *  The default parameters.\n\t\t\t *  @static\n\t\t\t *  @const\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.PulseOscillator.defaults = {\n\t\t        'frequency': 440,\n\t\t        'detune': 0,\n\t\t        'phase': 0,\n\t\t        'width': 0.2\n\t\t    };\n\t\t    /**\n\t\t\t *  start the oscillator\n\t\t\t *  @param  {Time} time \n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.PulseOscillator.prototype._start = function (time) {\n\t\t        time = this.toSeconds(time);\n\t\t        this._sawtooth.start(time);\n\t\t        this._widthGate.gain.setValueAtTime(1, time);\n\t\t    };\n\t\t    /**\n\t\t\t *  stop the oscillator\n\t\t\t *  @param  {Time} time \n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.PulseOscillator.prototype._stop = function (time) {\n\t\t        time = this.toSeconds(time);\n\t\t        this._sawtooth.stop(time);\n\t\t        //the width is still connected to the output. \n\t\t        //that needs to be stopped also\n\t\t        this._widthGate.gain.setValueAtTime(0, time);\n\t\t    };\n\t\t    /**\n\t\t\t * The phase of the oscillator in degrees.\n\t\t\t * @memberOf Tone.PulseOscillator#\n\t\t\t * @type {Degrees}\n\t\t\t * @name phase\n\t\t\t */\n\t\t    Object.defineProperty(Tone.PulseOscillator.prototype, 'phase', {\n\t\t        get: function () {\n\t\t            return this._sawtooth.phase;\n\t\t        },\n\t\t        set: function (phase) {\n\t\t            this._sawtooth.phase = phase;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The type of the oscillator. Always returns \"pulse\".\n\t\t\t * @readOnly\n\t\t\t * @memberOf Tone.PulseOscillator#\n\t\t\t * @type {string}\n\t\t\t * @name type\n\t\t\t */\n\t\t    Object.defineProperty(Tone.PulseOscillator.prototype, 'type', {\n\t\t        get: function () {\n\t\t            return 'pulse';\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The partials of the waveform. Cannot set partials for this waveform type\n\t\t\t * @memberOf Tone.PulseOscillator#\n\t\t\t * @type {Array}\n\t\t\t * @name partials\n\t\t\t * @private\n\t\t\t */\n\t\t    Object.defineProperty(Tone.PulseOscillator.prototype, 'partials', {\n\t\t        get: function () {\n\t\t            return [];\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Clean up method.\n\t\t\t *  @return {Tone.PulseOscillator} this\n\t\t\t */\n\t\t    Tone.PulseOscillator.prototype.dispose = function () {\n\t\t        Tone.Source.prototype.dispose.call(this);\n\t\t        this._sawtooth.dispose();\n\t\t        this._sawtooth = null;\n\t\t        this._writable([\n\t\t            'width',\n\t\t            'frequency',\n\t\t            'detune'\n\t\t        ]);\n\t\t        this.width.dispose();\n\t\t        this.width = null;\n\t\t        this._widthGate.dispose();\n\t\t        this._widthGate = null;\n\t\t        this._thresh.dispose();\n\t\t        this._thresh = null;\n\t\t        this.frequency = null;\n\t\t        this.detune = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.PulseOscillator;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Tone.PWMOscillator modulates the width of a Tone.PulseOscillator \n\t\t\t *         at the modulationFrequency. This has the effect of continuously\n\t\t\t *         changing the timbre of the oscillator by altering the harmonics \n\t\t\t *         generated.\n\t\t\t *\n\t\t\t *  @extends {Tone.Oscillator}\n\t\t\t *  @constructor\n\t\t\t *  @param {Frequency} frequency The starting frequency of the oscillator. \n\t\t\t *  @param {Frequency} modulationFrequency The modulation frequency of the width of the pulse. \n\t\t\t *  @example\n\t\t\t *  var pwm = new Tone.PWMOscillator(\"Ab3\", 0.3).toMaster().start();\n\t\t\t */\n\t\t    Tone.PWMOscillator = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'frequency',\n\t\t            'modulationFrequency'\n\t\t        ], Tone.PWMOscillator.defaults);\n\t\t        Tone.Source.call(this, options);\n\t\t        /**\n\t\t\t\t *  the pulse oscillator\n\t\t\t\t *  @type {Tone.PulseOscillator}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._pulse = new Tone.PulseOscillator(options.modulationFrequency);\n\t\t        //change the pulse oscillator type\n\t\t        this._pulse._sawtooth.type = 'sine';\n\t\t        /**\n\t\t\t\t *  the modulator\n\t\t\t\t *  @type {Tone.Oscillator}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._modulator = new Tone.Oscillator({\n\t\t            'frequency': options.frequency,\n\t\t            'detune': options.detune,\n\t\t            'phase': options.phase\n\t\t        });\n\t\t        /**\n\t\t\t\t *  Scale the oscillator so it doesn't go silent \n\t\t\t\t *  at the extreme values.\n\t\t\t\t *  @type {Tone.Multiply}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._scale = new Tone.Multiply(2);\n\t\t        /**\n\t\t\t\t *  The frequency control.\n\t\t\t\t *  @type {Frequency}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.frequency = this._modulator.frequency;\n\t\t        /**\n\t\t\t\t *  The detune of the oscillator.\n\t\t\t\t *  @type {Cents}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.detune = this._modulator.detune;\n\t\t        /**\n\t\t\t\t *  The modulation rate of the oscillator. \n\t\t\t\t *  @type {Frequency}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.modulationFrequency = this._pulse.frequency;\n\t\t        //connections\n\t\t        this._modulator.chain(this._scale, this._pulse.width);\n\t\t        this._pulse.connect(this.output);\n\t\t        this._readOnly([\n\t\t            'modulationFrequency',\n\t\t            'frequency',\n\t\t            'detune'\n\t\t        ]);\n\t\t    };\n\t\t    Tone.extend(Tone.PWMOscillator, Tone.Oscillator);\n\t\t    /**\n\t\t\t *  default values\n\t\t\t *  @static\n\t\t\t *  @type {Object}\n\t\t\t *  @const\n\t\t\t */\n\t\t    Tone.PWMOscillator.defaults = {\n\t\t        'frequency': 440,\n\t\t        'detune': 0,\n\t\t        'phase': 0,\n\t\t        'modulationFrequency': 0.4\n\t\t    };\n\t\t    /**\n\t\t\t *  start the oscillator\n\t\t\t *  @param  {Time} [time=now]\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.PWMOscillator.prototype._start = function (time) {\n\t\t        time = this.toSeconds(time);\n\t\t        this._modulator.start(time);\n\t\t        this._pulse.start(time);\n\t\t    };\n\t\t    /**\n\t\t\t *  stop the oscillator\n\t\t\t *  @param  {Time} time (optional) timing parameter\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.PWMOscillator.prototype._stop = function (time) {\n\t\t        time = this.toSeconds(time);\n\t\t        this._modulator.stop(time);\n\t\t        this._pulse.stop(time);\n\t\t    };\n\t\t    /**\n\t\t\t * The type of the oscillator. Always returns \"pwm\".\n\t\t\t * @readOnly\n\t\t\t * @memberOf Tone.PWMOscillator#\n\t\t\t * @type {string}\n\t\t\t * @name type\n\t\t\t */\n\t\t    Object.defineProperty(Tone.PWMOscillator.prototype, 'type', {\n\t\t        get: function () {\n\t\t            return 'pwm';\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The partials of the waveform. Cannot set partials for this waveform type\n\t\t\t * @memberOf Tone.PWMOscillator#\n\t\t\t * @type {Array}\n\t\t\t * @name partials\n\t\t\t * @private\n\t\t\t */\n\t\t    Object.defineProperty(Tone.PWMOscillator.prototype, 'partials', {\n\t\t        get: function () {\n\t\t            return [];\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The phase of the oscillator in degrees.\n\t\t\t * @memberOf Tone.PWMOscillator#\n\t\t\t * @type {number}\n\t\t\t * @name phase\n\t\t\t */\n\t\t    Object.defineProperty(Tone.PWMOscillator.prototype, 'phase', {\n\t\t        get: function () {\n\t\t            return this._modulator.phase;\n\t\t        },\n\t\t        set: function (phase) {\n\t\t            this._modulator.phase = phase;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Clean up.\n\t\t\t *  @return {Tone.PWMOscillator} this\n\t\t\t */\n\t\t    Tone.PWMOscillator.prototype.dispose = function () {\n\t\t        Tone.Source.prototype.dispose.call(this);\n\t\t        this._pulse.dispose();\n\t\t        this._pulse = null;\n\t\t        this._scale.dispose();\n\t\t        this._scale = null;\n\t\t        this._modulator.dispose();\n\t\t        this._modulator = null;\n\t\t        this._writable([\n\t\t            'modulationFrequency',\n\t\t            'frequency',\n\t\t            'detune'\n\t\t        ]);\n\t\t        this.frequency = null;\n\t\t        this.detune = null;\n\t\t        this.modulationFrequency = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.PWMOscillator;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Tone.FMOscillator \n\t\t\t *\n\t\t\t *  @extends {Tone.Oscillator}\n\t\t\t *  @constructor\n\t\t\t *  @param {Frequency} frequency The starting frequency of the oscillator. \n\t\t\t *  @param {String} type The type of the carrier oscillator.\n\t\t\t *  @param {String} modulationType The type of the modulator oscillator.\n\t\t\t *  @example\n\t\t\t * //a sine oscillator frequency-modulated by a square wave\n\t\t\t * var fmOsc = new Tone.FMOscillator(\"Ab3\", \"sine\", \"square\").toMaster().start();\n\t\t\t */\n\t\t    Tone.FMOscillator = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'frequency',\n\t\t            'type',\n\t\t            'modulationType'\n\t\t        ], Tone.FMOscillator.defaults);\n\t\t        Tone.Source.call(this, options);\n\t\t        /**\n\t\t\t\t *  The carrier oscillator\n\t\t\t\t *  @type {Tone.Oscillator}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._carrier = new Tone.Oscillator(options.frequency, options.type);\n\t\t        /**\n\t\t\t\t *  The oscillator's frequency\n\t\t\t\t *  @type {Frequency}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.frequency = new Tone.Signal(options.frequency, Tone.Type.Frequency);\n\t\t        /**\n\t\t\t\t *  The detune control signal.\n\t\t\t\t *  @type {Cents}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.detune = this._carrier.detune;\n\t\t        this.detune.value = options.detune;\n\t\t        /**\n\t\t\t\t *  The modulation index which is in essence the depth or amount of the modulation. In other terms it is the \n\t\t\t\t *  ratio of the frequency of the modulating signal (mf) to the amplitude of the \n\t\t\t\t *  modulating signal (ma) -- as in ma/mf. \n\t\t\t\t *\t@type {Positive}\n\t\t\t\t *\t@signal\n\t\t\t\t */\n\t\t        this.modulationIndex = new Tone.Multiply(options.modulationIndex);\n\t\t        this.modulationIndex.units = Tone.Type.Positive;\n\t\t        /**\n\t\t\t\t *  The modulating oscillator\n\t\t\t\t *  @type  {Tone.Oscillator}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._modulator = new Tone.Oscillator(options.frequency, options.modulationType);\n\t\t        /**\n\t\t\t\t *  Harmonicity is the frequency ratio between the carrier and the modulator oscillators. \n\t\t\t\t *  A harmonicity of 1 gives both oscillators the same frequency. \n\t\t\t\t *  Harmonicity = 2 means a change of an octave. \n\t\t\t\t *  @type {Positive}\n\t\t\t\t *  @signal\n\t\t\t\t *  @example\n\t\t\t\t * //pitch the modulator an octave below carrier\n\t\t\t\t * synth.harmonicity.value = 0.5;\n\t\t\t\t */\n\t\t        this.harmonicity = new Tone.Multiply(options.harmonicity);\n\t\t        this.harmonicity.units = Tone.Type.Positive;\n\t\t        /**\n\t\t\t\t *  the node where the modulation happens\n\t\t\t\t *  @type {Tone.Gain}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._modulationNode = new Tone.Gain(0);\n\t\t        //connections\n\t\t        this.frequency.connect(this._carrier.frequency);\n\t\t        this.frequency.chain(this.harmonicity, this._modulator.frequency);\n\t\t        this.frequency.chain(this.modulationIndex, this._modulationNode);\n\t\t        this._modulator.connect(this._modulationNode.gain);\n\t\t        this._modulationNode.connect(this._carrier.frequency);\n\t\t        this._carrier.connect(this.output);\n\t\t        this.detune.connect(this._modulator.detune);\n\t\t        this.phase = options.phase;\n\t\t        this._readOnly([\n\t\t            'modulationIndex',\n\t\t            'frequency',\n\t\t            'detune',\n\t\t            'harmonicity'\n\t\t        ]);\n\t\t    };\n\t\t    Tone.extend(Tone.FMOscillator, Tone.Oscillator);\n\t\t    /**\n\t\t\t *  default values\n\t\t\t *  @static\n\t\t\t *  @type {Object}\n\t\t\t *  @const\n\t\t\t */\n\t\t    Tone.FMOscillator.defaults = {\n\t\t        'frequency': 440,\n\t\t        'detune': 0,\n\t\t        'phase': 0,\n\t\t        'modulationIndex': 2,\n\t\t        'modulationType': 'square',\n\t\t        'harmonicity': 1\n\t\t    };\n\t\t    /**\n\t\t\t *  start the oscillator\n\t\t\t *  @param  {Time} [time=now]\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.FMOscillator.prototype._start = function (time) {\n\t\t        time = this.toSeconds(time);\n\t\t        this._modulator.start(time);\n\t\t        this._carrier.start(time);\n\t\t    };\n\t\t    /**\n\t\t\t *  stop the oscillator\n\t\t\t *  @param  {Time} time (optional) timing parameter\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.FMOscillator.prototype._stop = function (time) {\n\t\t        time = this.toSeconds(time);\n\t\t        this._modulator.stop(time);\n\t\t        this._carrier.stop(time);\n\t\t    };\n\t\t    /**\n\t\t\t * The type of the carrier oscillator\n\t\t\t * @memberOf Tone.FMOscillator#\n\t\t\t * @type {string}\n\t\t\t * @name type\n\t\t\t */\n\t\t    Object.defineProperty(Tone.FMOscillator.prototype, 'type', {\n\t\t        get: function () {\n\t\t            return this._carrier.type;\n\t\t        },\n\t\t        set: function (type) {\n\t\t            this._carrier.type = type;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The type of the modulator oscillator\n\t\t\t * @memberOf Tone.FMOscillator#\n\t\t\t * @type {String}\n\t\t\t * @name modulationType\n\t\t\t */\n\t\t    Object.defineProperty(Tone.FMOscillator.prototype, 'modulationType', {\n\t\t        get: function () {\n\t\t            return this._modulator.type;\n\t\t        },\n\t\t        set: function (type) {\n\t\t            this._modulator.type = type;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The phase of the oscillator in degrees.\n\t\t\t * @memberOf Tone.FMOscillator#\n\t\t\t * @type {number}\n\t\t\t * @name phase\n\t\t\t */\n\t\t    Object.defineProperty(Tone.FMOscillator.prototype, 'phase', {\n\t\t        get: function () {\n\t\t            return this._carrier.phase;\n\t\t        },\n\t\t        set: function (phase) {\n\t\t            this._carrier.phase = phase;\n\t\t            this._modulator.phase = phase;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The partials of the carrier waveform. A partial represents \n\t\t\t * the amplitude at a harmonic. The first harmonic is the \n\t\t\t * fundamental frequency, the second is the octave and so on\n\t\t\t * following the harmonic series. \n\t\t\t * Setting this value will automatically set the type to \"custom\". \n\t\t\t * The value is an empty array when the type is not \"custom\". \n\t\t\t * @memberOf Tone.FMOscillator#\n\t\t\t * @type {Array}\n\t\t\t * @name partials\n\t\t\t * @example\n\t\t\t * osc.partials = [1, 0.2, 0.01];\n\t\t\t */\n\t\t    Object.defineProperty(Tone.FMOscillator.prototype, 'partials', {\n\t\t        get: function () {\n\t\t            return this._carrier.partials;\n\t\t        },\n\t\t        set: function (partials) {\n\t\t            this._carrier.partials = partials;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Clean up.\n\t\t\t *  @return {Tone.FMOscillator} this\n\t\t\t */\n\t\t    Tone.FMOscillator.prototype.dispose = function () {\n\t\t        Tone.Source.prototype.dispose.call(this);\n\t\t        this._writable([\n\t\t            'modulationIndex',\n\t\t            'frequency',\n\t\t            'detune',\n\t\t            'harmonicity'\n\t\t        ]);\n\t\t        this.frequency.dispose();\n\t\t        this.frequency = null;\n\t\t        this.detune = null;\n\t\t        this.harmonicity.dispose();\n\t\t        this.harmonicity = null;\n\t\t        this._carrier.dispose();\n\t\t        this._carrier = null;\n\t\t        this._modulator.dispose();\n\t\t        this._modulator = null;\n\t\t        this._modulationNode.dispose();\n\t\t        this._modulationNode = null;\n\t\t        this.modulationIndex.dispose();\n\t\t        this.modulationIndex = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.FMOscillator;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Tone.AMOscillator \n\t\t\t *\n\t\t\t *  @extends {Tone.Oscillator}\n\t\t\t *  @constructor\n\t\t\t *  @param {Frequency} frequency The starting frequency of the oscillator. \n\t\t\t *  @param {String} type The type of the carrier oscillator.\n\t\t\t *  @param {String} modulationType The type of the modulator oscillator.\n\t\t\t *  @example\n\t\t\t * //a sine oscillator frequency-modulated by a square wave\n\t\t\t * var fmOsc = new Tone.AMOscillator(\"Ab3\", \"sine\", \"square\").toMaster().start();\n\t\t\t */\n\t\t    Tone.AMOscillator = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'frequency',\n\t\t            'type',\n\t\t            'modulationType'\n\t\t        ], Tone.AMOscillator.defaults);\n\t\t        Tone.Source.call(this, options);\n\t\t        /**\n\t\t\t\t *  The carrier oscillator\n\t\t\t\t *  @type {Tone.Oscillator}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._carrier = new Tone.Oscillator(options.frequency, options.type);\n\t\t        /**\n\t\t\t\t *  The oscillator's frequency\n\t\t\t\t *  @type {Frequency}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.frequency = this._carrier.frequency;\n\t\t        /**\n\t\t\t\t *  The detune control signal.\n\t\t\t\t *  @type {Cents}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.detune = this._carrier.detune;\n\t\t        this.detune.value = options.detune;\n\t\t        /**\n\t\t\t\t *  The modulating oscillator\n\t\t\t\t *  @type  {Tone.Oscillator}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._modulator = new Tone.Oscillator(options.frequency, options.modulationType);\n\t\t        /**\n\t\t\t\t *  convert the -1,1 output to 0,1\n\t\t\t\t *  @type {Tone.AudioToGain}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._modulationScale = new Tone.AudioToGain();\n\t\t        /**\n\t\t\t\t *  Harmonicity is the frequency ratio between the carrier and the modulator oscillators. \n\t\t\t\t *  A harmonicity of 1 gives both oscillators the same frequency. \n\t\t\t\t *  Harmonicity = 2 means a change of an octave. \n\t\t\t\t *  @type {Positive}\n\t\t\t\t *  @signal\n\t\t\t\t *  @example\n\t\t\t\t * //pitch the modulator an octave below carrier\n\t\t\t\t * synth.harmonicity.value = 0.5;\n\t\t\t\t */\n\t\t        this.harmonicity = new Tone.Multiply(options.harmonicity);\n\t\t        this.harmonicity.units = Tone.Type.Positive;\n\t\t        /**\n\t\t\t\t *  the node where the modulation happens\n\t\t\t\t *  @type {Tone.Gain}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._modulationNode = new Tone.Gain(0);\n\t\t        //connections\n\t\t        this.frequency.chain(this.harmonicity, this._modulator.frequency);\n\t\t        this.detune.connect(this._modulator.detune);\n\t\t        this._modulator.chain(this._modulationScale, this._modulationNode.gain);\n\t\t        this._carrier.chain(this._modulationNode, this.output);\n\t\t        this.phase = options.phase;\n\t\t        this._readOnly([\n\t\t            'frequency',\n\t\t            'detune',\n\t\t            'harmonicity'\n\t\t        ]);\n\t\t    };\n\t\t    Tone.extend(Tone.AMOscillator, Tone.Oscillator);\n\t\t    /**\n\t\t\t *  default values\n\t\t\t *  @static\n\t\t\t *  @type {Object}\n\t\t\t *  @const\n\t\t\t */\n\t\t    Tone.AMOscillator.defaults = {\n\t\t        'frequency': 440,\n\t\t        'detune': 0,\n\t\t        'phase': 0,\n\t\t        'modulationType': 'square',\n\t\t        'harmonicity': 1\n\t\t    };\n\t\t    /**\n\t\t\t *  start the oscillator\n\t\t\t *  @param  {Time} [time=now]\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.AMOscillator.prototype._start = function (time) {\n\t\t        time = this.toSeconds(time);\n\t\t        this._modulator.start(time);\n\t\t        this._carrier.start(time);\n\t\t    };\n\t\t    /**\n\t\t\t *  stop the oscillator\n\t\t\t *  @param  {Time} time (optional) timing parameter\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.AMOscillator.prototype._stop = function (time) {\n\t\t        time = this.toSeconds(time);\n\t\t        this._modulator.stop(time);\n\t\t        this._carrier.stop(time);\n\t\t    };\n\t\t    /**\n\t\t\t * The type of the carrier oscillator\n\t\t\t * @memberOf Tone.AMOscillator#\n\t\t\t * @type {string}\n\t\t\t * @name type\n\t\t\t */\n\t\t    Object.defineProperty(Tone.AMOscillator.prototype, 'type', {\n\t\t        get: function () {\n\t\t            return this._carrier.type;\n\t\t        },\n\t\t        set: function (type) {\n\t\t            this._carrier.type = type;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The type of the modulator oscillator\n\t\t\t * @memberOf Tone.AMOscillator#\n\t\t\t * @type {string}\n\t\t\t * @name modulationType\n\t\t\t */\n\t\t    Object.defineProperty(Tone.AMOscillator.prototype, 'modulationType', {\n\t\t        get: function () {\n\t\t            return this._modulator.type;\n\t\t        },\n\t\t        set: function (type) {\n\t\t            this._modulator.type = type;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The phase of the oscillator in degrees.\n\t\t\t * @memberOf Tone.AMOscillator#\n\t\t\t * @type {number}\n\t\t\t * @name phase\n\t\t\t */\n\t\t    Object.defineProperty(Tone.AMOscillator.prototype, 'phase', {\n\t\t        get: function () {\n\t\t            return this._carrier.phase;\n\t\t        },\n\t\t        set: function (phase) {\n\t\t            this._carrier.phase = phase;\n\t\t            this._modulator.phase = phase;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The partials of the carrier waveform. A partial represents \n\t\t\t * the amplitude at a harmonic. The first harmonic is the \n\t\t\t * fundamental frequency, the second is the octave and so on\n\t\t\t * following the harmonic series. \n\t\t\t * Setting this value will automatically set the type to \"custom\". \n\t\t\t * The value is an empty array when the type is not \"custom\". \n\t\t\t * @memberOf Tone.AMOscillator#\n\t\t\t * @type {Array}\n\t\t\t * @name partials\n\t\t\t * @example\n\t\t\t * osc.partials = [1, 0.2, 0.01];\n\t\t\t */\n\t\t    Object.defineProperty(Tone.AMOscillator.prototype, 'partials', {\n\t\t        get: function () {\n\t\t            return this._carrier.partials;\n\t\t        },\n\t\t        set: function (partials) {\n\t\t            this._carrier.partials = partials;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Clean up.\n\t\t\t *  @return {Tone.AMOscillator} this\n\t\t\t */\n\t\t    Tone.AMOscillator.prototype.dispose = function () {\n\t\t        Tone.Source.prototype.dispose.call(this);\n\t\t        this._writable([\n\t\t            'frequency',\n\t\t            'detune',\n\t\t            'harmonicity'\n\t\t        ]);\n\t\t        this.frequency = null;\n\t\t        this.detune = null;\n\t\t        this.harmonicity.dispose();\n\t\t        this.harmonicity = null;\n\t\t        this._carrier.dispose();\n\t\t        this._carrier = null;\n\t\t        this._modulator.dispose();\n\t\t        this._modulator = null;\n\t\t        this._modulationNode.dispose();\n\t\t        this._modulationNode = null;\n\t\t        this._modulationScale.dispose();\n\t\t        this._modulationScale = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.AMOscillator;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Tone.FatOscillator \n\t\t\t *\n\t\t\t *  @extends {Tone.Oscillator}\n\t\t\t *  @constructor\n\t\t\t *  @param {Frequency} frequency The starting frequency of the oscillator. \n\t\t\t *  @param {String} type The type of the carrier oscillator.\n\t\t\t *  @param {String} modulationType The type of the modulator oscillator.\n\t\t\t *  @example\n\t\t\t * //a sine oscillator frequency-modulated by a square wave\n\t\t\t * var fmOsc = new Tone.FatOscillator(\"Ab3\", \"sine\", \"square\").toMaster().start();\n\t\t\t */\n\t\t    Tone.FatOscillator = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'frequency',\n\t\t            'type',\n\t\t            'spread'\n\t\t        ], Tone.FatOscillator.defaults);\n\t\t        Tone.Source.call(this, options);\n\t\t        /**\n\t\t\t\t *  The oscillator's frequency\n\t\t\t\t *  @type {Frequency}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.frequency = new Tone.Signal(options.frequency, Tone.Type.Frequency);\n\t\t        /**\n\t\t\t\t *  The detune control signal.\n\t\t\t\t *  @type {Cents}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.detune = new Tone.Signal(options.detune, Tone.Type.Cents);\n\t\t        /**\n\t\t\t\t *  The array of oscillators\n\t\t\t\t *  @type {Array}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._oscillators = [];\n\t\t        /**\n\t\t\t\t *  The total spread of the oscillators\n\t\t\t\t *  @type  {Cents}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._spread = options.spread;\n\t\t        /**\n\t\t\t\t *  The type of the oscillator\n\t\t\t\t *  @type {String}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._type = options.type;\n\t\t        /**\n\t\t\t\t *  The phase of the oscillators\n\t\t\t\t *  @type {Degrees}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._phase = options.phase;\n\t\t        /**\n\t\t\t\t *  The partials array\n\t\t\t\t *  @type {Array}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._partials = this.defaultArg(options.partials, []);\n\t\t        //set the count initially\n\t\t        this.count = options.count;\n\t\t        this._readOnly([\n\t\t            'frequency',\n\t\t            'detune'\n\t\t        ]);\n\t\t    };\n\t\t    Tone.extend(Tone.FatOscillator, Tone.Oscillator);\n\t\t    /**\n\t\t\t *  default values\n\t\t\t *  @static\n\t\t\t *  @type {Object}\n\t\t\t *  @const\n\t\t\t */\n\t\t    Tone.FatOscillator.defaults = {\n\t\t        'frequency': 440,\n\t\t        'detune': 0,\n\t\t        'phase': 0,\n\t\t        'spread': 20,\n\t\t        'count': 3,\n\t\t        'type': 'sawtooth'\n\t\t    };\n\t\t    /**\n\t\t\t *  start the oscillator\n\t\t\t *  @param  {Time} [time=now]\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.FatOscillator.prototype._start = function (time) {\n\t\t        time = this.toSeconds(time);\n\t\t        this._forEach(function (osc) {\n\t\t            osc.start(time);\n\t\t        });\n\t\t    };\n\t\t    /**\n\t\t\t *  stop the oscillator\n\t\t\t *  @param  {Time} time (optional) timing parameter\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.FatOscillator.prototype._stop = function (time) {\n\t\t        time = this.toSeconds(time);\n\t\t        this._forEach(function (osc) {\n\t\t            osc.stop(time);\n\t\t        });\n\t\t    };\n\t\t    /**\n\t\t\t *  Iterate over all of the oscillators\n\t\t\t *  @param  {Function}  iterator  The iterator function\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.FatOscillator.prototype._forEach = function (iterator) {\n\t\t        for (var i = 0; i < this._oscillators.length; i++) {\n\t\t            iterator.call(this, this._oscillators[i], i);\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t * The type of the carrier oscillator\n\t\t\t * @memberOf Tone.FatOscillator#\n\t\t\t * @type {string}\n\t\t\t * @name type\n\t\t\t */\n\t\t    Object.defineProperty(Tone.FatOscillator.prototype, 'type', {\n\t\t        get: function () {\n\t\t            return this._type;\n\t\t        },\n\t\t        set: function (type) {\n\t\t            this._type = type;\n\t\t            this._forEach(function (osc) {\n\t\t                osc.type = type;\n\t\t            });\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The detune spread between the oscillators. If \"count\" is\n\t\t\t * set to 3 oscillators and the \"spread\" is set to 40,\n\t\t\t * the three oscillators would be detuned like this: [-20, 0, 20]\n\t\t\t * for a total detune spread of 40 cents.\n\t\t\t * @memberOf Tone.FatOscillator#\n\t\t\t * @type {Cents}\n\t\t\t * @name spread\n\t\t\t */\n\t\t    Object.defineProperty(Tone.FatOscillator.prototype, 'spread', {\n\t\t        get: function () {\n\t\t            return this._spread;\n\t\t        },\n\t\t        set: function (spread) {\n\t\t            this._spread = spread;\n\t\t            if (this._oscillators.length > 1) {\n\t\t                var start = -spread / 2;\n\t\t                var step = spread / (this._oscillators.length - 1);\n\t\t                this._forEach(function (osc, i) {\n\t\t                    osc.detune.value = start + step * i;\n\t\t                });\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The number of detuned oscillators\n\t\t\t * @memberOf Tone.FatOscillator#\n\t\t\t * @type {Number}\n\t\t\t * @name count\n\t\t\t */\n\t\t    Object.defineProperty(Tone.FatOscillator.prototype, 'count', {\n\t\t        get: function () {\n\t\t            return this._oscillators.length;\n\t\t        },\n\t\t        set: function (count) {\n\t\t            count = Math.max(count, 1);\n\t\t            if (this._oscillators.length !== count) {\n\t\t                // var partials = this.partials;\n\t\t                // var type = this.type;\n\t\t                //dispose the previous oscillators\n\t\t                this._forEach(function (osc) {\n\t\t                    osc.dispose();\n\t\t                });\n\t\t                this._oscillators = [];\n\t\t                for (var i = 0; i < count; i++) {\n\t\t                    var osc = new Tone.Oscillator();\n\t\t                    if (this.type === Tone.Oscillator.Type.Custom) {\n\t\t                        osc.partials = this._partials;\n\t\t                    } else {\n\t\t                        osc.type = this._type;\n\t\t                    }\n\t\t                    osc.phase = this._phase;\n\t\t                    osc.volume.value = -6 - count;\n\t\t                    this.frequency.connect(osc.frequency);\n\t\t                    this.detune.connect(osc.detune);\n\t\t                    osc.connect(this.output);\n\t\t                    this._oscillators[i] = osc;\n\t\t                }\n\t\t                //set the spread\n\t\t                this.spread = this._spread;\n\t\t                if (this.state === Tone.State.Started) {\n\t\t                    this._forEach(function (osc) {\n\t\t                        osc.start();\n\t\t                    });\n\t\t                }\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The phase of the oscillator in degrees.\n\t\t\t * @memberOf Tone.FatOscillator#\n\t\t\t * @type {Number}\n\t\t\t * @name phase\n\t\t\t */\n\t\t    Object.defineProperty(Tone.FatOscillator.prototype, 'phase', {\n\t\t        get: function () {\n\t\t            return this._phase;\n\t\t        },\n\t\t        set: function (phase) {\n\t\t            this._phase = phase;\n\t\t            this._forEach(function (osc) {\n\t\t                osc.phase = phase;\n\t\t            });\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The partials of the carrier waveform. A partial represents \n\t\t\t * the amplitude at a harmonic. The first harmonic is the \n\t\t\t * fundamental frequency, the second is the octave and so on\n\t\t\t * following the harmonic series. \n\t\t\t * Setting this value will automatically set the type to \"custom\". \n\t\t\t * The value is an empty array when the type is not \"custom\". \n\t\t\t * @memberOf Tone.FatOscillator#\n\t\t\t * @type {Array}\n\t\t\t * @name partials\n\t\t\t * @example\n\t\t\t * osc.partials = [1, 0.2, 0.01];\n\t\t\t */\n\t\t    Object.defineProperty(Tone.FatOscillator.prototype, 'partials', {\n\t\t        get: function () {\n\t\t            return this._partials;\n\t\t        },\n\t\t        set: function (partials) {\n\t\t            this._partials = partials;\n\t\t            this._type = Tone.Oscillator.Type.Custom;\n\t\t            this._forEach(function (osc) {\n\t\t                osc.partials = partials;\n\t\t            });\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Clean up.\n\t\t\t *  @return {Tone.FatOscillator} this\n\t\t\t */\n\t\t    Tone.FatOscillator.prototype.dispose = function () {\n\t\t        Tone.Source.prototype.dispose.call(this);\n\t\t        this._writable([\n\t\t            'frequency',\n\t\t            'detune'\n\t\t        ]);\n\t\t        this.frequency.dispose();\n\t\t        this.frequency = null;\n\t\t        this.detune.dispose();\n\t\t        this.detune = null;\n\t\t        this._forEach(function (osc) {\n\t\t            osc.dispose();\n\t\t        });\n\t\t        this._oscillators = null;\n\t\t        this._partials = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.FatOscillator;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Tone.OmniOscillator aggregates Tone.Oscillator, Tone.PulseOscillator,\n\t\t\t *         Tone.PWMOscillator, Tone.FMOscillator, Tone.AMOscillator, and Tone.FatOscillator\n\t\t\t *         into one class. The oscillator class can be changed by setting the `type`. \n\t\t\t *         `omniOsc.type = \"pwm\"` will set it to the Tone.PWMOscillator. Prefixing\n\t\t\t *         any of the basic types (\"sine\", \"square4\", etc.) with \"fm\", \"am\", or \"fat\"\n\t\t\t *         will use the FMOscillator, AMOscillator or FatOscillator respectively. \n\t\t\t *         For example: `omniOsc.type = \"fatsawtooth\"` will create set the oscillator\n\t\t\t *         to a FatOscillator of type \"sawtooth\". \n\t\t\t *\n\t\t\t *  @extends {Tone.Oscillator}\n\t\t\t *  @constructor\n\t\t\t *  @param {Frequency} frequency The initial frequency of the oscillator.\n\t\t\t *  @param {String} type The type of the oscillator.\n\t\t\t *  @example\n\t\t\t *  var omniOsc = new Tone.OmniOscillator(\"C#4\", \"pwm\");\n\t\t\t */\n\t\t    Tone.OmniOscillator = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'frequency',\n\t\t            'type'\n\t\t        ], Tone.OmniOscillator.defaults);\n\t\t        Tone.Source.call(this, options);\n\t\t        /**\n\t\t\t\t *  The frequency control.\n\t\t\t\t *  @type {Frequency}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.frequency = new Tone.Signal(options.frequency, Tone.Type.Frequency);\n\t\t        /**\n\t\t\t\t *  The detune control\n\t\t\t\t *  @type {Cents}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.detune = new Tone.Signal(options.detune, Tone.Type.Cents);\n\t\t        /**\n\t\t\t\t *  the type of the oscillator source\n\t\t\t\t *  @type {String}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._sourceType = undefined;\n\t\t        /**\n\t\t\t\t *  the oscillator\n\t\t\t\t *  @type {Tone.Oscillator}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._oscillator = null;\n\t\t        //set the oscillator\n\t\t        this.type = options.type;\n\t\t        this._readOnly([\n\t\t            'frequency',\n\t\t            'detune'\n\t\t        ]);\n\t\t        //set the options\n\t\t        this.set(options);\n\t\t    };\n\t\t    Tone.extend(Tone.OmniOscillator, Tone.Oscillator);\n\t\t    /**\n\t\t\t *  default values\n\t\t\t *  @static\n\t\t\t *  @type {Object}\n\t\t\t *  @const\n\t\t\t */\n\t\t    Tone.OmniOscillator.defaults = {\n\t\t        'frequency': 440,\n\t\t        'detune': 0,\n\t\t        'type': 'sine',\n\t\t        'phase': 0\n\t\t    };\n\t\t    /**\n\t\t\t *  @enum {String}\n\t\t\t *  @private\n\t\t\t */\n\t\t    var OmniOscType = {\n\t\t        Pulse: 'PulseOscillator',\n\t\t        PWM: 'PWMOscillator',\n\t\t        Osc: 'Oscillator',\n\t\t        FM: 'FMOscillator',\n\t\t        AM: 'AMOscillator',\n\t\t        Fat: 'FatOscillator'\n\t\t    };\n\t\t    /**\n\t\t\t *  start the oscillator\n\t\t\t *  @param {Time} [time=now] the time to start the oscillator\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.OmniOscillator.prototype._start = function (time) {\n\t\t        this._oscillator.start(time);\n\t\t    };\n\t\t    /**\n\t\t\t *  start the oscillator\n\t\t\t *  @param {Time} [time=now] the time to start the oscillator\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.OmniOscillator.prototype._stop = function (time) {\n\t\t        this._oscillator.stop(time);\n\t\t    };\n\t\t    /**\n\t\t\t * The type of the oscillator. Can be any of the basic types: sine, square, triangle, sawtooth. Or\n\t\t\t * prefix the basic types with \"fm\", \"am\", or \"fat\" to use the FMOscillator, AMOscillator or FatOscillator\n\t\t\t * types. The oscillator could also be set to \"pwm\" or \"pulse\". All of the parameters of the\n\t\t\t * oscillator's class are accessible when the oscillator is set to that type, but throws an error \n\t\t\t * when it's not.\n\t\t\t * \n\t\t\t * @memberOf Tone.OmniOscillator#\n\t\t\t * @type {String}\n\t\t\t * @name type\n\t\t\t * @example\n\t\t\t * omniOsc.type = \"pwm\";\n\t\t\t * //modulationFrequency is parameter which is available\n\t\t\t * //only when the type is \"pwm\". \n\t\t\t * omniOsc.modulationFrequency.value = 0.5;\n\t\t\t * @example\n\t\t\t * //an square wave frequency modulated by a sawtooth\n\t\t\t * omniOsc.type = \"fmsquare\";\n\t\t\t * omniOsc.modulationType = \"sawtooth\";\n\t\t\t */\n\t\t    Object.defineProperty(Tone.OmniOscillator.prototype, 'type', {\n\t\t        get: function () {\n\t\t            var prefix = '';\n\t\t            if (this._sourceType === OmniOscType.FM) {\n\t\t                prefix = 'fm';\n\t\t            } else if (this._sourceType === OmniOscType.AM) {\n\t\t                prefix = 'am';\n\t\t            } else if (this._sourceType === OmniOscType.Fat) {\n\t\t                prefix = 'fat';\n\t\t            }\n\t\t            return prefix + this._oscillator.type;\n\t\t        },\n\t\t        set: function (type) {\n\t\t            if (type.substr(0, 2) === 'fm') {\n\t\t                this._createNewOscillator(OmniOscType.FM);\n\t\t                this._oscillator.type = type.substr(2);\n\t\t            } else if (type.substr(0, 2) === 'am') {\n\t\t                this._createNewOscillator(OmniOscType.AM);\n\t\t                this._oscillator.type = type.substr(2);\n\t\t            } else if (type.substr(0, 3) === 'fat') {\n\t\t                this._createNewOscillator(OmniOscType.Fat);\n\t\t                this._oscillator.type = type.substr(3);\n\t\t            } else if (type === 'pwm') {\n\t\t                this._createNewOscillator(OmniOscType.PWM);\n\t\t            } else if (type === 'pulse') {\n\t\t                this._createNewOscillator(OmniOscType.Pulse);\n\t\t            } else {\n\t\t                this._createNewOscillator(OmniOscType.Osc);\n\t\t                this._oscillator.type = type;\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The partials of the waveform. A partial represents \n\t\t\t * the amplitude at a harmonic. The first harmonic is the \n\t\t\t * fundamental frequency, the second is the octave and so on\n\t\t\t * following the harmonic series. \n\t\t\t * Setting this value will automatically set the type to \"custom\". \n\t\t\t * The value is an empty array when the type is not \"custom\". \n\t\t\t * This is not available on \"pwm\" and \"pulse\" oscillator types.\n\t\t\t * @memberOf Tone.OmniOscillator#\n\t\t\t * @type {Array}\n\t\t\t * @name partials\n\t\t\t * @example\n\t\t\t * osc.partials = [1, 0.2, 0.01];\n\t\t\t */\n\t\t    Object.defineProperty(Tone.OmniOscillator.prototype, 'partials', {\n\t\t        get: function () {\n\t\t            return this._oscillator.partials;\n\t\t        },\n\t\t        set: function (partials) {\n\t\t            this._oscillator.partials = partials;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Set a member/attribute of the oscillator. \n\t\t\t *  @param {Object|String} params\n\t\t\t *  @param {number=} value\n\t\t\t *  @param {Time=} rampTime\n\t\t\t *  @returns {Tone.OmniOscillator} this\n\t\t\t */\n\t\t    Tone.OmniOscillator.prototype.set = function (params, value) {\n\t\t        //make sure the type is set first\n\t\t        if (params === 'type') {\n\t\t            this.type = value;\n\t\t        } else if (this.isObject(params) && params.hasOwnProperty('type')) {\n\t\t            this.type = params.type;\n\t\t        }\n\t\t        //then set the rest\n\t\t        Tone.prototype.set.apply(this, arguments);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  connect the oscillator to the frequency and detune signals\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.OmniOscillator.prototype._createNewOscillator = function (oscType) {\n\t\t        if (oscType !== this._sourceType) {\n\t\t            this._sourceType = oscType;\n\t\t            var OscillatorConstructor = Tone[oscType];\n\t\t            //short delay to avoid clicks on the change\n\t\t            var now = this.now() + this.blockTime;\n\t\t            if (this._oscillator !== null) {\n\t\t                var oldOsc = this._oscillator;\n\t\t                oldOsc.stop(now);\n\t\t                //dispose the old one\n\t\t                setTimeout(function () {\n\t\t                    oldOsc.dispose();\n\t\t                    oldOsc = null;\n\t\t                }, this.blockTime * 1000);\n\t\t            }\n\t\t            this._oscillator = new OscillatorConstructor();\n\t\t            this.frequency.connect(this._oscillator.frequency);\n\t\t            this.detune.connect(this._oscillator.detune);\n\t\t            this._oscillator.connect(this.output);\n\t\t            if (this.state === Tone.State.Started) {\n\t\t                this._oscillator.start(now);\n\t\t            }\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t * The phase of the oscillator in degrees. \n\t\t\t * @memberOf Tone.OmniOscillator#\n\t\t\t * @type {Degrees}\n\t\t\t * @name phase\n\t\t\t */\n\t\t    Object.defineProperty(Tone.OmniOscillator.prototype, 'phase', {\n\t\t        get: function () {\n\t\t            return this._oscillator.phase;\n\t\t        },\n\t\t        set: function (phase) {\n\t\t            this._oscillator.phase = phase;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The width of the oscillator (only if the oscillator is set to \"pulse\")\n\t\t\t * @memberOf Tone.OmniOscillator#\n\t\t\t * @type {NormalRange}\n\t\t\t * @signal\n\t\t\t * @name width\n\t\t\t * @example\n\t\t\t * var omniOsc = new Tone.OmniOscillator(440, \"pulse\");\n\t\t\t * //can access the width attribute only if type === \"pulse\"\n\t\t\t * omniOsc.width.value = 0.2; \n\t\t\t */\n\t\t    Object.defineProperty(Tone.OmniOscillator.prototype, 'width', {\n\t\t        get: function () {\n\t\t            if (this._sourceType === OmniOscType.Pulse) {\n\t\t                return this._oscillator.width;\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The number of detuned oscillators\n\t\t\t * @memberOf Tone.OmniOscillator#\n\t\t\t * @type {Number}\n\t\t\t * @name count\n\t\t\t */\n\t\t    Object.defineProperty(Tone.OmniOscillator.prototype, 'count', {\n\t\t        get: function () {\n\t\t            if (this._sourceType === OmniOscType.Fat) {\n\t\t                return this._oscillator.count;\n\t\t            }\n\t\t        },\n\t\t        set: function (count) {\n\t\t            if (this._sourceType === OmniOscType.Fat) {\n\t\t                this._oscillator.count = count;\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The detune spread between the oscillators. If \"count\" is\n\t\t\t * set to 3 oscillators and the \"spread\" is set to 40,\n\t\t\t * the three oscillators would be detuned like this: [-20, 0, 20]\n\t\t\t * for a total detune spread of 40 cents. See Tone.FatOscillator\n\t\t\t * for more info.\n\t\t\t * @memberOf Tone.OmniOscillator#\n\t\t\t * @type {Cents}\n\t\t\t * @name spread\n\t\t\t */\n\t\t    Object.defineProperty(Tone.OmniOscillator.prototype, 'spread', {\n\t\t        get: function () {\n\t\t            if (this._sourceType === OmniOscType.Fat) {\n\t\t                return this._oscillator.spread;\n\t\t            }\n\t\t        },\n\t\t        set: function (spread) {\n\t\t            if (this._sourceType === OmniOscType.Fat) {\n\t\t                this._oscillator.spread = spread;\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The type of the modulator oscillator. Only if the oscillator\n\t\t\t * is set to \"am\" or \"fm\" types. see. Tone.AMOscillator or Tone.FMOscillator\n\t\t\t * for more info. \n\t\t\t * @memberOf Tone.OmniOscillator#\n\t\t\t * @type {String}\n\t\t\t * @name modulationType\n\t\t\t */\n\t\t    Object.defineProperty(Tone.OmniOscillator.prototype, 'modulationType', {\n\t\t        get: function () {\n\t\t            if (this._sourceType === OmniOscType.FM || this._sourceType === OmniOscType.AM) {\n\t\t                return this._oscillator.modulationType;\n\t\t            }\n\t\t        },\n\t\t        set: function (mType) {\n\t\t            if (this._sourceType === OmniOscType.FM || this._sourceType === OmniOscType.AM) {\n\t\t                this._oscillator.modulationType = mType;\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The modulation index which is in essence the depth or amount of the modulation. In other terms it is the \n\t\t\t * ratio of the frequency of the modulating signal (mf) to the amplitude of the \n\t\t\t * modulating signal (ma) -- as in ma/mf. \n\t\t\t * See Tone.FMOscillator for more info. \n\t\t\t * @type {Positive}\n\t\t\t * @signal\n\t\t\t * @name modulationIndex\n\t\t\t */\n\t\t    Object.defineProperty(Tone.OmniOscillator.prototype, 'modulationIndex', {\n\t\t        get: function () {\n\t\t            if (this._sourceType === OmniOscType.FM) {\n\t\t                return this._oscillator.modulationIndex;\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Harmonicity is the frequency ratio between the carrier and the modulator oscillators. \n\t\t\t *  A harmonicity of 1 gives both oscillators the same frequency. \n\t\t\t *  Harmonicity = 2 means a change of an octave. See Tone.AMOscillator or Tone.FMOscillator\n\t\t\t *  for more info. \n\t\t\t *  @memberOf Tone.OmniOscillator#\n\t\t\t *  @signal\n\t\t\t *  @type {Positive}\n\t\t\t *  @name harmonicity\n\t\t\t */\n\t\t    Object.defineProperty(Tone.OmniOscillator.prototype, 'harmonicity', {\n\t\t        get: function () {\n\t\t            if (this._sourceType === OmniOscType.FM || this._sourceType === OmniOscType.AM) {\n\t\t                return this._oscillator.harmonicity;\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The modulationFrequency Signal of the oscillator \n\t\t\t * (only if the oscillator type is set to pwm). See \n\t\t\t * Tone.PWMOscillator for more info. \n\t\t\t * @memberOf Tone.OmniOscillator#\n\t\t\t * @type {Frequency}\n\t\t\t * @signal\n\t\t\t * @name modulationFrequency\n\t\t\t * @example\n\t\t\t * var omniOsc = new Tone.OmniOscillator(440, \"pwm\");\n\t\t\t * //can access the modulationFrequency attribute only if type === \"pwm\"\n\t\t\t * omniOsc.modulationFrequency.value = 0.2; \n\t\t\t */\n\t\t    Object.defineProperty(Tone.OmniOscillator.prototype, 'modulationFrequency', {\n\t\t        get: function () {\n\t\t            if (this._sourceType === OmniOscType.PWM) {\n\t\t                return this._oscillator.modulationFrequency;\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Clean up.\n\t\t\t *  @return {Tone.OmniOscillator} this\n\t\t\t */\n\t\t    Tone.OmniOscillator.prototype.dispose = function () {\n\t\t        Tone.Source.prototype.dispose.call(this);\n\t\t        this._writable([\n\t\t            'frequency',\n\t\t            'detune'\n\t\t        ]);\n\t\t        this.detune.dispose();\n\t\t        this.detune = null;\n\t\t        this.frequency.dispose();\n\t\t        this.frequency = null;\n\t\t        this._oscillator.dispose();\n\t\t        this._oscillator = null;\n\t\t        this._sourceType = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.OmniOscillator;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  Base-class for all instruments\n\t\t\t *  \n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone}\n\t\t\t */\n\t\t    Tone.Instrument = function (options) {\n\t\t        //get the defaults\n\t\t        options = this.defaultArg(options, Tone.Instrument.defaults);\n\t\t        /**\n\t\t\t\t *  The output and volume triming node\n\t\t\t\t *  @type  {Tone.Volume}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._volume = this.output = new Tone.Volume(options.volume);\n\t\t        /**\n\t\t\t\t * The volume of the output in decibels.\n\t\t\t\t * @type {Decibels}\n\t\t\t\t * @signal\n\t\t\t\t * @example\n\t\t\t\t * source.volume.value = -6;\n\t\t\t\t */\n\t\t        this.volume = this._volume.volume;\n\t\t        this._readOnly('volume');\n\t\t    };\n\t\t    Tone.extend(Tone.Instrument);\n\t\t    /**\n\t\t\t *  the default attributes\n\t\t\t *  @type {object}\n\t\t\t */\n\t\t    Tone.Instrument.defaults = {\n\t\t        /** the volume of the output in decibels */\n\t\t        'volume': 0\n\t\t    };\n\t\t    /**\n\t\t\t *  @abstract\n\t\t\t *  @param {string|number} note the note to trigger\n\t\t\t *  @param {Time} [time=now] the time to trigger the ntoe\n\t\t\t *  @param {number} [velocity=1] the velocity to trigger the note\n\t\t\t */\n\t\t    Tone.Instrument.prototype.triggerAttack = Tone.noOp;\n\t\t    /**\n\t\t\t *  @abstract\n\t\t\t *  @param {Time} [time=now] when to trigger the release\n\t\t\t */\n\t\t    Tone.Instrument.prototype.triggerRelease = Tone.noOp;\n\t\t    /**\n\t\t\t *  Trigger the attack and then the release after the duration. \n\t\t\t *  @param  {Frequency} note     The note to trigger.\n\t\t\t *  @param  {Time} duration How long the note should be held for before\n\t\t\t *                          triggering the release. This value must be greater than 0. \n\t\t\t *  @param {Time} [time=now]  When the note should be triggered.\n\t\t\t *  @param  {NormalRange} [velocity=1] The velocity the note should be triggered at.\n\t\t\t *  @returns {Tone.Instrument} this\n\t\t\t *  @example\n\t\t\t * //trigger \"C4\" for the duration of an 8th note\n\t\t\t * synth.triggerAttackRelease(\"C4\", \"8n\");\n\t\t\t */\n\t\t    Tone.Instrument.prototype.triggerAttackRelease = function (note, duration, time, velocity) {\n\t\t        if (this.isUndef(time)) {\n\t\t            time = this.now() + this.blockTime;\n\t\t        } else {\n\t\t            time = this.toSeconds(time);\n\t\t        }\n\t\t        duration = this.toSeconds(duration);\n\t\t        this.triggerAttack(note, time, velocity);\n\t\t        this.triggerRelease(time + duration);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  clean up\n\t\t\t *  @returns {Tone.Instrument} this\n\t\t\t */\n\t\t    Tone.Instrument.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._volume.dispose();\n\t\t        this._volume = null;\n\t\t        this._writable(['volume']);\n\t\t        this.volume = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Instrument;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  This is an abstract base class for other monophonic instruments to \n\t\t\t *          extend. IMPORTANT: It does not make any sound on its own and\n\t\t\t *          shouldn't be directly instantiated.\n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @abstract\n\t\t\t *  @extends {Tone.Instrument}\n\t\t\t */\n\t\t    Tone.Monophonic = function (options) {\n\t\t        //get the defaults\n\t\t        options = this.defaultArg(options, Tone.Monophonic.defaults);\n\t\t        Tone.Instrument.call(this, options);\n\t\t        /**\n\t\t\t\t *  The glide time between notes. \n\t\t\t\t *  @type {Time}\n\t\t\t\t */\n\t\t        this.portamento = options.portamento;\n\t\t    };\n\t\t    Tone.extend(Tone.Monophonic, Tone.Instrument);\n\t\t    /**\n\t\t\t *  @static\n\t\t\t *  @const\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.Monophonic.defaults = { 'portamento': 0 };\n\t\t    /**\n\t\t\t *  Trigger the attack of the note optionally with a given velocity. \n\t\t\t *  \n\t\t\t *  \n\t\t\t *  @param  {Frequency} note     The note to trigger.\n\t\t\t *  @param  {Time} [time=now]     When the note should start.\n\t\t\t *  @param  {number} [velocity=1] velocity The velocity scaler \n\t\t\t *                                determines how \"loud\" the note \n\t\t\t *                                will be triggered.\n\t\t\t *  @returns {Tone.Monophonic} this\n\t\t\t *  @example\n\t\t\t * synth.triggerAttack(\"C4\");\n\t\t\t *  @example\n\t\t\t * //trigger the note a half second from now at half velocity\n\t\t\t * synth.triggerAttack(\"C4\", \"+0.5\", 0.5);\n\t\t\t */\n\t\t    Tone.Monophonic.prototype.triggerAttack = function (note, time, velocity) {\n\t\t        if (this.isUndef(time)) {\n\t\t            time = this.now() + this.blockTime;\n\t\t        } else {\n\t\t            time = this.toSeconds(time);\n\t\t        }\n\t\t        this._triggerEnvelopeAttack(time, velocity);\n\t\t        this.setNote(note, time);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Trigger the release portion of the envelope\n\t\t\t *  @param  {Time} [time=now] If no time is given, the release happens immediatly\n\t\t\t *  @returns {Tone.Monophonic} this\n\t\t\t *  @example\n\t\t\t * synth.triggerRelease();\n\t\t\t */\n\t\t    Tone.Monophonic.prototype.triggerRelease = function (time) {\n\t\t        if (this.isUndef(time)) {\n\t\t            time = this.now() + this.blockTime;\n\t\t        } else {\n\t\t            time = this.toSeconds(time);\n\t\t        }\n\t\t        this._triggerEnvelopeRelease(time);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  override this method with the actual method\n\t\t\t *  @abstract\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Monophonic.prototype._triggerEnvelopeAttack = function () {\n\t\t    };\n\t\t    /**\n\t\t\t *  override this method with the actual method\n\t\t\t *  @abstract\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Monophonic.prototype._triggerEnvelopeRelease = function () {\n\t\t    };\n\t\t    /**\n\t\t\t *  Set the note at the given time. If no time is given, the note\n\t\t\t *  will set immediately. \n\t\t\t *  @param {Frequency} note The note to change to.\n\t\t\t *  @param  {Time} [time=now] The time when the note should be set. \n\t\t\t *  @returns {Tone.Monophonic} this\n\t\t\t * @example\n\t\t\t * //change to F#6 in one quarter note from now.\n\t\t\t * synth.setNote(\"F#6\", \"+4n\");\n\t\t\t * @example\n\t\t\t * //change to Bb4 right now\n\t\t\t * synth.setNote(\"Bb4\");\n\t\t\t */\n\t\t    Tone.Monophonic.prototype.setNote = function (note, time) {\n\t\t        time = this.toSeconds(time);\n\t\t        if (this.portamento > 0) {\n\t\t            var currentNote = this.frequency.value;\n\t\t            this.frequency.setValueAtTime(currentNote, time);\n\t\t            var portTime = this.toSeconds(this.portamento);\n\t\t            this.frequency.exponentialRampToValueAtTime(note, time + portTime);\n\t\t        } else {\n\t\t            this.frequency.setValueAtTime(note, time);\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Monophonic;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  Tone.Synth is composed simply of a Tone.OmniOscillator\n\t\t\t *          routed through a Tone.AmplitudeEnvelope. \n\t\t\t *          <img src=\"https://docs.google.com/drawings/d/1-1_0YW2Z1J2EPI36P8fNCMcZG7N1w1GZluPs4og4evo/pub?w=1163&h=231\">\n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.Monophonic}\n\t\t\t *  @param {Object} [options] the options available for the synth \n\t\t\t *                          see defaults below\n\t\t\t *  @example\n\t\t\t * var synth = new Tone.Synth().toMaster();\n\t\t\t * synth.triggerAttackRelease(\"C4\", \"8n\");\n\t\t\t */\n\t\t    Tone.Synth = function (options) {\n\t\t        //get the defaults\n\t\t        options = this.defaultArg(options, Tone.Synth.defaults);\n\t\t        Tone.Monophonic.call(this, options);\n\t\t        /**\n\t\t\t\t *  The oscillator.\n\t\t\t\t *  @type {Tone.OmniOscillator}\n\t\t\t\t */\n\t\t        this.oscillator = new Tone.OmniOscillator(options.oscillator);\n\t\t        /**\n\t\t\t\t *  The frequency control.\n\t\t\t\t *  @type {Frequency}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.frequency = this.oscillator.frequency;\n\t\t        /**\n\t\t\t\t *  The detune control.\n\t\t\t\t *  @type {Cents}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.detune = this.oscillator.detune;\n\t\t        /**\n\t\t\t\t *  The amplitude envelope.\n\t\t\t\t *  @type {Tone.AmplitudeEnvelope}\n\t\t\t\t */\n\t\t        this.envelope = new Tone.AmplitudeEnvelope(options.envelope);\n\t\t        //connect the oscillators to the output\n\t\t        this.oscillator.chain(this.envelope, this.output);\n\t\t        //start the oscillators\n\t\t        this.oscillator.start();\n\t\t        this._readOnly([\n\t\t            'oscillator',\n\t\t            'frequency',\n\t\t            'detune',\n\t\t            'envelope'\n\t\t        ]);\n\t\t    };\n\t\t    Tone.extend(Tone.Synth, Tone.Monophonic);\n\t\t    /**\n\t\t\t *  @const\n\t\t\t *  @static\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.Synth.defaults = {\n\t\t        'oscillator': { 'type': 'triangle' },\n\t\t        'envelope': {\n\t\t            'attack': 0.005,\n\t\t            'decay': 0.1,\n\t\t            'sustain': 0.3,\n\t\t            'release': 1\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  start the attack portion of the envelope\n\t\t\t *  @param {Time} [time=now] the time the attack should start\n\t\t\t *  @param {number} [velocity=1] the velocity of the note (0-1)\n\t\t\t *  @returns {Tone.Synth} this\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Synth.prototype._triggerEnvelopeAttack = function (time, velocity) {\n\t\t        //the envelopes\n\t\t        this.envelope.triggerAttack(time, velocity);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  start the release portion of the envelope\n\t\t\t *  @param {Time} [time=now] the time the release should start\n\t\t\t *  @returns {Tone.Synth} this\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Synth.prototype._triggerEnvelopeRelease = function (time) {\n\t\t        this.envelope.triggerRelease(time);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  clean up\n\t\t\t *  @returns {Tone.Synth} this\n\t\t\t */\n\t\t    Tone.Synth.prototype.dispose = function () {\n\t\t        Tone.Monophonic.prototype.dispose.call(this);\n\t\t        this._writable([\n\t\t            'oscillator',\n\t\t            'frequency',\n\t\t            'detune',\n\t\t            'envelope'\n\t\t        ]);\n\t\t        this.oscillator.dispose();\n\t\t        this.oscillator = null;\n\t\t        this.envelope.dispose();\n\t\t        this.envelope = null;\n\t\t        this.frequency = null;\n\t\t        this.detune = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Synth;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  AMSynth uses the output of one Tone.Synth to modulate the\n\t\t\t *          amplitude of another Tone.Synth. The harmonicity (the ratio between\n\t\t\t *          the two signals) affects the timbre of the output signal greatly.\n\t\t\t *          Read more about Amplitude Modulation Synthesis on \n\t\t\t *          [SoundOnSound](http://www.soundonsound.com/sos/mar00/articles/synthsecrets.htm).\n\t\t\t *          <img src=\"https://docs.google.com/drawings/d/1TQu8Ed4iFr1YTLKpB3U1_hur-UwBrh5gdBXc8BxfGKw/pub?w=1009&h=457\">\n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.Monophonic}\n\t\t\t *  @param {Object} [options] the options available for the synth \n\t\t\t *                            see defaults below\n\t\t\t *  @example\n\t\t\t * var synth = new Tone.AMSynth().toMaster();\n\t\t\t * synth.triggerAttackRelease(\"C4\", \"4n\");\n\t\t\t */\n\t\t    Tone.AMSynth = function (options) {\n\t\t        options = this.defaultArg(options, Tone.AMSynth.defaults);\n\t\t        Tone.Monophonic.call(this, options);\n\t\t        /**\n\t\t\t\t *  The carrier voice. \n\t\t\t\t *  @type {Tone.Synth}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._carrier = new Tone.Synth();\n\t\t        this._carrier.volume.value = -10;\n\t\t        /**\n\t\t\t\t *  The carrier's oscillator\n\t\t\t\t *  @type {Tone.Oscillator}\n\t\t\t\t */\n\t\t        this.oscillator = this._carrier.oscillator;\n\t\t        /**\n\t\t\t\t *  The carrier's envelope\n\t\t\t\t *  @type {Tone.AmplitudeEnvelope}\n\t\t\t\t */\n\t\t        this.envelope = this._carrier.envelope.set(options.envelope);\n\t\t        /**\n\t\t\t\t *  The modulator voice. \n\t\t\t\t *  @type {Tone.Synth}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._modulator = new Tone.Synth();\n\t\t        this._modulator.volume.value = -10;\n\t\t        /**\n\t\t\t\t *  The modulator's oscillator which is applied\n\t\t\t\t *  to the amplitude of the oscillator\n\t\t\t\t *  @type {Tone.Oscillator}\n\t\t\t\t */\n\t\t        this.modulation = this._modulator.oscillator.set(options.modulation);\n\t\t        /**\n\t\t\t\t *  The modulator's envelope\n\t\t\t\t *  @type {Tone.AmplitudeEnvelope}\n\t\t\t\t */\n\t\t        this.modulationEnvelope = this._modulator.envelope.set(options.modulationEnvelope);\n\t\t        /**\n\t\t\t\t *  The frequency.\n\t\t\t\t *  @type {Frequency}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.frequency = new Tone.Signal(440, Tone.Type.Frequency);\n\t\t        /**\n\t\t\t\t *  The detune in cents\n\t\t\t\t *  @type {Cents}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.detune = new Tone.Signal(options.detune, Tone.Type.Cents);\n\t\t        /**\n\t\t\t\t *  Harmonicity is the ratio between the two voices. A harmonicity of\n\t\t\t\t *  1 is no change. Harmonicity = 2 means a change of an octave. \n\t\t\t\t *  @type {Positive}\n\t\t\t\t *  @signal\n\t\t\t\t *  @example\n\t\t\t\t * //pitch voice1 an octave below voice0\n\t\t\t\t * synth.harmonicity.value = 0.5;\n\t\t\t\t */\n\t\t        this.harmonicity = new Tone.Multiply(options.harmonicity);\n\t\t        this.harmonicity.units = Tone.Type.Positive;\n\t\t        /**\n\t\t\t\t *  convert the -1,1 output to 0,1\n\t\t\t\t *  @type {Tone.AudioToGain}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._modulationScale = new Tone.AudioToGain();\n\t\t        /**\n\t\t\t\t *  the node where the modulation happens\n\t\t\t\t *  @type {Tone.Gain}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._modulationNode = new Tone.Gain();\n\t\t        //control the two voices frequency\n\t\t        this.frequency.connect(this._carrier.frequency);\n\t\t        this.frequency.chain(this.harmonicity, this._modulator.frequency);\n\t\t        this.detune.fan(this._carrier.detune, this._modulator.detune);\n\t\t        this._modulator.chain(this._modulationScale, this._modulationNode.gain);\n\t\t        this._carrier.chain(this._modulationNode, this.output);\n\t\t        this._readOnly([\n\t\t            'frequency',\n\t\t            'harmonicity',\n\t\t            'oscillator',\n\t\t            'envelope',\n\t\t            'modulation',\n\t\t            'modulationEnvelope',\n\t\t            'detune'\n\t\t        ]);\n\t\t    };\n\t\t    Tone.extend(Tone.AMSynth, Tone.Monophonic);\n\t\t    /**\n\t\t\t *  @static\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.AMSynth.defaults = {\n\t\t        'harmonicity': 3,\n\t\t        'detune': 0,\n\t\t        'oscillator': { 'type': 'sine' },\n\t\t        'envelope': {\n\t\t            'attack': 0.01,\n\t\t            'decay': 0.01,\n\t\t            'sustain': 1,\n\t\t            'release': 0.5\n\t\t        },\n\t\t        'modulation': { 'type': 'square' },\n\t\t        'modulationEnvelope': {\n\t\t            'attack': 0.5,\n\t\t            'decay': 0,\n\t\t            'sustain': 1,\n\t\t            'release': 0.5\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  trigger the attack portion of the note\n\t\t\t *  \n\t\t\t *  @param  {Time} [time=now] the time the note will occur\n\t\t\t *  @param {NormalRange} [velocity=1] the velocity of the note\n\t\t\t *  @private\n\t\t\t *  @returns {Tone.AMSynth} this\n\t\t\t */\n\t\t    Tone.AMSynth.prototype._triggerEnvelopeAttack = function (time, velocity) {\n\t\t        //the port glide\n\t\t        time = this.toSeconds(time);\n\t\t        //the envelopes\n\t\t        this.envelope.triggerAttack(time, velocity);\n\t\t        this.modulationEnvelope.triggerAttack(time, velocity);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  trigger the release portion of the note\n\t\t\t *  \n\t\t\t *  @param  {Time} [time=now] the time the note will release\n\t\t\t *  @private\n\t\t\t *  @returns {Tone.AMSynth} this\n\t\t\t */\n\t\t    Tone.AMSynth.prototype._triggerEnvelopeRelease = function (time) {\n\t\t        this.envelope.triggerRelease(time);\n\t\t        this.modulationEnvelope.triggerRelease(time);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  clean up\n\t\t\t *  @returns {Tone.AMSynth} this\n\t\t\t */\n\t\t    Tone.AMSynth.prototype.dispose = function () {\n\t\t        Tone.Monophonic.prototype.dispose.call(this);\n\t\t        this._writable([\n\t\t            'frequency',\n\t\t            'harmonicity',\n\t\t            'oscillator',\n\t\t            'envelope',\n\t\t            'modulation',\n\t\t            'modulationEnvelope',\n\t\t            'detune'\n\t\t        ]);\n\t\t        this._carrier.dispose();\n\t\t        this._carrier = null;\n\t\t        this._modulator.dispose();\n\t\t        this._modulator = null;\n\t\t        this.frequency.dispose();\n\t\t        this.frequency = null;\n\t\t        this.detune.dispose();\n\t\t        this.detune = null;\n\t\t        this.harmonicity.dispose();\n\t\t        this.harmonicity = null;\n\t\t        this._modulationScale.dispose();\n\t\t        this._modulationScale = null;\n\t\t        this._modulationNode.dispose();\n\t\t        this._modulationNode = null;\n\t\t        this.oscillator = null;\n\t\t        this.envelope = null;\n\t\t        this.modulationEnvelope = null;\n\t\t        this.modulation = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.AMSynth;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  Tone.MonoSynth is composed of one oscillator, one filter, and two envelopes.\n\t\t\t *          The amplitude of the Tone.Oscillator and the cutoff frequency of the \n\t\t\t *          Tone.Filter are controlled by Tone.Envelopes. \n\t\t\t *          <img src=\"https://docs.google.com/drawings/d/1gaY1DF9_Hzkodqf8JI1Cg2VZfwSElpFQfI94IQwad38/pub?w=924&h=240\">\n\t\t\t *          \n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.Monophonic}\n\t\t\t *  @param {Object} [options] the options available for the synth \n\t\t\t *                          see defaults below\n\t\t\t *  @example\n\t\t\t * var synth = new Tone.MonoSynth({\n\t\t\t * \t\"oscillator\" : {\n\t\t\t * \t\t\"type\" : \"square\"\n\t\t\t *  },\n\t\t\t *  \"envelope\" : {\n\t\t\t *  \t\"attack\" : 0.1\n\t\t\t *  }\n\t\t\t * }).toMaster();\n\t\t\t * synth.triggerAttackRelease(\"C4\", \"8n\");\n\t\t\t */\n\t\t    Tone.MonoSynth = function (options) {\n\t\t        //get the defaults\n\t\t        options = this.defaultArg(options, Tone.MonoSynth.defaults);\n\t\t        Tone.Monophonic.call(this, options);\n\t\t        /**\n\t\t\t\t *  The oscillator.\n\t\t\t\t *  @type {Tone.OmniOscillator}\n\t\t\t\t */\n\t\t        this.oscillator = new Tone.OmniOscillator(options.oscillator);\n\t\t        /**\n\t\t\t\t *  The frequency control.\n\t\t\t\t *  @type {Frequency}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.frequency = this.oscillator.frequency;\n\t\t        /**\n\t\t\t\t *  The detune control.\n\t\t\t\t *  @type {Cents}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.detune = this.oscillator.detune;\n\t\t        /**\n\t\t\t\t *  The filter.\n\t\t\t\t *  @type {Tone.Filter}\n\t\t\t\t */\n\t\t        this.filter = new Tone.Filter(options.filter);\n\t\t        /**\n\t\t\t\t *  The filter envelope.\n\t\t\t\t *  @type {Tone.FrequencyEnvelope}\n\t\t\t\t */\n\t\t        this.filterEnvelope = new Tone.FrequencyEnvelope(options.filterEnvelope);\n\t\t        /**\n\t\t\t\t *  The amplitude envelope.\n\t\t\t\t *  @type {Tone.AmplitudeEnvelope}\n\t\t\t\t */\n\t\t        this.envelope = new Tone.AmplitudeEnvelope(options.envelope);\n\t\t        //connect the oscillators to the output\n\t\t        this.oscillator.chain(this.filter, this.envelope, this.output);\n\t\t        //start the oscillators\n\t\t        this.oscillator.start();\n\t\t        //connect the filter envelope\n\t\t        this.filterEnvelope.connect(this.filter.frequency);\n\t\t        this._readOnly([\n\t\t            'oscillator',\n\t\t            'frequency',\n\t\t            'detune',\n\t\t            'filter',\n\t\t            'filterEnvelope',\n\t\t            'envelope'\n\t\t        ]);\n\t\t    };\n\t\t    Tone.extend(Tone.MonoSynth, Tone.Monophonic);\n\t\t    /**\n\t\t\t *  @const\n\t\t\t *  @static\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.MonoSynth.defaults = {\n\t\t        'frequency': 'C4',\n\t\t        'detune': 0,\n\t\t        'oscillator': { 'type': 'square' },\n\t\t        'filter': {\n\t\t            'Q': 6,\n\t\t            'type': 'lowpass',\n\t\t            'rolloff': -24\n\t\t        },\n\t\t        'envelope': {\n\t\t            'attack': 0.005,\n\t\t            'decay': 0.1,\n\t\t            'sustain': 0.9,\n\t\t            'release': 1\n\t\t        },\n\t\t        'filterEnvelope': {\n\t\t            'attack': 0.06,\n\t\t            'decay': 0.2,\n\t\t            'sustain': 0.5,\n\t\t            'release': 2,\n\t\t            'baseFrequency': 200,\n\t\t            'octaves': 7,\n\t\t            'exponent': 2\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  start the attack portion of the envelope\n\t\t\t *  @param {Time} [time=now] the time the attack should start\n\t\t\t *  @param {NormalRange} [velocity=1] the velocity of the note (0-1)\n\t\t\t *  @returns {Tone.MonoSynth} this\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.MonoSynth.prototype._triggerEnvelopeAttack = function (time, velocity) {\n\t\t        //the envelopes\n\t\t        this.envelope.triggerAttack(time, velocity);\n\t\t        this.filterEnvelope.triggerAttack(time);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  start the release portion of the envelope\n\t\t\t *  @param {Time} [time=now] the time the release should start\n\t\t\t *  @returns {Tone.MonoSynth} this\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.MonoSynth.prototype._triggerEnvelopeRelease = function (time) {\n\t\t        this.envelope.triggerRelease(time);\n\t\t        this.filterEnvelope.triggerRelease(time);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  clean up\n\t\t\t *  @returns {Tone.MonoSynth} this\n\t\t\t */\n\t\t    Tone.MonoSynth.prototype.dispose = function () {\n\t\t        Tone.Monophonic.prototype.dispose.call(this);\n\t\t        this._writable([\n\t\t            'oscillator',\n\t\t            'frequency',\n\t\t            'detune',\n\t\t            'filter',\n\t\t            'filterEnvelope',\n\t\t            'envelope'\n\t\t        ]);\n\t\t        this.oscillator.dispose();\n\t\t        this.oscillator = null;\n\t\t        this.envelope.dispose();\n\t\t        this.envelope = null;\n\t\t        this.filterEnvelope.dispose();\n\t\t        this.filterEnvelope = null;\n\t\t        this.filter.dispose();\n\t\t        this.filter = null;\n\t\t        this.frequency = null;\n\t\t        this.detune = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.MonoSynth;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  Tone.DuoSynth is a monophonic synth composed of two \n\t\t\t *          MonoSynths run in parallel with control over the \n\t\t\t *          frequency ratio between the two voices and vibrato effect.\n\t\t\t *          <img src=\"https://docs.google.com/drawings/d/1bL4GXvfRMMlqS7XyBm9CjL9KJPSUKbcdBNpqOlkFLxk/pub?w=1012&h=448\">\n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.Monophonic}\n\t\t\t *  @param {Object} [options] the options available for the synth \n\t\t\t *                          see defaults below\n\t\t\t *  @example\n\t\t\t * var duoSynth = new Tone.DuoSynth().toMaster();\n\t\t\t * duoSynth.triggerAttackRelease(\"C4\", \"2n\");\n\t\t\t */\n\t\t    Tone.DuoSynth = function (options) {\n\t\t        options = this.defaultArg(options, Tone.DuoSynth.defaults);\n\t\t        Tone.Monophonic.call(this, options);\n\t\t        /**\n\t\t\t\t *  the first voice\n\t\t\t\t *  @type {Tone.MonoSynth}\n\t\t\t\t */\n\t\t        this.voice0 = new Tone.MonoSynth(options.voice0);\n\t\t        this.voice0.volume.value = -10;\n\t\t        /**\n\t\t\t\t *  the second voice\n\t\t\t\t *  @type {Tone.MonoSynth}\n\t\t\t\t */\n\t\t        this.voice1 = new Tone.MonoSynth(options.voice1);\n\t\t        this.voice1.volume.value = -10;\n\t\t        /**\n\t\t\t\t *  The vibrato LFO. \n\t\t\t\t *  @type {Tone.LFO}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._vibrato = new Tone.LFO(options.vibratoRate, -50, 50);\n\t\t        this._vibrato.start();\n\t\t        /**\n\t\t\t\t * the vibrato frequency\n\t\t\t\t * @type {Frequency}\n\t\t\t\t * @signal\n\t\t\t\t */\n\t\t        this.vibratoRate = this._vibrato.frequency;\n\t\t        /**\n\t\t\t\t *  the vibrato gain\n\t\t\t\t *  @type {Tone.Gain}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._vibratoGain = new Tone.Gain(options.vibratoAmount, Tone.Type.Positive);\n\t\t        /**\n\t\t\t\t * The amount of vibrato\n\t\t\t\t * @type {Positive}\n\t\t\t\t * @signal\n\t\t\t\t */\n\t\t        this.vibratoAmount = this._vibratoGain.gain;\n\t\t        /**\n\t\t\t\t *  the frequency control\n\t\t\t\t *  @type {Frequency}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.frequency = new Tone.Signal(440, Tone.Type.Frequency);\n\t\t        /**\n\t\t\t\t *  Harmonicity is the ratio between the two voices. A harmonicity of\n\t\t\t\t *  1 is no change. Harmonicity = 2 means a change of an octave. \n\t\t\t\t *  @type {Positive}\n\t\t\t\t *  @signal\n\t\t\t\t *  @example\n\t\t\t\t * //pitch voice1 an octave below voice0\n\t\t\t\t * duoSynth.harmonicity.value = 0.5;\n\t\t\t\t */\n\t\t        this.harmonicity = new Tone.Multiply(options.harmonicity);\n\t\t        this.harmonicity.units = Tone.Type.Positive;\n\t\t        //control the two voices frequency\n\t\t        this.frequency.connect(this.voice0.frequency);\n\t\t        this.frequency.chain(this.harmonicity, this.voice1.frequency);\n\t\t        this._vibrato.connect(this._vibratoGain);\n\t\t        this._vibratoGain.fan(this.voice0.detune, this.voice1.detune);\n\t\t        this.voice0.connect(this.output);\n\t\t        this.voice1.connect(this.output);\n\t\t        this._readOnly([\n\t\t            'voice0',\n\t\t            'voice1',\n\t\t            'frequency',\n\t\t            'vibratoAmount',\n\t\t            'vibratoRate'\n\t\t        ]);\n\t\t    };\n\t\t    Tone.extend(Tone.DuoSynth, Tone.Monophonic);\n\t\t    /**\n\t\t\t *  @static\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.DuoSynth.defaults = {\n\t\t        'vibratoAmount': 0.5,\n\t\t        'vibratoRate': 5,\n\t\t        'harmonicity': 1.5,\n\t\t        'voice0': {\n\t\t            'volume': -10,\n\t\t            'portamento': 0,\n\t\t            'oscillator': { 'type': 'sine' },\n\t\t            'filterEnvelope': {\n\t\t                'attack': 0.01,\n\t\t                'decay': 0,\n\t\t                'sustain': 1,\n\t\t                'release': 0.5\n\t\t            },\n\t\t            'envelope': {\n\t\t                'attack': 0.01,\n\t\t                'decay': 0,\n\t\t                'sustain': 1,\n\t\t                'release': 0.5\n\t\t            }\n\t\t        },\n\t\t        'voice1': {\n\t\t            'volume': -10,\n\t\t            'portamento': 0,\n\t\t            'oscillator': { 'type': 'sine' },\n\t\t            'filterEnvelope': {\n\t\t                'attack': 0.01,\n\t\t                'decay': 0,\n\t\t                'sustain': 1,\n\t\t                'release': 0.5\n\t\t            },\n\t\t            'envelope': {\n\t\t                'attack': 0.01,\n\t\t                'decay': 0,\n\t\t                'sustain': 1,\n\t\t                'release': 0.5\n\t\t            }\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  start the attack portion of the envelopes\n\t\t\t *  \n\t\t\t *  @param {Time} [time=now] the time the attack should start\n\t\t\t *  @param {NormalRange} [velocity=1] the velocity of the note (0-1)\n\t\t\t *  @returns {Tone.DuoSynth} this\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.DuoSynth.prototype._triggerEnvelopeAttack = function (time, velocity) {\n\t\t        time = this.toSeconds(time);\n\t\t        this.voice0.envelope.triggerAttack(time, velocity);\n\t\t        this.voice1.envelope.triggerAttack(time, velocity);\n\t\t        this.voice0.filterEnvelope.triggerAttack(time);\n\t\t        this.voice1.filterEnvelope.triggerAttack(time);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  start the release portion of the envelopes\n\t\t\t *  \n\t\t\t *  @param {Time} [time=now] the time the release should start\n\t\t\t *  @returns {Tone.DuoSynth} this\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.DuoSynth.prototype._triggerEnvelopeRelease = function (time) {\n\t\t        this.voice0.triggerRelease(time);\n\t\t        this.voice1.triggerRelease(time);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  clean up\n\t\t\t *  @returns {Tone.DuoSynth} this\n\t\t\t */\n\t\t    Tone.DuoSynth.prototype.dispose = function () {\n\t\t        Tone.Monophonic.prototype.dispose.call(this);\n\t\t        this._writable([\n\t\t            'voice0',\n\t\t            'voice1',\n\t\t            'frequency',\n\t\t            'vibratoAmount',\n\t\t            'vibratoRate'\n\t\t        ]);\n\t\t        this.voice0.dispose();\n\t\t        this.voice0 = null;\n\t\t        this.voice1.dispose();\n\t\t        this.voice1 = null;\n\t\t        this.frequency.dispose();\n\t\t        this.frequency = null;\n\t\t        this._vibratoGain.dispose();\n\t\t        this._vibratoGain = null;\n\t\t        this._vibrato = null;\n\t\t        this.harmonicity.dispose();\n\t\t        this.harmonicity = null;\n\t\t        this.vibratoAmount.dispose();\n\t\t        this.vibratoAmount = null;\n\t\t        this.vibratoRate = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.DuoSynth;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  FMSynth is composed of two Tone.Synths where one Tone.Synth modulates\n\t\t\t *          the frequency of a second Tone.Synth. A lot of spectral content \n\t\t\t *          can be explored using the modulationIndex parameter. Read more about\n\t\t\t *          frequency modulation synthesis on [SoundOnSound](http://www.soundonsound.com/sos/apr00/articles/synthsecrets.htm).\n\t\t\t *          <img src=\"https://docs.google.com/drawings/d/1h0PUDZXPgi4Ikx6bVT6oncrYPLluFKy7lj53puxj-DM/pub?w=902&h=462\">\n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.Monophonic}\n\t\t\t *  @param {Object} [options] the options available for the synth \n\t\t\t *                          see defaults below\n\t\t\t *  @example\n\t\t\t * var fmSynth = new Tone.FMSynth().toMaster();\n\t\t\t * fmSynth.triggerAttackRelease(\"C5\", \"4n\");\n\t\t\t */\n\t\t    Tone.FMSynth = function (options) {\n\t\t        options = this.defaultArg(options, Tone.FMSynth.defaults);\n\t\t        Tone.Monophonic.call(this, options);\n\t\t        /**\n\t\t\t\t *  The carrier voice.\n\t\t\t\t *  @type {Tone.Synth}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._carrier = new Tone.Synth(options.carrier);\n\t\t        this._carrier.volume.value = -10;\n\t\t        /**\n\t\t\t\t *  The carrier's oscillator\n\t\t\t\t *  @type {Tone.Oscillator}\n\t\t\t\t */\n\t\t        this.oscillator = this._carrier.oscillator;\n\t\t        /**\n\t\t\t\t *  The carrier's envelope\n\t\t\t\t *  @type {Tone.Oscillator}\n\t\t\t\t */\n\t\t        this.envelope = this._carrier.envelope.set(options.envelope);\n\t\t        /**\n\t\t\t\t *  The modulator voice.\n\t\t\t\t *  @type {Tone.Synth}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._modulator = new Tone.Synth(options.modulator);\n\t\t        this._modulator.volume.value = -10;\n\t\t        /**\n\t\t\t\t *  The modulator's oscillator which is applied\n\t\t\t\t *  to the amplitude of the oscillator\n\t\t\t\t *  @type {Tone.Oscillator}\n\t\t\t\t */\n\t\t        this.modulation = this._modulator.oscillator.set(options.modulation);\n\t\t        /**\n\t\t\t\t *  The modulator's envelope\n\t\t\t\t *  @type {Tone.Oscillator}\n\t\t\t\t */\n\t\t        this.modulationEnvelope = this._modulator.envelope.set(options.modulationEnvelope);\n\t\t        /**\n\t\t\t\t *  The frequency control.\n\t\t\t\t *  @type {Frequency}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.frequency = new Tone.Signal(440, Tone.Type.Frequency);\n\t\t        /**\n\t\t\t\t *  The detune in cents\n\t\t\t\t *  @type {Cents}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.detune = new Tone.Signal(options.detune, Tone.Type.Cents);\n\t\t        /**\n\t\t\t\t *  Harmonicity is the ratio between the two voices. A harmonicity of\n\t\t\t\t *  1 is no change. Harmonicity = 2 means a change of an octave. \n\t\t\t\t *  @type {Positive}\n\t\t\t\t *  @signal\n\t\t\t\t *  @example\n\t\t\t\t * //pitch voice1 an octave below voice0\n\t\t\t\t * synth.harmonicity.value = 0.5;\n\t\t\t\t */\n\t\t        this.harmonicity = new Tone.Multiply(options.harmonicity);\n\t\t        this.harmonicity.units = Tone.Type.Positive;\n\t\t        /**\n\t\t\t\t *  The modulation index which essentially the depth or amount of the modulation. It is the \n\t\t\t\t *  ratio of the frequency of the modulating signal (mf) to the amplitude of the \n\t\t\t\t *  modulating signal (ma) -- as in ma/mf. \n\t\t\t\t *\t@type {Positive}\n\t\t\t\t *\t@signal\n\t\t\t\t */\n\t\t        this.modulationIndex = new Tone.Multiply(options.modulationIndex);\n\t\t        this.modulationIndex.units = Tone.Type.Positive;\n\t\t        /**\n\t\t\t\t *  the node where the modulation happens\n\t\t\t\t *  @type {GainNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._modulationNode = new Tone.Gain(0);\n\t\t        //control the two voices frequency\n\t\t        this.frequency.connect(this._carrier.frequency);\n\t\t        this.frequency.chain(this.harmonicity, this._modulator.frequency);\n\t\t        this.frequency.chain(this.modulationIndex, this._modulationNode);\n\t\t        this.detune.fan(this._carrier.detune, this._modulator.detune);\n\t\t        this._modulator.connect(this._modulationNode.gain);\n\t\t        this._modulationNode.connect(this._carrier.frequency);\n\t\t        this._carrier.connect(this.output);\n\t\t        this._readOnly([\n\t\t            'frequency',\n\t\t            'harmonicity',\n\t\t            'modulationIndex',\n\t\t            'oscillator',\n\t\t            'envelope',\n\t\t            'modulation',\n\t\t            'modulationEnvelope',\n\t\t            'detune'\n\t\t        ]);\n\t\t    };\n\t\t    Tone.extend(Tone.FMSynth, Tone.Monophonic);\n\t\t    /**\n\t\t\t *  @static\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.FMSynth.defaults = {\n\t\t        'harmonicity': 3,\n\t\t        'modulationIndex': 10,\n\t\t        'detune': 0,\n\t\t        'oscillator': { 'type': 'sine' },\n\t\t        'envelope': {\n\t\t            'attack': 0.01,\n\t\t            'decay': 0.01,\n\t\t            'sustain': 1,\n\t\t            'release': 0.5\n\t\t        },\n\t\t        'modulation': { 'type': 'square' },\n\t\t        'modulationEnvelope': {\n\t\t            'attack': 0.5,\n\t\t            'decay': 0,\n\t\t            'sustain': 1,\n\t\t            'release': 0.5\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t * \ttrigger the attack portion of the note\n\t\t\t *  \n\t\t\t *  @param  {Time} [time=now] the time the note will occur\n\t\t\t *  @param {number} [velocity=1] the velocity of the note\n\t\t\t *  @returns {Tone.FMSynth} this\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.FMSynth.prototype._triggerEnvelopeAttack = function (time, velocity) {\n\t\t        time = this.toSeconds(time);\n\t\t        //the envelopes\n\t\t        this.envelope.triggerAttack(time, velocity);\n\t\t        this.modulationEnvelope.triggerAttack(time);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  trigger the release portion of the note\n\t\t\t *  \n\t\t\t *  @param  {Time} [time=now] the time the note will release\n\t\t\t *  @returns {Tone.FMSynth} this\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.FMSynth.prototype._triggerEnvelopeRelease = function (time) {\n\t\t        time = this.toSeconds(time);\n\t\t        this.envelope.triggerRelease(time);\n\t\t        this.modulationEnvelope.triggerRelease(time);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  clean up\n\t\t\t *  @returns {Tone.FMSynth} this\n\t\t\t */\n\t\t    Tone.FMSynth.prototype.dispose = function () {\n\t\t        Tone.Monophonic.prototype.dispose.call(this);\n\t\t        this._writable([\n\t\t            'frequency',\n\t\t            'harmonicity',\n\t\t            'modulationIndex',\n\t\t            'oscillator',\n\t\t            'envelope',\n\t\t            'modulation',\n\t\t            'modulationEnvelope',\n\t\t            'detune'\n\t\t        ]);\n\t\t        this._carrier.dispose();\n\t\t        this._carrier = null;\n\t\t        this._modulator.dispose();\n\t\t        this._modulator = null;\n\t\t        this.frequency.dispose();\n\t\t        this.frequency = null;\n\t\t        this.detune.dispose();\n\t\t        this.detune = null;\n\t\t        this.modulationIndex.dispose();\n\t\t        this.modulationIndex = null;\n\t\t        this.harmonicity.dispose();\n\t\t        this.harmonicity = null;\n\t\t        this._modulationNode.dispose();\n\t\t        this._modulationNode = null;\n\t\t        this.oscillator = null;\n\t\t        this.envelope = null;\n\t\t        this.modulationEnvelope = null;\n\t\t        this.modulation = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.FMSynth;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  Tone.MembraneSynth makes kick and tom sounds using a single oscillator\n\t\t\t *          with an amplitude envelope and frequency ramp. A Tone.OmniOscillator\n\t\t\t *          is routed through a Tone.AmplitudeEnvelope to the output. The drum\n\t\t\t *          quality of the sound comes from the frequency envelope applied\n\t\t\t *          during during Tone.MembraneSynth.triggerAttack(note). The frequency\n\t\t\t *          envelope starts at <code>note * .octaves</code> and ramps to \n\t\t\t *          <code>note</code> over the duration of <code>.pitchDecay</code>. \n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.Instrument}\n\t\t\t *  @param {Object} [options] the options available for the synth \n\t\t\t *                          see defaults below\n\t\t\t *  @example\n\t\t\t * var synth = new Tone.MembraneSynth().toMaster();\n\t\t\t * synth.triggerAttackRelease(\"C2\", \"8n\");\n\t\t\t */\n\t\t    Tone.MembraneSynth = function (options) {\n\t\t        options = this.defaultArg(options, Tone.MembraneSynth.defaults);\n\t\t        Tone.Instrument.call(this, options);\n\t\t        /**\n\t\t\t\t *  The oscillator.\n\t\t\t\t *  @type {Tone.OmniOscillator}\n\t\t\t\t */\n\t\t        this.oscillator = new Tone.OmniOscillator(options.oscillator).start();\n\t\t        /**\n\t\t\t\t *  The amplitude envelope.\n\t\t\t\t *  @type {Tone.AmplitudeEnvelope}\n\t\t\t\t */\n\t\t        this.envelope = new Tone.AmplitudeEnvelope(options.envelope);\n\t\t        /**\n\t\t\t\t *  The number of octaves the pitch envelope ramps.\n\t\t\t\t *  @type {Positive}\n\t\t\t\t */\n\t\t        this.octaves = options.octaves;\n\t\t        /**\n\t\t\t\t *  The amount of time the frequency envelope takes. \n\t\t\t\t *  @type {Time}\n\t\t\t\t */\n\t\t        this.pitchDecay = options.pitchDecay;\n\t\t        this.oscillator.chain(this.envelope, this.output);\n\t\t        this._readOnly([\n\t\t            'oscillator',\n\t\t            'envelope'\n\t\t        ]);\n\t\t    };\n\t\t    Tone.extend(Tone.MembraneSynth, Tone.Instrument);\n\t\t    /**\n\t\t\t *  @static\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.MembraneSynth.defaults = {\n\t\t        'pitchDecay': 0.05,\n\t\t        'octaves': 10,\n\t\t        'oscillator': { 'type': 'sine' },\n\t\t        'envelope': {\n\t\t            'attack': 0.001,\n\t\t            'decay': 0.4,\n\t\t            'sustain': 0.01,\n\t\t            'release': 1.4,\n\t\t            'attackCurve': 'exponential'\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Trigger the note at the given time with the given velocity. \n\t\t\t *  \n\t\t\t *  @param  {Frequency} note     the note\n\t\t\t *  @param  {Time} [time=now]     the time, if not given is now\n\t\t\t *  @param  {number} [velocity=1] velocity defaults to 1\n\t\t\t *  @returns {Tone.MembraneSynth} this\n\t\t\t *  @example\n\t\t\t *  kick.triggerAttack(60);\n\t\t\t */\n\t\t    Tone.MembraneSynth.prototype.triggerAttack = function (note, time, velocity) {\n\t\t        time = this.toSeconds(time);\n\t\t        note = this.toFrequency(note);\n\t\t        var maxNote = note * this.octaves;\n\t\t        this.oscillator.frequency.setValueAtTime(maxNote, time);\n\t\t        this.oscillator.frequency.exponentialRampToValueAtTime(note, time + this.toSeconds(this.pitchDecay));\n\t\t        this.envelope.triggerAttack(time, velocity);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Trigger the release portion of the note.\n\t\t\t *  \n\t\t\t *  @param  {Time} [time=now] the time the note will release\n\t\t\t *  @returns {Tone.MembraneSynth} this\n\t\t\t */\n\t\t    Tone.MembraneSynth.prototype.triggerRelease = function (time) {\n\t\t        this.envelope.triggerRelease(time);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Clean up.\n\t\t\t *  @returns {Tone.MembraneSynth} this\n\t\t\t */\n\t\t    Tone.MembraneSynth.prototype.dispose = function () {\n\t\t        Tone.Instrument.prototype.dispose.call(this);\n\t\t        this._writable([\n\t\t            'oscillator',\n\t\t            'envelope'\n\t\t        ]);\n\t\t        this.oscillator.dispose();\n\t\t        this.oscillator = null;\n\t\t        this.envelope.dispose();\n\t\t        this.envelope = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.MembraneSynth;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    /**\n\t\t\t *  Inharmonic ratio of frequencies based on the Roland TR-808\n\t\t\t *  Taken from https://ccrma.stanford.edu/papers/tr-808-cymbal-physically-informed-circuit-bendable-digital-model\n\t\t\t *  @private\n\t\t\t *  @static\n\t\t\t *  @type {Array}\n\t\t\t */\n\t\t    var inharmRatios = [\n\t\t        1,\n\t\t        1.483,\n\t\t        1.932,\n\t\t        2.546,\n\t\t        2.63,\n\t\t        3.897\n\t\t    ];\n\t\t    /**\n\t\t\t *  @class  A highly inharmonic and spectrally complex source with a highpass filter\n\t\t\t *          and amplitude envelope which is good for making metalophone sounds. Based\n\t\t\t *          on CymbalSynth by [@polyrhythmatic](https://github.com/polyrhythmatic).\n\t\t\t *          Inspiration from [Sound on Sound](http://www.soundonsound.com/sos/jul02/articles/synthsecrets0702.asp).\n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.Instrument}\n\t\t\t *  @param {Object} [options] The options availble for the synth\n\t\t\t *                             see defaults below\n\t\t\t */\n\t\t    Tone.MetalSynth = function (options) {\n\t\t        options = this.defaultArg(options, Tone.MetalSynth.defaults);\n\t\t        Tone.Instrument.call(this, options);\n\t\t        /**\n\t\t\t\t *  The frequency of the cymbal\n\t\t\t\t *  @type  {Frequency}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.frequency = new Tone.Signal(options.frequency, Tone.Type.Frequency);\n\t\t        /**\n\t\t\t\t *  The array of FMOscillators\n\t\t\t\t *  @type  {Array}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._oscillators = [];\n\t\t        /**\n\t\t\t\t *  The frequency multipliers\n\t\t\t\t *  @type {Array}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._freqMultipliers = [];\n\t\t        /**\n\t\t\t\t *  The amplitude for the body\n\t\t\t\t *  @type {Tone.Gain}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._amplitue = new Tone.Gain(0).connect(this.output);\n\t\t        /**\n\t\t\t\t *  highpass the output\n\t\t\t\t *  @type {Tone.Filter}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._highpass = new Tone.Filter({\n\t\t            'type': 'highpass',\n\t\t            'Q': -3.0102999566398125\n\t\t        }).connect(this._amplitue);\n\t\t        /**\n\t\t\t\t *  The number of octaves the highpass\n\t\t\t\t *  filter frequency ramps\n\t\t\t\t *  @type {Number}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._octaves = options.octaves;\n\t\t        /**\n\t\t\t\t *  Scale the body envelope\n\t\t\t\t *  for the bandpass\n\t\t\t\t *  @type {Tone.Scale}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._filterFreqScaler = new Tone.Scale(options.resonance, 7000);\n\t\t        /**\n\t\t\t\t *  The envelope which is connected both to the \n\t\t\t\t *  amplitude and highpass filter's cutoff frequency\n\t\t\t\t *  @type  {Tone.Envelope}\n\t\t\t\t */\n\t\t        this.envelope = new Tone.Envelope({\n\t\t            'attack': options.envelope.attack,\n\t\t            'attackCurve': 'linear',\n\t\t            'decay': options.envelope.decay,\n\t\t            'sustain': 0,\n\t\t            'release': options.envelope.release\n\t\t        }).chain(this._filterFreqScaler, this._highpass.frequency);\n\t\t        this.envelope.connect(this._amplitue.gain);\n\t\t        for (var i = 0; i < inharmRatios.length; i++) {\n\t\t            var osc = new Tone.FMOscillator({\n\t\t                'type': 'square',\n\t\t                'modulationType': 'square',\n\t\t                'harmonicity': options.harmonicity,\n\t\t                'modulationIndex': options.modulationIndex\n\t\t            });\n\t\t            osc.connect(this._highpass).start(0);\n\t\t            this._oscillators[i] = osc;\n\t\t            var mult = new Tone.Multiply(inharmRatios[i]);\n\t\t            this._freqMultipliers[i] = mult;\n\t\t            this.frequency.chain(mult, osc.frequency);\n\t\t        }\n\t\t        //set the octaves\n\t\t        this.octaves = options.octaves;\n\t\t    };\n\t\t    Tone.extend(Tone.MetalSynth, Tone.Instrument);\n\t\t    /**\n\t\t\t *  default values\n\t\t\t *  @static\n\t\t\t *  @const\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.MetalSynth.defaults = {\n\t\t        'frequency': 200,\n\t\t        'envelope': {\n\t\t            'attack': 0.001,\n\t\t            'decay': 1.4,\n\t\t            'release': 0.2\n\t\t        },\n\t\t        'harmonicity': 5.1,\n\t\t        'modulationIndex': 32,\n\t\t        'resonance': 4000,\n\t\t        'octaves': 1.5\n\t\t    };\n\t\t    /**\n\t\t\t *  Trigger the attack.\n\t\t\t *  @param  {Time}  time      When the attack should be triggered.\n\t\t\t *  @param  {NormalRange=1}  velocity  The velocity that the envelope should be triggered at.\n\t\t\t *  @return  {Tone.MetalSynth}  this\n\t\t\t */\n\t\t    Tone.MetalSynth.prototype.triggerAttack = function (time, vel) {\n\t\t        time = this.toSeconds(time);\n\t\t        vel = this.defaultArg(vel, 1);\n\t\t        this.envelope.triggerAttack(time, vel);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Trigger the release of the envelope.\n\t\t\t *  @param  {Time}  time      When the release should be triggered.\n\t\t\t *  @return  {Tone.MetalSynth}  this\n\t\t\t */\n\t\t    Tone.MetalSynth.prototype.triggerRelease = function (time) {\n\t\t        time = this.toSeconds(time);\n\t\t        this.envelope.triggerRelease(time);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Trigger the attack and release of the envelope after the given \n\t\t\t *  duration. \n\t\t\t *  @param  {Time}  duration  The duration before triggering the release\n\t\t\t *  @param  {Time}  time      When the attack should be triggered.\n\t\t\t *  @param  {NormalRange=1}  velocity  The velocity that the envelope should be triggered at.\n\t\t\t *  @return  {Tone.MetalSynth}  this\n\t\t\t */\n\t\t    Tone.MetalSynth.prototype.triggerAttackRelease = function (duration, time, velocity) {\n\t\t        time = this.toSeconds(time);\n\t\t        duration = this.toSeconds(duration);\n\t\t        this.triggerAttack(time, velocity);\n\t\t        this.triggerRelease(time + duration);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  The modulationIndex of the oscillators which make up the source.\n\t\t\t *  see Tone.FMOscillator.modulationIndex\n\t\t\t *  @memberOf Tone.MetalSynth#\n\t\t\t *  @type {Positive}\n\t\t\t *  @name  modulationIndex\n\t\t\t */\n\t\t    Object.defineProperty(Tone.MetalSynth.prototype, 'modulationIndex', {\n\t\t        get: function () {\n\t\t            return this._oscillators[0].modulationIndex.value;\n\t\t        },\n\t\t        set: function (val) {\n\t\t            for (var i = 0; i < this._oscillators.length; i++) {\n\t\t                this._oscillators[i].modulationIndex.value = val;\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The harmonicity of the oscillators which make up the source.\n\t\t\t *  see Tone.FMOscillator.harmonicity\n\t\t\t *  @memberOf Tone.MetalSynth#\n\t\t\t *  @type {Positive}\n\t\t\t *  @name  harmonicity\n\t\t\t */\n\t\t    Object.defineProperty(Tone.MetalSynth.prototype, 'harmonicity', {\n\t\t        get: function () {\n\t\t            return this._oscillators[0].harmonicity.value;\n\t\t        },\n\t\t        set: function (val) {\n\t\t            for (var i = 0; i < this._oscillators.length; i++) {\n\t\t                this._oscillators[i].harmonicity.value = val;\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The frequency of the highpass filter attached to the envelope\n\t\t\t *  @memberOf Tone.MetalSynth#\n\t\t\t *  @type {Frequency}\n\t\t\t *  @name  resonance\n\t\t\t */\n\t\t    Object.defineProperty(Tone.MetalSynth.prototype, 'resonance', {\n\t\t        get: function () {\n\t\t            return this._filterFreqScaler.min;\n\t\t        },\n\t\t        set: function (val) {\n\t\t            this._filterFreqScaler.min = val;\n\t\t            this.octaves = this._octaves;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The number of octaves above the \"resonance\" frequency\n\t\t\t *  that the filter ramps during the attack/decay envelope\n\t\t\t *  @memberOf Tone.MetalSynth#\n\t\t\t *  @type {Number}\n\t\t\t *  @name  octaves\n\t\t\t */\n\t\t    Object.defineProperty(Tone.MetalSynth.prototype, 'octaves', {\n\t\t        get: function () {\n\t\t            return this._octaves;\n\t\t        },\n\t\t        set: function (octs) {\n\t\t            this._octaves = octs;\n\t\t            this._filterFreqScaler.max = this._filterFreqScaler.min * Math.pow(2, octs);\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Clean up\n\t\t\t *  @returns {Tone.MetalSynth} this\n\t\t\t */\n\t\t    Tone.MetalSynth.prototype.dispose = function () {\n\t\t        Tone.Instrument.prototype.dispose.call(this);\n\t\t        for (var i = 0; i < this._oscillators.length; i++) {\n\t\t            this._oscillators[i].dispose();\n\t\t            this._freqMultipliers[i].dispose();\n\t\t        }\n\t\t        this._oscillators = null;\n\t\t        this._freqMultipliers = null;\n\t\t        this.frequency.dispose();\n\t\t        this.frequency = null;\n\t\t        this._filterFreqScaler.dispose();\n\t\t        this._filterFreqScaler = null;\n\t\t        this._amplitue.dispose();\n\t\t        this._amplitue = null;\n\t\t        this.envelope.dispose();\n\t\t        this.envelope = null;\n\t\t        this._highpass.dispose();\n\t\t        this._highpass = null;\n\t\t    };\n\t\t    return Tone.MetalSynth;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    /**\n\t\t\t *  BufferSource polyfill\n\t\t\t */\n\t\t    if (window.AudioBufferSourceNode && !AudioBufferSourceNode.prototype.start) {\n\t\t        AudioBufferSourceNode.prototype.start = AudioBufferSourceNode.prototype.noteGrainOn;\n\t\t        AudioBufferSourceNode.prototype.stop = AudioBufferSourceNode.prototype.noteOff;\n\t\t    }\n\t\t    /**\n\t\t\t *  @class Wrapper around the native BufferSourceNode.\n\t\t\t *  @param  {AudioBuffer|Tone.Buffer}  buffer   The buffer to play\n\t\t\t *  @param  {Function}  onended  The callback to invoke when the \n\t\t\t *                               buffer is done playing.\n\t\t\t */\n\t\t    Tone.BufferSource = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'buffer',\n\t\t            'onended'\n\t\t        ], Tone.BufferSource.defaults);\n\t\t        /**\n\t\t\t\t *  The callback to invoke after the \n\t\t\t\t *  buffer source is done playing. \n\t\t\t\t *  @type  {Function}\n\t\t\t\t */\n\t\t        this.onended = options.onended;\n\t\t        /**\n\t\t\t\t *  The time that the buffer was started.\n\t\t\t\t *  @type  {Number}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._startTime = -1;\n\t\t        /**\n\t\t\t\t *  The time that the buffer is scheduled to stop.\n\t\t\t\t *  @type  {Number}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._stopTime = -1;\n\t\t        /**\n\t\t\t\t *  The gain node which envelopes the BufferSource\n\t\t\t\t *  @type  {Tone.Gain}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._gainNode = this.output = new Tone.Gain();\n\t\t        /**\n\t\t\t\t *  The buffer source\n\t\t\t\t *  @type  {AudioBufferSourceNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._source = this.context.createBufferSource();\n\t\t        this._source.connect(this._gainNode);\n\t\t        /**\n\t\t\t\t *  The playbackRate of the buffer\n\t\t\t\t *  @type {Positive}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.playbackRate = new Tone.Param(this._source.playbackRate, Tone.Type.Positive);\n\t\t        /**\n\t\t\t\t *  The fadeIn time of the amplitude envelope.\n\t\t\t\t *  @type {Time}\n\t\t\t\t */\n\t\t        this.fadeIn = options.fadeIn;\n\t\t        /**\n\t\t\t\t *  The fadeOut time of the amplitude envelope.\n\t\t\t\t *  @type {Time}\n\t\t\t\t */\n\t\t        this.fadeOut = options.fadeOut;\n\t\t        /**\n\t\t\t\t *  The value that the buffer ramps to\n\t\t\t\t *  @type {Gain}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._gain = 1;\n\t\t        /**\n\t\t\t\t * The onended timeout\n\t\t\t\t * @type {Number}\n\t\t\t\t * @private\n\t\t\t\t */\n\t\t        this._onendedTimeout = -1;\n\t\t        //set the buffer initially\n\t\t        if (!this.isUndef(options.buffer)) {\n\t\t            this.buffer = options.buffer;\n\t\t        }\n\t\t        this.loop = options.loop;\n\t\t    };\n\t\t    Tone.extend(Tone.BufferSource);\n\t\t    /**\n\t\t\t *  The defaults\n\t\t\t *  @const\n\t\t\t *  @type  {Object}\n\t\t\t */\n\t\t    Tone.BufferSource.defaults = {\n\t\t        'onended': Tone.noOp,\n\t\t        'fadeIn': 0,\n\t\t        'fadeOut': 0\n\t\t    };\n\t\t    /**\n\t\t\t *  Returns the playback state of the source, either \"started\" or \"stopped\".\n\t\t\t *  @type {Tone.State}\n\t\t\t *  @readOnly\n\t\t\t *  @memberOf Tone.BufferSource#\n\t\t\t *  @name state\n\t\t\t */\n\t\t    Object.defineProperty(Tone.BufferSource.prototype, 'state', {\n\t\t        get: function () {\n\t\t            var now = this.now();\n\t\t            if (this._startTime !== -1 && now >= this._startTime && now < this._stopTime) {\n\t\t                return Tone.State.Started;\n\t\t            } else {\n\t\t                return Tone.State.Stopped;\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Start the buffer\n\t\t\t *  @param  {Time} [startTime=now] When the player should start.\n\t\t\t *  @param  {Time} [offset=0] The offset from the beginning of the sample\n\t\t\t *                                 to start at. \n\t\t\t *  @param  {Time=} duration How long the sample should play. If no duration\n\t\t\t *                                is given, it will default to the full length \n\t\t\t *                                of the sample (minus any offset)\n\t\t\t *  @param  {Gain}  [gain=1]  The gain to play the buffer back at.\n\t\t\t *  @param  {Time=}  fadeInTime  The optional fadeIn ramp time.\n\t\t\t *  @return  {Tone.BufferSource}  this\n\t\t\t */\n\t\t    Tone.BufferSource.prototype.start = function (time, offset, duration, gain, fadeInTime) {\n\t\t        if (this._startTime !== -1) {\n\t\t            throw new Error('Tone.BufferSource: can only be started once.');\n\t\t        }\n\t\t        if (this.buffer) {\n\t\t            time = this.toSeconds(time);\n\t\t            //if it's a loop the default offset is the loopstart point\n\t\t            if (this.loop) {\n\t\t                offset = this.defaultArg(offset, this.loopStart);\n\t\t            } else {\n\t\t                //otherwise the default offset is 0\n\t\t                offset = this.defaultArg(offset, 0);\n\t\t            }\n\t\t            offset = this.toSeconds(offset);\n\t\t            //the values in seconds\n\t\t            time = this.toSeconds(time);\n\t\t            this._source.start(time, offset);\n\t\t            gain = this.defaultArg(gain, 1);\n\t\t            this._gain = gain;\n\t\t            //the fadeIn time\n\t\t            if (this.isUndef(fadeInTime)) {\n\t\t                fadeInTime = this.toSeconds(this.fadeIn);\n\t\t            } else {\n\t\t                fadeInTime = this.toSeconds(fadeInTime);\n\t\t            }\n\t\t            if (fadeInTime > 0) {\n\t\t                this._gainNode.gain.setValueAtTime(0, time);\n\t\t                this._gainNode.gain.linearRampToValueAtTime(this._gain, time + fadeInTime);\n\t\t            } else {\n\t\t                this._gainNode.gain.setValueAtTime(gain, time);\n\t\t            }\n\t\t            this._startTime = time + fadeInTime;\n\t\t            if (!this.isUndef(duration)) {\n\t\t                duration = this.defaultArg(duration, this.buffer.duration - offset);\n\t\t                duration = this.toSeconds(duration);\n\t\t                this.stop(time + duration + fadeInTime, fadeInTime);\n\t\t            }\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Stop the buffer. Optionally add a ramp time to fade the \n\t\t\t *  buffer out. \n\t\t\t *  @param  {Time=}  time         The time the buffer should stop.\n\t\t\t *  @param  {Time=}  fadeOutTime  How long the gain should fade out for\n\t\t\t *  @return  {Tone.BufferSource}  this\n\t\t\t */\n\t\t    Tone.BufferSource.prototype.stop = function (time, fadeOutTime) {\n\t\t        if (this.buffer) {\n\t\t            time = this.toSeconds(time);\n\t\t            //the fadeOut time\n\t\t            if (this.isUndef(fadeOutTime)) {\n\t\t                fadeOutTime = this.toSeconds(this.fadeOut);\n\t\t            } else {\n\t\t                fadeOutTime = this.toSeconds(fadeOutTime);\n\t\t            }\n\t\t            this._stopTime = time + fadeOutTime;\n\t\t            //cancel the end curve\n\t\t            this._gainNode.gain.cancelScheduledValues(this._startTime + this.sampleTime);\n\t\t            //set a new one\n\t\t            if (fadeOutTime > 0) {\n\t\t                this._gainNode.gain.setValueAtTime(this._gain, time);\n\t\t                this._gainNode.gain.linearRampToValueAtTime(0, time + fadeOutTime);\n\t\t                time += fadeOutTime;\n\t\t            } else {\n\t\t                this._gainNode.gain.setValueAtTime(0, time);\n\t\t            }\n\t\t            // fix for safari bug and old FF\n\t\t            if (!this.isNumber(this._source.playbackState) || this._source.playbackState === 2) {\n\t\t                this._source.stop(time);\n\t\t            }\n\t\t            clearTimeout(this._onendedTimeout);\n\t\t            this._onendedTimeout = setTimeout(this._onended.bind(this), (this._stopTime - this.now()) * 1000);\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Internal callback when the buffer is ended. \n\t\t\t *  Invokes `onended` and disposes the node.\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.BufferSource.prototype._onended = function () {\n\t\t        this.onended(this);\n\t\t        this.dispose();\n\t\t    };\n\t\t    /**\n\t\t\t * If loop is true, the loop will start at this position. \n\t\t\t * @memberOf Tone.BufferSource#\n\t\t\t * @type {Time}\n\t\t\t * @name loopStart\n\t\t\t */\n\t\t    Object.defineProperty(Tone.BufferSource.prototype, 'loopStart', {\n\t\t        get: function () {\n\t\t            return this._source.loopStart;\n\t\t        },\n\t\t        set: function (loopStart) {\n\t\t            this._source.loopStart = this.toSeconds(loopStart);\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * If loop is true, the loop will end at this position.\n\t\t\t * @memberOf Tone.BufferSource#\n\t\t\t * @type {Time}\n\t\t\t * @name loopEnd\n\t\t\t */\n\t\t    Object.defineProperty(Tone.BufferSource.prototype, 'loopEnd', {\n\t\t        get: function () {\n\t\t            return this._source.loopEnd;\n\t\t        },\n\t\t        set: function (loopEnd) {\n\t\t            this._source.loopEnd = this.toSeconds(loopEnd);\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The audio buffer belonging to the player. \n\t\t\t * @memberOf Tone.BufferSource#\n\t\t\t * @type {AudioBuffer}\n\t\t\t * @name buffer\n\t\t\t */\n\t\t    Object.defineProperty(Tone.BufferSource.prototype, 'buffer', {\n\t\t        get: function () {\n\t\t            if (this._source) {\n\t\t                return this._source.buffer;\n\t\t            } else {\n\t\t                return null;\n\t\t            }\n\t\t        },\n\t\t        set: function (buffer) {\n\t\t            if (buffer instanceof Tone.Buffer) {\n\t\t                this._source.buffer = buffer.get();\n\t\t            } else {\n\t\t                this._source.buffer = buffer;\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * If the buffer should loop once it's over. \n\t\t\t * @memberOf Tone.BufferSource#\n\t\t\t * @type {boolean}\n\t\t\t * @name loop\n\t\t\t */\n\t\t    Object.defineProperty(Tone.BufferSource.prototype, 'loop', {\n\t\t        get: function () {\n\t\t            return this._source.loop;\n\t\t        },\n\t\t        set: function (loop) {\n\t\t            this._source.loop = loop;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Clean up.\n\t\t\t *  @return  {Tone.BufferSource}  this\n\t\t\t */\n\t\t    Tone.BufferSource.prototype.dispose = function () {\n\t\t        this.onended = null;\n\t\t        if (this._source) {\n\t\t            this._source.disconnect();\n\t\t            this._source = null;\n\t\t        }\n\t\t        if (this._gainNode) {\n\t\t            this._gainNode.dispose();\n\t\t            this._gainNode = null;\n\t\t        }\n\t\t        this._startTime = -1;\n\t\t        this.playbackRate = null;\n\t\t        this.output = null;\n\t\t        clearTimeout(this._onendedTimeout);\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.BufferSource;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  Tone.Noise is a noise generator. It uses looped noise buffers to save on performance.\n\t\t\t *          Tone.Noise supports the noise types: \"pink\", \"white\", and \"brown\". Read more about\n\t\t\t *          colors of noise on [Wikipedia](https://en.wikipedia.org/wiki/Colors_of_noise).\n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.Source}\n\t\t\t *  @param {string} type the noise type (white|pink|brown)\n\t\t\t *  @example\n\t\t\t * //initialize the noise and start\n\t\t\t * var noise = new Tone.Noise(\"pink\").start();\n\t\t\t * \n\t\t\t * //make an autofilter to shape the noise\n\t\t\t * var autoFilter = new Tone.AutoFilter({\n\t\t\t * \t\"frequency\" : \"8m\", \n\t\t\t * \t\"min\" : 800, \n\t\t\t * \t\"max\" : 15000\n\t\t\t * }).connect(Tone.Master);\n\t\t\t * \n\t\t\t * //connect the noise\n\t\t\t * noise.connect(autoFilter);\n\t\t\t * //start the autofilter LFO\n\t\t\t * autoFilter.start()\n\t\t\t */\n\t\t    Tone.Noise = function () {\n\t\t        var options = this.optionsObject(arguments, ['type'], Tone.Noise.defaults);\n\t\t        Tone.Source.call(this, options);\n\t\t        /**\n\t\t\t\t *  @private\n\t\t\t\t *  @type {AudioBufferSourceNode}\n\t\t\t\t */\n\t\t        this._source = null;\n\t\t        /**\n\t\t\t\t *  the buffer\n\t\t\t\t *  @private\n\t\t\t\t *  @type {AudioBuffer}\n\t\t\t\t */\n\t\t        this._type = options.type;\n\t\t        /**\n\t\t\t\t *  The playback rate of the noise. Affects\n\t\t\t\t *  the \"frequency\" of the noise.\n\t\t\t\t *  @type {Positive}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this._playbackRate = options.playbackRate;\n\t\t    };\n\t\t    Tone.extend(Tone.Noise, Tone.Source);\n\t\t    /**\n\t\t\t *  the default parameters\n\t\t\t *\n\t\t\t *  @static\n\t\t\t *  @const\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.Noise.defaults = {\n\t\t        'type': 'white',\n\t\t        'playbackRate': 1\n\t\t    };\n\t\t    /**\n\t\t\t * The type of the noise. Can be \"white\", \"brown\", or \"pink\". \n\t\t\t * @memberOf Tone.Noise#\n\t\t\t * @type {string}\n\t\t\t * @name type\n\t\t\t * @example\n\t\t\t * noise.type = \"white\";\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Noise.prototype, 'type', {\n\t\t        get: function () {\n\t\t            return this._type;\n\t\t        },\n\t\t        set: function (type) {\n\t\t            if (this._type !== type) {\n\t\t                if (type in _noiseBuffers) {\n\t\t                    this._type = type;\n\t\t                    //if it's playing, stop and restart it\n\t\t                    if (this.state === Tone.State.Started) {\n\t\t                        var now = this.now() + this.blockTime;\n\t\t                        this._stop(now);\n\t\t                        this._start(now);\n\t\t                    }\n\t\t                } else {\n\t\t                    throw new TypeError('Tone.Noise: invalid type: ' + type);\n\t\t                }\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  The playback rate of the noise. Affects\n\t\t\t *  the \"frequency\" of the noise.\n\t\t\t *  @type {Positive}\n\t\t\t *  @signal\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Noise.prototype, 'playbackRate', {\n\t\t        get: function () {\n\t\t            return this._playbackRate;\n\t\t        },\n\t\t        set: function (rate) {\n\t\t            this._playbackRate = rate;\n\t\t            if (this._source) {\n\t\t                this._source.playbackRate.value = rate;\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  internal start method\n\t\t\t *\n\t\t\t *  @param {Time} time\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Noise.prototype._start = function (time) {\n\t\t        var buffer = _noiseBuffers[this._type];\n\t\t        this._source = new Tone.BufferSource(buffer).connect(this.output);\n\t\t        this._source.loop = true;\n\t\t        this._source.playbackRate.value = this._playbackRate;\n\t\t        this._source.start(this.toSeconds(time), Math.random() * (buffer.duration - 0.001));\n\t\t    };\n\t\t    /**\n\t\t\t *  internal stop method\n\t\t\t *\n\t\t\t *  @param {Time} time\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Noise.prototype._stop = function (time) {\n\t\t        if (this._source) {\n\t\t            this._source.stop(this.toSeconds(time));\n\t\t            this._source = null;\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Clean up.\n\t\t\t *  @returns {Tone.Noise} this\n\t\t\t */\n\t\t    Tone.Noise.prototype.dispose = function () {\n\t\t        Tone.Source.prototype.dispose.call(this);\n\t\t        if (this._source !== null) {\n\t\t            this._source.disconnect();\n\t\t            this._source = null;\n\t\t        }\n\t\t        this._buffer = null;\n\t\t        return this;\n\t\t    };\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    // THE BUFFERS\n\t\t    ///////////////////////////////////////////////////////////////////////////\n\t\t    //Noise buffer stats\n\t\t    var bufferLength = 44100 * 5;\n\t\t    var channels = 2;\n\t\t    /**\n\t\t\t *\tthe noise arrays. only generated once on init\n\t\t\t *  @static\n\t\t\t *  @private\n\t\t\t *  @type {Array}\n\t\t\t *  borrowed heavily from https://github.com/zacharydenton/noise.js \n\t\t\t *  (c) 2013 Zach Denton (MIT)\n\t\t\t */\n\t\t    var _noiseArrays = {\n\t\t        'pink': function () {\n\t\t            var buffer = [];\n\t\t            for (var channelNum = 0; channelNum < channels; channelNum++) {\n\t\t                var channel = new Float32Array(bufferLength);\n\t\t                buffer[channelNum] = channel;\n\t\t                var b0, b1, b2, b3, b4, b5, b6;\n\t\t                b0 = b1 = b2 = b3 = b4 = b5 = b6 = 0;\n\t\t                for (var i = 0; i < bufferLength; i++) {\n\t\t                    var white = Math.random() * 2 - 1;\n\t\t                    b0 = 0.99886 * b0 + white * 0.0555179;\n\t\t                    b1 = 0.99332 * b1 + white * 0.0750759;\n\t\t                    b2 = 0.969 * b2 + white * 0.153852;\n\t\t                    b3 = 0.8665 * b3 + white * 0.3104856;\n\t\t                    b4 = 0.55 * b4 + white * 0.5329522;\n\t\t                    b5 = -0.7616 * b5 - white * 0.016898;\n\t\t                    channel[i] = b0 + b1 + b2 + b3 + b4 + b5 + b6 + white * 0.5362;\n\t\t                    channel[i] *= 0.11;\n\t\t                    // (roughly) compensate for gain\n\t\t                    b6 = white * 0.115926;\n\t\t                }\n\t\t            }\n\t\t            return buffer;\n\t\t        }(),\n\t\t        'brown': function () {\n\t\t            var buffer = [];\n\t\t            for (var channelNum = 0; channelNum < channels; channelNum++) {\n\t\t                var channel = new Float32Array(bufferLength);\n\t\t                buffer[channelNum] = channel;\n\t\t                var lastOut = 0;\n\t\t                for (var i = 0; i < bufferLength; i++) {\n\t\t                    var white = Math.random() * 2 - 1;\n\t\t                    channel[i] = (lastOut + 0.02 * white) / 1.02;\n\t\t                    lastOut = channel[i];\n\t\t                    channel[i] *= 3.5;    // (roughly) compensate for gain\n\t\t                }\n\t\t            }\n\t\t            return buffer;\n\t\t        }(),\n\t\t        'white': function () {\n\t\t            var buffer = [];\n\t\t            for (var channelNum = 0; channelNum < channels; channelNum++) {\n\t\t                var channel = new Float32Array(bufferLength);\n\t\t                buffer[channelNum] = channel;\n\t\t                for (var i = 0; i < bufferLength; i++) {\n\t\t                    channel[i] = Math.random() * 2 - 1;\n\t\t                }\n\t\t            }\n\t\t            return buffer;\n\t\t        }()\n\t\t    };\n\t\t    /**\n\t\t\t *\tstatic noise buffers\n\t\t\t *  @static\n\t\t\t *  @private\n\t\t\t *  @type {Tone.Buffer}\n\t\t\t */\n\t\t    var _noiseBuffers = {};\n\t\t    //create the Tone.Buffers\n\t\t    function createBuffers() {\n\t\t        for (var type in _noiseArrays) {\n\t\t            _noiseBuffers[type] = new Tone.Buffer().fromArray(_noiseArrays[type]);\n\t\t        }\n\t\t    }\n\t\t    createBuffers();\n\t\t    Tone.Context.on('init', createBuffers);\n\t\t    return Tone.Noise;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  Tone.NoiseSynth is composed of a noise generator (Tone.Noise), one filter (Tone.Filter), \n\t\t\t *          and two envelopes (Tone.Envelop). One envelope controls the amplitude\n\t\t\t *          of the noise and the other is controls the cutoff frequency of the filter. \n\t\t\t *          <img src=\"https://docs.google.com/drawings/d/1rqzuX9rBlhT50MRvD2TKml9bnZhcZmzXF1rf_o7vdnE/pub?w=918&h=242\">\n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.Instrument}\n\t\t\t *  @param {Object} [options] the options available for the synth \n\t\t\t *                          see defaults below\n\t\t\t * @example\n\t\t\t * var noiseSynth = new Tone.NoiseSynth().toMaster();\n\t\t\t * noiseSynth.triggerAttackRelease(\"8n\");\n\t\t\t */\n\t\t    Tone.NoiseSynth = function (options) {\n\t\t        //get the defaults\n\t\t        options = this.defaultArg(options, Tone.NoiseSynth.defaults);\n\t\t        Tone.Instrument.call(this, options);\n\t\t        /**\n\t\t\t\t *  The noise source.\n\t\t\t\t *  @type {Tone.Noise}\n\t\t\t\t *  @example\n\t\t\t\t * noiseSynth.set(\"noise.type\", \"brown\");\n\t\t\t\t */\n\t\t        this.noise = new Tone.Noise();\n\t\t        /**\n\t\t\t\t *  The amplitude envelope. \n\t\t\t\t *  @type {Tone.AmplitudeEnvelope}\n\t\t\t\t */\n\t\t        this.envelope = new Tone.AmplitudeEnvelope(options.envelope);\n\t\t        //connect the noise to the output\n\t\t        this.noise.chain(this.envelope, this.output);\n\t\t        //start the noise\n\t\t        this.noise.start();\n\t\t        this._readOnly([\n\t\t            'noise',\n\t\t            'envelope'\n\t\t        ]);\n\t\t    };\n\t\t    Tone.extend(Tone.NoiseSynth, Tone.Instrument);\n\t\t    /**\n\t\t\t *  @const\n\t\t\t *  @static\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.NoiseSynth.defaults = {\n\t\t        'noise': { 'type': 'white' },\n\t\t        'envelope': {\n\t\t            'attack': 0.005,\n\t\t            'decay': 0.1,\n\t\t            'sustain': 0\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Start the attack portion of the envelopes. Unlike other \n\t\t\t *  instruments, Tone.NoiseSynth doesn't have a note. \n\t\t\t *  @param {Time} [time=now] the time the attack should start\n\t\t\t *  @param {number} [velocity=1] the velocity of the note (0-1)\n\t\t\t *  @returns {Tone.NoiseSynth} this\n\t\t\t *  @example\n\t\t\t * noiseSynth.triggerAttack();\n\t\t\t */\n\t\t    Tone.NoiseSynth.prototype.triggerAttack = function (time, velocity) {\n\t\t        //the envelopes\n\t\t        this.envelope.triggerAttack(time, velocity);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Start the release portion of the envelopes.\n\t\t\t *  @param {Time} [time=now] the time the release should start\n\t\t\t *  @returns {Tone.NoiseSynth} this\n\t\t\t */\n\t\t    Tone.NoiseSynth.prototype.triggerRelease = function (time) {\n\t\t        this.envelope.triggerRelease(time);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Trigger the attack and then the release. \n\t\t\t *  @param  {Time} duration the duration of the note\n\t\t\t *  @param  {Time} [time=now]     the time of the attack\n\t\t\t *  @param  {number} [velocity=1] the velocity\n\t\t\t *  @returns {Tone.NoiseSynth} this\n\t\t\t */\n\t\t    Tone.NoiseSynth.prototype.triggerAttackRelease = function (duration, time, velocity) {\n\t\t        time = this.toSeconds(time);\n\t\t        duration = this.toSeconds(duration);\n\t\t        this.triggerAttack(time, velocity);\n\t\t        this.triggerRelease(time + duration);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Clean up. \n\t\t\t *  @returns {Tone.NoiseSynth} this\n\t\t\t */\n\t\t    Tone.NoiseSynth.prototype.dispose = function () {\n\t\t        Tone.Instrument.prototype.dispose.call(this);\n\t\t        this._writable([\n\t\t            'noise',\n\t\t            'envelope'\n\t\t        ]);\n\t\t        this.noise.dispose();\n\t\t        this.noise = null;\n\t\t        this.envelope.dispose();\n\t\t        this.envelope = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.NoiseSynth;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Karplus-String string synthesis. Often out of tune. \n\t\t\t *         Will change when the AudioWorkerNode is available across\n\t\t\t *         browsers. \n\t\t\t *  \n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.Instrument}\n\t\t\t *  @param {Object} [options] see the defaults\n\t\t\t *  @example\n\t\t\t * var plucky = new Tone.PluckSynth().toMaster();\n\t\t\t * plucky.triggerAttack(\"C4\");\n\t\t\t */\n\t\t    Tone.PluckSynth = function (options) {\n\t\t        options = this.defaultArg(options, Tone.PluckSynth.defaults);\n\t\t        Tone.Instrument.call(this, options);\n\t\t        /**\n\t\t\t\t *  @type {Tone.Noise}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._noise = new Tone.Noise('pink');\n\t\t        /**\n\t\t\t\t *  The amount of noise at the attack. \n\t\t\t\t *  Nominal range of [0.1, 20]\n\t\t\t\t *  @type {number}\n\t\t\t\t */\n\t\t        this.attackNoise = options.attackNoise;\n\t\t        /**\n\t\t\t\t *  the LFCF\n\t\t\t\t *  @type {Tone.LowpassCombFilter}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._lfcf = new Tone.LowpassCombFilter({\n\t\t            'resonance': options.resonance,\n\t\t            'dampening': options.dampening\n\t\t        });\n\t\t        /**\n\t\t\t\t *  The resonance control. \n\t\t\t\t *  @type {NormalRange}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.resonance = this._lfcf.resonance;\n\t\t        /**\n\t\t\t\t *  The dampening control. i.e. the lowpass filter frequency of the comb filter\n\t\t\t\t *  @type {Frequency}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.dampening = this._lfcf.dampening;\n\t\t        //connections\n\t\t        this._noise.connect(this._lfcf);\n\t\t        this._lfcf.connect(this.output);\n\t\t        this._readOnly([\n\t\t            'resonance',\n\t\t            'dampening'\n\t\t        ]);\n\t\t    };\n\t\t    Tone.extend(Tone.PluckSynth, Tone.Instrument);\n\t\t    /**\n\t\t\t *  @static\n\t\t\t *  @const\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.PluckSynth.defaults = {\n\t\t        'attackNoise': 1,\n\t\t        'dampening': 4000,\n\t\t        'resonance': 0.9\n\t\t    };\n\t\t    /**\n\t\t\t *  Trigger the note. \n\t\t\t *  @param {Frequency} note The note to trigger.\n\t\t\t *  @param {Time} [time=now] When the note should be triggered.\n\t\t\t *  @returns {Tone.PluckSynth} this\n\t\t\t */\n\t\t    Tone.PluckSynth.prototype.triggerAttack = function (note, time) {\n\t\t        note = this.toFrequency(note);\n\t\t        time = this.toSeconds(time);\n\t\t        var delayAmount = 1 / note;\n\t\t        this._lfcf.delayTime.setValueAtTime(delayAmount, time);\n\t\t        this._noise.start(time);\n\t\t        this._noise.stop(time + delayAmount * this.attackNoise);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Clean up. \n\t\t\t *  @returns {Tone.PluckSynth} this\n\t\t\t */\n\t\t    Tone.PluckSynth.prototype.dispose = function () {\n\t\t        Tone.Instrument.prototype.dispose.call(this);\n\t\t        this._noise.dispose();\n\t\t        this._lfcf.dispose();\n\t\t        this._noise = null;\n\t\t        this._lfcf = null;\n\t\t        this._writable([\n\t\t            'resonance',\n\t\t            'dampening'\n\t\t        ]);\n\t\t        this.dampening = null;\n\t\t        this.resonance = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.PluckSynth;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  Tone.PolySynth handles voice creation and allocation for any\n\t\t\t *          instruments passed in as the second paramter. PolySynth is \n\t\t\t *          not a synthesizer by itself, it merely manages voices of \n\t\t\t *          one of the other types of synths, allowing any of the \n\t\t\t *          monophonic synthesizers to be polyphonic. \n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.Instrument}\n\t\t\t *  @param {number|Object} [polyphony=4] The number of voices to create\n\t\t\t *  @param {function} [voice=Tone.Synth] The constructor of the voices\n\t\t\t *                                            uses Tone.Synth by default. \n\t\t\t *  @example\n\t\t\t * //a polysynth composed of 6 Voices of Synth\n\t\t\t * var synth = new Tone.PolySynth(6, Tone.Synth).toMaster();\n\t\t\t * //set the attributes using the set interface\n\t\t\t * synth.set(\"detune\", -1200);\n\t\t\t * //play a chord\n\t\t\t * synth.triggerAttackRelease([\"C4\", \"E4\", \"A4\"], \"4n\");\n\t\t\t */\n\t\t    Tone.PolySynth = function () {\n\t\t        Tone.Instrument.call(this);\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'polyphony',\n\t\t            'voice'\n\t\t        ], Tone.PolySynth.defaults);\n\t\t        options = this.defaultArg(options, Tone.Instrument.defaults);\n\t\t        //max polyphony\n\t\t        options.polyphony = Math.min(Tone.PolySynth.MAX_POLYPHONY, options.polyphony);\n\t\t        /**\n\t\t\t\t *  the array of voices\n\t\t\t\t *  @type {Array}\n\t\t\t\t */\n\t\t        this.voices = new Array(options.polyphony);\n\t\t        /**\n\t\t\t\t *  The queue of voices with data about last trigger\n\t\t\t\t *  and the triggered note\n\t\t\t\t *  @private\n\t\t\t\t *  @type {Array}\n\t\t\t\t */\n\t\t        this._triggers = new Array(options.polyphony);\n\t\t        /**\n\t\t\t\t *  The detune in cents\n\t\t\t\t *  @type {Cents}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t\t        this.detune = new Tone.Signal(options.detune, Tone.Type.Cents);\n\t\t        this._readOnly('detune');\n\t\t        //create the voices\n\t\t        for (var i = 0; i < options.polyphony; i++) {\n\t\t            var v = new options.voice(arguments[2], arguments[3]);\n\t\t            this.voices[i] = v;\n\t\t            v.connect(this.output);\n\t\t            if (v.hasOwnProperty('detune')) {\n\t\t                this.detune.connect(v.detune);\n\t\t            }\n\t\t            this._triggers[i] = {\n\t\t                release: -1,\n\t\t                note: null,\n\t\t                voice: v\n\t\t            };\n\t\t        }\n\t\t        //set the volume initially\n\t\t        this.volume.value = options.volume;\n\t\t    };\n\t\t    Tone.extend(Tone.PolySynth, Tone.Instrument);\n\t\t    /**\n\t\t\t *  the defaults\n\t\t\t *  @const\n\t\t\t *  @static\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.PolySynth.defaults = {\n\t\t        'polyphony': 4,\n\t\t        'volume': 0,\n\t\t        'detune': 0,\n\t\t        'voice': Tone.Synth\n\t\t    };\n\t\t    /**\n\t\t\t *  Trigger the attack portion of the note\n\t\t\t *  @param  {Frequency|Array} notes The notes to play. Accepts a single\n\t\t\t *                                  Frequency or an array of frequencies.\n\t\t\t *  @param  {Time} [time=now]  The start time of the note.\n\t\t\t *  @param {number} [velocity=1] The velocity of the note.\n\t\t\t *  @returns {Tone.PolySynth} this\n\t\t\t *  @example\n\t\t\t * //trigger a chord immediately with a velocity of 0.2\n\t\t\t * poly.triggerAttack([\"Ab3\", \"C4\", \"F5\"], undefined, 0.2);\n\t\t\t */\n\t\t    Tone.PolySynth.prototype.triggerAttack = function (notes, time, velocity) {\n\t\t        if (!Array.isArray(notes)) {\n\t\t            notes = [notes];\n\t\t        }\n\t\t        time = this.toSeconds(time);\n\t\t        for (var i = 0; i < notes.length; i++) {\n\t\t            var val = notes[i];\n\t\t            //trigger the oldest voice\n\t\t            var oldest = this._triggers[0];\n\t\t            var oldestIndex = 0;\n\t\t            for (var j = 1; j < this._triggers.length; j++) {\n\t\t                if (this._triggers[j].release < oldest.release) {\n\t\t                    oldest = this._triggers[j];\n\t\t                    oldestIndex = j;\n\t\t                }\n\t\t            }\n\t\t            oldest.release = Infinity;\n\t\t            oldest.note = JSON.stringify(val);\n\t\t            oldest.voice.triggerAttack(val, time, velocity);\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Trigger the attack and release after the specified duration\n\t\t\t *  \n\t\t\t *  @param  {Frequency|Array} notes The notes to play. Accepts a single\n\t\t\t *                                  Frequency or an array of frequencies.\n\t\t\t *  @param  {Time} duration the duration of the note\n\t\t\t *  @param  {Time} [time=now]     if no time is given, defaults to now\n\t\t\t *  @param  {number} [velocity=1] the velocity of the attack (0-1)\n\t\t\t *  @returns {Tone.PolySynth} this\n\t\t\t *  @example\n\t\t\t * //trigger a chord for a duration of a half note \n\t\t\t * poly.triggerAttackRelease([\"Eb3\", \"G4\", \"C5\"], \"2n\");\n\t\t\t *  @example\n\t\t\t * //can pass in an array of durations as well\n\t\t\t * poly.triggerAttackRelease([\"Eb3\", \"G4\", \"C5\"], [\"2n\", \"4n\", \"4n\"]);\n\t\t\t */\n\t\t    Tone.PolySynth.prototype.triggerAttackRelease = function (notes, duration, time, velocity) {\n\t\t        time = this.toSeconds(time);\n\t\t        this.triggerAttack(notes, time, velocity);\n\t\t        if (this.isArray(duration) && this.isArray(notes)) {\n\t\t            for (var i = 0; i < notes.length; i++) {\n\t\t                var d = duration[Math.min(i, duration.length - 1)];\n\t\t                this.triggerRelease(notes[i], time + this.toSeconds(d));\n\t\t            }\n\t\t        } else {\n\t\t            this.triggerRelease(notes, time + this.toSeconds(duration));\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Trigger the release of the note. Unlike monophonic instruments, \n\t\t\t *  a note (or array of notes) needs to be passed in as the first argument.\n\t\t\t *  @param  {Frequency|Array} notes The notes to play. Accepts a single\n\t\t\t *                                  Frequency or an array of frequencies.\n\t\t\t *  @param  {Time} [time=now]  When the release will be triggered. \n\t\t\t *  @returns {Tone.PolySynth} this\n\t\t\t *  @example\n\t\t\t * poly.triggerRelease([\"Ab3\", \"C4\", \"F5\"], \"+2n\");\n\t\t\t */\n\t\t    Tone.PolySynth.prototype.triggerRelease = function (notes, time) {\n\t\t        if (!Array.isArray(notes)) {\n\t\t            notes = [notes];\n\t\t        }\n\t\t        time = this.toSeconds(time);\n\t\t        for (var i = 0; i < notes.length; i++) {\n\t\t            //get the voice\n\t\t            var stringified = JSON.stringify(notes[i]);\n\t\t            for (var v = 0; v < this._triggers.length; v++) {\n\t\t                var desc = this._triggers[v];\n\t\t                if (desc.note === stringified && desc.release > time) {\n\t\t                    desc.voice.triggerRelease(time);\n\t\t                    desc.release = time;\n\t\t                }\n\t\t            }\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Set a member/attribute of the voices. \n\t\t\t *  @param {Object|string} params\n\t\t\t *  @param {number=} value\n\t\t\t *  @param {Time=} rampTime\n\t\t\t *  @returns {Tone.PolySynth} this\n\t\t\t *  @example\n\t\t\t * poly.set({\n\t\t\t * \t\"filter\" : {\n\t\t\t * \t\t\"type\" : \"highpass\"\n\t\t\t * \t},\n\t\t\t * \t\"envelope\" : {\n\t\t\t * \t\t\"attack\" : 0.25\n\t\t\t * \t}\n\t\t\t * });\n\t\t\t */\n\t\t    Tone.PolySynth.prototype.set = function (params, value, rampTime) {\n\t\t        for (var i = 0; i < this.voices.length; i++) {\n\t\t            this.voices[i].set(params, value, rampTime);\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Get the synth's attributes. Given no arguments get\n\t\t\t *  will return all available object properties and their corresponding\n\t\t\t *  values. Pass in a single attribute to retrieve or an array\n\t\t\t *  of attributes. The attribute strings can also include a \".\"\n\t\t\t *  to access deeper properties.\n\t\t\t *  @param {Array=} params the parameters to get, otherwise will return \n\t\t\t *  \t\t\t\t\t   all available.\n\t\t\t */\n\t\t    Tone.PolySynth.prototype.get = function (params) {\n\t\t        return this.voices[0].get(params);\n\t\t    };\n\t\t    /**\n\t\t\t *  Trigger the release portion of all the currently active voices.\n\t\t\t *  @param {Time} [time=now] When the notes should be released.\n\t\t\t *  @return {Tone.PolySynth} this\n\t\t\t */\n\t\t    Tone.PolySynth.prototype.releaseAll = function (time) {\n\t\t        time = this.toSeconds(time);\n\t\t        for (var i = 0; i < this._triggers.length; i++) {\n\t\t            var desc = this._triggers[i];\n\t\t            if (desc.release > time) {\n\t\t                desc.release = time;\n\t\t                desc.voice.triggerRelease(time);\n\t\t            }\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Clean up.\n\t\t\t *  @returns {Tone.PolySynth} this\n\t\t\t */\n\t\t    Tone.PolySynth.prototype.dispose = function () {\n\t\t        Tone.Instrument.prototype.dispose.call(this);\n\t\t        for (var i = 0; i < this.voices.length; i++) {\n\t\t            this.voices[i].dispose();\n\t\t            this.voices[i] = null;\n\t\t        }\n\t\t        this._writable('detune');\n\t\t        this.detune.dispose();\n\t\t        this.detune = null;\n\t\t        this.voices = null;\n\t\t        this._triggers = null;\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  The maximum number of notes that can be allocated \n\t\t\t *  to a polysynth. \n\t\t\t *  @type  {Number}\n\t\t\t *  @static\n\t\t\t */\n\t\t    Tone.PolySynth.MAX_POLYPHONY = 20;\n\t\t    return Tone.PolySynth;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  Tone.Player is an audio file player with start, loop, and stop functions.\n\t\t\t *  \n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.Source} \n\t\t\t *  @param {string|AudioBuffer} url Either the AudioBuffer or the url from\n\t\t\t *                                  which to load the AudioBuffer\n\t\t\t *  @param {function=} onload The function to invoke when the buffer is loaded. \n\t\t\t *                            Recommended to use Tone.Buffer.on('load') instead.\n\t\t\t *  @example\n\t\t\t * var player = new Tone.Player(\"./path/to/sample.mp3\").toMaster();\n\t\t\t * //play as soon as the buffer is loaded\n\t\t\t * player.autostart = true;\n\t\t\t */\n\t\t    Tone.Player = function (url) {\n\t\t        var options;\n\t\t        if (url instanceof Tone.Buffer) {\n\t\t            url = url.get();\n\t\t            options = Tone.Player.defaults;\n\t\t        } else {\n\t\t            options = this.optionsObject(arguments, [\n\t\t                'url',\n\t\t                'onload'\n\t\t            ], Tone.Player.defaults);\n\t\t        }\n\t\t        Tone.Source.call(this, options);\n\t\t        /**\n\t\t\t\t *  @private\n\t\t\t\t *  @type {AudioBufferSourceNode}\n\t\t\t\t */\n\t\t        this._source = null;\n\t\t        /**\n\t\t\t\t *  If the file should play as soon\n\t\t\t\t *  as the buffer is loaded. \n\t\t\t\t *  @type {boolean}\n\t\t\t\t *  @example\n\t\t\t\t * //will play as soon as it's loaded\n\t\t\t\t * var player = new Tone.Player({\n\t\t\t\t * \t\"url\" : \"./path/to/sample.mp3\",\n\t\t\t\t * \t\"autostart\" : true,\n\t\t\t\t * }).toMaster();\n\t\t\t\t */\n\t\t        this.autostart = options.autostart;\n\t\t        /**\n\t\t\t\t *  the buffer\n\t\t\t\t *  @private\n\t\t\t\t *  @type {Tone.Buffer}\n\t\t\t\t */\n\t\t        this._buffer = new Tone.Buffer({\n\t\t            'url': options.url,\n\t\t            'onload': this._onload.bind(this, options.onload),\n\t\t            'reverse': options.reverse\n\t\t        });\n\t\t        if (url instanceof AudioBuffer) {\n\t\t            this._buffer.set(url);\n\t\t        }\n\t\t        /**\n\t\t\t\t *  if the buffer should loop once it's over\n\t\t\t\t *  @type {boolean}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._loop = options.loop;\n\t\t        /**\n\t\t\t\t *  if 'loop' is true, the loop will start at this position\n\t\t\t\t *  @type {Time}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._loopStart = options.loopStart;\n\t\t        /**\n\t\t\t\t *  if 'loop' is true, the loop will end at this position\n\t\t\t\t *  @type {Time}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._loopEnd = options.loopEnd;\n\t\t        /**\n\t\t\t\t *  the playback rate\n\t\t\t\t *  @private\n\t\t\t\t *  @type {number}\n\t\t\t\t */\n\t\t        this._playbackRate = options.playbackRate;\n\t\t        /**\n\t\t\t\t *  Enabling retrigger will allow a player to be restarted\n\t\t\t\t *  before the the previous 'start' is done playing. Otherwise, \n\t\t\t\t *  successive calls to Tone.Player.start will only start\n\t\t\t\t *  the sample if it had played all the way through. \n\t\t\t\t *  @type {boolean}\n\t\t\t\t */\n\t\t        this.retrigger = options.retrigger;\n\t\t    };\n\t\t    Tone.extend(Tone.Player, Tone.Source);\n\t\t    /**\n\t\t\t *  the default parameters\n\t\t\t *  @static\n\t\t\t *  @const\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.Player.defaults = {\n\t\t        'onload': Tone.noOp,\n\t\t        'playbackRate': 1,\n\t\t        'loop': false,\n\t\t        'autostart': false,\n\t\t        'loopStart': 0,\n\t\t        'loopEnd': 0,\n\t\t        'retrigger': false,\n\t\t        'reverse': false\n\t\t    };\n\t\t    /**\n\t\t\t *  Load the audio file as an audio buffer.\n\t\t\t *  Decodes the audio asynchronously and invokes\n\t\t\t *  the callback once the audio buffer loads. \n\t\t\t *  Note: this does not need to be called if a url\n\t\t\t *  was passed in to the constructor. Only use this\n\t\t\t *  if you want to manually load a new url. \n\t\t\t * @param {string} url The url of the buffer to load.\n\t\t\t *                     Filetype support depends on the\n\t\t\t *                     browser.\n\t\t\t *  @param  {function=} callback The function to invoke once\n\t\t\t *                               the sample is loaded.\n\t\t\t *  @returns {Promise}\n\t\t\t */\n\t\t    Tone.Player.prototype.load = function (url, callback) {\n\t\t        return this._buffer.load(url, this._onload.bind(this, callback));\n\t\t    };\n\t\t    /**\n\t\t\t * Internal callback when the buffer is loaded.\n\t\t\t * @private\n\t\t\t */\n\t\t    Tone.Player.prototype._onload = function (callback) {\n\t\t        callback = this.defaultArg(callback, Tone.noOp);\n\t\t        callback(this);\n\t\t        if (this.autostart) {\n\t\t            this.start();\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Play the buffer at the given startTime. Optionally add an offset\n\t\t\t *  and/or duration which will play the buffer from a position\n\t\t\t *  within the buffer for the given duration. \n\t\t\t *  \n\t\t\t *  @param  {Time} [startTime=now] When the player should start.\n\t\t\t *  @param  {Time} [offset=0] The offset from the beginning of the sample\n\t\t\t *                                 to start at. \n\t\t\t *  @param  {Time=} duration How long the sample should play. If no duration\n\t\t\t *                                is given, it will default to the full length \n\t\t\t *                                of the sample (minus any offset)\n\t\t\t *  @returns {Tone.Player} this\n\t\t\t *  @memberOf Tone.Player#\n\t\t\t *  @method start\n\t\t\t *  @name start\n\t\t\t */\n\t\t    /**\n\t\t\t *  Internal start method\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Player.prototype._start = function (startTime, offset, duration) {\n\t\t        if (this._buffer.loaded) {\n\t\t            //if it's a loop the default offset is the loopstart point\n\t\t            if (this._loop) {\n\t\t                offset = this.defaultArg(offset, this._loopStart);\n\t\t            } else {\n\t\t                //otherwise the default offset is 0\n\t\t                offset = this.defaultArg(offset, 0);\n\t\t            }\n\t\t            offset = this.toSeconds(offset);\n\t\t            //make sure it has a positive duration\n\t\t            duration = this.defaultArg(duration, Math.max(this._buffer.duration - offset, 0));\n\t\t            duration = this.toSeconds(duration);\n\t\t            //the values in seconds\n\t\t            startTime = this.toSeconds(startTime);\n\t\t            //make the source\n\t\t            this._source = this.context.createBufferSource();\n\t\t            this._source.buffer = this._buffer.get();\n\t\t            //set the looping properties\n\t\t            if (this._loop) {\n\t\t                this._source.loop = this._loop;\n\t\t                this._source.loopStart = this.toSeconds(this._loopStart);\n\t\t                this._source.loopEnd = this.toSeconds(this._loopEnd);\n\t\t            } else if (!this._synced) {\n\t\t                //if it's not looping, set the state change at the end of the sample\n\t\t                this._state.setStateAtTime(Tone.State.Stopped, startTime + duration);\n\t\t            }\n\t\t            //and other properties\n\t\t            this._source.playbackRate.value = this._playbackRate;\n\t\t            this._source.connect(this.output);\n\t\t            //start it\n\t\t            if (this._loop) {\n\t\t                //modify the offset if it's greater than the loop time\n\t\t                var loopEnd = this._source.loopEnd || this._buffer.duration;\n\t\t                var loopStart = this._source.loopStart;\n\t\t                var loopDuration = loopEnd - loopStart;\n\t\t                if (offset > loopEnd) {\n\t\t                    //move the offset back\n\t\t                    while (offset > loopEnd) {\n\t\t                        offset -= loopDuration;\n\t\t                    }\n\t\t                }\n\t\t                this._source.start(startTime, offset);\n\t\t            } else {\n\t\t                this._source.start(startTime, offset, duration);\n\t\t            }\n\t\t        } else {\n\t\t            throw Error('Tone.Player: tried to start Player before the buffer was loaded');\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Stop playback.\n\t\t\t *  @private\n\t\t\t *  @param  {Time} [time=now]\n\t\t\t *  @returns {Tone.Player} this\n\t\t\t */\n\t\t    Tone.Player.prototype._stop = function (time) {\n\t\t        if (this._source) {\n\t\t            this._source.stop(this.toSeconds(time));\n\t\t            this._source = null;\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Seek to a specific time in the player's buffer. If the \n\t\t\t *  source is no longer playing at that time, it will stop.\n\t\t\t *  If you seek to a time that \n\t\t\t *  @param {Time} offset The time to seek to.\n\t\t\t *  @param {Time=} time The time for the seek event to occur.\n\t\t\t *  @return {Tone.Player} this\n\t\t\t *  @example\n\t\t\t * source.start(0.2);\n\t\t\t * source.stop(0.4);\n\t\t\t */\n\t\t    Tone.Player.prototype.seek = function (offset, time) {\n\t\t        time = this.toSeconds(time);\n\t\t        if (this._state.getValueAtTime(time) === Tone.State.Started) {\n\t\t            offset = this.toSeconds(offset);\n\t\t            // if it's currently playing, stop it\n\t\t            this._stop(time);\n\t\t            //restart it at the given time\n\t\t            this._start(time, offset);\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Set the loop start and end. Will only loop if loop is \n\t\t\t *  set to true. \n\t\t\t *  @param {Time} loopStart The loop end time\n\t\t\t *  @param {Time} loopEnd The loop end time\n\t\t\t *  @returns {Tone.Player} this\n\t\t\t *  @example\n\t\t\t * //loop 0.1 seconds of the file. \n\t\t\t * player.setLoopPoints(0.2, 0.3);\n\t\t\t * player.loop = true;\n\t\t\t */\n\t\t    Tone.Player.prototype.setLoopPoints = function (loopStart, loopEnd) {\n\t\t        this.loopStart = loopStart;\n\t\t        this.loopEnd = loopEnd;\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t * If loop is true, the loop will start at this position. \n\t\t\t * @memberOf Tone.Player#\n\t\t\t * @type {Time}\n\t\t\t * @name loopStart\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Player.prototype, 'loopStart', {\n\t\t        get: function () {\n\t\t            return this._loopStart;\n\t\t        },\n\t\t        set: function (loopStart) {\n\t\t            this._loopStart = loopStart;\n\t\t            if (this._source) {\n\t\t                this._source.loopStart = this.toSeconds(loopStart);\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * If loop is true, the loop will end at this position.\n\t\t\t * @memberOf Tone.Player#\n\t\t\t * @type {Time}\n\t\t\t * @name loopEnd\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Player.prototype, 'loopEnd', {\n\t\t        get: function () {\n\t\t            return this._loopEnd;\n\t\t        },\n\t\t        set: function (loopEnd) {\n\t\t            this._loopEnd = loopEnd;\n\t\t            if (this._source) {\n\t\t                this._source.loopEnd = this.toSeconds(loopEnd);\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The audio buffer belonging to the player. \n\t\t\t * @memberOf Tone.Player#\n\t\t\t * @type {Tone.Buffer}\n\t\t\t * @name buffer\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Player.prototype, 'buffer', {\n\t\t        get: function () {\n\t\t            return this._buffer;\n\t\t        },\n\t\t        set: function (buffer) {\n\t\t            this._buffer.set(buffer);\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * If the buffer should loop once it's over. \n\t\t\t * @memberOf Tone.Player#\n\t\t\t * @type {boolean}\n\t\t\t * @name loop\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Player.prototype, 'loop', {\n\t\t        get: function () {\n\t\t            return this._loop;\n\t\t        },\n\t\t        set: function (loop) {\n\t\t            this._loop = loop;\n\t\t            if (this._source) {\n\t\t                this._source.loop = loop;\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The playback speed. 1 is normal speed. This is not a signal because\n\t\t\t * Safari and iOS currently don't support playbackRate as a signal.\n\t\t\t * @memberOf Tone.Player#\n\t\t\t * @type {number}\n\t\t\t * @name playbackRate\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Player.prototype, 'playbackRate', {\n\t\t        get: function () {\n\t\t            return this._playbackRate;\n\t\t        },\n\t\t        set: function (rate) {\n\t\t            this._playbackRate = rate;\n\t\t            if (this._source) {\n\t\t                this._source.playbackRate.value = rate;\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The direction the buffer should play in\n\t\t\t * @memberOf Tone.Player#\n\t\t\t * @type {boolean}\n\t\t\t * @name reverse\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Player.prototype, 'reverse', {\n\t\t        get: function () {\n\t\t            return this._buffer.reverse;\n\t\t        },\n\t\t        set: function (rev) {\n\t\t            this._buffer.reverse = rev;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Dispose and disconnect.\n\t\t\t *  @return {Tone.Player} this\n\t\t\t */\n\t\t    Tone.Player.prototype.dispose = function () {\n\t\t        Tone.Source.prototype.dispose.call(this);\n\t\t        if (this._source !== null) {\n\t\t            this._source.disconnect();\n\t\t            this._source = null;\n\t\t        }\n\t\t        this._buffer.dispose();\n\t\t        this._buffer = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Player;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Sampler wraps Tone.Player in an AmplitudeEnvelope.\n\t\t\t *\n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone.Instrument}\n\t\t\t *  @param {String} url the url of the audio file\n\t\t\t *  @param {Function=} onload The callback to invoke when the sample is loaded.\n\t\t\t *  @example\n\t\t\t * var sampler = new Sampler(\"./audio/casio/A1.mp3\", function(){\n\t\t\t * \t//repitch the sample down a half step\n\t\t\t * \tsampler.triggerAttack(-1);\n\t\t\t * }).toMaster();\n\t\t\t */\n\t\t    Tone.Sampler = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'url',\n\t\t            'onload'\n\t\t        ], Tone.Sampler.defaults);\n\t\t        Tone.Instrument.call(this, options);\n\t\t        /**\n\t\t\t\t *  The sample player.\n\t\t\t\t *  @type {Tone.Player}\n\t\t\t\t */\n\t\t        this.player = new Tone.Player(options.url, options.onload);\n\t\t        this.player.retrigger = true;\n\t\t        /**\n\t\t\t\t *  The amplitude envelope. \n\t\t\t\t *  @type {Tone.AmplitudeEnvelope}\n\t\t\t\t */\n\t\t        this.envelope = new Tone.AmplitudeEnvelope(options.envelope);\n\t\t        this.player.chain(this.envelope, this.output);\n\t\t        this._readOnly([\n\t\t            'player',\n\t\t            'envelope'\n\t\t        ]);\n\t\t        this.loop = options.loop;\n\t\t        this.reverse = options.reverse;\n\t\t    };\n\t\t    Tone.extend(Tone.Sampler, Tone.Instrument);\n\t\t    /**\n\t\t\t *  the default parameters\n\t\t\t *  @static\n\t\t\t */\n\t\t    Tone.Sampler.defaults = {\n\t\t        'onload': Tone.noOp,\n\t\t        'loop': false,\n\t\t        'reverse': false,\n\t\t        'envelope': {\n\t\t            'attack': 0.001,\n\t\t            'decay': 0,\n\t\t            'sustain': 1,\n\t\t            'release': 0.1\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Trigger the start of the sample. \n\t\t\t *  @param {Interval} [pitch=0] The amount the sample should\n\t\t\t *                              be repitched. \n\t\t\t *  @param {Time} [time=now] The time when the sample should start\n\t\t\t *  @param {NormalRange} [velocity=1] The velocity of the note\n\t\t\t *  @returns {Tone.Sampler} this\n\t\t\t *  @example\n\t\t\t * sampler.triggerAttack(0, \"+0.1\", 0.5);\n\t\t\t */\n\t\t    Tone.Sampler.prototype.triggerAttack = function (pitch, time, velocity) {\n\t\t        time = this.toSeconds(time);\n\t\t        pitch = this.defaultArg(pitch, 0);\n\t\t        this.player.playbackRate = this.intervalToFrequencyRatio(pitch);\n\t\t        this.player.start(time);\n\t\t        this.envelope.triggerAttack(time, velocity);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Start the release portion of the sample. Will stop the sample once the \n\t\t\t *  envelope has fully released. \n\t\t\t *  \n\t\t\t *  @param {Time} [time=now] The time when the note should release\n\t\t\t *  @returns {Tone.Sampler} this\n\t\t\t *  @example\n\t\t\t * sampler.triggerRelease();\n\t\t\t */\n\t\t    Tone.Sampler.prototype.triggerRelease = function (time) {\n\t\t        time = this.toSeconds(time);\n\t\t        this.envelope.triggerRelease(time);\n\t\t        this.player.stop(this.toSeconds(this.envelope.release) + time);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Trigger the attack and then the release after the duration. \n\t\t\t *  @param  {Interval} interval     The interval in half-steps that the\n\t\t\t *                                  sample should be pitch shifted.\n\t\t\t *  @param  {Time} duration How long the note should be held for before\n\t\t\t *                          triggering the release.\n\t\t\t *  @param {Time} [time=now]  When the note should be triggered.\n\t\t\t *  @param  {NormalRange} [velocity=1] The velocity the note should be triggered at.\n\t\t\t *  @returns {Tone.Sampler} this\n\t\t\t *  @example\n\t\t\t * //trigger the unpitched note for the duration of an 8th note\n\t\t\t * synth.triggerAttackRelease(0, \"8n\");\n\t\t\t *  @memberOf Tone.Sampler#\n\t\t\t *  @name triggerAttackRelease\n\t\t\t *  @method triggerAttackRelease\n\t\t\t */\n\t\t    /**\n\t\t\t * If the output sample should loop or not.\n\t\t\t * @memberOf Tone.Sampler#\n\t\t\t * @type {number|string}\n\t\t\t * @name loop\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Sampler.prototype, 'loop', {\n\t\t        get: function () {\n\t\t            return this.player.loop;\n\t\t        },\n\t\t        set: function (loop) {\n\t\t            this.player.loop = loop;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The direction the buffer should play in\n\t\t\t * @memberOf Tone.Sampler#\n\t\t\t * @type {boolean}\n\t\t\t * @name reverse\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Sampler.prototype, 'reverse', {\n\t\t        get: function () {\n\t\t            return this.player.reverse;\n\t\t        },\n\t\t        set: function (rev) {\n\t\t            this.player.reverse = rev;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The buffer to play.\n\t\t\t * @memberOf Tone.Sampler#\n\t\t\t * @type {Tone.Buffer}\n\t\t\t * @name buffer\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Sampler.prototype, 'buffer', {\n\t\t        get: function () {\n\t\t            return this.player.buffer;\n\t\t        },\n\t\t        set: function (buff) {\n\t\t            this.player.buffer = buff;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Clean up.\n\t\t\t *  @returns {Tone.Sampler} this\n\t\t\t */\n\t\t    Tone.Sampler.prototype.dispose = function () {\n\t\t        Tone.Instrument.prototype.dispose.call(this);\n\t\t        this._writable([\n\t\t            'player',\n\t\t            'envelope'\n\t\t        ]);\n\t\t        this.player.dispose();\n\t\t        this.player = null;\n\t\t        this.envelope.dispose();\n\t\t        this.envelope = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Sampler;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Maps a NormalRange [0, 1] to an AudioRange [-1, 1]. \n\t\t\t *         See also Tone.AudioToGain. \n\t\t\t *\n\t\t\t *  @extends {Tone.SignalBase}\n\t\t\t *  @constructor\n\t\t\t *  @example\n\t\t\t * var g2a = new Tone.GainToAudio();\n\t\t\t */\n\t\t    Tone.GainToAudio = function () {\n\t\t        /**\n\t\t\t\t *  @type {WaveShaperNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._norm = this.input = this.output = new Tone.WaveShaper(function (x) {\n\t\t            return Math.abs(x) * 2 - 1;\n\t\t        });\n\t\t    };\n\t\t    Tone.extend(Tone.GainToAudio, Tone.SignalBase);\n\t\t    /**\n\t\t\t *  clean up\n\t\t\t *  @returns {Tone.GainToAudio} this\n\t\t\t */\n\t\t    Tone.GainToAudio.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._norm.dispose();\n\t\t        this._norm = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.GainToAudio;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class Normalize takes an input min and max and maps it linearly to NormalRange [0,1]\n\t\t\t *\n\t\t\t *  @extends {Tone.SignalBase}\n\t\t\t *  @constructor\n\t\t\t *  @param {number} inputMin the min input value\n\t\t\t *  @param {number} inputMax the max input value\n\t\t\t *  @example\n\t\t\t * var norm = new Tone.Normalize(2, 4);\n\t\t\t * var sig = new Tone.Signal(3).connect(norm);\n\t\t\t * //output of norm is 0.5. \n\t\t\t */\n\t\t    Tone.Normalize = function (inputMin, inputMax) {\n\t\t        /**\n\t\t\t\t *  the min input value\n\t\t\t\t *  @type {number}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._inputMin = this.defaultArg(inputMin, 0);\n\t\t        /**\n\t\t\t\t *  the max input value\n\t\t\t\t *  @type {number}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._inputMax = this.defaultArg(inputMax, 1);\n\t\t        /**\n\t\t\t\t *  subtract the min from the input\n\t\t\t\t *  @type {Tone.Add}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._sub = this.input = new Tone.Add(0);\n\t\t        /**\n\t\t\t\t *  divide by the difference between the input and output\n\t\t\t\t *  @type {Tone.Multiply}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._div = this.output = new Tone.Multiply(1);\n\t\t        this._sub.connect(this._div);\n\t\t        this._setRange();\n\t\t    };\n\t\t    Tone.extend(Tone.Normalize, Tone.SignalBase);\n\t\t    /**\n\t\t\t * The minimum value the input signal will reach.\n\t\t\t * @memberOf Tone.Normalize#\n\t\t\t * @type {number}\n\t\t\t * @name min\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Normalize.prototype, 'min', {\n\t\t        get: function () {\n\t\t            return this._inputMin;\n\t\t        },\n\t\t        set: function (min) {\n\t\t            this._inputMin = min;\n\t\t            this._setRange();\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The maximum value the input signal will reach.\n\t\t\t * @memberOf Tone.Normalize#\n\t\t\t * @type {number}\n\t\t\t * @name max\n\t\t\t */\n\t\t    Object.defineProperty(Tone.Normalize.prototype, 'max', {\n\t\t        get: function () {\n\t\t            return this._inputMax;\n\t\t        },\n\t\t        set: function (max) {\n\t\t            this._inputMax = max;\n\t\t            this._setRange();\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  set the values\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.Normalize.prototype._setRange = function () {\n\t\t        this._sub.value = -this._inputMin;\n\t\t        this._div.value = 1 / (this._inputMax - this._inputMin);\n\t\t    };\n\t\t    /**\n\t\t\t *  clean up\n\t\t\t *  @returns {Tone.Normalize} this\n\t\t\t */\n\t\t    Tone.Normalize.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._sub.dispose();\n\t\t        this._sub = null;\n\t\t        this._div.dispose();\n\t\t        this._div = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.Normalize;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    /**\n\t\t\t *  @class Tone.MultiPlayer is well suited for one-shots, multi-sampled instruments\n\t\t\t *         or any time you need to play a bunch of audio buffers. \n\t\t\t *  @param  {Object|Array|Tone.Buffers}  buffers  The buffers which are available\n\t\t\t *                                                to the MultiPlayer\n\t\t\t *  @param {Function} onload The callback to invoke when all of the buffers are loaded.\n\t\t\t *  @extends {Tone}\n\t\t\t *  @example\n\t\t\t * var multiPlayer = new MultiPlayer({\n\t\t\t * \t\"kick\" : \"path/to/kick.mp3\",\n\t\t\t * \t\"snare\" : \"path/to/snare.mp3\",\n\t\t\t * }, function(){\n\t\t\t * \tmultiPlayer.start(\"kick\");\n\t\t\t * });\n\t\t\t *  @example\n\t\t\t * //can also store the values in an array\n\t\t\t * var multiPlayer = new MultiPlayer([\"path/to/kick.mp3\", \"path/to/snare.mp3\"], \n\t\t\t * function(){\n\t\t\t * \t//if an array is passed in, the samples are referenced to by index\n\t\t\t * \tmultiPlayer.start(1);\n\t\t\t * });\n\t\t\t */\n\t\t    Tone.MultiPlayer = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'urls',\n\t\t            'onload'\n\t\t        ], Tone.MultiPlayer.defaults);\n\t\t        if (options.urls instanceof Tone.Buffers) {\n\t\t            /**\n\t\t\t\t\t *  All the buffers belonging to the player.\n\t\t\t\t\t *  @type  {Tone.Buffers}\n\t\t\t\t\t */\n\t\t            this.buffers = options.urls;\n\t\t        } else {\n\t\t            this.buffers = new Tone.Buffers(options.urls, options.onload);\n\t\t        }\n\t\t        /**\n\t\t\t\t *  Keeps track of the currently playing sources.\n\t\t\t\t *  @type  {Object}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._activeSources = {};\n\t\t        /**\n\t\t\t\t *  The fade in envelope which is applied\n\t\t\t\t *  to the beginning of the BufferSource\n\t\t\t\t *  @type  {Time}\n\t\t\t\t */\n\t\t        this.fadeIn = options.fadeIn;\n\t\t        /**\n\t\t\t\t *  The fade out envelope which is applied\n\t\t\t\t *  to the end of the BufferSource\n\t\t\t\t *  @type  {Time}\n\t\t\t\t */\n\t\t        this.fadeOut = options.fadeOut;\n\t\t        /**\n\t\t\t\t *  The output volume node\n\t\t\t\t *  @type  {Tone.Volume}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._volume = this.output = new Tone.Volume(options.volume);\n\t\t        /**\n\t\t\t\t * The volume of the output in decibels.\n\t\t\t\t * @type {Decibels}\n\t\t\t\t * @signal\n\t\t\t\t * @example\n\t\t\t\t * source.volume.value = -6;\n\t\t\t\t */\n\t\t        this.volume = this._volume.volume;\n\t\t        this._readOnly('volume');\n\t\t        //make the output explicitly stereo\n\t\t        this._volume.output.output.channelCount = 2;\n\t\t        this._volume.output.output.channelCountMode = 'explicit';\n\t\t        //mute initially\n\t\t        this.mute = options.mute;\n\t\t    };\n\t\t    Tone.extend(Tone.MultiPlayer, Tone.Source);\n\t\t    /**\n\t\t\t *  The defaults\n\t\t\t *  @type  {Object}\n\t\t\t */\n\t\t    Tone.MultiPlayer.defaults = {\n\t\t        'onload': Tone.noOp,\n\t\t        'fadeIn': 0,\n\t\t        'fadeOut': 0\n\t\t    };\n\t\t    /**\n\t\t\t * Make the source from the buffername\n\t\t\t * @param  {String} bufferName\n\t\t\t * @return {Tone.BufferSource}\n\t\t\t * @private\n\t\t\t */\n\t\t    Tone.MultiPlayer.prototype._makeSource = function (bufferName) {\n\t\t        var buffer;\n\t\t        if (this.isString(bufferName) || this.isNumber(bufferName)) {\n\t\t            buffer = this.buffers.get(bufferName).get();\n\t\t        } else if (bufferName instanceof Tone.Buffer) {\n\t\t            buffer = bufferName.get();\n\t\t        } else if (bufferName instanceof AudioBuffer) {\n\t\t            buffer = bufferName;\n\t\t        }\n\t\t        var source = new Tone.BufferSource(buffer).connect(this.output);\n\t\t        if (!this._activeSources.hasOwnProperty(bufferName)) {\n\t\t            this._activeSources[bufferName] = [];\n\t\t        }\n\t\t        this._activeSources[bufferName].push(source);\n\t\t        return source;\n\t\t    };\n\t\t    /**\n\t\t\t *  Start a buffer by name. The `start` method allows a number of options\n\t\t\t *  to be passed in such as offset, interval, and gain. This is good for multi-sampled \n\t\t\t *  instruments and sound sprites where samples are repitched played back at different velocities.\n\t\t\t *  @param  {String}  bufferName    The name of the buffer to start.\n\t\t\t *  @param  {Time}  time      When to start the buffer.\n\t\t\t *  @param  {Time}  [offset=0]    The offset into the buffer to play from.\n\t\t\t *  @param  {Time=}  duration   How long to play the buffer for.\n\t\t\t *  @param  {Interval}  [pitch=0]  The interval to repitch the buffer.\n\t\t\t *  @param  {Gain}  [gain=1]      The gain to play the sample at.\n\t\t\t *  @return  {Tone.MultiPlayer}  this\n\t\t\t */\n\t\t    Tone.MultiPlayer.prototype.start = function (bufferName, time, offset, duration, pitch, gain) {\n\t\t        time = this.toSeconds(time);\n\t\t        var source = this._makeSource(bufferName);\n\t\t        source.start(time, offset, duration, this.defaultArg(gain, 1), this.fadeIn);\n\t\t        if (duration) {\n\t\t            source.stop(time + this.toSeconds(duration), this.fadeOut);\n\t\t        }\n\t\t        pitch = this.defaultArg(pitch, 0);\n\t\t        source.playbackRate.value = this.intervalToFrequencyRatio(pitch);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Start a looping buffer by name. Similar to `start`, but the buffer\n\t\t\t *  is looped instead of played straight through. Can still be stopped with `stop`. \n\t\t\t *  @param  {String}  bufferName    The name of the buffer to start.\n\t\t\t *  @param  {Time}  time      When to start the buffer.\n\t\t\t *  @param  {Time}  [offset=0]    The offset into the buffer to play from.\n\t\t\t *  @param  {Time=}  loopStart   The start of the loop.\n\t\t\t *  @param  {Time=}  loopEnd\tThe end of the loop.\n\t\t\t *  @param  {Interval}  [pitch=0]  The interval to repitch the buffer.\n\t\t\t *  @param  {Gain}  [gain=1]      The gain to play the sample at.\n\t\t\t *  @return  {Tone.MultiPlayer}  this\n\t\t\t */\n\t\t    Tone.MultiPlayer.prototype.startLoop = function (bufferName, time, offset, loopStart, loopEnd, pitch, gain) {\n\t\t        time = this.toSeconds(time);\n\t\t        var source = this._makeSource(bufferName);\n\t\t        source.loop = true;\n\t\t        source.loopStart = this.toSeconds(this.defaultArg(loopStart, 0));\n\t\t        source.loopEnd = this.toSeconds(this.defaultArg(loopEnd, 0));\n\t\t        source.start(time, offset, undefined, this.defaultArg(gain, 1), this.fadeIn);\n\t\t        pitch = this.defaultArg(pitch, 0);\n\t\t        source.playbackRate.value = this.intervalToFrequencyRatio(pitch);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Stop the first played instance of the buffer name.\n\t\t\t *  @param  {String}  bufferName  The buffer to stop.\n\t\t\t *  @param  {Time=}  time    When to stop the buffer\n\t\t\t *  @return  {Tone.MultiPlayer}  this\n\t\t\t */\n\t\t    Tone.MultiPlayer.prototype.stop = function (bufferName, time) {\n\t\t        if (this._activeSources[bufferName] && this._activeSources[bufferName].length) {\n\t\t            time = this.toSeconds(time);\n\t\t            this._activeSources[bufferName].shift().stop(time, this.fadeOut);\n\t\t        } else {\n\t\t            throw new Error('Tone.MultiPlayer: cannot stop a buffer that hasn\\'t been started or is already stopped');\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Stop all currently playing buffers at the given time.\n\t\t\t *  @param  {Time=}  time  When to stop the buffers.\n\t\t\t *  @return  {Tone.MultiPlayer}  this\n\t\t\t */\n\t\t    Tone.MultiPlayer.prototype.stopAll = function (time) {\n\t\t        time = this.toSeconds(time);\n\t\t        for (var bufferName in this._activeSources) {\n\t\t            var sources = this._activeSources[bufferName];\n\t\t            for (var i = 0; i < sources.length; i++) {\n\t\t                sources[i].stop(time);\n\t\t            }\n\t\t        }\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Add another buffer to the available buffers.\n\t\t\t *  @param {String} name The name to that the buffer is refered\n\t\t\t *                       to in start/stop methods. \n\t\t\t *  @param {String|Tone.Buffer} url The url of the buffer to load\n\t\t\t *                                  or the buffer.\n\t\t\t *  @param {Function} callback The function to invoke after the buffer is loaded.\n\t\t\t */\n\t\t    Tone.MultiPlayer.prototype.add = function (name, url, callback) {\n\t\t        this.buffers.add(name, url, callback);\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Returns the playback state of the source. \"started\"\n\t\t\t *  if there are any buffers playing. \"stopped\" otherwise.\n\t\t\t *  @type {Tone.State}\n\t\t\t *  @readOnly\n\t\t\t *  @memberOf Tone.MultiPlayer#\n\t\t\t *  @name state\n\t\t\t */\n\t\t    Object.defineProperty(Tone.MultiPlayer.prototype, 'state', {\n\t\t        get: function () {\n\t\t            return this._activeSources.length > 0 ? Tone.State.Started : Tone.State.Stopped;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * Mute the output. \n\t\t\t * @memberOf Tone.MultiPlayer#\n\t\t\t * @type {boolean}\n\t\t\t * @name mute\n\t\t\t * @example\n\t\t\t * //mute the output\n\t\t\t * source.mute = true;\n\t\t\t */\n\t\t    Object.defineProperty(Tone.MultiPlayer.prototype, 'mute', {\n\t\t        get: function () {\n\t\t            return this._volume.mute;\n\t\t        },\n\t\t        set: function (mute) {\n\t\t            this._volume.mute = mute;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t *  Clean up.\n\t\t\t *  @return  {Tone.MultiPlayer}  this\n\t\t\t */\n\t\t    Tone.MultiPlayer.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this._volume.dispose();\n\t\t        this._volume = null;\n\t\t        this._writable('volume');\n\t\t        this.volume = null;\n\t\t        for (var bufferName in this._activeSources) {\n\t\t            this._activeSources[bufferName].forEach(function (source) {\n\t\t                source.dispose();\n\t\t            });\n\t\t        }\n\t\t        this.buffers.dispose();\n\t\t        this.buffers = null;\n\t\t        this._activeSources = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.MultiPlayer;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    /**\n\t\t\t * @class Tone.GrainPlayer implements [granular synthesis](https://en.wikipedia.org/wiki/Granular_synthesis).\n\t\t\t *        Granular Synthesis enables you to adjust pitch and playback rate independently. The grainSize is the \n\t\t\t *        amount of time each small chunk of audio is played for and the overlap is the \n\t\t\t *        amount of crossfading transition time between successive grains.\n\t\t\t * @extends {Tone}\n\t\t\t * @param {String|Tone.Buffer} url\tThe url to load, or the Tone.Buffer to play.\n\t\t\t * @param {Function=} callback The callback to invoke after the url is loaded.\n\t\t\t */\n\t\t    Tone.GrainPlayer = function () {\n\t\t        var options = this.optionsObject(arguments, [\n\t\t            'url',\n\t\t            'onload'\n\t\t        ], Tone.GrainPlayer.defaults);\n\t\t        Tone.Source.call(this);\n\t\t        /**\n\t\t\t\t *  The audio buffer belonging to the player.\n\t\t\t\t *  @type  {Tone.Buffer}\n\t\t\t\t */\n\t\t        this.buffer = new Tone.Buffer(options.url, options.onload);\n\t\t        /**\n\t\t\t\t *  Plays the buffer with a small envelope\n\t\t\t\t *  @type  {Tone.MultiPlayer}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._player = new Tone.MultiPlayer().connect(this.output);\n\t\t        /**\n\t\t\t\t *  Create a repeating tick to schedule\n\t\t\t\t *  the grains.\n\t\t\t\t *  @type  {Tone.Clock}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._clock = new Tone.Clock(this._tick.bind(this), 1);\n\t\t        /**\n\t\t\t\t *  @type  {Number}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._loopStart = 0;\n\t\t        /**\n\t\t\t\t *  @type  {Number}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._loopEnd = 0;\n\t\t        /**\n\t\t\t\t *  @type  {Number}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._playbackRate = options.playbackRate;\n\t\t        /**\n\t\t\t\t *  @type  {Number}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._grainSize = options.grainSize;\n\t\t        /**\n\t\t\t\t *  @private\n\t\t\t\t *  @type {Number}\n\t\t\t\t */\n\t\t        this._overlap = options.overlap;\n\t\t        /**\n\t\t\t\t *  Adjust the pitch independently of the playbackRate.\n\t\t\t\t *  @type  {Cents}\n\t\t\t\t */\n\t\t        this.detune = options.detune;\n\t\t        /**\n\t\t\t\t *  The amount of time randomly added\n\t\t\t\t *  or subtracted from the grain's offset\n\t\t\t\t *  @type  {Time}\n\t\t\t\t */\n\t\t        this.drift = options.drift;\n\t\t        //setup\n\t\t        this.overlap = options.overlap;\n\t\t        this.loop = options.loop;\n\t\t        this.playbackRate = options.playbackRate;\n\t\t        this.grainSize = options.grainSize;\n\t\t        this.loopStart = options.loopStart;\n\t\t        this.loopEnd = options.loopEnd;\n\t\t        this.reverse = options.reverse;\n\t\t    };\n\t\t    Tone.extend(Tone.GrainPlayer, Tone.Source);\n\t\t    /**\n\t\t\t *  the default parameters\n\t\t\t *  @static\n\t\t\t *  @const\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t    Tone.GrainPlayer.defaults = {\n\t\t        'onload': Tone.noOp,\n\t\t        'overlap': 0.1,\n\t\t        'grainSize': 0.2,\n\t\t        'drift': 0,\n\t\t        'playbackRate': 1,\n\t\t        'detune': 0,\n\t\t        'loop': false,\n\t\t        'loopStart': 0,\n\t\t        'loopEnd': 0,\n\t\t        'reverse': false\n\t\t    };\n\t\t    /**\n\t\t\t *  Play the buffer at the given startTime. Optionally add an offset\n\t\t\t *  and/or duration which will play the buffer from a position\n\t\t\t *  within the buffer for the given duration. \n\t\t\t *  \n\t\t\t *  @param  {Time} [startTime=now] When the player should start.\n\t\t\t *  @param  {Time} [offset=0] The offset from the beginning of the sample\n\t\t\t *                                 to start at. \n\t\t\t *  @param  {Time=} duration How long the sample should play. If no duration\n\t\t\t *                                is given, it will default to the full length \n\t\t\t *                                of the sample (minus any offset)\n\t\t\t *  @returns {Tone.GrainPlayer} this\n\t\t\t *  @memberOf Tone.GrainPlayer#\n\t\t\t *  @method start\n\t\t\t *  @name start\n\t\t\t */\n\t\t    /**\n\t\t\t *  Internal start method\n\t\t\t *  @param {Time} time\n\t\t\t *  @param {Time} offset\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.GrainPlayer.prototype._start = function (time, offset, duration) {\n\t\t        offset = this.defaultArg(offset, 0);\n\t\t        offset = this.toSeconds(offset);\n\t\t        time = this.toSeconds(time);\n\t\t        this._offset = offset;\n\t\t        this._clock.start(time);\n\t\t        //unmute the player\n\t\t        this._player.volume.setValueAtTime(0, time);\n\t\t        if (duration) {\n\t\t            this._stop(time + this.toSeconds(duration));\n\t\t        }\n\t\t    };\n\t\t    /**\n\t\t\t *  Internal start method\n\t\t\t *  @param {Time} time\n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.GrainPlayer.prototype._stop = function (time) {\n\t\t        this._clock.stop(time);\n\t\t        //mute the player\n\t\t        this._player.volume.cancelScheduledValues(time);\n\t\t        this._player.volume.setValueAtTime(-Infinity, time);\n\t\t    };\n\t\t    /**\n\t\t\t *  Invoked on each clock tick. scheduled a new\n\t\t\t *  grain at this time.\n\t\t\t *  @param  {Time}  time \n\t\t\t *  @private\n\t\t\t */\n\t\t    Tone.GrainPlayer.prototype._tick = function (time) {\n\t\t        var bufferDuration = this.buffer.duration;\n\t\t        if (this.loop && this._loopEnd > 0) {\n\t\t            bufferDuration = this._loopEnd;\n\t\t        }\n\t\t        var drift = (Math.random() * 2 - 1) * this.drift;\n\t\t        var offset = this._offset - this._overlap + drift;\n\t\t        var detune = this.detune / 100;\n\t\t        //keep the offset within the limits of the buffer\n\t\t        offset = Math.max(offset, 0);\n\t\t        offset = Math.min(offset, bufferDuration);\n\t\t        var originalFadeIn = this._player.fadeIn;\n\t\t        if (this.loop && this._offset > bufferDuration) {\n\t\t            //play the end\n\t\t            var endSegmentDuration = this._offset - bufferDuration;\n\t\t            this._player.start(this.buffer, time, offset, endSegmentDuration + this._overlap, detune);\n\t\t            //and play the beginning \n\t\t            offset = this._offset % bufferDuration;\n\t\t            this._offset = this._loopStart;\n\t\t            this._player.fadeIn = 0;\n\t\t            this._player.start(this.buffer, time + endSegmentDuration, this._offset, offset + this._overlap, detune);\n\t\t        } else if (this._offset > bufferDuration) {\n\t\t            //set the state to stopped. \n\t\t            this.stop(time);\n\t\t        } else {\n\t\t            if (offset === 0) {\n\t\t                this._player.fadeIn = 0;\n\t\t            }\n\t\t            this._player.start(this.buffer, time, offset, this.grainSize + this._overlap, detune);\n\t\t        }\n\t\t        this._player.fadeIn = originalFadeIn;\n\t\t        //increment the offset\n\t\t        var duration = this._clock._nextTick - time;\n\t\t        this._offset += duration * this._playbackRate;\n\t\t    };\n\t\t    /**\n\t\t\t *  Jump to a specific time and play it.\n\t\t\t *  @param  {Time}  offset  The offset to jump to.\n\t\t\t *  @param {Time=} time When to make the jump.\n\t\t\t *  @return  {[type]}  [description]\n\t\t\t */\n\t\t    Tone.GrainPlayer.prototype.scrub = function (offset, time) {\n\t\t        this._offset = this.toSeconds(offset);\n\t\t        this._tick(this.toSeconds(time));\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t * The playback rate of the sample\n\t\t\t * @memberOf Tone.GrainPlayer#\n\t\t\t * @type {Positive}\n\t\t\t * @name playbackRate\n\t\t\t */\n\t\t    Object.defineProperty(Tone.GrainPlayer.prototype, 'playbackRate', {\n\t\t        get: function () {\n\t\t            return this._playbackRate;\n\t\t        },\n\t\t        set: function (rate) {\n\t\t            this._playbackRate = rate;\n\t\t            this.grainSize = this._grainSize;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The loop start time. \n\t\t\t * @memberOf Tone.GrainPlayer#\n\t\t\t * @type {Time}\n\t\t\t * @name loopStart\n\t\t\t */\n\t\t    Object.defineProperty(Tone.GrainPlayer.prototype, 'loopStart', {\n\t\t        get: function () {\n\t\t            return this._loopStart;\n\t\t        },\n\t\t        set: function (time) {\n\t\t            this._loopStart = this.toSeconds(time);\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The loop end time. \n\t\t\t * @memberOf Tone.GrainPlayer#\n\t\t\t * @type {Time}\n\t\t\t * @name loopEnd\n\t\t\t */\n\t\t    Object.defineProperty(Tone.GrainPlayer.prototype, 'loopEnd', {\n\t\t        get: function () {\n\t\t            return this._loopEnd;\n\t\t        },\n\t\t        set: function (time) {\n\t\t            this._loopEnd = this.toSeconds(time);\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The direction the buffer should play in\n\t\t\t * @memberOf Tone.GrainPlayer#\n\t\t\t * @type {boolean}\n\t\t\t * @name reverse\n\t\t\t */\n\t\t    Object.defineProperty(Tone.GrainPlayer.prototype, 'reverse', {\n\t\t        get: function () {\n\t\t            return this.buffer.reverse;\n\t\t        },\n\t\t        set: function (rev) {\n\t\t            this.buffer.reverse = rev;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * The size of each chunk of audio that the \n\t\t\t * buffer is chopped into and played back at.\n\t\t\t * @memberOf Tone.GrainPlayer#\n\t\t\t * @type {Time}\n\t\t\t * @name grainSize\n\t\t\t */\n\t\t    Object.defineProperty(Tone.GrainPlayer.prototype, 'grainSize', {\n\t\t        get: function () {\n\t\t            return this._grainSize;\n\t\t        },\n\t\t        set: function (size) {\n\t\t            this._grainSize = this.toSeconds(size);\n\t\t            this._clock.frequency.value = this._playbackRate / this._grainSize;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * This is the duration of the cross-fade between \n\t\t\t * sucessive grains.\n\t\t\t * @memberOf Tone.GrainPlayer#\n\t\t\t * @type {Time}\n\t\t\t * @name overlap\n\t\t\t */\n\t\t    Object.defineProperty(Tone.GrainPlayer.prototype, 'overlap', {\n\t\t        get: function () {\n\t\t            return this._overlap;\n\t\t        },\n\t\t        set: function (time) {\n\t\t            time = this.toSeconds(time);\n\t\t            this._overlap = time;\n\t\t            if (this._overlap < 0) {\n\t\t                this._player.fadeIn = 0.01;\n\t\t                this._player.fadeOut = 0.01;\n\t\t            } else {\n\t\t                this._player.fadeIn = time;\n\t\t                this._player.fadeOut = time;\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * Clean up\n\t\t\t * @return {Tone.GrainPlayer} this\n\t\t\t */\n\t\t    Tone.GrainPlayer.prototype.dispose = function () {\n\t\t        Tone.Source.prototype.dispose.call(this);\n\t\t        this.buffer.dispose();\n\t\t        this.buffer = null;\n\t\t        this._player.dispose();\n\t\t        this._player = null;\n\t\t        this._clock.dispose();\n\t\t        this._clock = null;\n\t\t        return this;\n\t\t    };\n\t\t    return Tone.GrainPlayer;\n\t\t});\n\t\tModule(function (Tone) {\n\t\t    \n\t\t    /**\n\t\t\t *  @class  Tone.UserMedia uses MediaDevices.getUserMedia to open up\n\t\t\t *          and external microphone or audio input. Check \n\t\t\t *          [MediaDevices API Support](https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia)\n\t\t\t *          to see which browsers are supported. Access to an external input\n\t\t\t *          is limited to secure (HTTPS) connections.\n\t\t\t *         \n\t\t\t *  @constructor\n\t\t\t *  @extends {Tone}\n\t\t\t *  @param {Decibels=} volume The level of the input\n\t\t\t *  @example\n\t\t\t * //list the inputs and open the third one\n\t\t\t * var motu = new Tone.UserMedia();\n\t\t\t * \n\t\t\t * //opening the input asks the user to activate their mic\n\t\t\t * motu.open().then(function(){\n\t\t\t * \t//opening is activates the microphone\n\t\t\t * \t//starting lets audio through\n\t\t\t * \tmotu.start(10);\n\t\t\t * });\n\t\t\t */\n\t\t    Tone.UserMedia = function () {\n\t\t        var options = this.optionsObject(arguments, ['volume'], Tone.UserMedia.defaults);\n\t\t        /**\n\t\t\t\t *  The MediaStreamNode \n\t\t\t\t *  @type {MediaStreamAudioSourceNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._mediaStream = null;\n\t\t        /**\n\t\t\t\t *  The media stream created by getUserMedia.\n\t\t\t\t *  @type {LocalMediaStream}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._stream = null;\n\t\t        /**\n\t\t\t\t *  The open device\n\t\t\t\t *  @type  {MediaDeviceInfo}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._device = null;\n\t\t        /**\n\t\t\t\t *  The output volume node\n\t\t\t\t *  @type  {Tone.Volume}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t\t        this._volume = this.output = new Tone.Volume(options.volume);\n\t\t        /**\n\t\t\t\t * The volume of the output in decibels.\n\t\t\t\t * @type {Decibels}\n\t\t\t\t * @signal\n\t\t\t\t * @example\n\t\t\t\t * input.volume.value = -6;\n\t\t\t\t */\n\t\t        this.volume = this._volume.volume;\n\t\t        this._readOnly('volume');\n\t\t        this.mute = options.mute;\n\t\t    };\n\t\t    Tone.extend(Tone.UserMedia);\n\t\t    /**\n\t\t\t * the default parameters\n\t\t\t * @type {Object}\n\t\t\t */\n\t\t    Tone.UserMedia.defaults = {\n\t\t        'volume': 0,\n\t\t        'mute': false\n\t\t    };\n\t\t    /**\n\t\t\t *  Open the media stream. If a string is passed in, it is assumed\n\t\t\t *  to be the label or id of the stream, if a number is passed in,\n\t\t\t *  it is the input number of the stream.\n\t\t\t *  @param  {String|Number} [labelOrId=\"default\"] The label or id of the audio input media device. \n\t\t\t *                                                With no argument, the default stream is opened.\n\t\t\t *  @return {Promise} The promise is resolved when the stream is open.\n\t\t\t */\n\t\t    Tone.UserMedia.prototype.open = function (labelOrId) {\n\t\t        labelOrId = this.defaultArg(labelOrId, 'default');\n\t\t        return this.enumerateDevices().then(function (devices) {\n\t\t            var device;\n\t\t            if (this.isNumber(labelOrId)) {\n\t\t                device = devices[labelOrId];\n\t\t            } else {\n\t\t                device = devices.find(function (device) {\n\t\t                    return device.label === labelOrId || device.deviceId === labelOrId;\n\t\t                });\n\t\t                if (!device) {\n\t\t                    //otherwise just take the first one\n\t\t                    device = devices[0];\n\t\t                }\n\t\t            }\n\t\t            //didn't find a matching device\n\t\t            if (!device) {\n\t\t                throw new Error('Tone.UserMedia: no matching audio inputs.');\n\t\t            }\n\t\t            this._device = device;\n\t\t            //do getUserMedia\n\t\t            var constraints = {\n\t\t                audio: {\n\t\t                    'deviceId': device.deviceId,\n\t\t                    'echoCancellation': false,\n\t\t                    'sampleRate': this.context.sampleRate\n\t\t                }\n\t\t            };\n\t\t            return navigator.mediaDevices.getUserMedia(constraints).then(function (stream) {\n\t\t                //start a new source only if the previous one is closed\n\t\t                if (!this._stream) {\n\t\t                    this._stream = stream;\n\t\t                    //Wrap a MediaStreamSourceNode around the live input stream.\n\t\t                    this._mediaStream = this.context.createMediaStreamSource(stream);\n\t\t                    //Connect the MediaStreamSourceNode to a gate gain node\n\t\t                    this._mediaStream.connect(this.output);\n\t\t                }\n\t\t                return this;\n\t\t            }.bind(this));\n\t\t        }.bind(this));\n\t\t    };\n\t\t    /**\n\t\t\t *  Close the media stream\n\t\t\t *  @return {Tone.UserMedia} this\n\t\t\t */\n\t\t    Tone.UserMedia.prototype.close = function () {\n\t\t        if (this._stream) {\n\t\t            this._stream.getAudioTracks().forEach(function (track) {\n\t\t                track.stop();\n\t\t            });\n\t\t            this._stream = null;\n\t\t            //remove the old media stream\n\t\t            this._mediaStream.disconnect();\n\t\t            this._mediaStream = null;\n\t\t        }\n\t\t        this._device = null;\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  Returns a promise which resolves with the list of audio input devices available.\n\t\t\t *  @return {Promise} The promise that is resolved with the devices\n\t\t\t *  @example\n\t\t\t * extInput.enumerateDevices().then(function(devices){\n\t\t\t * \tconsole.log(devices)\n\t\t\t * })\n\t\t\t */\n\t\t    Tone.UserMedia.prototype.enumerateDevices = function () {\n\t\t        return navigator.mediaDevices.enumerateDevices().then(function (devices) {\n\t\t            return devices.filter(function (device) {\n\t\t                return device.kind === 'audioinput';\n\t\t            });\n\t\t        });\n\t\t    };\n\t\t    /**\n\t\t\t *  Returns the playback state of the source, \"started\" when the microphone is open\n\t\t\t *  and \"stopped\" when the mic is closed.\n\t\t\t *  @type {Tone.State}\n\t\t\t *  @readOnly\n\t\t\t *  @memberOf Tone.UserMedia#\n\t\t\t *  @name state\n\t\t\t */\n\t\t    Object.defineProperty(Tone.UserMedia.prototype, 'state', {\n\t\t        get: function () {\n\t\t            return this._stream && this._stream.active ? Tone.State.Started : Tone.State.Stopped;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * \tReturns an identifier for the represented device that is \n\t\t\t * \tpersisted across sessions. It is un-guessable by other applications and \n\t\t\t * \tunique to the origin of the calling application. It is reset when the \n\t\t\t * \tuser clears cookies (for Private Browsing, a different identifier is \n\t\t\t * \tused that is not persisted across sessions). Returns undefined when the \n\t\t\t * \tdevice is not open.\n\t\t\t *  @type {String}\n\t\t\t *  @readOnly\n\t\t\t *  @memberOf Tone.UserMedia#\n\t\t\t *  @name deviceId\n\t\t\t */\n\t\t    Object.defineProperty(Tone.UserMedia.prototype, 'deviceId', {\n\t\t        get: function () {\n\t\t            if (this._device) {\n\t\t                return this._device.deviceId;\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * \tReturns a group identifier. Two devices have the \n\t\t\t * \tsame group identifier if they belong to the same physical device.\n\t\t\t * \tReturns undefined when the device is not open.\n\t\t\t *  @type {String}\n\t\t\t *  @readOnly\n\t\t\t *  @memberOf Tone.UserMedia#\n\t\t\t *  @name groupId\n\t\t\t */\n\t\t    Object.defineProperty(Tone.UserMedia.prototype, 'groupId', {\n\t\t        get: function () {\n\t\t            if (this._device) {\n\t\t                return this._device.groupId;\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * \tReturns a label describing this device (for example \"Built-in Microphone\"). \n\t\t\t * \tReturns undefined when the device is not open or label is not available\n\t\t\t * \tbecause of permissions.\n\t\t\t *  @type {String}\n\t\t\t *  @readOnly\n\t\t\t *  @memberOf Tone.UserMedia#\n\t\t\t *  @name groupId\n\t\t\t */\n\t\t    Object.defineProperty(Tone.UserMedia.prototype, 'label', {\n\t\t        get: function () {\n\t\t            if (this._device) {\n\t\t                return this._device.label;\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * Mute the output. \n\t\t\t * @memberOf Tone.UserMedia#\n\t\t\t * @type {boolean}\n\t\t\t * @name mute\n\t\t\t * @example\n\t\t\t * //mute the output\n\t\t\t * userMedia.mute = true;\n\t\t\t */\n\t\t    Object.defineProperty(Tone.UserMedia.prototype, 'mute', {\n\t\t        get: function () {\n\t\t            return this._volume.mute;\n\t\t        },\n\t\t        set: function (mute) {\n\t\t            this._volume.mute = mute;\n\t\t        }\n\t\t    });\n\t\t    /**\n\t\t\t * Clean up.\n\t\t\t * @return {Tone.UserMedia} this\n\t\t\t */\n\t\t    Tone.UserMedia.prototype.dispose = function () {\n\t\t        Tone.prototype.dispose.call(this);\n\t\t        this.close();\n\t\t        this._writable('volume');\n\t\t        this._volume.dispose();\n\t\t        this._volume = null;\n\t\t        this.volume = null;\n\t\t        return this;\n\t\t    };\n\t\t    /**\n\t\t\t *  If getUserMedia is supported by the browser.\n\t\t\t *  @type  {Boolean}\n\t\t\t *  @memberOf Tone.UserMedia#\n\t\t\t *  @name supported\n\t\t\t *  @static\n\t\t\t *  @readOnly\n\t\t\t */\n\t\t    Object.defineProperty(Tone.UserMedia, 'supported', {\n\t\t        get: function () {\n\t\t            return !Tone.prototype.isUndef(navigator.mediaDevices) && Tone.prototype.isFunction(navigator.mediaDevices.getUserMedia);\n\t\t        }\n\t\t    });\n\t\t    return Tone.UserMedia;\n\t\t});\n\t\t\n\t\treturn Tone;\n\t}));\n\n/***/ },\n/* 188 */\n/***/ function(module, exports, __webpack_require__, __webpack_module_template_argument_0__, __webpack_module_template_argument_1__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * \n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(__webpack_module_template_argument_0__);\n\t\n\tvar invariant = __webpack_require__(__webpack_module_template_argument_1__);\n\t\n\t/**\n\t * Static poolers. Several custom versions for each potential number of\n\t * arguments. A completely generic pooler is easy to implement, but would\n\t * require accessing the `arguments` object. In each of these, `this` refers to\n\t * the Class itself, not an instance. If any others are needed, simply add them\n\t * here, or in their own files.\n\t */\n\tvar oneArgumentPooler = function (copyFieldsFrom) {\n\t  var Klass = this;\n\t  if (Klass.instancePool.length) {\n\t    var instance = Klass.instancePool.pop();\n\t    Klass.call(instance, copyFieldsFrom);\n\t    return instance;\n\t  } else {\n\t    return new Klass(copyFieldsFrom);\n\t  }\n\t};\n\t\n\tvar twoArgumentPooler = function (a1, a2) {\n\t  var Klass = this;\n\t  if (Klass.instancePool.length) {\n\t    var instance = Klass.instancePool.pop();\n\t    Klass.call(instance, a1, a2);\n\t    return instance;\n\t  } else {\n\t    return new Klass(a1, a2);\n\t  }\n\t};\n\t\n\tvar threeArgumentPooler = function (a1, a2, a3) {\n\t  var Klass = this;\n\t  if (Klass.instancePool.length) {\n\t    var instance = Klass.instancePool.pop();\n\t    Klass.call(instance, a1, a2, a3);\n\t    return instance;\n\t  } else {\n\t    return new Klass(a1, a2, a3);\n\t  }\n\t};\n\t\n\tvar fourArgumentPooler = function (a1, a2, a3, a4) {\n\t  var Klass = this;\n\t  if (Klass.instancePool.length) {\n\t    var instance = Klass.instancePool.pop();\n\t    Klass.call(instance, a1, a2, a3, a4);\n\t    return instance;\n\t  } else {\n\t    return new Klass(a1, a2, a3, a4);\n\t  }\n\t};\n\t\n\tvar standardReleaser = function (instance) {\n\t  var Klass = this;\n\t  !(instance instanceof Klass) ?  false ? invariant(false, 'Trying to release an instance into a pool of a different type.') : _prodInvariant('25') : void 0;\n\t  instance.destructor();\n\t  if (Klass.instancePool.length < Klass.poolSize) {\n\t    Klass.instancePool.push(instance);\n\t  }\n\t};\n\t\n\tvar DEFAULT_POOL_SIZE = 10;\n\tvar DEFAULT_POOLER = oneArgumentPooler;\n\t\n\t/**\n\t * Augments `CopyConstructor` to be a poolable class, augmenting only the class\n\t * itself (statically) not adding any prototypical fields. Any CopyConstructor\n\t * you give this may have a `poolSize` property, and will look for a\n\t * prototypical `destructor` on instances.\n\t *\n\t * @param {Function} CopyConstructor Constructor that can be used to reset.\n\t * @param {Function} pooler Customizable pooler.\n\t */\n\tvar addPoolingTo = function (CopyConstructor, pooler) {\n\t  // Casting as any so that flow ignores the actual implementation and trusts\n\t  // it to match the type we declared\n\t  var NewKlass = CopyConstructor;\n\t  NewKlass.instancePool = [];\n\t  NewKlass.getPooled = pooler || DEFAULT_POOLER;\n\t  if (!NewKlass.poolSize) {\n\t    NewKlass.poolSize = DEFAULT_POOL_SIZE;\n\t  }\n\t  NewKlass.release = standardReleaser;\n\t  return NewKlass;\n\t};\n\t\n\tvar PooledClass = {\n\t  addPoolingTo: addPoolingTo,\n\t  oneArgumentPooler: oneArgumentPooler,\n\t  twoArgumentPooler: twoArgumentPooler,\n\t  threeArgumentPooler: threeArgumentPooler,\n\t  fourArgumentPooler: fourArgumentPooler\n\t};\n\t\n\tmodule.exports = PooledClass;\n\n/***/ },\n/* 189 */\n/***/ function(module, exports, __webpack_require__, __webpack_module_template_argument_0__) {\n\n\t/**\n\t * Copyright 2014-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar emptyFunction = __webpack_require__(__webpack_module_template_argument_0__);\n\t\n\t/**\n\t * Similar to invariant but only logs a warning if the condition is not met.\n\t * This can be used to log issues in development environments in critical\n\t * paths. Removing the logging code for production environments will keep the\n\t * same logic and follow the same code paths.\n\t */\n\t\n\tvar warning = emptyFunction;\n\t\n\tif (false) {\n\t  (function () {\n\t    var printWarning = function printWarning(format) {\n\t      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n\t        args[_key - 1] = arguments[_key];\n\t      }\n\t\n\t      var argIndex = 0;\n\t      var message = 'Warning: ' + format.replace(/%s/g, function () {\n\t        return args[argIndex++];\n\t      });\n\t      if (typeof console !== 'undefined') {\n\t        console.error(message);\n\t      }\n\t      try {\n\t        // --- Welcome to debugging React ---\n\t        // This error was thrown as a convenience so that you can use this stack\n\t        // to find the callsite that caused this warning to fire.\n\t        throw new Error(message);\n\t      } catch (x) {}\n\t    };\n\t\n\t    warning = function warning(condition, format) {\n\t      if (format === undefined) {\n\t        throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');\n\t      }\n\t\n\t      if (format.indexOf('Failed Composite propType: ') === 0) {\n\t        return; // Ignore CompositeComponent proptype check.\n\t      }\n\t\n\t      if (!condition) {\n\t        for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n\t          args[_key2 - 2] = arguments[_key2];\n\t        }\n\t\n\t        printWarning.apply(undefined, [format].concat(args));\n\t      }\n\t    };\n\t  })();\n\t}\n\t\n\tmodule.exports = warning;\n\n/***/ },\n/* 190 */\n/***/ function(module, exports, __webpack_require__, __webpack_module_template_argument_0__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t */\n\t\n\t'use strict';\n\t\n\t// React 15.5 references this module, and assumes PropTypes are still callable in production.\n\t// Therefore we re-export development-only version with all the PropTypes checks here.\n\t// However if one is migrating to the `prop-types` npm library, they will go through the\n\t// `index.js` entry point, and it will branch depending on the environment.\n\tvar factory = __webpack_require__(__webpack_module_template_argument_0__);\n\tmodule.exports = function(isValidElement) {\n\t  // It is still allowed in 15.5.\n\t  var throwOnDirectAccess = false;\n\t  return factory(isValidElement, throwOnDirectAccess);\n\t};\n\n\n/***/ },\n/* 191 */\n/***/ function(module, exports, __webpack_require__, __webpack_module_template_argument_0__, __webpack_module_template_argument_1__, __webpack_module_template_argument_2__, __webpack_module_template_argument_3__, __webpack_module_template_argument_4__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t */\n\t\n\t'use strict';\n\t\n\tvar emptyFunction = __webpack_require__(__webpack_module_template_argument_0__);\n\tvar invariant = __webpack_require__(__webpack_module_template_argument_1__);\n\tvar warning = __webpack_require__(__webpack_module_template_argument_2__);\n\t\n\tvar ReactPropTypesSecret = __webpack_require__(__webpack_module_template_argument_3__);\n\tvar checkPropTypes = __webpack_require__(__webpack_module_template_argument_4__);\n\t\n\tmodule.exports = function(isValidElement, throwOnDirectAccess) {\n\t  /* global Symbol */\n\t  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n\t  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\n\t\n\t  /**\n\t   * Returns the iterator method function contained on the iterable object.\n\t   *\n\t   * Be sure to invoke the function with the iterable as context:\n\t   *\n\t   *     var iteratorFn = getIteratorFn(myIterable);\n\t   *     if (iteratorFn) {\n\t   *       var iterator = iteratorFn.call(myIterable);\n\t   *       ...\n\t   *     }\n\t   *\n\t   * @param {?object} maybeIterable\n\t   * @return {?function}\n\t   */\n\t  function getIteratorFn(maybeIterable) {\n\t    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);\n\t    if (typeof iteratorFn === 'function') {\n\t      return iteratorFn;\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Collection of methods that allow declaration and validation of props that are\n\t   * supplied to React components. Example usage:\n\t   *\n\t   *   var Props = require('ReactPropTypes');\n\t   *   var MyArticle = React.createClass({\n\t   *     propTypes: {\n\t   *       // An optional string prop named \"description\".\n\t   *       description: Props.string,\n\t   *\n\t   *       // A required enum prop named \"category\".\n\t   *       category: Props.oneOf(['News','Photos']).isRequired,\n\t   *\n\t   *       // A prop named \"dialog\" that requires an instance of Dialog.\n\t   *       dialog: Props.instanceOf(Dialog).isRequired\n\t   *     },\n\t   *     render: function() { ... }\n\t   *   });\n\t   *\n\t   * A more formal specification of how these methods are used:\n\t   *\n\t   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)\n\t   *   decl := ReactPropTypes.{type}(.isRequired)?\n\t   *\n\t   * Each and every declaration produces a function with the same signature. This\n\t   * allows the creation of custom validation functions. For example:\n\t   *\n\t   *  var MyLink = React.createClass({\n\t   *    propTypes: {\n\t   *      // An optional string or URI prop named \"href\".\n\t   *      href: function(props, propName, componentName) {\n\t   *        var propValue = props[propName];\n\t   *        if (propValue != null && typeof propValue !== 'string' &&\n\t   *            !(propValue instanceof URI)) {\n\t   *          return new Error(\n\t   *            'Expected a string or an URI for ' + propName + ' in ' +\n\t   *            componentName\n\t   *          );\n\t   *        }\n\t   *      }\n\t   *    },\n\t   *    render: function() {...}\n\t   *  });\n\t   *\n\t   * @internal\n\t   */\n\t\n\t  var ANONYMOUS = '<<anonymous>>';\n\t\n\t  // Important!\n\t  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.\n\t  var ReactPropTypes = {\n\t    array: createPrimitiveTypeChecker('array'),\n\t    bool: createPrimitiveTypeChecker('boolean'),\n\t    func: createPrimitiveTypeChecker('function'),\n\t    number: createPrimitiveTypeChecker('number'),\n\t    object: createPrimitiveTypeChecker('object'),\n\t    string: createPrimitiveTypeChecker('string'),\n\t    symbol: createPrimitiveTypeChecker('symbol'),\n\t\n\t    any: createAnyTypeChecker(),\n\t    arrayOf: createArrayOfTypeChecker,\n\t    element: createElementTypeChecker(),\n\t    instanceOf: createInstanceTypeChecker,\n\t    node: createNodeChecker(),\n\t    objectOf: createObjectOfTypeChecker,\n\t    oneOf: createEnumTypeChecker,\n\t    oneOfType: createUnionTypeChecker,\n\t    shape: createShapeTypeChecker\n\t  };\n\t\n\t  /**\n\t   * inlined Object.is polyfill to avoid requiring consumers ship their own\n\t   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n\t   */\n\t  /*eslint-disable no-self-compare*/\n\t  function is(x, y) {\n\t    // SameValue algorithm\n\t    if (x === y) {\n\t      // Steps 1-5, 7-10\n\t      // Steps 6.b-6.e: +0 != -0\n\t      return x !== 0 || 1 / x === 1 / y;\n\t    } else {\n\t      // Step 6.a: NaN == NaN\n\t      return x !== x && y !== y;\n\t    }\n\t  }\n\t  /*eslint-enable no-self-compare*/\n\t\n\t  /**\n\t   * We use an Error-like object for backward compatibility as people may call\n\t   * PropTypes directly and inspect their output. However, we don't use real\n\t   * Errors anymore. We don't inspect their stack anyway, and creating them\n\t   * is prohibitively expensive if they are created too often, such as what\n\t   * happens in oneOfType() for any type before the one that matched.\n\t   */\n\t  function PropTypeError(message) {\n\t    this.message = message;\n\t    this.stack = '';\n\t  }\n\t  // Make `instanceof Error` still work for returned errors.\n\t  PropTypeError.prototype = Error.prototype;\n\t\n\t  function createChainableTypeChecker(validate) {\n\t    if (false) {\n\t      var manualPropTypeCallCache = {};\n\t      var manualPropTypeWarningCount = 0;\n\t    }\n\t    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {\n\t      componentName = componentName || ANONYMOUS;\n\t      propFullName = propFullName || propName;\n\t\n\t      if (secret !== ReactPropTypesSecret) {\n\t        if (throwOnDirectAccess) {\n\t          // New behavior only for users of `prop-types` package\n\t          invariant(\n\t            false,\n\t            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n\t            'Use `PropTypes.checkPropTypes()` to call them. ' +\n\t            'Read more at http://fb.me/use-check-prop-types'\n\t          );\n\t        } else if (false) {\n\t          // Old behavior for people using React.PropTypes\n\t          var cacheKey = componentName + ':' + propName;\n\t          if (\n\t            !manualPropTypeCallCache[cacheKey] &&\n\t            // Avoid spamming the console because they are often not actionable except for lib authors\n\t            manualPropTypeWarningCount < 3\n\t          ) {\n\t            warning(\n\t              false,\n\t              'You are manually calling a React.PropTypes validation ' +\n\t              'function for the `%s` prop on `%s`. This is deprecated ' +\n\t              'and will throw in the standalone `prop-types` package. ' +\n\t              'You may be seeing this warning due to a third-party PropTypes ' +\n\t              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.',\n\t              propFullName,\n\t              componentName\n\t            );\n\t            manualPropTypeCallCache[cacheKey] = true;\n\t            manualPropTypeWarningCount++;\n\t          }\n\t        }\n\t      }\n\t      if (props[propName] == null) {\n\t        if (isRequired) {\n\t          if (props[propName] === null) {\n\t            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));\n\t          }\n\t          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));\n\t        }\n\t        return null;\n\t      } else {\n\t        return validate(props, propName, componentName, location, propFullName);\n\t      }\n\t    }\n\t\n\t    var chainedCheckType = checkType.bind(null, false);\n\t    chainedCheckType.isRequired = checkType.bind(null, true);\n\t\n\t    return chainedCheckType;\n\t  }\n\t\n\t  function createPrimitiveTypeChecker(expectedType) {\n\t    function validate(props, propName, componentName, location, propFullName, secret) {\n\t      var propValue = props[propName];\n\t      var propType = getPropType(propValue);\n\t      if (propType !== expectedType) {\n\t        // `propValue` being instance of, say, date/regexp, pass the 'object'\n\t        // check, but we can offer a more precise error message here rather than\n\t        // 'of type `object`'.\n\t        var preciseType = getPreciseType(propValue);\n\t\n\t        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));\n\t      }\n\t      return null;\n\t    }\n\t    return createChainableTypeChecker(validate);\n\t  }\n\t\n\t  function createAnyTypeChecker() {\n\t    return createChainableTypeChecker(emptyFunction.thatReturnsNull);\n\t  }\n\t\n\t  function createArrayOfTypeChecker(typeChecker) {\n\t    function validate(props, propName, componentName, location, propFullName) {\n\t      if (typeof typeChecker !== 'function') {\n\t        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');\n\t      }\n\t      var propValue = props[propName];\n\t      if (!Array.isArray(propValue)) {\n\t        var propType = getPropType(propValue);\n\t        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));\n\t      }\n\t      for (var i = 0; i < propValue.length; i++) {\n\t        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);\n\t        if (error instanceof Error) {\n\t          return error;\n\t        }\n\t      }\n\t      return null;\n\t    }\n\t    return createChainableTypeChecker(validate);\n\t  }\n\t\n\t  function createElementTypeChecker() {\n\t    function validate(props, propName, componentName, location, propFullName) {\n\t      var propValue = props[propName];\n\t      if (!isValidElement(propValue)) {\n\t        var propType = getPropType(propValue);\n\t        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));\n\t      }\n\t      return null;\n\t    }\n\t    return createChainableTypeChecker(validate);\n\t  }\n\t\n\t  function createInstanceTypeChecker(expectedClass) {\n\t    function validate(props, propName, componentName, location, propFullName) {\n\t      if (!(props[propName] instanceof expectedClass)) {\n\t        var expectedClassName = expectedClass.name || ANONYMOUS;\n\t        var actualClassName = getClassName(props[propName]);\n\t        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));\n\t      }\n\t      return null;\n\t    }\n\t    return createChainableTypeChecker(validate);\n\t  }\n\t\n\t  function createEnumTypeChecker(expectedValues) {\n\t    if (!Array.isArray(expectedValues)) {\n\t       false ? warning(false, 'Invalid argument supplied to oneOf, expected an instance of array.') : void 0;\n\t      return emptyFunction.thatReturnsNull;\n\t    }\n\t\n\t    function validate(props, propName, componentName, location, propFullName) {\n\t      var propValue = props[propName];\n\t      for (var i = 0; i < expectedValues.length; i++) {\n\t        if (is(propValue, expectedValues[i])) {\n\t          return null;\n\t        }\n\t      }\n\t\n\t      var valuesString = JSON.stringify(expectedValues);\n\t      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));\n\t    }\n\t    return createChainableTypeChecker(validate);\n\t  }\n\t\n\t  function createObjectOfTypeChecker(typeChecker) {\n\t    function validate(props, propName, componentName, location, propFullName) {\n\t      if (typeof typeChecker !== 'function') {\n\t        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');\n\t      }\n\t      var propValue = props[propName];\n\t      var propType = getPropType(propValue);\n\t      if (propType !== 'object') {\n\t        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));\n\t      }\n\t      for (var key in propValue) {\n\t        if (propValue.hasOwnProperty(key)) {\n\t          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n\t          if (error instanceof Error) {\n\t            return error;\n\t          }\n\t        }\n\t      }\n\t      return null;\n\t    }\n\t    return createChainableTypeChecker(validate);\n\t  }\n\t\n\t  function createUnionTypeChecker(arrayOfTypeCheckers) {\n\t    if (!Array.isArray(arrayOfTypeCheckers)) {\n\t       false ? warning(false, 'Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;\n\t      return emptyFunction.thatReturnsNull;\n\t    }\n\t\n\t    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n\t      var checker = arrayOfTypeCheckers[i];\n\t      if (typeof checker !== 'function') {\n\t        warning(\n\t          false,\n\t          'Invalid argument supplid to oneOfType. Expected an array of check functions, but ' +\n\t          'received %s at index %s.',\n\t          getPostfixForTypeWarning(checker),\n\t          i\n\t        );\n\t        return emptyFunction.thatReturnsNull;\n\t      }\n\t    }\n\t\n\t    function validate(props, propName, componentName, location, propFullName) {\n\t      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n\t        var checker = arrayOfTypeCheckers[i];\n\t        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {\n\t          return null;\n\t        }\n\t      }\n\t\n\t      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));\n\t    }\n\t    return createChainableTypeChecker(validate);\n\t  }\n\t\n\t  function createNodeChecker() {\n\t    function validate(props, propName, componentName, location, propFullName) {\n\t      if (!isNode(props[propName])) {\n\t        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));\n\t      }\n\t      return null;\n\t    }\n\t    return createChainableTypeChecker(validate);\n\t  }\n\t\n\t  function createShapeTypeChecker(shapeTypes) {\n\t    function validate(props, propName, componentName, location, propFullName) {\n\t      var propValue = props[propName];\n\t      var propType = getPropType(propValue);\n\t      if (propType !== 'object') {\n\t        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n\t      }\n\t      for (var key in shapeTypes) {\n\t        var checker = shapeTypes[key];\n\t        if (!checker) {\n\t          continue;\n\t        }\n\t        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n\t        if (error) {\n\t          return error;\n\t        }\n\t      }\n\t      return null;\n\t    }\n\t    return createChainableTypeChecker(validate);\n\t  }\n\t\n\t  function isNode(propValue) {\n\t    switch (typeof propValue) {\n\t      case 'number':\n\t      case 'string':\n\t      case 'undefined':\n\t        return true;\n\t      case 'boolean':\n\t        return !propValue;\n\t      case 'object':\n\t        if (Array.isArray(propValue)) {\n\t          return propValue.every(isNode);\n\t        }\n\t        if (propValue === null || isValidElement(propValue)) {\n\t          return true;\n\t        }\n\t\n\t        var iteratorFn = getIteratorFn(propValue);\n\t        if (iteratorFn) {\n\t          var iterator = iteratorFn.call(propValue);\n\t          var step;\n\t          if (iteratorFn !== propValue.entries) {\n\t            while (!(step = iterator.next()).done) {\n\t              if (!isNode(step.value)) {\n\t                return false;\n\t              }\n\t            }\n\t          } else {\n\t            // Iterator will provide entry [k,v] tuples rather than values.\n\t            while (!(step = iterator.next()).done) {\n\t              var entry = step.value;\n\t              if (entry) {\n\t                if (!isNode(entry[1])) {\n\t                  return false;\n\t                }\n\t              }\n\t            }\n\t          }\n\t        } else {\n\t          return false;\n\t        }\n\t\n\t        return true;\n\t      default:\n\t        return false;\n\t    }\n\t  }\n\t\n\t  function isSymbol(propType, propValue) {\n\t    // Native Symbol.\n\t    if (propType === 'symbol') {\n\t      return true;\n\t    }\n\t\n\t    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'\n\t    if (propValue['@@toStringTag'] === 'Symbol') {\n\t      return true;\n\t    }\n\t\n\t    // Fallback for non-spec compliant Symbols which are polyfilled.\n\t    if (typeof Symbol === 'function' && propValue instanceof Symbol) {\n\t      return true;\n\t    }\n\t\n\t    return false;\n\t  }\n\t\n\t  // Equivalent of `typeof` but with special handling for array and regexp.\n\t  function getPropType(propValue) {\n\t    var propType = typeof propValue;\n\t    if (Array.isArray(propValue)) {\n\t      return 'array';\n\t    }\n\t    if (propValue instanceof RegExp) {\n\t      // Old webkits (at least until Android 4.0) return 'function' rather than\n\t      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n\t      // passes PropTypes.object.\n\t      return 'object';\n\t    }\n\t    if (isSymbol(propType, propValue)) {\n\t      return 'symbol';\n\t    }\n\t    return propType;\n\t  }\n\t\n\t  // This handles more types than `getPropType`. Only used for error messages.\n\t  // See `createPrimitiveTypeChecker`.\n\t  function getPreciseType(propValue) {\n\t    if (typeof propValue === 'undefined' || propValue === null) {\n\t      return '' + propValue;\n\t    }\n\t    var propType = getPropType(propValue);\n\t    if (propType === 'object') {\n\t      if (propValue instanceof Date) {\n\t        return 'date';\n\t      } else if (propValue instanceof RegExp) {\n\t        return 'regexp';\n\t      }\n\t    }\n\t    return propType;\n\t  }\n\t\n\t  // Returns a string that is postfixed to a warning about an invalid type.\n\t  // For example, \"undefined\" or \"of type array\"\n\t  function getPostfixForTypeWarning(value) {\n\t    var type = getPreciseType(value);\n\t    switch (type) {\n\t      case 'array':\n\t      case 'object':\n\t        return 'an ' + type;\n\t      case 'boolean':\n\t      case 'date':\n\t      case 'regexp':\n\t        return 'a ' + type;\n\t      default:\n\t        return type;\n\t    }\n\t  }\n\t\n\t  // Returns class name of the object, if any.\n\t  function getClassName(propValue) {\n\t    if (!propValue.constructor || !propValue.constructor.name) {\n\t      return ANONYMOUS;\n\t    }\n\t    return propValue.constructor.name;\n\t  }\n\t\n\t  ReactPropTypes.checkPropTypes = checkPropTypes;\n\t  ReactPropTypes.PropTypes = ReactPropTypes;\n\t\n\t  return ReactPropTypes;\n\t};\n\n\n/***/ }\n/******/ ])));\n\n\n// WEBPACK FOOTER //\n// static/js/main.eff896ac.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/pentacular/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 30e3a14b47ab104b2e9b","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar validateFormat = function validateFormat(format) {};\n\nif (process.env.NODE_ENV !== 'production') {\n  validateFormat = function validateFormat(format) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  };\n}\n\nfunction invariant(condition, format, a, b, c, d, e, f) {\n  validateFormat(format);\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(format.replace(/%s/g, function () {\n        return args[argIndex++];\n      }));\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n}\n\nmodule.exports = invariant;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/~/fbjs/lib/invariant.js\n// module id = 1\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n'use strict';\n\n/**\n * WARNING: DO NOT manually require this module.\n * This is a replacement for `invariant(...)` used by the error code system\n * and will _only_ be required by the corresponding babel pass.\n * It always throws.\n */\n\nfunction reactProdInvariant(code) {\n  var argCount = arguments.length - 1;\n\n  var message = 'Minified React error #' + code + '; visit ' + 'http://facebook.github.io/react/docs/error-decoder.html?invariant=' + code;\n\n  for (var argIdx = 0; argIdx < argCount; argIdx++) {\n    message += '&args[]=' + encodeURIComponent(arguments[argIdx + 1]);\n  }\n\n  message += ' for the full message or use the non-minified dev environment' + ' for full errors and additional helpful warnings.';\n\n  var error = new Error(message);\n  error.name = 'Invariant Violation';\n  error.framesToPop = 1; // we don't care about reactProdInvariant's own frame\n\n  throw error;\n}\n\nmodule.exports = reactProdInvariant;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/reactProdInvariant.js\n// module id = 2\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar DOMProperty = require('./DOMProperty');\nvar ReactDOMComponentFlags = require('./ReactDOMComponentFlags');\n\nvar invariant = require('fbjs/lib/invariant');\n\nvar ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;\nvar Flags = ReactDOMComponentFlags;\n\nvar internalInstanceKey = '__reactInternalInstance$' + Math.random().toString(36).slice(2);\n\n/**\n * Check if a given node should be cached.\n */\nfunction shouldPrecacheNode(node, nodeID) {\n  return node.nodeType === 1 && node.getAttribute(ATTR_NAME) === String(nodeID) || node.nodeType === 8 && node.nodeValue === ' react-text: ' + nodeID + ' ' || node.nodeType === 8 && node.nodeValue === ' react-empty: ' + nodeID + ' ';\n}\n\n/**\n * Drill down (through composites and empty components) until we get a host or\n * host text component.\n *\n * This is pretty polymorphic but unavoidable with the current structure we have\n * for `_renderedChildren`.\n */\nfunction getRenderedHostOrTextFromComponent(component) {\n  var rendered;\n  while (rendered = component._renderedComponent) {\n    component = rendered;\n  }\n  return component;\n}\n\n/**\n * Populate `_hostNode` on the rendered host/text component with the given\n * DOM node. The passed `inst` can be a composite.\n */\nfunction precacheNode(inst, node) {\n  var hostInst = getRenderedHostOrTextFromComponent(inst);\n  hostInst._hostNode = node;\n  node[internalInstanceKey] = hostInst;\n}\n\nfunction uncacheNode(inst) {\n  var node = inst._hostNode;\n  if (node) {\n    delete node[internalInstanceKey];\n    inst._hostNode = null;\n  }\n}\n\n/**\n * Populate `_hostNode` on each child of `inst`, assuming that the children\n * match up with the DOM (element) children of `node`.\n *\n * We cache entire levels at once to avoid an n^2 problem where we access the\n * children of a node sequentially and have to walk from the start to our target\n * node every time.\n *\n * Since we update `_renderedChildren` and the actual DOM at (slightly)\n * different times, we could race here and see a newer `_renderedChildren` than\n * the DOM nodes we see. To avoid this, ReactMultiChild calls\n * `prepareToManageChildren` before we change `_renderedChildren`, at which\n * time the container's child nodes are always cached (until it unmounts).\n */\nfunction precacheChildNodes(inst, node) {\n  if (inst._flags & Flags.hasCachedChildNodes) {\n    return;\n  }\n  var children = inst._renderedChildren;\n  var childNode = node.firstChild;\n  outer: for (var name in children) {\n    if (!children.hasOwnProperty(name)) {\n      continue;\n    }\n    var childInst = children[name];\n    var childID = getRenderedHostOrTextFromComponent(childInst)._domID;\n    if (childID === 0) {\n      // We're currently unmounting this child in ReactMultiChild; skip it.\n      continue;\n    }\n    // We assume the child nodes are in the same order as the child instances.\n    for (; childNode !== null; childNode = childNode.nextSibling) {\n      if (shouldPrecacheNode(childNode, childID)) {\n        precacheNode(childInst, childNode);\n        continue outer;\n      }\n    }\n    // We reached the end of the DOM children without finding an ID match.\n    !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Unable to find element with ID %s.', childID) : _prodInvariant('32', childID) : void 0;\n  }\n  inst._flags |= Flags.hasCachedChildNodes;\n}\n\n/**\n * Given a DOM node, return the closest ReactDOMComponent or\n * ReactDOMTextComponent instance ancestor.\n */\nfunction getClosestInstanceFromNode(node) {\n  if (node[internalInstanceKey]) {\n    return node[internalInstanceKey];\n  }\n\n  // Walk up the tree until we find an ancestor whose instance we have cached.\n  var parents = [];\n  while (!node[internalInstanceKey]) {\n    parents.push(node);\n    if (node.parentNode) {\n      node = node.parentNode;\n    } else {\n      // Top of the tree. This node must not be part of a React tree (or is\n      // unmounted, potentially).\n      return null;\n    }\n  }\n\n  var closest;\n  var inst;\n  for (; node && (inst = node[internalInstanceKey]); node = parents.pop()) {\n    closest = inst;\n    if (parents.length) {\n      precacheChildNodes(inst, node);\n    }\n  }\n\n  return closest;\n}\n\n/**\n * Given a DOM node, return the ReactDOMComponent or ReactDOMTextComponent\n * instance, or null if the node was not rendered by this React.\n */\nfunction getInstanceFromNode(node) {\n  var inst = getClosestInstanceFromNode(node);\n  if (inst != null && inst._hostNode === node) {\n    return inst;\n  } else {\n    return null;\n  }\n}\n\n/**\n * Given a ReactDOMComponent or ReactDOMTextComponent, return the corresponding\n * DOM node.\n */\nfunction getNodeFromInstance(inst) {\n  // Without this first invariant, passing a non-DOM-component triggers the next\n  // invariant for a missing parent, which is super confusing.\n  !(inst._hostNode !== undefined) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;\n\n  if (inst._hostNode) {\n    return inst._hostNode;\n  }\n\n  // Walk up the tree until we find an ancestor whose DOM node we have cached.\n  var parents = [];\n  while (!inst._hostNode) {\n    parents.push(inst);\n    !inst._hostParent ? process.env.NODE_ENV !== 'production' ? invariant(false, 'React DOM tree root should always have a node reference.') : _prodInvariant('34') : void 0;\n    inst = inst._hostParent;\n  }\n\n  // Now parents contains each ancestor that does *not* have a cached native\n  // node, and `inst` is the deepest ancestor that does.\n  for (; parents.length; inst = parents.pop()) {\n    precacheChildNodes(inst, inst._hostNode);\n  }\n\n  return inst._hostNode;\n}\n\nvar ReactDOMComponentTree = {\n  getClosestInstanceFromNode: getClosestInstanceFromNode,\n  getInstanceFromNode: getInstanceFromNode,\n  getNodeFromInstance: getNodeFromInstance,\n  precacheChildNodes: precacheChildNodes,\n  precacheNode: precacheNode,\n  uncacheNode: uncacheNode\n};\n\nmodule.exports = ReactDOMComponentTree;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactDOMComponentTree.js\n// module id = 4\n// module chunks = 0","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/~/object-assign/index.js\n// module id = 5\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n\n/**\n * Simple, lightweight module assisting with the detection and context of\n * Worker. Helps avoid circular dependencies and allows code to reason about\n * whether or not they are in a Worker, even if they never include the main\n * `ReactWorker` dependency.\n */\nvar ExecutionEnvironment = {\n\n  canUseDOM: canUseDOM,\n\n  canUseWorkers: typeof Worker !== 'undefined',\n\n  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),\n\n  canUseViewport: canUseDOM && !!window.screen,\n\n  isInWorker: !canUseDOM // For now, this is true - might change in the future.\n\n};\n\nmodule.exports = ExecutionEnvironment;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/~/fbjs/lib/ExecutionEnvironment.js\n// module id = 6\n// module chunks = 0","/**\n * Copyright 2016-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\n// Trust the developer to only use ReactInstrumentation with a __DEV__ check\n\nvar debugTool = null;\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactDebugTool = require('./ReactDebugTool');\n  debugTool = ReactDebugTool;\n}\n\nmodule.exports = { debugTool: debugTool };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactInstrumentation.js\n// module id = 7\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant'),\n    _assign = require('object-assign');\n\nvar CallbackQueue = require('./CallbackQueue');\nvar PooledClass = require('./PooledClass');\nvar ReactFeatureFlags = require('./ReactFeatureFlags');\nvar ReactReconciler = require('./ReactReconciler');\nvar Transaction = require('./Transaction');\n\nvar invariant = require('fbjs/lib/invariant');\n\nvar dirtyComponents = [];\nvar updateBatchNumber = 0;\nvar asapCallbackQueue = CallbackQueue.getPooled();\nvar asapEnqueued = false;\n\nvar batchingStrategy = null;\n\nfunction ensureInjected() {\n  !(ReactUpdates.ReactReconcileTransaction && batchingStrategy) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must inject a reconcile transaction class and batching strategy') : _prodInvariant('123') : void 0;\n}\n\nvar NESTED_UPDATES = {\n  initialize: function () {\n    this.dirtyComponentsLength = dirtyComponents.length;\n  },\n  close: function () {\n    if (this.dirtyComponentsLength !== dirtyComponents.length) {\n      // Additional updates were enqueued by componentDidUpdate handlers or\n      // similar; before our own UPDATE_QUEUEING wrapper closes, we want to run\n      // these new updates so that if A's componentDidUpdate calls setState on\n      // B, B will update before the callback A's updater provided when calling\n      // setState.\n      dirtyComponents.splice(0, this.dirtyComponentsLength);\n      flushBatchedUpdates();\n    } else {\n      dirtyComponents.length = 0;\n    }\n  }\n};\n\nvar UPDATE_QUEUEING = {\n  initialize: function () {\n    this.callbackQueue.reset();\n  },\n  close: function () {\n    this.callbackQueue.notifyAll();\n  }\n};\n\nvar TRANSACTION_WRAPPERS = [NESTED_UPDATES, UPDATE_QUEUEING];\n\nfunction ReactUpdatesFlushTransaction() {\n  this.reinitializeTransaction();\n  this.dirtyComponentsLength = null;\n  this.callbackQueue = CallbackQueue.getPooled();\n  this.reconcileTransaction = ReactUpdates.ReactReconcileTransaction.getPooled(\n  /* useCreateElement */true);\n}\n\n_assign(ReactUpdatesFlushTransaction.prototype, Transaction, {\n  getTransactionWrappers: function () {\n    return TRANSACTION_WRAPPERS;\n  },\n\n  destructor: function () {\n    this.dirtyComponentsLength = null;\n    CallbackQueue.release(this.callbackQueue);\n    this.callbackQueue = null;\n    ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction);\n    this.reconcileTransaction = null;\n  },\n\n  perform: function (method, scope, a) {\n    // Essentially calls `this.reconcileTransaction.perform(method, scope, a)`\n    // with this transaction's wrappers around it.\n    return Transaction.perform.call(this, this.reconcileTransaction.perform, this.reconcileTransaction, method, scope, a);\n  }\n});\n\nPooledClass.addPoolingTo(ReactUpdatesFlushTransaction);\n\nfunction batchedUpdates(callback, a, b, c, d, e) {\n  ensureInjected();\n  return batchingStrategy.batchedUpdates(callback, a, b, c, d, e);\n}\n\n/**\n * Array comparator for ReactComponents by mount ordering.\n *\n * @param {ReactComponent} c1 first component you're comparing\n * @param {ReactComponent} c2 second component you're comparing\n * @return {number} Return value usable by Array.prototype.sort().\n */\nfunction mountOrderComparator(c1, c2) {\n  return c1._mountOrder - c2._mountOrder;\n}\n\nfunction runBatchedUpdates(transaction) {\n  var len = transaction.dirtyComponentsLength;\n  !(len === dirtyComponents.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected flush transaction\\'s stored dirty-components length (%s) to match dirty-components array length (%s).', len, dirtyComponents.length) : _prodInvariant('124', len, dirtyComponents.length) : void 0;\n\n  // Since reconciling a component higher in the owner hierarchy usually (not\n  // always -- see shouldComponentUpdate()) will reconcile children, reconcile\n  // them before their children by sorting the array.\n  dirtyComponents.sort(mountOrderComparator);\n\n  // Any updates enqueued while reconciling must be performed after this entire\n  // batch. Otherwise, if dirtyComponents is [A, B] where A has children B and\n  // C, B could update twice in a single batch if C's render enqueues an update\n  // to B (since B would have already updated, we should skip it, and the only\n  // way we can know to do so is by checking the batch counter).\n  updateBatchNumber++;\n\n  for (var i = 0; i < len; i++) {\n    // If a component is unmounted before pending changes apply, it will still\n    // be here, but we assume that it has cleared its _pendingCallbacks and\n    // that performUpdateIfNecessary is a noop.\n    var component = dirtyComponents[i];\n\n    // If performUpdateIfNecessary happens to enqueue any new updates, we\n    // shouldn't execute the callbacks until the next render happens, so\n    // stash the callbacks first\n    var callbacks = component._pendingCallbacks;\n    component._pendingCallbacks = null;\n\n    var markerName;\n    if (ReactFeatureFlags.logTopLevelRenders) {\n      var namedComponent = component;\n      // Duck type TopLevelWrapper. This is probably always true.\n      if (component._currentElement.type.isReactTopLevelWrapper) {\n        namedComponent = component._renderedComponent;\n      }\n      markerName = 'React update: ' + namedComponent.getName();\n      console.time(markerName);\n    }\n\n    ReactReconciler.performUpdateIfNecessary(component, transaction.reconcileTransaction, updateBatchNumber);\n\n    if (markerName) {\n      console.timeEnd(markerName);\n    }\n\n    if (callbacks) {\n      for (var j = 0; j < callbacks.length; j++) {\n        transaction.callbackQueue.enqueue(callbacks[j], component.getPublicInstance());\n      }\n    }\n  }\n}\n\nvar flushBatchedUpdates = function () {\n  // ReactUpdatesFlushTransaction's wrappers will clear the dirtyComponents\n  // array and perform any updates enqueued by mount-ready handlers (i.e.,\n  // componentDidUpdate) but we need to check here too in order to catch\n  // updates enqueued by setState callbacks and asap calls.\n  while (dirtyComponents.length || asapEnqueued) {\n    if (dirtyComponents.length) {\n      var transaction = ReactUpdatesFlushTransaction.getPooled();\n      transaction.perform(runBatchedUpdates, null, transaction);\n      ReactUpdatesFlushTransaction.release(transaction);\n    }\n\n    if (asapEnqueued) {\n      asapEnqueued = false;\n      var queue = asapCallbackQueue;\n      asapCallbackQueue = CallbackQueue.getPooled();\n      queue.notifyAll();\n      CallbackQueue.release(queue);\n    }\n  }\n};\n\n/**\n * Mark a component as needing a rerender, adding an optional callback to a\n * list of functions which will be executed once the rerender occurs.\n */\nfunction enqueueUpdate(component) {\n  ensureInjected();\n\n  // Various parts of our code (such as ReactCompositeComponent's\n  // _renderValidatedComponent) assume that calls to render aren't nested;\n  // verify that that's the case. (This is called by each top-level update\n  // function, like setState, forceUpdate, etc.; creation and\n  // destruction of top-level components is guarded in ReactMount.)\n\n  if (!batchingStrategy.isBatchingUpdates) {\n    batchingStrategy.batchedUpdates(enqueueUpdate, component);\n    return;\n  }\n\n  dirtyComponents.push(component);\n  if (component._updateBatchNumber == null) {\n    component._updateBatchNumber = updateBatchNumber + 1;\n  }\n}\n\n/**\n * Enqueue a callback to be run at the end of the current batching cycle. Throws\n * if no updates are currently being performed.\n */\nfunction asap(callback, context) {\n  !batchingStrategy.isBatchingUpdates ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates.asap: Can\\'t enqueue an asap callback in a context whereupdates are not being batched.') : _prodInvariant('125') : void 0;\n  asapCallbackQueue.enqueue(callback, context);\n  asapEnqueued = true;\n}\n\nvar ReactUpdatesInjection = {\n  injectReconcileTransaction: function (ReconcileTransaction) {\n    !ReconcileTransaction ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a reconcile transaction class') : _prodInvariant('126') : void 0;\n    ReactUpdates.ReactReconcileTransaction = ReconcileTransaction;\n  },\n\n  injectBatchingStrategy: function (_batchingStrategy) {\n    !_batchingStrategy ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a batching strategy') : _prodInvariant('127') : void 0;\n    !(typeof _batchingStrategy.batchedUpdates === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a batchedUpdates() function') : _prodInvariant('128') : void 0;\n    !(typeof _batchingStrategy.isBatchingUpdates === 'boolean') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide an isBatchingUpdates boolean attribute') : _prodInvariant('129') : void 0;\n    batchingStrategy = _batchingStrategy;\n  }\n};\n\nvar ReactUpdates = {\n  /**\n   * React references `ReactReconcileTransaction` using this property in order\n   * to allow dependency injection.\n   *\n   * @internal\n   */\n  ReactReconcileTransaction: null,\n\n  batchedUpdates: batchedUpdates,\n  enqueueUpdate: enqueueUpdate,\n  flushBatchedUpdates: flushBatchedUpdates,\n  injection: ReactUpdatesInjection,\n  asap: asap\n};\n\nmodule.exports = ReactUpdates;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactUpdates.js\n// module id = 8\n// module chunks = 0","\"use strict\";\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\nfunction makeEmptyFunction(arg) {\n  return function () {\n    return arg;\n  };\n}\n\n/**\n * This function accepts and discards inputs; it has no side effects. This is\n * primarily useful idiomatically for overridable function endpoints which\n * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n */\nvar emptyFunction = function emptyFunction() {};\n\nemptyFunction.thatReturns = makeEmptyFunction;\nemptyFunction.thatReturnsFalse = makeEmptyFunction(false);\nemptyFunction.thatReturnsTrue = makeEmptyFunction(true);\nemptyFunction.thatReturnsNull = makeEmptyFunction(null);\nemptyFunction.thatReturnsThis = function () {\n  return this;\n};\nemptyFunction.thatReturnsArgument = function (arg) {\n  return arg;\n};\n\nmodule.exports = emptyFunction;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/~/fbjs/lib/emptyFunction.js\n// module id = 9\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar PooledClass = require('./PooledClass');\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar warning = require('fbjs/lib/warning');\n\nvar didWarnForAddedNewProperty = false;\nvar isProxySupported = typeof Proxy === 'function';\n\nvar shouldBeReleasedProperties = ['dispatchConfig', '_targetInst', 'nativeEvent', 'isDefaultPrevented', 'isPropagationStopped', '_dispatchListeners', '_dispatchInstances'];\n\n/**\n * @interface Event\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar EventInterface = {\n  type: null,\n  target: null,\n  // currentTarget is set when dispatching; no use in copying it here\n  currentTarget: emptyFunction.thatReturnsNull,\n  eventPhase: null,\n  bubbles: null,\n  cancelable: null,\n  timeStamp: function (event) {\n    return event.timeStamp || Date.now();\n  },\n  defaultPrevented: null,\n  isTrusted: null\n};\n\n/**\n * Synthetic events are dispatched by event plugins, typically in response to a\n * top-level event delegation handler.\n *\n * These systems should generally use pooling to reduce the frequency of garbage\n * collection. The system should check `isPersistent` to determine whether the\n * event should be released into the pool after being dispatched. Users that\n * need a persisted event should invoke `persist`.\n *\n * Synthetic events (and subclasses) implement the DOM Level 3 Events API by\n * normalizing browser quirks. Subclasses do not necessarily have to implement a\n * DOM interface; custom application-specific events can also subclass this.\n *\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {*} targetInst Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @param {DOMEventTarget} nativeEventTarget Target node.\n */\nfunction SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {\n  if (process.env.NODE_ENV !== 'production') {\n    // these have a getter/setter for warnings\n    delete this.nativeEvent;\n    delete this.preventDefault;\n    delete this.stopPropagation;\n  }\n\n  this.dispatchConfig = dispatchConfig;\n  this._targetInst = targetInst;\n  this.nativeEvent = nativeEvent;\n\n  var Interface = this.constructor.Interface;\n  for (var propName in Interface) {\n    if (!Interface.hasOwnProperty(propName)) {\n      continue;\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      delete this[propName]; // this has a getter/setter for warnings\n    }\n    var normalize = Interface[propName];\n    if (normalize) {\n      this[propName] = normalize(nativeEvent);\n    } else {\n      if (propName === 'target') {\n        this.target = nativeEventTarget;\n      } else {\n        this[propName] = nativeEvent[propName];\n      }\n    }\n  }\n\n  var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;\n  if (defaultPrevented) {\n    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;\n  } else {\n    this.isDefaultPrevented = emptyFunction.thatReturnsFalse;\n  }\n  this.isPropagationStopped = emptyFunction.thatReturnsFalse;\n  return this;\n}\n\n_assign(SyntheticEvent.prototype, {\n\n  preventDefault: function () {\n    this.defaultPrevented = true;\n    var event = this.nativeEvent;\n    if (!event) {\n      return;\n    }\n\n    if (event.preventDefault) {\n      event.preventDefault();\n    } else if (typeof event.returnValue !== 'unknown') {\n      // eslint-disable-line valid-typeof\n      event.returnValue = false;\n    }\n    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;\n  },\n\n  stopPropagation: function () {\n    var event = this.nativeEvent;\n    if (!event) {\n      return;\n    }\n\n    if (event.stopPropagation) {\n      event.stopPropagation();\n    } else if (typeof event.cancelBubble !== 'unknown') {\n      // eslint-disable-line valid-typeof\n      // The ChangeEventPlugin registers a \"propertychange\" event for\n      // IE. This event does not support bubbling or cancelling, and\n      // any references to cancelBubble throw \"Member not found\".  A\n      // typeof check of \"unknown\" circumvents this issue (and is also\n      // IE specific).\n      event.cancelBubble = true;\n    }\n\n    this.isPropagationStopped = emptyFunction.thatReturnsTrue;\n  },\n\n  /**\n   * We release all dispatched `SyntheticEvent`s after each event loop, adding\n   * them back into the pool. This allows a way to hold onto a reference that\n   * won't be added back into the pool.\n   */\n  persist: function () {\n    this.isPersistent = emptyFunction.thatReturnsTrue;\n  },\n\n  /**\n   * Checks if this event should be released back into the pool.\n   *\n   * @return {boolean} True if this should not be released, false otherwise.\n   */\n  isPersistent: emptyFunction.thatReturnsFalse,\n\n  /**\n   * `PooledClass` looks for `destructor` on each instance it releases.\n   */\n  destructor: function () {\n    var Interface = this.constructor.Interface;\n    for (var propName in Interface) {\n      if (process.env.NODE_ENV !== 'production') {\n        Object.defineProperty(this, propName, getPooledWarningPropertyDefinition(propName, Interface[propName]));\n      } else {\n        this[propName] = null;\n      }\n    }\n    for (var i = 0; i < shouldBeReleasedProperties.length; i++) {\n      this[shouldBeReleasedProperties[i]] = null;\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      Object.defineProperty(this, 'nativeEvent', getPooledWarningPropertyDefinition('nativeEvent', null));\n      Object.defineProperty(this, 'preventDefault', getPooledWarningPropertyDefinition('preventDefault', emptyFunction));\n      Object.defineProperty(this, 'stopPropagation', getPooledWarningPropertyDefinition('stopPropagation', emptyFunction));\n    }\n  }\n\n});\n\nSyntheticEvent.Interface = EventInterface;\n\nif (process.env.NODE_ENV !== 'production') {\n  if (isProxySupported) {\n    /*eslint-disable no-func-assign */\n    SyntheticEvent = new Proxy(SyntheticEvent, {\n      construct: function (target, args) {\n        return this.apply(target, Object.create(target.prototype), args);\n      },\n      apply: function (constructor, that, args) {\n        return new Proxy(constructor.apply(that, args), {\n          set: function (target, prop, value) {\n            if (prop !== 'isPersistent' && !target.constructor.Interface.hasOwnProperty(prop) && shouldBeReleasedProperties.indexOf(prop) === -1) {\n              process.env.NODE_ENV !== 'production' ? warning(didWarnForAddedNewProperty || target.isPersistent(), 'This synthetic event is reused for performance reasons. If you\\'re ' + 'seeing this, you\\'re adding a new property in the synthetic event object. ' + 'The property is never released. See ' + 'https://fb.me/react-event-pooling for more information.') : void 0;\n              didWarnForAddedNewProperty = true;\n            }\n            target[prop] = value;\n            return true;\n          }\n        });\n      }\n    });\n    /*eslint-enable no-func-assign */\n  }\n}\n/**\n * Helper to reduce boilerplate when creating subclasses.\n *\n * @param {function} Class\n * @param {?object} Interface\n */\nSyntheticEvent.augmentClass = function (Class, Interface) {\n  var Super = this;\n\n  var E = function () {};\n  E.prototype = Super.prototype;\n  var prototype = new E();\n\n  _assign(prototype, Class.prototype);\n  Class.prototype = prototype;\n  Class.prototype.constructor = Class;\n\n  Class.Interface = _assign({}, Super.Interface, Interface);\n  Class.augmentClass = Super.augmentClass;\n\n  PooledClass.addPoolingTo(Class, PooledClass.fourArgumentPooler);\n};\n\nPooledClass.addPoolingTo(SyntheticEvent, PooledClass.fourArgumentPooler);\n\nmodule.exports = SyntheticEvent;\n\n/**\n  * Helper to nullify syntheticEvent instance properties when destructing\n  *\n  * @param {object} SyntheticEvent\n  * @param {String} propName\n  * @return {object} defineProperty object\n  */\nfunction getPooledWarningPropertyDefinition(propName, getVal) {\n  var isFunction = typeof getVal === 'function';\n  return {\n    configurable: true,\n    set: set,\n    get: get\n  };\n\n  function set(val) {\n    var action = isFunction ? 'setting the method' : 'setting the property';\n    warn(action, 'This is effectively a no-op');\n    return val;\n  }\n\n  function get() {\n    var action = isFunction ? 'accessing the method' : 'accessing the property';\n    var result = isFunction ? 'This is a no-op function' : 'This is set to null';\n    warn(action, result);\n    return getVal;\n  }\n\n  function warn(action, result) {\n    var warningCondition = false;\n    process.env.NODE_ENV !== 'production' ? warning(warningCondition, 'This synthetic event is reused for performance reasons. If you\\'re seeing this, ' + 'you\\'re %s `%s` on a released/nullified synthetic event. %s. ' + 'If you must keep the original synthetic event around, use event.persist(). ' + 'See https://fb.me/react-event-pooling for more information.', action, propName, result) : void 0;\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/SyntheticEvent.js\n// module id = 10\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\n/**\n * Keeps track of the current owner.\n *\n * The current owner is the component who should own any components that are\n * currently being constructed.\n */\nvar ReactCurrentOwner = {\n\n  /**\n   * @internal\n   * @type {ReactComponent}\n   */\n  current: null\n\n};\n\nmodule.exports = ReactCurrentOwner;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/ReactCurrentOwner.js\n// module id = 11\n// module chunks = 0","/**\n * Copyright 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar DOMNamespaces = require('./DOMNamespaces');\nvar setInnerHTML = require('./setInnerHTML');\n\nvar createMicrosoftUnsafeLocalFunction = require('./createMicrosoftUnsafeLocalFunction');\nvar setTextContent = require('./setTextContent');\n\nvar ELEMENT_NODE_TYPE = 1;\nvar DOCUMENT_FRAGMENT_NODE_TYPE = 11;\n\n/**\n * In IE (8-11) and Edge, appending nodes with no children is dramatically\n * faster than appending a full subtree, so we essentially queue up the\n * .appendChild calls here and apply them so each node is added to its parent\n * before any children are added.\n *\n * In other browsers, doing so is slower or neutral compared to the other order\n * (in Firefox, twice as slow) so we only do this inversion in IE.\n *\n * See https://github.com/spicyj/innerhtml-vs-createelement-vs-clonenode.\n */\nvar enableLazy = typeof document !== 'undefined' && typeof document.documentMode === 'number' || typeof navigator !== 'undefined' && typeof navigator.userAgent === 'string' && /\\bEdge\\/\\d/.test(navigator.userAgent);\n\nfunction insertTreeChildren(tree) {\n  if (!enableLazy) {\n    return;\n  }\n  var node = tree.node;\n  var children = tree.children;\n  if (children.length) {\n    for (var i = 0; i < children.length; i++) {\n      insertTreeBefore(node, children[i], null);\n    }\n  } else if (tree.html != null) {\n    setInnerHTML(node, tree.html);\n  } else if (tree.text != null) {\n    setTextContent(node, tree.text);\n  }\n}\n\nvar insertTreeBefore = createMicrosoftUnsafeLocalFunction(function (parentNode, tree, referenceNode) {\n  // DocumentFragments aren't actually part of the DOM after insertion so\n  // appending children won't update the DOM. We need to ensure the fragment\n  // is properly populated first, breaking out of our lazy approach for just\n  // this level. Also, some <object> plugins (like Flash Player) will read\n  // <param> nodes immediately upon insertion into the DOM, so <object>\n  // must also be populated prior to insertion into the DOM.\n  if (tree.node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE || tree.node.nodeType === ELEMENT_NODE_TYPE && tree.node.nodeName.toLowerCase() === 'object' && (tree.node.namespaceURI == null || tree.node.namespaceURI === DOMNamespaces.html)) {\n    insertTreeChildren(tree);\n    parentNode.insertBefore(tree.node, referenceNode);\n  } else {\n    parentNode.insertBefore(tree.node, referenceNode);\n    insertTreeChildren(tree);\n  }\n});\n\nfunction replaceChildWithTree(oldNode, newTree) {\n  oldNode.parentNode.replaceChild(newTree.node, oldNode);\n  insertTreeChildren(newTree);\n}\n\nfunction queueChild(parentTree, childTree) {\n  if (enableLazy) {\n    parentTree.children.push(childTree);\n  } else {\n    parentTree.node.appendChild(childTree.node);\n  }\n}\n\nfunction queueHTML(tree, html) {\n  if (enableLazy) {\n    tree.html = html;\n  } else {\n    setInnerHTML(tree.node, html);\n  }\n}\n\nfunction queueText(tree, text) {\n  if (enableLazy) {\n    tree.text = text;\n  } else {\n    setTextContent(tree.node, text);\n  }\n}\n\nfunction toString() {\n  return this.node.nodeName;\n}\n\nfunction DOMLazyTree(node) {\n  return {\n    node: node,\n    children: [],\n    html: null,\n    text: null,\n    toString: toString\n  };\n}\n\nDOMLazyTree.insertTreeBefore = insertTreeBefore;\nDOMLazyTree.replaceChildWithTree = replaceChildWithTree;\nDOMLazyTree.queueChild = queueChild;\nDOMLazyTree.queueHTML = queueHTML;\nDOMLazyTree.queueText = queueText;\n\nmodule.exports = DOMLazyTree;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/DOMLazyTree.js\n// module id = 15\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar invariant = require('fbjs/lib/invariant');\n\nfunction checkMask(value, bitmask) {\n  return (value & bitmask) === bitmask;\n}\n\nvar DOMPropertyInjection = {\n  /**\n   * Mapping from normalized, camelcased property names to a configuration that\n   * specifies how the associated DOM property should be accessed or rendered.\n   */\n  MUST_USE_PROPERTY: 0x1,\n  HAS_BOOLEAN_VALUE: 0x4,\n  HAS_NUMERIC_VALUE: 0x8,\n  HAS_POSITIVE_NUMERIC_VALUE: 0x10 | 0x8,\n  HAS_OVERLOADED_BOOLEAN_VALUE: 0x20,\n\n  /**\n   * Inject some specialized knowledge about the DOM. This takes a config object\n   * with the following properties:\n   *\n   * isCustomAttribute: function that given an attribute name will return true\n   * if it can be inserted into the DOM verbatim. Useful for data-* or aria-*\n   * attributes where it's impossible to enumerate all of the possible\n   * attribute names,\n   *\n   * Properties: object mapping DOM property name to one of the\n   * DOMPropertyInjection constants or null. If your attribute isn't in here,\n   * it won't get written to the DOM.\n   *\n   * DOMAttributeNames: object mapping React attribute name to the DOM\n   * attribute name. Attribute names not specified use the **lowercase**\n   * normalized name.\n   *\n   * DOMAttributeNamespaces: object mapping React attribute name to the DOM\n   * attribute namespace URL. (Attribute names not specified use no namespace.)\n   *\n   * DOMPropertyNames: similar to DOMAttributeNames but for DOM properties.\n   * Property names not specified use the normalized name.\n   *\n   * DOMMutationMethods: Properties that require special mutation methods. If\n   * `value` is undefined, the mutation method should unset the property.\n   *\n   * @param {object} domPropertyConfig the config as described above.\n   */\n  injectDOMPropertyConfig: function (domPropertyConfig) {\n    var Injection = DOMPropertyInjection;\n    var Properties = domPropertyConfig.Properties || {};\n    var DOMAttributeNamespaces = domPropertyConfig.DOMAttributeNamespaces || {};\n    var DOMAttributeNames = domPropertyConfig.DOMAttributeNames || {};\n    var DOMPropertyNames = domPropertyConfig.DOMPropertyNames || {};\n    var DOMMutationMethods = domPropertyConfig.DOMMutationMethods || {};\n\n    if (domPropertyConfig.isCustomAttribute) {\n      DOMProperty._isCustomAttributeFunctions.push(domPropertyConfig.isCustomAttribute);\n    }\n\n    for (var propName in Properties) {\n      !!DOMProperty.properties.hasOwnProperty(propName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'injectDOMPropertyConfig(...): You\\'re trying to inject DOM property \\'%s\\' which has already been injected. You may be accidentally injecting the same DOM property config twice, or you may be injecting two configs that have conflicting property names.', propName) : _prodInvariant('48', propName) : void 0;\n\n      var lowerCased = propName.toLowerCase();\n      var propConfig = Properties[propName];\n\n      var propertyInfo = {\n        attributeName: lowerCased,\n        attributeNamespace: null,\n        propertyName: propName,\n        mutationMethod: null,\n\n        mustUseProperty: checkMask(propConfig, Injection.MUST_USE_PROPERTY),\n        hasBooleanValue: checkMask(propConfig, Injection.HAS_BOOLEAN_VALUE),\n        hasNumericValue: checkMask(propConfig, Injection.HAS_NUMERIC_VALUE),\n        hasPositiveNumericValue: checkMask(propConfig, Injection.HAS_POSITIVE_NUMERIC_VALUE),\n        hasOverloadedBooleanValue: checkMask(propConfig, Injection.HAS_OVERLOADED_BOOLEAN_VALUE)\n      };\n      !(propertyInfo.hasBooleanValue + propertyInfo.hasNumericValue + propertyInfo.hasOverloadedBooleanValue <= 1) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'DOMProperty: Value can be one of boolean, overloaded boolean, or numeric value, but not a combination: %s', propName) : _prodInvariant('50', propName) : void 0;\n\n      if (process.env.NODE_ENV !== 'production') {\n        DOMProperty.getPossibleStandardName[lowerCased] = propName;\n      }\n\n      if (DOMAttributeNames.hasOwnProperty(propName)) {\n        var attributeName = DOMAttributeNames[propName];\n        propertyInfo.attributeName = attributeName;\n        if (process.env.NODE_ENV !== 'production') {\n          DOMProperty.getPossibleStandardName[attributeName] = propName;\n        }\n      }\n\n      if (DOMAttributeNamespaces.hasOwnProperty(propName)) {\n        propertyInfo.attributeNamespace = DOMAttributeNamespaces[propName];\n      }\n\n      if (DOMPropertyNames.hasOwnProperty(propName)) {\n        propertyInfo.propertyName = DOMPropertyNames[propName];\n      }\n\n      if (DOMMutationMethods.hasOwnProperty(propName)) {\n        propertyInfo.mutationMethod = DOMMutationMethods[propName];\n      }\n\n      DOMProperty.properties[propName] = propertyInfo;\n    }\n  }\n};\n\n/* eslint-disable max-len */\nvar ATTRIBUTE_NAME_START_CHAR = ':A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD';\n/* eslint-enable max-len */\n\n/**\n * DOMProperty exports lookup objects that can be used like functions:\n *\n *   > DOMProperty.isValid['id']\n *   true\n *   > DOMProperty.isValid['foobar']\n *   undefined\n *\n * Although this may be confusing, it performs better in general.\n *\n * @see http://jsperf.com/key-exists\n * @see http://jsperf.com/key-missing\n */\nvar DOMProperty = {\n\n  ID_ATTRIBUTE_NAME: 'data-reactid',\n  ROOT_ATTRIBUTE_NAME: 'data-reactroot',\n\n  ATTRIBUTE_NAME_START_CHAR: ATTRIBUTE_NAME_START_CHAR,\n  ATTRIBUTE_NAME_CHAR: ATTRIBUTE_NAME_START_CHAR + '\\\\-.0-9\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040',\n\n  /**\n   * Map from property \"standard name\" to an object with info about how to set\n   * the property in the DOM. Each object contains:\n   *\n   * attributeName:\n   *   Used when rendering markup or with `*Attribute()`.\n   * attributeNamespace\n   * propertyName:\n   *   Used on DOM node instances. (This includes properties that mutate due to\n   *   external factors.)\n   * mutationMethod:\n   *   If non-null, used instead of the property or `setAttribute()` after\n   *   initial render.\n   * mustUseProperty:\n   *   Whether the property must be accessed and mutated as an object property.\n   * hasBooleanValue:\n   *   Whether the property should be removed when set to a falsey value.\n   * hasNumericValue:\n   *   Whether the property must be numeric or parse as a numeric and should be\n   *   removed when set to a falsey value.\n   * hasPositiveNumericValue:\n   *   Whether the property must be positive numeric or parse as a positive\n   *   numeric and should be removed when set to a falsey value.\n   * hasOverloadedBooleanValue:\n   *   Whether the property can be used as a flag as well as with a value.\n   *   Removed when strictly equal to false; present without a value when\n   *   strictly equal to true; present with a value otherwise.\n   */\n  properties: {},\n\n  /**\n   * Mapping from lowercase property names to the properly cased version, used\n   * to warn in the case of missing properties. Available only in __DEV__.\n   *\n   * autofocus is predefined, because adding it to the property whitelist\n   * causes unintended side effects.\n   *\n   * @type {Object}\n   */\n  getPossibleStandardName: process.env.NODE_ENV !== 'production' ? { autofocus: 'autoFocus' } : null,\n\n  /**\n   * All of the isCustomAttribute() functions that have been injected.\n   */\n  _isCustomAttributeFunctions: [],\n\n  /**\n   * Checks whether a property name is a custom attribute.\n   * @method\n   */\n  isCustomAttribute: function (attributeName) {\n    for (var i = 0; i < DOMProperty._isCustomAttributeFunctions.length; i++) {\n      var isCustomAttributeFn = DOMProperty._isCustomAttributeFunctions[i];\n      if (isCustomAttributeFn(attributeName)) {\n        return true;\n      }\n    }\n    return false;\n  },\n\n  injection: DOMPropertyInjection\n};\n\nmodule.exports = DOMProperty;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/DOMProperty.js\n// module id = 16\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar ReactRef = require('./ReactRef');\nvar ReactInstrumentation = require('./ReactInstrumentation');\n\nvar warning = require('fbjs/lib/warning');\n\n/**\n * Helper to call ReactRef.attachRefs with this composite component, split out\n * to avoid allocations in the transaction mount-ready queue.\n */\nfunction attachRefs() {\n  ReactRef.attachRefs(this, this._currentElement);\n}\n\nvar ReactReconciler = {\n\n  /**\n   * Initializes the component, renders markup, and registers event listeners.\n   *\n   * @param {ReactComponent} internalInstance\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n   * @param {?object} the containing host component instance\n   * @param {?object} info about the host container\n   * @return {?string} Rendered markup to be inserted into the DOM.\n   * @final\n   * @internal\n   */\n  mountComponent: function (internalInstance, transaction, hostParent, hostContainerInfo, context, parentDebugID // 0 in production and for roots\n  ) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (internalInstance._debugID !== 0) {\n        ReactInstrumentation.debugTool.onBeforeMountComponent(internalInstance._debugID, internalInstance._currentElement, parentDebugID);\n      }\n    }\n    var markup = internalInstance.mountComponent(transaction, hostParent, hostContainerInfo, context, parentDebugID);\n    if (internalInstance._currentElement && internalInstance._currentElement.ref != null) {\n      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      if (internalInstance._debugID !== 0) {\n        ReactInstrumentation.debugTool.onMountComponent(internalInstance._debugID);\n      }\n    }\n    return markup;\n  },\n\n  /**\n   * Returns a value that can be passed to\n   * ReactComponentEnvironment.replaceNodeWithMarkup.\n   */\n  getHostNode: function (internalInstance) {\n    return internalInstance.getHostNode();\n  },\n\n  /**\n   * Releases any resources allocated by `mountComponent`.\n   *\n   * @final\n   * @internal\n   */\n  unmountComponent: function (internalInstance, safely) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (internalInstance._debugID !== 0) {\n        ReactInstrumentation.debugTool.onBeforeUnmountComponent(internalInstance._debugID);\n      }\n    }\n    ReactRef.detachRefs(internalInstance, internalInstance._currentElement);\n    internalInstance.unmountComponent(safely);\n    if (process.env.NODE_ENV !== 'production') {\n      if (internalInstance._debugID !== 0) {\n        ReactInstrumentation.debugTool.onUnmountComponent(internalInstance._debugID);\n      }\n    }\n  },\n\n  /**\n   * Update a component using a new element.\n   *\n   * @param {ReactComponent} internalInstance\n   * @param {ReactElement} nextElement\n   * @param {ReactReconcileTransaction} transaction\n   * @param {object} context\n   * @internal\n   */\n  receiveComponent: function (internalInstance, nextElement, transaction, context) {\n    var prevElement = internalInstance._currentElement;\n\n    if (nextElement === prevElement && context === internalInstance._context) {\n      // Since elements are immutable after the owner is rendered,\n      // we can do a cheap identity compare here to determine if this is a\n      // superfluous reconcile. It's possible for state to be mutable but such\n      // change should trigger an update of the owner which would recreate\n      // the element. We explicitly check for the existence of an owner since\n      // it's possible for an element created outside a composite to be\n      // deeply mutated and reused.\n\n      // TODO: Bailing out early is just a perf optimization right?\n      // TODO: Removing the return statement should affect correctness?\n      return;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (internalInstance._debugID !== 0) {\n        ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, nextElement);\n      }\n    }\n\n    var refsChanged = ReactRef.shouldUpdateRefs(prevElement, nextElement);\n\n    if (refsChanged) {\n      ReactRef.detachRefs(internalInstance, prevElement);\n    }\n\n    internalInstance.receiveComponent(nextElement, transaction, context);\n\n    if (refsChanged && internalInstance._currentElement && internalInstance._currentElement.ref != null) {\n      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (internalInstance._debugID !== 0) {\n        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);\n      }\n    }\n  },\n\n  /**\n   * Flush any dirty changes in a component.\n   *\n   * @param {ReactComponent} internalInstance\n   * @param {ReactReconcileTransaction} transaction\n   * @internal\n   */\n  performUpdateIfNecessary: function (internalInstance, transaction, updateBatchNumber) {\n    if (internalInstance._updateBatchNumber !== updateBatchNumber) {\n      // The component's enqueued batch number should always be the current\n      // batch or the following one.\n      process.env.NODE_ENV !== 'production' ? warning(internalInstance._updateBatchNumber == null || internalInstance._updateBatchNumber === updateBatchNumber + 1, 'performUpdateIfNecessary: Unexpected batch number (current %s, ' + 'pending %s)', updateBatchNumber, internalInstance._updateBatchNumber) : void 0;\n      return;\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      if (internalInstance._debugID !== 0) {\n        ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, internalInstance._currentElement);\n      }\n    }\n    internalInstance.performUpdateIfNecessary(transaction);\n    if (process.env.NODE_ENV !== 'production') {\n      if (internalInstance._debugID !== 0) {\n        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);\n      }\n    }\n  }\n\n};\n\nmodule.exports = ReactReconciler;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactReconciler.js\n// module id = 17\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar ReactChildren = require('./ReactChildren');\nvar ReactComponent = require('./ReactComponent');\nvar ReactPureComponent = require('./ReactPureComponent');\nvar ReactClass = require('./ReactClass');\nvar ReactDOMFactories = require('./ReactDOMFactories');\nvar ReactElement = require('./ReactElement');\nvar ReactPropTypes = require('./ReactPropTypes');\nvar ReactVersion = require('./ReactVersion');\n\nvar onlyChild = require('./onlyChild');\nvar warning = require('fbjs/lib/warning');\n\nvar createElement = ReactElement.createElement;\nvar createFactory = ReactElement.createFactory;\nvar cloneElement = ReactElement.cloneElement;\n\nif (process.env.NODE_ENV !== 'production') {\n  var canDefineProperty = require('./canDefineProperty');\n  var ReactElementValidator = require('./ReactElementValidator');\n  var didWarnPropTypesDeprecated = false;\n  createElement = ReactElementValidator.createElement;\n  createFactory = ReactElementValidator.createFactory;\n  cloneElement = ReactElementValidator.cloneElement;\n}\n\nvar __spread = _assign;\n\nif (process.env.NODE_ENV !== 'production') {\n  var warned = false;\n  __spread = function () {\n    process.env.NODE_ENV !== 'production' ? warning(warned, 'React.__spread is deprecated and should not be used. Use ' + 'Object.assign directly or another helper function with similar ' + 'semantics. You may be seeing this warning due to your compiler. ' + 'See https://fb.me/react-spread-deprecation for more details.') : void 0;\n    warned = true;\n    return _assign.apply(null, arguments);\n  };\n}\n\nvar React = {\n\n  // Modern\n\n  Children: {\n    map: ReactChildren.map,\n    forEach: ReactChildren.forEach,\n    count: ReactChildren.count,\n    toArray: ReactChildren.toArray,\n    only: onlyChild\n  },\n\n  Component: ReactComponent,\n  PureComponent: ReactPureComponent,\n\n  createElement: createElement,\n  cloneElement: cloneElement,\n  isValidElement: ReactElement.isValidElement,\n\n  // Classic\n\n  PropTypes: ReactPropTypes,\n  createClass: ReactClass.createClass,\n  createFactory: createFactory,\n  createMixin: function (mixin) {\n    // Currently a noop. Will be used to validate and trace mixins.\n    return mixin;\n  },\n\n  // This looks DOM specific but these are actually isomorphic helpers\n  // since they are just generating DOM strings.\n  DOM: ReactDOMFactories,\n\n  version: ReactVersion,\n\n  // Deprecated hook for JSX spread, don't use this for anything.\n  __spread: __spread\n};\n\n// TODO: Fix tests so that this deprecation warning doesn't cause failures.\nif (process.env.NODE_ENV !== 'production') {\n  if (canDefineProperty) {\n    Object.defineProperty(React, 'PropTypes', {\n      get: function () {\n        process.env.NODE_ENV !== 'production' ? warning(didWarnPropTypesDeprecated, 'Accessing PropTypes via the main React package is deprecated. Use ' + 'the prop-types package from npm instead.') : void 0;\n        didWarnPropTypesDeprecated = true;\n        return ReactPropTypes;\n      }\n    });\n  }\n}\n\nmodule.exports = React;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/React.js\n// module id = 18\n// module chunks = 0","/**\n * Copyright 2014-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar ReactCurrentOwner = require('./ReactCurrentOwner');\n\nvar warning = require('fbjs/lib/warning');\nvar canDefineProperty = require('./canDefineProperty');\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar REACT_ELEMENT_TYPE = require('./ReactElementSymbol');\n\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true\n};\n\nvar specialPropKeyWarningShown, specialPropRefWarningShown;\n\nfunction hasValidRef(config) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n  return config.key !== undefined;\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  var warnAboutAccessingKey = function () {\n    if (!specialPropKeyWarningShown) {\n      specialPropKeyWarningShown = true;\n      process.env.NODE_ENV !== 'production' ? warning(false, '%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;\n    }\n  };\n  warnAboutAccessingKey.isReactWarning = true;\n  Object.defineProperty(props, 'key', {\n    get: warnAboutAccessingKey,\n    configurable: true\n  });\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  var warnAboutAccessingRef = function () {\n    if (!specialPropRefWarningShown) {\n      specialPropRefWarningShown = true;\n      process.env.NODE_ENV !== 'production' ? warning(false, '%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;\n    }\n  };\n  warnAboutAccessingRef.isReactWarning = true;\n  Object.defineProperty(props, 'ref', {\n    get: warnAboutAccessingRef,\n    configurable: true\n  });\n}\n\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, no instanceof check\n * will work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} key\n * @param {string|object} ref\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @param {*} owner\n * @param {*} props\n * @internal\n */\nvar ReactElement = function (type, key, ref, self, source, owner, props) {\n  var element = {\n    // This tag allow us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n\n    // Record the component responsible for creating this element.\n    _owner: owner\n  };\n\n  if (process.env.NODE_ENV !== 'production') {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {};\n\n    // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n    if (canDefineProperty) {\n      Object.defineProperty(element._store, 'validated', {\n        configurable: false,\n        enumerable: false,\n        writable: true,\n        value: false\n      });\n      // self and source are DEV only properties.\n      Object.defineProperty(element, '_self', {\n        configurable: false,\n        enumerable: false,\n        writable: false,\n        value: self\n      });\n      // Two elements created in two different places should be considered\n      // equal for testing purposes and therefore we hide it from enumeration.\n      Object.defineProperty(element, '_source', {\n        configurable: false,\n        enumerable: false,\n        writable: false,\n        value: source\n      });\n    } else {\n      element._store.validated = false;\n      element._self = self;\n      element._source = source;\n    }\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n};\n\n/**\n * Create and return a new ReactElement of the given type.\n * See https://facebook.github.io/react/docs/top-level-api.html#react.createelement\n */\nReactElement.createElement = function (type, config, children) {\n  var propName;\n\n  // Reserved names are extracted\n  var props = {};\n\n  var key = null;\n  var ref = null;\n  var self = null;\n  var source = null;\n\n  if (config != null) {\n    if (hasValidRef(config)) {\n      ref = config.ref;\n    }\n    if (hasValidKey(config)) {\n      key = '' + config.key;\n    }\n\n    self = config.__self === undefined ? null : config.__self;\n    source = config.__source === undefined ? null : config.__source;\n    // Remaining properties are added to a new props object\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    }\n  }\n\n  // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n  var childrenLength = arguments.length - 2;\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      if (Object.freeze) {\n        Object.freeze(childArray);\n      }\n    }\n    props.children = childArray;\n  }\n\n  // Resolve default props\n  if (type && type.defaultProps) {\n    var defaultProps = type.defaultProps;\n    for (propName in defaultProps) {\n      if (props[propName] === undefined) {\n        props[propName] = defaultProps[propName];\n      }\n    }\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    if (key || ref) {\n      if (typeof props.$$typeof === 'undefined' || props.$$typeof !== REACT_ELEMENT_TYPE) {\n        var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n        if (key) {\n          defineKeyPropWarningGetter(props, displayName);\n        }\n        if (ref) {\n          defineRefPropWarningGetter(props, displayName);\n        }\n      }\n    }\n  }\n  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n};\n\n/**\n * Return a function that produces ReactElements of a given type.\n * See https://facebook.github.io/react/docs/top-level-api.html#react.createfactory\n */\nReactElement.createFactory = function (type) {\n  var factory = ReactElement.createElement.bind(null, type);\n  // Expose the type on the factory and the prototype so that it can be\n  // easily accessed on elements. E.g. `<Foo />.type === Foo`.\n  // This should not be named `constructor` since this may not be the function\n  // that created the element, and it may not even be a constructor.\n  // Legacy hook TODO: Warn if this is accessed\n  factory.type = type;\n  return factory;\n};\n\nReactElement.cloneAndReplaceKey = function (oldElement, newKey) {\n  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);\n\n  return newElement;\n};\n\n/**\n * Clone and return a new ReactElement using element as the starting point.\n * See https://facebook.github.io/react/docs/top-level-api.html#react.cloneelement\n */\nReactElement.cloneElement = function (element, config, children) {\n  var propName;\n\n  // Original props are copied\n  var props = _assign({}, element.props);\n\n  // Reserved names are extracted\n  var key = element.key;\n  var ref = element.ref;\n  // Self is preserved since the owner is preserved.\n  var self = element._self;\n  // Source is preserved since cloneElement is unlikely to be targeted by a\n  // transpiler, and the original source is probably a better indicator of the\n  // true owner.\n  var source = element._source;\n\n  // Owner will be preserved, unless ref is overridden\n  var owner = element._owner;\n\n  if (config != null) {\n    if (hasValidRef(config)) {\n      // Silently steal the ref from the parent.\n      ref = config.ref;\n      owner = ReactCurrentOwner.current;\n    }\n    if (hasValidKey(config)) {\n      key = '' + config.key;\n    }\n\n    // Remaining properties override existing props\n    var defaultProps;\n    if (element.type && element.type.defaultProps) {\n      defaultProps = element.type.defaultProps;\n    }\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        if (config[propName] === undefined && defaultProps !== undefined) {\n          // Resolve default props\n          props[propName] = defaultProps[propName];\n        } else {\n          props[propName] = config[propName];\n        }\n      }\n    }\n  }\n\n  // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n  var childrenLength = arguments.length - 2;\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n    props.children = childArray;\n  }\n\n  return ReactElement(element.type, key, ref, self, source, owner, props);\n};\n\n/**\n * Verifies the object is a ReactElement.\n * See https://facebook.github.io/react/docs/top-level-api.html#react.isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a valid component.\n * @final\n */\nReactElement.isValidElement = function (object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n};\n\nmodule.exports = ReactElement;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/ReactElement.js\n// module id = 19\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar EventPluginRegistry = require('./EventPluginRegistry');\nvar EventPluginUtils = require('./EventPluginUtils');\nvar ReactErrorUtils = require('./ReactErrorUtils');\n\nvar accumulateInto = require('./accumulateInto');\nvar forEachAccumulated = require('./forEachAccumulated');\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * Internal store for event listeners\n */\nvar listenerBank = {};\n\n/**\n * Internal queue of events that have accumulated their dispatches and are\n * waiting to have their dispatches executed.\n */\nvar eventQueue = null;\n\n/**\n * Dispatches an event and releases it back into the pool, unless persistent.\n *\n * @param {?object} event Synthetic event to be dispatched.\n * @param {boolean} simulated If the event is simulated (changes exn behavior)\n * @private\n */\nvar executeDispatchesAndRelease = function (event, simulated) {\n  if (event) {\n    EventPluginUtils.executeDispatchesInOrder(event, simulated);\n\n    if (!event.isPersistent()) {\n      event.constructor.release(event);\n    }\n  }\n};\nvar executeDispatchesAndReleaseSimulated = function (e) {\n  return executeDispatchesAndRelease(e, true);\n};\nvar executeDispatchesAndReleaseTopLevel = function (e) {\n  return executeDispatchesAndRelease(e, false);\n};\n\nvar getDictionaryKey = function (inst) {\n  // Prevents V8 performance issue:\n  // https://github.com/facebook/react/pull/7232\n  return '.' + inst._rootNodeID;\n};\n\nfunction isInteractive(tag) {\n  return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';\n}\n\nfunction shouldPreventMouseEvent(name, type, props) {\n  switch (name) {\n    case 'onClick':\n    case 'onClickCapture':\n    case 'onDoubleClick':\n    case 'onDoubleClickCapture':\n    case 'onMouseDown':\n    case 'onMouseDownCapture':\n    case 'onMouseMove':\n    case 'onMouseMoveCapture':\n    case 'onMouseUp':\n    case 'onMouseUpCapture':\n      return !!(props.disabled && isInteractive(type));\n    default:\n      return false;\n  }\n}\n\n/**\n * This is a unified interface for event plugins to be installed and configured.\n *\n * Event plugins can implement the following properties:\n *\n *   `extractEvents` {function(string, DOMEventTarget, string, object): *}\n *     Required. When a top-level event is fired, this method is expected to\n *     extract synthetic events that will in turn be queued and dispatched.\n *\n *   `eventTypes` {object}\n *     Optional, plugins that fire events must publish a mapping of registration\n *     names that are used to register listeners. Values of this mapping must\n *     be objects that contain `registrationName` or `phasedRegistrationNames`.\n *\n *   `executeDispatch` {function(object, function, string)}\n *     Optional, allows plugins to override how an event gets dispatched. By\n *     default, the listener is simply invoked.\n *\n * Each plugin that is injected into `EventsPluginHub` is immediately operable.\n *\n * @public\n */\nvar EventPluginHub = {\n\n  /**\n   * Methods for injecting dependencies.\n   */\n  injection: {\n\n    /**\n     * @param {array} InjectedEventPluginOrder\n     * @public\n     */\n    injectEventPluginOrder: EventPluginRegistry.injectEventPluginOrder,\n\n    /**\n     * @param {object} injectedNamesToPlugins Map from names to plugin modules.\n     */\n    injectEventPluginsByName: EventPluginRegistry.injectEventPluginsByName\n\n  },\n\n  /**\n   * Stores `listener` at `listenerBank[registrationName][key]`. Is idempotent.\n   *\n   * @param {object} inst The instance, which is the source of events.\n   * @param {string} registrationName Name of listener (e.g. `onClick`).\n   * @param {function} listener The callback to store.\n   */\n  putListener: function (inst, registrationName, listener) {\n    !(typeof listener === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected %s listener to be a function, instead got type %s', registrationName, typeof listener) : _prodInvariant('94', registrationName, typeof listener) : void 0;\n\n    var key = getDictionaryKey(inst);\n    var bankForRegistrationName = listenerBank[registrationName] || (listenerBank[registrationName] = {});\n    bankForRegistrationName[key] = listener;\n\n    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];\n    if (PluginModule && PluginModule.didPutListener) {\n      PluginModule.didPutListener(inst, registrationName, listener);\n    }\n  },\n\n  /**\n   * @param {object} inst The instance, which is the source of events.\n   * @param {string} registrationName Name of listener (e.g. `onClick`).\n   * @return {?function} The stored callback.\n   */\n  getListener: function (inst, registrationName) {\n    // TODO: shouldPreventMouseEvent is DOM-specific and definitely should not\n    // live here; needs to be moved to a better place soon\n    var bankForRegistrationName = listenerBank[registrationName];\n    if (shouldPreventMouseEvent(registrationName, inst._currentElement.type, inst._currentElement.props)) {\n      return null;\n    }\n    var key = getDictionaryKey(inst);\n    return bankForRegistrationName && bankForRegistrationName[key];\n  },\n\n  /**\n   * Deletes a listener from the registration bank.\n   *\n   * @param {object} inst The instance, which is the source of events.\n   * @param {string} registrationName Name of listener (e.g. `onClick`).\n   */\n  deleteListener: function (inst, registrationName) {\n    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];\n    if (PluginModule && PluginModule.willDeleteListener) {\n      PluginModule.willDeleteListener(inst, registrationName);\n    }\n\n    var bankForRegistrationName = listenerBank[registrationName];\n    // TODO: This should never be null -- when is it?\n    if (bankForRegistrationName) {\n      var key = getDictionaryKey(inst);\n      delete bankForRegistrationName[key];\n    }\n  },\n\n  /**\n   * Deletes all listeners for the DOM element with the supplied ID.\n   *\n   * @param {object} inst The instance, which is the source of events.\n   */\n  deleteAllListeners: function (inst) {\n    var key = getDictionaryKey(inst);\n    for (var registrationName in listenerBank) {\n      if (!listenerBank.hasOwnProperty(registrationName)) {\n        continue;\n      }\n\n      if (!listenerBank[registrationName][key]) {\n        continue;\n      }\n\n      var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];\n      if (PluginModule && PluginModule.willDeleteListener) {\n        PluginModule.willDeleteListener(inst, registrationName);\n      }\n\n      delete listenerBank[registrationName][key];\n    }\n  },\n\n  /**\n   * Allows registered plugins an opportunity to extract events from top-level\n   * native browser events.\n   *\n   * @return {*} An accumulation of synthetic events.\n   * @internal\n   */\n  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n    var events;\n    var plugins = EventPluginRegistry.plugins;\n    for (var i = 0; i < plugins.length; i++) {\n      // Not every plugin in the ordering may be loaded at runtime.\n      var possiblePlugin = plugins[i];\n      if (possiblePlugin) {\n        var extractedEvents = possiblePlugin.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);\n        if (extractedEvents) {\n          events = accumulateInto(events, extractedEvents);\n        }\n      }\n    }\n    return events;\n  },\n\n  /**\n   * Enqueues a synthetic event that should be dispatched when\n   * `processEventQueue` is invoked.\n   *\n   * @param {*} events An accumulation of synthetic events.\n   * @internal\n   */\n  enqueueEvents: function (events) {\n    if (events) {\n      eventQueue = accumulateInto(eventQueue, events);\n    }\n  },\n\n  /**\n   * Dispatches all synthetic events on the event queue.\n   *\n   * @internal\n   */\n  processEventQueue: function (simulated) {\n    // Set `eventQueue` to null before processing it so that we can tell if more\n    // events get enqueued while processing.\n    var processingEventQueue = eventQueue;\n    eventQueue = null;\n    if (simulated) {\n      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseSimulated);\n    } else {\n      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);\n    }\n    !!eventQueue ? process.env.NODE_ENV !== 'production' ? invariant(false, 'processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented.') : _prodInvariant('95') : void 0;\n    // This would be a good time to rethrow if any of the event handlers threw.\n    ReactErrorUtils.rethrowCaughtError();\n  },\n\n  /**\n   * These are needed for tests only. Do not use!\n   */\n  __purge: function () {\n    listenerBank = {};\n  },\n\n  __getListenerBank: function () {\n    return listenerBank;\n  }\n\n};\n\nmodule.exports = EventPluginHub;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/EventPluginHub.js\n// module id = 21\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar EventPluginHub = require('./EventPluginHub');\nvar EventPluginUtils = require('./EventPluginUtils');\n\nvar accumulateInto = require('./accumulateInto');\nvar forEachAccumulated = require('./forEachAccumulated');\nvar warning = require('fbjs/lib/warning');\n\nvar getListener = EventPluginHub.getListener;\n\n/**\n * Some event types have a notion of different registration names for different\n * \"phases\" of propagation. This finds listeners by a given phase.\n */\nfunction listenerAtPhase(inst, event, propagationPhase) {\n  var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];\n  return getListener(inst, registrationName);\n}\n\n/**\n * Tags a `SyntheticEvent` with dispatched listeners. Creating this function\n * here, allows us to not have to bind or create functions for each event.\n * Mutating the event's members allows us to not have to create a wrapping\n * \"dispatch\" object that pairs the event with the listener.\n */\nfunction accumulateDirectionalDispatches(inst, phase, event) {\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== 'production' ? warning(inst, 'Dispatching inst must not be null') : void 0;\n  }\n  var listener = listenerAtPhase(inst, event, phase);\n  if (listener) {\n    event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);\n    event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);\n  }\n}\n\n/**\n * Collect dispatches (must be entirely collected before dispatching - see unit\n * tests). Lazily allocate the array to conserve memory.  We must loop through\n * each event and perform the traversal for each one. We cannot perform a\n * single traversal for the entire collection of events because each event may\n * have a different target.\n */\nfunction accumulateTwoPhaseDispatchesSingle(event) {\n  if (event && event.dispatchConfig.phasedRegistrationNames) {\n    EventPluginUtils.traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);\n  }\n}\n\n/**\n * Same as `accumulateTwoPhaseDispatchesSingle`, but skips over the targetID.\n */\nfunction accumulateTwoPhaseDispatchesSingleSkipTarget(event) {\n  if (event && event.dispatchConfig.phasedRegistrationNames) {\n    var targetInst = event._targetInst;\n    var parentInst = targetInst ? EventPluginUtils.getParentInstance(targetInst) : null;\n    EventPluginUtils.traverseTwoPhase(parentInst, accumulateDirectionalDispatches, event);\n  }\n}\n\n/**\n * Accumulates without regard to direction, does not look for phased\n * registration names. Same as `accumulateDirectDispatchesSingle` but without\n * requiring that the `dispatchMarker` be the same as the dispatched ID.\n */\nfunction accumulateDispatches(inst, ignoredDirection, event) {\n  if (event && event.dispatchConfig.registrationName) {\n    var registrationName = event.dispatchConfig.registrationName;\n    var listener = getListener(inst, registrationName);\n    if (listener) {\n      event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);\n      event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);\n    }\n  }\n}\n\n/**\n * Accumulates dispatches on an `SyntheticEvent`, but only for the\n * `dispatchMarker`.\n * @param {SyntheticEvent} event\n */\nfunction accumulateDirectDispatchesSingle(event) {\n  if (event && event.dispatchConfig.registrationName) {\n    accumulateDispatches(event._targetInst, null, event);\n  }\n}\n\nfunction accumulateTwoPhaseDispatches(events) {\n  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);\n}\n\nfunction accumulateTwoPhaseDispatchesSkipTarget(events) {\n  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingleSkipTarget);\n}\n\nfunction accumulateEnterLeaveDispatches(leave, enter, from, to) {\n  EventPluginUtils.traverseEnterLeave(from, to, accumulateDispatches, leave, enter);\n}\n\nfunction accumulateDirectDispatches(events) {\n  forEachAccumulated(events, accumulateDirectDispatchesSingle);\n}\n\n/**\n * A small set of propagation patterns, each of which will accept a small amount\n * of information, and generate a set of \"dispatch ready event objects\" - which\n * are sets of events that have already been annotated with a set of dispatched\n * listener functions/ids. The API is designed this way to discourage these\n * propagation strategies from actually executing the dispatches, since we\n * always want to collect the entire set of dispatches before executing event a\n * single one.\n *\n * @constructor EventPropagators\n */\nvar EventPropagators = {\n  accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,\n  accumulateTwoPhaseDispatchesSkipTarget: accumulateTwoPhaseDispatchesSkipTarget,\n  accumulateDirectDispatches: accumulateDirectDispatches,\n  accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches\n};\n\nmodule.exports = EventPropagators;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/EventPropagators.js\n// module id = 22\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\n/**\n * `ReactInstanceMap` maintains a mapping from a public facing stateful\n * instance (key) and the internal representation (value). This allows public\n * methods to accept the user facing instance as an argument and map them back\n * to internal methods.\n */\n\n// TODO: Replace this with ES6: var ReactInstanceMap = new Map();\n\nvar ReactInstanceMap = {\n\n  /**\n   * This API should be called `delete` but we'd have to make sure to always\n   * transform these to strings for IE support. When this transform is fully\n   * supported we can rename it.\n   */\n  remove: function (key) {\n    key._reactInternalInstance = undefined;\n  },\n\n  get: function (key) {\n    return key._reactInternalInstance;\n  },\n\n  has: function (key) {\n    return key._reactInternalInstance !== undefined;\n  },\n\n  set: function (key, value) {\n    key._reactInternalInstance = value;\n  }\n\n};\n\nmodule.exports = ReactInstanceMap;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactInstanceMap.js\n// module id = 23\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar SyntheticEvent = require('./SyntheticEvent');\n\nvar getEventTarget = require('./getEventTarget');\n\n/**\n * @interface UIEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar UIEventInterface = {\n  view: function (event) {\n    if (event.view) {\n      return event.view;\n    }\n\n    var target = getEventTarget(event);\n    if (target.window === target) {\n      // target is a window object\n      return target;\n    }\n\n    var doc = target.ownerDocument;\n    // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.\n    if (doc) {\n      return doc.defaultView || doc.parentWindow;\n    } else {\n      return window;\n    }\n  },\n  detail: function (event) {\n    return event.detail || 0;\n  }\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticEvent}\n */\nfunction SyntheticUIEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticEvent.augmentClass(SyntheticUIEvent, UIEventInterface);\n\nmodule.exports = SyntheticUIEvent;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/SyntheticUIEvent.js\n// module id = 24\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar EventPluginRegistry = require('./EventPluginRegistry');\nvar ReactEventEmitterMixin = require('./ReactEventEmitterMixin');\nvar ViewportMetrics = require('./ViewportMetrics');\n\nvar getVendorPrefixedEventName = require('./getVendorPrefixedEventName');\nvar isEventSupported = require('./isEventSupported');\n\n/**\n * Summary of `ReactBrowserEventEmitter` event handling:\n *\n *  - Top-level delegation is used to trap most native browser events. This\n *    may only occur in the main thread and is the responsibility of\n *    ReactEventListener, which is injected and can therefore support pluggable\n *    event sources. This is the only work that occurs in the main thread.\n *\n *  - We normalize and de-duplicate events to account for browser quirks. This\n *    may be done in the worker thread.\n *\n *  - Forward these native events (with the associated top-level type used to\n *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want\n *    to extract any synthetic events.\n *\n *  - The `EventPluginHub` will then process each event by annotating them with\n *    \"dispatches\", a sequence of listeners and IDs that care about that event.\n *\n *  - The `EventPluginHub` then dispatches the events.\n *\n * Overview of React and the event system:\n *\n * +------------+    .\n * |    DOM     |    .\n * +------------+    .\n *       |           .\n *       v           .\n * +------------+    .\n * | ReactEvent |    .\n * |  Listener  |    .\n * +------------+    .                         +-----------+\n *       |           .               +--------+|SimpleEvent|\n *       |           .               |         |Plugin     |\n * +-----|------+    .               v         +-----------+\n * |     |      |    .    +--------------+                    +------------+\n * |     +-----------.--->|EventPluginHub|                    |    Event   |\n * |            |    .    |              |     +-----------+  | Propagators|\n * | ReactEvent |    .    |              |     |TapEvent   |  |------------|\n * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|\n * |            |    .    |              |     +-----------+  |  utilities |\n * |     +-----------.--->|              |                    +------------+\n * |     |      |    .    +--------------+\n * +-----|------+    .                ^        +-----------+\n *       |           .                |        |Enter/Leave|\n *       +           .                +-------+|Plugin     |\n * +-------------+   .                         +-----------+\n * | application |   .\n * |-------------|   .\n * |             |   .\n * |             |   .\n * +-------------+   .\n *                   .\n *    React Core     .  General Purpose Event Plugin System\n */\n\nvar hasEventPageXY;\nvar alreadyListeningTo = {};\nvar isMonitoringScrollValue = false;\nvar reactTopListenersCounter = 0;\n\n// For events like 'submit' which don't consistently bubble (which we trap at a\n// lower node than `document`), binding at `document` would cause duplicate\n// events so we don't include them here\nvar topEventMapping = {\n  topAbort: 'abort',\n  topAnimationEnd: getVendorPrefixedEventName('animationend') || 'animationend',\n  topAnimationIteration: getVendorPrefixedEventName('animationiteration') || 'animationiteration',\n  topAnimationStart: getVendorPrefixedEventName('animationstart') || 'animationstart',\n  topBlur: 'blur',\n  topCanPlay: 'canplay',\n  topCanPlayThrough: 'canplaythrough',\n  topChange: 'change',\n  topClick: 'click',\n  topCompositionEnd: 'compositionend',\n  topCompositionStart: 'compositionstart',\n  topCompositionUpdate: 'compositionupdate',\n  topContextMenu: 'contextmenu',\n  topCopy: 'copy',\n  topCut: 'cut',\n  topDoubleClick: 'dblclick',\n  topDrag: 'drag',\n  topDragEnd: 'dragend',\n  topDragEnter: 'dragenter',\n  topDragExit: 'dragexit',\n  topDragLeave: 'dragleave',\n  topDragOver: 'dragover',\n  topDragStart: 'dragstart',\n  topDrop: 'drop',\n  topDurationChange: 'durationchange',\n  topEmptied: 'emptied',\n  topEncrypted: 'encrypted',\n  topEnded: 'ended',\n  topError: 'error',\n  topFocus: 'focus',\n  topInput: 'input',\n  topKeyDown: 'keydown',\n  topKeyPress: 'keypress',\n  topKeyUp: 'keyup',\n  topLoadedData: 'loadeddata',\n  topLoadedMetadata: 'loadedmetadata',\n  topLoadStart: 'loadstart',\n  topMouseDown: 'mousedown',\n  topMouseMove: 'mousemove',\n  topMouseOut: 'mouseout',\n  topMouseOver: 'mouseover',\n  topMouseUp: 'mouseup',\n  topPaste: 'paste',\n  topPause: 'pause',\n  topPlay: 'play',\n  topPlaying: 'playing',\n  topProgress: 'progress',\n  topRateChange: 'ratechange',\n  topScroll: 'scroll',\n  topSeeked: 'seeked',\n  topSeeking: 'seeking',\n  topSelectionChange: 'selectionchange',\n  topStalled: 'stalled',\n  topSuspend: 'suspend',\n  topTextInput: 'textInput',\n  topTimeUpdate: 'timeupdate',\n  topTouchCancel: 'touchcancel',\n  topTouchEnd: 'touchend',\n  topTouchMove: 'touchmove',\n  topTouchStart: 'touchstart',\n  topTransitionEnd: getVendorPrefixedEventName('transitionend') || 'transitionend',\n  topVolumeChange: 'volumechange',\n  topWaiting: 'waiting',\n  topWheel: 'wheel'\n};\n\n/**\n * To ensure no conflicts with other potential React instances on the page\n */\nvar topListenersIDKey = '_reactListenersID' + String(Math.random()).slice(2);\n\nfunction getListeningForDocument(mountAt) {\n  // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`\n  // directly.\n  if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {\n    mountAt[topListenersIDKey] = reactTopListenersCounter++;\n    alreadyListeningTo[mountAt[topListenersIDKey]] = {};\n  }\n  return alreadyListeningTo[mountAt[topListenersIDKey]];\n}\n\n/**\n * `ReactBrowserEventEmitter` is used to attach top-level event listeners. For\n * example:\n *\n *   EventPluginHub.putListener('myID', 'onClick', myFunction);\n *\n * This would allocate a \"registration\" of `('onClick', myFunction)` on 'myID'.\n *\n * @internal\n */\nvar ReactBrowserEventEmitter = _assign({}, ReactEventEmitterMixin, {\n\n  /**\n   * Injectable event backend\n   */\n  ReactEventListener: null,\n\n  injection: {\n    /**\n     * @param {object} ReactEventListener\n     */\n    injectReactEventListener: function (ReactEventListener) {\n      ReactEventListener.setHandleTopLevel(ReactBrowserEventEmitter.handleTopLevel);\n      ReactBrowserEventEmitter.ReactEventListener = ReactEventListener;\n    }\n  },\n\n  /**\n   * Sets whether or not any created callbacks should be enabled.\n   *\n   * @param {boolean} enabled True if callbacks should be enabled.\n   */\n  setEnabled: function (enabled) {\n    if (ReactBrowserEventEmitter.ReactEventListener) {\n      ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled);\n    }\n  },\n\n  /**\n   * @return {boolean} True if callbacks are enabled.\n   */\n  isEnabled: function () {\n    return !!(ReactBrowserEventEmitter.ReactEventListener && ReactBrowserEventEmitter.ReactEventListener.isEnabled());\n  },\n\n  /**\n   * We listen for bubbled touch events on the document object.\n   *\n   * Firefox v8.01 (and possibly others) exhibited strange behavior when\n   * mounting `onmousemove` events at some node that was not the document\n   * element. The symptoms were that if your mouse is not moving over something\n   * contained within that mount point (for example on the background) the\n   * top-level listeners for `onmousemove` won't be called. However, if you\n   * register the `mousemove` on the document object, then it will of course\n   * catch all `mousemove`s. This along with iOS quirks, justifies restricting\n   * top-level listeners to the document object only, at least for these\n   * movement types of events and possibly all events.\n   *\n   * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html\n   *\n   * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but\n   * they bubble to document.\n   *\n   * @param {string} registrationName Name of listener (e.g. `onClick`).\n   * @param {object} contentDocumentHandle Document which owns the container\n   */\n  listenTo: function (registrationName, contentDocumentHandle) {\n    var mountAt = contentDocumentHandle;\n    var isListening = getListeningForDocument(mountAt);\n    var dependencies = EventPluginRegistry.registrationNameDependencies[registrationName];\n\n    for (var i = 0; i < dependencies.length; i++) {\n      var dependency = dependencies[i];\n      if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {\n        if (dependency === 'topWheel') {\n          if (isEventSupported('wheel')) {\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topWheel', 'wheel', mountAt);\n          } else if (isEventSupported('mousewheel')) {\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topWheel', 'mousewheel', mountAt);\n          } else {\n            // Firefox needs to capture a different mouse scroll event.\n            // @see http://www.quirksmode.org/dom/events/tests/scroll.html\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topWheel', 'DOMMouseScroll', mountAt);\n          }\n        } else if (dependency === 'topScroll') {\n\n          if (isEventSupported('scroll', true)) {\n            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent('topScroll', 'scroll', mountAt);\n          } else {\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topScroll', 'scroll', ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE);\n          }\n        } else if (dependency === 'topFocus' || dependency === 'topBlur') {\n\n          if (isEventSupported('focus', true)) {\n            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent('topFocus', 'focus', mountAt);\n            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent('topBlur', 'blur', mountAt);\n          } else if (isEventSupported('focusin')) {\n            // IE has `focusin` and `focusout` events which bubble.\n            // @see http://www.quirksmode.org/blog/archives/2008/04/delegating_the.html\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topFocus', 'focusin', mountAt);\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topBlur', 'focusout', mountAt);\n          }\n\n          // to make sure blur and focus event listeners are only attached once\n          isListening.topBlur = true;\n          isListening.topFocus = true;\n        } else if (topEventMapping.hasOwnProperty(dependency)) {\n          ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(dependency, topEventMapping[dependency], mountAt);\n        }\n\n        isListening[dependency] = true;\n      }\n    }\n  },\n\n  trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {\n    return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelType, handlerBaseName, handle);\n  },\n\n  trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {\n    return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelType, handlerBaseName, handle);\n  },\n\n  /**\n   * Protect against document.createEvent() returning null\n   * Some popup blocker extensions appear to do this:\n   * https://github.com/facebook/react/issues/6887\n   */\n  supportsEventPageXY: function () {\n    if (!document.createEvent) {\n      return false;\n    }\n    var ev = document.createEvent('MouseEvent');\n    return ev != null && 'pageX' in ev;\n  },\n\n  /**\n   * Listens to window scroll and resize events. We cache scroll values so that\n   * application code can access them without triggering reflows.\n   *\n   * ViewportMetrics is only used by SyntheticMouse/TouchEvent and only when\n   * pageX/pageY isn't supported (legacy browsers).\n   *\n   * NOTE: Scroll events do not bubble.\n   *\n   * @see http://www.quirksmode.org/dom/events/scroll.html\n   */\n  ensureScrollValueMonitoring: function () {\n    if (hasEventPageXY === undefined) {\n      hasEventPageXY = ReactBrowserEventEmitter.supportsEventPageXY();\n    }\n    if (!hasEventPageXY && !isMonitoringScrollValue) {\n      var refresh = ViewportMetrics.refreshScrollValues;\n      ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);\n      isMonitoringScrollValue = true;\n    }\n  }\n\n});\n\nmodule.exports = ReactBrowserEventEmitter;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactBrowserEventEmitter.js\n// module id = 25\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar SyntheticUIEvent = require('./SyntheticUIEvent');\nvar ViewportMetrics = require('./ViewportMetrics');\n\nvar getEventModifierState = require('./getEventModifierState');\n\n/**\n * @interface MouseEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar MouseEventInterface = {\n  screenX: null,\n  screenY: null,\n  clientX: null,\n  clientY: null,\n  ctrlKey: null,\n  shiftKey: null,\n  altKey: null,\n  metaKey: null,\n  getModifierState: getEventModifierState,\n  button: function (event) {\n    // Webkit, Firefox, IE9+\n    // which:  1 2 3\n    // button: 0 1 2 (standard)\n    var button = event.button;\n    if ('which' in event) {\n      return button;\n    }\n    // IE<9\n    // which:  undefined\n    // button: 0 0 0\n    // button: 1 4 2 (onmouseup)\n    return button === 2 ? 2 : button === 4 ? 1 : 0;\n  },\n  buttons: null,\n  relatedTarget: function (event) {\n    return event.relatedTarget || (event.fromElement === event.srcElement ? event.toElement : event.fromElement);\n  },\n  // \"Proprietary\" Interface.\n  pageX: function (event) {\n    return 'pageX' in event ? event.pageX : event.clientX + ViewportMetrics.currentScrollLeft;\n  },\n  pageY: function (event) {\n    return 'pageY' in event ? event.pageY : event.clientY + ViewportMetrics.currentScrollTop;\n  }\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticUIEvent.augmentClass(SyntheticMouseEvent, MouseEventInterface);\n\nmodule.exports = SyntheticMouseEvent;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/SyntheticMouseEvent.js\n// module id = 26\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar invariant = require('fbjs/lib/invariant');\n\nvar OBSERVED_ERROR = {};\n\n/**\n * `Transaction` creates a black box that is able to wrap any method such that\n * certain invariants are maintained before and after the method is invoked\n * (Even if an exception is thrown while invoking the wrapped method). Whoever\n * instantiates a transaction can provide enforcers of the invariants at\n * creation time. The `Transaction` class itself will supply one additional\n * automatic invariant for you - the invariant that any transaction instance\n * should not be run while it is already being run. You would typically create a\n * single instance of a `Transaction` for reuse multiple times, that potentially\n * is used to wrap several different methods. Wrappers are extremely simple -\n * they only require implementing two methods.\n *\n * <pre>\n *                       wrappers (injected at creation time)\n *                                      +        +\n *                                      |        |\n *                    +-----------------|--------|--------------+\n *                    |                 v        |              |\n *                    |      +---------------+   |              |\n *                    |   +--|    wrapper1   |---|----+         |\n *                    |   |  +---------------+   v    |         |\n *                    |   |          +-------------+  |         |\n *                    |   |     +----|   wrapper2  |--------+   |\n *                    |   |     |    +-------------+  |     |   |\n *                    |   |     |                     |     |   |\n *                    |   v     v                     v     v   | wrapper\n *                    | +---+ +---+   +---------+   +---+ +---+ | invariants\n * perform(anyMethod) | |   | |   |   |         |   |   | |   | | maintained\n * +----------------->|-|---|-|---|-->|anyMethod|---|---|-|---|-|-------->\n *                    | |   | |   |   |         |   |   | |   | |\n *                    | |   | |   |   |         |   |   | |   | |\n *                    | |   | |   |   |         |   |   | |   | |\n *                    | +---+ +---+   +---------+   +---+ +---+ |\n *                    |  initialize                    close    |\n *                    +-----------------------------------------+\n * </pre>\n *\n * Use cases:\n * - Preserving the input selection ranges before/after reconciliation.\n *   Restoring selection even in the event of an unexpected error.\n * - Deactivating events while rearranging the DOM, preventing blurs/focuses,\n *   while guaranteeing that afterwards, the event system is reactivated.\n * - Flushing a queue of collected DOM mutations to the main UI thread after a\n *   reconciliation takes place in a worker thread.\n * - Invoking any collected `componentDidUpdate` callbacks after rendering new\n *   content.\n * - (Future use case): Wrapping particular flushes of the `ReactWorker` queue\n *   to preserve the `scrollTop` (an automatic scroll aware DOM).\n * - (Future use case): Layout calculations before and after DOM updates.\n *\n * Transactional plugin API:\n * - A module that has an `initialize` method that returns any precomputation.\n * - and a `close` method that accepts the precomputation. `close` is invoked\n *   when the wrapped process is completed, or has failed.\n *\n * @param {Array<TransactionalWrapper>} transactionWrapper Wrapper modules\n * that implement `initialize` and `close`.\n * @return {Transaction} Single transaction for reuse in thread.\n *\n * @class Transaction\n */\nvar TransactionImpl = {\n  /**\n   * Sets up this instance so that it is prepared for collecting metrics. Does\n   * so such that this setup method may be used on an instance that is already\n   * initialized, in a way that does not consume additional memory upon reuse.\n   * That can be useful if you decide to make your subclass of this mixin a\n   * \"PooledClass\".\n   */\n  reinitializeTransaction: function () {\n    this.transactionWrappers = this.getTransactionWrappers();\n    if (this.wrapperInitData) {\n      this.wrapperInitData.length = 0;\n    } else {\n      this.wrapperInitData = [];\n    }\n    this._isInTransaction = false;\n  },\n\n  _isInTransaction: false,\n\n  /**\n   * @abstract\n   * @return {Array<TransactionWrapper>} Array of transaction wrappers.\n   */\n  getTransactionWrappers: null,\n\n  isInTransaction: function () {\n    return !!this._isInTransaction;\n  },\n\n  /**\n   * Executes the function within a safety window. Use this for the top level\n   * methods that result in large amounts of computation/mutations that would\n   * need to be safety checked. The optional arguments helps prevent the need\n   * to bind in many cases.\n   *\n   * @param {function} method Member of scope to call.\n   * @param {Object} scope Scope to invoke from.\n   * @param {Object?=} a Argument to pass to the method.\n   * @param {Object?=} b Argument to pass to the method.\n   * @param {Object?=} c Argument to pass to the method.\n   * @param {Object?=} d Argument to pass to the method.\n   * @param {Object?=} e Argument to pass to the method.\n   * @param {Object?=} f Argument to pass to the method.\n   *\n   * @return {*} Return value from `method`.\n   */\n  perform: function (method, scope, a, b, c, d, e, f) {\n    !!this.isInTransaction() ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Transaction.perform(...): Cannot initialize a transaction when there is already an outstanding transaction.') : _prodInvariant('27') : void 0;\n    var errorThrown;\n    var ret;\n    try {\n      this._isInTransaction = true;\n      // Catching errors makes debugging more difficult, so we start with\n      // errorThrown set to true before setting it to false after calling\n      // close -- if it's still set to true in the finally block, it means\n      // one of these calls threw.\n      errorThrown = true;\n      this.initializeAll(0);\n      ret = method.call(scope, a, b, c, d, e, f);\n      errorThrown = false;\n    } finally {\n      try {\n        if (errorThrown) {\n          // If `method` throws, prefer to show that stack trace over any thrown\n          // by invoking `closeAll`.\n          try {\n            this.closeAll(0);\n          } catch (err) {}\n        } else {\n          // Since `method` didn't throw, we don't want to silence the exception\n          // here.\n          this.closeAll(0);\n        }\n      } finally {\n        this._isInTransaction = false;\n      }\n    }\n    return ret;\n  },\n\n  initializeAll: function (startIndex) {\n    var transactionWrappers = this.transactionWrappers;\n    for (var i = startIndex; i < transactionWrappers.length; i++) {\n      var wrapper = transactionWrappers[i];\n      try {\n        // Catching errors makes debugging more difficult, so we start with the\n        // OBSERVED_ERROR state before overwriting it with the real return value\n        // of initialize -- if it's still set to OBSERVED_ERROR in the finally\n        // block, it means wrapper.initialize threw.\n        this.wrapperInitData[i] = OBSERVED_ERROR;\n        this.wrapperInitData[i] = wrapper.initialize ? wrapper.initialize.call(this) : null;\n      } finally {\n        if (this.wrapperInitData[i] === OBSERVED_ERROR) {\n          // The initializer for wrapper i threw an error; initialize the\n          // remaining wrappers but silence any exceptions from them to ensure\n          // that the first error is the one to bubble up.\n          try {\n            this.initializeAll(i + 1);\n          } catch (err) {}\n        }\n      }\n    }\n  },\n\n  /**\n   * Invokes each of `this.transactionWrappers.close[i]` functions, passing into\n   * them the respective return values of `this.transactionWrappers.init[i]`\n   * (`close`rs that correspond to initializers that failed will not be\n   * invoked).\n   */\n  closeAll: function (startIndex) {\n    !this.isInTransaction() ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Transaction.closeAll(): Cannot close transaction when none are open.') : _prodInvariant('28') : void 0;\n    var transactionWrappers = this.transactionWrappers;\n    for (var i = startIndex; i < transactionWrappers.length; i++) {\n      var wrapper = transactionWrappers[i];\n      var initData = this.wrapperInitData[i];\n      var errorThrown;\n      try {\n        // Catching errors makes debugging more difficult, so we start with\n        // errorThrown set to true before setting it to false after calling\n        // close -- if it's still set to true in the finally block, it means\n        // wrapper.close threw.\n        errorThrown = true;\n        if (initData !== OBSERVED_ERROR && wrapper.close) {\n          wrapper.close.call(this, initData);\n        }\n        errorThrown = false;\n      } finally {\n        if (errorThrown) {\n          // The closer for wrapper i threw an error; close the remaining\n          // wrappers but silence any exceptions from them to ensure that the\n          // first error is the one to bubble up.\n          try {\n            this.closeAll(i + 1);\n          } catch (e) {}\n        }\n      }\n    }\n    this.wrapperInitData.length = 0;\n  }\n};\n\nmodule.exports = TransactionImpl;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/Transaction.js\n// module id = 27\n// module chunks = 0","/**\n * Copyright 2016-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * Based on the escape-html library, which is used under the MIT License below:\n *\n * Copyright (c) 2012-2013 TJ Holowaychuk\n * Copyright (c) 2015 Andreas Lubbe\n * Copyright (c) 2015 Tiancheng \"Timothy\" Gu\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * 'Software'), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n *\n */\n\n'use strict';\n\n// code copied and modified from escape-html\n/**\n * Module variables.\n * @private\n */\n\nvar matchHtmlRegExp = /[\"'&<>]/;\n\n/**\n * Escape special characters in the given string of html.\n *\n * @param  {string} string The string to escape for inserting into HTML\n * @return {string}\n * @public\n */\n\nfunction escapeHtml(string) {\n  var str = '' + string;\n  var match = matchHtmlRegExp.exec(str);\n\n  if (!match) {\n    return str;\n  }\n\n  var escape;\n  var html = '';\n  var index = 0;\n  var lastIndex = 0;\n\n  for (index = match.index; index < str.length; index++) {\n    switch (str.charCodeAt(index)) {\n      case 34:\n        // \"\n        escape = '&quot;';\n        break;\n      case 38:\n        // &\n        escape = '&amp;';\n        break;\n      case 39:\n        // '\n        escape = '&#x27;'; // modified from escape-html; used to be '&#39'\n        break;\n      case 60:\n        // <\n        escape = '&lt;';\n        break;\n      case 62:\n        // >\n        escape = '&gt;';\n        break;\n      default:\n        continue;\n    }\n\n    if (lastIndex !== index) {\n      html += str.substring(lastIndex, index);\n    }\n\n    lastIndex = index + 1;\n    html += escape;\n  }\n\n  return lastIndex !== index ? html + str.substring(lastIndex, index) : html;\n}\n// end code copied and modified from escape-html\n\n\n/**\n * Escapes text to prevent scripting attacks.\n *\n * @param {*} text Text value to escape.\n * @return {string} An escaped string.\n */\nfunction escapeTextContentForBrowser(text) {\n  if (typeof text === 'boolean' || typeof text === 'number') {\n    // this shortcircuit helps perf for types that we know will never have\n    // special characters, especially given that this function is used often\n    // for numeric dom ids.\n    return '' + text;\n  }\n  return escapeHtml(text);\n}\n\nmodule.exports = escapeTextContentForBrowser;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/escapeTextContentForBrowser.js\n// module id = 28\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\nvar DOMNamespaces = require('./DOMNamespaces');\n\nvar WHITESPACE_TEST = /^[ \\r\\n\\t\\f]/;\nvar NONVISIBLE_TEST = /<(!--|link|noscript|meta|script|style)[ \\r\\n\\t\\f\\/>]/;\n\nvar createMicrosoftUnsafeLocalFunction = require('./createMicrosoftUnsafeLocalFunction');\n\n// SVG temp container for IE lacking innerHTML\nvar reusableSVGContainer;\n\n/**\n * Set the innerHTML property of a node, ensuring that whitespace is preserved\n * even in IE8.\n *\n * @param {DOMElement} node\n * @param {string} html\n * @internal\n */\nvar setInnerHTML = createMicrosoftUnsafeLocalFunction(function (node, html) {\n  // IE does not have innerHTML for SVG nodes, so instead we inject the\n  // new markup in a temp node and then move the child nodes across into\n  // the target node\n  if (node.namespaceURI === DOMNamespaces.svg && !('innerHTML' in node)) {\n    reusableSVGContainer = reusableSVGContainer || document.createElement('div');\n    reusableSVGContainer.innerHTML = '<svg>' + html + '</svg>';\n    var svgNode = reusableSVGContainer.firstChild;\n    while (svgNode.firstChild) {\n      node.appendChild(svgNode.firstChild);\n    }\n  } else {\n    node.innerHTML = html;\n  }\n});\n\nif (ExecutionEnvironment.canUseDOM) {\n  // IE8: When updating a just created node with innerHTML only leading\n  // whitespace is removed. When updating an existing node with innerHTML\n  // whitespace in root TextNodes is also collapsed.\n  // @see quirksmode.org/bugreports/archives/2004/11/innerhtml_and_t.html\n\n  // Feature detection; only IE8 is known to behave improperly like this.\n  var testElement = document.createElement('div');\n  testElement.innerHTML = ' ';\n  if (testElement.innerHTML === '') {\n    setInnerHTML = function (node, html) {\n      // Magic theory: IE8 supposedly differentiates between added and updated\n      // nodes when processing innerHTML, innerHTML on updated nodes suffers\n      // from worse whitespace behavior. Re-adding a node like this triggers\n      // the initial and more favorable whitespace behavior.\n      // TODO: What to do on a detached node?\n      if (node.parentNode) {\n        node.parentNode.replaceChild(node, node);\n      }\n\n      // We also implement a workaround for non-visible tags disappearing into\n      // thin air on IE8, this only happens if there is no visible text\n      // in-front of the non-visible tags. Piggyback on the whitespace fix\n      // and simply check if any non-visible tags appear in the source.\n      if (WHITESPACE_TEST.test(html) || html[0] === '<' && NONVISIBLE_TEST.test(html)) {\n        // Recover leading whitespace by temporarily prepending any character.\n        // \\uFEFF has the potential advantage of being zero-width/invisible.\n        // UglifyJS drops U+FEFF chars when parsing, so use String.fromCharCode\n        // in hopes that this is preserved even if \"\\uFEFF\" is transformed to\n        // the actual Unicode character (by Babel, for example).\n        // https://github.com/mishoo/UglifyJS2/blob/v2.4.20/lib/parse.js#L216\n        node.innerHTML = String.fromCharCode(0xFEFF) + html;\n\n        // deleteData leaves an empty `TextNode` which offsets the index of all\n        // children. Definitely want to avoid this.\n        var textNode = node.firstChild;\n        if (textNode.data.length === 1) {\n          node.removeChild(textNode);\n        } else {\n          textNode.deleteData(0, 1);\n        }\n      } else {\n        node.innerHTML = html;\n      }\n    };\n  }\n  testElement = null;\n}\n\nmodule.exports = setInnerHTML;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/setInnerHTML.js\n// module id = 29\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar DOMLazyTree = require('./DOMLazyTree');\nvar Danger = require('./Danger');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar ReactInstrumentation = require('./ReactInstrumentation');\n\nvar createMicrosoftUnsafeLocalFunction = require('./createMicrosoftUnsafeLocalFunction');\nvar setInnerHTML = require('./setInnerHTML');\nvar setTextContent = require('./setTextContent');\n\nfunction getNodeAfter(parentNode, node) {\n  // Special case for text components, which return [open, close] comments\n  // from getHostNode.\n  if (Array.isArray(node)) {\n    node = node[1];\n  }\n  return node ? node.nextSibling : parentNode.firstChild;\n}\n\n/**\n * Inserts `childNode` as a child of `parentNode` at the `index`.\n *\n * @param {DOMElement} parentNode Parent node in which to insert.\n * @param {DOMElement} childNode Child node to insert.\n * @param {number} index Index at which to insert the child.\n * @internal\n */\nvar insertChildAt = createMicrosoftUnsafeLocalFunction(function (parentNode, childNode, referenceNode) {\n  // We rely exclusively on `insertBefore(node, null)` instead of also using\n  // `appendChild(node)`. (Using `undefined` is not allowed by all browsers so\n  // we are careful to use `null`.)\n  parentNode.insertBefore(childNode, referenceNode);\n});\n\nfunction insertLazyTreeChildAt(parentNode, childTree, referenceNode) {\n  DOMLazyTree.insertTreeBefore(parentNode, childTree, referenceNode);\n}\n\nfunction moveChild(parentNode, childNode, referenceNode) {\n  if (Array.isArray(childNode)) {\n    moveDelimitedText(parentNode, childNode[0], childNode[1], referenceNode);\n  } else {\n    insertChildAt(parentNode, childNode, referenceNode);\n  }\n}\n\nfunction removeChild(parentNode, childNode) {\n  if (Array.isArray(childNode)) {\n    var closingComment = childNode[1];\n    childNode = childNode[0];\n    removeDelimitedText(parentNode, childNode, closingComment);\n    parentNode.removeChild(closingComment);\n  }\n  parentNode.removeChild(childNode);\n}\n\nfunction moveDelimitedText(parentNode, openingComment, closingComment, referenceNode) {\n  var node = openingComment;\n  while (true) {\n    var nextNode = node.nextSibling;\n    insertChildAt(parentNode, node, referenceNode);\n    if (node === closingComment) {\n      break;\n    }\n    node = nextNode;\n  }\n}\n\nfunction removeDelimitedText(parentNode, startNode, closingComment) {\n  while (true) {\n    var node = startNode.nextSibling;\n    if (node === closingComment) {\n      // The closing comment is removed by ReactMultiChild.\n      break;\n    } else {\n      parentNode.removeChild(node);\n    }\n  }\n}\n\nfunction replaceDelimitedText(openingComment, closingComment, stringText) {\n  var parentNode = openingComment.parentNode;\n  var nodeAfterComment = openingComment.nextSibling;\n  if (nodeAfterComment === closingComment) {\n    // There are no text nodes between the opening and closing comments; insert\n    // a new one if stringText isn't empty.\n    if (stringText) {\n      insertChildAt(parentNode, document.createTextNode(stringText), nodeAfterComment);\n    }\n  } else {\n    if (stringText) {\n      // Set the text content of the first node after the opening comment, and\n      // remove all following nodes up until the closing comment.\n      setTextContent(nodeAfterComment, stringText);\n      removeDelimitedText(parentNode, nodeAfterComment, closingComment);\n    } else {\n      removeDelimitedText(parentNode, openingComment, closingComment);\n    }\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    ReactInstrumentation.debugTool.onHostOperation({\n      instanceID: ReactDOMComponentTree.getInstanceFromNode(openingComment)._debugID,\n      type: 'replace text',\n      payload: stringText\n    });\n  }\n}\n\nvar dangerouslyReplaceNodeWithMarkup = Danger.dangerouslyReplaceNodeWithMarkup;\nif (process.env.NODE_ENV !== 'production') {\n  dangerouslyReplaceNodeWithMarkup = function (oldChild, markup, prevInstance) {\n    Danger.dangerouslyReplaceNodeWithMarkup(oldChild, markup);\n    if (prevInstance._debugID !== 0) {\n      ReactInstrumentation.debugTool.onHostOperation({\n        instanceID: prevInstance._debugID,\n        type: 'replace with',\n        payload: markup.toString()\n      });\n    } else {\n      var nextInstance = ReactDOMComponentTree.getInstanceFromNode(markup.node);\n      if (nextInstance._debugID !== 0) {\n        ReactInstrumentation.debugTool.onHostOperation({\n          instanceID: nextInstance._debugID,\n          type: 'mount',\n          payload: markup.toString()\n        });\n      }\n    }\n  };\n}\n\n/**\n * Operations for updating with DOM children.\n */\nvar DOMChildrenOperations = {\n\n  dangerouslyReplaceNodeWithMarkup: dangerouslyReplaceNodeWithMarkup,\n\n  replaceDelimitedText: replaceDelimitedText,\n\n  /**\n   * Updates a component's children by processing a series of updates. The\n   * update configurations are each expected to have a `parentNode` property.\n   *\n   * @param {array<object>} updates List of update configurations.\n   * @internal\n   */\n  processUpdates: function (parentNode, updates) {\n    if (process.env.NODE_ENV !== 'production') {\n      var parentNodeDebugID = ReactDOMComponentTree.getInstanceFromNode(parentNode)._debugID;\n    }\n\n    for (var k = 0; k < updates.length; k++) {\n      var update = updates[k];\n      switch (update.type) {\n        case 'INSERT_MARKUP':\n          insertLazyTreeChildAt(parentNode, update.content, getNodeAfter(parentNode, update.afterNode));\n          if (process.env.NODE_ENV !== 'production') {\n            ReactInstrumentation.debugTool.onHostOperation({\n              instanceID: parentNodeDebugID,\n              type: 'insert child',\n              payload: { toIndex: update.toIndex, content: update.content.toString() }\n            });\n          }\n          break;\n        case 'MOVE_EXISTING':\n          moveChild(parentNode, update.fromNode, getNodeAfter(parentNode, update.afterNode));\n          if (process.env.NODE_ENV !== 'production') {\n            ReactInstrumentation.debugTool.onHostOperation({\n              instanceID: parentNodeDebugID,\n              type: 'move child',\n              payload: { fromIndex: update.fromIndex, toIndex: update.toIndex }\n            });\n          }\n          break;\n        case 'SET_MARKUP':\n          setInnerHTML(parentNode, update.content);\n          if (process.env.NODE_ENV !== 'production') {\n            ReactInstrumentation.debugTool.onHostOperation({\n              instanceID: parentNodeDebugID,\n              type: 'replace children',\n              payload: update.content.toString()\n            });\n          }\n          break;\n        case 'TEXT_CONTENT':\n          setTextContent(parentNode, update.content);\n          if (process.env.NODE_ENV !== 'production') {\n            ReactInstrumentation.debugTool.onHostOperation({\n              instanceID: parentNodeDebugID,\n              type: 'replace text',\n              payload: update.content.toString()\n            });\n          }\n          break;\n        case 'REMOVE_NODE':\n          removeChild(parentNode, update.fromNode);\n          if (process.env.NODE_ENV !== 'production') {\n            ReactInstrumentation.debugTool.onHostOperation({\n              instanceID: parentNodeDebugID,\n              type: 'remove child',\n              payload: { fromIndex: update.fromIndex }\n            });\n          }\n          break;\n      }\n    }\n  }\n\n};\n\nmodule.exports = DOMChildrenOperations;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/DOMChildrenOperations.js\n// module id = 31\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar DOMNamespaces = {\n  html: 'http://www.w3.org/1999/xhtml',\n  mathml: 'http://www.w3.org/1998/Math/MathML',\n  svg: 'http://www.w3.org/2000/svg'\n};\n\nmodule.exports = DOMNamespaces;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/DOMNamespaces.js\n// module id = 32\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * Injectable ordering of event plugins.\n */\nvar eventPluginOrder = null;\n\n/**\n * Injectable mapping from names to event plugin modules.\n */\nvar namesToPlugins = {};\n\n/**\n * Recomputes the plugin list using the injected plugins and plugin ordering.\n *\n * @private\n */\nfunction recomputePluginOrdering() {\n  if (!eventPluginOrder) {\n    // Wait until an `eventPluginOrder` is injected.\n    return;\n  }\n  for (var pluginName in namesToPlugins) {\n    var pluginModule = namesToPlugins[pluginName];\n    var pluginIndex = eventPluginOrder.indexOf(pluginName);\n    !(pluginIndex > -1) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject event plugins that do not exist in the plugin ordering, `%s`.', pluginName) : _prodInvariant('96', pluginName) : void 0;\n    if (EventPluginRegistry.plugins[pluginIndex]) {\n      continue;\n    }\n    !pluginModule.extractEvents ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Event plugins must implement an `extractEvents` method, but `%s` does not.', pluginName) : _prodInvariant('97', pluginName) : void 0;\n    EventPluginRegistry.plugins[pluginIndex] = pluginModule;\n    var publishedEvents = pluginModule.eventTypes;\n    for (var eventName in publishedEvents) {\n      !publishEventForPlugin(publishedEvents[eventName], pluginModule, eventName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.', eventName, pluginName) : _prodInvariant('98', eventName, pluginName) : void 0;\n    }\n  }\n}\n\n/**\n * Publishes an event so that it can be dispatched by the supplied plugin.\n *\n * @param {object} dispatchConfig Dispatch configuration for the event.\n * @param {object} PluginModule Plugin publishing the event.\n * @return {boolean} True if the event was successfully published.\n * @private\n */\nfunction publishEventForPlugin(dispatchConfig, pluginModule, eventName) {\n  !!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same event name, `%s`.', eventName) : _prodInvariant('99', eventName) : void 0;\n  EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;\n\n  var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;\n  if (phasedRegistrationNames) {\n    for (var phaseName in phasedRegistrationNames) {\n      if (phasedRegistrationNames.hasOwnProperty(phaseName)) {\n        var phasedRegistrationName = phasedRegistrationNames[phaseName];\n        publishRegistrationName(phasedRegistrationName, pluginModule, eventName);\n      }\n    }\n    return true;\n  } else if (dispatchConfig.registrationName) {\n    publishRegistrationName(dispatchConfig.registrationName, pluginModule, eventName);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Publishes a registration name that is used to identify dispatched events and\n * can be used with `EventPluginHub.putListener` to register listeners.\n *\n * @param {string} registrationName Registration name to add.\n * @param {object} PluginModule Plugin publishing the event.\n * @private\n */\nfunction publishRegistrationName(registrationName, pluginModule, eventName) {\n  !!EventPluginRegistry.registrationNameModules[registrationName] ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same registration name, `%s`.', registrationName) : _prodInvariant('100', registrationName) : void 0;\n  EventPluginRegistry.registrationNameModules[registrationName] = pluginModule;\n  EventPluginRegistry.registrationNameDependencies[registrationName] = pluginModule.eventTypes[eventName].dependencies;\n\n  if (process.env.NODE_ENV !== 'production') {\n    var lowerCasedName = registrationName.toLowerCase();\n    EventPluginRegistry.possibleRegistrationNames[lowerCasedName] = registrationName;\n\n    if (registrationName === 'onDoubleClick') {\n      EventPluginRegistry.possibleRegistrationNames.ondblclick = registrationName;\n    }\n  }\n}\n\n/**\n * Registers plugins so that they can extract and dispatch events.\n *\n * @see {EventPluginHub}\n */\nvar EventPluginRegistry = {\n\n  /**\n   * Ordered list of injected plugins.\n   */\n  plugins: [],\n\n  /**\n   * Mapping from event name to dispatch config\n   */\n  eventNameDispatchConfigs: {},\n\n  /**\n   * Mapping from registration name to plugin module\n   */\n  registrationNameModules: {},\n\n  /**\n   * Mapping from registration name to event name\n   */\n  registrationNameDependencies: {},\n\n  /**\n   * Mapping from lowercase registration names to the properly cased version,\n   * used to warn in the case of missing event handlers. Available\n   * only in __DEV__.\n   * @type {Object}\n   */\n  possibleRegistrationNames: process.env.NODE_ENV !== 'production' ? {} : null,\n  // Trust the developer to only use possibleRegistrationNames in __DEV__\n\n  /**\n   * Injects an ordering of plugins (by plugin name). This allows the ordering\n   * to be decoupled from injection of the actual plugins so that ordering is\n   * always deterministic regardless of packaging, on-the-fly injection, etc.\n   *\n   * @param {array} InjectedEventPluginOrder\n   * @internal\n   * @see {EventPluginHub.injection.injectEventPluginOrder}\n   */\n  injectEventPluginOrder: function (injectedEventPluginOrder) {\n    !!eventPluginOrder ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject event plugin ordering more than once. You are likely trying to load more than one copy of React.') : _prodInvariant('101') : void 0;\n    // Clone the ordering so it cannot be dynamically mutated.\n    eventPluginOrder = Array.prototype.slice.call(injectedEventPluginOrder);\n    recomputePluginOrdering();\n  },\n\n  /**\n   * Injects plugins to be used by `EventPluginHub`. The plugin names must be\n   * in the ordering injected by `injectEventPluginOrder`.\n   *\n   * Plugins can be injected as part of page initialization or on-the-fly.\n   *\n   * @param {object} injectedNamesToPlugins Map from names to plugin modules.\n   * @internal\n   * @see {EventPluginHub.injection.injectEventPluginsByName}\n   */\n  injectEventPluginsByName: function (injectedNamesToPlugins) {\n    var isOrderingDirty = false;\n    for (var pluginName in injectedNamesToPlugins) {\n      if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {\n        continue;\n      }\n      var pluginModule = injectedNamesToPlugins[pluginName];\n      if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== pluginModule) {\n        !!namesToPlugins[pluginName] ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject two different event plugins using the same name, `%s`.', pluginName) : _prodInvariant('102', pluginName) : void 0;\n        namesToPlugins[pluginName] = pluginModule;\n        isOrderingDirty = true;\n      }\n    }\n    if (isOrderingDirty) {\n      recomputePluginOrdering();\n    }\n  },\n\n  /**\n   * Looks up the plugin for the supplied event.\n   *\n   * @param {object} event A synthetic event.\n   * @return {?object} The plugin that created the supplied event.\n   * @internal\n   */\n  getPluginModuleForEvent: function (event) {\n    var dispatchConfig = event.dispatchConfig;\n    if (dispatchConfig.registrationName) {\n      return EventPluginRegistry.registrationNameModules[dispatchConfig.registrationName] || null;\n    }\n    if (dispatchConfig.phasedRegistrationNames !== undefined) {\n      // pulling phasedRegistrationNames out of dispatchConfig helps Flow see\n      // that it is not undefined.\n      var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;\n\n      for (var phase in phasedRegistrationNames) {\n        if (!phasedRegistrationNames.hasOwnProperty(phase)) {\n          continue;\n        }\n        var pluginModule = EventPluginRegistry.registrationNameModules[phasedRegistrationNames[phase]];\n        if (pluginModule) {\n          return pluginModule;\n        }\n      }\n    }\n    return null;\n  },\n\n  /**\n   * Exposed for unit testing.\n   * @private\n   */\n  _resetEventPlugins: function () {\n    eventPluginOrder = null;\n    for (var pluginName in namesToPlugins) {\n      if (namesToPlugins.hasOwnProperty(pluginName)) {\n        delete namesToPlugins[pluginName];\n      }\n    }\n    EventPluginRegistry.plugins.length = 0;\n\n    var eventNameDispatchConfigs = EventPluginRegistry.eventNameDispatchConfigs;\n    for (var eventName in eventNameDispatchConfigs) {\n      if (eventNameDispatchConfigs.hasOwnProperty(eventName)) {\n        delete eventNameDispatchConfigs[eventName];\n      }\n    }\n\n    var registrationNameModules = EventPluginRegistry.registrationNameModules;\n    for (var registrationName in registrationNameModules) {\n      if (registrationNameModules.hasOwnProperty(registrationName)) {\n        delete registrationNameModules[registrationName];\n      }\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      var possibleRegistrationNames = EventPluginRegistry.possibleRegistrationNames;\n      for (var lowerCasedName in possibleRegistrationNames) {\n        if (possibleRegistrationNames.hasOwnProperty(lowerCasedName)) {\n          delete possibleRegistrationNames[lowerCasedName];\n        }\n      }\n    }\n  }\n\n};\n\nmodule.exports = EventPluginRegistry;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/EventPluginRegistry.js\n// module id = 33\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar ReactErrorUtils = require('./ReactErrorUtils');\n\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\n/**\n * Injected dependencies:\n */\n\n/**\n * - `ComponentTree`: [required] Module that can convert between React instances\n *   and actual node references.\n */\nvar ComponentTree;\nvar TreeTraversal;\nvar injection = {\n  injectComponentTree: function (Injected) {\n    ComponentTree = Injected;\n    if (process.env.NODE_ENV !== 'production') {\n      process.env.NODE_ENV !== 'production' ? warning(Injected && Injected.getNodeFromInstance && Injected.getInstanceFromNode, 'EventPluginUtils.injection.injectComponentTree(...): Injected ' + 'module is missing getNodeFromInstance or getInstanceFromNode.') : void 0;\n    }\n  },\n  injectTreeTraversal: function (Injected) {\n    TreeTraversal = Injected;\n    if (process.env.NODE_ENV !== 'production') {\n      process.env.NODE_ENV !== 'production' ? warning(Injected && Injected.isAncestor && Injected.getLowestCommonAncestor, 'EventPluginUtils.injection.injectTreeTraversal(...): Injected ' + 'module is missing isAncestor or getLowestCommonAncestor.') : void 0;\n    }\n  }\n};\n\nfunction isEndish(topLevelType) {\n  return topLevelType === 'topMouseUp' || topLevelType === 'topTouchEnd' || topLevelType === 'topTouchCancel';\n}\n\nfunction isMoveish(topLevelType) {\n  return topLevelType === 'topMouseMove' || topLevelType === 'topTouchMove';\n}\nfunction isStartish(topLevelType) {\n  return topLevelType === 'topMouseDown' || topLevelType === 'topTouchStart';\n}\n\nvar validateEventDispatches;\nif (process.env.NODE_ENV !== 'production') {\n  validateEventDispatches = function (event) {\n    var dispatchListeners = event._dispatchListeners;\n    var dispatchInstances = event._dispatchInstances;\n\n    var listenersIsArr = Array.isArray(dispatchListeners);\n    var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;\n\n    var instancesIsArr = Array.isArray(dispatchInstances);\n    var instancesLen = instancesIsArr ? dispatchInstances.length : dispatchInstances ? 1 : 0;\n\n    process.env.NODE_ENV !== 'production' ? warning(instancesIsArr === listenersIsArr && instancesLen === listenersLen, 'EventPluginUtils: Invalid `event`.') : void 0;\n  };\n}\n\n/**\n * Dispatch the event to the listener.\n * @param {SyntheticEvent} event SyntheticEvent to handle\n * @param {boolean} simulated If the event is simulated (changes exn behavior)\n * @param {function} listener Application-level callback\n * @param {*} inst Internal component instance\n */\nfunction executeDispatch(event, simulated, listener, inst) {\n  var type = event.type || 'unknown-event';\n  event.currentTarget = EventPluginUtils.getNodeFromInstance(inst);\n  if (simulated) {\n    ReactErrorUtils.invokeGuardedCallbackWithCatch(type, listener, event);\n  } else {\n    ReactErrorUtils.invokeGuardedCallback(type, listener, event);\n  }\n  event.currentTarget = null;\n}\n\n/**\n * Standard/simple iteration through an event's collected dispatches.\n */\nfunction executeDispatchesInOrder(event, simulated) {\n  var dispatchListeners = event._dispatchListeners;\n  var dispatchInstances = event._dispatchInstances;\n  if (process.env.NODE_ENV !== 'production') {\n    validateEventDispatches(event);\n  }\n  if (Array.isArray(dispatchListeners)) {\n    for (var i = 0; i < dispatchListeners.length; i++) {\n      if (event.isPropagationStopped()) {\n        break;\n      }\n      // Listeners and Instances are two parallel arrays that are always in sync.\n      executeDispatch(event, simulated, dispatchListeners[i], dispatchInstances[i]);\n    }\n  } else if (dispatchListeners) {\n    executeDispatch(event, simulated, dispatchListeners, dispatchInstances);\n  }\n  event._dispatchListeners = null;\n  event._dispatchInstances = null;\n}\n\n/**\n * Standard/simple iteration through an event's collected dispatches, but stops\n * at the first dispatch execution returning true, and returns that id.\n *\n * @return {?string} id of the first dispatch execution who's listener returns\n * true, or null if no listener returned true.\n */\nfunction executeDispatchesInOrderStopAtTrueImpl(event) {\n  var dispatchListeners = event._dispatchListeners;\n  var dispatchInstances = event._dispatchInstances;\n  if (process.env.NODE_ENV !== 'production') {\n    validateEventDispatches(event);\n  }\n  if (Array.isArray(dispatchListeners)) {\n    for (var i = 0; i < dispatchListeners.length; i++) {\n      if (event.isPropagationStopped()) {\n        break;\n      }\n      // Listeners and Instances are two parallel arrays that are always in sync.\n      if (dispatchListeners[i](event, dispatchInstances[i])) {\n        return dispatchInstances[i];\n      }\n    }\n  } else if (dispatchListeners) {\n    if (dispatchListeners(event, dispatchInstances)) {\n      return dispatchInstances;\n    }\n  }\n  return null;\n}\n\n/**\n * @see executeDispatchesInOrderStopAtTrueImpl\n */\nfunction executeDispatchesInOrderStopAtTrue(event) {\n  var ret = executeDispatchesInOrderStopAtTrueImpl(event);\n  event._dispatchInstances = null;\n  event._dispatchListeners = null;\n  return ret;\n}\n\n/**\n * Execution of a \"direct\" dispatch - there must be at most one dispatch\n * accumulated on the event or it is considered an error. It doesn't really make\n * sense for an event with multiple dispatches (bubbled) to keep track of the\n * return values at each dispatch execution, but it does tend to make sense when\n * dealing with \"direct\" dispatches.\n *\n * @return {*} The return value of executing the single dispatch.\n */\nfunction executeDirectDispatch(event) {\n  if (process.env.NODE_ENV !== 'production') {\n    validateEventDispatches(event);\n  }\n  var dispatchListener = event._dispatchListeners;\n  var dispatchInstance = event._dispatchInstances;\n  !!Array.isArray(dispatchListener) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'executeDirectDispatch(...): Invalid `event`.') : _prodInvariant('103') : void 0;\n  event.currentTarget = dispatchListener ? EventPluginUtils.getNodeFromInstance(dispatchInstance) : null;\n  var res = dispatchListener ? dispatchListener(event) : null;\n  event.currentTarget = null;\n  event._dispatchListeners = null;\n  event._dispatchInstances = null;\n  return res;\n}\n\n/**\n * @param {SyntheticEvent} event\n * @return {boolean} True iff number of dispatches accumulated is greater than 0.\n */\nfunction hasDispatches(event) {\n  return !!event._dispatchListeners;\n}\n\n/**\n * General utilities that are useful in creating custom Event Plugins.\n */\nvar EventPluginUtils = {\n  isEndish: isEndish,\n  isMoveish: isMoveish,\n  isStartish: isStartish,\n\n  executeDirectDispatch: executeDirectDispatch,\n  executeDispatchesInOrder: executeDispatchesInOrder,\n  executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,\n  hasDispatches: hasDispatches,\n\n  getInstanceFromNode: function (node) {\n    return ComponentTree.getInstanceFromNode(node);\n  },\n  getNodeFromInstance: function (node) {\n    return ComponentTree.getNodeFromInstance(node);\n  },\n  isAncestor: function (a, b) {\n    return TreeTraversal.isAncestor(a, b);\n  },\n  getLowestCommonAncestor: function (a, b) {\n    return TreeTraversal.getLowestCommonAncestor(a, b);\n  },\n  getParentInstance: function (inst) {\n    return TreeTraversal.getParentInstance(inst);\n  },\n  traverseTwoPhase: function (target, fn, arg) {\n    return TreeTraversal.traverseTwoPhase(target, fn, arg);\n  },\n  traverseEnterLeave: function (from, to, fn, argFrom, argTo) {\n    return TreeTraversal.traverseEnterLeave(from, to, fn, argFrom, argTo);\n  },\n\n  injection: injection\n};\n\nmodule.exports = EventPluginUtils;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/EventPluginUtils.js\n// module id = 34\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\n/**\n * Escape and wrap key so it is safe to use as a reactid\n *\n * @param {string} key to be escaped.\n * @return {string} the escaped key.\n */\n\nfunction escape(key) {\n  var escapeRegex = /[=:]/g;\n  var escaperLookup = {\n    '=': '=0',\n    ':': '=2'\n  };\n  var escapedString = ('' + key).replace(escapeRegex, function (match) {\n    return escaperLookup[match];\n  });\n\n  return '$' + escapedString;\n}\n\n/**\n * Unescape and unwrap key for human-readable display\n *\n * @param {string} key to unescape.\n * @return {string} the unescaped key.\n */\nfunction unescape(key) {\n  var unescapeRegex = /(=0|=2)/g;\n  var unescaperLookup = {\n    '=0': '=',\n    '=2': ':'\n  };\n  var keySubstring = key[0] === '.' && key[1] === '$' ? key.substring(2) : key.substring(1);\n\n  return ('' + keySubstring).replace(unescapeRegex, function (match) {\n    return unescaperLookup[match];\n  });\n}\n\nvar KeyEscapeUtils = {\n  escape: escape,\n  unescape: unescape\n};\n\nmodule.exports = KeyEscapeUtils;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/KeyEscapeUtils.js\n// module id = 35\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar ReactPropTypesSecret = require('./ReactPropTypesSecret');\nvar propTypesFactory = require('prop-types/factory');\n\nvar React = require('react/lib/React');\nvar PropTypes = propTypesFactory(React.isValidElement);\n\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\nvar hasReadOnlyValue = {\n  'button': true,\n  'checkbox': true,\n  'image': true,\n  'hidden': true,\n  'radio': true,\n  'reset': true,\n  'submit': true\n};\n\nfunction _assertSingleLink(inputProps) {\n  !(inputProps.checkedLink == null || inputProps.valueLink == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a valueLink. If you want to use checkedLink, you probably don\\'t want to use valueLink and vice versa.') : _prodInvariant('87') : void 0;\n}\nfunction _assertValueLink(inputProps) {\n  _assertSingleLink(inputProps);\n  !(inputProps.value == null && inputProps.onChange == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a valueLink and a value or onChange event. If you want to use value or onChange, you probably don\\'t want to use valueLink.') : _prodInvariant('88') : void 0;\n}\n\nfunction _assertCheckedLink(inputProps) {\n  _assertSingleLink(inputProps);\n  !(inputProps.checked == null && inputProps.onChange == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a checked property or onChange event. If you want to use checked or onChange, you probably don\\'t want to use checkedLink') : _prodInvariant('89') : void 0;\n}\n\nvar propTypes = {\n  value: function (props, propName, componentName) {\n    if (!props[propName] || hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled) {\n      return null;\n    }\n    return new Error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');\n  },\n  checked: function (props, propName, componentName) {\n    if (!props[propName] || props.onChange || props.readOnly || props.disabled) {\n      return null;\n    }\n    return new Error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');\n  },\n  onChange: PropTypes.func\n};\n\nvar loggedTypeFailures = {};\nfunction getDeclarationErrorAddendum(owner) {\n  if (owner) {\n    var name = owner.getName();\n    if (name) {\n      return ' Check the render method of `' + name + '`.';\n    }\n  }\n  return '';\n}\n\n/**\n * Provide a linked `value` attribute for controlled forms. You should not use\n * this outside of the ReactDOM controlled form components.\n */\nvar LinkedValueUtils = {\n  checkPropTypes: function (tagName, props, owner) {\n    for (var propName in propTypes) {\n      if (propTypes.hasOwnProperty(propName)) {\n        var error = propTypes[propName](props, propName, tagName, 'prop', null, ReactPropTypesSecret);\n      }\n      if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n        // Only monitor this failure once because there tends to be a lot of the\n        // same error.\n        loggedTypeFailures[error.message] = true;\n\n        var addendum = getDeclarationErrorAddendum(owner);\n        process.env.NODE_ENV !== 'production' ? warning(false, 'Failed form propType: %s%s', error.message, addendum) : void 0;\n      }\n    }\n  },\n\n  /**\n   * @param {object} inputProps Props for form component\n   * @return {*} current value of the input either from value prop or link.\n   */\n  getValue: function (inputProps) {\n    if (inputProps.valueLink) {\n      _assertValueLink(inputProps);\n      return inputProps.valueLink.value;\n    }\n    return inputProps.value;\n  },\n\n  /**\n   * @param {object} inputProps Props for form component\n   * @return {*} current checked status of the input either from checked prop\n   *             or link.\n   */\n  getChecked: function (inputProps) {\n    if (inputProps.checkedLink) {\n      _assertCheckedLink(inputProps);\n      return inputProps.checkedLink.value;\n    }\n    return inputProps.checked;\n  },\n\n  /**\n   * @param {object} inputProps Props for form component\n   * @param {SyntheticEvent} event change event to handle\n   */\n  executeOnChange: function (inputProps, event) {\n    if (inputProps.valueLink) {\n      _assertValueLink(inputProps);\n      return inputProps.valueLink.requestChange(event.target.value);\n    } else if (inputProps.checkedLink) {\n      _assertCheckedLink(inputProps);\n      return inputProps.checkedLink.requestChange(event.target.checked);\n    } else if (inputProps.onChange) {\n      return inputProps.onChange.call(undefined, event);\n    }\n  }\n};\n\nmodule.exports = LinkedValueUtils;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/LinkedValueUtils.js\n// module id = 36\n// module chunks = 0","/**\n * Copyright 2014-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar invariant = require('fbjs/lib/invariant');\n\nvar injected = false;\n\nvar ReactComponentEnvironment = {\n\n  /**\n   * Optionally injectable hook for swapping out mount images in the middle of\n   * the tree.\n   */\n  replaceNodeWithMarkup: null,\n\n  /**\n   * Optionally injectable hook for processing a queue of child updates. Will\n   * later move into MultiChildComponents.\n   */\n  processChildrenUpdates: null,\n\n  injection: {\n    injectEnvironment: function (environment) {\n      !!injected ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactCompositeComponent: injectEnvironment() can only be called once.') : _prodInvariant('104') : void 0;\n      ReactComponentEnvironment.replaceNodeWithMarkup = environment.replaceNodeWithMarkup;\n      ReactComponentEnvironment.processChildrenUpdates = environment.processChildrenUpdates;\n      injected = true;\n    }\n  }\n\n};\n\nmodule.exports = ReactComponentEnvironment;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactComponentEnvironment.js\n// module id = 37\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar caughtError = null;\n\n/**\n * Call a function while guarding against errors that happens within it.\n *\n * @param {String} name of the guard to use for logging or debugging\n * @param {Function} func The function to invoke\n * @param {*} a First argument\n * @param {*} b Second argument\n */\nfunction invokeGuardedCallback(name, func, a) {\n  try {\n    func(a);\n  } catch (x) {\n    if (caughtError === null) {\n      caughtError = x;\n    }\n  }\n}\n\nvar ReactErrorUtils = {\n  invokeGuardedCallback: invokeGuardedCallback,\n\n  /**\n   * Invoked by ReactTestUtils.Simulate so that any errors thrown by the event\n   * handler are sure to be rethrown by rethrowCaughtError.\n   */\n  invokeGuardedCallbackWithCatch: invokeGuardedCallback,\n\n  /**\n   * During execution of guarded functions we will capture the first error which\n   * we will rethrow to be handled by the top level error handler.\n   */\n  rethrowCaughtError: function () {\n    if (caughtError) {\n      var error = caughtError;\n      caughtError = null;\n      throw error;\n    }\n  }\n};\n\nif (process.env.NODE_ENV !== 'production') {\n  /**\n   * To help development we can get better devtools integration by simulating a\n   * real browser event.\n   */\n  if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {\n    var fakeNode = document.createElement('react');\n    ReactErrorUtils.invokeGuardedCallback = function (name, func, a) {\n      var boundFunc = func.bind(null, a);\n      var evtType = 'react-' + name;\n      fakeNode.addEventListener(evtType, boundFunc, false);\n      var evt = document.createEvent('Event');\n      evt.initEvent(evtType, false, false);\n      fakeNode.dispatchEvent(evt);\n      fakeNode.removeEventListener(evtType, boundFunc, false);\n    };\n  }\n}\n\nmodule.exports = ReactErrorUtils;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactErrorUtils.js\n// module id = 38\n// module chunks = 0","/**\n * Copyright 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar ReactCurrentOwner = require('react/lib/ReactCurrentOwner');\nvar ReactInstanceMap = require('./ReactInstanceMap');\nvar ReactInstrumentation = require('./ReactInstrumentation');\nvar ReactUpdates = require('./ReactUpdates');\n\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\nfunction enqueueUpdate(internalInstance) {\n  ReactUpdates.enqueueUpdate(internalInstance);\n}\n\nfunction formatUnexpectedArgument(arg) {\n  var type = typeof arg;\n  if (type !== 'object') {\n    return type;\n  }\n  var displayName = arg.constructor && arg.constructor.name || type;\n  var keys = Object.keys(arg);\n  if (keys.length > 0 && keys.length < 20) {\n    return displayName + ' (keys: ' + keys.join(', ') + ')';\n  }\n  return displayName;\n}\n\nfunction getInternalInstanceReadyForUpdate(publicInstance, callerName) {\n  var internalInstance = ReactInstanceMap.get(publicInstance);\n  if (!internalInstance) {\n    if (process.env.NODE_ENV !== 'production') {\n      var ctor = publicInstance.constructor;\n      // Only warn when we have a callerName. Otherwise we should be silent.\n      // We're probably calling from enqueueCallback. We don't want to warn\n      // there because we already warned for the corresponding lifecycle method.\n      process.env.NODE_ENV !== 'production' ? warning(!callerName, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, ctor && (ctor.displayName || ctor.name) || 'ReactClass') : void 0;\n    }\n    return null;\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, '%s(...): Cannot update during an existing state transition (such as ' + 'within `render` or another component\\'s constructor). Render methods ' + 'should be a pure function of props and state; constructor ' + 'side-effects are an anti-pattern, but can be moved to ' + '`componentWillMount`.', callerName) : void 0;\n  }\n\n  return internalInstance;\n}\n\n/**\n * ReactUpdateQueue allows for state updates to be scheduled into a later\n * reconciliation step.\n */\nvar ReactUpdateQueue = {\n\n  /**\n   * Checks whether or not this composite component is mounted.\n   * @param {ReactClass} publicInstance The instance we want to test.\n   * @return {boolean} True if mounted, false otherwise.\n   * @protected\n   * @final\n   */\n  isMounted: function (publicInstance) {\n    if (process.env.NODE_ENV !== 'production') {\n      var owner = ReactCurrentOwner.current;\n      if (owner !== null) {\n        process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing isMounted inside its render() function. ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;\n        owner._warnedAboutRefsInRender = true;\n      }\n    }\n    var internalInstance = ReactInstanceMap.get(publicInstance);\n    if (internalInstance) {\n      // During componentWillMount and render this will still be null but after\n      // that will always render to something. At least for now. So we can use\n      // this hack.\n      return !!internalInstance._renderedComponent;\n    } else {\n      return false;\n    }\n  },\n\n  /**\n   * Enqueue a callback that will be executed after all the pending updates\n   * have processed.\n   *\n   * @param {ReactClass} publicInstance The instance to use as `this` context.\n   * @param {?function} callback Called after state is updated.\n   * @param {string} callerName Name of the calling function in the public API.\n   * @internal\n   */\n  enqueueCallback: function (publicInstance, callback, callerName) {\n    ReactUpdateQueue.validateCallback(callback, callerName);\n    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance);\n\n    // Previously we would throw an error if we didn't have an internal\n    // instance. Since we want to make it a no-op instead, we mirror the same\n    // behavior we have in other enqueue* methods.\n    // We also need to ignore callbacks in componentWillMount. See\n    // enqueueUpdates.\n    if (!internalInstance) {\n      return null;\n    }\n\n    if (internalInstance._pendingCallbacks) {\n      internalInstance._pendingCallbacks.push(callback);\n    } else {\n      internalInstance._pendingCallbacks = [callback];\n    }\n    // TODO: The callback here is ignored when setState is called from\n    // componentWillMount. Either fix it or disallow doing so completely in\n    // favor of getInitialState. Alternatively, we can disallow\n    // componentWillMount during server-side rendering.\n    enqueueUpdate(internalInstance);\n  },\n\n  enqueueCallbackInternal: function (internalInstance, callback) {\n    if (internalInstance._pendingCallbacks) {\n      internalInstance._pendingCallbacks.push(callback);\n    } else {\n      internalInstance._pendingCallbacks = [callback];\n    }\n    enqueueUpdate(internalInstance);\n  },\n\n  /**\n   * Forces an update. This should only be invoked when it is known with\n   * certainty that we are **not** in a DOM transaction.\n   *\n   * You may want to call this when you know that some deeper aspect of the\n   * component's state has changed but `setState` was not called.\n   *\n   * This will not invoke `shouldComponentUpdate`, but it will invoke\n   * `componentWillUpdate` and `componentDidUpdate`.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @internal\n   */\n  enqueueForceUpdate: function (publicInstance) {\n    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'forceUpdate');\n\n    if (!internalInstance) {\n      return;\n    }\n\n    internalInstance._pendingForceUpdate = true;\n\n    enqueueUpdate(internalInstance);\n  },\n\n  /**\n   * Replaces all of the state. Always use this or `setState` to mutate state.\n   * You should treat `this.state` as immutable.\n   *\n   * There is no guarantee that `this.state` will be immediately updated, so\n   * accessing `this.state` after calling this method may return the old value.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} completeState Next state.\n   * @internal\n   */\n  enqueueReplaceState: function (publicInstance, completeState, callback) {\n    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'replaceState');\n\n    if (!internalInstance) {\n      return;\n    }\n\n    internalInstance._pendingStateQueue = [completeState];\n    internalInstance._pendingReplaceState = true;\n\n    // Future-proof 15.5\n    if (callback !== undefined && callback !== null) {\n      ReactUpdateQueue.validateCallback(callback, 'replaceState');\n      if (internalInstance._pendingCallbacks) {\n        internalInstance._pendingCallbacks.push(callback);\n      } else {\n        internalInstance._pendingCallbacks = [callback];\n      }\n    }\n\n    enqueueUpdate(internalInstance);\n  },\n\n  /**\n   * Sets a subset of the state. This only exists because _pendingState is\n   * internal. This provides a merging strategy that is not available to deep\n   * properties which is confusing. TODO: Expose pendingState or don't use it\n   * during the merge.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} partialState Next partial state to be merged with state.\n   * @internal\n   */\n  enqueueSetState: function (publicInstance, partialState) {\n    if (process.env.NODE_ENV !== 'production') {\n      ReactInstrumentation.debugTool.onSetState();\n      process.env.NODE_ENV !== 'production' ? warning(partialState != null, 'setState(...): You passed an undefined or null state object; ' + 'instead, use forceUpdate().') : void 0;\n    }\n\n    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'setState');\n\n    if (!internalInstance) {\n      return;\n    }\n\n    var queue = internalInstance._pendingStateQueue || (internalInstance._pendingStateQueue = []);\n    queue.push(partialState);\n\n    enqueueUpdate(internalInstance);\n  },\n\n  enqueueElementInternal: function (internalInstance, nextElement, nextContext) {\n    internalInstance._pendingElement = nextElement;\n    // TODO: introduce _pendingContext instead of setting it directly.\n    internalInstance._context = nextContext;\n    enqueueUpdate(internalInstance);\n  },\n\n  validateCallback: function (callback, callerName) {\n    !(!callback || typeof callback === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.', callerName, formatUnexpectedArgument(callback)) : _prodInvariant('122', callerName, formatUnexpectedArgument(callback)) : void 0;\n  }\n\n};\n\nmodule.exports = ReactUpdateQueue;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactUpdateQueue.js\n// module id = 39\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n/* globals MSApp */\n\n'use strict';\n\n/**\n * Create a function which has 'unsafe' privileges (required by windows8 apps)\n */\n\nvar createMicrosoftUnsafeLocalFunction = function (func) {\n  if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {\n    return function (arg0, arg1, arg2, arg3) {\n      MSApp.execUnsafeLocalFunction(function () {\n        return func(arg0, arg1, arg2, arg3);\n      });\n    };\n  } else {\n    return func;\n  }\n};\n\nmodule.exports = createMicrosoftUnsafeLocalFunction;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/createMicrosoftUnsafeLocalFunction.js\n// module id = 40\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\n/**\n * `charCode` represents the actual \"character code\" and is safe to use with\n * `String.fromCharCode`. As such, only keys that correspond to printable\n * characters produce a valid `charCode`, the only exception to this is Enter.\n * The Tab-key is considered non-printable and does not have a `charCode`,\n * presumably because it does not produce a tab-character in browsers.\n *\n * @param {object} nativeEvent Native browser event.\n * @return {number} Normalized `charCode` property.\n */\n\nfunction getEventCharCode(nativeEvent) {\n  var charCode;\n  var keyCode = nativeEvent.keyCode;\n\n  if ('charCode' in nativeEvent) {\n    charCode = nativeEvent.charCode;\n\n    // FF does not set `charCode` for the Enter-key, check against `keyCode`.\n    if (charCode === 0 && keyCode === 13) {\n      charCode = 13;\n    }\n  } else {\n    // IE8 does not implement `charCode`, but `keyCode` has the correct value.\n    charCode = keyCode;\n  }\n\n  // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.\n  // Must not discard the (non-)printable Enter-key.\n  if (charCode >= 32 || charCode === 13) {\n    return charCode;\n  }\n\n  return 0;\n}\n\nmodule.exports = getEventCharCode;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/getEventCharCode.js\n// module id = 41\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\n/**\n * Translation from modifier key to the associated property in the event.\n * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers\n */\n\nvar modifierKeyToProp = {\n  'Alt': 'altKey',\n  'Control': 'ctrlKey',\n  'Meta': 'metaKey',\n  'Shift': 'shiftKey'\n};\n\n// IE8 does not implement getModifierState so we simply map it to the only\n// modifier keys exposed by the event itself, does not support Lock-keys.\n// Currently, all major browsers except Chrome seems to support Lock-keys.\nfunction modifierStateGetter(keyArg) {\n  var syntheticEvent = this;\n  var nativeEvent = syntheticEvent.nativeEvent;\n  if (nativeEvent.getModifierState) {\n    return nativeEvent.getModifierState(keyArg);\n  }\n  var keyProp = modifierKeyToProp[keyArg];\n  return keyProp ? !!nativeEvent[keyProp] : false;\n}\n\nfunction getEventModifierState(nativeEvent) {\n  return modifierStateGetter;\n}\n\nmodule.exports = getEventModifierState;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/getEventModifierState.js\n// module id = 42\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\n/**\n * Gets the target node from a native browser event by accounting for\n * inconsistencies in browser DOM APIs.\n *\n * @param {object} nativeEvent Native browser event.\n * @return {DOMEventTarget} Target node.\n */\n\nfunction getEventTarget(nativeEvent) {\n  var target = nativeEvent.target || nativeEvent.srcElement || window;\n\n  // Normalize SVG <use> element events #4963\n  if (target.correspondingUseElement) {\n    target = target.correspondingUseElement;\n  }\n\n  // Safari may fire events on text nodes (Node.TEXT_NODE is 3).\n  // @see http://www.quirksmode.org/js/events_properties.html\n  return target.nodeType === 3 ? target.parentNode : target;\n}\n\nmodule.exports = getEventTarget;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/getEventTarget.js\n// module id = 43\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\n\nvar useHasFeature;\nif (ExecutionEnvironment.canUseDOM) {\n  useHasFeature = document.implementation && document.implementation.hasFeature &&\n  // always returns true in newer browsers as per the standard.\n  // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\n  document.implementation.hasFeature('', '') !== true;\n}\n\n/**\n * Checks if an event is supported in the current execution environment.\n *\n * NOTE: This will not work correctly for non-generic events such as `change`,\n * `reset`, `load`, `error`, and `select`.\n *\n * Borrows from Modernizr.\n *\n * @param {string} eventNameSuffix Event name, e.g. \"click\".\n * @param {?boolean} capture Check if the capture phase is supported.\n * @return {boolean} True if the event is supported.\n * @internal\n * @license Modernizr 3.0.0pre (Custom Build) | MIT\n */\nfunction isEventSupported(eventNameSuffix, capture) {\n  if (!ExecutionEnvironment.canUseDOM || capture && !('addEventListener' in document)) {\n    return false;\n  }\n\n  var eventName = 'on' + eventNameSuffix;\n  var isSupported = eventName in document;\n\n  if (!isSupported) {\n    var element = document.createElement('div');\n    element.setAttribute(eventName, 'return;');\n    isSupported = typeof element[eventName] === 'function';\n  }\n\n  if (!isSupported && useHasFeature && eventNameSuffix === 'wheel') {\n    // This is the only way to test support for the `wheel` event in IE9+.\n    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');\n  }\n\n  return isSupported;\n}\n\nmodule.exports = isEventSupported;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/isEventSupported.js\n// module id = 44\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\n/**\n * Given a `prevElement` and `nextElement`, determines if the existing\n * instance should be updated as opposed to being destroyed or replaced by a new\n * instance. Both arguments are elements. This ensures that this logic can\n * operate on stateless trees without any backing instance.\n *\n * @param {?object} prevElement\n * @param {?object} nextElement\n * @return {boolean} True if the existing instance should be updated.\n * @protected\n */\n\nfunction shouldUpdateReactComponent(prevElement, nextElement) {\n  var prevEmpty = prevElement === null || prevElement === false;\n  var nextEmpty = nextElement === null || nextElement === false;\n  if (prevEmpty || nextEmpty) {\n    return prevEmpty === nextEmpty;\n  }\n\n  var prevType = typeof prevElement;\n  var nextType = typeof nextElement;\n  if (prevType === 'string' || prevType === 'number') {\n    return nextType === 'string' || nextType === 'number';\n  } else {\n    return nextType === 'object' && prevElement.type === nextElement.type && prevElement.key === nextElement.key;\n  }\n}\n\nmodule.exports = shouldUpdateReactComponent;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/shouldUpdateReactComponent.js\n// module id = 45\n// module chunks = 0","/**\n * Copyright 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar warning = require('fbjs/lib/warning');\n\nvar validateDOMNesting = emptyFunction;\n\nif (process.env.NODE_ENV !== 'production') {\n  // This validation code was written based on the HTML5 parsing spec:\n  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope\n  //\n  // Note: this does not catch all invalid nesting, nor does it try to (as it's\n  // not clear what practical benefit doing so provides); instead, we warn only\n  // for cases where the parser will give a parse tree differing from what React\n  // intended. For example, <b><div></div></b> is invalid but we don't warn\n  // because it still parses correctly; we do warn for other cases like nested\n  // <p> tags where the beginning of the second element implicitly closes the\n  // first, causing a confusing mess.\n\n  // https://html.spec.whatwg.org/multipage/syntax.html#special\n  var specialTags = ['address', 'applet', 'area', 'article', 'aside', 'base', 'basefont', 'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe', 'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee', 'menu', 'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript', 'object', 'ol', 'p', 'param', 'plaintext', 'pre', 'script', 'section', 'select', 'source', 'style', 'summary', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr', 'xmp'];\n\n  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope\n  var inScopeTags = ['applet', 'caption', 'html', 'table', 'td', 'th', 'marquee', 'object', 'template',\n\n  // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point\n  // TODO: Distinguish by namespace here -- for <title>, including it here\n  // errs on the side of fewer warnings\n  'foreignObject', 'desc', 'title'];\n\n  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope\n  var buttonScopeTags = inScopeTags.concat(['button']);\n\n  // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags\n  var impliedEndTags = ['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'];\n\n  var emptyAncestorInfo = {\n    current: null,\n\n    formTag: null,\n    aTagInScope: null,\n    buttonTagInScope: null,\n    nobrTagInScope: null,\n    pTagInButtonScope: null,\n\n    listItemTagAutoclosing: null,\n    dlItemTagAutoclosing: null\n  };\n\n  var updatedAncestorInfo = function (oldInfo, tag, instance) {\n    var ancestorInfo = _assign({}, oldInfo || emptyAncestorInfo);\n    var info = { tag: tag, instance: instance };\n\n    if (inScopeTags.indexOf(tag) !== -1) {\n      ancestorInfo.aTagInScope = null;\n      ancestorInfo.buttonTagInScope = null;\n      ancestorInfo.nobrTagInScope = null;\n    }\n    if (buttonScopeTags.indexOf(tag) !== -1) {\n      ancestorInfo.pTagInButtonScope = null;\n    }\n\n    // See rules for 'li', 'dd', 'dt' start tags in\n    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody\n    if (specialTags.indexOf(tag) !== -1 && tag !== 'address' && tag !== 'div' && tag !== 'p') {\n      ancestorInfo.listItemTagAutoclosing = null;\n      ancestorInfo.dlItemTagAutoclosing = null;\n    }\n\n    ancestorInfo.current = info;\n\n    if (tag === 'form') {\n      ancestorInfo.formTag = info;\n    }\n    if (tag === 'a') {\n      ancestorInfo.aTagInScope = info;\n    }\n    if (tag === 'button') {\n      ancestorInfo.buttonTagInScope = info;\n    }\n    if (tag === 'nobr') {\n      ancestorInfo.nobrTagInScope = info;\n    }\n    if (tag === 'p') {\n      ancestorInfo.pTagInButtonScope = info;\n    }\n    if (tag === 'li') {\n      ancestorInfo.listItemTagAutoclosing = info;\n    }\n    if (tag === 'dd' || tag === 'dt') {\n      ancestorInfo.dlItemTagAutoclosing = info;\n    }\n\n    return ancestorInfo;\n  };\n\n  /**\n   * Returns whether\n   */\n  var isTagValidWithParent = function (tag, parentTag) {\n    // First, let's check if we're in an unusual parsing mode...\n    switch (parentTag) {\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect\n      case 'select':\n        return tag === 'option' || tag === 'optgroup' || tag === '#text';\n      case 'optgroup':\n        return tag === 'option' || tag === '#text';\n      // Strictly speaking, seeing an <option> doesn't mean we're in a <select>\n      // but\n      case 'option':\n        return tag === '#text';\n\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption\n      // No special behavior since these rules fall back to \"in body\" mode for\n      // all except special table nodes which cause bad parsing behavior anyway.\n\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr\n      case 'tr':\n        return tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template';\n\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody\n      case 'tbody':\n      case 'thead':\n      case 'tfoot':\n        return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';\n\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup\n      case 'colgroup':\n        return tag === 'col' || tag === 'template';\n\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable\n      case 'table':\n        return tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || tag === 'tfoot' || tag === 'thead' || tag === 'style' || tag === 'script' || tag === 'template';\n\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead\n      case 'head':\n        return tag === 'base' || tag === 'basefont' || tag === 'bgsound' || tag === 'link' || tag === 'meta' || tag === 'title' || tag === 'noscript' || tag === 'noframes' || tag === 'style' || tag === 'script' || tag === 'template';\n\n      // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element\n      case 'html':\n        return tag === 'head' || tag === 'body';\n      case '#document':\n        return tag === 'html';\n    }\n\n    // Probably in the \"in body\" parsing mode, so we outlaw only tag combos\n    // where the parsing rules cause implicit opens or closes to be added.\n    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody\n    switch (tag) {\n      case 'h1':\n      case 'h2':\n      case 'h3':\n      case 'h4':\n      case 'h5':\n      case 'h6':\n        return parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6';\n\n      case 'rp':\n      case 'rt':\n        return impliedEndTags.indexOf(parentTag) === -1;\n\n      case 'body':\n      case 'caption':\n      case 'col':\n      case 'colgroup':\n      case 'frame':\n      case 'head':\n      case 'html':\n      case 'tbody':\n      case 'td':\n      case 'tfoot':\n      case 'th':\n      case 'thead':\n      case 'tr':\n        // These tags are only valid with a few parents that have special child\n        // parsing rules -- if we're down here, then none of those matched and\n        // so we allow it only if we don't know what the parent is, as all other\n        // cases are invalid.\n        return parentTag == null;\n    }\n\n    return true;\n  };\n\n  /**\n   * Returns whether\n   */\n  var findInvalidAncestorForTag = function (tag, ancestorInfo) {\n    switch (tag) {\n      case 'address':\n      case 'article':\n      case 'aside':\n      case 'blockquote':\n      case 'center':\n      case 'details':\n      case 'dialog':\n      case 'dir':\n      case 'div':\n      case 'dl':\n      case 'fieldset':\n      case 'figcaption':\n      case 'figure':\n      case 'footer':\n      case 'header':\n      case 'hgroup':\n      case 'main':\n      case 'menu':\n      case 'nav':\n      case 'ol':\n      case 'p':\n      case 'section':\n      case 'summary':\n      case 'ul':\n      case 'pre':\n      case 'listing':\n      case 'table':\n      case 'hr':\n      case 'xmp':\n      case 'h1':\n      case 'h2':\n      case 'h3':\n      case 'h4':\n      case 'h5':\n      case 'h6':\n        return ancestorInfo.pTagInButtonScope;\n\n      case 'form':\n        return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;\n\n      case 'li':\n        return ancestorInfo.listItemTagAutoclosing;\n\n      case 'dd':\n      case 'dt':\n        return ancestorInfo.dlItemTagAutoclosing;\n\n      case 'button':\n        return ancestorInfo.buttonTagInScope;\n\n      case 'a':\n        // Spec says something about storing a list of markers, but it sounds\n        // equivalent to this check.\n        return ancestorInfo.aTagInScope;\n\n      case 'nobr':\n        return ancestorInfo.nobrTagInScope;\n    }\n\n    return null;\n  };\n\n  /**\n   * Given a ReactCompositeComponent instance, return a list of its recursive\n   * owners, starting at the root and ending with the instance itself.\n   */\n  var findOwnerStack = function (instance) {\n    if (!instance) {\n      return [];\n    }\n\n    var stack = [];\n    do {\n      stack.push(instance);\n    } while (instance = instance._currentElement._owner);\n    stack.reverse();\n    return stack;\n  };\n\n  var didWarn = {};\n\n  validateDOMNesting = function (childTag, childText, childInstance, ancestorInfo) {\n    ancestorInfo = ancestorInfo || emptyAncestorInfo;\n    var parentInfo = ancestorInfo.current;\n    var parentTag = parentInfo && parentInfo.tag;\n\n    if (childText != null) {\n      process.env.NODE_ENV !== 'production' ? warning(childTag == null, 'validateDOMNesting: when childText is passed, childTag should be null') : void 0;\n      childTag = '#text';\n    }\n\n    var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;\n    var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);\n    var problematic = invalidParent || invalidAncestor;\n\n    if (problematic) {\n      var ancestorTag = problematic.tag;\n      var ancestorInstance = problematic.instance;\n\n      var childOwner = childInstance && childInstance._currentElement._owner;\n      var ancestorOwner = ancestorInstance && ancestorInstance._currentElement._owner;\n\n      var childOwners = findOwnerStack(childOwner);\n      var ancestorOwners = findOwnerStack(ancestorOwner);\n\n      var minStackLen = Math.min(childOwners.length, ancestorOwners.length);\n      var i;\n\n      var deepestCommon = -1;\n      for (i = 0; i < minStackLen; i++) {\n        if (childOwners[i] === ancestorOwners[i]) {\n          deepestCommon = i;\n        } else {\n          break;\n        }\n      }\n\n      var UNKNOWN = '(unknown)';\n      var childOwnerNames = childOwners.slice(deepestCommon + 1).map(function (inst) {\n        return inst.getName() || UNKNOWN;\n      });\n      var ancestorOwnerNames = ancestorOwners.slice(deepestCommon + 1).map(function (inst) {\n        return inst.getName() || UNKNOWN;\n      });\n      var ownerInfo = [].concat(\n      // If the parent and child instances have a common owner ancestor, start\n      // with that -- otherwise we just start with the parent's owners.\n      deepestCommon !== -1 ? childOwners[deepestCommon].getName() || UNKNOWN : [], ancestorOwnerNames, ancestorTag,\n      // If we're warning about an invalid (non-parent) ancestry, add '...'\n      invalidAncestor ? ['...'] : [], childOwnerNames, childTag).join(' > ');\n\n      var warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag + '|' + ownerInfo;\n      if (didWarn[warnKey]) {\n        return;\n      }\n      didWarn[warnKey] = true;\n\n      var tagDisplayName = childTag;\n      var whitespaceInfo = '';\n      if (childTag === '#text') {\n        if (/\\S/.test(childText)) {\n          tagDisplayName = 'Text nodes';\n        } else {\n          tagDisplayName = 'Whitespace text nodes';\n          whitespaceInfo = ' Make sure you don\\'t have any extra whitespace between tags on ' + 'each line of your source code.';\n        }\n      } else {\n        tagDisplayName = '<' + childTag + '>';\n      }\n\n      if (invalidParent) {\n        var info = '';\n        if (ancestorTag === 'table' && childTag === 'tr') {\n          info += ' Add a <tbody> to your code to match the DOM tree generated by ' + 'the browser.';\n        }\n        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): %s cannot appear as a child of <%s>.%s ' + 'See %s.%s', tagDisplayName, ancestorTag, whitespaceInfo, ownerInfo, info) : void 0;\n      } else {\n        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): %s cannot appear as a descendant of ' + '<%s>. See %s.', tagDisplayName, ancestorTag, ownerInfo) : void 0;\n      }\n    }\n  };\n\n  validateDOMNesting.updatedAncestorInfo = updatedAncestorInfo;\n\n  // For testing\n  validateDOMNesting.isTagValidInContext = function (tag, ancestorInfo) {\n    ancestorInfo = ancestorInfo || emptyAncestorInfo;\n    var parentInfo = ancestorInfo.current;\n    var parentTag = parentInfo && parentInfo.tag;\n    return isTagValidWithParent(tag, parentTag) && !findInvalidAncestorForTag(tag, ancestorInfo);\n  };\n}\n\nmodule.exports = validateDOMNesting;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/validateDOMNesting.js\n// module id = 46\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks\n * \n */\n\n/*eslint-disable no-self-compare */\n\n'use strict';\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction is(x, y) {\n  // SameValue algorithm\n  if (x === y) {\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    // Added the nonzero y check to make Flow happy, but it is redundant\n    return x !== 0 || y !== 0 || 1 / x === 1 / y;\n  } else {\n    // Step 6.a: NaN == NaN\n    return x !== x && y !== y;\n  }\n}\n\n/**\n * Performs equality by iterating through keys on an object and returning false\n * when any key has values which are not strictly equal between the arguments.\n * Returns true when the values of all keys are strictly equal.\n */\nfunction shallowEqual(objA, objB) {\n  if (is(objA, objB)) {\n    return true;\n  }\n\n  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {\n    return false;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  // Test for A's keys different from B.\n  for (var i = 0; i < keysA.length; i++) {\n    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = shallowEqual;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/~/fbjs/lib/shallowEqual.js\n// module id = 47\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar ReactNoopUpdateQueue = require('./ReactNoopUpdateQueue');\n\nvar canDefineProperty = require('./canDefineProperty');\nvar emptyObject = require('fbjs/lib/emptyObject');\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\n/**\n * Base class helpers for the updating state of a component.\n */\nfunction ReactComponent(props, context, updater) {\n  this.props = props;\n  this.context = context;\n  this.refs = emptyObject;\n  // We initialize the default updater but the real one gets injected by the\n  // renderer.\n  this.updater = updater || ReactNoopUpdateQueue;\n}\n\nReactComponent.prototype.isReactComponent = {};\n\n/**\n * Sets a subset of the state. Always use this to mutate\n * state. You should treat `this.state` as immutable.\n *\n * There is no guarantee that `this.state` will be immediately updated, so\n * accessing `this.state` after calling this method may return the old value.\n *\n * There is no guarantee that calls to `setState` will run synchronously,\n * as they may eventually be batched together.  You can provide an optional\n * callback that will be executed when the call to setState is actually\n * completed.\n *\n * When a function is provided to setState, it will be called at some point in\n * the future (not synchronously). It will be called with the up to date\n * component arguments (state, props, context). These values can be different\n * from this.* because your function may be called after receiveProps but before\n * shouldComponentUpdate, and this new state, props, and context will not yet be\n * assigned to this.\n *\n * @param {object|function} partialState Next partial state or function to\n *        produce next partial state to be merged with current state.\n * @param {?function} callback Called after state is updated.\n * @final\n * @protected\n */\nReactComponent.prototype.setState = function (partialState, callback) {\n  !(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'setState(...): takes an object of state variables to update or a function which returns an object of state variables.') : _prodInvariant('85') : void 0;\n  this.updater.enqueueSetState(this, partialState);\n  if (callback) {\n    this.updater.enqueueCallback(this, callback, 'setState');\n  }\n};\n\n/**\n * Forces an update. This should only be invoked when it is known with\n * certainty that we are **not** in a DOM transaction.\n *\n * You may want to call this when you know that some deeper aspect of the\n * component's state has changed but `setState` was not called.\n *\n * This will not invoke `shouldComponentUpdate`, but it will invoke\n * `componentWillUpdate` and `componentDidUpdate`.\n *\n * @param {?function} callback Called after update is complete.\n * @final\n * @protected\n */\nReactComponent.prototype.forceUpdate = function (callback) {\n  this.updater.enqueueForceUpdate(this);\n  if (callback) {\n    this.updater.enqueueCallback(this, callback, 'forceUpdate');\n  }\n};\n\n/**\n * Deprecated APIs. These APIs used to exist on classic React classes but since\n * we would like to deprecate them, we're not going to move them over to this\n * modern base class. Instead, we define a getter that warns if it's accessed.\n */\nif (process.env.NODE_ENV !== 'production') {\n  var deprecatedAPIs = {\n    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],\n    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']\n  };\n  var defineDeprecationWarning = function (methodName, info) {\n    if (canDefineProperty) {\n      Object.defineProperty(ReactComponent.prototype, methodName, {\n        get: function () {\n          process.env.NODE_ENV !== 'production' ? warning(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]) : void 0;\n          return undefined;\n        }\n      });\n    }\n  };\n  for (var fnName in deprecatedAPIs) {\n    if (deprecatedAPIs.hasOwnProperty(fnName)) {\n      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);\n    }\n  }\n}\n\nmodule.exports = ReactComponent;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/ReactComponent.js\n// module id = 48\n// module chunks = 0","/**\n * Copyright 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar warning = require('fbjs/lib/warning');\n\nfunction warnNoop(publicInstance, callerName) {\n  if (process.env.NODE_ENV !== 'production') {\n    var constructor = publicInstance.constructor;\n    process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;\n  }\n}\n\n/**\n * This is the abstract API for an update queue.\n */\nvar ReactNoopUpdateQueue = {\n\n  /**\n   * Checks whether or not this composite component is mounted.\n   * @param {ReactClass} publicInstance The instance we want to test.\n   * @return {boolean} True if mounted, false otherwise.\n   * @protected\n   * @final\n   */\n  isMounted: function (publicInstance) {\n    return false;\n  },\n\n  /**\n   * Enqueue a callback that will be executed after all the pending updates\n   * have processed.\n   *\n   * @param {ReactClass} publicInstance The instance to use as `this` context.\n   * @param {?function} callback Called after state is updated.\n   * @internal\n   */\n  enqueueCallback: function (publicInstance, callback) {},\n\n  /**\n   * Forces an update. This should only be invoked when it is known with\n   * certainty that we are **not** in a DOM transaction.\n   *\n   * You may want to call this when you know that some deeper aspect of the\n   * component's state has changed but `setState` was not called.\n   *\n   * This will not invoke `shouldComponentUpdate`, but it will invoke\n   * `componentWillUpdate` and `componentDidUpdate`.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @internal\n   */\n  enqueueForceUpdate: function (publicInstance) {\n    warnNoop(publicInstance, 'forceUpdate');\n  },\n\n  /**\n   * Replaces all of the state. Always use this or `setState` to mutate state.\n   * You should treat `this.state` as immutable.\n   *\n   * There is no guarantee that `this.state` will be immediately updated, so\n   * accessing `this.state` after calling this method may return the old value.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} completeState Next state.\n   * @internal\n   */\n  enqueueReplaceState: function (publicInstance, completeState) {\n    warnNoop(publicInstance, 'replaceState');\n  },\n\n  /**\n   * Sets a subset of the state. This only exists because _pendingState is\n   * internal. This provides a merging strategy that is not available to deep\n   * properties which is confusing. TODO: Expose pendingState or don't use it\n   * during the merge.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} partialState Next partial state to be merged with state.\n   * @internal\n   */\n  enqueueSetState: function (publicInstance, partialState) {\n    warnNoop(publicInstance, 'setState');\n  }\n};\n\nmodule.exports = ReactNoopUpdateQueue;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/ReactNoopUpdateQueue.js\n// module id = 49\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar emptyObject = {};\n\nif (process.env.NODE_ENV !== 'production') {\n  Object.freeze(emptyObject);\n}\n\nmodule.exports = emptyObject;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/~/fbjs/lib/emptyObject.js\n// module id = 51\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\n/**\n * CSS properties which accept numbers but are not in units of \"px\".\n */\n\nvar isUnitlessNumber = {\n  animationIterationCount: true,\n  borderImageOutset: true,\n  borderImageSlice: true,\n  borderImageWidth: true,\n  boxFlex: true,\n  boxFlexGroup: true,\n  boxOrdinalGroup: true,\n  columnCount: true,\n  flex: true,\n  flexGrow: true,\n  flexPositive: true,\n  flexShrink: true,\n  flexNegative: true,\n  flexOrder: true,\n  gridRow: true,\n  gridColumn: true,\n  fontWeight: true,\n  lineClamp: true,\n  lineHeight: true,\n  opacity: true,\n  order: true,\n  orphans: true,\n  tabSize: true,\n  widows: true,\n  zIndex: true,\n  zoom: true,\n\n  // SVG-related properties\n  fillOpacity: true,\n  floodOpacity: true,\n  stopOpacity: true,\n  strokeDasharray: true,\n  strokeDashoffset: true,\n  strokeMiterlimit: true,\n  strokeOpacity: true,\n  strokeWidth: true\n};\n\n/**\n * @param {string} prefix vendor-specific prefix, eg: Webkit\n * @param {string} key style name, eg: transitionDuration\n * @return {string} style name prefixed with `prefix`, properly camelCased, eg:\n * WebkitTransitionDuration\n */\nfunction prefixKey(prefix, key) {\n  return prefix + key.charAt(0).toUpperCase() + key.substring(1);\n}\n\n/**\n * Support style names that may come passed in prefixed by adding permutations\n * of vendor prefixes.\n */\nvar prefixes = ['Webkit', 'ms', 'Moz', 'O'];\n\n// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an\n// infinite loop, because it iterates over the newly added props too.\nObject.keys(isUnitlessNumber).forEach(function (prop) {\n  prefixes.forEach(function (prefix) {\n    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];\n  });\n});\n\n/**\n * Most style properties can be unset by doing .style[prop] = '' but IE8\n * doesn't like doing that with shorthand properties so for the properties that\n * IE8 breaks on, which are listed here, we instead unset each of the\n * individual properties. See http://bugs.jquery.com/ticket/12385.\n * The 4-value 'clock' properties like margin, padding, border-width seem to\n * behave without any problems. Curiously, list-style works too without any\n * special prodding.\n */\nvar shorthandPropertyExpansions = {\n  background: {\n    backgroundAttachment: true,\n    backgroundColor: true,\n    backgroundImage: true,\n    backgroundPositionX: true,\n    backgroundPositionY: true,\n    backgroundRepeat: true\n  },\n  backgroundPosition: {\n    backgroundPositionX: true,\n    backgroundPositionY: true\n  },\n  border: {\n    borderWidth: true,\n    borderStyle: true,\n    borderColor: true\n  },\n  borderBottom: {\n    borderBottomWidth: true,\n    borderBottomStyle: true,\n    borderBottomColor: true\n  },\n  borderLeft: {\n    borderLeftWidth: true,\n    borderLeftStyle: true,\n    borderLeftColor: true\n  },\n  borderRight: {\n    borderRightWidth: true,\n    borderRightStyle: true,\n    borderRightColor: true\n  },\n  borderTop: {\n    borderTopWidth: true,\n    borderTopStyle: true,\n    borderTopColor: true\n  },\n  font: {\n    fontStyle: true,\n    fontVariant: true,\n    fontWeight: true,\n    fontSize: true,\n    lineHeight: true,\n    fontFamily: true\n  },\n  outline: {\n    outlineWidth: true,\n    outlineStyle: true,\n    outlineColor: true\n  }\n};\n\nvar CSSProperty = {\n  isUnitlessNumber: isUnitlessNumber,\n  shorthandPropertyExpansions: shorthandPropertyExpansions\n};\n\nmodule.exports = CSSProperty;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/CSSProperty.js\n// module id = 52\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar PooledClass = require('./PooledClass');\n\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * A specialized pseudo-event module to help keep track of components waiting to\n * be notified when their DOM representations are available for use.\n *\n * This implements `PooledClass`, so you should never need to instantiate this.\n * Instead, use `CallbackQueue.getPooled()`.\n *\n * @class ReactMountReady\n * @implements PooledClass\n * @internal\n */\n\nvar CallbackQueue = function () {\n  function CallbackQueue(arg) {\n    _classCallCheck(this, CallbackQueue);\n\n    this._callbacks = null;\n    this._contexts = null;\n    this._arg = arg;\n  }\n\n  /**\n   * Enqueues a callback to be invoked when `notifyAll` is invoked.\n   *\n   * @param {function} callback Invoked when `notifyAll` is invoked.\n   * @param {?object} context Context to call `callback` with.\n   * @internal\n   */\n\n\n  CallbackQueue.prototype.enqueue = function enqueue(callback, context) {\n    this._callbacks = this._callbacks || [];\n    this._callbacks.push(callback);\n    this._contexts = this._contexts || [];\n    this._contexts.push(context);\n  };\n\n  /**\n   * Invokes all enqueued callbacks and clears the queue. This is invoked after\n   * the DOM representation of a component has been created or updated.\n   *\n   * @internal\n   */\n\n\n  CallbackQueue.prototype.notifyAll = function notifyAll() {\n    var callbacks = this._callbacks;\n    var contexts = this._contexts;\n    var arg = this._arg;\n    if (callbacks && contexts) {\n      !(callbacks.length === contexts.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Mismatched list of contexts in callback queue') : _prodInvariant('24') : void 0;\n      this._callbacks = null;\n      this._contexts = null;\n      for (var i = 0; i < callbacks.length; i++) {\n        callbacks[i].call(contexts[i], arg);\n      }\n      callbacks.length = 0;\n      contexts.length = 0;\n    }\n  };\n\n  CallbackQueue.prototype.checkpoint = function checkpoint() {\n    return this._callbacks ? this._callbacks.length : 0;\n  };\n\n  CallbackQueue.prototype.rollback = function rollback(len) {\n    if (this._callbacks && this._contexts) {\n      this._callbacks.length = len;\n      this._contexts.length = len;\n    }\n  };\n\n  /**\n   * Resets the internal queue.\n   *\n   * @internal\n   */\n\n\n  CallbackQueue.prototype.reset = function reset() {\n    this._callbacks = null;\n    this._contexts = null;\n  };\n\n  /**\n   * `PooledClass` looks for this.\n   */\n\n\n  CallbackQueue.prototype.destructor = function destructor() {\n    this.reset();\n  };\n\n  return CallbackQueue;\n}();\n\nmodule.exports = PooledClass.addPoolingTo(CallbackQueue);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/CallbackQueue.js\n// module id = 53\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar DOMProperty = require('./DOMProperty');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar ReactInstrumentation = require('./ReactInstrumentation');\n\nvar quoteAttributeValueForBrowser = require('./quoteAttributeValueForBrowser');\nvar warning = require('fbjs/lib/warning');\n\nvar VALID_ATTRIBUTE_NAME_REGEX = new RegExp('^[' + DOMProperty.ATTRIBUTE_NAME_START_CHAR + '][' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$');\nvar illegalAttributeNameCache = {};\nvar validatedAttributeNameCache = {};\n\nfunction isAttributeNameSafe(attributeName) {\n  if (validatedAttributeNameCache.hasOwnProperty(attributeName)) {\n    return true;\n  }\n  if (illegalAttributeNameCache.hasOwnProperty(attributeName)) {\n    return false;\n  }\n  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {\n    validatedAttributeNameCache[attributeName] = true;\n    return true;\n  }\n  illegalAttributeNameCache[attributeName] = true;\n  process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid attribute name: `%s`', attributeName) : void 0;\n  return false;\n}\n\nfunction shouldIgnoreValue(propertyInfo, value) {\n  return value == null || propertyInfo.hasBooleanValue && !value || propertyInfo.hasNumericValue && isNaN(value) || propertyInfo.hasPositiveNumericValue && value < 1 || propertyInfo.hasOverloadedBooleanValue && value === false;\n}\n\n/**\n * Operations for dealing with DOM properties.\n */\nvar DOMPropertyOperations = {\n\n  /**\n   * Creates markup for the ID property.\n   *\n   * @param {string} id Unescaped ID.\n   * @return {string} Markup string.\n   */\n  createMarkupForID: function (id) {\n    return DOMProperty.ID_ATTRIBUTE_NAME + '=' + quoteAttributeValueForBrowser(id);\n  },\n\n  setAttributeForID: function (node, id) {\n    node.setAttribute(DOMProperty.ID_ATTRIBUTE_NAME, id);\n  },\n\n  createMarkupForRoot: function () {\n    return DOMProperty.ROOT_ATTRIBUTE_NAME + '=\"\"';\n  },\n\n  setAttributeForRoot: function (node) {\n    node.setAttribute(DOMProperty.ROOT_ATTRIBUTE_NAME, '');\n  },\n\n  /**\n   * Creates markup for a property.\n   *\n   * @param {string} name\n   * @param {*} value\n   * @return {?string} Markup string, or null if the property was invalid.\n   */\n  createMarkupForProperty: function (name, value) {\n    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;\n    if (propertyInfo) {\n      if (shouldIgnoreValue(propertyInfo, value)) {\n        return '';\n      }\n      var attributeName = propertyInfo.attributeName;\n      if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {\n        return attributeName + '=\"\"';\n      }\n      return attributeName + '=' + quoteAttributeValueForBrowser(value);\n    } else if (DOMProperty.isCustomAttribute(name)) {\n      if (value == null) {\n        return '';\n      }\n      return name + '=' + quoteAttributeValueForBrowser(value);\n    }\n    return null;\n  },\n\n  /**\n   * Creates markup for a custom property.\n   *\n   * @param {string} name\n   * @param {*} value\n   * @return {string} Markup string, or empty string if the property was invalid.\n   */\n  createMarkupForCustomAttribute: function (name, value) {\n    if (!isAttributeNameSafe(name) || value == null) {\n      return '';\n    }\n    return name + '=' + quoteAttributeValueForBrowser(value);\n  },\n\n  /**\n   * Sets the value for a property on a node.\n   *\n   * @param {DOMElement} node\n   * @param {string} name\n   * @param {*} value\n   */\n  setValueForProperty: function (node, name, value) {\n    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;\n    if (propertyInfo) {\n      var mutationMethod = propertyInfo.mutationMethod;\n      if (mutationMethod) {\n        mutationMethod(node, value);\n      } else if (shouldIgnoreValue(propertyInfo, value)) {\n        this.deleteValueForProperty(node, name);\n        return;\n      } else if (propertyInfo.mustUseProperty) {\n        // Contrary to `setAttribute`, object properties are properly\n        // `toString`ed by IE8/9.\n        node[propertyInfo.propertyName] = value;\n      } else {\n        var attributeName = propertyInfo.attributeName;\n        var namespace = propertyInfo.attributeNamespace;\n        // `setAttribute` with objects becomes only `[object]` in IE8/9,\n        // ('' + value) makes it output the correct toString()-value.\n        if (namespace) {\n          node.setAttributeNS(namespace, attributeName, '' + value);\n        } else if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {\n          node.setAttribute(attributeName, '');\n        } else {\n          node.setAttribute(attributeName, '' + value);\n        }\n      }\n    } else if (DOMProperty.isCustomAttribute(name)) {\n      DOMPropertyOperations.setValueForAttribute(node, name, value);\n      return;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      var payload = {};\n      payload[name] = value;\n      ReactInstrumentation.debugTool.onHostOperation({\n        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,\n        type: 'update attribute',\n        payload: payload\n      });\n    }\n  },\n\n  setValueForAttribute: function (node, name, value) {\n    if (!isAttributeNameSafe(name)) {\n      return;\n    }\n    if (value == null) {\n      node.removeAttribute(name);\n    } else {\n      node.setAttribute(name, '' + value);\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      var payload = {};\n      payload[name] = value;\n      ReactInstrumentation.debugTool.onHostOperation({\n        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,\n        type: 'update attribute',\n        payload: payload\n      });\n    }\n  },\n\n  /**\n   * Deletes an attributes from a node.\n   *\n   * @param {DOMElement} node\n   * @param {string} name\n   */\n  deleteValueForAttribute: function (node, name) {\n    node.removeAttribute(name);\n    if (process.env.NODE_ENV !== 'production') {\n      ReactInstrumentation.debugTool.onHostOperation({\n        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,\n        type: 'remove attribute',\n        payload: name\n      });\n    }\n  },\n\n  /**\n   * Deletes the value for a property on a node.\n   *\n   * @param {DOMElement} node\n   * @param {string} name\n   */\n  deleteValueForProperty: function (node, name) {\n    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;\n    if (propertyInfo) {\n      var mutationMethod = propertyInfo.mutationMethod;\n      if (mutationMethod) {\n        mutationMethod(node, undefined);\n      } else if (propertyInfo.mustUseProperty) {\n        var propName = propertyInfo.propertyName;\n        if (propertyInfo.hasBooleanValue) {\n          node[propName] = false;\n        } else {\n          node[propName] = '';\n        }\n      } else {\n        node.removeAttribute(propertyInfo.attributeName);\n      }\n    } else if (DOMProperty.isCustomAttribute(name)) {\n      node.removeAttribute(name);\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      ReactInstrumentation.debugTool.onHostOperation({\n        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,\n        type: 'remove attribute',\n        payload: name\n      });\n    }\n  }\n\n};\n\nmodule.exports = DOMPropertyOperations;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/DOMPropertyOperations.js\n// module id = 54\n// module chunks = 0","/**\n * Copyright 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar ReactDOMComponentFlags = {\n  hasCachedChildNodes: 1 << 0\n};\n\nmodule.exports = ReactDOMComponentFlags;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactDOMComponentFlags.js\n// module id = 55\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar LinkedValueUtils = require('./LinkedValueUtils');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar ReactUpdates = require('./ReactUpdates');\n\nvar warning = require('fbjs/lib/warning');\n\nvar didWarnValueLink = false;\nvar didWarnValueDefaultValue = false;\n\nfunction updateOptionsIfPendingUpdateAndMounted() {\n  if (this._rootNodeID && this._wrapperState.pendingUpdate) {\n    this._wrapperState.pendingUpdate = false;\n\n    var props = this._currentElement.props;\n    var value = LinkedValueUtils.getValue(props);\n\n    if (value != null) {\n      updateOptions(this, Boolean(props.multiple), value);\n    }\n  }\n}\n\nfunction getDeclarationErrorAddendum(owner) {\n  if (owner) {\n    var name = owner.getName();\n    if (name) {\n      return ' Check the render method of `' + name + '`.';\n    }\n  }\n  return '';\n}\n\nvar valuePropNames = ['value', 'defaultValue'];\n\n/**\n * Validation function for `value` and `defaultValue`.\n * @private\n */\nfunction checkSelectPropTypes(inst, props) {\n  var owner = inst._currentElement._owner;\n  LinkedValueUtils.checkPropTypes('select', props, owner);\n\n  if (props.valueLink !== undefined && !didWarnValueLink) {\n    process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `select` is deprecated; set `value` and `onChange` instead.') : void 0;\n    didWarnValueLink = true;\n  }\n\n  for (var i = 0; i < valuePropNames.length; i++) {\n    var propName = valuePropNames[i];\n    if (props[propName] == null) {\n      continue;\n    }\n    var isArray = Array.isArray(props[propName]);\n    if (props.multiple && !isArray) {\n      process.env.NODE_ENV !== 'production' ? warning(false, 'The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;\n    } else if (!props.multiple && isArray) {\n      process.env.NODE_ENV !== 'production' ? warning(false, 'The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;\n    }\n  }\n}\n\n/**\n * @param {ReactDOMComponent} inst\n * @param {boolean} multiple\n * @param {*} propValue A stringable (with `multiple`, a list of stringables).\n * @private\n */\nfunction updateOptions(inst, multiple, propValue) {\n  var selectedValue, i;\n  var options = ReactDOMComponentTree.getNodeFromInstance(inst).options;\n\n  if (multiple) {\n    selectedValue = {};\n    for (i = 0; i < propValue.length; i++) {\n      selectedValue['' + propValue[i]] = true;\n    }\n    for (i = 0; i < options.length; i++) {\n      var selected = selectedValue.hasOwnProperty(options[i].value);\n      if (options[i].selected !== selected) {\n        options[i].selected = selected;\n      }\n    }\n  } else {\n    // Do not set `select.value` as exact behavior isn't consistent across all\n    // browsers for all cases.\n    selectedValue = '' + propValue;\n    for (i = 0; i < options.length; i++) {\n      if (options[i].value === selectedValue) {\n        options[i].selected = true;\n        return;\n      }\n    }\n    if (options.length) {\n      options[0].selected = true;\n    }\n  }\n}\n\n/**\n * Implements a <select> host component that allows optionally setting the\n * props `value` and `defaultValue`. If `multiple` is false, the prop must be a\n * stringable. If `multiple` is true, the prop must be an array of stringables.\n *\n * If `value` is not supplied (or null/undefined), user actions that change the\n * selected option will trigger updates to the rendered options.\n *\n * If it is supplied (and not null/undefined), the rendered options will not\n * update in response to user actions. Instead, the `value` prop must change in\n * order for the rendered options to update.\n *\n * If `defaultValue` is provided, any options with the supplied values will be\n * selected.\n */\nvar ReactDOMSelect = {\n  getHostProps: function (inst, props) {\n    return _assign({}, props, {\n      onChange: inst._wrapperState.onChange,\n      value: undefined\n    });\n  },\n\n  mountWrapper: function (inst, props) {\n    if (process.env.NODE_ENV !== 'production') {\n      checkSelectPropTypes(inst, props);\n    }\n\n    var value = LinkedValueUtils.getValue(props);\n    inst._wrapperState = {\n      pendingUpdate: false,\n      initialValue: value != null ? value : props.defaultValue,\n      listeners: null,\n      onChange: _handleChange.bind(inst),\n      wasMultiple: Boolean(props.multiple)\n    };\n\n    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {\n      process.env.NODE_ENV !== 'production' ? warning(false, 'Select elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled select ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;\n      didWarnValueDefaultValue = true;\n    }\n  },\n\n  getSelectValueContext: function (inst) {\n    // ReactDOMOption looks at this initial value so the initial generated\n    // markup has correct `selected` attributes\n    return inst._wrapperState.initialValue;\n  },\n\n  postUpdateWrapper: function (inst) {\n    var props = inst._currentElement.props;\n\n    // After the initial mount, we control selected-ness manually so don't pass\n    // this value down\n    inst._wrapperState.initialValue = undefined;\n\n    var wasMultiple = inst._wrapperState.wasMultiple;\n    inst._wrapperState.wasMultiple = Boolean(props.multiple);\n\n    var value = LinkedValueUtils.getValue(props);\n    if (value != null) {\n      inst._wrapperState.pendingUpdate = false;\n      updateOptions(inst, Boolean(props.multiple), value);\n    } else if (wasMultiple !== Boolean(props.multiple)) {\n      // For simplicity, reapply `defaultValue` if `multiple` is toggled.\n      if (props.defaultValue != null) {\n        updateOptions(inst, Boolean(props.multiple), props.defaultValue);\n      } else {\n        // Revert the select back to its default unselected state.\n        updateOptions(inst, Boolean(props.multiple), props.multiple ? [] : '');\n      }\n    }\n  }\n};\n\nfunction _handleChange(event) {\n  var props = this._currentElement.props;\n  var returnValue = LinkedValueUtils.executeOnChange(props, event);\n\n  if (this._rootNodeID) {\n    this._wrapperState.pendingUpdate = true;\n  }\n  ReactUpdates.asap(updateOptionsIfPendingUpdateAndMounted, this);\n  return returnValue;\n}\n\nmodule.exports = ReactDOMSelect;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactDOMSelect.js\n// module id = 56\n// module chunks = 0","/**\n * Copyright 2014-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar emptyComponentFactory;\n\nvar ReactEmptyComponentInjection = {\n  injectEmptyComponentFactory: function (factory) {\n    emptyComponentFactory = factory;\n  }\n};\n\nvar ReactEmptyComponent = {\n  create: function (instantiate) {\n    return emptyComponentFactory(instantiate);\n  }\n};\n\nReactEmptyComponent.injection = ReactEmptyComponentInjection;\n\nmodule.exports = ReactEmptyComponent;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactEmptyComponent.js\n// module id = 57\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar ReactFeatureFlags = {\n  // When true, call console.time() before and .timeEnd() after each top-level\n  // render (both initial renders and updates). Useful when looking at prod-mode\n  // timeline profiles in Chrome, for example.\n  logTopLevelRenders: false\n};\n\nmodule.exports = ReactFeatureFlags;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactFeatureFlags.js\n// module id = 58\n// module chunks = 0","/**\n * Copyright 2014-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar invariant = require('fbjs/lib/invariant');\n\nvar genericComponentClass = null;\nvar textComponentClass = null;\n\nvar ReactHostComponentInjection = {\n  // This accepts a class that receives the tag string. This is a catch all\n  // that can render any kind of tag.\n  injectGenericComponentClass: function (componentClass) {\n    genericComponentClass = componentClass;\n  },\n  // This accepts a text component class that takes the text string to be\n  // rendered as props.\n  injectTextComponentClass: function (componentClass) {\n    textComponentClass = componentClass;\n  }\n};\n\n/**\n * Get a host internal component class for a specific tag.\n *\n * @param {ReactElement} element The element to create.\n * @return {function} The internal class constructor function.\n */\nfunction createInternalComponent(element) {\n  !genericComponentClass ? process.env.NODE_ENV !== 'production' ? invariant(false, 'There is no registered component for the tag %s', element.type) : _prodInvariant('111', element.type) : void 0;\n  return new genericComponentClass(element);\n}\n\n/**\n * @param {ReactText} text\n * @return {ReactComponent}\n */\nfunction createInstanceForText(text) {\n  return new textComponentClass(text);\n}\n\n/**\n * @param {ReactComponent} component\n * @return {boolean}\n */\nfunction isTextComponent(component) {\n  return component instanceof textComponentClass;\n}\n\nvar ReactHostComponent = {\n  createInternalComponent: createInternalComponent,\n  createInstanceForText: createInstanceForText,\n  isTextComponent: isTextComponent,\n  injection: ReactHostComponentInjection\n};\n\nmodule.exports = ReactHostComponent;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactHostComponent.js\n// module id = 59\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar ReactDOMSelection = require('./ReactDOMSelection');\n\nvar containsNode = require('fbjs/lib/containsNode');\nvar focusNode = require('fbjs/lib/focusNode');\nvar getActiveElement = require('fbjs/lib/getActiveElement');\n\nfunction isInDocument(node) {\n  return containsNode(document.documentElement, node);\n}\n\n/**\n * @ReactInputSelection: React input selection module. Based on Selection.js,\n * but modified to be suitable for react and has a couple of bug fixes (doesn't\n * assume buttons have range selections allowed).\n * Input selection module for React.\n */\nvar ReactInputSelection = {\n\n  hasSelectionCapabilities: function (elem) {\n    var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();\n    return nodeName && (nodeName === 'input' && elem.type === 'text' || nodeName === 'textarea' || elem.contentEditable === 'true');\n  },\n\n  getSelectionInformation: function () {\n    var focusedElem = getActiveElement();\n    return {\n      focusedElem: focusedElem,\n      selectionRange: ReactInputSelection.hasSelectionCapabilities(focusedElem) ? ReactInputSelection.getSelection(focusedElem) : null\n    };\n  },\n\n  /**\n   * @restoreSelection: If any selection information was potentially lost,\n   * restore it. This is useful when performing operations that could remove dom\n   * nodes and place them back in, resulting in focus being lost.\n   */\n  restoreSelection: function (priorSelectionInformation) {\n    var curFocusedElem = getActiveElement();\n    var priorFocusedElem = priorSelectionInformation.focusedElem;\n    var priorSelectionRange = priorSelectionInformation.selectionRange;\n    if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {\n      if (ReactInputSelection.hasSelectionCapabilities(priorFocusedElem)) {\n        ReactInputSelection.setSelection(priorFocusedElem, priorSelectionRange);\n      }\n      focusNode(priorFocusedElem);\n    }\n  },\n\n  /**\n   * @getSelection: Gets the selection bounds of a focused textarea, input or\n   * contentEditable node.\n   * -@input: Look up selection bounds of this input\n   * -@return {start: selectionStart, end: selectionEnd}\n   */\n  getSelection: function (input) {\n    var selection;\n\n    if ('selectionStart' in input) {\n      // Modern browser with input or textarea.\n      selection = {\n        start: input.selectionStart,\n        end: input.selectionEnd\n      };\n    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {\n      // IE8 input.\n      var range = document.selection.createRange();\n      // There can only be one selection per document in IE, so it must\n      // be in our element.\n      if (range.parentElement() === input) {\n        selection = {\n          start: -range.moveStart('character', -input.value.length),\n          end: -range.moveEnd('character', -input.value.length)\n        };\n      }\n    } else {\n      // Content editable or old IE textarea.\n      selection = ReactDOMSelection.getOffsets(input);\n    }\n\n    return selection || { start: 0, end: 0 };\n  },\n\n  /**\n   * @setSelection: Sets the selection bounds of a textarea or input and focuses\n   * the input.\n   * -@input     Set selection bounds of this input or textarea\n   * -@offsets   Object of same form that is returned from get*\n   */\n  setSelection: function (input, offsets) {\n    var start = offsets.start;\n    var end = offsets.end;\n    if (end === undefined) {\n      end = start;\n    }\n\n    if ('selectionStart' in input) {\n      input.selectionStart = start;\n      input.selectionEnd = Math.min(end, input.value.length);\n    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {\n      var range = input.createTextRange();\n      range.collapse(true);\n      range.moveStart('character', start);\n      range.moveEnd('character', end - start);\n      range.select();\n    } else {\n      ReactDOMSelection.setOffsets(input, offsets);\n    }\n  }\n};\n\nmodule.exports = ReactInputSelection;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactInputSelection.js\n// module id = 60\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar DOMLazyTree = require('./DOMLazyTree');\nvar DOMProperty = require('./DOMProperty');\nvar React = require('react/lib/React');\nvar ReactBrowserEventEmitter = require('./ReactBrowserEventEmitter');\nvar ReactCurrentOwner = require('react/lib/ReactCurrentOwner');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar ReactDOMContainerInfo = require('./ReactDOMContainerInfo');\nvar ReactDOMFeatureFlags = require('./ReactDOMFeatureFlags');\nvar ReactFeatureFlags = require('./ReactFeatureFlags');\nvar ReactInstanceMap = require('./ReactInstanceMap');\nvar ReactInstrumentation = require('./ReactInstrumentation');\nvar ReactMarkupChecksum = require('./ReactMarkupChecksum');\nvar ReactReconciler = require('./ReactReconciler');\nvar ReactUpdateQueue = require('./ReactUpdateQueue');\nvar ReactUpdates = require('./ReactUpdates');\n\nvar emptyObject = require('fbjs/lib/emptyObject');\nvar instantiateReactComponent = require('./instantiateReactComponent');\nvar invariant = require('fbjs/lib/invariant');\nvar setInnerHTML = require('./setInnerHTML');\nvar shouldUpdateReactComponent = require('./shouldUpdateReactComponent');\nvar warning = require('fbjs/lib/warning');\n\nvar ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;\nvar ROOT_ATTR_NAME = DOMProperty.ROOT_ATTRIBUTE_NAME;\n\nvar ELEMENT_NODE_TYPE = 1;\nvar DOC_NODE_TYPE = 9;\nvar DOCUMENT_FRAGMENT_NODE_TYPE = 11;\n\nvar instancesByReactRootID = {};\n\n/**\n * Finds the index of the first character\n * that's not common between the two given strings.\n *\n * @return {number} the index of the character where the strings diverge\n */\nfunction firstDifferenceIndex(string1, string2) {\n  var minLen = Math.min(string1.length, string2.length);\n  for (var i = 0; i < minLen; i++) {\n    if (string1.charAt(i) !== string2.charAt(i)) {\n      return i;\n    }\n  }\n  return string1.length === string2.length ? -1 : minLen;\n}\n\n/**\n * @param {DOMElement|DOMDocument} container DOM element that may contain\n * a React component\n * @return {?*} DOM element that may have the reactRoot ID, or null.\n */\nfunction getReactRootElementInContainer(container) {\n  if (!container) {\n    return null;\n  }\n\n  if (container.nodeType === DOC_NODE_TYPE) {\n    return container.documentElement;\n  } else {\n    return container.firstChild;\n  }\n}\n\nfunction internalGetID(node) {\n  // If node is something like a window, document, or text node, none of\n  // which support attributes or a .getAttribute method, gracefully return\n  // the empty string, as if the attribute were missing.\n  return node.getAttribute && node.getAttribute(ATTR_NAME) || '';\n}\n\n/**\n * Mounts this component and inserts it into the DOM.\n *\n * @param {ReactComponent} componentInstance The instance to mount.\n * @param {DOMElement} container DOM element to mount into.\n * @param {ReactReconcileTransaction} transaction\n * @param {boolean} shouldReuseMarkup If true, do not insert markup\n */\nfunction mountComponentIntoNode(wrapperInstance, container, transaction, shouldReuseMarkup, context) {\n  var markerName;\n  if (ReactFeatureFlags.logTopLevelRenders) {\n    var wrappedElement = wrapperInstance._currentElement.props.child;\n    var type = wrappedElement.type;\n    markerName = 'React mount: ' + (typeof type === 'string' ? type : type.displayName || type.name);\n    console.time(markerName);\n  }\n\n  var markup = ReactReconciler.mountComponent(wrapperInstance, transaction, null, ReactDOMContainerInfo(wrapperInstance, container), context, 0 /* parentDebugID */\n  );\n\n  if (markerName) {\n    console.timeEnd(markerName);\n  }\n\n  wrapperInstance._renderedComponent._topLevelWrapper = wrapperInstance;\n  ReactMount._mountImageIntoNode(markup, container, wrapperInstance, shouldReuseMarkup, transaction);\n}\n\n/**\n * Batched mount.\n *\n * @param {ReactComponent} componentInstance The instance to mount.\n * @param {DOMElement} container DOM element to mount into.\n * @param {boolean} shouldReuseMarkup If true, do not insert markup\n */\nfunction batchedMountComponentIntoNode(componentInstance, container, shouldReuseMarkup, context) {\n  var transaction = ReactUpdates.ReactReconcileTransaction.getPooled(\n  /* useCreateElement */\n  !shouldReuseMarkup && ReactDOMFeatureFlags.useCreateElement);\n  transaction.perform(mountComponentIntoNode, null, componentInstance, container, transaction, shouldReuseMarkup, context);\n  ReactUpdates.ReactReconcileTransaction.release(transaction);\n}\n\n/**\n * Unmounts a component and removes it from the DOM.\n *\n * @param {ReactComponent} instance React component instance.\n * @param {DOMElement} container DOM element to unmount from.\n * @final\n * @internal\n * @see {ReactMount.unmountComponentAtNode}\n */\nfunction unmountComponentFromNode(instance, container, safely) {\n  if (process.env.NODE_ENV !== 'production') {\n    ReactInstrumentation.debugTool.onBeginFlush();\n  }\n  ReactReconciler.unmountComponent(instance, safely);\n  if (process.env.NODE_ENV !== 'production') {\n    ReactInstrumentation.debugTool.onEndFlush();\n  }\n\n  if (container.nodeType === DOC_NODE_TYPE) {\n    container = container.documentElement;\n  }\n\n  // http://jsperf.com/emptying-a-node\n  while (container.lastChild) {\n    container.removeChild(container.lastChild);\n  }\n}\n\n/**\n * True if the supplied DOM node has a direct React-rendered child that is\n * not a React root element. Useful for warning in `render`,\n * `unmountComponentAtNode`, etc.\n *\n * @param {?DOMElement} node The candidate DOM node.\n * @return {boolean} True if the DOM element contains a direct child that was\n * rendered by React but is not a root element.\n * @internal\n */\nfunction hasNonRootReactChild(container) {\n  var rootEl = getReactRootElementInContainer(container);\n  if (rootEl) {\n    var inst = ReactDOMComponentTree.getInstanceFromNode(rootEl);\n    return !!(inst && inst._hostParent);\n  }\n}\n\n/**\n * True if the supplied DOM node is a React DOM element and\n * it has been rendered by another copy of React.\n *\n * @param {?DOMElement} node The candidate DOM node.\n * @return {boolean} True if the DOM has been rendered by another copy of React\n * @internal\n */\nfunction nodeIsRenderedByOtherInstance(container) {\n  var rootEl = getReactRootElementInContainer(container);\n  return !!(rootEl && isReactNode(rootEl) && !ReactDOMComponentTree.getInstanceFromNode(rootEl));\n}\n\n/**\n * True if the supplied DOM node is a valid node element.\n *\n * @param {?DOMElement} node The candidate DOM node.\n * @return {boolean} True if the DOM is a valid DOM node.\n * @internal\n */\nfunction isValidContainer(node) {\n  return !!(node && (node.nodeType === ELEMENT_NODE_TYPE || node.nodeType === DOC_NODE_TYPE || node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE));\n}\n\n/**\n * True if the supplied DOM node is a valid React node element.\n *\n * @param {?DOMElement} node The candidate DOM node.\n * @return {boolean} True if the DOM is a valid React DOM node.\n * @internal\n */\nfunction isReactNode(node) {\n  return isValidContainer(node) && (node.hasAttribute(ROOT_ATTR_NAME) || node.hasAttribute(ATTR_NAME));\n}\n\nfunction getHostRootInstanceInContainer(container) {\n  var rootEl = getReactRootElementInContainer(container);\n  var prevHostInstance = rootEl && ReactDOMComponentTree.getInstanceFromNode(rootEl);\n  return prevHostInstance && !prevHostInstance._hostParent ? prevHostInstance : null;\n}\n\nfunction getTopLevelWrapperInContainer(container) {\n  var root = getHostRootInstanceInContainer(container);\n  return root ? root._hostContainerInfo._topLevelWrapper : null;\n}\n\n/**\n * Temporary (?) hack so that we can store all top-level pending updates on\n * composites instead of having to worry about different types of components\n * here.\n */\nvar topLevelRootCounter = 1;\nvar TopLevelWrapper = function () {\n  this.rootID = topLevelRootCounter++;\n};\nTopLevelWrapper.prototype.isReactComponent = {};\nif (process.env.NODE_ENV !== 'production') {\n  TopLevelWrapper.displayName = 'TopLevelWrapper';\n}\nTopLevelWrapper.prototype.render = function () {\n  return this.props.child;\n};\nTopLevelWrapper.isReactTopLevelWrapper = true;\n\n/**\n * Mounting is the process of initializing a React component by creating its\n * representative DOM elements and inserting them into a supplied `container`.\n * Any prior content inside `container` is destroyed in the process.\n *\n *   ReactMount.render(\n *     component,\n *     document.getElementById('container')\n *   );\n *\n *   <div id=\"container\">                   <-- Supplied `container`.\n *     <div data-reactid=\".3\">              <-- Rendered reactRoot of React\n *       // ...                                 component.\n *     </div>\n *   </div>\n *\n * Inside of `container`, the first element rendered is the \"reactRoot\".\n */\nvar ReactMount = {\n\n  TopLevelWrapper: TopLevelWrapper,\n\n  /**\n   * Used by devtools. The keys are not important.\n   */\n  _instancesByReactRootID: instancesByReactRootID,\n\n  /**\n   * This is a hook provided to support rendering React components while\n   * ensuring that the apparent scroll position of its `container` does not\n   * change.\n   *\n   * @param {DOMElement} container The `container` being rendered into.\n   * @param {function} renderCallback This must be called once to do the render.\n   */\n  scrollMonitor: function (container, renderCallback) {\n    renderCallback();\n  },\n\n  /**\n   * Take a component that's already mounted into the DOM and replace its props\n   * @param {ReactComponent} prevComponent component instance already in the DOM\n   * @param {ReactElement} nextElement component instance to render\n   * @param {DOMElement} container container to render into\n   * @param {?function} callback function triggered on completion\n   */\n  _updateRootComponent: function (prevComponent, nextElement, nextContext, container, callback) {\n    ReactMount.scrollMonitor(container, function () {\n      ReactUpdateQueue.enqueueElementInternal(prevComponent, nextElement, nextContext);\n      if (callback) {\n        ReactUpdateQueue.enqueueCallbackInternal(prevComponent, callback);\n      }\n    });\n\n    return prevComponent;\n  },\n\n  /**\n   * Render a new component into the DOM. Hooked by hooks!\n   *\n   * @param {ReactElement} nextElement element to render\n   * @param {DOMElement} container container to render into\n   * @param {boolean} shouldReuseMarkup if we should skip the markup insertion\n   * @return {ReactComponent} nextComponent\n   */\n  _renderNewRootComponent: function (nextElement, container, shouldReuseMarkup, context) {\n    // Various parts of our code (such as ReactCompositeComponent's\n    // _renderValidatedComponent) assume that calls to render aren't nested;\n    // verify that that's the case.\n    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, '_renderNewRootComponent(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from ' + 'render is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;\n\n    !isValidContainer(container) ? process.env.NODE_ENV !== 'production' ? invariant(false, '_registerComponent(...): Target container is not a DOM element.') : _prodInvariant('37') : void 0;\n\n    ReactBrowserEventEmitter.ensureScrollValueMonitoring();\n    var componentInstance = instantiateReactComponent(nextElement, false);\n\n    // The initial render is synchronous but any updates that happen during\n    // rendering, in componentWillMount or componentDidMount, will be batched\n    // according to the current batching strategy.\n\n    ReactUpdates.batchedUpdates(batchedMountComponentIntoNode, componentInstance, container, shouldReuseMarkup, context);\n\n    var wrapperID = componentInstance._instance.rootID;\n    instancesByReactRootID[wrapperID] = componentInstance;\n\n    return componentInstance;\n  },\n\n  /**\n   * Renders a React component into the DOM in the supplied `container`.\n   *\n   * If the React component was previously rendered into `container`, this will\n   * perform an update on it and only mutate the DOM as necessary to reflect the\n   * latest React component.\n   *\n   * @param {ReactComponent} parentComponent The conceptual parent of this render tree.\n   * @param {ReactElement} nextElement Component element to render.\n   * @param {DOMElement} container DOM element to render into.\n   * @param {?function} callback function triggered on completion\n   * @return {ReactComponent} Component instance rendered in `container`.\n   */\n  renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {\n    !(parentComponent != null && ReactInstanceMap.has(parentComponent)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'parentComponent must be a valid React Component') : _prodInvariant('38') : void 0;\n    return ReactMount._renderSubtreeIntoContainer(parentComponent, nextElement, container, callback);\n  },\n\n  _renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {\n    ReactUpdateQueue.validateCallback(callback, 'ReactDOM.render');\n    !React.isValidElement(nextElement) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactDOM.render(): Invalid component element.%s', typeof nextElement === 'string' ? ' Instead of passing a string like \\'div\\', pass ' + 'React.createElement(\\'div\\') or <div />.' : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' :\n    // Check if it quacks like an element\n    nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : _prodInvariant('39', typeof nextElement === 'string' ? ' Instead of passing a string like \\'div\\', pass ' + 'React.createElement(\\'div\\') or <div />.' : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' : nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : void 0;\n\n    process.env.NODE_ENV !== 'production' ? warning(!container || !container.tagName || container.tagName.toUpperCase() !== 'BODY', 'render(): Rendering components directly into document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try rendering into a container element created ' + 'for your app.') : void 0;\n\n    var nextWrappedElement = React.createElement(TopLevelWrapper, { child: nextElement });\n\n    var nextContext;\n    if (parentComponent) {\n      var parentInst = ReactInstanceMap.get(parentComponent);\n      nextContext = parentInst._processChildContext(parentInst._context);\n    } else {\n      nextContext = emptyObject;\n    }\n\n    var prevComponent = getTopLevelWrapperInContainer(container);\n\n    if (prevComponent) {\n      var prevWrappedElement = prevComponent._currentElement;\n      var prevElement = prevWrappedElement.props.child;\n      if (shouldUpdateReactComponent(prevElement, nextElement)) {\n        var publicInst = prevComponent._renderedComponent.getPublicInstance();\n        var updatedCallback = callback && function () {\n          callback.call(publicInst);\n        };\n        ReactMount._updateRootComponent(prevComponent, nextWrappedElement, nextContext, container, updatedCallback);\n        return publicInst;\n      } else {\n        ReactMount.unmountComponentAtNode(container);\n      }\n    }\n\n    var reactRootElement = getReactRootElementInContainer(container);\n    var containerHasReactMarkup = reactRootElement && !!internalGetID(reactRootElement);\n    var containerHasNonRootReactChild = hasNonRootReactChild(container);\n\n    if (process.env.NODE_ENV !== 'production') {\n      process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'render(...): Replacing React-rendered children with a new root ' + 'component. If you intended to update the children of this node, ' + 'you should instead have the existing children update their state ' + 'and render the new components instead of calling ReactDOM.render.') : void 0;\n\n      if (!containerHasReactMarkup || reactRootElement.nextSibling) {\n        var rootElementSibling = reactRootElement;\n        while (rootElementSibling) {\n          if (internalGetID(rootElementSibling)) {\n            process.env.NODE_ENV !== 'production' ? warning(false, 'render(): Target node has markup rendered by React, but there ' + 'are unrelated nodes as well. This is most commonly caused by ' + 'white-space inserted around server-rendered markup.') : void 0;\n            break;\n          }\n          rootElementSibling = rootElementSibling.nextSibling;\n        }\n      }\n    }\n\n    var shouldReuseMarkup = containerHasReactMarkup && !prevComponent && !containerHasNonRootReactChild;\n    var component = ReactMount._renderNewRootComponent(nextWrappedElement, container, shouldReuseMarkup, nextContext)._renderedComponent.getPublicInstance();\n    if (callback) {\n      callback.call(component);\n    }\n    return component;\n  },\n\n  /**\n   * Renders a React component into the DOM in the supplied `container`.\n   * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.render\n   *\n   * If the React component was previously rendered into `container`, this will\n   * perform an update on it and only mutate the DOM as necessary to reflect the\n   * latest React component.\n   *\n   * @param {ReactElement} nextElement Component element to render.\n   * @param {DOMElement} container DOM element to render into.\n   * @param {?function} callback function triggered on completion\n   * @return {ReactComponent} Component instance rendered in `container`.\n   */\n  render: function (nextElement, container, callback) {\n    return ReactMount._renderSubtreeIntoContainer(null, nextElement, container, callback);\n  },\n\n  /**\n   * Unmounts and destroys the React component rendered in the `container`.\n   * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.unmountcomponentatnode\n   *\n   * @param {DOMElement} container DOM element containing a React component.\n   * @return {boolean} True if a component was found in and unmounted from\n   *                   `container`\n   */\n  unmountComponentAtNode: function (container) {\n    // Various parts of our code (such as ReactCompositeComponent's\n    // _renderValidatedComponent) assume that calls to render aren't nested;\n    // verify that that's the case. (Strictly speaking, unmounting won't cause a\n    // render but we still don't expect to be in a render call here.)\n    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, 'unmountComponentAtNode(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from render ' + 'is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;\n\n    !isValidContainer(container) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'unmountComponentAtNode(...): Target container is not a DOM element.') : _prodInvariant('40') : void 0;\n\n    if (process.env.NODE_ENV !== 'production') {\n      process.env.NODE_ENV !== 'production' ? warning(!nodeIsRenderedByOtherInstance(container), 'unmountComponentAtNode(): The node you\\'re attempting to unmount ' + 'was rendered by another copy of React.') : void 0;\n    }\n\n    var prevComponent = getTopLevelWrapperInContainer(container);\n    if (!prevComponent) {\n      // Check if the node being unmounted was rendered by React, but isn't a\n      // root node.\n      var containerHasNonRootReactChild = hasNonRootReactChild(container);\n\n      // Check if the container itself is a React root node.\n      var isContainerReactRoot = container.nodeType === 1 && container.hasAttribute(ROOT_ATTR_NAME);\n\n      if (process.env.NODE_ENV !== 'production') {\n        process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'unmountComponentAtNode(): The node you\\'re attempting to unmount ' + 'was rendered by React and is not a top-level container. %s', isContainerReactRoot ? 'You may have accidentally passed in a React root node instead ' + 'of its container.' : 'Instead, have the parent component update its state and ' + 'rerender in order to remove this component.') : void 0;\n      }\n\n      return false;\n    }\n    delete instancesByReactRootID[prevComponent._instance.rootID];\n    ReactUpdates.batchedUpdates(unmountComponentFromNode, prevComponent, container, false);\n    return true;\n  },\n\n  _mountImageIntoNode: function (markup, container, instance, shouldReuseMarkup, transaction) {\n    !isValidContainer(container) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mountComponentIntoNode(...): Target container is not valid.') : _prodInvariant('41') : void 0;\n\n    if (shouldReuseMarkup) {\n      var rootElement = getReactRootElementInContainer(container);\n      if (ReactMarkupChecksum.canReuseMarkup(markup, rootElement)) {\n        ReactDOMComponentTree.precacheNode(instance, rootElement);\n        return;\n      } else {\n        var checksum = rootElement.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);\n        rootElement.removeAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);\n\n        var rootMarkup = rootElement.outerHTML;\n        rootElement.setAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME, checksum);\n\n        var normalizedMarkup = markup;\n        if (process.env.NODE_ENV !== 'production') {\n          // because rootMarkup is retrieved from the DOM, various normalizations\n          // will have occurred which will not be present in `markup`. Here,\n          // insert markup into a <div> or <iframe> depending on the container\n          // type to perform the same normalizations before comparing.\n          var normalizer;\n          if (container.nodeType === ELEMENT_NODE_TYPE) {\n            normalizer = document.createElement('div');\n            normalizer.innerHTML = markup;\n            normalizedMarkup = normalizer.innerHTML;\n          } else {\n            normalizer = document.createElement('iframe');\n            document.body.appendChild(normalizer);\n            normalizer.contentDocument.write(markup);\n            normalizedMarkup = normalizer.contentDocument.documentElement.outerHTML;\n            document.body.removeChild(normalizer);\n          }\n        }\n\n        var diffIndex = firstDifferenceIndex(normalizedMarkup, rootMarkup);\n        var difference = ' (client) ' + normalizedMarkup.substring(diffIndex - 20, diffIndex + 20) + '\\n (server) ' + rootMarkup.substring(diffIndex - 20, diffIndex + 20);\n\n        !(container.nodeType !== DOC_NODE_TYPE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'You\\'re trying to render a component to the document using server rendering but the checksum was invalid. This usually means you rendered a different component type or props on the client from the one on the server, or your render() methods are impure. React cannot handle this case due to cross-browser quirks by rendering at the document root. You should look for environment dependent code in your components and ensure the props are the same client and server side:\\n%s', difference) : _prodInvariant('42', difference) : void 0;\n\n        if (process.env.NODE_ENV !== 'production') {\n          process.env.NODE_ENV !== 'production' ? warning(false, 'React attempted to reuse markup in a container but the ' + 'checksum was invalid. This generally means that you are ' + 'using server rendering and the markup generated on the ' + 'server was not what the client was expecting. React injected ' + 'new markup to compensate which works but you have lost many ' + 'of the benefits of server rendering. Instead, figure out ' + 'why the markup being generated is different on the client ' + 'or server:\\n%s', difference) : void 0;\n        }\n      }\n    }\n\n    !(container.nodeType !== DOC_NODE_TYPE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'You\\'re trying to render a component to the document but you didn\\'t use server rendering. We can\\'t do this without using server rendering due to cross-browser quirks. See ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('43') : void 0;\n\n    if (transaction.useCreateElement) {\n      while (container.lastChild) {\n        container.removeChild(container.lastChild);\n      }\n      DOMLazyTree.insertTreeBefore(container, markup, null);\n    } else {\n      setInnerHTML(container, markup);\n      ReactDOMComponentTree.precacheNode(instance, container.firstChild);\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      var hostNode = ReactDOMComponentTree.getInstanceFromNode(container.firstChild);\n      if (hostNode._debugID !== 0) {\n        ReactInstrumentation.debugTool.onHostOperation({\n          instanceID: hostNode._debugID,\n          type: 'mount',\n          payload: markup.toString()\n        });\n      }\n    }\n  }\n};\n\nmodule.exports = ReactMount;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactMount.js\n// module id = 61\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar React = require('react/lib/React');\n\nvar invariant = require('fbjs/lib/invariant');\n\nvar ReactNodeTypes = {\n  HOST: 0,\n  COMPOSITE: 1,\n  EMPTY: 2,\n\n  getType: function (node) {\n    if (node === null || node === false) {\n      return ReactNodeTypes.EMPTY;\n    } else if (React.isValidElement(node)) {\n      if (typeof node.type === 'function') {\n        return ReactNodeTypes.COMPOSITE;\n      } else {\n        return ReactNodeTypes.HOST;\n      }\n    }\n    !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Unexpected node: %s', node) : _prodInvariant('26', node) : void 0;\n  }\n};\n\nmodule.exports = ReactNodeTypes;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactNodeTypes.js\n// module id = 62\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar ViewportMetrics = {\n\n  currentScrollLeft: 0,\n\n  currentScrollTop: 0,\n\n  refreshScrollValues: function (scrollPosition) {\n    ViewportMetrics.currentScrollLeft = scrollPosition.x;\n    ViewportMetrics.currentScrollTop = scrollPosition.y;\n  }\n\n};\n\nmodule.exports = ViewportMetrics;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ViewportMetrics.js\n// module id = 63\n// module chunks = 0","/**\n * Copyright 2014-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * Accumulates items that must not be null or undefined into the first one. This\n * is used to conserve memory by avoiding array allocations, and thus sacrifices\n * API cleanness. Since `current` can be null before being passed in and not\n * null after this function, make sure to assign it back to `current`:\n *\n * `a = accumulateInto(a, b);`\n *\n * This API should be sparingly used. Try `accumulate` for something cleaner.\n *\n * @return {*|array<*>} An accumulation of items.\n */\n\nfunction accumulateInto(current, next) {\n  !(next != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'accumulateInto(...): Accumulated items must not be null or undefined.') : _prodInvariant('30') : void 0;\n\n  if (current == null) {\n    return next;\n  }\n\n  // Both are not empty. Warning: Never call x.concat(y) when you are not\n  // certain that x is an Array (x could be a string with concat method).\n  if (Array.isArray(current)) {\n    if (Array.isArray(next)) {\n      current.push.apply(current, next);\n      return current;\n    }\n    current.push(next);\n    return current;\n  }\n\n  if (Array.isArray(next)) {\n    // A bit too dangerous to mutate `next`.\n    return [current].concat(next);\n  }\n\n  return [current, next];\n}\n\nmodule.exports = accumulateInto;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/accumulateInto.js\n// module id = 64\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\n/**\n * @param {array} arr an \"accumulation\" of items which is either an Array or\n * a single item. Useful when paired with the `accumulate` module. This is a\n * simple utility that allows us to reason about a collection of items, but\n * handling the case when there is exactly one item (and we do not need to\n * allocate an array).\n */\n\nfunction forEachAccumulated(arr, cb, scope) {\n  if (Array.isArray(arr)) {\n    arr.forEach(cb, scope);\n  } else if (arr) {\n    cb.call(scope, arr);\n  }\n}\n\nmodule.exports = forEachAccumulated;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/forEachAccumulated.js\n// module id = 65\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar ReactNodeTypes = require('./ReactNodeTypes');\n\nfunction getHostComponentFromComposite(inst) {\n  var type;\n\n  while ((type = inst._renderedNodeType) === ReactNodeTypes.COMPOSITE) {\n    inst = inst._renderedComponent;\n  }\n\n  if (type === ReactNodeTypes.HOST) {\n    return inst._renderedComponent;\n  } else if (type === ReactNodeTypes.EMPTY) {\n    return null;\n  }\n}\n\nmodule.exports = getHostComponentFromComposite;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/getHostComponentFromComposite.js\n// module id = 66\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\n\nvar contentKey = null;\n\n/**\n * Gets the key used to access text content on a DOM node.\n *\n * @return {?string} Key used to access text content.\n * @internal\n */\nfunction getTextContentAccessor() {\n  if (!contentKey && ExecutionEnvironment.canUseDOM) {\n    // Prefer textContent to innerText because many browsers support both but\n    // SVG <text> elements don't support innerText even when <div> does.\n    contentKey = 'textContent' in document.documentElement ? 'textContent' : 'innerText';\n  }\n  return contentKey;\n}\n\nmodule.exports = getTextContentAccessor;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/getTextContentAccessor.js\n// module id = 67\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant'),\n    _assign = require('object-assign');\n\nvar ReactCompositeComponent = require('./ReactCompositeComponent');\nvar ReactEmptyComponent = require('./ReactEmptyComponent');\nvar ReactHostComponent = require('./ReactHostComponent');\n\nvar getNextDebugID = require('react/lib/getNextDebugID');\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\n// To avoid a cyclic dependency, we create the final class in this module\nvar ReactCompositeComponentWrapper = function (element) {\n  this.construct(element);\n};\n\nfunction getDeclarationErrorAddendum(owner) {\n  if (owner) {\n    var name = owner.getName();\n    if (name) {\n      return ' Check the render method of `' + name + '`.';\n    }\n  }\n  return '';\n}\n\n/**\n * Check if the type reference is a known internal type. I.e. not a user\n * provided composite type.\n *\n * @param {function} type\n * @return {boolean} Returns true if this is a valid internal type.\n */\nfunction isInternalComponentType(type) {\n  return typeof type === 'function' && typeof type.prototype !== 'undefined' && typeof type.prototype.mountComponent === 'function' && typeof type.prototype.receiveComponent === 'function';\n}\n\n/**\n * Given a ReactNode, create an instance that will actually be mounted.\n *\n * @param {ReactNode} node\n * @param {boolean} shouldHaveDebugID\n * @return {object} A new instance of the element's constructor.\n * @protected\n */\nfunction instantiateReactComponent(node, shouldHaveDebugID) {\n  var instance;\n\n  if (node === null || node === false) {\n    instance = ReactEmptyComponent.create(instantiateReactComponent);\n  } else if (typeof node === 'object') {\n    var element = node;\n    var type = element.type;\n    if (typeof type !== 'function' && typeof type !== 'string') {\n      var info = '';\n      if (process.env.NODE_ENV !== 'production') {\n        if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n          info += ' You likely forgot to export your component from the file ' + 'it\\'s defined in.';\n        }\n      }\n      info += getDeclarationErrorAddendum(element._owner);\n      !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s', type == null ? type : typeof type, info) : _prodInvariant('130', type == null ? type : typeof type, info) : void 0;\n    }\n\n    // Special case string values\n    if (typeof element.type === 'string') {\n      instance = ReactHostComponent.createInternalComponent(element);\n    } else if (isInternalComponentType(element.type)) {\n      // This is temporarily available for custom components that are not string\n      // representations. I.e. ART. Once those are updated to use the string\n      // representation, we can drop this code path.\n      instance = new element.type(element);\n\n      // We renamed this. Allow the old name for compat. :(\n      if (!instance.getHostNode) {\n        instance.getHostNode = instance.getNativeNode;\n      }\n    } else {\n      instance = new ReactCompositeComponentWrapper(element);\n    }\n  } else if (typeof node === 'string' || typeof node === 'number') {\n    instance = ReactHostComponent.createInstanceForText(node);\n  } else {\n    !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Encountered invalid React node of type %s', typeof node) : _prodInvariant('131', typeof node) : void 0;\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== 'production' ? warning(typeof instance.mountComponent === 'function' && typeof instance.receiveComponent === 'function' && typeof instance.getHostNode === 'function' && typeof instance.unmountComponent === 'function', 'Only React Components can be mounted.') : void 0;\n  }\n\n  // These two fields are used by the DOM and ART diffing algorithms\n  // respectively. Instead of using expandos on components, we should be\n  // storing the state needed by the diffing algorithms elsewhere.\n  instance._mountIndex = 0;\n  instance._mountImage = null;\n\n  if (process.env.NODE_ENV !== 'production') {\n    instance._debugID = shouldHaveDebugID ? getNextDebugID() : 0;\n  }\n\n  // Internal instances should fully constructed at this point, so they should\n  // not get any new fields added to them at this point.\n  if (process.env.NODE_ENV !== 'production') {\n    if (Object.preventExtensions) {\n      Object.preventExtensions(instance);\n    }\n  }\n\n  return instance;\n}\n\n_assign(ReactCompositeComponentWrapper.prototype, ReactCompositeComponent, {\n  _instantiateReactComponent: instantiateReactComponent\n});\n\nmodule.exports = instantiateReactComponent;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/instantiateReactComponent.js\n// module id = 68\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\n/**\n * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary\n */\n\nvar supportedInputTypes = {\n  'color': true,\n  'date': true,\n  'datetime': true,\n  'datetime-local': true,\n  'email': true,\n  'month': true,\n  'number': true,\n  'password': true,\n  'range': true,\n  'search': true,\n  'tel': true,\n  'text': true,\n  'time': true,\n  'url': true,\n  'week': true\n};\n\nfunction isTextInputElement(elem) {\n  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();\n\n  if (nodeName === 'input') {\n    return !!supportedInputTypes[elem.type];\n  }\n\n  if (nodeName === 'textarea') {\n    return true;\n  }\n\n  return false;\n}\n\nmodule.exports = isTextInputElement;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/isTextInputElement.js\n// module id = 69\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\nvar escapeTextContentForBrowser = require('./escapeTextContentForBrowser');\nvar setInnerHTML = require('./setInnerHTML');\n\n/**\n * Set the textContent property of a node, ensuring that whitespace is preserved\n * even in IE8. innerText is a poor substitute for textContent and, among many\n * issues, inserts <br> instead of the literal newline chars. innerHTML behaves\n * as it should.\n *\n * @param {DOMElement} node\n * @param {string} text\n * @internal\n */\nvar setTextContent = function (node, text) {\n  if (text) {\n    var firstChild = node.firstChild;\n\n    if (firstChild && firstChild === node.lastChild && firstChild.nodeType === 3) {\n      firstChild.nodeValue = text;\n      return;\n    }\n  }\n  node.textContent = text;\n};\n\nif (ExecutionEnvironment.canUseDOM) {\n  if (!('textContent' in document.documentElement)) {\n    setTextContent = function (node, text) {\n      if (node.nodeType === 3) {\n        node.nodeValue = text;\n        return;\n      }\n      setInnerHTML(node, escapeTextContentForBrowser(text));\n    };\n  }\n}\n\nmodule.exports = setTextContent;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/setTextContent.js\n// module id = 70\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar ReactCurrentOwner = require('react/lib/ReactCurrentOwner');\nvar REACT_ELEMENT_TYPE = require('./ReactElementSymbol');\n\nvar getIteratorFn = require('./getIteratorFn');\nvar invariant = require('fbjs/lib/invariant');\nvar KeyEscapeUtils = require('./KeyEscapeUtils');\nvar warning = require('fbjs/lib/warning');\n\nvar SEPARATOR = '.';\nvar SUBSEPARATOR = ':';\n\n/**\n * This is inlined from ReactElement since this file is shared between\n * isomorphic and renderers. We could extract this to a\n *\n */\n\n/**\n * TODO: Test that a single child and an array with one item have the same key\n * pattern.\n */\n\nvar didWarnAboutMaps = false;\n\n/**\n * Generate a key string that identifies a component within a set.\n *\n * @param {*} component A component that could contain a manual key.\n * @param {number} index Index that is used if a manual key is not provided.\n * @return {string}\n */\nfunction getComponentKey(component, index) {\n  // Do some typechecking here since we call this blindly. We want to ensure\n  // that we don't block potential future ES APIs.\n  if (component && typeof component === 'object' && component.key != null) {\n    // Explicit key\n    return KeyEscapeUtils.escape(component.key);\n  }\n  // Implicit key determined by the index in the set\n  return index.toString(36);\n}\n\n/**\n * @param {?*} children Children tree container.\n * @param {!string} nameSoFar Name of the key path so far.\n * @param {!function} callback Callback to invoke with each child found.\n * @param {?*} traverseContext Used to pass information throughout the traversal\n * process.\n * @return {!number} The number of children in this subtree.\n */\nfunction traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {\n  var type = typeof children;\n\n  if (type === 'undefined' || type === 'boolean') {\n    // All of the above are perceived as null.\n    children = null;\n  }\n\n  if (children === null || type === 'string' || type === 'number' ||\n  // The following is inlined from ReactElement. This means we can optimize\n  // some checks. React Fiber also inlines this logic for similar purposes.\n  type === 'object' && children.$$typeof === REACT_ELEMENT_TYPE) {\n    callback(traverseContext, children,\n    // If it's the only child, treat the name as if it was wrapped in an array\n    // so that it's consistent if the number of children grows.\n    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);\n    return 1;\n  }\n\n  var child;\n  var nextName;\n  var subtreeCount = 0; // Count of children found in the current subtree.\n  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;\n\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      child = children[i];\n      nextName = nextNamePrefix + getComponentKey(child, i);\n      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n    }\n  } else {\n    var iteratorFn = getIteratorFn(children);\n    if (iteratorFn) {\n      var iterator = iteratorFn.call(children);\n      var step;\n      if (iteratorFn !== children.entries) {\n        var ii = 0;\n        while (!(step = iterator.next()).done) {\n          child = step.value;\n          nextName = nextNamePrefix + getComponentKey(child, ii++);\n          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n        }\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          var mapsAsChildrenAddendum = '';\n          if (ReactCurrentOwner.current) {\n            var mapsAsChildrenOwnerName = ReactCurrentOwner.current.getName();\n            if (mapsAsChildrenOwnerName) {\n              mapsAsChildrenAddendum = ' Check the render method of `' + mapsAsChildrenOwnerName + '`.';\n            }\n          }\n          process.env.NODE_ENV !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.%s', mapsAsChildrenAddendum) : void 0;\n          didWarnAboutMaps = true;\n        }\n        // Iterator will provide entry [k,v] tuples rather than values.\n        while (!(step = iterator.next()).done) {\n          var entry = step.value;\n          if (entry) {\n            child = entry[1];\n            nextName = nextNamePrefix + KeyEscapeUtils.escape(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);\n            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n          }\n        }\n      }\n    } else if (type === 'object') {\n      var addendum = '';\n      if (process.env.NODE_ENV !== 'production') {\n        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';\n        if (children._isReactElement) {\n          addendum = ' It looks like you\\'re using an element created by a different ' + 'version of React. Make sure to use only one copy of React.';\n        }\n        if (ReactCurrentOwner.current) {\n          var name = ReactCurrentOwner.current.getName();\n          if (name) {\n            addendum += ' Check the render method of `' + name + '`.';\n          }\n        }\n      }\n      var childrenString = String(children);\n      !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : _prodInvariant('31', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : void 0;\n    }\n  }\n\n  return subtreeCount;\n}\n\n/**\n * Traverses children that are typically specified as `props.children`, but\n * might also be specified through attributes:\n *\n * - `traverseAllChildren(this.props.children, ...)`\n * - `traverseAllChildren(this.props.leftPanelChildren, ...)`\n *\n * The `traverseContext` is an optional argument that is passed through the\n * entire traversal. It can be used to store accumulations or anything else that\n * the callback might find relevant.\n *\n * @param {?*} children Children tree object.\n * @param {!function} callback To invoke upon traversing each child.\n * @param {?*} traverseContext Context for traversal.\n * @return {!number} The number of children in this subtree.\n */\nfunction traverseAllChildren(children, callback, traverseContext) {\n  if (children == null) {\n    return 0;\n  }\n\n  return traverseAllChildrenImpl(children, '', callback, traverseContext);\n}\n\nmodule.exports = traverseAllChildren;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/traverseAllChildren.js\n// module id = 71\n// module chunks = 0","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @typechecks\n */\n\nvar emptyFunction = require('./emptyFunction');\n\n/**\n * Upstream version of event listener. Does not take into account specific\n * nature of platform.\n */\nvar EventListener = {\n  /**\n   * Listen to DOM events during the bubble phase.\n   *\n   * @param {DOMEventTarget} target DOM element to register listener on.\n   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.\n   * @param {function} callback Callback function.\n   * @return {object} Object with a `remove` method.\n   */\n  listen: function listen(target, eventType, callback) {\n    if (target.addEventListener) {\n      target.addEventListener(eventType, callback, false);\n      return {\n        remove: function remove() {\n          target.removeEventListener(eventType, callback, false);\n        }\n      };\n    } else if (target.attachEvent) {\n      target.attachEvent('on' + eventType, callback);\n      return {\n        remove: function remove() {\n          target.detachEvent('on' + eventType, callback);\n        }\n      };\n    }\n  },\n\n  /**\n   * Listen to DOM events during the capture phase.\n   *\n   * @param {DOMEventTarget} target DOM element to register listener on.\n   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.\n   * @param {function} callback Callback function.\n   * @return {object} Object with a `remove` method.\n   */\n  capture: function capture(target, eventType, callback) {\n    if (target.addEventListener) {\n      target.addEventListener(eventType, callback, true);\n      return {\n        remove: function remove() {\n          target.removeEventListener(eventType, callback, true);\n        }\n      };\n    } else {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error('Attempted to listen to events during the capture phase on a ' + 'browser that does not support the capture phase. Your application ' + 'will not receive some events.');\n      }\n      return {\n        remove: emptyFunction\n      };\n    }\n  },\n\n  registerDefault: function registerDefault() {}\n};\n\nmodule.exports = EventListener;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/~/fbjs/lib/EventListener.js\n// module id = 72\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\n/**\n * @param {DOMElement} node input/textarea to focus\n */\n\nfunction focusNode(node) {\n  // IE8 can throw \"Can't move focus to the control because it is invisible,\n  // not enabled, or of a type that does not accept the focus.\" for all kinds of\n  // reasons that are too expensive and fragile to test.\n  try {\n    node.focus();\n  } catch (e) {}\n}\n\nmodule.exports = focusNode;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/~/fbjs/lib/focusNode.js\n// module id = 74\n// module chunks = 0","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks\n */\n\n/* eslint-disable fb-www/typeof-undefined */\n\n/**\n * Same as document.activeElement but wraps in a try-catch block. In IE it is\n * not safe to call document.activeElement if there is nothing focused.\n *\n * The activeElement will be null only if the document or document body is not\n * yet defined.\n *\n * @param {?DOMDocument} doc Defaults to current document.\n * @return {?DOMElement}\n */\nfunction getActiveElement(doc) /*?DOMElement*/{\n  doc = doc || (typeof document !== 'undefined' ? document : undefined);\n  if (typeof doc === 'undefined') {\n    return null;\n  }\n  try {\n    return doc.activeElement || doc.body;\n  } catch (e) {\n    return doc.body;\n  }\n}\n\nmodule.exports = getActiveElement;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/~/fbjs/lib/getActiveElement.js\n// module id = 75\n// module chunks = 0","'use strict';\n\nvar asap = require('asap/raw');\n\nfunction noop() {}\n\n// States:\n//\n// 0 - pending\n// 1 - fulfilled with _value\n// 2 - rejected with _value\n// 3 - adopted the state of another promise, _value\n//\n// once the state is no longer pending (0) it is immutable\n\n// All `_` prefixed properties will be reduced to `_{random number}`\n// at build time to obfuscate them and discourage their use.\n// We don't use symbols or Object.defineProperty to fully hide them\n// because the performance isn't good enough.\n\n\n// to avoid using try/catch inside critical functions, we\n// extract them to here.\nvar LAST_ERROR = null;\nvar IS_ERROR = {};\nfunction getThen(obj) {\n  try {\n    return obj.then;\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nfunction tryCallOne(fn, a) {\n  try {\n    return fn(a);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\nfunction tryCallTwo(fn, a, b) {\n  try {\n    fn(a, b);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nmodule.exports = Promise;\n\nfunction Promise(fn) {\n  if (typeof this !== 'object') {\n    throw new TypeError('Promises must be constructed via new');\n  }\n  if (typeof fn !== 'function') {\n    throw new TypeError('not a function');\n  }\n  this._45 = 0;\n  this._81 = 0;\n  this._65 = null;\n  this._54 = null;\n  if (fn === noop) return;\n  doResolve(fn, this);\n}\nPromise._10 = null;\nPromise._97 = null;\nPromise._61 = noop;\n\nPromise.prototype.then = function(onFulfilled, onRejected) {\n  if (this.constructor !== Promise) {\n    return safeThen(this, onFulfilled, onRejected);\n  }\n  var res = new Promise(noop);\n  handle(this, new Handler(onFulfilled, onRejected, res));\n  return res;\n};\n\nfunction safeThen(self, onFulfilled, onRejected) {\n  return new self.constructor(function (resolve, reject) {\n    var res = new Promise(noop);\n    res.then(resolve, reject);\n    handle(self, new Handler(onFulfilled, onRejected, res));\n  });\n};\nfunction handle(self, deferred) {\n  while (self._81 === 3) {\n    self = self._65;\n  }\n  if (Promise._10) {\n    Promise._10(self);\n  }\n  if (self._81 === 0) {\n    if (self._45 === 0) {\n      self._45 = 1;\n      self._54 = deferred;\n      return;\n    }\n    if (self._45 === 1) {\n      self._45 = 2;\n      self._54 = [self._54, deferred];\n      return;\n    }\n    self._54.push(deferred);\n    return;\n  }\n  handleResolved(self, deferred);\n}\n\nfunction handleResolved(self, deferred) {\n  asap(function() {\n    var cb = self._81 === 1 ? deferred.onFulfilled : deferred.onRejected;\n    if (cb === null) {\n      if (self._81 === 1) {\n        resolve(deferred.promise, self._65);\n      } else {\n        reject(deferred.promise, self._65);\n      }\n      return;\n    }\n    var ret = tryCallOne(cb, self._65);\n    if (ret === IS_ERROR) {\n      reject(deferred.promise, LAST_ERROR);\n    } else {\n      resolve(deferred.promise, ret);\n    }\n  });\n}\nfunction resolve(self, newValue) {\n  // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n  if (newValue === self) {\n    return reject(\n      self,\n      new TypeError('A promise cannot be resolved with itself.')\n    );\n  }\n  if (\n    newValue &&\n    (typeof newValue === 'object' || typeof newValue === 'function')\n  ) {\n    var then = getThen(newValue);\n    if (then === IS_ERROR) {\n      return reject(self, LAST_ERROR);\n    }\n    if (\n      then === self.then &&\n      newValue instanceof Promise\n    ) {\n      self._81 = 3;\n      self._65 = newValue;\n      finale(self);\n      return;\n    } else if (typeof then === 'function') {\n      doResolve(then.bind(newValue), self);\n      return;\n    }\n  }\n  self._81 = 1;\n  self._65 = newValue;\n  finale(self);\n}\n\nfunction reject(self, newValue) {\n  self._81 = 2;\n  self._65 = newValue;\n  if (Promise._97) {\n    Promise._97(self, newValue);\n  }\n  finale(self);\n}\nfunction finale(self) {\n  if (self._45 === 1) {\n    handle(self, self._54);\n    self._54 = null;\n  }\n  if (self._45 === 2) {\n    for (var i = 0; i < self._54.length; i++) {\n      handle(self, self._54[i]);\n    }\n    self._54 = null;\n  }\n}\n\nfunction Handler(onFulfilled, onRejected, promise){\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n  this.promise = promise;\n}\n\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n *\n * Makes no guarantees about asynchrony.\n */\nfunction doResolve(fn, promise) {\n  var done = false;\n  var res = tryCallTwo(fn, function (value) {\n    if (done) return;\n    done = true;\n    resolve(promise, value);\n  }, function (reason) {\n    if (done) return;\n    done = true;\n    reject(promise, reason);\n  })\n  if (!done && res === IS_ERROR) {\n    done = true;\n    reject(promise, LAST_ERROR);\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-scripts/~/promise/lib/core.js\n// module id = 76\n// module chunks = 0","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/~/node-libs-browser/~/process/browser.js\n// module id = 77\n// module chunks = 0","/**\n * Copyright 2016-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar ReactCurrentOwner = require('./ReactCurrentOwner');\n\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\nfunction isNative(fn) {\n  // Based on isNative() from Lodash\n  var funcToString = Function.prototype.toString;\n  var hasOwnProperty = Object.prototype.hasOwnProperty;\n  var reIsNative = RegExp('^' + funcToString\n  // Take an example native function source for comparison\n  .call(hasOwnProperty)\n  // Strip regex characters so we can use it for regex\n  .replace(/[\\\\^$.*+?()[\\]{}|]/g, '\\\\$&')\n  // Remove hasOwnProperty from the template to make it generic\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$');\n  try {\n    var source = funcToString.call(fn);\n    return reIsNative.test(source);\n  } catch (err) {\n    return false;\n  }\n}\n\nvar canUseCollections =\n// Array.from\ntypeof Array.from === 'function' &&\n// Map\ntypeof Map === 'function' && isNative(Map) &&\n// Map.prototype.keys\nMap.prototype != null && typeof Map.prototype.keys === 'function' && isNative(Map.prototype.keys) &&\n// Set\ntypeof Set === 'function' && isNative(Set) &&\n// Set.prototype.keys\nSet.prototype != null && typeof Set.prototype.keys === 'function' && isNative(Set.prototype.keys);\n\nvar setItem;\nvar getItem;\nvar removeItem;\nvar getItemIDs;\nvar addRoot;\nvar removeRoot;\nvar getRootIDs;\n\nif (canUseCollections) {\n  var itemMap = new Map();\n  var rootIDSet = new Set();\n\n  setItem = function (id, item) {\n    itemMap.set(id, item);\n  };\n  getItem = function (id) {\n    return itemMap.get(id);\n  };\n  removeItem = function (id) {\n    itemMap['delete'](id);\n  };\n  getItemIDs = function () {\n    return Array.from(itemMap.keys());\n  };\n\n  addRoot = function (id) {\n    rootIDSet.add(id);\n  };\n  removeRoot = function (id) {\n    rootIDSet['delete'](id);\n  };\n  getRootIDs = function () {\n    return Array.from(rootIDSet.keys());\n  };\n} else {\n  var itemByKey = {};\n  var rootByKey = {};\n\n  // Use non-numeric keys to prevent V8 performance issues:\n  // https://github.com/facebook/react/pull/7232\n  var getKeyFromID = function (id) {\n    return '.' + id;\n  };\n  var getIDFromKey = function (key) {\n    return parseInt(key.substr(1), 10);\n  };\n\n  setItem = function (id, item) {\n    var key = getKeyFromID(id);\n    itemByKey[key] = item;\n  };\n  getItem = function (id) {\n    var key = getKeyFromID(id);\n    return itemByKey[key];\n  };\n  removeItem = function (id) {\n    var key = getKeyFromID(id);\n    delete itemByKey[key];\n  };\n  getItemIDs = function () {\n    return Object.keys(itemByKey).map(getIDFromKey);\n  };\n\n  addRoot = function (id) {\n    var key = getKeyFromID(id);\n    rootByKey[key] = true;\n  };\n  removeRoot = function (id) {\n    var key = getKeyFromID(id);\n    delete rootByKey[key];\n  };\n  getRootIDs = function () {\n    return Object.keys(rootByKey).map(getIDFromKey);\n  };\n}\n\nvar unmountedIDs = [];\n\nfunction purgeDeep(id) {\n  var item = getItem(id);\n  if (item) {\n    var childIDs = item.childIDs;\n\n    removeItem(id);\n    childIDs.forEach(purgeDeep);\n  }\n}\n\nfunction describeComponentFrame(name, source, ownerName) {\n  return '\\n    in ' + (name || 'Unknown') + (source ? ' (at ' + source.fileName.replace(/^.*[\\\\\\/]/, '') + ':' + source.lineNumber + ')' : ownerName ? ' (created by ' + ownerName + ')' : '');\n}\n\nfunction getDisplayName(element) {\n  if (element == null) {\n    return '#empty';\n  } else if (typeof element === 'string' || typeof element === 'number') {\n    return '#text';\n  } else if (typeof element.type === 'string') {\n    return element.type;\n  } else {\n    return element.type.displayName || element.type.name || 'Unknown';\n  }\n}\n\nfunction describeID(id) {\n  var name = ReactComponentTreeHook.getDisplayName(id);\n  var element = ReactComponentTreeHook.getElement(id);\n  var ownerID = ReactComponentTreeHook.getOwnerID(id);\n  var ownerName;\n  if (ownerID) {\n    ownerName = ReactComponentTreeHook.getDisplayName(ownerID);\n  }\n  process.env.NODE_ENV !== 'production' ? warning(element, 'ReactComponentTreeHook: Missing React element for debugID %s when ' + 'building stack', id) : void 0;\n  return describeComponentFrame(name, element && element._source, ownerName);\n}\n\nvar ReactComponentTreeHook = {\n  onSetChildren: function (id, nextChildIDs) {\n    var item = getItem(id);\n    !item ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Item must have been set') : _prodInvariant('144') : void 0;\n    item.childIDs = nextChildIDs;\n\n    for (var i = 0; i < nextChildIDs.length; i++) {\n      var nextChildID = nextChildIDs[i];\n      var nextChild = getItem(nextChildID);\n      !nextChild ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected hook events to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('140') : void 0;\n      !(nextChild.childIDs != null || typeof nextChild.element !== 'object' || nextChild.element == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected onSetChildren() to fire for a container child before its parent includes it in onSetChildren().') : _prodInvariant('141') : void 0;\n      !nextChild.isMounted ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected onMountComponent() to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('71') : void 0;\n      if (nextChild.parentID == null) {\n        nextChild.parentID = id;\n        // TODO: This shouldn't be necessary but mounting a new root during in\n        // componentWillMount currently causes not-yet-mounted components to\n        // be purged from our tree data so their parent id is missing.\n      }\n      !(nextChild.parentID === id) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected onBeforeMountComponent() parent and onSetChildren() to be consistent (%s has parents %s and %s).', nextChildID, nextChild.parentID, id) : _prodInvariant('142', nextChildID, nextChild.parentID, id) : void 0;\n    }\n  },\n  onBeforeMountComponent: function (id, element, parentID) {\n    var item = {\n      element: element,\n      parentID: parentID,\n      text: null,\n      childIDs: [],\n      isMounted: false,\n      updateCount: 0\n    };\n    setItem(id, item);\n  },\n  onBeforeUpdateComponent: function (id, element) {\n    var item = getItem(id);\n    if (!item || !item.isMounted) {\n      // We may end up here as a result of setState() in componentWillUnmount().\n      // In this case, ignore the element.\n      return;\n    }\n    item.element = element;\n  },\n  onMountComponent: function (id) {\n    var item = getItem(id);\n    !item ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Item must have been set') : _prodInvariant('144') : void 0;\n    item.isMounted = true;\n    var isRoot = item.parentID === 0;\n    if (isRoot) {\n      addRoot(id);\n    }\n  },\n  onUpdateComponent: function (id) {\n    var item = getItem(id);\n    if (!item || !item.isMounted) {\n      // We may end up here as a result of setState() in componentWillUnmount().\n      // In this case, ignore the element.\n      return;\n    }\n    item.updateCount++;\n  },\n  onUnmountComponent: function (id) {\n    var item = getItem(id);\n    if (item) {\n      // We need to check if it exists.\n      // `item` might not exist if it is inside an error boundary, and a sibling\n      // error boundary child threw while mounting. Then this instance never\n      // got a chance to mount, but it still gets an unmounting event during\n      // the error boundary cleanup.\n      item.isMounted = false;\n      var isRoot = item.parentID === 0;\n      if (isRoot) {\n        removeRoot(id);\n      }\n    }\n    unmountedIDs.push(id);\n  },\n  purgeUnmountedComponents: function () {\n    if (ReactComponentTreeHook._preventPurging) {\n      // Should only be used for testing.\n      return;\n    }\n\n    for (var i = 0; i < unmountedIDs.length; i++) {\n      var id = unmountedIDs[i];\n      purgeDeep(id);\n    }\n    unmountedIDs.length = 0;\n  },\n  isMounted: function (id) {\n    var item = getItem(id);\n    return item ? item.isMounted : false;\n  },\n  getCurrentStackAddendum: function (topElement) {\n    var info = '';\n    if (topElement) {\n      var name = getDisplayName(topElement);\n      var owner = topElement._owner;\n      info += describeComponentFrame(name, topElement._source, owner && owner.getName());\n    }\n\n    var currentOwner = ReactCurrentOwner.current;\n    var id = currentOwner && currentOwner._debugID;\n\n    info += ReactComponentTreeHook.getStackAddendumByID(id);\n    return info;\n  },\n  getStackAddendumByID: function (id) {\n    var info = '';\n    while (id) {\n      info += describeID(id);\n      id = ReactComponentTreeHook.getParentID(id);\n    }\n    return info;\n  },\n  getChildIDs: function (id) {\n    var item = getItem(id);\n    return item ? item.childIDs : [];\n  },\n  getDisplayName: function (id) {\n    var element = ReactComponentTreeHook.getElement(id);\n    if (!element) {\n      return null;\n    }\n    return getDisplayName(element);\n  },\n  getElement: function (id) {\n    var item = getItem(id);\n    return item ? item.element : null;\n  },\n  getOwnerID: function (id) {\n    var element = ReactComponentTreeHook.getElement(id);\n    if (!element || !element._owner) {\n      return null;\n    }\n    return element._owner._debugID;\n  },\n  getParentID: function (id) {\n    var item = getItem(id);\n    return item ? item.parentID : null;\n  },\n  getSource: function (id) {\n    var item = getItem(id);\n    var element = item ? item.element : null;\n    var source = element != null ? element._source : null;\n    return source;\n  },\n  getText: function (id) {\n    var element = ReactComponentTreeHook.getElement(id);\n    if (typeof element === 'string') {\n      return element;\n    } else if (typeof element === 'number') {\n      return '' + element;\n    } else {\n      return null;\n    }\n  },\n  getUpdateCount: function (id) {\n    var item = getItem(id);\n    return item ? item.updateCount : 0;\n  },\n\n\n  getRootIDs: getRootIDs,\n  getRegisteredIDs: getItemIDs\n};\n\nmodule.exports = ReactComponentTreeHook;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/ReactComponentTreeHook.js\n// module id = 78\n// module chunks = 0","/**\n * Copyright 2014-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\n// The Symbol used to tag the ReactElement type. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\n\nvar REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;\n\nmodule.exports = REACT_ELEMENT_TYPE;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/ReactElementSymbol.js\n// module id = 79\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar canDefineProperty = false;\nif (process.env.NODE_ENV !== 'production') {\n  try {\n    // $FlowFixMe https://github.com/facebook/flow/issues/285\n    Object.defineProperty({}, 'x', { get: function () {} });\n    canDefineProperty = true;\n  } catch (x) {\n    // IE will fail on defineProperty\n  }\n}\n\nmodule.exports = canDefineProperty;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/canDefineProperty.js\n// module id = 80\n// module chunks = 0","'use strict';\n\nmodule.exports = require('./lib/ReactDOM');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/index.js\n// module id = 81\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar ARIADOMPropertyConfig = {\n  Properties: {\n    // Global States and Properties\n    'aria-current': 0, // state\n    'aria-details': 0,\n    'aria-disabled': 0, // state\n    'aria-hidden': 0, // state\n    'aria-invalid': 0, // state\n    'aria-keyshortcuts': 0,\n    'aria-label': 0,\n    'aria-roledescription': 0,\n    // Widget Attributes\n    'aria-autocomplete': 0,\n    'aria-checked': 0,\n    'aria-expanded': 0,\n    'aria-haspopup': 0,\n    'aria-level': 0,\n    'aria-modal': 0,\n    'aria-multiline': 0,\n    'aria-multiselectable': 0,\n    'aria-orientation': 0,\n    'aria-placeholder': 0,\n    'aria-pressed': 0,\n    'aria-readonly': 0,\n    'aria-required': 0,\n    'aria-selected': 0,\n    'aria-sort': 0,\n    'aria-valuemax': 0,\n    'aria-valuemin': 0,\n    'aria-valuenow': 0,\n    'aria-valuetext': 0,\n    // Live Region Attributes\n    'aria-atomic': 0,\n    'aria-busy': 0,\n    'aria-live': 0,\n    'aria-relevant': 0,\n    // Drag-and-Drop Attributes\n    'aria-dropeffect': 0,\n    'aria-grabbed': 0,\n    // Relationship Attributes\n    'aria-activedescendant': 0,\n    'aria-colcount': 0,\n    'aria-colindex': 0,\n    'aria-colspan': 0,\n    'aria-controls': 0,\n    'aria-describedby': 0,\n    'aria-errormessage': 0,\n    'aria-flowto': 0,\n    'aria-labelledby': 0,\n    'aria-owns': 0,\n    'aria-posinset': 0,\n    'aria-rowcount': 0,\n    'aria-rowindex': 0,\n    'aria-rowspan': 0,\n    'aria-setsize': 0\n  },\n  DOMAttributeNames: {},\n  DOMPropertyNames: {}\n};\n\nmodule.exports = ARIADOMPropertyConfig;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ARIADOMPropertyConfig.js\n// module id = 82\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\n\nvar focusNode = require('fbjs/lib/focusNode');\n\nvar AutoFocusUtils = {\n  focusDOMComponent: function () {\n    focusNode(ReactDOMComponentTree.getNodeFromInstance(this));\n  }\n};\n\nmodule.exports = AutoFocusUtils;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/AutoFocusUtils.js\n// module id = 83\n// module chunks = 0","/**\n * Copyright 2013-present Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar EventPropagators = require('./EventPropagators');\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\nvar FallbackCompositionState = require('./FallbackCompositionState');\nvar SyntheticCompositionEvent = require('./SyntheticCompositionEvent');\nvar SyntheticInputEvent = require('./SyntheticInputEvent');\n\nvar END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space\nvar START_KEYCODE = 229;\n\nvar canUseCompositionEvent = ExecutionEnvironment.canUseDOM && 'CompositionEvent' in window;\n\nvar documentMode = null;\nif (ExecutionEnvironment.canUseDOM && 'documentMode' in document) {\n  documentMode = document.documentMode;\n}\n\n// Webkit offers a very useful `textInput` event that can be used to\n// directly represent `beforeInput`. The IE `textinput` event is not as\n// useful, so we don't use it.\nvar canUseTextInputEvent = ExecutionEnvironment.canUseDOM && 'TextEvent' in window && !documentMode && !isPresto();\n\n// In IE9+, we have access to composition events, but the data supplied\n// by the native compositionend event may be incorrect. Japanese ideographic\n// spaces, for instance (\\u3000) are not recorded correctly.\nvar useFallbackCompositionData = ExecutionEnvironment.canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);\n\n/**\n * Opera <= 12 includes TextEvent in window, but does not fire\n * text input events. Rely on keypress instead.\n */\nfunction isPresto() {\n  var opera = window.opera;\n  return typeof opera === 'object' && typeof opera.version === 'function' && parseInt(opera.version(), 10) <= 12;\n}\n\nvar SPACEBAR_CODE = 32;\nvar SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);\n\n// Events and their corresponding property names.\nvar eventTypes = {\n  beforeInput: {\n    phasedRegistrationNames: {\n      bubbled: 'onBeforeInput',\n      captured: 'onBeforeInputCapture'\n    },\n    dependencies: ['topCompositionEnd', 'topKeyPress', 'topTextInput', 'topPaste']\n  },\n  compositionEnd: {\n    phasedRegistrationNames: {\n      bubbled: 'onCompositionEnd',\n      captured: 'onCompositionEndCapture'\n    },\n    dependencies: ['topBlur', 'topCompositionEnd', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']\n  },\n  compositionStart: {\n    phasedRegistrationNames: {\n      bubbled: 'onCompositionStart',\n      captured: 'onCompositionStartCapture'\n    },\n    dependencies: ['topBlur', 'topCompositionStart', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']\n  },\n  compositionUpdate: {\n    phasedRegistrationNames: {\n      bubbled: 'onCompositionUpdate',\n      captured: 'onCompositionUpdateCapture'\n    },\n    dependencies: ['topBlur', 'topCompositionUpdate', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']\n  }\n};\n\n// Track whether we've ever handled a keypress on the space key.\nvar hasSpaceKeypress = false;\n\n/**\n * Return whether a native keypress event is assumed to be a command.\n * This is required because Firefox fires `keypress` events for key commands\n * (cut, copy, select-all, etc.) even though no character is inserted.\n */\nfunction isKeypressCommand(nativeEvent) {\n  return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) &&\n  // ctrlKey && altKey is equivalent to AltGr, and is not a command.\n  !(nativeEvent.ctrlKey && nativeEvent.altKey);\n}\n\n/**\n * Translate native top level events into event types.\n *\n * @param {string} topLevelType\n * @return {object}\n */\nfunction getCompositionEventType(topLevelType) {\n  switch (topLevelType) {\n    case 'topCompositionStart':\n      return eventTypes.compositionStart;\n    case 'topCompositionEnd':\n      return eventTypes.compositionEnd;\n    case 'topCompositionUpdate':\n      return eventTypes.compositionUpdate;\n  }\n}\n\n/**\n * Does our fallback best-guess model think this event signifies that\n * composition has begun?\n *\n * @param {string} topLevelType\n * @param {object} nativeEvent\n * @return {boolean}\n */\nfunction isFallbackCompositionStart(topLevelType, nativeEvent) {\n  return topLevelType === 'topKeyDown' && nativeEvent.keyCode === START_KEYCODE;\n}\n\n/**\n * Does our fallback mode think that this event is the end of composition?\n *\n * @param {string} topLevelType\n * @param {object} nativeEvent\n * @return {boolean}\n */\nfunction isFallbackCompositionEnd(topLevelType, nativeEvent) {\n  switch (topLevelType) {\n    case 'topKeyUp':\n      // Command keys insert or clear IME input.\n      return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;\n    case 'topKeyDown':\n      // Expect IME keyCode on each keydown. If we get any other\n      // code we must have exited earlier.\n      return nativeEvent.keyCode !== START_KEYCODE;\n    case 'topKeyPress':\n    case 'topMouseDown':\n    case 'topBlur':\n      // Events are not possible without cancelling IME.\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * Google Input Tools provides composition data via a CustomEvent,\n * with the `data` property populated in the `detail` object. If this\n * is available on the event object, use it. If not, this is a plain\n * composition event and we have nothing special to extract.\n *\n * @param {object} nativeEvent\n * @return {?string}\n */\nfunction getDataFromCustomEvent(nativeEvent) {\n  var detail = nativeEvent.detail;\n  if (typeof detail === 'object' && 'data' in detail) {\n    return detail.data;\n  }\n  return null;\n}\n\n// Track the current IME composition fallback object, if any.\nvar currentComposition = null;\n\n/**\n * @return {?object} A SyntheticCompositionEvent.\n */\nfunction extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n  var eventType;\n  var fallbackData;\n\n  if (canUseCompositionEvent) {\n    eventType = getCompositionEventType(topLevelType);\n  } else if (!currentComposition) {\n    if (isFallbackCompositionStart(topLevelType, nativeEvent)) {\n      eventType = eventTypes.compositionStart;\n    }\n  } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {\n    eventType = eventTypes.compositionEnd;\n  }\n\n  if (!eventType) {\n    return null;\n  }\n\n  if (useFallbackCompositionData) {\n    // The current composition is stored statically and must not be\n    // overwritten while composition continues.\n    if (!currentComposition && eventType === eventTypes.compositionStart) {\n      currentComposition = FallbackCompositionState.getPooled(nativeEventTarget);\n    } else if (eventType === eventTypes.compositionEnd) {\n      if (currentComposition) {\n        fallbackData = currentComposition.getData();\n      }\n    }\n  }\n\n  var event = SyntheticCompositionEvent.getPooled(eventType, targetInst, nativeEvent, nativeEventTarget);\n\n  if (fallbackData) {\n    // Inject data generated from fallback path into the synthetic event.\n    // This matches the property of native CompositionEventInterface.\n    event.data = fallbackData;\n  } else {\n    var customData = getDataFromCustomEvent(nativeEvent);\n    if (customData !== null) {\n      event.data = customData;\n    }\n  }\n\n  EventPropagators.accumulateTwoPhaseDispatches(event);\n  return event;\n}\n\n/**\n * @param {string} topLevelType Record from `EventConstants`.\n * @param {object} nativeEvent Native browser event.\n * @return {?string} The string corresponding to this `beforeInput` event.\n */\nfunction getNativeBeforeInputChars(topLevelType, nativeEvent) {\n  switch (topLevelType) {\n    case 'topCompositionEnd':\n      return getDataFromCustomEvent(nativeEvent);\n    case 'topKeyPress':\n      /**\n       * If native `textInput` events are available, our goal is to make\n       * use of them. However, there is a special case: the spacebar key.\n       * In Webkit, preventing default on a spacebar `textInput` event\n       * cancels character insertion, but it *also* causes the browser\n       * to fall back to its default spacebar behavior of scrolling the\n       * page.\n       *\n       * Tracking at:\n       * https://code.google.com/p/chromium/issues/detail?id=355103\n       *\n       * To avoid this issue, use the keypress event as if no `textInput`\n       * event is available.\n       */\n      var which = nativeEvent.which;\n      if (which !== SPACEBAR_CODE) {\n        return null;\n      }\n\n      hasSpaceKeypress = true;\n      return SPACEBAR_CHAR;\n\n    case 'topTextInput':\n      // Record the characters to be added to the DOM.\n      var chars = nativeEvent.data;\n\n      // If it's a spacebar character, assume that we have already handled\n      // it at the keypress level and bail immediately. Android Chrome\n      // doesn't give us keycodes, so we need to blacklist it.\n      if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {\n        return null;\n      }\n\n      return chars;\n\n    default:\n      // For other native event types, do nothing.\n      return null;\n  }\n}\n\n/**\n * For browsers that do not provide the `textInput` event, extract the\n * appropriate string to use for SyntheticInputEvent.\n *\n * @param {string} topLevelType Record from `EventConstants`.\n * @param {object} nativeEvent Native browser event.\n * @return {?string} The fallback string for this `beforeInput` event.\n */\nfunction getFallbackBeforeInputChars(topLevelType, nativeEvent) {\n  // If we are currently composing (IME) and using a fallback to do so,\n  // try to extract the composed characters from the fallback object.\n  // If composition event is available, we extract a string only at\n  // compositionevent, otherwise extract it at fallback events.\n  if (currentComposition) {\n    if (topLevelType === 'topCompositionEnd' || !canUseCompositionEvent && isFallbackCompositionEnd(topLevelType, nativeEvent)) {\n      var chars = currentComposition.getData();\n      FallbackCompositionState.release(currentComposition);\n      currentComposition = null;\n      return chars;\n    }\n    return null;\n  }\n\n  switch (topLevelType) {\n    case 'topPaste':\n      // If a paste event occurs after a keypress, throw out the input\n      // chars. Paste events should not lead to BeforeInput events.\n      return null;\n    case 'topKeyPress':\n      /**\n       * As of v27, Firefox may fire keypress events even when no character\n       * will be inserted. A few possibilities:\n       *\n       * - `which` is `0`. Arrow keys, Esc key, etc.\n       *\n       * - `which` is the pressed key code, but no char is available.\n       *   Ex: 'AltGr + d` in Polish. There is no modified character for\n       *   this key combination and no character is inserted into the\n       *   document, but FF fires the keypress for char code `100` anyway.\n       *   No `input` event will occur.\n       *\n       * - `which` is the pressed key code, but a command combination is\n       *   being used. Ex: `Cmd+C`. No character is inserted, and no\n       *   `input` event will occur.\n       */\n      if (nativeEvent.which && !isKeypressCommand(nativeEvent)) {\n        return String.fromCharCode(nativeEvent.which);\n      }\n      return null;\n    case 'topCompositionEnd':\n      return useFallbackCompositionData ? null : nativeEvent.data;\n    default:\n      return null;\n  }\n}\n\n/**\n * Extract a SyntheticInputEvent for `beforeInput`, based on either native\n * `textInput` or fallback behavior.\n *\n * @return {?object} A SyntheticInputEvent.\n */\nfunction extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n  var chars;\n\n  if (canUseTextInputEvent) {\n    chars = getNativeBeforeInputChars(topLevelType, nativeEvent);\n  } else {\n    chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);\n  }\n\n  // If no characters are being inserted, no BeforeInput event should\n  // be fired.\n  if (!chars) {\n    return null;\n  }\n\n  var event = SyntheticInputEvent.getPooled(eventTypes.beforeInput, targetInst, nativeEvent, nativeEventTarget);\n\n  event.data = chars;\n  EventPropagators.accumulateTwoPhaseDispatches(event);\n  return event;\n}\n\n/**\n * Create an `onBeforeInput` event to match\n * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.\n *\n * This event plugin is based on the native `textInput` event\n * available in Chrome, Safari, Opera, and IE. This event fires after\n * `onKeyPress` and `onCompositionEnd`, but before `onInput`.\n *\n * `beforeInput` is spec'd but not implemented in any browsers, and\n * the `input` event does not provide any useful information about what has\n * actually been added, contrary to the spec. Thus, `textInput` is the best\n * available event to identify the characters that have actually been inserted\n * into the target node.\n *\n * This plugin is also responsible for emitting `composition` events, thus\n * allowing us to share composition fallback code for both `beforeInput` and\n * `composition` event types.\n */\nvar BeforeInputEventPlugin = {\n\n  eventTypes: eventTypes,\n\n  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n    return [extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget), extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget)];\n  }\n};\n\nmodule.exports = BeforeInputEventPlugin;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/BeforeInputEventPlugin.js\n// module id = 84\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar CSSProperty = require('./CSSProperty');\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\nvar ReactInstrumentation = require('./ReactInstrumentation');\n\nvar camelizeStyleName = require('fbjs/lib/camelizeStyleName');\nvar dangerousStyleValue = require('./dangerousStyleValue');\nvar hyphenateStyleName = require('fbjs/lib/hyphenateStyleName');\nvar memoizeStringOnly = require('fbjs/lib/memoizeStringOnly');\nvar warning = require('fbjs/lib/warning');\n\nvar processStyleName = memoizeStringOnly(function (styleName) {\n  return hyphenateStyleName(styleName);\n});\n\nvar hasShorthandPropertyBug = false;\nvar styleFloatAccessor = 'cssFloat';\nif (ExecutionEnvironment.canUseDOM) {\n  var tempStyle = document.createElement('div').style;\n  try {\n    // IE8 throws \"Invalid argument.\" if resetting shorthand style properties.\n    tempStyle.font = '';\n  } catch (e) {\n    hasShorthandPropertyBug = true;\n  }\n  // IE8 only supports accessing cssFloat (standard) as styleFloat\n  if (document.documentElement.style.cssFloat === undefined) {\n    styleFloatAccessor = 'styleFloat';\n  }\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  // 'msTransform' is correct, but the other prefixes should be capitalized\n  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;\n\n  // style values shouldn't contain a semicolon\n  var badStyleValueWithSemicolonPattern = /;\\s*$/;\n\n  var warnedStyleNames = {};\n  var warnedStyleValues = {};\n  var warnedForNaNValue = false;\n\n  var warnHyphenatedStyleName = function (name, owner) {\n    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {\n      return;\n    }\n\n    warnedStyleNames[name] = true;\n    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported style property %s. Did you mean %s?%s', name, camelizeStyleName(name), checkRenderMessage(owner)) : void 0;\n  };\n\n  var warnBadVendoredStyleName = function (name, owner) {\n    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {\n      return;\n    }\n\n    warnedStyleNames[name] = true;\n    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported vendor-prefixed style property %s. Did you mean %s?%s', name, name.charAt(0).toUpperCase() + name.slice(1), checkRenderMessage(owner)) : void 0;\n  };\n\n  var warnStyleValueWithSemicolon = function (name, value, owner) {\n    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {\n      return;\n    }\n\n    warnedStyleValues[value] = true;\n    process.env.NODE_ENV !== 'production' ? warning(false, 'Style property values shouldn\\'t contain a semicolon.%s ' + 'Try \"%s: %s\" instead.', checkRenderMessage(owner), name, value.replace(badStyleValueWithSemicolonPattern, '')) : void 0;\n  };\n\n  var warnStyleValueIsNaN = function (name, value, owner) {\n    if (warnedForNaNValue) {\n      return;\n    }\n\n    warnedForNaNValue = true;\n    process.env.NODE_ENV !== 'production' ? warning(false, '`NaN` is an invalid value for the `%s` css style property.%s', name, checkRenderMessage(owner)) : void 0;\n  };\n\n  var checkRenderMessage = function (owner) {\n    if (owner) {\n      var name = owner.getName();\n      if (name) {\n        return ' Check the render method of `' + name + '`.';\n      }\n    }\n    return '';\n  };\n\n  /**\n   * @param {string} name\n   * @param {*} value\n   * @param {ReactDOMComponent} component\n   */\n  var warnValidStyle = function (name, value, component) {\n    var owner;\n    if (component) {\n      owner = component._currentElement._owner;\n    }\n    if (name.indexOf('-') > -1) {\n      warnHyphenatedStyleName(name, owner);\n    } else if (badVendoredStyleNamePattern.test(name)) {\n      warnBadVendoredStyleName(name, owner);\n    } else if (badStyleValueWithSemicolonPattern.test(value)) {\n      warnStyleValueWithSemicolon(name, value, owner);\n    }\n\n    if (typeof value === 'number' && isNaN(value)) {\n      warnStyleValueIsNaN(name, value, owner);\n    }\n  };\n}\n\n/**\n * Operations for dealing with CSS properties.\n */\nvar CSSPropertyOperations = {\n\n  /**\n   * Serializes a mapping of style properties for use as inline styles:\n   *\n   *   > createMarkupForStyles({width: '200px', height: 0})\n   *   \"width:200px;height:0;\"\n   *\n   * Undefined values are ignored so that declarative programming is easier.\n   * The result should be HTML-escaped before insertion into the DOM.\n   *\n   * @param {object} styles\n   * @param {ReactDOMComponent} component\n   * @return {?string}\n   */\n  createMarkupForStyles: function (styles, component) {\n    var serialized = '';\n    for (var styleName in styles) {\n      if (!styles.hasOwnProperty(styleName)) {\n        continue;\n      }\n      var styleValue = styles[styleName];\n      if (process.env.NODE_ENV !== 'production') {\n        warnValidStyle(styleName, styleValue, component);\n      }\n      if (styleValue != null) {\n        serialized += processStyleName(styleName) + ':';\n        serialized += dangerousStyleValue(styleName, styleValue, component) + ';';\n      }\n    }\n    return serialized || null;\n  },\n\n  /**\n   * Sets the value for multiple styles on a node.  If a value is specified as\n   * '' (empty string), the corresponding style property will be unset.\n   *\n   * @param {DOMElement} node\n   * @param {object} styles\n   * @param {ReactDOMComponent} component\n   */\n  setValueForStyles: function (node, styles, component) {\n    if (process.env.NODE_ENV !== 'production') {\n      ReactInstrumentation.debugTool.onHostOperation({\n        instanceID: component._debugID,\n        type: 'update styles',\n        payload: styles\n      });\n    }\n\n    var style = node.style;\n    for (var styleName in styles) {\n      if (!styles.hasOwnProperty(styleName)) {\n        continue;\n      }\n      if (process.env.NODE_ENV !== 'production') {\n        warnValidStyle(styleName, styles[styleName], component);\n      }\n      var styleValue = dangerousStyleValue(styleName, styles[styleName], component);\n      if (styleName === 'float' || styleName === 'cssFloat') {\n        styleName = styleFloatAccessor;\n      }\n      if (styleValue) {\n        style[styleName] = styleValue;\n      } else {\n        var expansion = hasShorthandPropertyBug && CSSProperty.shorthandPropertyExpansions[styleName];\n        if (expansion) {\n          // Shorthand property that IE8 won't like unsetting, so unset each\n          // component to placate it\n          for (var individualStyleName in expansion) {\n            style[individualStyleName] = '';\n          }\n        } else {\n          style[styleName] = '';\n        }\n      }\n    }\n  }\n\n};\n\nmodule.exports = CSSPropertyOperations;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/CSSPropertyOperations.js\n// module id = 85\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar EventPluginHub = require('./EventPluginHub');\nvar EventPropagators = require('./EventPropagators');\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar ReactUpdates = require('./ReactUpdates');\nvar SyntheticEvent = require('./SyntheticEvent');\n\nvar getEventTarget = require('./getEventTarget');\nvar isEventSupported = require('./isEventSupported');\nvar isTextInputElement = require('./isTextInputElement');\n\nvar eventTypes = {\n  change: {\n    phasedRegistrationNames: {\n      bubbled: 'onChange',\n      captured: 'onChangeCapture'\n    },\n    dependencies: ['topBlur', 'topChange', 'topClick', 'topFocus', 'topInput', 'topKeyDown', 'topKeyUp', 'topSelectionChange']\n  }\n};\n\n/**\n * For IE shims\n */\nvar activeElement = null;\nvar activeElementInst = null;\nvar activeElementValue = null;\nvar activeElementValueProp = null;\n\n/**\n * SECTION: handle `change` event\n */\nfunction shouldUseChangeEvent(elem) {\n  var nodeName = elem.nodeName && elem.nodeName.toLowerCase();\n  return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';\n}\n\nvar doesChangeEventBubble = false;\nif (ExecutionEnvironment.canUseDOM) {\n  // See `handleChange` comment below\n  doesChangeEventBubble = isEventSupported('change') && (!document.documentMode || document.documentMode > 8);\n}\n\nfunction manualDispatchChangeEvent(nativeEvent) {\n  var event = SyntheticEvent.getPooled(eventTypes.change, activeElementInst, nativeEvent, getEventTarget(nativeEvent));\n  EventPropagators.accumulateTwoPhaseDispatches(event);\n\n  // If change and propertychange bubbled, we'd just bind to it like all the\n  // other events and have it go through ReactBrowserEventEmitter. Since it\n  // doesn't, we manually listen for the events and so we have to enqueue and\n  // process the abstract event manually.\n  //\n  // Batching is necessary here in order to ensure that all event handlers run\n  // before the next rerender (including event handlers attached to ancestor\n  // elements instead of directly on the input). Without this, controlled\n  // components don't work properly in conjunction with event bubbling because\n  // the component is rerendered and the value reverted before all the event\n  // handlers can run. See https://github.com/facebook/react/issues/708.\n  ReactUpdates.batchedUpdates(runEventInBatch, event);\n}\n\nfunction runEventInBatch(event) {\n  EventPluginHub.enqueueEvents(event);\n  EventPluginHub.processEventQueue(false);\n}\n\nfunction startWatchingForChangeEventIE8(target, targetInst) {\n  activeElement = target;\n  activeElementInst = targetInst;\n  activeElement.attachEvent('onchange', manualDispatchChangeEvent);\n}\n\nfunction stopWatchingForChangeEventIE8() {\n  if (!activeElement) {\n    return;\n  }\n  activeElement.detachEvent('onchange', manualDispatchChangeEvent);\n  activeElement = null;\n  activeElementInst = null;\n}\n\nfunction getTargetInstForChangeEvent(topLevelType, targetInst) {\n  if (topLevelType === 'topChange') {\n    return targetInst;\n  }\n}\nfunction handleEventsForChangeEventIE8(topLevelType, target, targetInst) {\n  if (topLevelType === 'topFocus') {\n    // stopWatching() should be a noop here but we call it just in case we\n    // missed a blur event somehow.\n    stopWatchingForChangeEventIE8();\n    startWatchingForChangeEventIE8(target, targetInst);\n  } else if (topLevelType === 'topBlur') {\n    stopWatchingForChangeEventIE8();\n  }\n}\n\n/**\n * SECTION: handle `input` event\n */\nvar isInputEventSupported = false;\nif (ExecutionEnvironment.canUseDOM) {\n  // IE9 claims to support the input event but fails to trigger it when\n  // deleting text, so we ignore its input events.\n  // IE10+ fire input events to often, such when a placeholder\n  // changes or when an input with a placeholder is focused.\n  isInputEventSupported = isEventSupported('input') && (!document.documentMode || document.documentMode > 11);\n}\n\n/**\n * (For IE <=11) Replacement getter/setter for the `value` property that gets\n * set on the active element.\n */\nvar newValueProp = {\n  get: function () {\n    return activeElementValueProp.get.call(this);\n  },\n  set: function (val) {\n    // Cast to a string so we can do equality checks.\n    activeElementValue = '' + val;\n    activeElementValueProp.set.call(this, val);\n  }\n};\n\n/**\n * (For IE <=11) Starts tracking propertychange events on the passed-in element\n * and override the value property so that we can distinguish user events from\n * value changes in JS.\n */\nfunction startWatchingForValueChange(target, targetInst) {\n  activeElement = target;\n  activeElementInst = targetInst;\n  activeElementValue = target.value;\n  activeElementValueProp = Object.getOwnPropertyDescriptor(target.constructor.prototype, 'value');\n\n  // Not guarded in a canDefineProperty check: IE8 supports defineProperty only\n  // on DOM elements\n  Object.defineProperty(activeElement, 'value', newValueProp);\n  if (activeElement.attachEvent) {\n    activeElement.attachEvent('onpropertychange', handlePropertyChange);\n  } else {\n    activeElement.addEventListener('propertychange', handlePropertyChange, false);\n  }\n}\n\n/**\n * (For IE <=11) Removes the event listeners from the currently-tracked element,\n * if any exists.\n */\nfunction stopWatchingForValueChange() {\n  if (!activeElement) {\n    return;\n  }\n\n  // delete restores the original property definition\n  delete activeElement.value;\n\n  if (activeElement.detachEvent) {\n    activeElement.detachEvent('onpropertychange', handlePropertyChange);\n  } else {\n    activeElement.removeEventListener('propertychange', handlePropertyChange, false);\n  }\n\n  activeElement = null;\n  activeElementInst = null;\n  activeElementValue = null;\n  activeElementValueProp = null;\n}\n\n/**\n * (For IE <=11) Handles a propertychange event, sending a `change` event if\n * the value of the active element has changed.\n */\nfunction handlePropertyChange(nativeEvent) {\n  if (nativeEvent.propertyName !== 'value') {\n    return;\n  }\n  var value = nativeEvent.srcElement.value;\n  if (value === activeElementValue) {\n    return;\n  }\n  activeElementValue = value;\n\n  manualDispatchChangeEvent(nativeEvent);\n}\n\n/**\n * If a `change` event should be fired, returns the target's ID.\n */\nfunction getTargetInstForInputEvent(topLevelType, targetInst) {\n  if (topLevelType === 'topInput') {\n    // In modern browsers (i.e., not IE8 or IE9), the input event is exactly\n    // what we want so fall through here and trigger an abstract event\n    return targetInst;\n  }\n}\n\nfunction handleEventsForInputEventIE(topLevelType, target, targetInst) {\n  if (topLevelType === 'topFocus') {\n    // In IE8, we can capture almost all .value changes by adding a\n    // propertychange handler and looking for events with propertyName\n    // equal to 'value'\n    // In IE9-11, propertychange fires for most input events but is buggy and\n    // doesn't fire when text is deleted, but conveniently, selectionchange\n    // appears to fire in all of the remaining cases so we catch those and\n    // forward the event if the value has changed\n    // In either case, we don't want to call the event handler if the value\n    // is changed from JS so we redefine a setter for `.value` that updates\n    // our activeElementValue variable, allowing us to ignore those changes\n    //\n    // stopWatching() should be a noop here but we call it just in case we\n    // missed a blur event somehow.\n    stopWatchingForValueChange();\n    startWatchingForValueChange(target, targetInst);\n  } else if (topLevelType === 'topBlur') {\n    stopWatchingForValueChange();\n  }\n}\n\n// For IE8 and IE9.\nfunction getTargetInstForInputEventIE(topLevelType, targetInst) {\n  if (topLevelType === 'topSelectionChange' || topLevelType === 'topKeyUp' || topLevelType === 'topKeyDown') {\n    // On the selectionchange event, the target is just document which isn't\n    // helpful for us so just check activeElement instead.\n    //\n    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire\n    // propertychange on the first input event after setting `value` from a\n    // script and fires only keydown, keypress, keyup. Catching keyup usually\n    // gets it and catching keydown lets us fire an event for the first\n    // keystroke if user does a key repeat (it'll be a little delayed: right\n    // before the second keystroke). Other input methods (e.g., paste) seem to\n    // fire selectionchange normally.\n    if (activeElement && activeElement.value !== activeElementValue) {\n      activeElementValue = activeElement.value;\n      return activeElementInst;\n    }\n  }\n}\n\n/**\n * SECTION: handle `click` event\n */\nfunction shouldUseClickEvent(elem) {\n  // Use the `click` event to detect changes to checkbox and radio inputs.\n  // This approach works across all browsers, whereas `change` does not fire\n  // until `blur` in IE8.\n  return elem.nodeName && elem.nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');\n}\n\nfunction getTargetInstForClickEvent(topLevelType, targetInst) {\n  if (topLevelType === 'topClick') {\n    return targetInst;\n  }\n}\n\nfunction handleControlledInputBlur(inst, node) {\n  // TODO: In IE, inst is occasionally null. Why?\n  if (inst == null) {\n    return;\n  }\n\n  // Fiber and ReactDOM keep wrapper state in separate places\n  var state = inst._wrapperState || node._wrapperState;\n\n  if (!state || !state.controlled || node.type !== 'number') {\n    return;\n  }\n\n  // If controlled, assign the value attribute to the current value on blur\n  var value = '' + node.value;\n  if (node.getAttribute('value') !== value) {\n    node.setAttribute('value', value);\n  }\n}\n\n/**\n * This plugin creates an `onChange` event that normalizes change events\n * across form elements. This event fires at a time when it's possible to\n * change the element's value without seeing a flicker.\n *\n * Supported elements are:\n * - input (see `isTextInputElement`)\n * - textarea\n * - select\n */\nvar ChangeEventPlugin = {\n\n  eventTypes: eventTypes,\n\n  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;\n\n    var getTargetInstFunc, handleEventFunc;\n    if (shouldUseChangeEvent(targetNode)) {\n      if (doesChangeEventBubble) {\n        getTargetInstFunc = getTargetInstForChangeEvent;\n      } else {\n        handleEventFunc = handleEventsForChangeEventIE8;\n      }\n    } else if (isTextInputElement(targetNode)) {\n      if (isInputEventSupported) {\n        getTargetInstFunc = getTargetInstForInputEvent;\n      } else {\n        getTargetInstFunc = getTargetInstForInputEventIE;\n        handleEventFunc = handleEventsForInputEventIE;\n      }\n    } else if (shouldUseClickEvent(targetNode)) {\n      getTargetInstFunc = getTargetInstForClickEvent;\n    }\n\n    if (getTargetInstFunc) {\n      var inst = getTargetInstFunc(topLevelType, targetInst);\n      if (inst) {\n        var event = SyntheticEvent.getPooled(eventTypes.change, inst, nativeEvent, nativeEventTarget);\n        event.type = 'change';\n        EventPropagators.accumulateTwoPhaseDispatches(event);\n        return event;\n      }\n    }\n\n    if (handleEventFunc) {\n      handleEventFunc(topLevelType, targetNode, targetInst);\n    }\n\n    // When blurring, set the value attribute for number inputs\n    if (topLevelType === 'topBlur') {\n      handleControlledInputBlur(targetInst, targetNode);\n    }\n  }\n\n};\n\nmodule.exports = ChangeEventPlugin;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ChangeEventPlugin.js\n// module id = 86\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar DOMLazyTree = require('./DOMLazyTree');\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\n\nvar createNodesFromMarkup = require('fbjs/lib/createNodesFromMarkup');\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar invariant = require('fbjs/lib/invariant');\n\nvar Danger = {\n\n  /**\n   * Replaces a node with a string of markup at its current position within its\n   * parent. The markup must render into a single root node.\n   *\n   * @param {DOMElement} oldChild Child node to replace.\n   * @param {string} markup Markup to render in place of the child node.\n   * @internal\n   */\n  dangerouslyReplaceNodeWithMarkup: function (oldChild, markup) {\n    !ExecutionEnvironment.canUseDOM ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot render markup in a worker thread. Make sure `window` and `document` are available globally before requiring React when unit testing or use ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('56') : void 0;\n    !markup ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Missing markup.') : _prodInvariant('57') : void 0;\n    !(oldChild.nodeName !== 'HTML') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot replace markup of the <html> node. This is because browser quirks make this unreliable and/or slow. If you want to render to the root you must use server rendering. See ReactDOMServer.renderToString().') : _prodInvariant('58') : void 0;\n\n    if (typeof markup === 'string') {\n      var newChild = createNodesFromMarkup(markup, emptyFunction)[0];\n      oldChild.parentNode.replaceChild(newChild, oldChild);\n    } else {\n      DOMLazyTree.replaceChildWithTree(oldChild, markup);\n    }\n  }\n\n};\n\nmodule.exports = Danger;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/Danger.js\n// module id = 87\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\n/**\n * Module that is injectable into `EventPluginHub`, that specifies a\n * deterministic ordering of `EventPlugin`s. A convenient way to reason about\n * plugins, without having to package every one of them. This is better than\n * having plugins be ordered in the same order that they are injected because\n * that ordering would be influenced by the packaging order.\n * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that\n * preventing default on events is convenient in `SimpleEventPlugin` handlers.\n */\n\nvar DefaultEventPluginOrder = ['ResponderEventPlugin', 'SimpleEventPlugin', 'TapEventPlugin', 'EnterLeaveEventPlugin', 'ChangeEventPlugin', 'SelectEventPlugin', 'BeforeInputEventPlugin'];\n\nmodule.exports = DefaultEventPluginOrder;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/DefaultEventPluginOrder.js\n// module id = 88\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar EventPropagators = require('./EventPropagators');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar SyntheticMouseEvent = require('./SyntheticMouseEvent');\n\nvar eventTypes = {\n  mouseEnter: {\n    registrationName: 'onMouseEnter',\n    dependencies: ['topMouseOut', 'topMouseOver']\n  },\n  mouseLeave: {\n    registrationName: 'onMouseLeave',\n    dependencies: ['topMouseOut', 'topMouseOver']\n  }\n};\n\nvar EnterLeaveEventPlugin = {\n\n  eventTypes: eventTypes,\n\n  /**\n   * For almost every interaction we care about, there will be both a top-level\n   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that\n   * we do not extract duplicate events. However, moving the mouse into the\n   * browser from outside will not fire a `mouseout` event. In this case, we use\n   * the `mouseover` top-level event.\n   */\n  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n    if (topLevelType === 'topMouseOver' && (nativeEvent.relatedTarget || nativeEvent.fromElement)) {\n      return null;\n    }\n    if (topLevelType !== 'topMouseOut' && topLevelType !== 'topMouseOver') {\n      // Must not be a mouse in or mouse out - ignoring.\n      return null;\n    }\n\n    var win;\n    if (nativeEventTarget.window === nativeEventTarget) {\n      // `nativeEventTarget` is probably a window object.\n      win = nativeEventTarget;\n    } else {\n      // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.\n      var doc = nativeEventTarget.ownerDocument;\n      if (doc) {\n        win = doc.defaultView || doc.parentWindow;\n      } else {\n        win = window;\n      }\n    }\n\n    var from;\n    var to;\n    if (topLevelType === 'topMouseOut') {\n      from = targetInst;\n      var related = nativeEvent.relatedTarget || nativeEvent.toElement;\n      to = related ? ReactDOMComponentTree.getClosestInstanceFromNode(related) : null;\n    } else {\n      // Moving to a node from outside the window.\n      from = null;\n      to = targetInst;\n    }\n\n    if (from === to) {\n      // Nothing pertains to our managed components.\n      return null;\n    }\n\n    var fromNode = from == null ? win : ReactDOMComponentTree.getNodeFromInstance(from);\n    var toNode = to == null ? win : ReactDOMComponentTree.getNodeFromInstance(to);\n\n    var leave = SyntheticMouseEvent.getPooled(eventTypes.mouseLeave, from, nativeEvent, nativeEventTarget);\n    leave.type = 'mouseleave';\n    leave.target = fromNode;\n    leave.relatedTarget = toNode;\n\n    var enter = SyntheticMouseEvent.getPooled(eventTypes.mouseEnter, to, nativeEvent, nativeEventTarget);\n    enter.type = 'mouseenter';\n    enter.target = toNode;\n    enter.relatedTarget = fromNode;\n\n    EventPropagators.accumulateEnterLeaveDispatches(leave, enter, from, to);\n\n    return [leave, enter];\n  }\n\n};\n\nmodule.exports = EnterLeaveEventPlugin;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/EnterLeaveEventPlugin.js\n// module id = 89\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar PooledClass = require('./PooledClass');\n\nvar getTextContentAccessor = require('./getTextContentAccessor');\n\n/**\n * This helper class stores information about text content of a target node,\n * allowing comparison of content before and after a given event.\n *\n * Identify the node where selection currently begins, then observe\n * both its text content and its current position in the DOM. Since the\n * browser may natively replace the target node during composition, we can\n * use its position to find its replacement.\n *\n * @param {DOMEventTarget} root\n */\nfunction FallbackCompositionState(root) {\n  this._root = root;\n  this._startText = this.getText();\n  this._fallbackText = null;\n}\n\n_assign(FallbackCompositionState.prototype, {\n  destructor: function () {\n    this._root = null;\n    this._startText = null;\n    this._fallbackText = null;\n  },\n\n  /**\n   * Get current text of input.\n   *\n   * @return {string}\n   */\n  getText: function () {\n    if ('value' in this._root) {\n      return this._root.value;\n    }\n    return this._root[getTextContentAccessor()];\n  },\n\n  /**\n   * Determine the differing substring between the initially stored\n   * text content and the current content.\n   *\n   * @return {string}\n   */\n  getData: function () {\n    if (this._fallbackText) {\n      return this._fallbackText;\n    }\n\n    var start;\n    var startValue = this._startText;\n    var startLength = startValue.length;\n    var end;\n    var endValue = this.getText();\n    var endLength = endValue.length;\n\n    for (start = 0; start < startLength; start++) {\n      if (startValue[start] !== endValue[start]) {\n        break;\n      }\n    }\n\n    var minEnd = startLength - start;\n    for (end = 1; end <= minEnd; end++) {\n      if (startValue[startLength - end] !== endValue[endLength - end]) {\n        break;\n      }\n    }\n\n    var sliceTail = end > 1 ? 1 - end : undefined;\n    this._fallbackText = endValue.slice(start, sliceTail);\n    return this._fallbackText;\n  }\n});\n\nPooledClass.addPoolingTo(FallbackCompositionState);\n\nmodule.exports = FallbackCompositionState;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/FallbackCompositionState.js\n// module id = 90\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar DOMProperty = require('./DOMProperty');\n\nvar MUST_USE_PROPERTY = DOMProperty.injection.MUST_USE_PROPERTY;\nvar HAS_BOOLEAN_VALUE = DOMProperty.injection.HAS_BOOLEAN_VALUE;\nvar HAS_NUMERIC_VALUE = DOMProperty.injection.HAS_NUMERIC_VALUE;\nvar HAS_POSITIVE_NUMERIC_VALUE = DOMProperty.injection.HAS_POSITIVE_NUMERIC_VALUE;\nvar HAS_OVERLOADED_BOOLEAN_VALUE = DOMProperty.injection.HAS_OVERLOADED_BOOLEAN_VALUE;\n\nvar HTMLDOMPropertyConfig = {\n  isCustomAttribute: RegExp.prototype.test.bind(new RegExp('^(data|aria)-[' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$')),\n  Properties: {\n    /**\n     * Standard Properties\n     */\n    accept: 0,\n    acceptCharset: 0,\n    accessKey: 0,\n    action: 0,\n    allowFullScreen: HAS_BOOLEAN_VALUE,\n    allowTransparency: 0,\n    alt: 0,\n    // specifies target context for links with `preload` type\n    as: 0,\n    async: HAS_BOOLEAN_VALUE,\n    autoComplete: 0,\n    // autoFocus is polyfilled/normalized by AutoFocusUtils\n    // autoFocus: HAS_BOOLEAN_VALUE,\n    autoPlay: HAS_BOOLEAN_VALUE,\n    capture: HAS_BOOLEAN_VALUE,\n    cellPadding: 0,\n    cellSpacing: 0,\n    charSet: 0,\n    challenge: 0,\n    checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n    cite: 0,\n    classID: 0,\n    className: 0,\n    cols: HAS_POSITIVE_NUMERIC_VALUE,\n    colSpan: 0,\n    content: 0,\n    contentEditable: 0,\n    contextMenu: 0,\n    controls: HAS_BOOLEAN_VALUE,\n    coords: 0,\n    crossOrigin: 0,\n    data: 0, // For `<object />` acts as `src`.\n    dateTime: 0,\n    'default': HAS_BOOLEAN_VALUE,\n    defer: HAS_BOOLEAN_VALUE,\n    dir: 0,\n    disabled: HAS_BOOLEAN_VALUE,\n    download: HAS_OVERLOADED_BOOLEAN_VALUE,\n    draggable: 0,\n    encType: 0,\n    form: 0,\n    formAction: 0,\n    formEncType: 0,\n    formMethod: 0,\n    formNoValidate: HAS_BOOLEAN_VALUE,\n    formTarget: 0,\n    frameBorder: 0,\n    headers: 0,\n    height: 0,\n    hidden: HAS_BOOLEAN_VALUE,\n    high: 0,\n    href: 0,\n    hrefLang: 0,\n    htmlFor: 0,\n    httpEquiv: 0,\n    icon: 0,\n    id: 0,\n    inputMode: 0,\n    integrity: 0,\n    is: 0,\n    keyParams: 0,\n    keyType: 0,\n    kind: 0,\n    label: 0,\n    lang: 0,\n    list: 0,\n    loop: HAS_BOOLEAN_VALUE,\n    low: 0,\n    manifest: 0,\n    marginHeight: 0,\n    marginWidth: 0,\n    max: 0,\n    maxLength: 0,\n    media: 0,\n    mediaGroup: 0,\n    method: 0,\n    min: 0,\n    minLength: 0,\n    // Caution; `option.selected` is not updated if `select.multiple` is\n    // disabled with `removeAttribute`.\n    multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n    muted: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n    name: 0,\n    nonce: 0,\n    noValidate: HAS_BOOLEAN_VALUE,\n    open: HAS_BOOLEAN_VALUE,\n    optimum: 0,\n    pattern: 0,\n    placeholder: 0,\n    playsInline: HAS_BOOLEAN_VALUE,\n    poster: 0,\n    preload: 0,\n    profile: 0,\n    radioGroup: 0,\n    readOnly: HAS_BOOLEAN_VALUE,\n    referrerPolicy: 0,\n    rel: 0,\n    required: HAS_BOOLEAN_VALUE,\n    reversed: HAS_BOOLEAN_VALUE,\n    role: 0,\n    rows: HAS_POSITIVE_NUMERIC_VALUE,\n    rowSpan: HAS_NUMERIC_VALUE,\n    sandbox: 0,\n    scope: 0,\n    scoped: HAS_BOOLEAN_VALUE,\n    scrolling: 0,\n    seamless: HAS_BOOLEAN_VALUE,\n    selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n    shape: 0,\n    size: HAS_POSITIVE_NUMERIC_VALUE,\n    sizes: 0,\n    span: HAS_POSITIVE_NUMERIC_VALUE,\n    spellCheck: 0,\n    src: 0,\n    srcDoc: 0,\n    srcLang: 0,\n    srcSet: 0,\n    start: HAS_NUMERIC_VALUE,\n    step: 0,\n    style: 0,\n    summary: 0,\n    tabIndex: 0,\n    target: 0,\n    title: 0,\n    // Setting .type throws on non-<input> tags\n    type: 0,\n    useMap: 0,\n    value: 0,\n    width: 0,\n    wmode: 0,\n    wrap: 0,\n\n    /**\n     * RDFa Properties\n     */\n    about: 0,\n    datatype: 0,\n    inlist: 0,\n    prefix: 0,\n    // property is also supported for OpenGraph in meta tags.\n    property: 0,\n    resource: 0,\n    'typeof': 0,\n    vocab: 0,\n\n    /**\n     * Non-standard Properties\n     */\n    // autoCapitalize and autoCorrect are supported in Mobile Safari for\n    // keyboard hints.\n    autoCapitalize: 0,\n    autoCorrect: 0,\n    // autoSave allows WebKit/Blink to persist values of input fields on page reloads\n    autoSave: 0,\n    // color is for Safari mask-icon link\n    color: 0,\n    // itemProp, itemScope, itemType are for\n    // Microdata support. See http://schema.org/docs/gs.html\n    itemProp: 0,\n    itemScope: HAS_BOOLEAN_VALUE,\n    itemType: 0,\n    // itemID and itemRef are for Microdata support as well but\n    // only specified in the WHATWG spec document. See\n    // https://html.spec.whatwg.org/multipage/microdata.html#microdata-dom-api\n    itemID: 0,\n    itemRef: 0,\n    // results show looking glass icon and recent searches on input\n    // search fields in WebKit/Blink\n    results: 0,\n    // IE-only attribute that specifies security restrictions on an iframe\n    // as an alternative to the sandbox attribute on IE<10\n    security: 0,\n    // IE-only attribute that controls focus behavior\n    unselectable: 0\n  },\n  DOMAttributeNames: {\n    acceptCharset: 'accept-charset',\n    className: 'class',\n    htmlFor: 'for',\n    httpEquiv: 'http-equiv'\n  },\n  DOMPropertyNames: {},\n  DOMMutationMethods: {\n    value: function (node, value) {\n      if (value == null) {\n        return node.removeAttribute('value');\n      }\n\n      // Number inputs get special treatment due to some edge cases in\n      // Chrome. Let everything else assign the value attribute as normal.\n      // https://github.com/facebook/react/issues/7253#issuecomment-236074326\n      if (node.type !== 'number' || node.hasAttribute('value') === false) {\n        node.setAttribute('value', '' + value);\n      } else if (node.validity && !node.validity.badInput && node.ownerDocument.activeElement !== node) {\n        // Don't assign an attribute if validation reports bad\n        // input. Chrome will clear the value. Additionally, don't\n        // operate on inputs that have focus, otherwise Chrome might\n        // strip off trailing decimal places and cause the user's\n        // cursor position to jump to the beginning of the input.\n        //\n        // In ReactDOMInput, we have an onBlur event that will trigger\n        // this function again when focus is lost.\n        node.setAttribute('value', '' + value);\n      }\n    }\n  }\n};\n\nmodule.exports = HTMLDOMPropertyConfig;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/HTMLDOMPropertyConfig.js\n// module id = 91\n// module chunks = 0","/**\n * Copyright 2014-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar ReactReconciler = require('./ReactReconciler');\n\nvar instantiateReactComponent = require('./instantiateReactComponent');\nvar KeyEscapeUtils = require('./KeyEscapeUtils');\nvar shouldUpdateReactComponent = require('./shouldUpdateReactComponent');\nvar traverseAllChildren = require('./traverseAllChildren');\nvar warning = require('fbjs/lib/warning');\n\nvar ReactComponentTreeHook;\n\nif (typeof process !== 'undefined' && process.env && process.env.NODE_ENV === 'test') {\n  // Temporary hack.\n  // Inline requires don't work well with Jest:\n  // https://github.com/facebook/react/issues/7240\n  // Remove the inline requires when we don't need them anymore:\n  // https://github.com/facebook/react/pull/7178\n  ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');\n}\n\nfunction instantiateChild(childInstances, child, name, selfDebugID) {\n  // We found a component instance.\n  var keyUnique = childInstances[name] === undefined;\n  if (process.env.NODE_ENV !== 'production') {\n    if (!ReactComponentTreeHook) {\n      ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');\n    }\n    if (!keyUnique) {\n      process.env.NODE_ENV !== 'production' ? warning(false, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeHook.getStackAddendumByID(selfDebugID)) : void 0;\n    }\n  }\n  if (child != null && keyUnique) {\n    childInstances[name] = instantiateReactComponent(child, true);\n  }\n}\n\n/**\n * ReactChildReconciler provides helpers for initializing or updating a set of\n * children. Its output is suitable for passing it onto ReactMultiChild which\n * does diffed reordering and insertion.\n */\nvar ReactChildReconciler = {\n  /**\n   * Generates a \"mount image\" for each of the supplied children. In the case\n   * of `ReactDOMComponent`, a mount image is a string of markup.\n   *\n   * @param {?object} nestedChildNodes Nested child maps.\n   * @return {?object} A set of child instances.\n   * @internal\n   */\n  instantiateChildren: function (nestedChildNodes, transaction, context, selfDebugID // 0 in production and for roots\n  ) {\n    if (nestedChildNodes == null) {\n      return null;\n    }\n    var childInstances = {};\n\n    if (process.env.NODE_ENV !== 'production') {\n      traverseAllChildren(nestedChildNodes, function (childInsts, child, name) {\n        return instantiateChild(childInsts, child, name, selfDebugID);\n      }, childInstances);\n    } else {\n      traverseAllChildren(nestedChildNodes, instantiateChild, childInstances);\n    }\n    return childInstances;\n  },\n\n  /**\n   * Updates the rendered children and returns a new set of children.\n   *\n   * @param {?object} prevChildren Previously initialized set of children.\n   * @param {?object} nextChildren Flat child element maps.\n   * @param {ReactReconcileTransaction} transaction\n   * @param {object} context\n   * @return {?object} A new set of child instances.\n   * @internal\n   */\n  updateChildren: function (prevChildren, nextChildren, mountImages, removedNodes, transaction, hostParent, hostContainerInfo, context, selfDebugID // 0 in production and for roots\n  ) {\n    // We currently don't have a way to track moves here but if we use iterators\n    // instead of for..in we can zip the iterators and check if an item has\n    // moved.\n    // TODO: If nothing has changed, return the prevChildren object so that we\n    // can quickly bailout if nothing has changed.\n    if (!nextChildren && !prevChildren) {\n      return;\n    }\n    var name;\n    var prevChild;\n    for (name in nextChildren) {\n      if (!nextChildren.hasOwnProperty(name)) {\n        continue;\n      }\n      prevChild = prevChildren && prevChildren[name];\n      var prevElement = prevChild && prevChild._currentElement;\n      var nextElement = nextChildren[name];\n      if (prevChild != null && shouldUpdateReactComponent(prevElement, nextElement)) {\n        ReactReconciler.receiveComponent(prevChild, nextElement, transaction, context);\n        nextChildren[name] = prevChild;\n      } else {\n        if (prevChild) {\n          removedNodes[name] = ReactReconciler.getHostNode(prevChild);\n          ReactReconciler.unmountComponent(prevChild, false);\n        }\n        // The child must be instantiated before it's mounted.\n        var nextChildInstance = instantiateReactComponent(nextElement, true);\n        nextChildren[name] = nextChildInstance;\n        // Creating mount image now ensures refs are resolved in right order\n        // (see https://github.com/facebook/react/pull/7101 for explanation).\n        var nextChildMountImage = ReactReconciler.mountComponent(nextChildInstance, transaction, hostParent, hostContainerInfo, context, selfDebugID);\n        mountImages.push(nextChildMountImage);\n      }\n    }\n    // Unmount children that are no longer present.\n    for (name in prevChildren) {\n      if (prevChildren.hasOwnProperty(name) && !(nextChildren && nextChildren.hasOwnProperty(name))) {\n        prevChild = prevChildren[name];\n        removedNodes[name] = ReactReconciler.getHostNode(prevChild);\n        ReactReconciler.unmountComponent(prevChild, false);\n      }\n    }\n  },\n\n  /**\n   * Unmounts all rendered children. This should be used to clean up children\n   * when this component is unmounted.\n   *\n   * @param {?object} renderedChildren Previously initialized set of children.\n   * @internal\n   */\n  unmountChildren: function (renderedChildren, safely) {\n    for (var name in renderedChildren) {\n      if (renderedChildren.hasOwnProperty(name)) {\n        var renderedChild = renderedChildren[name];\n        ReactReconciler.unmountComponent(renderedChild, safely);\n      }\n    }\n  }\n\n};\n\nmodule.exports = ReactChildReconciler;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactChildReconciler.js\n// module id = 92\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar DOMChildrenOperations = require('./DOMChildrenOperations');\nvar ReactDOMIDOperations = require('./ReactDOMIDOperations');\n\n/**\n * Abstracts away all functionality of the reconciler that requires knowledge of\n * the browser context. TODO: These callers should be refactored to avoid the\n * need for this injection.\n */\nvar ReactComponentBrowserEnvironment = {\n\n  processChildrenUpdates: ReactDOMIDOperations.dangerouslyProcessChildrenUpdates,\n\n  replaceNodeWithMarkup: DOMChildrenOperations.dangerouslyReplaceNodeWithMarkup\n\n};\n\nmodule.exports = ReactComponentBrowserEnvironment;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactComponentBrowserEnvironment.js\n// module id = 93\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant'),\n    _assign = require('object-assign');\n\nvar React = require('react/lib/React');\nvar ReactComponentEnvironment = require('./ReactComponentEnvironment');\nvar ReactCurrentOwner = require('react/lib/ReactCurrentOwner');\nvar ReactErrorUtils = require('./ReactErrorUtils');\nvar ReactInstanceMap = require('./ReactInstanceMap');\nvar ReactInstrumentation = require('./ReactInstrumentation');\nvar ReactNodeTypes = require('./ReactNodeTypes');\nvar ReactReconciler = require('./ReactReconciler');\n\nif (process.env.NODE_ENV !== 'production') {\n  var checkReactTypeSpec = require('./checkReactTypeSpec');\n}\n\nvar emptyObject = require('fbjs/lib/emptyObject');\nvar invariant = require('fbjs/lib/invariant');\nvar shallowEqual = require('fbjs/lib/shallowEqual');\nvar shouldUpdateReactComponent = require('./shouldUpdateReactComponent');\nvar warning = require('fbjs/lib/warning');\n\nvar CompositeTypes = {\n  ImpureClass: 0,\n  PureClass: 1,\n  StatelessFunctional: 2\n};\n\nfunction StatelessComponent(Component) {}\nStatelessComponent.prototype.render = function () {\n  var Component = ReactInstanceMap.get(this)._currentElement.type;\n  var element = Component(this.props, this.context, this.updater);\n  warnIfInvalidElement(Component, element);\n  return element;\n};\n\nfunction warnIfInvalidElement(Component, element) {\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== 'production' ? warning(element === null || element === false || React.isValidElement(element), '%s(...): A valid React element (or null) must be returned. You may have ' + 'returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : void 0;\n    process.env.NODE_ENV !== 'production' ? warning(!Component.childContextTypes, '%s(...): childContextTypes cannot be defined on a functional component.', Component.displayName || Component.name || 'Component') : void 0;\n  }\n}\n\nfunction shouldConstruct(Component) {\n  return !!(Component.prototype && Component.prototype.isReactComponent);\n}\n\nfunction isPureComponent(Component) {\n  return !!(Component.prototype && Component.prototype.isPureReactComponent);\n}\n\n// Separated into a function to contain deoptimizations caused by try/finally.\nfunction measureLifeCyclePerf(fn, debugID, timerType) {\n  if (debugID === 0) {\n    // Top-level wrappers (see ReactMount) and empty components (see\n    // ReactDOMEmptyComponent) are invisible to hooks and devtools.\n    // Both are implementation details that should go away in the future.\n    return fn();\n  }\n\n  ReactInstrumentation.debugTool.onBeginLifeCycleTimer(debugID, timerType);\n  try {\n    return fn();\n  } finally {\n    ReactInstrumentation.debugTool.onEndLifeCycleTimer(debugID, timerType);\n  }\n}\n\n/**\n * ------------------ The Life-Cycle of a Composite Component ------------------\n *\n * - constructor: Initialization of state. The instance is now retained.\n *   - componentWillMount\n *   - render\n *   - [children's constructors]\n *     - [children's componentWillMount and render]\n *     - [children's componentDidMount]\n *     - componentDidMount\n *\n *       Update Phases:\n *       - componentWillReceiveProps (only called if parent updated)\n *       - shouldComponentUpdate\n *         - componentWillUpdate\n *           - render\n *           - [children's constructors or receive props phases]\n *         - componentDidUpdate\n *\n *     - componentWillUnmount\n *     - [children's componentWillUnmount]\n *   - [children destroyed]\n * - (destroyed): The instance is now blank, released by React and ready for GC.\n *\n * -----------------------------------------------------------------------------\n */\n\n/**\n * An incrementing ID assigned to each component when it is mounted. This is\n * used to enforce the order in which `ReactUpdates` updates dirty components.\n *\n * @private\n */\nvar nextMountID = 1;\n\n/**\n * @lends {ReactCompositeComponent.prototype}\n */\nvar ReactCompositeComponent = {\n\n  /**\n   * Base constructor for all composite component.\n   *\n   * @param {ReactElement} element\n   * @final\n   * @internal\n   */\n  construct: function (element) {\n    this._currentElement = element;\n    this._rootNodeID = 0;\n    this._compositeType = null;\n    this._instance = null;\n    this._hostParent = null;\n    this._hostContainerInfo = null;\n\n    // See ReactUpdateQueue\n    this._updateBatchNumber = null;\n    this._pendingElement = null;\n    this._pendingStateQueue = null;\n    this._pendingReplaceState = false;\n    this._pendingForceUpdate = false;\n\n    this._renderedNodeType = null;\n    this._renderedComponent = null;\n    this._context = null;\n    this._mountOrder = 0;\n    this._topLevelWrapper = null;\n\n    // See ReactUpdates and ReactUpdateQueue.\n    this._pendingCallbacks = null;\n\n    // ComponentWillUnmount shall only be called once\n    this._calledComponentWillUnmount = false;\n\n    if (process.env.NODE_ENV !== 'production') {\n      this._warnedAboutRefsInRender = false;\n    }\n  },\n\n  /**\n   * Initializes the component, renders markup, and registers event listeners.\n   *\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n   * @param {?object} hostParent\n   * @param {?object} hostContainerInfo\n   * @param {?object} context\n   * @return {?string} Rendered markup to be inserted into the DOM.\n   * @final\n   * @internal\n   */\n  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {\n    var _this = this;\n\n    this._context = context;\n    this._mountOrder = nextMountID++;\n    this._hostParent = hostParent;\n    this._hostContainerInfo = hostContainerInfo;\n\n    var publicProps = this._currentElement.props;\n    var publicContext = this._processContext(context);\n\n    var Component = this._currentElement.type;\n\n    var updateQueue = transaction.getUpdateQueue();\n\n    // Initialize the public class\n    var doConstruct = shouldConstruct(Component);\n    var inst = this._constructComponent(doConstruct, publicProps, publicContext, updateQueue);\n    var renderedElement;\n\n    // Support functional components\n    if (!doConstruct && (inst == null || inst.render == null)) {\n      renderedElement = inst;\n      warnIfInvalidElement(Component, renderedElement);\n      !(inst === null || inst === false || React.isValidElement(inst)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s(...): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : _prodInvariant('105', Component.displayName || Component.name || 'Component') : void 0;\n      inst = new StatelessComponent(Component);\n      this._compositeType = CompositeTypes.StatelessFunctional;\n    } else {\n      if (isPureComponent(Component)) {\n        this._compositeType = CompositeTypes.PureClass;\n      } else {\n        this._compositeType = CompositeTypes.ImpureClass;\n      }\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      // This will throw later in _renderValidatedComponent, but add an early\n      // warning now to help debugging\n      if (inst.render == null) {\n        process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`.', Component.displayName || Component.name || 'Component') : void 0;\n      }\n\n      var propsMutated = inst.props !== publicProps;\n      var componentName = Component.displayName || Component.name || 'Component';\n\n      process.env.NODE_ENV !== 'production' ? warning(inst.props === undefined || !propsMutated, '%s(...): When calling super() in `%s`, make sure to pass ' + 'up the same props that your component\\'s constructor was passed.', componentName, componentName) : void 0;\n    }\n\n    // These should be set up in the constructor, but as a convenience for\n    // simpler class abstractions, we set them up after the fact.\n    inst.props = publicProps;\n    inst.context = publicContext;\n    inst.refs = emptyObject;\n    inst.updater = updateQueue;\n\n    this._instance = inst;\n\n    // Store a reference from the instance back to the internal representation\n    ReactInstanceMap.set(inst, this);\n\n    if (process.env.NODE_ENV !== 'production') {\n      // Since plain JS classes are defined without any special initialization\n      // logic, we can not catch common errors early. Therefore, we have to\n      // catch them here, at initialization time, instead.\n      process.env.NODE_ENV !== 'production' ? warning(!inst.getInitialState || inst.getInitialState.isReactClassApproved || inst.state, 'getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', this.getName() || 'a component') : void 0;\n      process.env.NODE_ENV !== 'production' ? warning(!inst.getDefaultProps || inst.getDefaultProps.isReactClassApproved, 'getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', this.getName() || 'a component') : void 0;\n      process.env.NODE_ENV !== 'production' ? warning(!inst.propTypes, 'propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', this.getName() || 'a component') : void 0;\n      process.env.NODE_ENV !== 'production' ? warning(!inst.contextTypes, 'contextTypes was defined as an instance property on %s. Use a ' + 'static property to define contextTypes instead.', this.getName() || 'a component') : void 0;\n      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentShouldUpdate !== 'function', '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', this.getName() || 'A component') : void 0;\n      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentDidUnmount !== 'function', '%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', this.getName() || 'A component') : void 0;\n      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentWillRecieveProps !== 'function', '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', this.getName() || 'A component') : void 0;\n    }\n\n    var initialState = inst.state;\n    if (initialState === undefined) {\n      inst.state = initialState = null;\n    }\n    !(typeof initialState === 'object' && !Array.isArray(initialState)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.state: must be set to an object or null', this.getName() || 'ReactCompositeComponent') : _prodInvariant('106', this.getName() || 'ReactCompositeComponent') : void 0;\n\n    this._pendingStateQueue = null;\n    this._pendingReplaceState = false;\n    this._pendingForceUpdate = false;\n\n    var markup;\n    if (inst.unstable_handleError) {\n      markup = this.performInitialMountWithErrorHandling(renderedElement, hostParent, hostContainerInfo, transaction, context);\n    } else {\n      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);\n    }\n\n    if (inst.componentDidMount) {\n      if (process.env.NODE_ENV !== 'production') {\n        transaction.getReactMountReady().enqueue(function () {\n          measureLifeCyclePerf(function () {\n            return inst.componentDidMount();\n          }, _this._debugID, 'componentDidMount');\n        });\n      } else {\n        transaction.getReactMountReady().enqueue(inst.componentDidMount, inst);\n      }\n    }\n\n    return markup;\n  },\n\n  _constructComponent: function (doConstruct, publicProps, publicContext, updateQueue) {\n    if (process.env.NODE_ENV !== 'production') {\n      ReactCurrentOwner.current = this;\n      try {\n        return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue);\n      } finally {\n        ReactCurrentOwner.current = null;\n      }\n    } else {\n      return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue);\n    }\n  },\n\n  _constructComponentWithoutOwner: function (doConstruct, publicProps, publicContext, updateQueue) {\n    var Component = this._currentElement.type;\n\n    if (doConstruct) {\n      if (process.env.NODE_ENV !== 'production') {\n        return measureLifeCyclePerf(function () {\n          return new Component(publicProps, publicContext, updateQueue);\n        }, this._debugID, 'ctor');\n      } else {\n        return new Component(publicProps, publicContext, updateQueue);\n      }\n    }\n\n    // This can still be an instance in case of factory components\n    // but we'll count this as time spent rendering as the more common case.\n    if (process.env.NODE_ENV !== 'production') {\n      return measureLifeCyclePerf(function () {\n        return Component(publicProps, publicContext, updateQueue);\n      }, this._debugID, 'render');\n    } else {\n      return Component(publicProps, publicContext, updateQueue);\n    }\n  },\n\n  performInitialMountWithErrorHandling: function (renderedElement, hostParent, hostContainerInfo, transaction, context) {\n    var markup;\n    var checkpoint = transaction.checkpoint();\n    try {\n      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);\n    } catch (e) {\n      // Roll back to checkpoint, handle error (which may add items to the transaction), and take a new checkpoint\n      transaction.rollback(checkpoint);\n      this._instance.unstable_handleError(e);\n      if (this._pendingStateQueue) {\n        this._instance.state = this._processPendingState(this._instance.props, this._instance.context);\n      }\n      checkpoint = transaction.checkpoint();\n\n      this._renderedComponent.unmountComponent(true);\n      transaction.rollback(checkpoint);\n\n      // Try again - we've informed the component about the error, so they can render an error message this time.\n      // If this throws again, the error will bubble up (and can be caught by a higher error boundary).\n      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);\n    }\n    return markup;\n  },\n\n  performInitialMount: function (renderedElement, hostParent, hostContainerInfo, transaction, context) {\n    var inst = this._instance;\n\n    var debugID = 0;\n    if (process.env.NODE_ENV !== 'production') {\n      debugID = this._debugID;\n    }\n\n    if (inst.componentWillMount) {\n      if (process.env.NODE_ENV !== 'production') {\n        measureLifeCyclePerf(function () {\n          return inst.componentWillMount();\n        }, debugID, 'componentWillMount');\n      } else {\n        inst.componentWillMount();\n      }\n      // When mounting, calls to `setState` by `componentWillMount` will set\n      // `this._pendingStateQueue` without triggering a re-render.\n      if (this._pendingStateQueue) {\n        inst.state = this._processPendingState(inst.props, inst.context);\n      }\n    }\n\n    // If not a stateless component, we now render\n    if (renderedElement === undefined) {\n      renderedElement = this._renderValidatedComponent();\n    }\n\n    var nodeType = ReactNodeTypes.getType(renderedElement);\n    this._renderedNodeType = nodeType;\n    var child = this._instantiateReactComponent(renderedElement, nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */\n    );\n    this._renderedComponent = child;\n\n    var markup = ReactReconciler.mountComponent(child, transaction, hostParent, hostContainerInfo, this._processChildContext(context), debugID);\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (debugID !== 0) {\n        var childDebugIDs = child._debugID !== 0 ? [child._debugID] : [];\n        ReactInstrumentation.debugTool.onSetChildren(debugID, childDebugIDs);\n      }\n    }\n\n    return markup;\n  },\n\n  getHostNode: function () {\n    return ReactReconciler.getHostNode(this._renderedComponent);\n  },\n\n  /**\n   * Releases any resources allocated by `mountComponent`.\n   *\n   * @final\n   * @internal\n   */\n  unmountComponent: function (safely) {\n    if (!this._renderedComponent) {\n      return;\n    }\n\n    var inst = this._instance;\n\n    if (inst.componentWillUnmount && !inst._calledComponentWillUnmount) {\n      inst._calledComponentWillUnmount = true;\n\n      if (safely) {\n        var name = this.getName() + '.componentWillUnmount()';\n        ReactErrorUtils.invokeGuardedCallback(name, inst.componentWillUnmount.bind(inst));\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          measureLifeCyclePerf(function () {\n            return inst.componentWillUnmount();\n          }, this._debugID, 'componentWillUnmount');\n        } else {\n          inst.componentWillUnmount();\n        }\n      }\n    }\n\n    if (this._renderedComponent) {\n      ReactReconciler.unmountComponent(this._renderedComponent, safely);\n      this._renderedNodeType = null;\n      this._renderedComponent = null;\n      this._instance = null;\n    }\n\n    // Reset pending fields\n    // Even if this component is scheduled for another update in ReactUpdates,\n    // it would still be ignored because these fields are reset.\n    this._pendingStateQueue = null;\n    this._pendingReplaceState = false;\n    this._pendingForceUpdate = false;\n    this._pendingCallbacks = null;\n    this._pendingElement = null;\n\n    // These fields do not really need to be reset since this object is no\n    // longer accessible.\n    this._context = null;\n    this._rootNodeID = 0;\n    this._topLevelWrapper = null;\n\n    // Delete the reference from the instance to this internal representation\n    // which allow the internals to be properly cleaned up even if the user\n    // leaks a reference to the public instance.\n    ReactInstanceMap.remove(inst);\n\n    // Some existing components rely on inst.props even after they've been\n    // destroyed (in event handlers).\n    // TODO: inst.props = null;\n    // TODO: inst.state = null;\n    // TODO: inst.context = null;\n  },\n\n  /**\n   * Filters the context object to only contain keys specified in\n   * `contextTypes`\n   *\n   * @param {object} context\n   * @return {?object}\n   * @private\n   */\n  _maskContext: function (context) {\n    var Component = this._currentElement.type;\n    var contextTypes = Component.contextTypes;\n    if (!contextTypes) {\n      return emptyObject;\n    }\n    var maskedContext = {};\n    for (var contextName in contextTypes) {\n      maskedContext[contextName] = context[contextName];\n    }\n    return maskedContext;\n  },\n\n  /**\n   * Filters the context object to only contain keys specified in\n   * `contextTypes`, and asserts that they are valid.\n   *\n   * @param {object} context\n   * @return {?object}\n   * @private\n   */\n  _processContext: function (context) {\n    var maskedContext = this._maskContext(context);\n    if (process.env.NODE_ENV !== 'production') {\n      var Component = this._currentElement.type;\n      if (Component.contextTypes) {\n        this._checkContextTypes(Component.contextTypes, maskedContext, 'context');\n      }\n    }\n    return maskedContext;\n  },\n\n  /**\n   * @param {object} currentContext\n   * @return {object}\n   * @private\n   */\n  _processChildContext: function (currentContext) {\n    var Component = this._currentElement.type;\n    var inst = this._instance;\n    var childContext;\n\n    if (inst.getChildContext) {\n      if (process.env.NODE_ENV !== 'production') {\n        ReactInstrumentation.debugTool.onBeginProcessingChildContext();\n        try {\n          childContext = inst.getChildContext();\n        } finally {\n          ReactInstrumentation.debugTool.onEndProcessingChildContext();\n        }\n      } else {\n        childContext = inst.getChildContext();\n      }\n    }\n\n    if (childContext) {\n      !(typeof Component.childContextTypes === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().', this.getName() || 'ReactCompositeComponent') : _prodInvariant('107', this.getName() || 'ReactCompositeComponent') : void 0;\n      if (process.env.NODE_ENV !== 'production') {\n        this._checkContextTypes(Component.childContextTypes, childContext, 'child context');\n      }\n      for (var name in childContext) {\n        !(name in Component.childContextTypes) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getChildContext(): key \"%s\" is not defined in childContextTypes.', this.getName() || 'ReactCompositeComponent', name) : _prodInvariant('108', this.getName() || 'ReactCompositeComponent', name) : void 0;\n      }\n      return _assign({}, currentContext, childContext);\n    }\n    return currentContext;\n  },\n\n  /**\n   * Assert that the context types are valid\n   *\n   * @param {object} typeSpecs Map of context field to a ReactPropType\n   * @param {object} values Runtime values that need to be type-checked\n   * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n   * @private\n   */\n  _checkContextTypes: function (typeSpecs, values, location) {\n    if (process.env.NODE_ENV !== 'production') {\n      checkReactTypeSpec(typeSpecs, values, location, this.getName(), null, this._debugID);\n    }\n  },\n\n  receiveComponent: function (nextElement, transaction, nextContext) {\n    var prevElement = this._currentElement;\n    var prevContext = this._context;\n\n    this._pendingElement = null;\n\n    this.updateComponent(transaction, prevElement, nextElement, prevContext, nextContext);\n  },\n\n  /**\n   * If any of `_pendingElement`, `_pendingStateQueue`, or `_pendingForceUpdate`\n   * is set, update the component.\n   *\n   * @param {ReactReconcileTransaction} transaction\n   * @internal\n   */\n  performUpdateIfNecessary: function (transaction) {\n    if (this._pendingElement != null) {\n      ReactReconciler.receiveComponent(this, this._pendingElement, transaction, this._context);\n    } else if (this._pendingStateQueue !== null || this._pendingForceUpdate) {\n      this.updateComponent(transaction, this._currentElement, this._currentElement, this._context, this._context);\n    } else {\n      this._updateBatchNumber = null;\n    }\n  },\n\n  /**\n   * Perform an update to a mounted component. The componentWillReceiveProps and\n   * shouldComponentUpdate methods are called, then (assuming the update isn't\n   * skipped) the remaining update lifecycle methods are called and the DOM\n   * representation is updated.\n   *\n   * By default, this implements React's rendering and reconciliation algorithm.\n   * Sophisticated clients may wish to override this.\n   *\n   * @param {ReactReconcileTransaction} transaction\n   * @param {ReactElement} prevParentElement\n   * @param {ReactElement} nextParentElement\n   * @internal\n   * @overridable\n   */\n  updateComponent: function (transaction, prevParentElement, nextParentElement, prevUnmaskedContext, nextUnmaskedContext) {\n    var inst = this._instance;\n    !(inst != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Attempted to update component `%s` that has already been unmounted (or failed to mount).', this.getName() || 'ReactCompositeComponent') : _prodInvariant('136', this.getName() || 'ReactCompositeComponent') : void 0;\n\n    var willReceive = false;\n    var nextContext;\n\n    // Determine if the context has changed or not\n    if (this._context === nextUnmaskedContext) {\n      nextContext = inst.context;\n    } else {\n      nextContext = this._processContext(nextUnmaskedContext);\n      willReceive = true;\n    }\n\n    var prevProps = prevParentElement.props;\n    var nextProps = nextParentElement.props;\n\n    // Not a simple state update but a props update\n    if (prevParentElement !== nextParentElement) {\n      willReceive = true;\n    }\n\n    // An update here will schedule an update but immediately set\n    // _pendingStateQueue which will ensure that any state updates gets\n    // immediately reconciled instead of waiting for the next batch.\n    if (willReceive && inst.componentWillReceiveProps) {\n      if (process.env.NODE_ENV !== 'production') {\n        measureLifeCyclePerf(function () {\n          return inst.componentWillReceiveProps(nextProps, nextContext);\n        }, this._debugID, 'componentWillReceiveProps');\n      } else {\n        inst.componentWillReceiveProps(nextProps, nextContext);\n      }\n    }\n\n    var nextState = this._processPendingState(nextProps, nextContext);\n    var shouldUpdate = true;\n\n    if (!this._pendingForceUpdate) {\n      if (inst.shouldComponentUpdate) {\n        if (process.env.NODE_ENV !== 'production') {\n          shouldUpdate = measureLifeCyclePerf(function () {\n            return inst.shouldComponentUpdate(nextProps, nextState, nextContext);\n          }, this._debugID, 'shouldComponentUpdate');\n        } else {\n          shouldUpdate = inst.shouldComponentUpdate(nextProps, nextState, nextContext);\n        }\n      } else {\n        if (this._compositeType === CompositeTypes.PureClass) {\n          shouldUpdate = !shallowEqual(prevProps, nextProps) || !shallowEqual(inst.state, nextState);\n        }\n      }\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      process.env.NODE_ENV !== 'production' ? warning(shouldUpdate !== undefined, '%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', this.getName() || 'ReactCompositeComponent') : void 0;\n    }\n\n    this._updateBatchNumber = null;\n    if (shouldUpdate) {\n      this._pendingForceUpdate = false;\n      // Will set `this.props`, `this.state` and `this.context`.\n      this._performComponentUpdate(nextParentElement, nextProps, nextState, nextContext, transaction, nextUnmaskedContext);\n    } else {\n      // If it's determined that a component should not update, we still want\n      // to set props and state but we shortcut the rest of the update.\n      this._currentElement = nextParentElement;\n      this._context = nextUnmaskedContext;\n      inst.props = nextProps;\n      inst.state = nextState;\n      inst.context = nextContext;\n    }\n  },\n\n  _processPendingState: function (props, context) {\n    var inst = this._instance;\n    var queue = this._pendingStateQueue;\n    var replace = this._pendingReplaceState;\n    this._pendingReplaceState = false;\n    this._pendingStateQueue = null;\n\n    if (!queue) {\n      return inst.state;\n    }\n\n    if (replace && queue.length === 1) {\n      return queue[0];\n    }\n\n    var nextState = _assign({}, replace ? queue[0] : inst.state);\n    for (var i = replace ? 1 : 0; i < queue.length; i++) {\n      var partial = queue[i];\n      _assign(nextState, typeof partial === 'function' ? partial.call(inst, nextState, props, context) : partial);\n    }\n\n    return nextState;\n  },\n\n  /**\n   * Merges new props and state, notifies delegate methods of update and\n   * performs update.\n   *\n   * @param {ReactElement} nextElement Next element\n   * @param {object} nextProps Next public object to set as properties.\n   * @param {?object} nextState Next object to set as state.\n   * @param {?object} nextContext Next public object to set as context.\n   * @param {ReactReconcileTransaction} transaction\n   * @param {?object} unmaskedContext\n   * @private\n   */\n  _performComponentUpdate: function (nextElement, nextProps, nextState, nextContext, transaction, unmaskedContext) {\n    var _this2 = this;\n\n    var inst = this._instance;\n\n    var hasComponentDidUpdate = Boolean(inst.componentDidUpdate);\n    var prevProps;\n    var prevState;\n    var prevContext;\n    if (hasComponentDidUpdate) {\n      prevProps = inst.props;\n      prevState = inst.state;\n      prevContext = inst.context;\n    }\n\n    if (inst.componentWillUpdate) {\n      if (process.env.NODE_ENV !== 'production') {\n        measureLifeCyclePerf(function () {\n          return inst.componentWillUpdate(nextProps, nextState, nextContext);\n        }, this._debugID, 'componentWillUpdate');\n      } else {\n        inst.componentWillUpdate(nextProps, nextState, nextContext);\n      }\n    }\n\n    this._currentElement = nextElement;\n    this._context = unmaskedContext;\n    inst.props = nextProps;\n    inst.state = nextState;\n    inst.context = nextContext;\n\n    this._updateRenderedComponent(transaction, unmaskedContext);\n\n    if (hasComponentDidUpdate) {\n      if (process.env.NODE_ENV !== 'production') {\n        transaction.getReactMountReady().enqueue(function () {\n          measureLifeCyclePerf(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), _this2._debugID, 'componentDidUpdate');\n        });\n      } else {\n        transaction.getReactMountReady().enqueue(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), inst);\n      }\n    }\n  },\n\n  /**\n   * Call the component's `render` method and update the DOM accordingly.\n   *\n   * @param {ReactReconcileTransaction} transaction\n   * @internal\n   */\n  _updateRenderedComponent: function (transaction, context) {\n    var prevComponentInstance = this._renderedComponent;\n    var prevRenderedElement = prevComponentInstance._currentElement;\n    var nextRenderedElement = this._renderValidatedComponent();\n\n    var debugID = 0;\n    if (process.env.NODE_ENV !== 'production') {\n      debugID = this._debugID;\n    }\n\n    if (shouldUpdateReactComponent(prevRenderedElement, nextRenderedElement)) {\n      ReactReconciler.receiveComponent(prevComponentInstance, nextRenderedElement, transaction, this._processChildContext(context));\n    } else {\n      var oldHostNode = ReactReconciler.getHostNode(prevComponentInstance);\n      ReactReconciler.unmountComponent(prevComponentInstance, false);\n\n      var nodeType = ReactNodeTypes.getType(nextRenderedElement);\n      this._renderedNodeType = nodeType;\n      var child = this._instantiateReactComponent(nextRenderedElement, nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */\n      );\n      this._renderedComponent = child;\n\n      var nextMarkup = ReactReconciler.mountComponent(child, transaction, this._hostParent, this._hostContainerInfo, this._processChildContext(context), debugID);\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (debugID !== 0) {\n          var childDebugIDs = child._debugID !== 0 ? [child._debugID] : [];\n          ReactInstrumentation.debugTool.onSetChildren(debugID, childDebugIDs);\n        }\n      }\n\n      this._replaceNodeWithMarkup(oldHostNode, nextMarkup, prevComponentInstance);\n    }\n  },\n\n  /**\n   * Overridden in shallow rendering.\n   *\n   * @protected\n   */\n  _replaceNodeWithMarkup: function (oldHostNode, nextMarkup, prevInstance) {\n    ReactComponentEnvironment.replaceNodeWithMarkup(oldHostNode, nextMarkup, prevInstance);\n  },\n\n  /**\n   * @protected\n   */\n  _renderValidatedComponentWithoutOwnerOrContext: function () {\n    var inst = this._instance;\n    var renderedElement;\n\n    if (process.env.NODE_ENV !== 'production') {\n      renderedElement = measureLifeCyclePerf(function () {\n        return inst.render();\n      }, this._debugID, 'render');\n    } else {\n      renderedElement = inst.render();\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      // We allow auto-mocks to proceed as if they're returning null.\n      if (renderedElement === undefined && inst.render._isMockFunction) {\n        // This is probably bad practice. Consider warning here and\n        // deprecating this convenience.\n        renderedElement = null;\n      }\n    }\n\n    return renderedElement;\n  },\n\n  /**\n   * @private\n   */\n  _renderValidatedComponent: function () {\n    var renderedElement;\n    if (process.env.NODE_ENV !== 'production' || this._compositeType !== CompositeTypes.StatelessFunctional) {\n      ReactCurrentOwner.current = this;\n      try {\n        renderedElement = this._renderValidatedComponentWithoutOwnerOrContext();\n      } finally {\n        ReactCurrentOwner.current = null;\n      }\n    } else {\n      renderedElement = this._renderValidatedComponentWithoutOwnerOrContext();\n    }\n    !(\n    // TODO: An `isValidNode` function would probably be more appropriate\n    renderedElement === null || renderedElement === false || React.isValidElement(renderedElement)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.render(): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', this.getName() || 'ReactCompositeComponent') : _prodInvariant('109', this.getName() || 'ReactCompositeComponent') : void 0;\n\n    return renderedElement;\n  },\n\n  /**\n   * Lazily allocates the refs object and stores `component` as `ref`.\n   *\n   * @param {string} ref Reference name.\n   * @param {component} component Component to store as `ref`.\n   * @final\n   * @private\n   */\n  attachRef: function (ref, component) {\n    var inst = this.getPublicInstance();\n    !(inst != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Stateless function components cannot have refs.') : _prodInvariant('110') : void 0;\n    var publicComponentInstance = component.getPublicInstance();\n    if (process.env.NODE_ENV !== 'production') {\n      var componentName = component && component.getName ? component.getName() : 'a component';\n      process.env.NODE_ENV !== 'production' ? warning(publicComponentInstance != null || component._compositeType !== CompositeTypes.StatelessFunctional, 'Stateless function components cannot be given refs ' + '(See ref \"%s\" in %s created by %s). ' + 'Attempts to access this ref will fail.', ref, componentName, this.getName()) : void 0;\n    }\n    var refs = inst.refs === emptyObject ? inst.refs = {} : inst.refs;\n    refs[ref] = publicComponentInstance;\n  },\n\n  /**\n   * Detaches a reference name.\n   *\n   * @param {string} ref Name to dereference.\n   * @final\n   * @private\n   */\n  detachRef: function (ref) {\n    var refs = this.getPublicInstance().refs;\n    delete refs[ref];\n  },\n\n  /**\n   * Get a text description of the component that can be used to identify it\n   * in error messages.\n   * @return {string} The name or null.\n   * @internal\n   */\n  getName: function () {\n    var type = this._currentElement.type;\n    var constructor = this._instance && this._instance.constructor;\n    return type.displayName || constructor && constructor.displayName || type.name || constructor && constructor.name || null;\n  },\n\n  /**\n   * Get the publicly accessible representation of this component - i.e. what\n   * is exposed by refs and returned by render. Can be null for stateless\n   * components.\n   *\n   * @return {ReactComponent} the public component instance.\n   * @internal\n   */\n  getPublicInstance: function () {\n    var inst = this._instance;\n    if (this._compositeType === CompositeTypes.StatelessFunctional) {\n      return null;\n    }\n    return inst;\n  },\n\n  // Stub\n  _instantiateReactComponent: null\n\n};\n\nmodule.exports = ReactCompositeComponent;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactCompositeComponent.js\n// module id = 94\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n/* globals __REACT_DEVTOOLS_GLOBAL_HOOK__*/\n\n'use strict';\n\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar ReactDefaultInjection = require('./ReactDefaultInjection');\nvar ReactMount = require('./ReactMount');\nvar ReactReconciler = require('./ReactReconciler');\nvar ReactUpdates = require('./ReactUpdates');\nvar ReactVersion = require('./ReactVersion');\n\nvar findDOMNode = require('./findDOMNode');\nvar getHostComponentFromComposite = require('./getHostComponentFromComposite');\nvar renderSubtreeIntoContainer = require('./renderSubtreeIntoContainer');\nvar warning = require('fbjs/lib/warning');\n\nReactDefaultInjection.inject();\n\nvar ReactDOM = {\n  findDOMNode: findDOMNode,\n  render: ReactMount.render,\n  unmountComponentAtNode: ReactMount.unmountComponentAtNode,\n  version: ReactVersion,\n\n  /* eslint-disable camelcase */\n  unstable_batchedUpdates: ReactUpdates.batchedUpdates,\n  unstable_renderSubtreeIntoContainer: renderSubtreeIntoContainer\n};\n\n// Inject the runtime into a devtools global hook regardless of browser.\n// Allows for debugging when the hook is injected on the page.\nif (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject === 'function') {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.inject({\n    ComponentTree: {\n      getClosestInstanceFromNode: ReactDOMComponentTree.getClosestInstanceFromNode,\n      getNodeFromInstance: function (inst) {\n        // inst is an internal instance (but could be a composite)\n        if (inst._renderedComponent) {\n          inst = getHostComponentFromComposite(inst);\n        }\n        if (inst) {\n          return ReactDOMComponentTree.getNodeFromInstance(inst);\n        } else {\n          return null;\n        }\n      }\n    },\n    Mount: ReactMount,\n    Reconciler: ReactReconciler\n  });\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\n  if (ExecutionEnvironment.canUseDOM && window.top === window.self) {\n\n    // First check if devtools is not installed\n    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {\n      // If we're in Chrome or Firefox, provide a download link if not installed.\n      if (navigator.userAgent.indexOf('Chrome') > -1 && navigator.userAgent.indexOf('Edge') === -1 || navigator.userAgent.indexOf('Firefox') > -1) {\n        // Firefox does not have the issue with devtools loaded over file://\n        var showFileUrlMessage = window.location.protocol.indexOf('http') === -1 && navigator.userAgent.indexOf('Firefox') === -1;\n        console.debug('Download the React DevTools ' + (showFileUrlMessage ? 'and use an HTTP server (instead of a file: URL) ' : '') + 'for a better development experience: ' + 'https://fb.me/react-devtools');\n      }\n    }\n\n    var testFunc = function testFn() {};\n    process.env.NODE_ENV !== 'production' ? warning((testFunc.name || testFunc.toString()).indexOf('testFn') !== -1, 'It looks like you\\'re using a minified copy of the development build ' + 'of React. When deploying React apps to production, make sure to use ' + 'the production build which skips development warnings and is faster. ' + 'See https://fb.me/react-minification for more details.') : void 0;\n\n    // If we're in IE8, check to see if we are in compatibility mode and provide\n    // information on preventing compatibility mode\n    var ieCompatibilityMode = document.documentMode && document.documentMode < 8;\n\n    process.env.NODE_ENV !== 'production' ? warning(!ieCompatibilityMode, 'Internet Explorer is running in compatibility mode; please add the ' + 'following tag to your HTML to prevent this from happening: ' + '<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />') : void 0;\n\n    var expectedFeatures = [\n    // shims\n    Array.isArray, Array.prototype.every, Array.prototype.forEach, Array.prototype.indexOf, Array.prototype.map, Date.now, Function.prototype.bind, Object.keys, String.prototype.trim];\n\n    for (var i = 0; i < expectedFeatures.length; i++) {\n      if (!expectedFeatures[i]) {\n        process.env.NODE_ENV !== 'production' ? warning(false, 'One or more ES5 shims expected by React are not available: ' + 'https://fb.me/react-warning-polyfills') : void 0;\n        break;\n      }\n    }\n  }\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactInstrumentation = require('./ReactInstrumentation');\n  var ReactDOMUnknownPropertyHook = require('./ReactDOMUnknownPropertyHook');\n  var ReactDOMNullInputValuePropHook = require('./ReactDOMNullInputValuePropHook');\n  var ReactDOMInvalidARIAHook = require('./ReactDOMInvalidARIAHook');\n\n  ReactInstrumentation.debugTool.addHook(ReactDOMUnknownPropertyHook);\n  ReactInstrumentation.debugTool.addHook(ReactDOMNullInputValuePropHook);\n  ReactInstrumentation.debugTool.addHook(ReactDOMInvalidARIAHook);\n}\n\nmodule.exports = ReactDOM;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactDOM.js\n// module id = 95\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n/* global hasOwnProperty:true */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant'),\n    _assign = require('object-assign');\n\nvar AutoFocusUtils = require('./AutoFocusUtils');\nvar CSSPropertyOperations = require('./CSSPropertyOperations');\nvar DOMLazyTree = require('./DOMLazyTree');\nvar DOMNamespaces = require('./DOMNamespaces');\nvar DOMProperty = require('./DOMProperty');\nvar DOMPropertyOperations = require('./DOMPropertyOperations');\nvar EventPluginHub = require('./EventPluginHub');\nvar EventPluginRegistry = require('./EventPluginRegistry');\nvar ReactBrowserEventEmitter = require('./ReactBrowserEventEmitter');\nvar ReactDOMComponentFlags = require('./ReactDOMComponentFlags');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar ReactDOMInput = require('./ReactDOMInput');\nvar ReactDOMOption = require('./ReactDOMOption');\nvar ReactDOMSelect = require('./ReactDOMSelect');\nvar ReactDOMTextarea = require('./ReactDOMTextarea');\nvar ReactInstrumentation = require('./ReactInstrumentation');\nvar ReactMultiChild = require('./ReactMultiChild');\nvar ReactServerRenderingTransaction = require('./ReactServerRenderingTransaction');\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar escapeTextContentForBrowser = require('./escapeTextContentForBrowser');\nvar invariant = require('fbjs/lib/invariant');\nvar isEventSupported = require('./isEventSupported');\nvar shallowEqual = require('fbjs/lib/shallowEqual');\nvar validateDOMNesting = require('./validateDOMNesting');\nvar warning = require('fbjs/lib/warning');\n\nvar Flags = ReactDOMComponentFlags;\nvar deleteListener = EventPluginHub.deleteListener;\nvar getNode = ReactDOMComponentTree.getNodeFromInstance;\nvar listenTo = ReactBrowserEventEmitter.listenTo;\nvar registrationNameModules = EventPluginRegistry.registrationNameModules;\n\n// For quickly matching children type, to test if can be treated as content.\nvar CONTENT_TYPES = { 'string': true, 'number': true };\n\nvar STYLE = 'style';\nvar HTML = '__html';\nvar RESERVED_PROPS = {\n  children: null,\n  dangerouslySetInnerHTML: null,\n  suppressContentEditableWarning: null\n};\n\n// Node type for document fragments (Node.DOCUMENT_FRAGMENT_NODE).\nvar DOC_FRAGMENT_TYPE = 11;\n\nfunction getDeclarationErrorAddendum(internalInstance) {\n  if (internalInstance) {\n    var owner = internalInstance._currentElement._owner || null;\n    if (owner) {\n      var name = owner.getName();\n      if (name) {\n        return ' This DOM node was rendered by `' + name + '`.';\n      }\n    }\n  }\n  return '';\n}\n\nfunction friendlyStringify(obj) {\n  if (typeof obj === 'object') {\n    if (Array.isArray(obj)) {\n      return '[' + obj.map(friendlyStringify).join(', ') + ']';\n    } else {\n      var pairs = [];\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var keyEscaped = /^[a-z$_][\\w$_]*$/i.test(key) ? key : JSON.stringify(key);\n          pairs.push(keyEscaped + ': ' + friendlyStringify(obj[key]));\n        }\n      }\n      return '{' + pairs.join(', ') + '}';\n    }\n  } else if (typeof obj === 'string') {\n    return JSON.stringify(obj);\n  } else if (typeof obj === 'function') {\n    return '[function object]';\n  }\n  // Differs from JSON.stringify in that undefined because undefined and that\n  // inf and nan don't become null\n  return String(obj);\n}\n\nvar styleMutationWarning = {};\n\nfunction checkAndWarnForMutatedStyle(style1, style2, component) {\n  if (style1 == null || style2 == null) {\n    return;\n  }\n  if (shallowEqual(style1, style2)) {\n    return;\n  }\n\n  var componentName = component._tag;\n  var owner = component._currentElement._owner;\n  var ownerName;\n  if (owner) {\n    ownerName = owner.getName();\n  }\n\n  var hash = ownerName + '|' + componentName;\n\n  if (styleMutationWarning.hasOwnProperty(hash)) {\n    return;\n  }\n\n  styleMutationWarning[hash] = true;\n\n  process.env.NODE_ENV !== 'production' ? warning(false, '`%s` was passed a style object that has previously been mutated. ' + 'Mutating `style` is deprecated. Consider cloning it beforehand. Check ' + 'the `render` %s. Previous style: %s. Mutated style: %s.', componentName, owner ? 'of `' + ownerName + '`' : 'using <' + componentName + '>', friendlyStringify(style1), friendlyStringify(style2)) : void 0;\n}\n\n/**\n * @param {object} component\n * @param {?object} props\n */\nfunction assertValidProps(component, props) {\n  if (!props) {\n    return;\n  }\n  // Note the use of `==` which checks for null or undefined.\n  if (voidElementTags[component._tag]) {\n    !(props.children == null && props.dangerouslySetInnerHTML == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.%s', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : _prodInvariant('137', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : void 0;\n  }\n  if (props.dangerouslySetInnerHTML != null) {\n    !(props.children == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Can only set one of `children` or `props.dangerouslySetInnerHTML`.') : _prodInvariant('60') : void 0;\n    !(typeof props.dangerouslySetInnerHTML === 'object' && HTML in props.dangerouslySetInnerHTML) ? process.env.NODE_ENV !== 'production' ? invariant(false, '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://fb.me/react-invariant-dangerously-set-inner-html for more information.') : _prodInvariant('61') : void 0;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== 'production' ? warning(props.innerHTML == null, 'Directly setting property `innerHTML` is not permitted. ' + 'For more information, lookup documentation on `dangerouslySetInnerHTML`.') : void 0;\n    process.env.NODE_ENV !== 'production' ? warning(props.suppressContentEditableWarning || !props.contentEditable || props.children == null, 'A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.') : void 0;\n    process.env.NODE_ENV !== 'production' ? warning(props.onFocusIn == null && props.onFocusOut == null, 'React uses onFocus and onBlur instead of onFocusIn and onFocusOut. ' + 'All React events are normalized to bubble, so onFocusIn and onFocusOut ' + 'are not needed/supported by React.') : void 0;\n  }\n  !(props.style == null || typeof props.style === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + \\'em\\'}} when using JSX.%s', getDeclarationErrorAddendum(component)) : _prodInvariant('62', getDeclarationErrorAddendum(component)) : void 0;\n}\n\nfunction enqueuePutListener(inst, registrationName, listener, transaction) {\n  if (transaction instanceof ReactServerRenderingTransaction) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // IE8 has no API for event capturing and the `onScroll` event doesn't\n    // bubble.\n    process.env.NODE_ENV !== 'production' ? warning(registrationName !== 'onScroll' || isEventSupported('scroll', true), 'This browser doesn\\'t support the `onScroll` event') : void 0;\n  }\n  var containerInfo = inst._hostContainerInfo;\n  var isDocumentFragment = containerInfo._node && containerInfo._node.nodeType === DOC_FRAGMENT_TYPE;\n  var doc = isDocumentFragment ? containerInfo._node : containerInfo._ownerDocument;\n  listenTo(registrationName, doc);\n  transaction.getReactMountReady().enqueue(putListener, {\n    inst: inst,\n    registrationName: registrationName,\n    listener: listener\n  });\n}\n\nfunction putListener() {\n  var listenerToPut = this;\n  EventPluginHub.putListener(listenerToPut.inst, listenerToPut.registrationName, listenerToPut.listener);\n}\n\nfunction inputPostMount() {\n  var inst = this;\n  ReactDOMInput.postMountWrapper(inst);\n}\n\nfunction textareaPostMount() {\n  var inst = this;\n  ReactDOMTextarea.postMountWrapper(inst);\n}\n\nfunction optionPostMount() {\n  var inst = this;\n  ReactDOMOption.postMountWrapper(inst);\n}\n\nvar setAndValidateContentChildDev = emptyFunction;\nif (process.env.NODE_ENV !== 'production') {\n  setAndValidateContentChildDev = function (content) {\n    var hasExistingContent = this._contentDebugID != null;\n    var debugID = this._debugID;\n    // This ID represents the inlined child that has no backing instance:\n    var contentDebugID = -debugID;\n\n    if (content == null) {\n      if (hasExistingContent) {\n        ReactInstrumentation.debugTool.onUnmountComponent(this._contentDebugID);\n      }\n      this._contentDebugID = null;\n      return;\n    }\n\n    validateDOMNesting(null, String(content), this, this._ancestorInfo);\n    this._contentDebugID = contentDebugID;\n    if (hasExistingContent) {\n      ReactInstrumentation.debugTool.onBeforeUpdateComponent(contentDebugID, content);\n      ReactInstrumentation.debugTool.onUpdateComponent(contentDebugID);\n    } else {\n      ReactInstrumentation.debugTool.onBeforeMountComponent(contentDebugID, content, debugID);\n      ReactInstrumentation.debugTool.onMountComponent(contentDebugID);\n      ReactInstrumentation.debugTool.onSetChildren(debugID, [contentDebugID]);\n    }\n  };\n}\n\n// There are so many media events, it makes sense to just\n// maintain a list rather than create a `trapBubbledEvent` for each\nvar mediaEvents = {\n  topAbort: 'abort',\n  topCanPlay: 'canplay',\n  topCanPlayThrough: 'canplaythrough',\n  topDurationChange: 'durationchange',\n  topEmptied: 'emptied',\n  topEncrypted: 'encrypted',\n  topEnded: 'ended',\n  topError: 'error',\n  topLoadedData: 'loadeddata',\n  topLoadedMetadata: 'loadedmetadata',\n  topLoadStart: 'loadstart',\n  topPause: 'pause',\n  topPlay: 'play',\n  topPlaying: 'playing',\n  topProgress: 'progress',\n  topRateChange: 'ratechange',\n  topSeeked: 'seeked',\n  topSeeking: 'seeking',\n  topStalled: 'stalled',\n  topSuspend: 'suspend',\n  topTimeUpdate: 'timeupdate',\n  topVolumeChange: 'volumechange',\n  topWaiting: 'waiting'\n};\n\nfunction trapBubbledEventsLocal() {\n  var inst = this;\n  // If a component renders to null or if another component fatals and causes\n  // the state of the tree to be corrupted, `node` here can be null.\n  !inst._rootNodeID ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Must be mounted to trap events') : _prodInvariant('63') : void 0;\n  var node = getNode(inst);\n  !node ? process.env.NODE_ENV !== 'production' ? invariant(false, 'trapBubbledEvent(...): Requires node to be rendered.') : _prodInvariant('64') : void 0;\n\n  switch (inst._tag) {\n    case 'iframe':\n    case 'object':\n      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topLoad', 'load', node)];\n      break;\n    case 'video':\n    case 'audio':\n\n      inst._wrapperState.listeners = [];\n      // Create listener for each media event\n      for (var event in mediaEvents) {\n        if (mediaEvents.hasOwnProperty(event)) {\n          inst._wrapperState.listeners.push(ReactBrowserEventEmitter.trapBubbledEvent(event, mediaEvents[event], node));\n        }\n      }\n      break;\n    case 'source':\n      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topError', 'error', node)];\n      break;\n    case 'img':\n      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topError', 'error', node), ReactBrowserEventEmitter.trapBubbledEvent('topLoad', 'load', node)];\n      break;\n    case 'form':\n      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topReset', 'reset', node), ReactBrowserEventEmitter.trapBubbledEvent('topSubmit', 'submit', node)];\n      break;\n    case 'input':\n    case 'select':\n    case 'textarea':\n      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topInvalid', 'invalid', node)];\n      break;\n  }\n}\n\nfunction postUpdateSelectWrapper() {\n  ReactDOMSelect.postUpdateWrapper(this);\n}\n\n// For HTML, certain tags should omit their close tag. We keep a whitelist for\n// those special-case tags.\n\nvar omittedCloseTags = {\n  'area': true,\n  'base': true,\n  'br': true,\n  'col': true,\n  'embed': true,\n  'hr': true,\n  'img': true,\n  'input': true,\n  'keygen': true,\n  'link': true,\n  'meta': true,\n  'param': true,\n  'source': true,\n  'track': true,\n  'wbr': true\n};\n\nvar newlineEatingTags = {\n  'listing': true,\n  'pre': true,\n  'textarea': true\n};\n\n// For HTML, certain tags cannot have children. This has the same purpose as\n// `omittedCloseTags` except that `menuitem` should still have its closing tag.\n\nvar voidElementTags = _assign({\n  'menuitem': true\n}, omittedCloseTags);\n\n// We accept any tag to be rendered but since this gets injected into arbitrary\n// HTML, we want to make sure that it's a safe tag.\n// http://www.w3.org/TR/REC-xml/#NT-Name\n\nvar VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\\.\\-\\d]*$/; // Simplified subset\nvar validatedTagCache = {};\nvar hasOwnProperty = {}.hasOwnProperty;\n\nfunction validateDangerousTag(tag) {\n  if (!hasOwnProperty.call(validatedTagCache, tag)) {\n    !VALID_TAG_REGEX.test(tag) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Invalid tag: %s', tag) : _prodInvariant('65', tag) : void 0;\n    validatedTagCache[tag] = true;\n  }\n}\n\nfunction isCustomComponent(tagName, props) {\n  return tagName.indexOf('-') >= 0 || props.is != null;\n}\n\nvar globalIdCounter = 1;\n\n/**\n * Creates a new React class that is idempotent and capable of containing other\n * React components. It accepts event listeners and DOM properties that are\n * valid according to `DOMProperty`.\n *\n *  - Event listeners: `onClick`, `onMouseDown`, etc.\n *  - DOM properties: `className`, `name`, `title`, etc.\n *\n * The `style` property functions differently from the DOM API. It accepts an\n * object mapping of style properties to values.\n *\n * @constructor ReactDOMComponent\n * @extends ReactMultiChild\n */\nfunction ReactDOMComponent(element) {\n  var tag = element.type;\n  validateDangerousTag(tag);\n  this._currentElement = element;\n  this._tag = tag.toLowerCase();\n  this._namespaceURI = null;\n  this._renderedChildren = null;\n  this._previousStyle = null;\n  this._previousStyleCopy = null;\n  this._hostNode = null;\n  this._hostParent = null;\n  this._rootNodeID = 0;\n  this._domID = 0;\n  this._hostContainerInfo = null;\n  this._wrapperState = null;\n  this._topLevelWrapper = null;\n  this._flags = 0;\n  if (process.env.NODE_ENV !== 'production') {\n    this._ancestorInfo = null;\n    setAndValidateContentChildDev.call(this, null);\n  }\n}\n\nReactDOMComponent.displayName = 'ReactDOMComponent';\n\nReactDOMComponent.Mixin = {\n\n  /**\n   * Generates root tag markup then recurses. This method has side effects and\n   * is not idempotent.\n   *\n   * @internal\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n   * @param {?ReactDOMComponent} the parent component instance\n   * @param {?object} info about the host container\n   * @param {object} context\n   * @return {string} The computed markup.\n   */\n  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {\n    this._rootNodeID = globalIdCounter++;\n    this._domID = hostContainerInfo._idCounter++;\n    this._hostParent = hostParent;\n    this._hostContainerInfo = hostContainerInfo;\n\n    var props = this._currentElement.props;\n\n    switch (this._tag) {\n      case 'audio':\n      case 'form':\n      case 'iframe':\n      case 'img':\n      case 'link':\n      case 'object':\n      case 'source':\n      case 'video':\n        this._wrapperState = {\n          listeners: null\n        };\n        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);\n        break;\n      case 'input':\n        ReactDOMInput.mountWrapper(this, props, hostParent);\n        props = ReactDOMInput.getHostProps(this, props);\n        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);\n        break;\n      case 'option':\n        ReactDOMOption.mountWrapper(this, props, hostParent);\n        props = ReactDOMOption.getHostProps(this, props);\n        break;\n      case 'select':\n        ReactDOMSelect.mountWrapper(this, props, hostParent);\n        props = ReactDOMSelect.getHostProps(this, props);\n        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);\n        break;\n      case 'textarea':\n        ReactDOMTextarea.mountWrapper(this, props, hostParent);\n        props = ReactDOMTextarea.getHostProps(this, props);\n        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);\n        break;\n    }\n\n    assertValidProps(this, props);\n\n    // We create tags in the namespace of their parent container, except HTML\n    // tags get no namespace.\n    var namespaceURI;\n    var parentTag;\n    if (hostParent != null) {\n      namespaceURI = hostParent._namespaceURI;\n      parentTag = hostParent._tag;\n    } else if (hostContainerInfo._tag) {\n      namespaceURI = hostContainerInfo._namespaceURI;\n      parentTag = hostContainerInfo._tag;\n    }\n    if (namespaceURI == null || namespaceURI === DOMNamespaces.svg && parentTag === 'foreignobject') {\n      namespaceURI = DOMNamespaces.html;\n    }\n    if (namespaceURI === DOMNamespaces.html) {\n      if (this._tag === 'svg') {\n        namespaceURI = DOMNamespaces.svg;\n      } else if (this._tag === 'math') {\n        namespaceURI = DOMNamespaces.mathml;\n      }\n    }\n    this._namespaceURI = namespaceURI;\n\n    if (process.env.NODE_ENV !== 'production') {\n      var parentInfo;\n      if (hostParent != null) {\n        parentInfo = hostParent._ancestorInfo;\n      } else if (hostContainerInfo._tag) {\n        parentInfo = hostContainerInfo._ancestorInfo;\n      }\n      if (parentInfo) {\n        // parentInfo should always be present except for the top-level\n        // component when server rendering\n        validateDOMNesting(this._tag, null, this, parentInfo);\n      }\n      this._ancestorInfo = validateDOMNesting.updatedAncestorInfo(parentInfo, this._tag, this);\n    }\n\n    var mountImage;\n    if (transaction.useCreateElement) {\n      var ownerDocument = hostContainerInfo._ownerDocument;\n      var el;\n      if (namespaceURI === DOMNamespaces.html) {\n        if (this._tag === 'script') {\n          // Create the script via .innerHTML so its \"parser-inserted\" flag is\n          // set to true and it does not execute\n          var div = ownerDocument.createElement('div');\n          var type = this._currentElement.type;\n          div.innerHTML = '<' + type + '></' + type + '>';\n          el = div.removeChild(div.firstChild);\n        } else if (props.is) {\n          el = ownerDocument.createElement(this._currentElement.type, props.is);\n        } else {\n          // Separate else branch instead of using `props.is || undefined` above becuase of a Firefox bug.\n          // See discussion in https://github.com/facebook/react/pull/6896\n          // and discussion in https://bugzilla.mozilla.org/show_bug.cgi?id=1276240\n          el = ownerDocument.createElement(this._currentElement.type);\n        }\n      } else {\n        el = ownerDocument.createElementNS(namespaceURI, this._currentElement.type);\n      }\n      ReactDOMComponentTree.precacheNode(this, el);\n      this._flags |= Flags.hasCachedChildNodes;\n      if (!this._hostParent) {\n        DOMPropertyOperations.setAttributeForRoot(el);\n      }\n      this._updateDOMProperties(null, props, transaction);\n      var lazyTree = DOMLazyTree(el);\n      this._createInitialChildren(transaction, props, context, lazyTree);\n      mountImage = lazyTree;\n    } else {\n      var tagOpen = this._createOpenTagMarkupAndPutListeners(transaction, props);\n      var tagContent = this._createContentMarkup(transaction, props, context);\n      if (!tagContent && omittedCloseTags[this._tag]) {\n        mountImage = tagOpen + '/>';\n      } else {\n        mountImage = tagOpen + '>' + tagContent + '</' + this._currentElement.type + '>';\n      }\n    }\n\n    switch (this._tag) {\n      case 'input':\n        transaction.getReactMountReady().enqueue(inputPostMount, this);\n        if (props.autoFocus) {\n          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);\n        }\n        break;\n      case 'textarea':\n        transaction.getReactMountReady().enqueue(textareaPostMount, this);\n        if (props.autoFocus) {\n          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);\n        }\n        break;\n      case 'select':\n        if (props.autoFocus) {\n          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);\n        }\n        break;\n      case 'button':\n        if (props.autoFocus) {\n          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);\n        }\n        break;\n      case 'option':\n        transaction.getReactMountReady().enqueue(optionPostMount, this);\n        break;\n    }\n\n    return mountImage;\n  },\n\n  /**\n   * Creates markup for the open tag and all attributes.\n   *\n   * This method has side effects because events get registered.\n   *\n   * Iterating over object properties is faster than iterating over arrays.\n   * @see http://jsperf.com/obj-vs-arr-iteration\n   *\n   * @private\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n   * @param {object} props\n   * @return {string} Markup of opening tag.\n   */\n  _createOpenTagMarkupAndPutListeners: function (transaction, props) {\n    var ret = '<' + this._currentElement.type;\n\n    for (var propKey in props) {\n      if (!props.hasOwnProperty(propKey)) {\n        continue;\n      }\n      var propValue = props[propKey];\n      if (propValue == null) {\n        continue;\n      }\n      if (registrationNameModules.hasOwnProperty(propKey)) {\n        if (propValue) {\n          enqueuePutListener(this, propKey, propValue, transaction);\n        }\n      } else {\n        if (propKey === STYLE) {\n          if (propValue) {\n            if (process.env.NODE_ENV !== 'production') {\n              // See `_updateDOMProperties`. style block\n              this._previousStyle = propValue;\n            }\n            propValue = this._previousStyleCopy = _assign({}, props.style);\n          }\n          propValue = CSSPropertyOperations.createMarkupForStyles(propValue, this);\n        }\n        var markup = null;\n        if (this._tag != null && isCustomComponent(this._tag, props)) {\n          if (!RESERVED_PROPS.hasOwnProperty(propKey)) {\n            markup = DOMPropertyOperations.createMarkupForCustomAttribute(propKey, propValue);\n          }\n        } else {\n          markup = DOMPropertyOperations.createMarkupForProperty(propKey, propValue);\n        }\n        if (markup) {\n          ret += ' ' + markup;\n        }\n      }\n    }\n\n    // For static pages, no need to put React ID and checksum. Saves lots of\n    // bytes.\n    if (transaction.renderToStaticMarkup) {\n      return ret;\n    }\n\n    if (!this._hostParent) {\n      ret += ' ' + DOMPropertyOperations.createMarkupForRoot();\n    }\n    ret += ' ' + DOMPropertyOperations.createMarkupForID(this._domID);\n    return ret;\n  },\n\n  /**\n   * Creates markup for the content between the tags.\n   *\n   * @private\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n   * @param {object} props\n   * @param {object} context\n   * @return {string} Content markup.\n   */\n  _createContentMarkup: function (transaction, props, context) {\n    var ret = '';\n\n    // Intentional use of != to avoid catching zero/false.\n    var innerHTML = props.dangerouslySetInnerHTML;\n    if (innerHTML != null) {\n      if (innerHTML.__html != null) {\n        ret = innerHTML.__html;\n      }\n    } else {\n      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;\n      var childrenToUse = contentToUse != null ? null : props.children;\n      if (contentToUse != null) {\n        // TODO: Validate that text is allowed as a child of this node\n        ret = escapeTextContentForBrowser(contentToUse);\n        if (process.env.NODE_ENV !== 'production') {\n          setAndValidateContentChildDev.call(this, contentToUse);\n        }\n      } else if (childrenToUse != null) {\n        var mountImages = this.mountChildren(childrenToUse, transaction, context);\n        ret = mountImages.join('');\n      }\n    }\n    if (newlineEatingTags[this._tag] && ret.charAt(0) === '\\n') {\n      // text/html ignores the first character in these tags if it's a newline\n      // Prefer to break application/xml over text/html (for now) by adding\n      // a newline specifically to get eaten by the parser. (Alternately for\n      // textareas, replacing \"^\\n\" with \"\\r\\n\" doesn't get eaten, and the first\n      // \\r is normalized out by HTMLTextAreaElement#value.)\n      // See: <http://www.w3.org/TR/html-polyglot/#newlines-in-textarea-and-pre>\n      // See: <http://www.w3.org/TR/html5/syntax.html#element-restrictions>\n      // See: <http://www.w3.org/TR/html5/syntax.html#newlines>\n      // See: Parsing of \"textarea\" \"listing\" and \"pre\" elements\n      //  from <http://www.w3.org/TR/html5/syntax.html#parsing-main-inbody>\n      return '\\n' + ret;\n    } else {\n      return ret;\n    }\n  },\n\n  _createInitialChildren: function (transaction, props, context, lazyTree) {\n    // Intentional use of != to avoid catching zero/false.\n    var innerHTML = props.dangerouslySetInnerHTML;\n    if (innerHTML != null) {\n      if (innerHTML.__html != null) {\n        DOMLazyTree.queueHTML(lazyTree, innerHTML.__html);\n      }\n    } else {\n      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;\n      var childrenToUse = contentToUse != null ? null : props.children;\n      // TODO: Validate that text is allowed as a child of this node\n      if (contentToUse != null) {\n        // Avoid setting textContent when the text is empty. In IE11 setting\n        // textContent on a text area will cause the placeholder to not\n        // show within the textarea until it has been focused and blurred again.\n        // https://github.com/facebook/react/issues/6731#issuecomment-254874553\n        if (contentToUse !== '') {\n          if (process.env.NODE_ENV !== 'production') {\n            setAndValidateContentChildDev.call(this, contentToUse);\n          }\n          DOMLazyTree.queueText(lazyTree, contentToUse);\n        }\n      } else if (childrenToUse != null) {\n        var mountImages = this.mountChildren(childrenToUse, transaction, context);\n        for (var i = 0; i < mountImages.length; i++) {\n          DOMLazyTree.queueChild(lazyTree, mountImages[i]);\n        }\n      }\n    }\n  },\n\n  /**\n   * Receives a next element and updates the component.\n   *\n   * @internal\n   * @param {ReactElement} nextElement\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n   * @param {object} context\n   */\n  receiveComponent: function (nextElement, transaction, context) {\n    var prevElement = this._currentElement;\n    this._currentElement = nextElement;\n    this.updateComponent(transaction, prevElement, nextElement, context);\n  },\n\n  /**\n   * Updates a DOM component after it has already been allocated and\n   * attached to the DOM. Reconciles the root DOM node, then recurses.\n   *\n   * @param {ReactReconcileTransaction} transaction\n   * @param {ReactElement} prevElement\n   * @param {ReactElement} nextElement\n   * @internal\n   * @overridable\n   */\n  updateComponent: function (transaction, prevElement, nextElement, context) {\n    var lastProps = prevElement.props;\n    var nextProps = this._currentElement.props;\n\n    switch (this._tag) {\n      case 'input':\n        lastProps = ReactDOMInput.getHostProps(this, lastProps);\n        nextProps = ReactDOMInput.getHostProps(this, nextProps);\n        break;\n      case 'option':\n        lastProps = ReactDOMOption.getHostProps(this, lastProps);\n        nextProps = ReactDOMOption.getHostProps(this, nextProps);\n        break;\n      case 'select':\n        lastProps = ReactDOMSelect.getHostProps(this, lastProps);\n        nextProps = ReactDOMSelect.getHostProps(this, nextProps);\n        break;\n      case 'textarea':\n        lastProps = ReactDOMTextarea.getHostProps(this, lastProps);\n        nextProps = ReactDOMTextarea.getHostProps(this, nextProps);\n        break;\n    }\n\n    assertValidProps(this, nextProps);\n    this._updateDOMProperties(lastProps, nextProps, transaction);\n    this._updateDOMChildren(lastProps, nextProps, transaction, context);\n\n    switch (this._tag) {\n      case 'input':\n        // Update the wrapper around inputs *after* updating props. This has to\n        // happen after `_updateDOMProperties`. Otherwise HTML5 input validations\n        // raise warnings and prevent the new value from being assigned.\n        ReactDOMInput.updateWrapper(this);\n        break;\n      case 'textarea':\n        ReactDOMTextarea.updateWrapper(this);\n        break;\n      case 'select':\n        // <select> value update needs to occur after <option> children\n        // reconciliation\n        transaction.getReactMountReady().enqueue(postUpdateSelectWrapper, this);\n        break;\n    }\n  },\n\n  /**\n   * Reconciles the properties by detecting differences in property values and\n   * updating the DOM as necessary. This function is probably the single most\n   * critical path for performance optimization.\n   *\n   * TODO: Benchmark whether checking for changed values in memory actually\n   *       improves performance (especially statically positioned elements).\n   * TODO: Benchmark the effects of putting this at the top since 99% of props\n   *       do not change for a given reconciliation.\n   * TODO: Benchmark areas that can be improved with caching.\n   *\n   * @private\n   * @param {object} lastProps\n   * @param {object} nextProps\n   * @param {?DOMElement} node\n   */\n  _updateDOMProperties: function (lastProps, nextProps, transaction) {\n    var propKey;\n    var styleName;\n    var styleUpdates;\n    for (propKey in lastProps) {\n      if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey) || lastProps[propKey] == null) {\n        continue;\n      }\n      if (propKey === STYLE) {\n        var lastStyle = this._previousStyleCopy;\n        for (styleName in lastStyle) {\n          if (lastStyle.hasOwnProperty(styleName)) {\n            styleUpdates = styleUpdates || {};\n            styleUpdates[styleName] = '';\n          }\n        }\n        this._previousStyleCopy = null;\n      } else if (registrationNameModules.hasOwnProperty(propKey)) {\n        if (lastProps[propKey]) {\n          // Only call deleteListener if there was a listener previously or\n          // else willDeleteListener gets called when there wasn't actually a\n          // listener (e.g., onClick={null})\n          deleteListener(this, propKey);\n        }\n      } else if (isCustomComponent(this._tag, lastProps)) {\n        if (!RESERVED_PROPS.hasOwnProperty(propKey)) {\n          DOMPropertyOperations.deleteValueForAttribute(getNode(this), propKey);\n        }\n      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {\n        DOMPropertyOperations.deleteValueForProperty(getNode(this), propKey);\n      }\n    }\n    for (propKey in nextProps) {\n      var nextProp = nextProps[propKey];\n      var lastProp = propKey === STYLE ? this._previousStyleCopy : lastProps != null ? lastProps[propKey] : undefined;\n      if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp || nextProp == null && lastProp == null) {\n        continue;\n      }\n      if (propKey === STYLE) {\n        if (nextProp) {\n          if (process.env.NODE_ENV !== 'production') {\n            checkAndWarnForMutatedStyle(this._previousStyleCopy, this._previousStyle, this);\n            this._previousStyle = nextProp;\n          }\n          nextProp = this._previousStyleCopy = _assign({}, nextProp);\n        } else {\n          this._previousStyleCopy = null;\n        }\n        if (lastProp) {\n          // Unset styles on `lastProp` but not on `nextProp`.\n          for (styleName in lastProp) {\n            if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {\n              styleUpdates = styleUpdates || {};\n              styleUpdates[styleName] = '';\n            }\n          }\n          // Update styles that changed since `lastProp`.\n          for (styleName in nextProp) {\n            if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {\n              styleUpdates = styleUpdates || {};\n              styleUpdates[styleName] = nextProp[styleName];\n            }\n          }\n        } else {\n          // Relies on `updateStylesByID` not mutating `styleUpdates`.\n          styleUpdates = nextProp;\n        }\n      } else if (registrationNameModules.hasOwnProperty(propKey)) {\n        if (nextProp) {\n          enqueuePutListener(this, propKey, nextProp, transaction);\n        } else if (lastProp) {\n          deleteListener(this, propKey);\n        }\n      } else if (isCustomComponent(this._tag, nextProps)) {\n        if (!RESERVED_PROPS.hasOwnProperty(propKey)) {\n          DOMPropertyOperations.setValueForAttribute(getNode(this), propKey, nextProp);\n        }\n      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {\n        var node = getNode(this);\n        // If we're updating to null or undefined, we should remove the property\n        // from the DOM node instead of inadvertently setting to a string. This\n        // brings us in line with the same behavior we have on initial render.\n        if (nextProp != null) {\n          DOMPropertyOperations.setValueForProperty(node, propKey, nextProp);\n        } else {\n          DOMPropertyOperations.deleteValueForProperty(node, propKey);\n        }\n      }\n    }\n    if (styleUpdates) {\n      CSSPropertyOperations.setValueForStyles(getNode(this), styleUpdates, this);\n    }\n  },\n\n  /**\n   * Reconciles the children with the various properties that affect the\n   * children content.\n   *\n   * @param {object} lastProps\n   * @param {object} nextProps\n   * @param {ReactReconcileTransaction} transaction\n   * @param {object} context\n   */\n  _updateDOMChildren: function (lastProps, nextProps, transaction, context) {\n    var lastContent = CONTENT_TYPES[typeof lastProps.children] ? lastProps.children : null;\n    var nextContent = CONTENT_TYPES[typeof nextProps.children] ? nextProps.children : null;\n\n    var lastHtml = lastProps.dangerouslySetInnerHTML && lastProps.dangerouslySetInnerHTML.__html;\n    var nextHtml = nextProps.dangerouslySetInnerHTML && nextProps.dangerouslySetInnerHTML.__html;\n\n    // Note the use of `!=` which checks for null or undefined.\n    var lastChildren = lastContent != null ? null : lastProps.children;\n    var nextChildren = nextContent != null ? null : nextProps.children;\n\n    // If we're switching from children to content/html or vice versa, remove\n    // the old content\n    var lastHasContentOrHtml = lastContent != null || lastHtml != null;\n    var nextHasContentOrHtml = nextContent != null || nextHtml != null;\n    if (lastChildren != null && nextChildren == null) {\n      this.updateChildren(null, transaction, context);\n    } else if (lastHasContentOrHtml && !nextHasContentOrHtml) {\n      this.updateTextContent('');\n      if (process.env.NODE_ENV !== 'production') {\n        ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);\n      }\n    }\n\n    if (nextContent != null) {\n      if (lastContent !== nextContent) {\n        this.updateTextContent('' + nextContent);\n        if (process.env.NODE_ENV !== 'production') {\n          setAndValidateContentChildDev.call(this, nextContent);\n        }\n      }\n    } else if (nextHtml != null) {\n      if (lastHtml !== nextHtml) {\n        this.updateMarkup('' + nextHtml);\n      }\n      if (process.env.NODE_ENV !== 'production') {\n        ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);\n      }\n    } else if (nextChildren != null) {\n      if (process.env.NODE_ENV !== 'production') {\n        setAndValidateContentChildDev.call(this, null);\n      }\n\n      this.updateChildren(nextChildren, transaction, context);\n    }\n  },\n\n  getHostNode: function () {\n    return getNode(this);\n  },\n\n  /**\n   * Destroys all event registrations for this instance. Does not remove from\n   * the DOM. That must be done by the parent.\n   *\n   * @internal\n   */\n  unmountComponent: function (safely) {\n    switch (this._tag) {\n      case 'audio':\n      case 'form':\n      case 'iframe':\n      case 'img':\n      case 'link':\n      case 'object':\n      case 'source':\n      case 'video':\n        var listeners = this._wrapperState.listeners;\n        if (listeners) {\n          for (var i = 0; i < listeners.length; i++) {\n            listeners[i].remove();\n          }\n        }\n        break;\n      case 'html':\n      case 'head':\n      case 'body':\n        /**\n         * Components like <html> <head> and <body> can't be removed or added\n         * easily in a cross-browser way, however it's valuable to be able to\n         * take advantage of React's reconciliation for styling and <title>\n         * management. So we just document it and throw in dangerous cases.\n         */\n        !false ? process.env.NODE_ENV !== 'production' ? invariant(false, '<%s> tried to unmount. Because of cross-browser quirks it is impossible to unmount some top-level components (eg <html>, <head>, and <body>) reliably and efficiently. To fix this, have a single top-level component that never unmounts render these elements.', this._tag) : _prodInvariant('66', this._tag) : void 0;\n        break;\n    }\n\n    this.unmountChildren(safely);\n    ReactDOMComponentTree.uncacheNode(this);\n    EventPluginHub.deleteAllListeners(this);\n    this._rootNodeID = 0;\n    this._domID = 0;\n    this._wrapperState = null;\n\n    if (process.env.NODE_ENV !== 'production') {\n      setAndValidateContentChildDev.call(this, null);\n    }\n  },\n\n  getPublicInstance: function () {\n    return getNode(this);\n  }\n\n};\n\n_assign(ReactDOMComponent.prototype, ReactDOMComponent.Mixin, ReactMultiChild.Mixin);\n\nmodule.exports = ReactDOMComponent;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactDOMComponent.js\n// module id = 96\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar validateDOMNesting = require('./validateDOMNesting');\n\nvar DOC_NODE_TYPE = 9;\n\nfunction ReactDOMContainerInfo(topLevelWrapper, node) {\n  var info = {\n    _topLevelWrapper: topLevelWrapper,\n    _idCounter: 1,\n    _ownerDocument: node ? node.nodeType === DOC_NODE_TYPE ? node : node.ownerDocument : null,\n    _node: node,\n    _tag: node ? node.nodeName.toLowerCase() : null,\n    _namespaceURI: node ? node.namespaceURI : null\n  };\n  if (process.env.NODE_ENV !== 'production') {\n    info._ancestorInfo = node ? validateDOMNesting.updatedAncestorInfo(null, info._tag, null) : null;\n  }\n  return info;\n}\n\nmodule.exports = ReactDOMContainerInfo;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactDOMContainerInfo.js\n// module id = 97\n// module chunks = 0","/**\n * Copyright 2014-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar DOMLazyTree = require('./DOMLazyTree');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\n\nvar ReactDOMEmptyComponent = function (instantiate) {\n  // ReactCompositeComponent uses this:\n  this._currentElement = null;\n  // ReactDOMComponentTree uses these:\n  this._hostNode = null;\n  this._hostParent = null;\n  this._hostContainerInfo = null;\n  this._domID = 0;\n};\n_assign(ReactDOMEmptyComponent.prototype, {\n  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {\n    var domID = hostContainerInfo._idCounter++;\n    this._domID = domID;\n    this._hostParent = hostParent;\n    this._hostContainerInfo = hostContainerInfo;\n\n    var nodeValue = ' react-empty: ' + this._domID + ' ';\n    if (transaction.useCreateElement) {\n      var ownerDocument = hostContainerInfo._ownerDocument;\n      var node = ownerDocument.createComment(nodeValue);\n      ReactDOMComponentTree.precacheNode(this, node);\n      return DOMLazyTree(node);\n    } else {\n      if (transaction.renderToStaticMarkup) {\n        // Normally we'd insert a comment node, but since this is a situation\n        // where React won't take over (static pages), we can simply return\n        // nothing.\n        return '';\n      }\n      return '<!--' + nodeValue + '-->';\n    }\n  },\n  receiveComponent: function () {},\n  getHostNode: function () {\n    return ReactDOMComponentTree.getNodeFromInstance(this);\n  },\n  unmountComponent: function () {\n    ReactDOMComponentTree.uncacheNode(this);\n  }\n});\n\nmodule.exports = ReactDOMEmptyComponent;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactDOMEmptyComponent.js\n// module id = 98\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar ReactDOMFeatureFlags = {\n  useCreateElement: true,\n  useFiber: false\n};\n\nmodule.exports = ReactDOMFeatureFlags;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactDOMFeatureFlags.js\n// module id = 99\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar DOMChildrenOperations = require('./DOMChildrenOperations');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\n\n/**\n * Operations used to process updates to DOM nodes.\n */\nvar ReactDOMIDOperations = {\n\n  /**\n   * Updates a component's children by processing a series of updates.\n   *\n   * @param {array<object>} updates List of update configurations.\n   * @internal\n   */\n  dangerouslyProcessChildrenUpdates: function (parentInst, updates) {\n    var node = ReactDOMComponentTree.getNodeFromInstance(parentInst);\n    DOMChildrenOperations.processUpdates(node, updates);\n  }\n};\n\nmodule.exports = ReactDOMIDOperations;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactDOMIDOperations.js\n// module id = 100\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant'),\n    _assign = require('object-assign');\n\nvar DOMPropertyOperations = require('./DOMPropertyOperations');\nvar LinkedValueUtils = require('./LinkedValueUtils');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar ReactUpdates = require('./ReactUpdates');\n\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\nvar didWarnValueLink = false;\nvar didWarnCheckedLink = false;\nvar didWarnValueDefaultValue = false;\nvar didWarnCheckedDefaultChecked = false;\nvar didWarnControlledToUncontrolled = false;\nvar didWarnUncontrolledToControlled = false;\n\nfunction forceUpdateIfMounted() {\n  if (this._rootNodeID) {\n    // DOM component is still mounted; update\n    ReactDOMInput.updateWrapper(this);\n  }\n}\n\nfunction isControlled(props) {\n  var usesChecked = props.type === 'checkbox' || props.type === 'radio';\n  return usesChecked ? props.checked != null : props.value != null;\n}\n\n/**\n * Implements an <input> host component that allows setting these optional\n * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.\n *\n * If `checked` or `value` are not supplied (or null/undefined), user actions\n * that affect the checked state or value will trigger updates to the element.\n *\n * If they are supplied (and not null/undefined), the rendered element will not\n * trigger updates to the element. Instead, the props must change in order for\n * the rendered element to be updated.\n *\n * The rendered element will be initialized as unchecked (or `defaultChecked`)\n * with an empty value (or `defaultValue`).\n *\n * @see http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html\n */\nvar ReactDOMInput = {\n  getHostProps: function (inst, props) {\n    var value = LinkedValueUtils.getValue(props);\n    var checked = LinkedValueUtils.getChecked(props);\n\n    var hostProps = _assign({\n      // Make sure we set .type before any other properties (setting .value\n      // before .type means .value is lost in IE11 and below)\n      type: undefined,\n      // Make sure we set .step before .value (setting .value before .step\n      // means .value is rounded on mount, based upon step precision)\n      step: undefined,\n      // Make sure we set .min & .max before .value (to ensure proper order\n      // in corner cases such as min or max deriving from value, e.g. Issue #7170)\n      min: undefined,\n      max: undefined\n    }, props, {\n      defaultChecked: undefined,\n      defaultValue: undefined,\n      value: value != null ? value : inst._wrapperState.initialValue,\n      checked: checked != null ? checked : inst._wrapperState.initialChecked,\n      onChange: inst._wrapperState.onChange\n    });\n\n    return hostProps;\n  },\n\n  mountWrapper: function (inst, props) {\n    if (process.env.NODE_ENV !== 'production') {\n      LinkedValueUtils.checkPropTypes('input', props, inst._currentElement._owner);\n\n      var owner = inst._currentElement._owner;\n\n      if (props.valueLink !== undefined && !didWarnValueLink) {\n        process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;\n        didWarnValueLink = true;\n      }\n      if (props.checkedLink !== undefined && !didWarnCheckedLink) {\n        process.env.NODE_ENV !== 'production' ? warning(false, '`checkedLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;\n        didWarnCheckedLink = true;\n      }\n      if (props.checked !== undefined && props.defaultChecked !== undefined && !didWarnCheckedDefaultChecked) {\n        process.env.NODE_ENV !== 'production' ? warning(false, '%s contains an input of type %s with both checked and defaultChecked props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the checked prop, or the defaultChecked prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;\n        didWarnCheckedDefaultChecked = true;\n      }\n      if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {\n        process.env.NODE_ENV !== 'production' ? warning(false, '%s contains an input of type %s with both value and defaultValue props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;\n        didWarnValueDefaultValue = true;\n      }\n    }\n\n    var defaultValue = props.defaultValue;\n    inst._wrapperState = {\n      initialChecked: props.checked != null ? props.checked : props.defaultChecked,\n      initialValue: props.value != null ? props.value : defaultValue,\n      listeners: null,\n      onChange: _handleChange.bind(inst),\n      controlled: isControlled(props)\n    };\n  },\n\n  updateWrapper: function (inst) {\n    var props = inst._currentElement.props;\n\n    if (process.env.NODE_ENV !== 'production') {\n      var controlled = isControlled(props);\n      var owner = inst._currentElement._owner;\n\n      if (!inst._wrapperState.controlled && controlled && !didWarnUncontrolledToControlled) {\n        process.env.NODE_ENV !== 'production' ? warning(false, '%s is changing an uncontrolled input of type %s to be controlled. ' + 'Input elements should not switch from uncontrolled to controlled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;\n        didWarnUncontrolledToControlled = true;\n      }\n      if (inst._wrapperState.controlled && !controlled && !didWarnControlledToUncontrolled) {\n        process.env.NODE_ENV !== 'production' ? warning(false, '%s is changing a controlled input of type %s to be uncontrolled. ' + 'Input elements should not switch from controlled to uncontrolled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;\n        didWarnControlledToUncontrolled = true;\n      }\n    }\n\n    // TODO: Shouldn't this be getChecked(props)?\n    var checked = props.checked;\n    if (checked != null) {\n      DOMPropertyOperations.setValueForProperty(ReactDOMComponentTree.getNodeFromInstance(inst), 'checked', checked || false);\n    }\n\n    var node = ReactDOMComponentTree.getNodeFromInstance(inst);\n    var value = LinkedValueUtils.getValue(props);\n    if (value != null) {\n      if (value === 0 && node.value === '') {\n        node.value = '0';\n        // Note: IE9 reports a number inputs as 'text', so check props instead.\n      } else if (props.type === 'number') {\n        // Simulate `input.valueAsNumber`. IE9 does not support it\n        var valueAsNumber = parseFloat(node.value, 10) || 0;\n\n        // eslint-disable-next-line\n        if (value != valueAsNumber) {\n          // Cast `value` to a string to ensure the value is set correctly. While\n          // browsers typically do this as necessary, jsdom doesn't.\n          node.value = '' + value;\n        }\n        // eslint-disable-next-line\n      } else if (value != node.value) {\n        // Cast `value` to a string to ensure the value is set correctly. While\n        // browsers typically do this as necessary, jsdom doesn't.\n        node.value = '' + value;\n      }\n    } else {\n      if (props.value == null && props.defaultValue != null) {\n        // In Chrome, assigning defaultValue to certain input types triggers input validation.\n        // For number inputs, the display value loses trailing decimal points. For email inputs,\n        // Chrome raises \"The specified value <x> is not a valid email address\".\n        //\n        // Here we check to see if the defaultValue has actually changed, avoiding these problems\n        // when the user is inputting text\n        //\n        // https://github.com/facebook/react/issues/7253\n        if (node.defaultValue !== '' + props.defaultValue) {\n          node.defaultValue = '' + props.defaultValue;\n        }\n      }\n      if (props.checked == null && props.defaultChecked != null) {\n        node.defaultChecked = !!props.defaultChecked;\n      }\n    }\n  },\n\n  postMountWrapper: function (inst) {\n    var props = inst._currentElement.props;\n\n    // This is in postMount because we need access to the DOM node, which is not\n    // available until after the component has mounted.\n    var node = ReactDOMComponentTree.getNodeFromInstance(inst);\n\n    // Detach value from defaultValue. We won't do anything if we're working on\n    // submit or reset inputs as those values & defaultValues are linked. They\n    // are not resetable nodes so this operation doesn't matter and actually\n    // removes browser-default values (eg \"Submit Query\") when no value is\n    // provided.\n\n    switch (props.type) {\n      case 'submit':\n      case 'reset':\n        break;\n      case 'color':\n      case 'date':\n      case 'datetime':\n      case 'datetime-local':\n      case 'month':\n      case 'time':\n      case 'week':\n        // This fixes the no-show issue on iOS Safari and Android Chrome:\n        // https://github.com/facebook/react/issues/7233\n        node.value = '';\n        node.value = node.defaultValue;\n        break;\n      default:\n        node.value = node.value;\n        break;\n    }\n\n    // Normally, we'd just do `node.checked = node.checked` upon initial mount, less this bug\n    // this is needed to work around a chrome bug where setting defaultChecked\n    // will sometimes influence the value of checked (even after detachment).\n    // Reference: https://bugs.chromium.org/p/chromium/issues/detail?id=608416\n    // We need to temporarily unset name to avoid disrupting radio button groups.\n    var name = node.name;\n    if (name !== '') {\n      node.name = '';\n    }\n    node.defaultChecked = !node.defaultChecked;\n    node.defaultChecked = !node.defaultChecked;\n    if (name !== '') {\n      node.name = name;\n    }\n  }\n};\n\nfunction _handleChange(event) {\n  var props = this._currentElement.props;\n\n  var returnValue = LinkedValueUtils.executeOnChange(props, event);\n\n  // Here we use asap to wait until all updates have propagated, which\n  // is important when using controlled components within layers:\n  // https://github.com/facebook/react/issues/1698\n  ReactUpdates.asap(forceUpdateIfMounted, this);\n\n  var name = props.name;\n  if (props.type === 'radio' && name != null) {\n    var rootNode = ReactDOMComponentTree.getNodeFromInstance(this);\n    var queryRoot = rootNode;\n\n    while (queryRoot.parentNode) {\n      queryRoot = queryRoot.parentNode;\n    }\n\n    // If `rootNode.form` was non-null, then we could try `form.elements`,\n    // but that sometimes behaves strangely in IE8. We could also try using\n    // `form.getElementsByName`, but that will only return direct children\n    // and won't include inputs that use the HTML5 `form=` attribute. Since\n    // the input might not even be in a form, let's just use the global\n    // `querySelectorAll` to ensure we don't miss anything.\n    var group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type=\"radio\"]');\n\n    for (var i = 0; i < group.length; i++) {\n      var otherNode = group[i];\n      if (otherNode === rootNode || otherNode.form !== rootNode.form) {\n        continue;\n      }\n      // This will throw if radio buttons rendered by different copies of React\n      // and the same name are rendered into the same form (same as #1939).\n      // That's probably okay; we don't support it just as we don't support\n      // mixing React radio buttons with non-React ones.\n      var otherInstance = ReactDOMComponentTree.getInstanceFromNode(otherNode);\n      !otherInstance ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.') : _prodInvariant('90') : void 0;\n      // If this is a controlled radio button group, forcing the input that\n      // was previously checked to update will cause it to be come re-checked\n      // as appropriate.\n      ReactUpdates.asap(forceUpdateIfMounted, otherInstance);\n    }\n  }\n\n  return returnValue;\n}\n\nmodule.exports = ReactDOMInput;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactDOMInput.js\n// module id = 101\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar React = require('react/lib/React');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar ReactDOMSelect = require('./ReactDOMSelect');\n\nvar warning = require('fbjs/lib/warning');\nvar didWarnInvalidOptionChildren = false;\n\nfunction flattenChildren(children) {\n  var content = '';\n\n  // Flatten children and warn if they aren't strings or numbers;\n  // invalid types are ignored.\n  React.Children.forEach(children, function (child) {\n    if (child == null) {\n      return;\n    }\n    if (typeof child === 'string' || typeof child === 'number') {\n      content += child;\n    } else if (!didWarnInvalidOptionChildren) {\n      didWarnInvalidOptionChildren = true;\n      process.env.NODE_ENV !== 'production' ? warning(false, 'Only strings and numbers are supported as <option> children.') : void 0;\n    }\n  });\n\n  return content;\n}\n\n/**\n * Implements an <option> host component that warns when `selected` is set.\n */\nvar ReactDOMOption = {\n  mountWrapper: function (inst, props, hostParent) {\n    // TODO (yungsters): Remove support for `selected` in <option>.\n    if (process.env.NODE_ENV !== 'production') {\n      process.env.NODE_ENV !== 'production' ? warning(props.selected == null, 'Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.') : void 0;\n    }\n\n    // Look up whether this option is 'selected'\n    var selectValue = null;\n    if (hostParent != null) {\n      var selectParent = hostParent;\n\n      if (selectParent._tag === 'optgroup') {\n        selectParent = selectParent._hostParent;\n      }\n\n      if (selectParent != null && selectParent._tag === 'select') {\n        selectValue = ReactDOMSelect.getSelectValueContext(selectParent);\n      }\n    }\n\n    // If the value is null (e.g., no specified value or after initial mount)\n    // or missing (e.g., for <datalist>), we don't change props.selected\n    var selected = null;\n    if (selectValue != null) {\n      var value;\n      if (props.value != null) {\n        value = props.value + '';\n      } else {\n        value = flattenChildren(props.children);\n      }\n      selected = false;\n      if (Array.isArray(selectValue)) {\n        // multiple\n        for (var i = 0; i < selectValue.length; i++) {\n          if ('' + selectValue[i] === value) {\n            selected = true;\n            break;\n          }\n        }\n      } else {\n        selected = '' + selectValue === value;\n      }\n    }\n\n    inst._wrapperState = { selected: selected };\n  },\n\n  postMountWrapper: function (inst) {\n    // value=\"\" should make a value attribute (#6219)\n    var props = inst._currentElement.props;\n    if (props.value != null) {\n      var node = ReactDOMComponentTree.getNodeFromInstance(inst);\n      node.setAttribute('value', props.value);\n    }\n  },\n\n  getHostProps: function (inst, props) {\n    var hostProps = _assign({ selected: undefined, children: undefined }, props);\n\n    // Read state only from initial mount because <select> updates value\n    // manually; we need the initial state only for server rendering\n    if (inst._wrapperState.selected != null) {\n      hostProps.selected = inst._wrapperState.selected;\n    }\n\n    var content = flattenChildren(props.children);\n\n    if (content) {\n      hostProps.children = content;\n    }\n\n    return hostProps;\n  }\n\n};\n\nmodule.exports = ReactDOMOption;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactDOMOption.js\n// module id = 102\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\n\nvar getNodeForCharacterOffset = require('./getNodeForCharacterOffset');\nvar getTextContentAccessor = require('./getTextContentAccessor');\n\n/**\n * While `isCollapsed` is available on the Selection object and `collapsed`\n * is available on the Range object, IE11 sometimes gets them wrong.\n * If the anchor/focus nodes and offsets are the same, the range is collapsed.\n */\nfunction isCollapsed(anchorNode, anchorOffset, focusNode, focusOffset) {\n  return anchorNode === focusNode && anchorOffset === focusOffset;\n}\n\n/**\n * Get the appropriate anchor and focus node/offset pairs for IE.\n *\n * The catch here is that IE's selection API doesn't provide information\n * about whether the selection is forward or backward, so we have to\n * behave as though it's always forward.\n *\n * IE text differs from modern selection in that it behaves as though\n * block elements end with a new line. This means character offsets will\n * differ between the two APIs.\n *\n * @param {DOMElement} node\n * @return {object}\n */\nfunction getIEOffsets(node) {\n  var selection = document.selection;\n  var selectedRange = selection.createRange();\n  var selectedLength = selectedRange.text.length;\n\n  // Duplicate selection so we can move range without breaking user selection.\n  var fromStart = selectedRange.duplicate();\n  fromStart.moveToElementText(node);\n  fromStart.setEndPoint('EndToStart', selectedRange);\n\n  var startOffset = fromStart.text.length;\n  var endOffset = startOffset + selectedLength;\n\n  return {\n    start: startOffset,\n    end: endOffset\n  };\n}\n\n/**\n * @param {DOMElement} node\n * @return {?object}\n */\nfunction getModernOffsets(node) {\n  var selection = window.getSelection && window.getSelection();\n\n  if (!selection || selection.rangeCount === 0) {\n    return null;\n  }\n\n  var anchorNode = selection.anchorNode;\n  var anchorOffset = selection.anchorOffset;\n  var focusNode = selection.focusNode;\n  var focusOffset = selection.focusOffset;\n\n  var currentRange = selection.getRangeAt(0);\n\n  // In Firefox, range.startContainer and range.endContainer can be \"anonymous\n  // divs\", e.g. the up/down buttons on an <input type=\"number\">. Anonymous\n  // divs do not seem to expose properties, triggering a \"Permission denied\n  // error\" if any of its properties are accessed. The only seemingly possible\n  // way to avoid erroring is to access a property that typically works for\n  // non-anonymous divs and catch any error that may otherwise arise. See\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=208427\n  try {\n    /* eslint-disable no-unused-expressions */\n    currentRange.startContainer.nodeType;\n    currentRange.endContainer.nodeType;\n    /* eslint-enable no-unused-expressions */\n  } catch (e) {\n    return null;\n  }\n\n  // If the node and offset values are the same, the selection is collapsed.\n  // `Selection.isCollapsed` is available natively, but IE sometimes gets\n  // this value wrong.\n  var isSelectionCollapsed = isCollapsed(selection.anchorNode, selection.anchorOffset, selection.focusNode, selection.focusOffset);\n\n  var rangeLength = isSelectionCollapsed ? 0 : currentRange.toString().length;\n\n  var tempRange = currentRange.cloneRange();\n  tempRange.selectNodeContents(node);\n  tempRange.setEnd(currentRange.startContainer, currentRange.startOffset);\n\n  var isTempRangeCollapsed = isCollapsed(tempRange.startContainer, tempRange.startOffset, tempRange.endContainer, tempRange.endOffset);\n\n  var start = isTempRangeCollapsed ? 0 : tempRange.toString().length;\n  var end = start + rangeLength;\n\n  // Detect whether the selection is backward.\n  var detectionRange = document.createRange();\n  detectionRange.setStart(anchorNode, anchorOffset);\n  detectionRange.setEnd(focusNode, focusOffset);\n  var isBackward = detectionRange.collapsed;\n\n  return {\n    start: isBackward ? end : start,\n    end: isBackward ? start : end\n  };\n}\n\n/**\n * @param {DOMElement|DOMTextNode} node\n * @param {object} offsets\n */\nfunction setIEOffsets(node, offsets) {\n  var range = document.selection.createRange().duplicate();\n  var start, end;\n\n  if (offsets.end === undefined) {\n    start = offsets.start;\n    end = start;\n  } else if (offsets.start > offsets.end) {\n    start = offsets.end;\n    end = offsets.start;\n  } else {\n    start = offsets.start;\n    end = offsets.end;\n  }\n\n  range.moveToElementText(node);\n  range.moveStart('character', start);\n  range.setEndPoint('EndToStart', range);\n  range.moveEnd('character', end - start);\n  range.select();\n}\n\n/**\n * In modern non-IE browsers, we can support both forward and backward\n * selections.\n *\n * Note: IE10+ supports the Selection object, but it does not support\n * the `extend` method, which means that even in modern IE, it's not possible\n * to programmatically create a backward selection. Thus, for all IE\n * versions, we use the old IE API to create our selections.\n *\n * @param {DOMElement|DOMTextNode} node\n * @param {object} offsets\n */\nfunction setModernOffsets(node, offsets) {\n  if (!window.getSelection) {\n    return;\n  }\n\n  var selection = window.getSelection();\n  var length = node[getTextContentAccessor()].length;\n  var start = Math.min(offsets.start, length);\n  var end = offsets.end === undefined ? start : Math.min(offsets.end, length);\n\n  // IE 11 uses modern selection, but doesn't support the extend method.\n  // Flip backward selections, so we can set with a single range.\n  if (!selection.extend && start > end) {\n    var temp = end;\n    end = start;\n    start = temp;\n  }\n\n  var startMarker = getNodeForCharacterOffset(node, start);\n  var endMarker = getNodeForCharacterOffset(node, end);\n\n  if (startMarker && endMarker) {\n    var range = document.createRange();\n    range.setStart(startMarker.node, startMarker.offset);\n    selection.removeAllRanges();\n\n    if (start > end) {\n      selection.addRange(range);\n      selection.extend(endMarker.node, endMarker.offset);\n    } else {\n      range.setEnd(endMarker.node, endMarker.offset);\n      selection.addRange(range);\n    }\n  }\n}\n\nvar useIEOffsets = ExecutionEnvironment.canUseDOM && 'selection' in document && !('getSelection' in window);\n\nvar ReactDOMSelection = {\n  /**\n   * @param {DOMElement} node\n   */\n  getOffsets: useIEOffsets ? getIEOffsets : getModernOffsets,\n\n  /**\n   * @param {DOMElement|DOMTextNode} node\n   * @param {object} offsets\n   */\n  setOffsets: useIEOffsets ? setIEOffsets : setModernOffsets\n};\n\nmodule.exports = ReactDOMSelection;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactDOMSelection.js\n// module id = 103\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant'),\n    _assign = require('object-assign');\n\nvar DOMChildrenOperations = require('./DOMChildrenOperations');\nvar DOMLazyTree = require('./DOMLazyTree');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\n\nvar escapeTextContentForBrowser = require('./escapeTextContentForBrowser');\nvar invariant = require('fbjs/lib/invariant');\nvar validateDOMNesting = require('./validateDOMNesting');\n\n/**\n * Text nodes violate a couple assumptions that React makes about components:\n *\n *  - When mounting text into the DOM, adjacent text nodes are merged.\n *  - Text nodes cannot be assigned a React root ID.\n *\n * This component is used to wrap strings between comment nodes so that they\n * can undergo the same reconciliation that is applied to elements.\n *\n * TODO: Investigate representing React components in the DOM with text nodes.\n *\n * @class ReactDOMTextComponent\n * @extends ReactComponent\n * @internal\n */\nvar ReactDOMTextComponent = function (text) {\n  // TODO: This is really a ReactText (ReactNode), not a ReactElement\n  this._currentElement = text;\n  this._stringText = '' + text;\n  // ReactDOMComponentTree uses these:\n  this._hostNode = null;\n  this._hostParent = null;\n\n  // Properties\n  this._domID = 0;\n  this._mountIndex = 0;\n  this._closingComment = null;\n  this._commentNodes = null;\n};\n\n_assign(ReactDOMTextComponent.prototype, {\n\n  /**\n   * Creates the markup for this text node. This node is not intended to have\n   * any features besides containing text content.\n   *\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n   * @return {string} Markup for this text node.\n   * @internal\n   */\n  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {\n    if (process.env.NODE_ENV !== 'production') {\n      var parentInfo;\n      if (hostParent != null) {\n        parentInfo = hostParent._ancestorInfo;\n      } else if (hostContainerInfo != null) {\n        parentInfo = hostContainerInfo._ancestorInfo;\n      }\n      if (parentInfo) {\n        // parentInfo should always be present except for the top-level\n        // component when server rendering\n        validateDOMNesting(null, this._stringText, this, parentInfo);\n      }\n    }\n\n    var domID = hostContainerInfo._idCounter++;\n    var openingValue = ' react-text: ' + domID + ' ';\n    var closingValue = ' /react-text ';\n    this._domID = domID;\n    this._hostParent = hostParent;\n    if (transaction.useCreateElement) {\n      var ownerDocument = hostContainerInfo._ownerDocument;\n      var openingComment = ownerDocument.createComment(openingValue);\n      var closingComment = ownerDocument.createComment(closingValue);\n      var lazyTree = DOMLazyTree(ownerDocument.createDocumentFragment());\n      DOMLazyTree.queueChild(lazyTree, DOMLazyTree(openingComment));\n      if (this._stringText) {\n        DOMLazyTree.queueChild(lazyTree, DOMLazyTree(ownerDocument.createTextNode(this._stringText)));\n      }\n      DOMLazyTree.queueChild(lazyTree, DOMLazyTree(closingComment));\n      ReactDOMComponentTree.precacheNode(this, openingComment);\n      this._closingComment = closingComment;\n      return lazyTree;\n    } else {\n      var escapedText = escapeTextContentForBrowser(this._stringText);\n\n      if (transaction.renderToStaticMarkup) {\n        // Normally we'd wrap this between comment nodes for the reasons stated\n        // above, but since this is a situation where React won't take over\n        // (static pages), we can simply return the text as it is.\n        return escapedText;\n      }\n\n      return '<!--' + openingValue + '-->' + escapedText + '<!--' + closingValue + '-->';\n    }\n  },\n\n  /**\n   * Updates this component by updating the text content.\n   *\n   * @param {ReactText} nextText The next text content\n   * @param {ReactReconcileTransaction} transaction\n   * @internal\n   */\n  receiveComponent: function (nextText, transaction) {\n    if (nextText !== this._currentElement) {\n      this._currentElement = nextText;\n      var nextStringText = '' + nextText;\n      if (nextStringText !== this._stringText) {\n        // TODO: Save this as pending props and use performUpdateIfNecessary\n        // and/or updateComponent to do the actual update for consistency with\n        // other component types?\n        this._stringText = nextStringText;\n        var commentNodes = this.getHostNode();\n        DOMChildrenOperations.replaceDelimitedText(commentNodes[0], commentNodes[1], nextStringText);\n      }\n    }\n  },\n\n  getHostNode: function () {\n    var hostNode = this._commentNodes;\n    if (hostNode) {\n      return hostNode;\n    }\n    if (!this._closingComment) {\n      var openingComment = ReactDOMComponentTree.getNodeFromInstance(this);\n      var node = openingComment.nextSibling;\n      while (true) {\n        !(node != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Missing closing comment for text component %s', this._domID) : _prodInvariant('67', this._domID) : void 0;\n        if (node.nodeType === 8 && node.nodeValue === ' /react-text ') {\n          this._closingComment = node;\n          break;\n        }\n        node = node.nextSibling;\n      }\n    }\n    hostNode = [this._hostNode, this._closingComment];\n    this._commentNodes = hostNode;\n    return hostNode;\n  },\n\n  unmountComponent: function () {\n    this._closingComment = null;\n    this._commentNodes = null;\n    ReactDOMComponentTree.uncacheNode(this);\n  }\n\n});\n\nmodule.exports = ReactDOMTextComponent;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactDOMTextComponent.js\n// module id = 104\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant'),\n    _assign = require('object-assign');\n\nvar LinkedValueUtils = require('./LinkedValueUtils');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar ReactUpdates = require('./ReactUpdates');\n\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\nvar didWarnValueLink = false;\nvar didWarnValDefaultVal = false;\n\nfunction forceUpdateIfMounted() {\n  if (this._rootNodeID) {\n    // DOM component is still mounted; update\n    ReactDOMTextarea.updateWrapper(this);\n  }\n}\n\n/**\n * Implements a <textarea> host component that allows setting `value`, and\n * `defaultValue`. This differs from the traditional DOM API because value is\n * usually set as PCDATA children.\n *\n * If `value` is not supplied (or null/undefined), user actions that affect the\n * value will trigger updates to the element.\n *\n * If `value` is supplied (and not null/undefined), the rendered element will\n * not trigger updates to the element. Instead, the `value` prop must change in\n * order for the rendered element to be updated.\n *\n * The rendered element will be initialized with an empty value, the prop\n * `defaultValue` if specified, or the children content (deprecated).\n */\nvar ReactDOMTextarea = {\n  getHostProps: function (inst, props) {\n    !(props.dangerouslySetInnerHTML == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, '`dangerouslySetInnerHTML` does not make sense on <textarea>.') : _prodInvariant('91') : void 0;\n\n    // Always set children to the same thing. In IE9, the selection range will\n    // get reset if `textContent` is mutated.  We could add a check in setTextContent\n    // to only set the value if/when the value differs from the node value (which would\n    // completely solve this IE9 bug), but Sebastian+Ben seemed to like this solution.\n    // The value can be a boolean or object so that's why it's forced to be a string.\n    var hostProps = _assign({}, props, {\n      value: undefined,\n      defaultValue: undefined,\n      children: '' + inst._wrapperState.initialValue,\n      onChange: inst._wrapperState.onChange\n    });\n\n    return hostProps;\n  },\n\n  mountWrapper: function (inst, props) {\n    if (process.env.NODE_ENV !== 'production') {\n      LinkedValueUtils.checkPropTypes('textarea', props, inst._currentElement._owner);\n      if (props.valueLink !== undefined && !didWarnValueLink) {\n        process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `textarea` is deprecated; set `value` and `onChange` instead.') : void 0;\n        didWarnValueLink = true;\n      }\n      if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValDefaultVal) {\n        process.env.NODE_ENV !== 'production' ? warning(false, 'Textarea elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled textarea ' + 'and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;\n        didWarnValDefaultVal = true;\n      }\n    }\n\n    var value = LinkedValueUtils.getValue(props);\n    var initialValue = value;\n\n    // Only bother fetching default value if we're going to use it\n    if (value == null) {\n      var defaultValue = props.defaultValue;\n      // TODO (yungsters): Remove support for children content in <textarea>.\n      var children = props.children;\n      if (children != null) {\n        if (process.env.NODE_ENV !== 'production') {\n          process.env.NODE_ENV !== 'production' ? warning(false, 'Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.') : void 0;\n        }\n        !(defaultValue == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'If you supply `defaultValue` on a <textarea>, do not pass children.') : _prodInvariant('92') : void 0;\n        if (Array.isArray(children)) {\n          !(children.length <= 1) ? process.env.NODE_ENV !== 'production' ? invariant(false, '<textarea> can only have at most one child.') : _prodInvariant('93') : void 0;\n          children = children[0];\n        }\n\n        defaultValue = '' + children;\n      }\n      if (defaultValue == null) {\n        defaultValue = '';\n      }\n      initialValue = defaultValue;\n    }\n\n    inst._wrapperState = {\n      initialValue: '' + initialValue,\n      listeners: null,\n      onChange: _handleChange.bind(inst)\n    };\n  },\n\n  updateWrapper: function (inst) {\n    var props = inst._currentElement.props;\n\n    var node = ReactDOMComponentTree.getNodeFromInstance(inst);\n    var value = LinkedValueUtils.getValue(props);\n    if (value != null) {\n      // Cast `value` to a string to ensure the value is set correctly. While\n      // browsers typically do this as necessary, jsdom doesn't.\n      var newValue = '' + value;\n\n      // To avoid side effects (such as losing text selection), only set value if changed\n      if (newValue !== node.value) {\n        node.value = newValue;\n      }\n      if (props.defaultValue == null) {\n        node.defaultValue = newValue;\n      }\n    }\n    if (props.defaultValue != null) {\n      node.defaultValue = props.defaultValue;\n    }\n  },\n\n  postMountWrapper: function (inst) {\n    // This is in postMount because we need access to the DOM node, which is not\n    // available until after the component has mounted.\n    var node = ReactDOMComponentTree.getNodeFromInstance(inst);\n    var textContent = node.textContent;\n\n    // Only set node.value if textContent is equal to the expected\n    // initial value. In IE10/IE11 there is a bug where the placeholder attribute\n    // will populate textContent as well.\n    // https://developer.microsoft.com/microsoft-edge/platform/issues/101525/\n    if (textContent === inst._wrapperState.initialValue) {\n      node.value = textContent;\n    }\n  }\n};\n\nfunction _handleChange(event) {\n  var props = this._currentElement.props;\n  var returnValue = LinkedValueUtils.executeOnChange(props, event);\n  ReactUpdates.asap(forceUpdateIfMounted, this);\n  return returnValue;\n}\n\nmodule.exports = ReactDOMTextarea;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactDOMTextarea.js\n// module id = 105\n// module chunks = 0","/**\n * Copyright 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * Return the lowest common ancestor of A and B, or null if they are in\n * different trees.\n */\nfunction getLowestCommonAncestor(instA, instB) {\n  !('_hostNode' in instA) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;\n  !('_hostNode' in instB) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;\n\n  var depthA = 0;\n  for (var tempA = instA; tempA; tempA = tempA._hostParent) {\n    depthA++;\n  }\n  var depthB = 0;\n  for (var tempB = instB; tempB; tempB = tempB._hostParent) {\n    depthB++;\n  }\n\n  // If A is deeper, crawl up.\n  while (depthA - depthB > 0) {\n    instA = instA._hostParent;\n    depthA--;\n  }\n\n  // If B is deeper, crawl up.\n  while (depthB - depthA > 0) {\n    instB = instB._hostParent;\n    depthB--;\n  }\n\n  // Walk in lockstep until we find a match.\n  var depth = depthA;\n  while (depth--) {\n    if (instA === instB) {\n      return instA;\n    }\n    instA = instA._hostParent;\n    instB = instB._hostParent;\n  }\n  return null;\n}\n\n/**\n * Return if A is an ancestor of B.\n */\nfunction isAncestor(instA, instB) {\n  !('_hostNode' in instA) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'isAncestor: Invalid argument.') : _prodInvariant('35') : void 0;\n  !('_hostNode' in instB) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'isAncestor: Invalid argument.') : _prodInvariant('35') : void 0;\n\n  while (instB) {\n    if (instB === instA) {\n      return true;\n    }\n    instB = instB._hostParent;\n  }\n  return false;\n}\n\n/**\n * Return the parent instance of the passed-in instance.\n */\nfunction getParentInstance(inst) {\n  !('_hostNode' in inst) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getParentInstance: Invalid argument.') : _prodInvariant('36') : void 0;\n\n  return inst._hostParent;\n}\n\n/**\n * Simulates the traversal of a two-phase, capture/bubble event dispatch.\n */\nfunction traverseTwoPhase(inst, fn, arg) {\n  var path = [];\n  while (inst) {\n    path.push(inst);\n    inst = inst._hostParent;\n  }\n  var i;\n  for (i = path.length; i-- > 0;) {\n    fn(path[i], 'captured', arg);\n  }\n  for (i = 0; i < path.length; i++) {\n    fn(path[i], 'bubbled', arg);\n  }\n}\n\n/**\n * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that\n * should would receive a `mouseEnter` or `mouseLeave` event.\n *\n * Does not invoke the callback on the nearest common ancestor because nothing\n * \"entered\" or \"left\" that element.\n */\nfunction traverseEnterLeave(from, to, fn, argFrom, argTo) {\n  var common = from && to ? getLowestCommonAncestor(from, to) : null;\n  var pathFrom = [];\n  while (from && from !== common) {\n    pathFrom.push(from);\n    from = from._hostParent;\n  }\n  var pathTo = [];\n  while (to && to !== common) {\n    pathTo.push(to);\n    to = to._hostParent;\n  }\n  var i;\n  for (i = 0; i < pathFrom.length; i++) {\n    fn(pathFrom[i], 'bubbled', argFrom);\n  }\n  for (i = pathTo.length; i-- > 0;) {\n    fn(pathTo[i], 'captured', argTo);\n  }\n}\n\nmodule.exports = {\n  isAncestor: isAncestor,\n  getLowestCommonAncestor: getLowestCommonAncestor,\n  getParentInstance: getParentInstance,\n  traverseTwoPhase: traverseTwoPhase,\n  traverseEnterLeave: traverseEnterLeave\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactDOMTreeTraversal.js\n// module id = 106\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar ReactUpdates = require('./ReactUpdates');\nvar Transaction = require('./Transaction');\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\n\nvar RESET_BATCHED_UPDATES = {\n  initialize: emptyFunction,\n  close: function () {\n    ReactDefaultBatchingStrategy.isBatchingUpdates = false;\n  }\n};\n\nvar FLUSH_BATCHED_UPDATES = {\n  initialize: emptyFunction,\n  close: ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)\n};\n\nvar TRANSACTION_WRAPPERS = [FLUSH_BATCHED_UPDATES, RESET_BATCHED_UPDATES];\n\nfunction ReactDefaultBatchingStrategyTransaction() {\n  this.reinitializeTransaction();\n}\n\n_assign(ReactDefaultBatchingStrategyTransaction.prototype, Transaction, {\n  getTransactionWrappers: function () {\n    return TRANSACTION_WRAPPERS;\n  }\n});\n\nvar transaction = new ReactDefaultBatchingStrategyTransaction();\n\nvar ReactDefaultBatchingStrategy = {\n  isBatchingUpdates: false,\n\n  /**\n   * Call the provided function in a context within which calls to `setState`\n   * and friends are batched such that components aren't updated unnecessarily.\n   */\n  batchedUpdates: function (callback, a, b, c, d, e) {\n    var alreadyBatchingUpdates = ReactDefaultBatchingStrategy.isBatchingUpdates;\n\n    ReactDefaultBatchingStrategy.isBatchingUpdates = true;\n\n    // The code is written this way to avoid extra allocations\n    if (alreadyBatchingUpdates) {\n      return callback(a, b, c, d, e);\n    } else {\n      return transaction.perform(callback, null, a, b, c, d, e);\n    }\n  }\n};\n\nmodule.exports = ReactDefaultBatchingStrategy;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactDefaultBatchingStrategy.js\n// module id = 107\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar ARIADOMPropertyConfig = require('./ARIADOMPropertyConfig');\nvar BeforeInputEventPlugin = require('./BeforeInputEventPlugin');\nvar ChangeEventPlugin = require('./ChangeEventPlugin');\nvar DefaultEventPluginOrder = require('./DefaultEventPluginOrder');\nvar EnterLeaveEventPlugin = require('./EnterLeaveEventPlugin');\nvar HTMLDOMPropertyConfig = require('./HTMLDOMPropertyConfig');\nvar ReactComponentBrowserEnvironment = require('./ReactComponentBrowserEnvironment');\nvar ReactDOMComponent = require('./ReactDOMComponent');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar ReactDOMEmptyComponent = require('./ReactDOMEmptyComponent');\nvar ReactDOMTreeTraversal = require('./ReactDOMTreeTraversal');\nvar ReactDOMTextComponent = require('./ReactDOMTextComponent');\nvar ReactDefaultBatchingStrategy = require('./ReactDefaultBatchingStrategy');\nvar ReactEventListener = require('./ReactEventListener');\nvar ReactInjection = require('./ReactInjection');\nvar ReactReconcileTransaction = require('./ReactReconcileTransaction');\nvar SVGDOMPropertyConfig = require('./SVGDOMPropertyConfig');\nvar SelectEventPlugin = require('./SelectEventPlugin');\nvar SimpleEventPlugin = require('./SimpleEventPlugin');\n\nvar alreadyInjected = false;\n\nfunction inject() {\n  if (alreadyInjected) {\n    // TODO: This is currently true because these injections are shared between\n    // the client and the server package. They should be built independently\n    // and not share any injection state. Then this problem will be solved.\n    return;\n  }\n  alreadyInjected = true;\n\n  ReactInjection.EventEmitter.injectReactEventListener(ReactEventListener);\n\n  /**\n   * Inject modules for resolving DOM hierarchy and plugin ordering.\n   */\n  ReactInjection.EventPluginHub.injectEventPluginOrder(DefaultEventPluginOrder);\n  ReactInjection.EventPluginUtils.injectComponentTree(ReactDOMComponentTree);\n  ReactInjection.EventPluginUtils.injectTreeTraversal(ReactDOMTreeTraversal);\n\n  /**\n   * Some important event plugins included by default (without having to require\n   * them).\n   */\n  ReactInjection.EventPluginHub.injectEventPluginsByName({\n    SimpleEventPlugin: SimpleEventPlugin,\n    EnterLeaveEventPlugin: EnterLeaveEventPlugin,\n    ChangeEventPlugin: ChangeEventPlugin,\n    SelectEventPlugin: SelectEventPlugin,\n    BeforeInputEventPlugin: BeforeInputEventPlugin\n  });\n\n  ReactInjection.HostComponent.injectGenericComponentClass(ReactDOMComponent);\n\n  ReactInjection.HostComponent.injectTextComponentClass(ReactDOMTextComponent);\n\n  ReactInjection.DOMProperty.injectDOMPropertyConfig(ARIADOMPropertyConfig);\n  ReactInjection.DOMProperty.injectDOMPropertyConfig(HTMLDOMPropertyConfig);\n  ReactInjection.DOMProperty.injectDOMPropertyConfig(SVGDOMPropertyConfig);\n\n  ReactInjection.EmptyComponent.injectEmptyComponentFactory(function (instantiate) {\n    return new ReactDOMEmptyComponent(instantiate);\n  });\n\n  ReactInjection.Updates.injectReconcileTransaction(ReactReconcileTransaction);\n  ReactInjection.Updates.injectBatchingStrategy(ReactDefaultBatchingStrategy);\n\n  ReactInjection.Component.injectEnvironment(ReactComponentBrowserEnvironment);\n}\n\nmodule.exports = {\n  inject: inject\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactDefaultInjection.js\n// module id = 108\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar EventPluginHub = require('./EventPluginHub');\n\nfunction runEventQueueInBatch(events) {\n  EventPluginHub.enqueueEvents(events);\n  EventPluginHub.processEventQueue(false);\n}\n\nvar ReactEventEmitterMixin = {\n\n  /**\n   * Streams a fired top-level event to `EventPluginHub` where plugins have the\n   * opportunity to create `ReactEvent`s to be dispatched.\n   */\n  handleTopLevel: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n    var events = EventPluginHub.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);\n    runEventQueueInBatch(events);\n  }\n};\n\nmodule.exports = ReactEventEmitterMixin;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactEventEmitterMixin.js\n// module id = 110\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar EventListener = require('fbjs/lib/EventListener');\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\nvar PooledClass = require('./PooledClass');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar ReactUpdates = require('./ReactUpdates');\n\nvar getEventTarget = require('./getEventTarget');\nvar getUnboundedScrollPosition = require('fbjs/lib/getUnboundedScrollPosition');\n\n/**\n * Find the deepest React component completely containing the root of the\n * passed-in instance (for use when entire React trees are nested within each\n * other). If React trees are not nested, returns null.\n */\nfunction findParent(inst) {\n  // TODO: It may be a good idea to cache this to prevent unnecessary DOM\n  // traversal, but caching is difficult to do correctly without using a\n  // mutation observer to listen for all DOM changes.\n  while (inst._hostParent) {\n    inst = inst._hostParent;\n  }\n  var rootNode = ReactDOMComponentTree.getNodeFromInstance(inst);\n  var container = rootNode.parentNode;\n  return ReactDOMComponentTree.getClosestInstanceFromNode(container);\n}\n\n// Used to store ancestor hierarchy in top level callback\nfunction TopLevelCallbackBookKeeping(topLevelType, nativeEvent) {\n  this.topLevelType = topLevelType;\n  this.nativeEvent = nativeEvent;\n  this.ancestors = [];\n}\n_assign(TopLevelCallbackBookKeeping.prototype, {\n  destructor: function () {\n    this.topLevelType = null;\n    this.nativeEvent = null;\n    this.ancestors.length = 0;\n  }\n});\nPooledClass.addPoolingTo(TopLevelCallbackBookKeeping, PooledClass.twoArgumentPooler);\n\nfunction handleTopLevelImpl(bookKeeping) {\n  var nativeEventTarget = getEventTarget(bookKeeping.nativeEvent);\n  var targetInst = ReactDOMComponentTree.getClosestInstanceFromNode(nativeEventTarget);\n\n  // Loop through the hierarchy, in case there's any nested components.\n  // It's important that we build the array of ancestors before calling any\n  // event handlers, because event handlers can modify the DOM, leading to\n  // inconsistencies with ReactMount's node cache. See #1105.\n  var ancestor = targetInst;\n  do {\n    bookKeeping.ancestors.push(ancestor);\n    ancestor = ancestor && findParent(ancestor);\n  } while (ancestor);\n\n  for (var i = 0; i < bookKeeping.ancestors.length; i++) {\n    targetInst = bookKeeping.ancestors[i];\n    ReactEventListener._handleTopLevel(bookKeeping.topLevelType, targetInst, bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));\n  }\n}\n\nfunction scrollValueMonitor(cb) {\n  var scrollPosition = getUnboundedScrollPosition(window);\n  cb(scrollPosition);\n}\n\nvar ReactEventListener = {\n  _enabled: true,\n  _handleTopLevel: null,\n\n  WINDOW_HANDLE: ExecutionEnvironment.canUseDOM ? window : null,\n\n  setHandleTopLevel: function (handleTopLevel) {\n    ReactEventListener._handleTopLevel = handleTopLevel;\n  },\n\n  setEnabled: function (enabled) {\n    ReactEventListener._enabled = !!enabled;\n  },\n\n  isEnabled: function () {\n    return ReactEventListener._enabled;\n  },\n\n  /**\n   * Traps top-level events by using event bubbling.\n   *\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {string} handlerBaseName Event name (e.g. \"click\").\n   * @param {object} element Element on which to attach listener.\n   * @return {?object} An object with a remove function which will forcefully\n   *                  remove the listener.\n   * @internal\n   */\n  trapBubbledEvent: function (topLevelType, handlerBaseName, element) {\n    if (!element) {\n      return null;\n    }\n    return EventListener.listen(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));\n  },\n\n  /**\n   * Traps a top-level event by using event capturing.\n   *\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {string} handlerBaseName Event name (e.g. \"click\").\n   * @param {object} element Element on which to attach listener.\n   * @return {?object} An object with a remove function which will forcefully\n   *                  remove the listener.\n   * @internal\n   */\n  trapCapturedEvent: function (topLevelType, handlerBaseName, element) {\n    if (!element) {\n      return null;\n    }\n    return EventListener.capture(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));\n  },\n\n  monitorScrollValue: function (refresh) {\n    var callback = scrollValueMonitor.bind(null, refresh);\n    EventListener.listen(window, 'scroll', callback);\n  },\n\n  dispatchEvent: function (topLevelType, nativeEvent) {\n    if (!ReactEventListener._enabled) {\n      return;\n    }\n\n    var bookKeeping = TopLevelCallbackBookKeeping.getPooled(topLevelType, nativeEvent);\n    try {\n      // Event queue being processed in the same cycle allows\n      // `preventDefault`.\n      ReactUpdates.batchedUpdates(handleTopLevelImpl, bookKeeping);\n    } finally {\n      TopLevelCallbackBookKeeping.release(bookKeeping);\n    }\n  }\n};\n\nmodule.exports = ReactEventListener;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactEventListener.js\n// module id = 111\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar DOMProperty = require('./DOMProperty');\nvar EventPluginHub = require('./EventPluginHub');\nvar EventPluginUtils = require('./EventPluginUtils');\nvar ReactComponentEnvironment = require('./ReactComponentEnvironment');\nvar ReactEmptyComponent = require('./ReactEmptyComponent');\nvar ReactBrowserEventEmitter = require('./ReactBrowserEventEmitter');\nvar ReactHostComponent = require('./ReactHostComponent');\nvar ReactUpdates = require('./ReactUpdates');\n\nvar ReactInjection = {\n  Component: ReactComponentEnvironment.injection,\n  DOMProperty: DOMProperty.injection,\n  EmptyComponent: ReactEmptyComponent.injection,\n  EventPluginHub: EventPluginHub.injection,\n  EventPluginUtils: EventPluginUtils.injection,\n  EventEmitter: ReactBrowserEventEmitter.injection,\n  HostComponent: ReactHostComponent.injection,\n  Updates: ReactUpdates.injection\n};\n\nmodule.exports = ReactInjection;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactInjection.js\n// module id = 112\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar adler32 = require('./adler32');\n\nvar TAG_END = /\\/?>/;\nvar COMMENT_START = /^<\\!\\-\\-/;\n\nvar ReactMarkupChecksum = {\n  CHECKSUM_ATTR_NAME: 'data-react-checksum',\n\n  /**\n   * @param {string} markup Markup string\n   * @return {string} Markup string with checksum attribute attached\n   */\n  addChecksumToMarkup: function (markup) {\n    var checksum = adler32(markup);\n\n    // Add checksum (handle both parent tags, comments and self-closing tags)\n    if (COMMENT_START.test(markup)) {\n      return markup;\n    } else {\n      return markup.replace(TAG_END, ' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '=\"' + checksum + '\"$&');\n    }\n  },\n\n  /**\n   * @param {string} markup to use\n   * @param {DOMElement} element root React element\n   * @returns {boolean} whether or not the markup is the same\n   */\n  canReuseMarkup: function (markup, element) {\n    var existingChecksum = element.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);\n    existingChecksum = existingChecksum && parseInt(existingChecksum, 10);\n    var markupChecksum = adler32(markup);\n    return markupChecksum === existingChecksum;\n  }\n};\n\nmodule.exports = ReactMarkupChecksum;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactMarkupChecksum.js\n// module id = 113\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar ReactComponentEnvironment = require('./ReactComponentEnvironment');\nvar ReactInstanceMap = require('./ReactInstanceMap');\nvar ReactInstrumentation = require('./ReactInstrumentation');\n\nvar ReactCurrentOwner = require('react/lib/ReactCurrentOwner');\nvar ReactReconciler = require('./ReactReconciler');\nvar ReactChildReconciler = require('./ReactChildReconciler');\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar flattenChildren = require('./flattenChildren');\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * Make an update for markup to be rendered and inserted at a supplied index.\n *\n * @param {string} markup Markup that renders into an element.\n * @param {number} toIndex Destination index.\n * @private\n */\nfunction makeInsertMarkup(markup, afterNode, toIndex) {\n  // NOTE: Null values reduce hidden classes.\n  return {\n    type: 'INSERT_MARKUP',\n    content: markup,\n    fromIndex: null,\n    fromNode: null,\n    toIndex: toIndex,\n    afterNode: afterNode\n  };\n}\n\n/**\n * Make an update for moving an existing element to another index.\n *\n * @param {number} fromIndex Source index of the existing element.\n * @param {number} toIndex Destination index of the element.\n * @private\n */\nfunction makeMove(child, afterNode, toIndex) {\n  // NOTE: Null values reduce hidden classes.\n  return {\n    type: 'MOVE_EXISTING',\n    content: null,\n    fromIndex: child._mountIndex,\n    fromNode: ReactReconciler.getHostNode(child),\n    toIndex: toIndex,\n    afterNode: afterNode\n  };\n}\n\n/**\n * Make an update for removing an element at an index.\n *\n * @param {number} fromIndex Index of the element to remove.\n * @private\n */\nfunction makeRemove(child, node) {\n  // NOTE: Null values reduce hidden classes.\n  return {\n    type: 'REMOVE_NODE',\n    content: null,\n    fromIndex: child._mountIndex,\n    fromNode: node,\n    toIndex: null,\n    afterNode: null\n  };\n}\n\n/**\n * Make an update for setting the markup of a node.\n *\n * @param {string} markup Markup that renders into an element.\n * @private\n */\nfunction makeSetMarkup(markup) {\n  // NOTE: Null values reduce hidden classes.\n  return {\n    type: 'SET_MARKUP',\n    content: markup,\n    fromIndex: null,\n    fromNode: null,\n    toIndex: null,\n    afterNode: null\n  };\n}\n\n/**\n * Make an update for setting the text content.\n *\n * @param {string} textContent Text content to set.\n * @private\n */\nfunction makeTextContent(textContent) {\n  // NOTE: Null values reduce hidden classes.\n  return {\n    type: 'TEXT_CONTENT',\n    content: textContent,\n    fromIndex: null,\n    fromNode: null,\n    toIndex: null,\n    afterNode: null\n  };\n}\n\n/**\n * Push an update, if any, onto the queue. Creates a new queue if none is\n * passed and always returns the queue. Mutative.\n */\nfunction enqueue(queue, update) {\n  if (update) {\n    queue = queue || [];\n    queue.push(update);\n  }\n  return queue;\n}\n\n/**\n * Processes any enqueued updates.\n *\n * @private\n */\nfunction processQueue(inst, updateQueue) {\n  ReactComponentEnvironment.processChildrenUpdates(inst, updateQueue);\n}\n\nvar setChildrenForInstrumentation = emptyFunction;\nif (process.env.NODE_ENV !== 'production') {\n  var getDebugID = function (inst) {\n    if (!inst._debugID) {\n      // Check for ART-like instances. TODO: This is silly/gross.\n      var internal;\n      if (internal = ReactInstanceMap.get(inst)) {\n        inst = internal;\n      }\n    }\n    return inst._debugID;\n  };\n  setChildrenForInstrumentation = function (children) {\n    var debugID = getDebugID(this);\n    // TODO: React Native empty components are also multichild.\n    // This means they still get into this method but don't have _debugID.\n    if (debugID !== 0) {\n      ReactInstrumentation.debugTool.onSetChildren(debugID, children ? Object.keys(children).map(function (key) {\n        return children[key]._debugID;\n      }) : []);\n    }\n  };\n}\n\n/**\n * ReactMultiChild are capable of reconciling multiple children.\n *\n * @class ReactMultiChild\n * @internal\n */\nvar ReactMultiChild = {\n\n  /**\n   * Provides common functionality for components that must reconcile multiple\n   * children. This is used by `ReactDOMComponent` to mount, update, and\n   * unmount child components.\n   *\n   * @lends {ReactMultiChild.prototype}\n   */\n  Mixin: {\n\n    _reconcilerInstantiateChildren: function (nestedChildren, transaction, context) {\n      if (process.env.NODE_ENV !== 'production') {\n        var selfDebugID = getDebugID(this);\n        if (this._currentElement) {\n          try {\n            ReactCurrentOwner.current = this._currentElement._owner;\n            return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context, selfDebugID);\n          } finally {\n            ReactCurrentOwner.current = null;\n          }\n        }\n      }\n      return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context);\n    },\n\n    _reconcilerUpdateChildren: function (prevChildren, nextNestedChildrenElements, mountImages, removedNodes, transaction, context) {\n      var nextChildren;\n      var selfDebugID = 0;\n      if (process.env.NODE_ENV !== 'production') {\n        selfDebugID = getDebugID(this);\n        if (this._currentElement) {\n          try {\n            ReactCurrentOwner.current = this._currentElement._owner;\n            nextChildren = flattenChildren(nextNestedChildrenElements, selfDebugID);\n          } finally {\n            ReactCurrentOwner.current = null;\n          }\n          ReactChildReconciler.updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, this, this._hostContainerInfo, context, selfDebugID);\n          return nextChildren;\n        }\n      }\n      nextChildren = flattenChildren(nextNestedChildrenElements, selfDebugID);\n      ReactChildReconciler.updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, this, this._hostContainerInfo, context, selfDebugID);\n      return nextChildren;\n    },\n\n    /**\n     * Generates a \"mount image\" for each of the supplied children. In the case\n     * of `ReactDOMComponent`, a mount image is a string of markup.\n     *\n     * @param {?object} nestedChildren Nested child maps.\n     * @return {array} An array of mounted representations.\n     * @internal\n     */\n    mountChildren: function (nestedChildren, transaction, context) {\n      var children = this._reconcilerInstantiateChildren(nestedChildren, transaction, context);\n      this._renderedChildren = children;\n\n      var mountImages = [];\n      var index = 0;\n      for (var name in children) {\n        if (children.hasOwnProperty(name)) {\n          var child = children[name];\n          var selfDebugID = 0;\n          if (process.env.NODE_ENV !== 'production') {\n            selfDebugID = getDebugID(this);\n          }\n          var mountImage = ReactReconciler.mountComponent(child, transaction, this, this._hostContainerInfo, context, selfDebugID);\n          child._mountIndex = index++;\n          mountImages.push(mountImage);\n        }\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        setChildrenForInstrumentation.call(this, children);\n      }\n\n      return mountImages;\n    },\n\n    /**\n     * Replaces any rendered children with a text content string.\n     *\n     * @param {string} nextContent String of content.\n     * @internal\n     */\n    updateTextContent: function (nextContent) {\n      var prevChildren = this._renderedChildren;\n      // Remove any rendered children.\n      ReactChildReconciler.unmountChildren(prevChildren, false);\n      for (var name in prevChildren) {\n        if (prevChildren.hasOwnProperty(name)) {\n          !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'updateTextContent called on non-empty component.') : _prodInvariant('118') : void 0;\n        }\n      }\n      // Set new text content.\n      var updates = [makeTextContent(nextContent)];\n      processQueue(this, updates);\n    },\n\n    /**\n     * Replaces any rendered children with a markup string.\n     *\n     * @param {string} nextMarkup String of markup.\n     * @internal\n     */\n    updateMarkup: function (nextMarkup) {\n      var prevChildren = this._renderedChildren;\n      // Remove any rendered children.\n      ReactChildReconciler.unmountChildren(prevChildren, false);\n      for (var name in prevChildren) {\n        if (prevChildren.hasOwnProperty(name)) {\n          !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'updateTextContent called on non-empty component.') : _prodInvariant('118') : void 0;\n        }\n      }\n      var updates = [makeSetMarkup(nextMarkup)];\n      processQueue(this, updates);\n    },\n\n    /**\n     * Updates the rendered children with new children.\n     *\n     * @param {?object} nextNestedChildrenElements Nested child element maps.\n     * @param {ReactReconcileTransaction} transaction\n     * @internal\n     */\n    updateChildren: function (nextNestedChildrenElements, transaction, context) {\n      // Hook used by React ART\n      this._updateChildren(nextNestedChildrenElements, transaction, context);\n    },\n\n    /**\n     * @param {?object} nextNestedChildrenElements Nested child element maps.\n     * @param {ReactReconcileTransaction} transaction\n     * @final\n     * @protected\n     */\n    _updateChildren: function (nextNestedChildrenElements, transaction, context) {\n      var prevChildren = this._renderedChildren;\n      var removedNodes = {};\n      var mountImages = [];\n      var nextChildren = this._reconcilerUpdateChildren(prevChildren, nextNestedChildrenElements, mountImages, removedNodes, transaction, context);\n      if (!nextChildren && !prevChildren) {\n        return;\n      }\n      var updates = null;\n      var name;\n      // `nextIndex` will increment for each child in `nextChildren`, but\n      // `lastIndex` will be the last index visited in `prevChildren`.\n      var nextIndex = 0;\n      var lastIndex = 0;\n      // `nextMountIndex` will increment for each newly mounted child.\n      var nextMountIndex = 0;\n      var lastPlacedNode = null;\n      for (name in nextChildren) {\n        if (!nextChildren.hasOwnProperty(name)) {\n          continue;\n        }\n        var prevChild = prevChildren && prevChildren[name];\n        var nextChild = nextChildren[name];\n        if (prevChild === nextChild) {\n          updates = enqueue(updates, this.moveChild(prevChild, lastPlacedNode, nextIndex, lastIndex));\n          lastIndex = Math.max(prevChild._mountIndex, lastIndex);\n          prevChild._mountIndex = nextIndex;\n        } else {\n          if (prevChild) {\n            // Update `lastIndex` before `_mountIndex` gets unset by unmounting.\n            lastIndex = Math.max(prevChild._mountIndex, lastIndex);\n            // The `removedNodes` loop below will actually remove the child.\n          }\n          // The child must be instantiated before it's mounted.\n          updates = enqueue(updates, this._mountChildAtIndex(nextChild, mountImages[nextMountIndex], lastPlacedNode, nextIndex, transaction, context));\n          nextMountIndex++;\n        }\n        nextIndex++;\n        lastPlacedNode = ReactReconciler.getHostNode(nextChild);\n      }\n      // Remove children that are no longer present.\n      for (name in removedNodes) {\n        if (removedNodes.hasOwnProperty(name)) {\n          updates = enqueue(updates, this._unmountChild(prevChildren[name], removedNodes[name]));\n        }\n      }\n      if (updates) {\n        processQueue(this, updates);\n      }\n      this._renderedChildren = nextChildren;\n\n      if (process.env.NODE_ENV !== 'production') {\n        setChildrenForInstrumentation.call(this, nextChildren);\n      }\n    },\n\n    /**\n     * Unmounts all rendered children. This should be used to clean up children\n     * when this component is unmounted. It does not actually perform any\n     * backend operations.\n     *\n     * @internal\n     */\n    unmountChildren: function (safely) {\n      var renderedChildren = this._renderedChildren;\n      ReactChildReconciler.unmountChildren(renderedChildren, safely);\n      this._renderedChildren = null;\n    },\n\n    /**\n     * Moves a child component to the supplied index.\n     *\n     * @param {ReactComponent} child Component to move.\n     * @param {number} toIndex Destination index of the element.\n     * @param {number} lastIndex Last index visited of the siblings of `child`.\n     * @protected\n     */\n    moveChild: function (child, afterNode, toIndex, lastIndex) {\n      // If the index of `child` is less than `lastIndex`, then it needs to\n      // be moved. Otherwise, we do not need to move it because a child will be\n      // inserted or moved before `child`.\n      if (child._mountIndex < lastIndex) {\n        return makeMove(child, afterNode, toIndex);\n      }\n    },\n\n    /**\n     * Creates a child component.\n     *\n     * @param {ReactComponent} child Component to create.\n     * @param {string} mountImage Markup to insert.\n     * @protected\n     */\n    createChild: function (child, afterNode, mountImage) {\n      return makeInsertMarkup(mountImage, afterNode, child._mountIndex);\n    },\n\n    /**\n     * Removes a child component.\n     *\n     * @param {ReactComponent} child Child to remove.\n     * @protected\n     */\n    removeChild: function (child, node) {\n      return makeRemove(child, node);\n    },\n\n    /**\n     * Mounts a child with the supplied name.\n     *\n     * NOTE: This is part of `updateChildren` and is here for readability.\n     *\n     * @param {ReactComponent} child Component to mount.\n     * @param {string} name Name of the child.\n     * @param {number} index Index at which to insert the child.\n     * @param {ReactReconcileTransaction} transaction\n     * @private\n     */\n    _mountChildAtIndex: function (child, mountImage, afterNode, index, transaction, context) {\n      child._mountIndex = index;\n      return this.createChild(child, afterNode, mountImage);\n    },\n\n    /**\n     * Unmounts a rendered child.\n     *\n     * NOTE: This is part of `updateChildren` and is here for readability.\n     *\n     * @param {ReactComponent} child Component to unmount.\n     * @private\n     */\n    _unmountChild: function (child, node) {\n      var update = this.removeChild(child, node);\n      child._mountIndex = null;\n      return update;\n    }\n\n  }\n\n};\n\nmodule.exports = ReactMultiChild;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactMultiChild.js\n// module id = 114\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * @param {?object} object\n * @return {boolean} True if `object` is a valid owner.\n * @final\n */\nfunction isValidOwner(object) {\n  return !!(object && typeof object.attachRef === 'function' && typeof object.detachRef === 'function');\n}\n\n/**\n * ReactOwners are capable of storing references to owned components.\n *\n * All components are capable of //being// referenced by owner components, but\n * only ReactOwner components are capable of //referencing// owned components.\n * The named reference is known as a \"ref\".\n *\n * Refs are available when mounted and updated during reconciliation.\n *\n *   var MyComponent = React.createClass({\n *     render: function() {\n *       return (\n *         <div onClick={this.handleClick}>\n *           <CustomComponent ref=\"custom\" />\n *         </div>\n *       );\n *     },\n *     handleClick: function() {\n *       this.refs.custom.handleClick();\n *     },\n *     componentDidMount: function() {\n *       this.refs.custom.initialize();\n *     }\n *   });\n *\n * Refs should rarely be used. When refs are used, they should only be done to\n * control data that is not handled by React's data flow.\n *\n * @class ReactOwner\n */\nvar ReactOwner = {\n  /**\n   * Adds a component by ref to an owner component.\n   *\n   * @param {ReactComponent} component Component to reference.\n   * @param {string} ref Name by which to refer to the component.\n   * @param {ReactOwner} owner Component on which to record the ref.\n   * @final\n   * @internal\n   */\n  addComponentAsRefTo: function (component, ref, owner) {\n    !isValidOwner(owner) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'addComponentAsRefTo(...): Only a ReactOwner can have refs. You might be adding a ref to a component that was not created inside a component\\'s `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).') : _prodInvariant('119') : void 0;\n    owner.attachRef(ref, component);\n  },\n\n  /**\n   * Removes a component by ref from an owner component.\n   *\n   * @param {ReactComponent} component Component to dereference.\n   * @param {string} ref Name of the ref to remove.\n   * @param {ReactOwner} owner Component on which the ref is recorded.\n   * @final\n   * @internal\n   */\n  removeComponentAsRefFrom: function (component, ref, owner) {\n    !isValidOwner(owner) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'removeComponentAsRefFrom(...): Only a ReactOwner can have refs. You might be removing a ref to a component that was not created inside a component\\'s `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).') : _prodInvariant('120') : void 0;\n    var ownerPublicInstance = owner.getPublicInstance();\n    // Check that `component`'s owner is still alive and that `component` is still the current ref\n    // because we do not want to detach the ref if another component stole it.\n    if (ownerPublicInstance && ownerPublicInstance.refs[ref] === component.getPublicInstance()) {\n      owner.detachRef(ref);\n    }\n  }\n\n};\n\nmodule.exports = ReactOwner;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactOwner.js\n// module id = 115\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactPropTypesSecret.js\n// module id = 116\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar CallbackQueue = require('./CallbackQueue');\nvar PooledClass = require('./PooledClass');\nvar ReactBrowserEventEmitter = require('./ReactBrowserEventEmitter');\nvar ReactInputSelection = require('./ReactInputSelection');\nvar ReactInstrumentation = require('./ReactInstrumentation');\nvar Transaction = require('./Transaction');\nvar ReactUpdateQueue = require('./ReactUpdateQueue');\n\n/**\n * Ensures that, when possible, the selection range (currently selected text\n * input) is not disturbed by performing the transaction.\n */\nvar SELECTION_RESTORATION = {\n  /**\n   * @return {Selection} Selection information.\n   */\n  initialize: ReactInputSelection.getSelectionInformation,\n  /**\n   * @param {Selection} sel Selection information returned from `initialize`.\n   */\n  close: ReactInputSelection.restoreSelection\n};\n\n/**\n * Suppresses events (blur/focus) that could be inadvertently dispatched due to\n * high level DOM manipulations (like temporarily removing a text input from the\n * DOM).\n */\nvar EVENT_SUPPRESSION = {\n  /**\n   * @return {boolean} The enabled status of `ReactBrowserEventEmitter` before\n   * the reconciliation.\n   */\n  initialize: function () {\n    var currentlyEnabled = ReactBrowserEventEmitter.isEnabled();\n    ReactBrowserEventEmitter.setEnabled(false);\n    return currentlyEnabled;\n  },\n\n  /**\n   * @param {boolean} previouslyEnabled Enabled status of\n   *   `ReactBrowserEventEmitter` before the reconciliation occurred. `close`\n   *   restores the previous value.\n   */\n  close: function (previouslyEnabled) {\n    ReactBrowserEventEmitter.setEnabled(previouslyEnabled);\n  }\n};\n\n/**\n * Provides a queue for collecting `componentDidMount` and\n * `componentDidUpdate` callbacks during the transaction.\n */\nvar ON_DOM_READY_QUEUEING = {\n  /**\n   * Initializes the internal `onDOMReady` queue.\n   */\n  initialize: function () {\n    this.reactMountReady.reset();\n  },\n\n  /**\n   * After DOM is flushed, invoke all registered `onDOMReady` callbacks.\n   */\n  close: function () {\n    this.reactMountReady.notifyAll();\n  }\n};\n\n/**\n * Executed within the scope of the `Transaction` instance. Consider these as\n * being member methods, but with an implied ordering while being isolated from\n * each other.\n */\nvar TRANSACTION_WRAPPERS = [SELECTION_RESTORATION, EVENT_SUPPRESSION, ON_DOM_READY_QUEUEING];\n\nif (process.env.NODE_ENV !== 'production') {\n  TRANSACTION_WRAPPERS.push({\n    initialize: ReactInstrumentation.debugTool.onBeginFlush,\n    close: ReactInstrumentation.debugTool.onEndFlush\n  });\n}\n\n/**\n * Currently:\n * - The order that these are listed in the transaction is critical:\n * - Suppresses events.\n * - Restores selection range.\n *\n * Future:\n * - Restore document/overflow scroll positions that were unintentionally\n *   modified via DOM insertions above the top viewport boundary.\n * - Implement/integrate with customized constraint based layout system and keep\n *   track of which dimensions must be remeasured.\n *\n * @class ReactReconcileTransaction\n */\nfunction ReactReconcileTransaction(useCreateElement) {\n  this.reinitializeTransaction();\n  // Only server-side rendering really needs this option (see\n  // `ReactServerRendering`), but server-side uses\n  // `ReactServerRenderingTransaction` instead. This option is here so that it's\n  // accessible and defaults to false when `ReactDOMComponent` and\n  // `ReactDOMTextComponent` checks it in `mountComponent`.`\n  this.renderToStaticMarkup = false;\n  this.reactMountReady = CallbackQueue.getPooled(null);\n  this.useCreateElement = useCreateElement;\n}\n\nvar Mixin = {\n  /**\n   * @see Transaction\n   * @abstract\n   * @final\n   * @return {array<object>} List of operation wrap procedures.\n   *   TODO: convert to array<TransactionWrapper>\n   */\n  getTransactionWrappers: function () {\n    return TRANSACTION_WRAPPERS;\n  },\n\n  /**\n   * @return {object} The queue to collect `onDOMReady` callbacks with.\n   */\n  getReactMountReady: function () {\n    return this.reactMountReady;\n  },\n\n  /**\n   * @return {object} The queue to collect React async events.\n   */\n  getUpdateQueue: function () {\n    return ReactUpdateQueue;\n  },\n\n  /**\n   * Save current transaction state -- if the return value from this method is\n   * passed to `rollback`, the transaction will be reset to that state.\n   */\n  checkpoint: function () {\n    // reactMountReady is the our only stateful wrapper\n    return this.reactMountReady.checkpoint();\n  },\n\n  rollback: function (checkpoint) {\n    this.reactMountReady.rollback(checkpoint);\n  },\n\n  /**\n   * `PooledClass` looks for this, and will invoke this before allowing this\n   * instance to be reused.\n   */\n  destructor: function () {\n    CallbackQueue.release(this.reactMountReady);\n    this.reactMountReady = null;\n  }\n};\n\n_assign(ReactReconcileTransaction.prototype, Transaction, Mixin);\n\nPooledClass.addPoolingTo(ReactReconcileTransaction);\n\nmodule.exports = ReactReconcileTransaction;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactReconcileTransaction.js\n// module id = 117\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar ReactOwner = require('./ReactOwner');\n\nvar ReactRef = {};\n\nfunction attachRef(ref, component, owner) {\n  if (typeof ref === 'function') {\n    ref(component.getPublicInstance());\n  } else {\n    // Legacy ref\n    ReactOwner.addComponentAsRefTo(component, ref, owner);\n  }\n}\n\nfunction detachRef(ref, component, owner) {\n  if (typeof ref === 'function') {\n    ref(null);\n  } else {\n    // Legacy ref\n    ReactOwner.removeComponentAsRefFrom(component, ref, owner);\n  }\n}\n\nReactRef.attachRefs = function (instance, element) {\n  if (element === null || typeof element !== 'object') {\n    return;\n  }\n  var ref = element.ref;\n  if (ref != null) {\n    attachRef(ref, instance, element._owner);\n  }\n};\n\nReactRef.shouldUpdateRefs = function (prevElement, nextElement) {\n  // If either the owner or a `ref` has changed, make sure the newest owner\n  // has stored a reference to `this`, and the previous owner (if different)\n  // has forgotten the reference to `this`. We use the element instead\n  // of the public this.props because the post processing cannot determine\n  // a ref. The ref conceptually lives on the element.\n\n  // TODO: Should this even be possible? The owner cannot change because\n  // it's forbidden by shouldUpdateReactComponent. The ref can change\n  // if you swap the keys of but not the refs. Reconsider where this check\n  // is made. It probably belongs where the key checking and\n  // instantiateReactComponent is done.\n\n  var prevRef = null;\n  var prevOwner = null;\n  if (prevElement !== null && typeof prevElement === 'object') {\n    prevRef = prevElement.ref;\n    prevOwner = prevElement._owner;\n  }\n\n  var nextRef = null;\n  var nextOwner = null;\n  if (nextElement !== null && typeof nextElement === 'object') {\n    nextRef = nextElement.ref;\n    nextOwner = nextElement._owner;\n  }\n\n  return prevRef !== nextRef ||\n  // If owner changes but we have an unchanged function ref, don't update refs\n  typeof nextRef === 'string' && nextOwner !== prevOwner;\n};\n\nReactRef.detachRefs = function (instance, element) {\n  if (element === null || typeof element !== 'object') {\n    return;\n  }\n  var ref = element.ref;\n  if (ref != null) {\n    detachRef(ref, instance, element._owner);\n  }\n};\n\nmodule.exports = ReactRef;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactRef.js\n// module id = 118\n// module chunks = 0","/**\n * Copyright 2014-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar PooledClass = require('./PooledClass');\nvar Transaction = require('./Transaction');\nvar ReactInstrumentation = require('./ReactInstrumentation');\nvar ReactServerUpdateQueue = require('./ReactServerUpdateQueue');\n\n/**\n * Executed within the scope of the `Transaction` instance. Consider these as\n * being member methods, but with an implied ordering while being isolated from\n * each other.\n */\nvar TRANSACTION_WRAPPERS = [];\n\nif (process.env.NODE_ENV !== 'production') {\n  TRANSACTION_WRAPPERS.push({\n    initialize: ReactInstrumentation.debugTool.onBeginFlush,\n    close: ReactInstrumentation.debugTool.onEndFlush\n  });\n}\n\nvar noopCallbackQueue = {\n  enqueue: function () {}\n};\n\n/**\n * @class ReactServerRenderingTransaction\n * @param {boolean} renderToStaticMarkup\n */\nfunction ReactServerRenderingTransaction(renderToStaticMarkup) {\n  this.reinitializeTransaction();\n  this.renderToStaticMarkup = renderToStaticMarkup;\n  this.useCreateElement = false;\n  this.updateQueue = new ReactServerUpdateQueue(this);\n}\n\nvar Mixin = {\n  /**\n   * @see Transaction\n   * @abstract\n   * @final\n   * @return {array} Empty list of operation wrap procedures.\n   */\n  getTransactionWrappers: function () {\n    return TRANSACTION_WRAPPERS;\n  },\n\n  /**\n   * @return {object} The queue to collect `onDOMReady` callbacks with.\n   */\n  getReactMountReady: function () {\n    return noopCallbackQueue;\n  },\n\n  /**\n   * @return {object} The queue to collect React async events.\n   */\n  getUpdateQueue: function () {\n    return this.updateQueue;\n  },\n\n  /**\n   * `PooledClass` looks for this, and will invoke this before allowing this\n   * instance to be reused.\n   */\n  destructor: function () {},\n\n  checkpoint: function () {},\n\n  rollback: function () {}\n};\n\n_assign(ReactServerRenderingTransaction.prototype, Transaction, Mixin);\n\nPooledClass.addPoolingTo(ReactServerRenderingTransaction);\n\nmodule.exports = ReactServerRenderingTransaction;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactServerRenderingTransaction.js\n// module id = 119\n// module chunks = 0","/**\n * Copyright 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ReactUpdateQueue = require('./ReactUpdateQueue');\n\nvar warning = require('fbjs/lib/warning');\n\nfunction warnNoop(publicInstance, callerName) {\n  if (process.env.NODE_ENV !== 'production') {\n    var constructor = publicInstance.constructor;\n    process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): Can only update a mounting component. ' + 'This usually means you called %s() outside componentWillMount() on the server. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;\n  }\n}\n\n/**\n * This is the update queue used for server rendering.\n * It delegates to ReactUpdateQueue while server rendering is in progress and\n * switches to ReactNoopUpdateQueue after the transaction has completed.\n * @class ReactServerUpdateQueue\n * @param {Transaction} transaction\n */\n\nvar ReactServerUpdateQueue = function () {\n  function ReactServerUpdateQueue(transaction) {\n    _classCallCheck(this, ReactServerUpdateQueue);\n\n    this.transaction = transaction;\n  }\n\n  /**\n   * Checks whether or not this composite component is mounted.\n   * @param {ReactClass} publicInstance The instance we want to test.\n   * @return {boolean} True if mounted, false otherwise.\n   * @protected\n   * @final\n   */\n\n\n  ReactServerUpdateQueue.prototype.isMounted = function isMounted(publicInstance) {\n    return false;\n  };\n\n  /**\n   * Enqueue a callback that will be executed after all the pending updates\n   * have processed.\n   *\n   * @param {ReactClass} publicInstance The instance to use as `this` context.\n   * @param {?function} callback Called after state is updated.\n   * @internal\n   */\n\n\n  ReactServerUpdateQueue.prototype.enqueueCallback = function enqueueCallback(publicInstance, callback, callerName) {\n    if (this.transaction.isInTransaction()) {\n      ReactUpdateQueue.enqueueCallback(publicInstance, callback, callerName);\n    }\n  };\n\n  /**\n   * Forces an update. This should only be invoked when it is known with\n   * certainty that we are **not** in a DOM transaction.\n   *\n   * You may want to call this when you know that some deeper aspect of the\n   * component's state has changed but `setState` was not called.\n   *\n   * This will not invoke `shouldComponentUpdate`, but it will invoke\n   * `componentWillUpdate` and `componentDidUpdate`.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @internal\n   */\n\n\n  ReactServerUpdateQueue.prototype.enqueueForceUpdate = function enqueueForceUpdate(publicInstance) {\n    if (this.transaction.isInTransaction()) {\n      ReactUpdateQueue.enqueueForceUpdate(publicInstance);\n    } else {\n      warnNoop(publicInstance, 'forceUpdate');\n    }\n  };\n\n  /**\n   * Replaces all of the state. Always use this or `setState` to mutate state.\n   * You should treat `this.state` as immutable.\n   *\n   * There is no guarantee that `this.state` will be immediately updated, so\n   * accessing `this.state` after calling this method may return the old value.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object|function} completeState Next state.\n   * @internal\n   */\n\n\n  ReactServerUpdateQueue.prototype.enqueueReplaceState = function enqueueReplaceState(publicInstance, completeState) {\n    if (this.transaction.isInTransaction()) {\n      ReactUpdateQueue.enqueueReplaceState(publicInstance, completeState);\n    } else {\n      warnNoop(publicInstance, 'replaceState');\n    }\n  };\n\n  /**\n   * Sets a subset of the state. This only exists because _pendingState is\n   * internal. This provides a merging strategy that is not available to deep\n   * properties which is confusing. TODO: Expose pendingState or don't use it\n   * during the merge.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object|function} partialState Next partial state to be merged with state.\n   * @internal\n   */\n\n\n  ReactServerUpdateQueue.prototype.enqueueSetState = function enqueueSetState(publicInstance, partialState) {\n    if (this.transaction.isInTransaction()) {\n      ReactUpdateQueue.enqueueSetState(publicInstance, partialState);\n    } else {\n      warnNoop(publicInstance, 'setState');\n    }\n  };\n\n  return ReactServerUpdateQueue;\n}();\n\nmodule.exports = ReactServerUpdateQueue;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactServerUpdateQueue.js\n// module id = 120\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nmodule.exports = '15.5.4';\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactVersion.js\n// module id = 121\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar NS = {\n  xlink: 'http://www.w3.org/1999/xlink',\n  xml: 'http://www.w3.org/XML/1998/namespace'\n};\n\n// We use attributes for everything SVG so let's avoid some duplication and run\n// code instead.\n// The following are all specified in the HTML config already so we exclude here.\n// - class (as className)\n// - color\n// - height\n// - id\n// - lang\n// - max\n// - media\n// - method\n// - min\n// - name\n// - style\n// - target\n// - type\n// - width\nvar ATTRS = {\n  accentHeight: 'accent-height',\n  accumulate: 0,\n  additive: 0,\n  alignmentBaseline: 'alignment-baseline',\n  allowReorder: 'allowReorder',\n  alphabetic: 0,\n  amplitude: 0,\n  arabicForm: 'arabic-form',\n  ascent: 0,\n  attributeName: 'attributeName',\n  attributeType: 'attributeType',\n  autoReverse: 'autoReverse',\n  azimuth: 0,\n  baseFrequency: 'baseFrequency',\n  baseProfile: 'baseProfile',\n  baselineShift: 'baseline-shift',\n  bbox: 0,\n  begin: 0,\n  bias: 0,\n  by: 0,\n  calcMode: 'calcMode',\n  capHeight: 'cap-height',\n  clip: 0,\n  clipPath: 'clip-path',\n  clipRule: 'clip-rule',\n  clipPathUnits: 'clipPathUnits',\n  colorInterpolation: 'color-interpolation',\n  colorInterpolationFilters: 'color-interpolation-filters',\n  colorProfile: 'color-profile',\n  colorRendering: 'color-rendering',\n  contentScriptType: 'contentScriptType',\n  contentStyleType: 'contentStyleType',\n  cursor: 0,\n  cx: 0,\n  cy: 0,\n  d: 0,\n  decelerate: 0,\n  descent: 0,\n  diffuseConstant: 'diffuseConstant',\n  direction: 0,\n  display: 0,\n  divisor: 0,\n  dominantBaseline: 'dominant-baseline',\n  dur: 0,\n  dx: 0,\n  dy: 0,\n  edgeMode: 'edgeMode',\n  elevation: 0,\n  enableBackground: 'enable-background',\n  end: 0,\n  exponent: 0,\n  externalResourcesRequired: 'externalResourcesRequired',\n  fill: 0,\n  fillOpacity: 'fill-opacity',\n  fillRule: 'fill-rule',\n  filter: 0,\n  filterRes: 'filterRes',\n  filterUnits: 'filterUnits',\n  floodColor: 'flood-color',\n  floodOpacity: 'flood-opacity',\n  focusable: 0,\n  fontFamily: 'font-family',\n  fontSize: 'font-size',\n  fontSizeAdjust: 'font-size-adjust',\n  fontStretch: 'font-stretch',\n  fontStyle: 'font-style',\n  fontVariant: 'font-variant',\n  fontWeight: 'font-weight',\n  format: 0,\n  from: 0,\n  fx: 0,\n  fy: 0,\n  g1: 0,\n  g2: 0,\n  glyphName: 'glyph-name',\n  glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n  glyphOrientationVertical: 'glyph-orientation-vertical',\n  glyphRef: 'glyphRef',\n  gradientTransform: 'gradientTransform',\n  gradientUnits: 'gradientUnits',\n  hanging: 0,\n  horizAdvX: 'horiz-adv-x',\n  horizOriginX: 'horiz-origin-x',\n  ideographic: 0,\n  imageRendering: 'image-rendering',\n  'in': 0,\n  in2: 0,\n  intercept: 0,\n  k: 0,\n  k1: 0,\n  k2: 0,\n  k3: 0,\n  k4: 0,\n  kernelMatrix: 'kernelMatrix',\n  kernelUnitLength: 'kernelUnitLength',\n  kerning: 0,\n  keyPoints: 'keyPoints',\n  keySplines: 'keySplines',\n  keyTimes: 'keyTimes',\n  lengthAdjust: 'lengthAdjust',\n  letterSpacing: 'letter-spacing',\n  lightingColor: 'lighting-color',\n  limitingConeAngle: 'limitingConeAngle',\n  local: 0,\n  markerEnd: 'marker-end',\n  markerMid: 'marker-mid',\n  markerStart: 'marker-start',\n  markerHeight: 'markerHeight',\n  markerUnits: 'markerUnits',\n  markerWidth: 'markerWidth',\n  mask: 0,\n  maskContentUnits: 'maskContentUnits',\n  maskUnits: 'maskUnits',\n  mathematical: 0,\n  mode: 0,\n  numOctaves: 'numOctaves',\n  offset: 0,\n  opacity: 0,\n  operator: 0,\n  order: 0,\n  orient: 0,\n  orientation: 0,\n  origin: 0,\n  overflow: 0,\n  overlinePosition: 'overline-position',\n  overlineThickness: 'overline-thickness',\n  paintOrder: 'paint-order',\n  panose1: 'panose-1',\n  pathLength: 'pathLength',\n  patternContentUnits: 'patternContentUnits',\n  patternTransform: 'patternTransform',\n  patternUnits: 'patternUnits',\n  pointerEvents: 'pointer-events',\n  points: 0,\n  pointsAtX: 'pointsAtX',\n  pointsAtY: 'pointsAtY',\n  pointsAtZ: 'pointsAtZ',\n  preserveAlpha: 'preserveAlpha',\n  preserveAspectRatio: 'preserveAspectRatio',\n  primitiveUnits: 'primitiveUnits',\n  r: 0,\n  radius: 0,\n  refX: 'refX',\n  refY: 'refY',\n  renderingIntent: 'rendering-intent',\n  repeatCount: 'repeatCount',\n  repeatDur: 'repeatDur',\n  requiredExtensions: 'requiredExtensions',\n  requiredFeatures: 'requiredFeatures',\n  restart: 0,\n  result: 0,\n  rotate: 0,\n  rx: 0,\n  ry: 0,\n  scale: 0,\n  seed: 0,\n  shapeRendering: 'shape-rendering',\n  slope: 0,\n  spacing: 0,\n  specularConstant: 'specularConstant',\n  specularExponent: 'specularExponent',\n  speed: 0,\n  spreadMethod: 'spreadMethod',\n  startOffset: 'startOffset',\n  stdDeviation: 'stdDeviation',\n  stemh: 0,\n  stemv: 0,\n  stitchTiles: 'stitchTiles',\n  stopColor: 'stop-color',\n  stopOpacity: 'stop-opacity',\n  strikethroughPosition: 'strikethrough-position',\n  strikethroughThickness: 'strikethrough-thickness',\n  string: 0,\n  stroke: 0,\n  strokeDasharray: 'stroke-dasharray',\n  strokeDashoffset: 'stroke-dashoffset',\n  strokeLinecap: 'stroke-linecap',\n  strokeLinejoin: 'stroke-linejoin',\n  strokeMiterlimit: 'stroke-miterlimit',\n  strokeOpacity: 'stroke-opacity',\n  strokeWidth: 'stroke-width',\n  surfaceScale: 'surfaceScale',\n  systemLanguage: 'systemLanguage',\n  tableValues: 'tableValues',\n  targetX: 'targetX',\n  targetY: 'targetY',\n  textAnchor: 'text-anchor',\n  textDecoration: 'text-decoration',\n  textRendering: 'text-rendering',\n  textLength: 'textLength',\n  to: 0,\n  transform: 0,\n  u1: 0,\n  u2: 0,\n  underlinePosition: 'underline-position',\n  underlineThickness: 'underline-thickness',\n  unicode: 0,\n  unicodeBidi: 'unicode-bidi',\n  unicodeRange: 'unicode-range',\n  unitsPerEm: 'units-per-em',\n  vAlphabetic: 'v-alphabetic',\n  vHanging: 'v-hanging',\n  vIdeographic: 'v-ideographic',\n  vMathematical: 'v-mathematical',\n  values: 0,\n  vectorEffect: 'vector-effect',\n  version: 0,\n  vertAdvY: 'vert-adv-y',\n  vertOriginX: 'vert-origin-x',\n  vertOriginY: 'vert-origin-y',\n  viewBox: 'viewBox',\n  viewTarget: 'viewTarget',\n  visibility: 0,\n  widths: 0,\n  wordSpacing: 'word-spacing',\n  writingMode: 'writing-mode',\n  x: 0,\n  xHeight: 'x-height',\n  x1: 0,\n  x2: 0,\n  xChannelSelector: 'xChannelSelector',\n  xlinkActuate: 'xlink:actuate',\n  xlinkArcrole: 'xlink:arcrole',\n  xlinkHref: 'xlink:href',\n  xlinkRole: 'xlink:role',\n  xlinkShow: 'xlink:show',\n  xlinkTitle: 'xlink:title',\n  xlinkType: 'xlink:type',\n  xmlBase: 'xml:base',\n  xmlns: 0,\n  xmlnsXlink: 'xmlns:xlink',\n  xmlLang: 'xml:lang',\n  xmlSpace: 'xml:space',\n  y: 0,\n  y1: 0,\n  y2: 0,\n  yChannelSelector: 'yChannelSelector',\n  z: 0,\n  zoomAndPan: 'zoomAndPan'\n};\n\nvar SVGDOMPropertyConfig = {\n  Properties: {},\n  DOMAttributeNamespaces: {\n    xlinkActuate: NS.xlink,\n    xlinkArcrole: NS.xlink,\n    xlinkHref: NS.xlink,\n    xlinkRole: NS.xlink,\n    xlinkShow: NS.xlink,\n    xlinkTitle: NS.xlink,\n    xlinkType: NS.xlink,\n    xmlBase: NS.xml,\n    xmlLang: NS.xml,\n    xmlSpace: NS.xml\n  },\n  DOMAttributeNames: {}\n};\n\nObject.keys(ATTRS).forEach(function (key) {\n  SVGDOMPropertyConfig.Properties[key] = 0;\n  if (ATTRS[key]) {\n    SVGDOMPropertyConfig.DOMAttributeNames[key] = ATTRS[key];\n  }\n});\n\nmodule.exports = SVGDOMPropertyConfig;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/SVGDOMPropertyConfig.js\n// module id = 122\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar EventPropagators = require('./EventPropagators');\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar ReactInputSelection = require('./ReactInputSelection');\nvar SyntheticEvent = require('./SyntheticEvent');\n\nvar getActiveElement = require('fbjs/lib/getActiveElement');\nvar isTextInputElement = require('./isTextInputElement');\nvar shallowEqual = require('fbjs/lib/shallowEqual');\n\nvar skipSelectionChangeEvent = ExecutionEnvironment.canUseDOM && 'documentMode' in document && document.documentMode <= 11;\n\nvar eventTypes = {\n  select: {\n    phasedRegistrationNames: {\n      bubbled: 'onSelect',\n      captured: 'onSelectCapture'\n    },\n    dependencies: ['topBlur', 'topContextMenu', 'topFocus', 'topKeyDown', 'topKeyUp', 'topMouseDown', 'topMouseUp', 'topSelectionChange']\n  }\n};\n\nvar activeElement = null;\nvar activeElementInst = null;\nvar lastSelection = null;\nvar mouseDown = false;\n\n// Track whether a listener exists for this plugin. If none exist, we do\n// not extract events. See #3639.\nvar hasListener = false;\n\n/**\n * Get an object which is a unique representation of the current selection.\n *\n * The return value will not be consistent across nodes or browsers, but\n * two identical selections on the same node will return identical objects.\n *\n * @param {DOMElement} node\n * @return {object}\n */\nfunction getSelection(node) {\n  if ('selectionStart' in node && ReactInputSelection.hasSelectionCapabilities(node)) {\n    return {\n      start: node.selectionStart,\n      end: node.selectionEnd\n    };\n  } else if (window.getSelection) {\n    var selection = window.getSelection();\n    return {\n      anchorNode: selection.anchorNode,\n      anchorOffset: selection.anchorOffset,\n      focusNode: selection.focusNode,\n      focusOffset: selection.focusOffset\n    };\n  } else if (document.selection) {\n    var range = document.selection.createRange();\n    return {\n      parentElement: range.parentElement(),\n      text: range.text,\n      top: range.boundingTop,\n      left: range.boundingLeft\n    };\n  }\n}\n\n/**\n * Poll selection to see whether it's changed.\n *\n * @param {object} nativeEvent\n * @return {?SyntheticEvent}\n */\nfunction constructSelectEvent(nativeEvent, nativeEventTarget) {\n  // Ensure we have the right element, and that the user is not dragging a\n  // selection (this matches native `select` event behavior). In HTML5, select\n  // fires only on input and textarea thus if there's no focused element we\n  // won't dispatch.\n  if (mouseDown || activeElement == null || activeElement !== getActiveElement()) {\n    return null;\n  }\n\n  // Only fire when selection has actually changed.\n  var currentSelection = getSelection(activeElement);\n  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {\n    lastSelection = currentSelection;\n\n    var syntheticEvent = SyntheticEvent.getPooled(eventTypes.select, activeElementInst, nativeEvent, nativeEventTarget);\n\n    syntheticEvent.type = 'select';\n    syntheticEvent.target = activeElement;\n\n    EventPropagators.accumulateTwoPhaseDispatches(syntheticEvent);\n\n    return syntheticEvent;\n  }\n\n  return null;\n}\n\n/**\n * This plugin creates an `onSelect` event that normalizes select events\n * across form elements.\n *\n * Supported elements are:\n * - input (see `isTextInputElement`)\n * - textarea\n * - contentEditable\n *\n * This differs from native browser implementations in the following ways:\n * - Fires on contentEditable fields as well as inputs.\n * - Fires for collapsed selection.\n * - Fires after user input.\n */\nvar SelectEventPlugin = {\n\n  eventTypes: eventTypes,\n\n  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n    if (!hasListener) {\n      return null;\n    }\n\n    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;\n\n    switch (topLevelType) {\n      // Track the input node that has focus.\n      case 'topFocus':\n        if (isTextInputElement(targetNode) || targetNode.contentEditable === 'true') {\n          activeElement = targetNode;\n          activeElementInst = targetInst;\n          lastSelection = null;\n        }\n        break;\n      case 'topBlur':\n        activeElement = null;\n        activeElementInst = null;\n        lastSelection = null;\n        break;\n\n      // Don't fire the event while the user is dragging. This matches the\n      // semantics of the native select event.\n      case 'topMouseDown':\n        mouseDown = true;\n        break;\n      case 'topContextMenu':\n      case 'topMouseUp':\n        mouseDown = false;\n        return constructSelectEvent(nativeEvent, nativeEventTarget);\n\n      // Chrome and IE fire non-standard event when selection is changed (and\n      // sometimes when it hasn't). IE's event fires out of order with respect\n      // to key and input events on deletion, so we discard it.\n      //\n      // Firefox doesn't support selectionchange, so check selection status\n      // after each key entry. The selection changes after keydown and before\n      // keyup, but we check on keydown as well in the case of holding down a\n      // key, when multiple keydown events are fired but only one keyup is.\n      // This is also our approach for IE handling, for the reason above.\n      case 'topSelectionChange':\n        if (skipSelectionChangeEvent) {\n          break;\n        }\n      // falls through\n      case 'topKeyDown':\n      case 'topKeyUp':\n        return constructSelectEvent(nativeEvent, nativeEventTarget);\n    }\n\n    return null;\n  },\n\n  didPutListener: function (inst, registrationName, listener) {\n    if (registrationName === 'onSelect') {\n      hasListener = true;\n    }\n  }\n};\n\nmodule.exports = SelectEventPlugin;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/SelectEventPlugin.js\n// module id = 123\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar EventListener = require('fbjs/lib/EventListener');\nvar EventPropagators = require('./EventPropagators');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar SyntheticAnimationEvent = require('./SyntheticAnimationEvent');\nvar SyntheticClipboardEvent = require('./SyntheticClipboardEvent');\nvar SyntheticEvent = require('./SyntheticEvent');\nvar SyntheticFocusEvent = require('./SyntheticFocusEvent');\nvar SyntheticKeyboardEvent = require('./SyntheticKeyboardEvent');\nvar SyntheticMouseEvent = require('./SyntheticMouseEvent');\nvar SyntheticDragEvent = require('./SyntheticDragEvent');\nvar SyntheticTouchEvent = require('./SyntheticTouchEvent');\nvar SyntheticTransitionEvent = require('./SyntheticTransitionEvent');\nvar SyntheticUIEvent = require('./SyntheticUIEvent');\nvar SyntheticWheelEvent = require('./SyntheticWheelEvent');\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar getEventCharCode = require('./getEventCharCode');\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * Turns\n * ['abort', ...]\n * into\n * eventTypes = {\n *   'abort': {\n *     phasedRegistrationNames: {\n *       bubbled: 'onAbort',\n *       captured: 'onAbortCapture',\n *     },\n *     dependencies: ['topAbort'],\n *   },\n *   ...\n * };\n * topLevelEventsToDispatchConfig = {\n *   'topAbort': { sameConfig }\n * };\n */\nvar eventTypes = {};\nvar topLevelEventsToDispatchConfig = {};\n['abort', 'animationEnd', 'animationIteration', 'animationStart', 'blur', 'canPlay', 'canPlayThrough', 'click', 'contextMenu', 'copy', 'cut', 'doubleClick', 'drag', 'dragEnd', 'dragEnter', 'dragExit', 'dragLeave', 'dragOver', 'dragStart', 'drop', 'durationChange', 'emptied', 'encrypted', 'ended', 'error', 'focus', 'input', 'invalid', 'keyDown', 'keyPress', 'keyUp', 'load', 'loadedData', 'loadedMetadata', 'loadStart', 'mouseDown', 'mouseMove', 'mouseOut', 'mouseOver', 'mouseUp', 'paste', 'pause', 'play', 'playing', 'progress', 'rateChange', 'reset', 'scroll', 'seeked', 'seeking', 'stalled', 'submit', 'suspend', 'timeUpdate', 'touchCancel', 'touchEnd', 'touchMove', 'touchStart', 'transitionEnd', 'volumeChange', 'waiting', 'wheel'].forEach(function (event) {\n  var capitalizedEvent = event[0].toUpperCase() + event.slice(1);\n  var onEvent = 'on' + capitalizedEvent;\n  var topEvent = 'top' + capitalizedEvent;\n\n  var type = {\n    phasedRegistrationNames: {\n      bubbled: onEvent,\n      captured: onEvent + 'Capture'\n    },\n    dependencies: [topEvent]\n  };\n  eventTypes[event] = type;\n  topLevelEventsToDispatchConfig[topEvent] = type;\n});\n\nvar onClickListeners = {};\n\nfunction getDictionaryKey(inst) {\n  // Prevents V8 performance issue:\n  // https://github.com/facebook/react/pull/7232\n  return '.' + inst._rootNodeID;\n}\n\nfunction isInteractive(tag) {\n  return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';\n}\n\nvar SimpleEventPlugin = {\n\n  eventTypes: eventTypes,\n\n  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n    var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];\n    if (!dispatchConfig) {\n      return null;\n    }\n    var EventConstructor;\n    switch (topLevelType) {\n      case 'topAbort':\n      case 'topCanPlay':\n      case 'topCanPlayThrough':\n      case 'topDurationChange':\n      case 'topEmptied':\n      case 'topEncrypted':\n      case 'topEnded':\n      case 'topError':\n      case 'topInput':\n      case 'topInvalid':\n      case 'topLoad':\n      case 'topLoadedData':\n      case 'topLoadedMetadata':\n      case 'topLoadStart':\n      case 'topPause':\n      case 'topPlay':\n      case 'topPlaying':\n      case 'topProgress':\n      case 'topRateChange':\n      case 'topReset':\n      case 'topSeeked':\n      case 'topSeeking':\n      case 'topStalled':\n      case 'topSubmit':\n      case 'topSuspend':\n      case 'topTimeUpdate':\n      case 'topVolumeChange':\n      case 'topWaiting':\n        // HTML Events\n        // @see http://www.w3.org/TR/html5/index.html#events-0\n        EventConstructor = SyntheticEvent;\n        break;\n      case 'topKeyPress':\n        // Firefox creates a keypress event for function keys too. This removes\n        // the unwanted keypress events. Enter is however both printable and\n        // non-printable. One would expect Tab to be as well (but it isn't).\n        if (getEventCharCode(nativeEvent) === 0) {\n          return null;\n        }\n      /* falls through */\n      case 'topKeyDown':\n      case 'topKeyUp':\n        EventConstructor = SyntheticKeyboardEvent;\n        break;\n      case 'topBlur':\n      case 'topFocus':\n        EventConstructor = SyntheticFocusEvent;\n        break;\n      case 'topClick':\n        // Firefox creates a click event on right mouse clicks. This removes the\n        // unwanted click events.\n        if (nativeEvent.button === 2) {\n          return null;\n        }\n      /* falls through */\n      case 'topDoubleClick':\n      case 'topMouseDown':\n      case 'topMouseMove':\n      case 'topMouseUp':\n      // TODO: Disabled elements should not respond to mouse events\n      /* falls through */\n      case 'topMouseOut':\n      case 'topMouseOver':\n      case 'topContextMenu':\n        EventConstructor = SyntheticMouseEvent;\n        break;\n      case 'topDrag':\n      case 'topDragEnd':\n      case 'topDragEnter':\n      case 'topDragExit':\n      case 'topDragLeave':\n      case 'topDragOver':\n      case 'topDragStart':\n      case 'topDrop':\n        EventConstructor = SyntheticDragEvent;\n        break;\n      case 'topTouchCancel':\n      case 'topTouchEnd':\n      case 'topTouchMove':\n      case 'topTouchStart':\n        EventConstructor = SyntheticTouchEvent;\n        break;\n      case 'topAnimationEnd':\n      case 'topAnimationIteration':\n      case 'topAnimationStart':\n        EventConstructor = SyntheticAnimationEvent;\n        break;\n      case 'topTransitionEnd':\n        EventConstructor = SyntheticTransitionEvent;\n        break;\n      case 'topScroll':\n        EventConstructor = SyntheticUIEvent;\n        break;\n      case 'topWheel':\n        EventConstructor = SyntheticWheelEvent;\n        break;\n      case 'topCopy':\n      case 'topCut':\n      case 'topPaste':\n        EventConstructor = SyntheticClipboardEvent;\n        break;\n    }\n    !EventConstructor ? process.env.NODE_ENV !== 'production' ? invariant(false, 'SimpleEventPlugin: Unhandled event type, `%s`.', topLevelType) : _prodInvariant('86', topLevelType) : void 0;\n    var event = EventConstructor.getPooled(dispatchConfig, targetInst, nativeEvent, nativeEventTarget);\n    EventPropagators.accumulateTwoPhaseDispatches(event);\n    return event;\n  },\n\n  didPutListener: function (inst, registrationName, listener) {\n    // Mobile Safari does not fire properly bubble click events on\n    // non-interactive elements, which means delegated click listeners do not\n    // fire. The workaround for this bug involves attaching an empty click\n    // listener on the target node.\n    // http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html\n    if (registrationName === 'onClick' && !isInteractive(inst._tag)) {\n      var key = getDictionaryKey(inst);\n      var node = ReactDOMComponentTree.getNodeFromInstance(inst);\n      if (!onClickListeners[key]) {\n        onClickListeners[key] = EventListener.listen(node, 'click', emptyFunction);\n      }\n    }\n  },\n\n  willDeleteListener: function (inst, registrationName) {\n    if (registrationName === 'onClick' && !isInteractive(inst._tag)) {\n      var key = getDictionaryKey(inst);\n      onClickListeners[key].remove();\n      delete onClickListeners[key];\n    }\n  }\n\n};\n\nmodule.exports = SimpleEventPlugin;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/SimpleEventPlugin.js\n// module id = 124\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar SyntheticEvent = require('./SyntheticEvent');\n\n/**\n * @interface Event\n * @see http://www.w3.org/TR/css3-animations/#AnimationEvent-interface\n * @see https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent\n */\nvar AnimationEventInterface = {\n  animationName: null,\n  elapsedTime: null,\n  pseudoElement: null\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticEvent}\n */\nfunction SyntheticAnimationEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticEvent.augmentClass(SyntheticAnimationEvent, AnimationEventInterface);\n\nmodule.exports = SyntheticAnimationEvent;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/SyntheticAnimationEvent.js\n// module id = 125\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar SyntheticEvent = require('./SyntheticEvent');\n\n/**\n * @interface Event\n * @see http://www.w3.org/TR/clipboard-apis/\n */\nvar ClipboardEventInterface = {\n  clipboardData: function (event) {\n    return 'clipboardData' in event ? event.clipboardData : window.clipboardData;\n  }\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticClipboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticEvent.augmentClass(SyntheticClipboardEvent, ClipboardEventInterface);\n\nmodule.exports = SyntheticClipboardEvent;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/SyntheticClipboardEvent.js\n// module id = 126\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar SyntheticEvent = require('./SyntheticEvent');\n\n/**\n * @interface Event\n * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents\n */\nvar CompositionEventInterface = {\n  data: null\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticCompositionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticEvent.augmentClass(SyntheticCompositionEvent, CompositionEventInterface);\n\nmodule.exports = SyntheticCompositionEvent;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/SyntheticCompositionEvent.js\n// module id = 127\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar SyntheticMouseEvent = require('./SyntheticMouseEvent');\n\n/**\n * @interface DragEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar DragEventInterface = {\n  dataTransfer: null\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticDragEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticMouseEvent.augmentClass(SyntheticDragEvent, DragEventInterface);\n\nmodule.exports = SyntheticDragEvent;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/SyntheticDragEvent.js\n// module id = 128\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar SyntheticUIEvent = require('./SyntheticUIEvent');\n\n/**\n * @interface FocusEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar FocusEventInterface = {\n  relatedTarget: null\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticFocusEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticUIEvent.augmentClass(SyntheticFocusEvent, FocusEventInterface);\n\nmodule.exports = SyntheticFocusEvent;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/SyntheticFocusEvent.js\n// module id = 129\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar SyntheticEvent = require('./SyntheticEvent');\n\n/**\n * @interface Event\n * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105\n *      /#events-inputevents\n */\nvar InputEventInterface = {\n  data: null\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticInputEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticEvent.augmentClass(SyntheticInputEvent, InputEventInterface);\n\nmodule.exports = SyntheticInputEvent;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/SyntheticInputEvent.js\n// module id = 130\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar SyntheticUIEvent = require('./SyntheticUIEvent');\n\nvar getEventCharCode = require('./getEventCharCode');\nvar getEventKey = require('./getEventKey');\nvar getEventModifierState = require('./getEventModifierState');\n\n/**\n * @interface KeyboardEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar KeyboardEventInterface = {\n  key: getEventKey,\n  location: null,\n  ctrlKey: null,\n  shiftKey: null,\n  altKey: null,\n  metaKey: null,\n  repeat: null,\n  locale: null,\n  getModifierState: getEventModifierState,\n  // Legacy Interface\n  charCode: function (event) {\n    // `charCode` is the result of a KeyPress event and represents the value of\n    // the actual printable character.\n\n    // KeyPress is deprecated, but its replacement is not yet final and not\n    // implemented in any major browser. Only KeyPress has charCode.\n    if (event.type === 'keypress') {\n      return getEventCharCode(event);\n    }\n    return 0;\n  },\n  keyCode: function (event) {\n    // `keyCode` is the result of a KeyDown/Up event and represents the value of\n    // physical keyboard key.\n\n    // The actual meaning of the value depends on the users' keyboard layout\n    // which cannot be detected. Assuming that it is a US keyboard layout\n    // provides a surprisingly accurate mapping for US and European users.\n    // Due to this, it is left to the user to implement at this time.\n    if (event.type === 'keydown' || event.type === 'keyup') {\n      return event.keyCode;\n    }\n    return 0;\n  },\n  which: function (event) {\n    // `which` is an alias for either `keyCode` or `charCode` depending on the\n    // type of the event.\n    if (event.type === 'keypress') {\n      return getEventCharCode(event);\n    }\n    if (event.type === 'keydown' || event.type === 'keyup') {\n      return event.keyCode;\n    }\n    return 0;\n  }\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticKeyboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticUIEvent.augmentClass(SyntheticKeyboardEvent, KeyboardEventInterface);\n\nmodule.exports = SyntheticKeyboardEvent;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/SyntheticKeyboardEvent.js\n// module id = 131\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar SyntheticUIEvent = require('./SyntheticUIEvent');\n\nvar getEventModifierState = require('./getEventModifierState');\n\n/**\n * @interface TouchEvent\n * @see http://www.w3.org/TR/touch-events/\n */\nvar TouchEventInterface = {\n  touches: null,\n  targetTouches: null,\n  changedTouches: null,\n  altKey: null,\n  metaKey: null,\n  ctrlKey: null,\n  shiftKey: null,\n  getModifierState: getEventModifierState\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticTouchEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticUIEvent.augmentClass(SyntheticTouchEvent, TouchEventInterface);\n\nmodule.exports = SyntheticTouchEvent;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/SyntheticTouchEvent.js\n// module id = 132\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar SyntheticEvent = require('./SyntheticEvent');\n\n/**\n * @interface Event\n * @see http://www.w3.org/TR/2009/WD-css3-transitions-20090320/#transition-events-\n * @see https://developer.mozilla.org/en-US/docs/Web/API/TransitionEvent\n */\nvar TransitionEventInterface = {\n  propertyName: null,\n  elapsedTime: null,\n  pseudoElement: null\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticEvent}\n */\nfunction SyntheticTransitionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticEvent.augmentClass(SyntheticTransitionEvent, TransitionEventInterface);\n\nmodule.exports = SyntheticTransitionEvent;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/SyntheticTransitionEvent.js\n// module id = 133\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar SyntheticMouseEvent = require('./SyntheticMouseEvent');\n\n/**\n * @interface WheelEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar WheelEventInterface = {\n  deltaX: function (event) {\n    return 'deltaX' in event ? event.deltaX :\n    // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).\n    'wheelDeltaX' in event ? -event.wheelDeltaX : 0;\n  },\n  deltaY: function (event) {\n    return 'deltaY' in event ? event.deltaY :\n    // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).\n    'wheelDeltaY' in event ? -event.wheelDeltaY :\n    // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).\n    'wheelDelta' in event ? -event.wheelDelta : 0;\n  },\n  deltaZ: null,\n\n  // Browsers without \"deltaMode\" is reporting in raw wheel delta where one\n  // notch on the scroll is always +/- 120, roughly equivalent to pixels.\n  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or\n  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.\n  deltaMode: null\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticMouseEvent}\n */\nfunction SyntheticWheelEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticMouseEvent.augmentClass(SyntheticWheelEvent, WheelEventInterface);\n\nmodule.exports = SyntheticWheelEvent;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/SyntheticWheelEvent.js\n// module id = 134\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar MOD = 65521;\n\n// adler32 is not cryptographically strong, and is only used to sanity check that\n// markup generated on the server matches the markup generated on the client.\n// This implementation (a modified version of the SheetJS version) has been optimized\n// for our use case, at the expense of conforming to the adler32 specification\n// for non-ascii inputs.\nfunction adler32(data) {\n  var a = 1;\n  var b = 0;\n  var i = 0;\n  var l = data.length;\n  var m = l & ~0x3;\n  while (i < m) {\n    var n = Math.min(i + 4096, m);\n    for (; i < n; i += 4) {\n      b += (a += data.charCodeAt(i)) + (a += data.charCodeAt(i + 1)) + (a += data.charCodeAt(i + 2)) + (a += data.charCodeAt(i + 3));\n    }\n    a %= MOD;\n    b %= MOD;\n  }\n  for (; i < l; i++) {\n    b += a += data.charCodeAt(i);\n  }\n  a %= MOD;\n  b %= MOD;\n  return a | b << 16;\n}\n\nmodule.exports = adler32;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/adler32.js\n// module id = 135\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar CSSProperty = require('./CSSProperty');\nvar warning = require('fbjs/lib/warning');\n\nvar isUnitlessNumber = CSSProperty.isUnitlessNumber;\nvar styleWarnings = {};\n\n/**\n * Convert a value into the proper css writable value. The style name `name`\n * should be logical (no hyphens), as specified\n * in `CSSProperty.isUnitlessNumber`.\n *\n * @param {string} name CSS property name such as `topMargin`.\n * @param {*} value CSS property value such as `10px`.\n * @param {ReactDOMComponent} component\n * @return {string} Normalized style value with dimensions applied.\n */\nfunction dangerousStyleValue(name, value, component) {\n  // Note that we've removed escapeTextForBrowser() calls here since the\n  // whole string will be escaped when the attribute is injected into\n  // the markup. If you provide unsafe user data here they can inject\n  // arbitrary CSS which may be problematic (I couldn't repro this):\n  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet\n  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/\n  // This is not an XSS hole but instead a potential CSS injection issue\n  // which has lead to a greater discussion about how we're going to\n  // trust URLs moving forward. See #2115901\n\n  var isEmpty = value == null || typeof value === 'boolean' || value === '';\n  if (isEmpty) {\n    return '';\n  }\n\n  var isNonNumeric = isNaN(value);\n  if (isNonNumeric || value === 0 || isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]) {\n    return '' + value; // cast to string\n  }\n\n  if (typeof value === 'string') {\n    if (process.env.NODE_ENV !== 'production') {\n      // Allow '0' to pass through without warning. 0 is already special and\n      // doesn't require units, so we don't need to warn about it.\n      if (component && value !== '0') {\n        var owner = component._currentElement._owner;\n        var ownerName = owner ? owner.getName() : null;\n        if (ownerName && !styleWarnings[ownerName]) {\n          styleWarnings[ownerName] = {};\n        }\n        var warned = false;\n        if (ownerName) {\n          var warnings = styleWarnings[ownerName];\n          warned = warnings[name];\n          if (!warned) {\n            warnings[name] = true;\n          }\n        }\n        if (!warned) {\n          process.env.NODE_ENV !== 'production' ? warning(false, 'a `%s` tag (owner: `%s`) was passed a numeric string value ' + 'for CSS property `%s` (value: `%s`) which will be treated ' + 'as a unitless number in a future version of React.', component._currentElement.type, ownerName || 'unknown', name, value) : void 0;\n        }\n      }\n    }\n    value = value.trim();\n  }\n  return value + 'px';\n}\n\nmodule.exports = dangerousStyleValue;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/dangerousStyleValue.js\n// module id = 136\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar ReactCurrentOwner = require('react/lib/ReactCurrentOwner');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar ReactInstanceMap = require('./ReactInstanceMap');\n\nvar getHostComponentFromComposite = require('./getHostComponentFromComposite');\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\n/**\n * Returns the DOM node rendered by this element.\n *\n * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.finddomnode\n *\n * @param {ReactComponent|DOMElement} componentOrElement\n * @return {?DOMElement} The root node of this element.\n */\nfunction findDOMNode(componentOrElement) {\n  if (process.env.NODE_ENV !== 'production') {\n    var owner = ReactCurrentOwner.current;\n    if (owner !== null) {\n      process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing findDOMNode inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;\n      owner._warnedAboutRefsInRender = true;\n    }\n  }\n  if (componentOrElement == null) {\n    return null;\n  }\n  if (componentOrElement.nodeType === 1) {\n    return componentOrElement;\n  }\n\n  var inst = ReactInstanceMap.get(componentOrElement);\n  if (inst) {\n    inst = getHostComponentFromComposite(inst);\n    return inst ? ReactDOMComponentTree.getNodeFromInstance(inst) : null;\n  }\n\n  if (typeof componentOrElement.render === 'function') {\n    !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'findDOMNode was called on an unmounted component.') : _prodInvariant('44') : void 0;\n  } else {\n    !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Element appears to be neither ReactComponent nor DOMNode (keys: %s)', Object.keys(componentOrElement)) : _prodInvariant('45', Object.keys(componentOrElement)) : void 0;\n  }\n}\n\nmodule.exports = findDOMNode;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/findDOMNode.js\n// module id = 137\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar KeyEscapeUtils = require('./KeyEscapeUtils');\nvar traverseAllChildren = require('./traverseAllChildren');\nvar warning = require('fbjs/lib/warning');\n\nvar ReactComponentTreeHook;\n\nif (typeof process !== 'undefined' && process.env && process.env.NODE_ENV === 'test') {\n  // Temporary hack.\n  // Inline requires don't work well with Jest:\n  // https://github.com/facebook/react/issues/7240\n  // Remove the inline requires when we don't need them anymore:\n  // https://github.com/facebook/react/pull/7178\n  ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');\n}\n\n/**\n * @param {function} traverseContext Context passed through traversal.\n * @param {?ReactComponent} child React child component.\n * @param {!string} name String name of key path to child.\n * @param {number=} selfDebugID Optional debugID of the current internal instance.\n */\nfunction flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID) {\n  // We found a component instance.\n  if (traverseContext && typeof traverseContext === 'object') {\n    var result = traverseContext;\n    var keyUnique = result[name] === undefined;\n    if (process.env.NODE_ENV !== 'production') {\n      if (!ReactComponentTreeHook) {\n        ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');\n      }\n      if (!keyUnique) {\n        process.env.NODE_ENV !== 'production' ? warning(false, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeHook.getStackAddendumByID(selfDebugID)) : void 0;\n      }\n    }\n    if (keyUnique && child != null) {\n      result[name] = child;\n    }\n  }\n}\n\n/**\n * Flattens children that are typically specified as `props.children`. Any null\n * children will not be included in the resulting object.\n * @return {!object} flattened children keyed by name.\n */\nfunction flattenChildren(children, selfDebugID) {\n  if (children == null) {\n    return children;\n  }\n  var result = {};\n\n  if (process.env.NODE_ENV !== 'production') {\n    traverseAllChildren(children, function (traverseContext, child, name) {\n      return flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID);\n    }, result);\n  } else {\n    traverseAllChildren(children, flattenSingleChildIntoContext, result);\n  }\n  return result;\n}\n\nmodule.exports = flattenChildren;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/flattenChildren.js\n// module id = 138\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar getEventCharCode = require('./getEventCharCode');\n\n/**\n * Normalization of deprecated HTML5 `key` values\n * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names\n */\nvar normalizeKey = {\n  'Esc': 'Escape',\n  'Spacebar': ' ',\n  'Left': 'ArrowLeft',\n  'Up': 'ArrowUp',\n  'Right': 'ArrowRight',\n  'Down': 'ArrowDown',\n  'Del': 'Delete',\n  'Win': 'OS',\n  'Menu': 'ContextMenu',\n  'Apps': 'ContextMenu',\n  'Scroll': 'ScrollLock',\n  'MozPrintableKey': 'Unidentified'\n};\n\n/**\n * Translation from legacy `keyCode` to HTML5 `key`\n * Only special keys supported, all others depend on keyboard layout or browser\n * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names\n */\nvar translateToKey = {\n  8: 'Backspace',\n  9: 'Tab',\n  12: 'Clear',\n  13: 'Enter',\n  16: 'Shift',\n  17: 'Control',\n  18: 'Alt',\n  19: 'Pause',\n  20: 'CapsLock',\n  27: 'Escape',\n  32: ' ',\n  33: 'PageUp',\n  34: 'PageDown',\n  35: 'End',\n  36: 'Home',\n  37: 'ArrowLeft',\n  38: 'ArrowUp',\n  39: 'ArrowRight',\n  40: 'ArrowDown',\n  45: 'Insert',\n  46: 'Delete',\n  112: 'F1', 113: 'F2', 114: 'F3', 115: 'F4', 116: 'F5', 117: 'F6',\n  118: 'F7', 119: 'F8', 120: 'F9', 121: 'F10', 122: 'F11', 123: 'F12',\n  144: 'NumLock',\n  145: 'ScrollLock',\n  224: 'Meta'\n};\n\n/**\n * @param {object} nativeEvent Native browser event.\n * @return {string} Normalized `key` property.\n */\nfunction getEventKey(nativeEvent) {\n  if (nativeEvent.key) {\n    // Normalize inconsistent values reported by browsers due to\n    // implementations of a working draft specification.\n\n    // FireFox implements `key` but returns `MozPrintableKey` for all\n    // printable characters (normalized to `Unidentified`), ignore it.\n    var key = normalizeKey[nativeEvent.key] || nativeEvent.key;\n    if (key !== 'Unidentified') {\n      return key;\n    }\n  }\n\n  // Browser does not implement `key`, polyfill as much of it as we can.\n  if (nativeEvent.type === 'keypress') {\n    var charCode = getEventCharCode(nativeEvent);\n\n    // The enter-key is technically both printable and non-printable and can\n    // thus be captured by `keypress`, no other non-printable key should.\n    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);\n  }\n  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {\n    // While user keyboard layout determines the actual meaning of each\n    // `keyCode` value, almost all function keys have a universal value.\n    return translateToKey[nativeEvent.keyCode] || 'Unidentified';\n  }\n  return '';\n}\n\nmodule.exports = getEventKey;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/getEventKey.js\n// module id = 139\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\n/* global Symbol */\n\nvar ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\n\n/**\n * Returns the iterator method function contained on the iterable object.\n *\n * Be sure to invoke the function with the iterable as context:\n *\n *     var iteratorFn = getIteratorFn(myIterable);\n *     if (iteratorFn) {\n *       var iterator = iteratorFn.call(myIterable);\n *       ...\n *     }\n *\n * @param {?object} maybeIterable\n * @return {?function}\n */\nfunction getIteratorFn(maybeIterable) {\n  var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);\n  if (typeof iteratorFn === 'function') {\n    return iteratorFn;\n  }\n}\n\nmodule.exports = getIteratorFn;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/getIteratorFn.js\n// module id = 140\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\n/**\n * Given any node return the first leaf node without children.\n *\n * @param {DOMElement|DOMTextNode} node\n * @return {DOMElement|DOMTextNode}\n */\n\nfunction getLeafNode(node) {\n  while (node && node.firstChild) {\n    node = node.firstChild;\n  }\n  return node;\n}\n\n/**\n * Get the next sibling within a container. This will walk up the\n * DOM if a node's siblings have been exhausted.\n *\n * @param {DOMElement|DOMTextNode} node\n * @return {?DOMElement|DOMTextNode}\n */\nfunction getSiblingNode(node) {\n  while (node) {\n    if (node.nextSibling) {\n      return node.nextSibling;\n    }\n    node = node.parentNode;\n  }\n}\n\n/**\n * Get object describing the nodes which contain characters at offset.\n *\n * @param {DOMElement|DOMTextNode} root\n * @param {number} offset\n * @return {?object}\n */\nfunction getNodeForCharacterOffset(root, offset) {\n  var node = getLeafNode(root);\n  var nodeStart = 0;\n  var nodeEnd = 0;\n\n  while (node) {\n    if (node.nodeType === 3) {\n      nodeEnd = nodeStart + node.textContent.length;\n\n      if (nodeStart <= offset && nodeEnd >= offset) {\n        return {\n          node: node,\n          offset: offset - nodeStart\n        };\n      }\n\n      nodeStart = nodeEnd;\n    }\n\n    node = getLeafNode(getSiblingNode(node));\n  }\n}\n\nmodule.exports = getNodeForCharacterOffset;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/getNodeForCharacterOffset.js\n// module id = 141\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\n\n/**\n * Generate a mapping of standard vendor prefixes using the defined style property and event name.\n *\n * @param {string} styleProp\n * @param {string} eventName\n * @returns {object}\n */\nfunction makePrefixMap(styleProp, eventName) {\n  var prefixes = {};\n\n  prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();\n  prefixes['Webkit' + styleProp] = 'webkit' + eventName;\n  prefixes['Moz' + styleProp] = 'moz' + eventName;\n  prefixes['ms' + styleProp] = 'MS' + eventName;\n  prefixes['O' + styleProp] = 'o' + eventName.toLowerCase();\n\n  return prefixes;\n}\n\n/**\n * A list of event names to a configurable list of vendor prefixes.\n */\nvar vendorPrefixes = {\n  animationend: makePrefixMap('Animation', 'AnimationEnd'),\n  animationiteration: makePrefixMap('Animation', 'AnimationIteration'),\n  animationstart: makePrefixMap('Animation', 'AnimationStart'),\n  transitionend: makePrefixMap('Transition', 'TransitionEnd')\n};\n\n/**\n * Event names that have already been detected and prefixed (if applicable).\n */\nvar prefixedEventNames = {};\n\n/**\n * Element to check for prefixes on.\n */\nvar style = {};\n\n/**\n * Bootstrap if a DOM exists.\n */\nif (ExecutionEnvironment.canUseDOM) {\n  style = document.createElement('div').style;\n\n  // On some platforms, in particular some releases of Android 4.x,\n  // the un-prefixed \"animation\" and \"transition\" properties are defined on the\n  // style object but the events that fire will still be prefixed, so we need\n  // to check if the un-prefixed events are usable, and if not remove them from the map.\n  if (!('AnimationEvent' in window)) {\n    delete vendorPrefixes.animationend.animation;\n    delete vendorPrefixes.animationiteration.animation;\n    delete vendorPrefixes.animationstart.animation;\n  }\n\n  // Same as above\n  if (!('TransitionEvent' in window)) {\n    delete vendorPrefixes.transitionend.transition;\n  }\n}\n\n/**\n * Attempts to determine the correct vendor prefixed event name.\n *\n * @param {string} eventName\n * @returns {string}\n */\nfunction getVendorPrefixedEventName(eventName) {\n  if (prefixedEventNames[eventName]) {\n    return prefixedEventNames[eventName];\n  } else if (!vendorPrefixes[eventName]) {\n    return eventName;\n  }\n\n  var prefixMap = vendorPrefixes[eventName];\n\n  for (var styleProp in prefixMap) {\n    if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {\n      return prefixedEventNames[eventName] = prefixMap[styleProp];\n    }\n  }\n\n  return '';\n}\n\nmodule.exports = getVendorPrefixedEventName;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/getVendorPrefixedEventName.js\n// module id = 142\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar escapeTextContentForBrowser = require('./escapeTextContentForBrowser');\n\n/**\n * Escapes attribute value to prevent scripting attacks.\n *\n * @param {*} value Value to escape.\n * @return {string} An escaped string.\n */\nfunction quoteAttributeValueForBrowser(value) {\n  return '\"' + escapeTextContentForBrowser(value) + '\"';\n}\n\nmodule.exports = quoteAttributeValueForBrowser;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/quoteAttributeValueForBrowser.js\n// module id = 143\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar ReactMount = require('./ReactMount');\n\nmodule.exports = ReactMount.renderSubtreeIntoContainer;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/renderSubtreeIntoContainer.js\n// module id = 144\n// module chunks = 0","\"use strict\";\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks\n */\n\nvar _hyphenPattern = /-(.)/g;\n\n/**\n * Camelcases a hyphenated string, for example:\n *\n *   > camelize('background-color')\n *   < \"backgroundColor\"\n *\n * @param {string} string\n * @return {string}\n */\nfunction camelize(string) {\n  return string.replace(_hyphenPattern, function (_, character) {\n    return character.toUpperCase();\n  });\n}\n\nmodule.exports = camelize;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/~/fbjs/lib/camelize.js\n// module id = 145\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks\n */\n\n'use strict';\n\nvar camelize = require('./camelize');\n\nvar msPattern = /^-ms-/;\n\n/**\n * Camelcases a hyphenated CSS property name, for example:\n *\n *   > camelizeStyleName('background-color')\n *   < \"backgroundColor\"\n *   > camelizeStyleName('-moz-transition')\n *   < \"MozTransition\"\n *   > camelizeStyleName('-ms-transition')\n *   < \"msTransition\"\n *\n * As Andi Smith suggests\n * (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix\n * is converted to lowercase `ms`.\n *\n * @param {string} string\n * @return {string}\n */\nfunction camelizeStyleName(string) {\n  return camelize(string.replace(msPattern, 'ms-'));\n}\n\nmodule.exports = camelizeStyleName;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/~/fbjs/lib/camelizeStyleName.js\n// module id = 146\n// module chunks = 0","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\nvar isTextNode = require('./isTextNode');\n\n/*eslint-disable no-bitwise */\n\n/**\n * Checks if a given DOM node contains or is another DOM node.\n */\nfunction containsNode(outerNode, innerNode) {\n  if (!outerNode || !innerNode) {\n    return false;\n  } else if (outerNode === innerNode) {\n    return true;\n  } else if (isTextNode(outerNode)) {\n    return false;\n  } else if (isTextNode(innerNode)) {\n    return containsNode(outerNode, innerNode.parentNode);\n  } else if ('contains' in outerNode) {\n    return outerNode.contains(innerNode);\n  } else if (outerNode.compareDocumentPosition) {\n    return !!(outerNode.compareDocumentPosition(innerNode) & 16);\n  } else {\n    return false;\n  }\n}\n\nmodule.exports = containsNode;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/~/fbjs/lib/containsNode.js\n// module id = 147\n// module chunks = 0","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks\n */\n\nvar invariant = require('./invariant');\n\n/**\n * Convert array-like objects to arrays.\n *\n * This API assumes the caller knows the contents of the data type. For less\n * well defined inputs use createArrayFromMixed.\n *\n * @param {object|function|filelist} obj\n * @return {array}\n */\nfunction toArray(obj) {\n  var length = obj.length;\n\n  // Some browsers builtin objects can report typeof 'function' (e.g. NodeList\n  // in old versions of Safari).\n  !(!Array.isArray(obj) && (typeof obj === 'object' || typeof obj === 'function')) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Array-like object expected') : invariant(false) : void 0;\n\n  !(typeof length === 'number') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object needs a length property') : invariant(false) : void 0;\n\n  !(length === 0 || length - 1 in obj) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object should have keys for indices') : invariant(false) : void 0;\n\n  !(typeof obj.callee !== 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object can\\'t be `arguments`. Use rest params ' + '(function(...args) {}) or Array.from() instead.') : invariant(false) : void 0;\n\n  // Old IE doesn't give collections access to hasOwnProperty. Assume inputs\n  // without method will throw during the slice call and skip straight to the\n  // fallback.\n  if (obj.hasOwnProperty) {\n    try {\n      return Array.prototype.slice.call(obj);\n    } catch (e) {\n      // IE < 9 does not support Array#slice on collections objects\n    }\n  }\n\n  // Fall back to copying key by key. This assumes all keys have a value,\n  // so will not preserve sparsely populated inputs.\n  var ret = Array(length);\n  for (var ii = 0; ii < length; ii++) {\n    ret[ii] = obj[ii];\n  }\n  return ret;\n}\n\n/**\n * Perform a heuristic test to determine if an object is \"array-like\".\n *\n *   A monk asked Joshu, a Zen master, \"Has a dog Buddha nature?\"\n *   Joshu replied: \"Mu.\"\n *\n * This function determines if its argument has \"array nature\": it returns\n * true if the argument is an actual array, an `arguments' object, or an\n * HTMLCollection (e.g. node.childNodes or node.getElementsByTagName()).\n *\n * It will return false for other array-like objects like Filelist.\n *\n * @param {*} obj\n * @return {boolean}\n */\nfunction hasArrayNature(obj) {\n  return (\n    // not null/false\n    !!obj && (\n    // arrays are objects, NodeLists are functions in Safari\n    typeof obj == 'object' || typeof obj == 'function') &&\n    // quacks like an array\n    'length' in obj &&\n    // not window\n    !('setInterval' in obj) &&\n    // no DOM node should be considered an array-like\n    // a 'select' element has 'length' and 'item' properties on IE8\n    typeof obj.nodeType != 'number' && (\n    // a real array\n    Array.isArray(obj) ||\n    // arguments\n    'callee' in obj ||\n    // HTMLCollection/NodeList\n    'item' in obj)\n  );\n}\n\n/**\n * Ensure that the argument is an array by wrapping it in an array if it is not.\n * Creates a copy of the argument if it is already an array.\n *\n * This is mostly useful idiomatically:\n *\n *   var createArrayFromMixed = require('createArrayFromMixed');\n *\n *   function takesOneOrMoreThings(things) {\n *     things = createArrayFromMixed(things);\n *     ...\n *   }\n *\n * This allows you to treat `things' as an array, but accept scalars in the API.\n *\n * If you need to convert an array-like object, like `arguments`, into an array\n * use toArray instead.\n *\n * @param {*} obj\n * @return {array}\n */\nfunction createArrayFromMixed(obj) {\n  if (!hasArrayNature(obj)) {\n    return [obj];\n  } else if (Array.isArray(obj)) {\n    return obj.slice();\n  } else {\n    return toArray(obj);\n  }\n}\n\nmodule.exports = createArrayFromMixed;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/~/fbjs/lib/createArrayFromMixed.js\n// module id = 148\n// module chunks = 0","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks\n */\n\n/*eslint-disable fb-www/unsafe-html*/\n\nvar ExecutionEnvironment = require('./ExecutionEnvironment');\n\nvar createArrayFromMixed = require('./createArrayFromMixed');\nvar getMarkupWrap = require('./getMarkupWrap');\nvar invariant = require('./invariant');\n\n/**\n * Dummy container used to render all markup.\n */\nvar dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;\n\n/**\n * Pattern used by `getNodeName`.\n */\nvar nodeNamePattern = /^\\s*<(\\w+)/;\n\n/**\n * Extracts the `nodeName` of the first element in a string of markup.\n *\n * @param {string} markup String of markup.\n * @return {?string} Node name of the supplied markup.\n */\nfunction getNodeName(markup) {\n  var nodeNameMatch = markup.match(nodeNamePattern);\n  return nodeNameMatch && nodeNameMatch[1].toLowerCase();\n}\n\n/**\n * Creates an array containing the nodes rendered from the supplied markup. The\n * optionally supplied `handleScript` function will be invoked once for each\n * <script> element that is rendered. If no `handleScript` function is supplied,\n * an exception is thrown if any <script> elements are rendered.\n *\n * @param {string} markup A string of valid HTML markup.\n * @param {?function} handleScript Invoked once for each rendered <script>.\n * @return {array<DOMElement|DOMTextNode>} An array of rendered nodes.\n */\nfunction createNodesFromMarkup(markup, handleScript) {\n  var node = dummyNode;\n  !!!dummyNode ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createNodesFromMarkup dummy not initialized') : invariant(false) : void 0;\n  var nodeName = getNodeName(markup);\n\n  var wrap = nodeName && getMarkupWrap(nodeName);\n  if (wrap) {\n    node.innerHTML = wrap[1] + markup + wrap[2];\n\n    var wrapDepth = wrap[0];\n    while (wrapDepth--) {\n      node = node.lastChild;\n    }\n  } else {\n    node.innerHTML = markup;\n  }\n\n  var scripts = node.getElementsByTagName('script');\n  if (scripts.length) {\n    !handleScript ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createNodesFromMarkup(...): Unexpected <script> element rendered.') : invariant(false) : void 0;\n    createArrayFromMixed(scripts).forEach(handleScript);\n  }\n\n  var nodes = Array.from(node.childNodes);\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n  return nodes;\n}\n\nmodule.exports = createNodesFromMarkup;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/~/fbjs/lib/createNodesFromMarkup.js\n// module id = 149\n// module chunks = 0","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n/*eslint-disable fb-www/unsafe-html */\n\nvar ExecutionEnvironment = require('./ExecutionEnvironment');\n\nvar invariant = require('./invariant');\n\n/**\n * Dummy container used to detect which wraps are necessary.\n */\nvar dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;\n\n/**\n * Some browsers cannot use `innerHTML` to render certain elements standalone,\n * so we wrap them, render the wrapped nodes, then extract the desired node.\n *\n * In IE8, certain elements cannot render alone, so wrap all elements ('*').\n */\n\nvar shouldWrap = {};\n\nvar selectWrap = [1, '<select multiple=\"true\">', '</select>'];\nvar tableWrap = [1, '<table>', '</table>'];\nvar trWrap = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\nvar svgWrap = [1, '<svg xmlns=\"http://www.w3.org/2000/svg\">', '</svg>'];\n\nvar markupWrap = {\n  '*': [1, '?<div>', '</div>'],\n\n  'area': [1, '<map>', '</map>'],\n  'col': [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],\n  'legend': [1, '<fieldset>', '</fieldset>'],\n  'param': [1, '<object>', '</object>'],\n  'tr': [2, '<table><tbody>', '</tbody></table>'],\n\n  'optgroup': selectWrap,\n  'option': selectWrap,\n\n  'caption': tableWrap,\n  'colgroup': tableWrap,\n  'tbody': tableWrap,\n  'tfoot': tableWrap,\n  'thead': tableWrap,\n\n  'td': trWrap,\n  'th': trWrap\n};\n\n// Initialize the SVG elements since we know they'll always need to be wrapped\n// consistently. If they are created inside a <div> they will be initialized in\n// the wrong namespace (and will not display).\nvar svgElements = ['circle', 'clipPath', 'defs', 'ellipse', 'g', 'image', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'text', 'tspan'];\nsvgElements.forEach(function (nodeName) {\n  markupWrap[nodeName] = svgWrap;\n  shouldWrap[nodeName] = true;\n});\n\n/**\n * Gets the markup wrap configuration for the supplied `nodeName`.\n *\n * NOTE: This lazily detects which wraps are necessary for the current browser.\n *\n * @param {string} nodeName Lowercase `nodeName`.\n * @return {?array} Markup wrap configuration, if applicable.\n */\nfunction getMarkupWrap(nodeName) {\n  !!!dummyNode ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Markup wrapping node not initialized') : invariant(false) : void 0;\n  if (!markupWrap.hasOwnProperty(nodeName)) {\n    nodeName = '*';\n  }\n  if (!shouldWrap.hasOwnProperty(nodeName)) {\n    if (nodeName === '*') {\n      dummyNode.innerHTML = '<link />';\n    } else {\n      dummyNode.innerHTML = '<' + nodeName + '></' + nodeName + '>';\n    }\n    shouldWrap[nodeName] = !dummyNode.firstChild;\n  }\n  return shouldWrap[nodeName] ? markupWrap[nodeName] : null;\n}\n\nmodule.exports = getMarkupWrap;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/~/fbjs/lib/getMarkupWrap.js\n// module id = 150\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks\n */\n\n'use strict';\n\n/**\n * Gets the scroll position of the supplied element or window.\n *\n * The return values are unbounded, unlike `getScrollPosition`. This means they\n * may be negative or exceed the element boundaries (which is possible using\n * inertial scrolling).\n *\n * @param {DOMWindow|DOMElement} scrollable\n * @return {object} Map with `x` and `y` keys.\n */\n\nfunction getUnboundedScrollPosition(scrollable) {\n  if (scrollable.Window && scrollable instanceof scrollable.Window) {\n    return {\n      x: scrollable.pageXOffset || scrollable.document.documentElement.scrollLeft,\n      y: scrollable.pageYOffset || scrollable.document.documentElement.scrollTop\n    };\n  }\n  return {\n    x: scrollable.scrollLeft,\n    y: scrollable.scrollTop\n  };\n}\n\nmodule.exports = getUnboundedScrollPosition;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/~/fbjs/lib/getUnboundedScrollPosition.js\n// module id = 151\n// module chunks = 0","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks\n */\n\nvar _uppercasePattern = /([A-Z])/g;\n\n/**\n * Hyphenates a camelcased string, for example:\n *\n *   > hyphenate('backgroundColor')\n *   < \"background-color\"\n *\n * For CSS style names, use `hyphenateStyleName` instead which works properly\n * with all vendor prefixes, including `ms`.\n *\n * @param {string} string\n * @return {string}\n */\nfunction hyphenate(string) {\n  return string.replace(_uppercasePattern, '-$1').toLowerCase();\n}\n\nmodule.exports = hyphenate;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/~/fbjs/lib/hyphenate.js\n// module id = 152\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks\n */\n\n'use strict';\n\nvar hyphenate = require('./hyphenate');\n\nvar msPattern = /^ms-/;\n\n/**\n * Hyphenates a camelcased CSS property name, for example:\n *\n *   > hyphenateStyleName('backgroundColor')\n *   < \"background-color\"\n *   > hyphenateStyleName('MozTransition')\n *   < \"-moz-transition\"\n *   > hyphenateStyleName('msTransition')\n *   < \"-ms-transition\"\n *\n * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix\n * is converted to `-ms-`.\n *\n * @param {string} string\n * @return {string}\n */\nfunction hyphenateStyleName(string) {\n  return hyphenate(string).replace(msPattern, '-ms-');\n}\n\nmodule.exports = hyphenateStyleName;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/~/fbjs/lib/hyphenateStyleName.js\n// module id = 153\n// module chunks = 0","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks\n */\n\n/**\n * @param {*} object The object to check.\n * @return {boolean} Whether or not the object is a DOM node.\n */\nfunction isNode(object) {\n  var doc = object ? object.ownerDocument || object : document;\n  var defaultView = doc.defaultView || window;\n  return !!(object && (typeof defaultView.Node === 'function' ? object instanceof defaultView.Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));\n}\n\nmodule.exports = isNode;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/~/fbjs/lib/isNode.js\n// module id = 154\n// module chunks = 0","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks\n */\n\nvar isNode = require('./isNode');\n\n/**\n * @param {*} object The object to check.\n * @return {boolean} Whether or not the object is a DOM text node.\n */\nfunction isTextNode(object) {\n  return isNode(object) && object.nodeType == 3;\n}\n\nmodule.exports = isTextNode;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/~/fbjs/lib/isTextNode.js\n// module id = 155\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n * @typechecks static-only\n */\n\n'use strict';\n\n/**\n * Memoizes the return value of a function that accepts one string argument.\n */\n\nfunction memoizeStringOnly(callback) {\n  var cache = {};\n  return function (string) {\n    if (!cache.hasOwnProperty(string)) {\n      cache[string] = callback.call(this, string);\n    }\n    return cache[string];\n  };\n}\n\nmodule.exports = memoizeStringOnly;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/~/fbjs/lib/memoizeStringOnly.js\n// module id = 156\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n'use strict';\n\nif (process.env.NODE_ENV !== 'production') {\n  var invariant = require('fbjs/lib/invariant');\n  var warning = require('fbjs/lib/warning');\n  var ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n  var loggedTypeFailures = {};\n}\n\n/**\n * Assert that the values match with the type specs.\n * Error messages are memorized and will only be shown once.\n *\n * @param {object} typeSpecs Map of name to a ReactPropType\n * @param {object} values Runtime values that need to be type-checked\n * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n * @param {string} componentName Name of the component for error messages.\n * @param {?Function} getStack Returns the component stack.\n * @private\n */\nfunction checkPropTypes(typeSpecs, values, location, componentName, getStack) {\n  if (process.env.NODE_ENV !== 'production') {\n    for (var typeSpecName in typeSpecs) {\n      if (typeSpecs.hasOwnProperty(typeSpecName)) {\n        var error;\n        // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          invariant(typeof typeSpecs[typeSpecName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', componentName || 'React class', location, typeSpecName);\n          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);\n        } catch (ex) {\n          error = ex;\n        }\n        warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error);\n        if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error.message] = true;\n\n          var stack = getStack ? getStack() : '';\n\n          warning(false, 'Failed %s type: %s%s', location, error.message, stack != null ? stack : '');\n        }\n      }\n    }\n  }\n}\n\nmodule.exports = checkPropTypes;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/~/prop-types/checkPropTypes.js\n// module id = 157\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/~/prop-types/lib/ReactPropTypesSecret.js\n// module id = 160\n// module chunks = 0","// @remove-on-eject-begin\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n// @remove-on-eject-end\n'use strict';\n\nif (typeof Promise === 'undefined') {\n  // Rejection tracking prevents a common issue where React gets into an\n  // inconsistent state due to an error, but it gets swallowed by a Promise,\n  // and the user has no idea what causes React's erratic future behavior.\n  require('promise/lib/rejection-tracking').enable();\n  window.Promise = require('promise/lib/es6-extensions.js');\n}\n\n// fetch() polyfill for making API calls.\nrequire('whatwg-fetch');\n\n// Object.assign() is commonly used with React.\n// It will use the native implementation if it's present and isn't buggy.\nObject.assign = require('object-assign');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-scripts/config/polyfills.js\n// module id = 161\n// module chunks = 0","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Tone from 'tone';\nimport './index.css';\n\nvar numRows = 16;\nvar numCols = 16;\nvar synth = new Tone.PolySynth(numRows).toMaster();  \n// todo numRows needs to get updated here when it's updated in general too\nvar loop;\n\nfunction Square(props) {\n  var squareClassName = \"square\"\n  if (props.isActive) {\n    squareClassName = \"square on\"\n  }\n  const squareStyle = {\n    maxWidth: 'calc(100% / 16)',\n    maxHeight: 'calc(100vh / 16)',\n  }\n  return (\n    <button \n      style={squareStyle} \n      className={squareClassName} \n      onClick={props.onClick}>\n    </button>\n  );\n}\n\nfunction StartButton(props) {\n  return (\n    <button className=\"btn start\" onClick={\n      function() {\n        console.log('Starting loop');\n        if (Tone.Transport.state !== 'started') {\n          Tone.Transport.start();\n        } else {\n          loop.start();\n        }\n      }\n    }>Start</button>\n  );\n}\n\nfunction StopButton(props) {\n  return (\n    <button className=\"btn stop\" onClick={\n      function() {\n        console.log('Stopping loop');\n        loop.stop();\n      }\n    }>Stop</button>\n  );\n}\n\nclass Board extends React.Component {\n  constructor() {\n    super();\n\n    var pitches = Array(numRows * numCols).fill(\"C4\");\n    for (var i = 0; i < numRows * numCols; i++) {\n      pitches[i] = getPitch(i);\n    }\n\n    this.state = {\n      squares: Array(numRows * numCols).fill(false),\n      pitches: pitches,\n    };\n\n    this.createLoop();\n  }\n\n  handleClick(i) {\n    const squares = this.state.squares.slice();\n    if (squares[i]) {\n      squares[i] = false;\n    } else {\n      squares[i] = true;\n    }\n    // synth.triggerAttackRelease(this.state.pitches[i], \"8n\");\n    this.setState({squares: squares});\n  }\n\n  renderSquare(i) {\n    return <Square \n      isActive={this.state.squares[i]} \n      onClick={() => this.handleClick(i)}\n      key={'square' + i} \n    />;\n  }\n\n  render() {\n    var rows = [];\n    for (var i = 0; i < numRows; i++) {\n      var cols = [];\n      for (var j = 0; j < numCols; j++) {\n        cols.push(this.renderSquare(numRows * i + j));\n      }\n      rows.push(\n        <div className=\"board-row\" key={'row' + i}>{cols}</div>\n      )\n    }\n\n    return (\n      <div>{rows}</div>\n    );\n  }\n\n  createLoop() {\n    var that = this;\n    console.log('Creating loop');\n    var columns = Array(numCols).fill(0);\n    for (var i = 0; i < numCols; i++) {\n      columns[i] = i;\n    }\n\n    loop = new Tone.Sequence(function(time, col){\n      var pitchesToPlay = [];\n      for (var row = 0; row < numRows; row++){\n        if (that.state.squares[numRows * row + col] === true){\n          pitchesToPlay.push(that.state.pitches[numRows * row + col]);\n          // slightly randomized velocities\n          // var vel = Math.random() * 0.5 + 0.5;\n          // keys.start(this.state.pitches[numRows * row + col], time, 0, \"32n\", 0, vel);\n        }\n      }\n      synth.triggerAttackRelease(pitchesToPlay, \"32n\");\n    }, columns, \"16n\").start(0);\n    Tone.Transport.bpm.value = 80;\n  }\n}\n\nclass Pentacular extends React.Component {\n  render() {\n    return (\n      <div className=\"pentacular\">\n        <div className=\"pentacular-board\">\n          <Board />\n        </div>\n        <div className=\"pentacular-info\">\n          <StartButton/>\n          <StopButton/>\n          <div>{/* status */}</div>\n          <ol>{/* TODO */}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\n// ========================================\n\nReactDOM.render(\n  <Pentacular />,\n  document.getElementById('root')\n);\n\nfunction getPitch(i) {\n  var y = Math.floor(i/numRows);\n  y = -y + 15;\n  var octave = 3 + Math.floor(y/5);\n  var note;\n  switch (y % 5) {\n    case 1:\n      note = \"D\";\n      break;\n    case 2:\n      note = \"F\";\n      break;\n    case 3:\n      note = \"G\";\n      break;\n    case 4:\n      note = \"A\";\n      break;\n    default:  // case 0\n      note = \"C\";\n      break;\n  }\n  return note + octave;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","'use strict';\n\n//This file contains the ES6 extensions to the core Promises/A+ API\n\nvar Promise = require('./core.js');\n\nmodule.exports = Promise;\n\n/* Static Functions */\n\nvar TRUE = valuePromise(true);\nvar FALSE = valuePromise(false);\nvar NULL = valuePromise(null);\nvar UNDEFINED = valuePromise(undefined);\nvar ZERO = valuePromise(0);\nvar EMPTYSTRING = valuePromise('');\n\nfunction valuePromise(value) {\n  var p = new Promise(Promise._61);\n  p._81 = 1;\n  p._65 = value;\n  return p;\n}\nPromise.resolve = function (value) {\n  if (value instanceof Promise) return value;\n\n  if (value === null) return NULL;\n  if (value === undefined) return UNDEFINED;\n  if (value === true) return TRUE;\n  if (value === false) return FALSE;\n  if (value === 0) return ZERO;\n  if (value === '') return EMPTYSTRING;\n\n  if (typeof value === 'object' || typeof value === 'function') {\n    try {\n      var then = value.then;\n      if (typeof then === 'function') {\n        return new Promise(then.bind(value));\n      }\n    } catch (ex) {\n      return new Promise(function (resolve, reject) {\n        reject(ex);\n      });\n    }\n  }\n  return valuePromise(value);\n};\n\nPromise.all = function (arr) {\n  var args = Array.prototype.slice.call(arr);\n\n  return new Promise(function (resolve, reject) {\n    if (args.length === 0) return resolve([]);\n    var remaining = args.length;\n    function res(i, val) {\n      if (val && (typeof val === 'object' || typeof val === 'function')) {\n        if (val instanceof Promise && val.then === Promise.prototype.then) {\n          while (val._81 === 3) {\n            val = val._65;\n          }\n          if (val._81 === 1) return res(i, val._65);\n          if (val._81 === 2) reject(val._65);\n          val.then(function (val) {\n            res(i, val);\n          }, reject);\n          return;\n        } else {\n          var then = val.then;\n          if (typeof then === 'function') {\n            var p = new Promise(then.bind(val));\n            p.then(function (val) {\n              res(i, val);\n            }, reject);\n            return;\n          }\n        }\n      }\n      args[i] = val;\n      if (--remaining === 0) {\n        resolve(args);\n      }\n    }\n    for (var i = 0; i < args.length; i++) {\n      res(i, args[i]);\n    }\n  });\n};\n\nPromise.reject = function (value) {\n  return new Promise(function (resolve, reject) {\n    reject(value);\n  });\n};\n\nPromise.race = function (values) {\n  return new Promise(function (resolve, reject) {\n    values.forEach(function(value){\n      Promise.resolve(value).then(resolve, reject);\n    });\n  });\n};\n\n/* Prototype Methods */\n\nPromise.prototype['catch'] = function (onRejected) {\n  return this.then(null, onRejected);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-scripts/~/promise/lib/es6-extensions.js\n// module id = 165\n// module chunks = 0","'use strict';\n\nvar Promise = require('./core');\n\nvar DEFAULT_WHITELIST = [\n  ReferenceError,\n  TypeError,\n  RangeError\n];\n\nvar enabled = false;\nexports.disable = disable;\nfunction disable() {\n  enabled = false;\n  Promise._10 = null;\n  Promise._97 = null;\n}\n\nexports.enable = enable;\nfunction enable(options) {\n  options = options || {};\n  if (enabled) disable();\n  enabled = true;\n  var id = 0;\n  var displayId = 0;\n  var rejections = {};\n  Promise._10 = function (promise) {\n    if (\n      promise._81 === 2 && // IS REJECTED\n      rejections[promise._72]\n    ) {\n      if (rejections[promise._72].logged) {\n        onHandled(promise._72);\n      } else {\n        clearTimeout(rejections[promise._72].timeout);\n      }\n      delete rejections[promise._72];\n    }\n  };\n  Promise._97 = function (promise, err) {\n    if (promise._45 === 0) { // not yet handled\n      promise._72 = id++;\n      rejections[promise._72] = {\n        displayId: null,\n        error: err,\n        timeout: setTimeout(\n          onUnhandled.bind(null, promise._72),\n          // For reference errors and type errors, this almost always\n          // means the programmer made a mistake, so log them after just\n          // 100ms\n          // otherwise, wait 2 seconds to see if they get handled\n          matchWhitelist(err, DEFAULT_WHITELIST)\n            ? 100\n            : 2000\n        ),\n        logged: false\n      };\n    }\n  };\n  function onUnhandled(id) {\n    if (\n      options.allRejections ||\n      matchWhitelist(\n        rejections[id].error,\n        options.whitelist || DEFAULT_WHITELIST\n      )\n    ) {\n      rejections[id].displayId = displayId++;\n      if (options.onUnhandled) {\n        rejections[id].logged = true;\n        options.onUnhandled(\n          rejections[id].displayId,\n          rejections[id].error\n        );\n      } else {\n        rejections[id].logged = true;\n        logError(\n          rejections[id].displayId,\n          rejections[id].error\n        );\n      }\n    }\n  }\n  function onHandled(id) {\n    if (rejections[id].logged) {\n      if (options.onHandled) {\n        options.onHandled(rejections[id].displayId, rejections[id].error);\n      } else if (!rejections[id].onUnhandled) {\n        console.warn(\n          'Promise Rejection Handled (id: ' + rejections[id].displayId + '):'\n        );\n        console.warn(\n          '  This means you can ignore any previous messages of the form \"Possible Unhandled Promise Rejection\" with id ' +\n          rejections[id].displayId + '.'\n        );\n      }\n    }\n  }\n}\n\nfunction logError(id, error) {\n  console.warn('Possible Unhandled Promise Rejection (id: ' + id + '):');\n  var errStr = (error && (error.stack || error)) + '';\n  errStr.split('\\n').forEach(function (line) {\n    console.warn('  ' + line);\n  });\n}\n\nfunction matchWhitelist(error, list) {\n  return list.some(function (cls) {\n    return error instanceof cls;\n  });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-scripts/~/promise/lib/rejection-tracking.js\n// module id = 166\n// module chunks = 0","\"use strict\";\n\n// Use the fastest means possible to execute a task in its own turn, with\n// priority over other events including IO, animation, reflow, and redraw\n// events in browsers.\n//\n// An exception thrown by a task will permanently interrupt the processing of\n// subsequent tasks. The higher level `asap` function ensures that if an\n// exception is thrown by a task, that the task queue will continue flushing as\n// soon as possible, but if you use `rawAsap` directly, you are responsible to\n// either ensure that no exceptions are thrown from your task, or to manually\n// call `rawAsap.requestFlush` if an exception is thrown.\nmodule.exports = rawAsap;\nfunction rawAsap(task) {\n    if (!queue.length) {\n        requestFlush();\n        flushing = true;\n    }\n    // Equivalent to push, but avoids a function call.\n    queue[queue.length] = task;\n}\n\nvar queue = [];\n// Once a flush has been requested, no further calls to `requestFlush` are\n// necessary until the next `flush` completes.\nvar flushing = false;\n// `requestFlush` is an implementation-specific method that attempts to kick\n// off a `flush` event as quickly as possible. `flush` will attempt to exhaust\n// the event queue before yielding to the browser's own event loop.\nvar requestFlush;\n// The position of the next task to execute in the task queue. This is\n// preserved between calls to `flush` so that it can be resumed if\n// a task throws an exception.\nvar index = 0;\n// If a task schedules additional tasks recursively, the task queue can grow\n// unbounded. To prevent memory exhaustion, the task queue will periodically\n// truncate already-completed tasks.\nvar capacity = 1024;\n\n// The flush function processes all tasks that have been scheduled with\n// `rawAsap` unless and until one of those tasks throws an exception.\n// If a task throws an exception, `flush` ensures that its state will remain\n// consistent and will resume where it left off when called again.\n// However, `flush` does not make any arrangements to be called again if an\n// exception is thrown.\nfunction flush() {\n    while (index < queue.length) {\n        var currentIndex = index;\n        // Advance the index before calling the task. This ensures that we will\n        // begin flushing on the next task the task throws an error.\n        index = index + 1;\n        queue[currentIndex].call();\n        // Prevent leaking memory for long chains of recursive calls to `asap`.\n        // If we call `asap` within tasks scheduled by `asap`, the queue will\n        // grow, but to avoid an O(n) walk for every task we execute, we don't\n        // shift tasks off the queue after they have been executed.\n        // Instead, we periodically shift 1024 tasks off the queue.\n        if (index > capacity) {\n            // Manually shift all values starting at the index back to the\n            // beginning of the queue.\n            for (var scan = 0, newLength = queue.length - index; scan < newLength; scan++) {\n                queue[scan] = queue[scan + index];\n            }\n            queue.length -= index;\n            index = 0;\n        }\n    }\n    queue.length = 0;\n    index = 0;\n    flushing = false;\n}\n\n// `requestFlush` is implemented using a strategy based on data collected from\n// every available SauceLabs Selenium web driver worker at time of writing.\n// https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593\n\n// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that\n// have WebKitMutationObserver but not un-prefixed MutationObserver.\n// Must use `global` or `self` instead of `window` to work in both frames and web\n// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.\n\n/* globals self */\nvar scope = typeof global !== \"undefined\" ? global : self;\nvar BrowserMutationObserver = scope.MutationObserver || scope.WebKitMutationObserver;\n\n// MutationObservers are desirable because they have high priority and work\n// reliably everywhere they are implemented.\n// They are implemented in all modern browsers.\n//\n// - Android 4-4.3\n// - Chrome 26-34\n// - Firefox 14-29\n// - Internet Explorer 11\n// - iPad Safari 6-7.1\n// - iPhone Safari 7-7.1\n// - Safari 6-7\nif (typeof BrowserMutationObserver === \"function\") {\n    requestFlush = makeRequestCallFromMutationObserver(flush);\n\n// MessageChannels are desirable because they give direct access to the HTML\n// task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera\n// 11-12, and in web workers in many engines.\n// Although message channels yield to any queued rendering and IO tasks, they\n// would be better than imposing the 4ms delay of timers.\n// However, they do not work reliably in Internet Explorer or Safari.\n\n// Internet Explorer 10 is the only browser that has setImmediate but does\n// not have MutationObservers.\n// Although setImmediate yields to the browser's renderer, it would be\n// preferrable to falling back to setTimeout since it does not have\n// the minimum 4ms penalty.\n// Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and\n// Desktop to a lesser extent) that renders both setImmediate and\n// MessageChannel useless for the purposes of ASAP.\n// https://github.com/kriskowal/q/issues/396\n\n// Timers are implemented universally.\n// We fall back to timers in workers in most engines, and in foreground\n// contexts in the following browsers.\n// However, note that even this simple case requires nuances to operate in a\n// broad spectrum of browsers.\n//\n// - Firefox 3-13\n// - Internet Explorer 6-9\n// - iPad Safari 4.3\n// - Lynx 2.8.7\n} else {\n    requestFlush = makeRequestCallFromTimer(flush);\n}\n\n// `requestFlush` requests that the high priority event queue be flushed as\n// soon as possible.\n// This is useful to prevent an error thrown in a task from stalling the event\n// queue if the exception handled by Node.js’s\n// `process.on(\"uncaughtException\")` or by a domain.\nrawAsap.requestFlush = requestFlush;\n\n// To request a high priority event, we induce a mutation observer by toggling\n// the text of a text node between \"1\" and \"-1\".\nfunction makeRequestCallFromMutationObserver(callback) {\n    var toggle = 1;\n    var observer = new BrowserMutationObserver(callback);\n    var node = document.createTextNode(\"\");\n    observer.observe(node, {characterData: true});\n    return function requestCall() {\n        toggle = -toggle;\n        node.data = toggle;\n    };\n}\n\n// The message channel technique was discovered by Malte Ubl and was the\n// original foundation for this library.\n// http://www.nonblocking.io/2011/06/windownexttick.html\n\n// Safari 6.0.5 (at least) intermittently fails to create message ports on a\n// page's first load. Thankfully, this version of Safari supports\n// MutationObservers, so we don't need to fall back in that case.\n\n// function makeRequestCallFromMessageChannel(callback) {\n//     var channel = new MessageChannel();\n//     channel.port1.onmessage = callback;\n//     return function requestCall() {\n//         channel.port2.postMessage(0);\n//     };\n// }\n\n// For reasons explained above, we are also unable to use `setImmediate`\n// under any circumstances.\n// Even if we were, there is another bug in Internet Explorer 10.\n// It is not sufficient to assign `setImmediate` to `requestFlush` because\n// `setImmediate` must be called *by name* and therefore must be wrapped in a\n// closure.\n// Never forget.\n\n// function makeRequestCallFromSetImmediate(callback) {\n//     return function requestCall() {\n//         setImmediate(callback);\n//     };\n// }\n\n// Safari 6.0 has a problem where timers will get lost while the user is\n// scrolling. This problem does not impact ASAP because Safari 6.0 supports\n// mutation observers, so that implementation is used instead.\n// However, if we ever elect to use timers in Safari, the prevalent work-around\n// is to add a scroll event listener that calls for a flush.\n\n// `setTimeout` does not call the passed callback if the delay is less than\n// approximately 7 in web workers in Firefox 8 through 18, and sometimes not\n// even then.\n\nfunction makeRequestCallFromTimer(callback) {\n    return function requestCall() {\n        // We dispatch a timeout with a specified delay of 0 for engines that\n        // can reliably accommodate that request. This will usually be snapped\n        // to a 4 milisecond delay, but once we're flushing, there's no delay\n        // between events.\n        var timeoutHandle = setTimeout(handleTimer, 0);\n        // However, since this timer gets frequently dropped in Firefox\n        // workers, we enlist an interval handle that will try to fire\n        // an event 20 times per second until it succeeds.\n        var intervalHandle = setInterval(handleTimer, 50);\n\n        function handleTimer() {\n            // Whichever timer succeeds will cancel both timers and\n            // execute the callback.\n            clearTimeout(timeoutHandle);\n            clearInterval(intervalHandle);\n            callback();\n        }\n    };\n}\n\n// This is for `asap.js` only.\n// Its name will be periodically randomized to break any code that depends on\n// its existence.\nrawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer;\n\n// ASAP was originally a nextTick shim included in Q. This was factored out\n// into this ASAP package. It was later adapted to RSVP which made further\n// amendments. These decisions, particularly to marginalize MessageChannel and\n// to capture the MutationObserver implementation in a closure, were integrated\n// back into ASAP proper.\n// https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-scripts/~/promise/~/asap/browser-raw.js\n// module id = 167\n// module chunks = 0","(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ]\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    }\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var oldValue = this.map[name]\n    this.map[name] = oldValue ? oldValue+','+value : value\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name)\n    return this.has(name) ? this.map[name] : null\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value)\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this)\n      }\n    }\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsArrayBuffer(blob)\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsText(blob)\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf)\n    var chars = new Array(view.length)\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i])\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength)\n      view.set(new Uint8Array(buf))\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (!body) {\n        this._bodyText = ''\n      } else if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer)\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer])\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body)\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      }\n    }\n\n    this.text = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = String(input)\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers()\n    rawHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n    return headers\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = 'status' in options ? options.status : 200\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n    this.headers = new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init)\n      var xhr = new XMLHttpRequest()\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-scripts/~/whatwg-fetch/fetch.js\n// module id = 168\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar PooledClass = require('./PooledClass');\nvar ReactElement = require('./ReactElement');\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar traverseAllChildren = require('./traverseAllChildren');\n\nvar twoArgumentPooler = PooledClass.twoArgumentPooler;\nvar fourArgumentPooler = PooledClass.fourArgumentPooler;\n\nvar userProvidedKeyEscapeRegex = /\\/+/g;\nfunction escapeUserProvidedKey(text) {\n  return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');\n}\n\n/**\n * PooledClass representing the bookkeeping associated with performing a child\n * traversal. Allows avoiding binding callbacks.\n *\n * @constructor ForEachBookKeeping\n * @param {!function} forEachFunction Function to perform traversal with.\n * @param {?*} forEachContext Context to perform context with.\n */\nfunction ForEachBookKeeping(forEachFunction, forEachContext) {\n  this.func = forEachFunction;\n  this.context = forEachContext;\n  this.count = 0;\n}\nForEachBookKeeping.prototype.destructor = function () {\n  this.func = null;\n  this.context = null;\n  this.count = 0;\n};\nPooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);\n\nfunction forEachSingleChild(bookKeeping, child, name) {\n  var func = bookKeeping.func,\n      context = bookKeeping.context;\n\n  func.call(context, child, bookKeeping.count++);\n}\n\n/**\n * Iterates through children that are typically specified as `props.children`.\n *\n * See https://facebook.github.io/react/docs/top-level-api.html#react.children.foreach\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} forEachFunc\n * @param {*} forEachContext Context for forEachContext.\n */\nfunction forEachChildren(children, forEachFunc, forEachContext) {\n  if (children == null) {\n    return children;\n  }\n  var traverseContext = ForEachBookKeeping.getPooled(forEachFunc, forEachContext);\n  traverseAllChildren(children, forEachSingleChild, traverseContext);\n  ForEachBookKeeping.release(traverseContext);\n}\n\n/**\n * PooledClass representing the bookkeeping associated with performing a child\n * mapping. Allows avoiding binding callbacks.\n *\n * @constructor MapBookKeeping\n * @param {!*} mapResult Object containing the ordered map of results.\n * @param {!function} mapFunction Function to perform mapping with.\n * @param {?*} mapContext Context to perform mapping with.\n */\nfunction MapBookKeeping(mapResult, keyPrefix, mapFunction, mapContext) {\n  this.result = mapResult;\n  this.keyPrefix = keyPrefix;\n  this.func = mapFunction;\n  this.context = mapContext;\n  this.count = 0;\n}\nMapBookKeeping.prototype.destructor = function () {\n  this.result = null;\n  this.keyPrefix = null;\n  this.func = null;\n  this.context = null;\n  this.count = 0;\n};\nPooledClass.addPoolingTo(MapBookKeeping, fourArgumentPooler);\n\nfunction mapSingleChildIntoContext(bookKeeping, child, childKey) {\n  var result = bookKeeping.result,\n      keyPrefix = bookKeeping.keyPrefix,\n      func = bookKeeping.func,\n      context = bookKeeping.context;\n\n\n  var mappedChild = func.call(context, child, bookKeeping.count++);\n  if (Array.isArray(mappedChild)) {\n    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, emptyFunction.thatReturnsArgument);\n  } else if (mappedChild != null) {\n    if (ReactElement.isValidElement(mappedChild)) {\n      mappedChild = ReactElement.cloneAndReplaceKey(mappedChild,\n      // Keep both the (mapped) and old keys if they differ, just as\n      // traverseAllChildren used to do for objects as children\n      keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);\n    }\n    result.push(mappedChild);\n  }\n}\n\nfunction mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {\n  var escapedPrefix = '';\n  if (prefix != null) {\n    escapedPrefix = escapeUserProvidedKey(prefix) + '/';\n  }\n  var traverseContext = MapBookKeeping.getPooled(array, escapedPrefix, func, context);\n  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);\n  MapBookKeeping.release(traverseContext);\n}\n\n/**\n * Maps children that are typically specified as `props.children`.\n *\n * See https://facebook.github.io/react/docs/top-level-api.html#react.children.map\n *\n * The provided mapFunction(child, key, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} func The map function.\n * @param {*} context Context for mapFunction.\n * @return {object} Object containing the ordered map of results.\n */\nfunction mapChildren(children, func, context) {\n  if (children == null) {\n    return children;\n  }\n  var result = [];\n  mapIntoWithKeyPrefixInternal(children, result, null, func, context);\n  return result;\n}\n\nfunction forEachSingleChildDummy(traverseContext, child, name) {\n  return null;\n}\n\n/**\n * Count the number of children that are typically specified as\n * `props.children`.\n *\n * See https://facebook.github.io/react/docs/top-level-api.html#react.children.count\n *\n * @param {?*} children Children tree container.\n * @return {number} The number of children.\n */\nfunction countChildren(children, context) {\n  return traverseAllChildren(children, forEachSingleChildDummy, null);\n}\n\n/**\n * Flatten a children object (typically specified as `props.children`) and\n * return an array with appropriately re-keyed children.\n *\n * See https://facebook.github.io/react/docs/top-level-api.html#react.children.toarray\n */\nfunction toArray(children) {\n  var result = [];\n  mapIntoWithKeyPrefixInternal(children, result, null, emptyFunction.thatReturnsArgument);\n  return result;\n}\n\nvar ReactChildren = {\n  forEach: forEachChildren,\n  map: mapChildren,\n  mapIntoWithKeyPrefixInternal: mapIntoWithKeyPrefixInternal,\n  count: countChildren,\n  toArray: toArray\n};\n\nmodule.exports = ReactChildren;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/ReactChildren.js\n// module id = 171\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant'),\n    _assign = require('object-assign');\n\nvar ReactComponent = require('./ReactComponent');\nvar ReactElement = require('./ReactElement');\nvar ReactPropTypeLocationNames = require('./ReactPropTypeLocationNames');\nvar ReactNoopUpdateQueue = require('./ReactNoopUpdateQueue');\n\nvar emptyObject = require('fbjs/lib/emptyObject');\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\nvar MIXINS_KEY = 'mixins';\n\n// Helper function to allow the creation of anonymous functions which do not\n// have .name set to the name of the variable being assigned to.\nfunction identity(fn) {\n  return fn;\n}\n\n/**\n * Policies that describe methods in `ReactClassInterface`.\n */\n\n\nvar injectedMixins = [];\n\n/**\n * Composite components are higher-level components that compose other composite\n * or host components.\n *\n * To create a new type of `ReactClass`, pass a specification of\n * your new class to `React.createClass`. The only requirement of your class\n * specification is that you implement a `render` method.\n *\n *   var MyComponent = React.createClass({\n *     render: function() {\n *       return <div>Hello World</div>;\n *     }\n *   });\n *\n * The class specification supports a specific protocol of methods that have\n * special meaning (e.g. `render`). See `ReactClassInterface` for\n * more the comprehensive protocol. Any other properties and methods in the\n * class specification will be available on the prototype.\n *\n * @interface ReactClassInterface\n * @internal\n */\nvar ReactClassInterface = {\n\n  /**\n   * An array of Mixin objects to include when defining your component.\n   *\n   * @type {array}\n   * @optional\n   */\n  mixins: 'DEFINE_MANY',\n\n  /**\n   * An object containing properties and methods that should be defined on\n   * the component's constructor instead of its prototype (static methods).\n   *\n   * @type {object}\n   * @optional\n   */\n  statics: 'DEFINE_MANY',\n\n  /**\n   * Definition of prop types for this component.\n   *\n   * @type {object}\n   * @optional\n   */\n  propTypes: 'DEFINE_MANY',\n\n  /**\n   * Definition of context types for this component.\n   *\n   * @type {object}\n   * @optional\n   */\n  contextTypes: 'DEFINE_MANY',\n\n  /**\n   * Definition of context types this component sets for its children.\n   *\n   * @type {object}\n   * @optional\n   */\n  childContextTypes: 'DEFINE_MANY',\n\n  // ==== Definition methods ====\n\n  /**\n   * Invoked when the component is mounted. Values in the mapping will be set on\n   * `this.props` if that prop is not specified (i.e. using an `in` check).\n   *\n   * This method is invoked before `getInitialState` and therefore cannot rely\n   * on `this.state` or use `this.setState`.\n   *\n   * @return {object}\n   * @optional\n   */\n  getDefaultProps: 'DEFINE_MANY_MERGED',\n\n  /**\n   * Invoked once before the component is mounted. The return value will be used\n   * as the initial value of `this.state`.\n   *\n   *   getInitialState: function() {\n   *     return {\n   *       isOn: false,\n   *       fooBaz: new BazFoo()\n   *     }\n   *   }\n   *\n   * @return {object}\n   * @optional\n   */\n  getInitialState: 'DEFINE_MANY_MERGED',\n\n  /**\n   * @return {object}\n   * @optional\n   */\n  getChildContext: 'DEFINE_MANY_MERGED',\n\n  /**\n   * Uses props from `this.props` and state from `this.state` to render the\n   * structure of the component.\n   *\n   * No guarantees are made about when or how often this method is invoked, so\n   * it must not have side effects.\n   *\n   *   render: function() {\n   *     var name = this.props.name;\n   *     return <div>Hello, {name}!</div>;\n   *   }\n   *\n   * @return {ReactComponent}\n   * @required\n   */\n  render: 'DEFINE_ONCE',\n\n  // ==== Delegate methods ====\n\n  /**\n   * Invoked when the component is initially created and about to be mounted.\n   * This may have side effects, but any external subscriptions or data created\n   * by this method must be cleaned up in `componentWillUnmount`.\n   *\n   * @optional\n   */\n  componentWillMount: 'DEFINE_MANY',\n\n  /**\n   * Invoked when the component has been mounted and has a DOM representation.\n   * However, there is no guarantee that the DOM node is in the document.\n   *\n   * Use this as an opportunity to operate on the DOM when the component has\n   * been mounted (initialized and rendered) for the first time.\n   *\n   * @param {DOMElement} rootNode DOM element representing the component.\n   * @optional\n   */\n  componentDidMount: 'DEFINE_MANY',\n\n  /**\n   * Invoked before the component receives new props.\n   *\n   * Use this as an opportunity to react to a prop transition by updating the\n   * state using `this.setState`. Current props are accessed via `this.props`.\n   *\n   *   componentWillReceiveProps: function(nextProps, nextContext) {\n   *     this.setState({\n   *       likesIncreasing: nextProps.likeCount > this.props.likeCount\n   *     });\n   *   }\n   *\n   * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop\n   * transition may cause a state change, but the opposite is not true. If you\n   * need it, you are probably looking for `componentWillUpdate`.\n   *\n   * @param {object} nextProps\n   * @optional\n   */\n  componentWillReceiveProps: 'DEFINE_MANY',\n\n  /**\n   * Invoked while deciding if the component should be updated as a result of\n   * receiving new props, state and/or context.\n   *\n   * Use this as an opportunity to `return false` when you're certain that the\n   * transition to the new props/state/context will not require a component\n   * update.\n   *\n   *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {\n   *     return !equal(nextProps, this.props) ||\n   *       !equal(nextState, this.state) ||\n   *       !equal(nextContext, this.context);\n   *   }\n   *\n   * @param {object} nextProps\n   * @param {?object} nextState\n   * @param {?object} nextContext\n   * @return {boolean} True if the component should update.\n   * @optional\n   */\n  shouldComponentUpdate: 'DEFINE_ONCE',\n\n  /**\n   * Invoked when the component is about to update due to a transition from\n   * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`\n   * and `nextContext`.\n   *\n   * Use this as an opportunity to perform preparation before an update occurs.\n   *\n   * NOTE: You **cannot** use `this.setState()` in this method.\n   *\n   * @param {object} nextProps\n   * @param {?object} nextState\n   * @param {?object} nextContext\n   * @param {ReactReconcileTransaction} transaction\n   * @optional\n   */\n  componentWillUpdate: 'DEFINE_MANY',\n\n  /**\n   * Invoked when the component's DOM representation has been updated.\n   *\n   * Use this as an opportunity to operate on the DOM when the component has\n   * been updated.\n   *\n   * @param {object} prevProps\n   * @param {?object} prevState\n   * @param {?object} prevContext\n   * @param {DOMElement} rootNode DOM element representing the component.\n   * @optional\n   */\n  componentDidUpdate: 'DEFINE_MANY',\n\n  /**\n   * Invoked when the component is about to be removed from its parent and have\n   * its DOM representation destroyed.\n   *\n   * Use this as an opportunity to deallocate any external resources.\n   *\n   * NOTE: There is no `componentDidUnmount` since your component will have been\n   * destroyed by that point.\n   *\n   * @optional\n   */\n  componentWillUnmount: 'DEFINE_MANY',\n\n  // ==== Advanced methods ====\n\n  /**\n   * Updates the component's currently mounted DOM representation.\n   *\n   * By default, this implements React's rendering and reconciliation algorithm.\n   * Sophisticated clients may wish to override this.\n   *\n   * @param {ReactReconcileTransaction} transaction\n   * @internal\n   * @overridable\n   */\n  updateComponent: 'OVERRIDE_BASE'\n\n};\n\n/**\n * Mapping from class specification keys to special processing functions.\n *\n * Although these are declared like instance properties in the specification\n * when defining classes using `React.createClass`, they are actually static\n * and are accessible on the constructor instead of the prototype. Despite\n * being static, they must be defined outside of the \"statics\" key under\n * which all other static methods are defined.\n */\nvar RESERVED_SPEC_KEYS = {\n  displayName: function (Constructor, displayName) {\n    Constructor.displayName = displayName;\n  },\n  mixins: function (Constructor, mixins) {\n    if (mixins) {\n      for (var i = 0; i < mixins.length; i++) {\n        mixSpecIntoComponent(Constructor, mixins[i]);\n      }\n    }\n  },\n  childContextTypes: function (Constructor, childContextTypes) {\n    if (process.env.NODE_ENV !== 'production') {\n      validateTypeDef(Constructor, childContextTypes, 'childContext');\n    }\n    Constructor.childContextTypes = _assign({}, Constructor.childContextTypes, childContextTypes);\n  },\n  contextTypes: function (Constructor, contextTypes) {\n    if (process.env.NODE_ENV !== 'production') {\n      validateTypeDef(Constructor, contextTypes, 'context');\n    }\n    Constructor.contextTypes = _assign({}, Constructor.contextTypes, contextTypes);\n  },\n  /**\n   * Special case getDefaultProps which should move into statics but requires\n   * automatic merging.\n   */\n  getDefaultProps: function (Constructor, getDefaultProps) {\n    if (Constructor.getDefaultProps) {\n      Constructor.getDefaultProps = createMergedResultFunction(Constructor.getDefaultProps, getDefaultProps);\n    } else {\n      Constructor.getDefaultProps = getDefaultProps;\n    }\n  },\n  propTypes: function (Constructor, propTypes) {\n    if (process.env.NODE_ENV !== 'production') {\n      validateTypeDef(Constructor, propTypes, 'prop');\n    }\n    Constructor.propTypes = _assign({}, Constructor.propTypes, propTypes);\n  },\n  statics: function (Constructor, statics) {\n    mixStaticSpecIntoComponent(Constructor, statics);\n  },\n  autobind: function () {} };\n\nfunction validateTypeDef(Constructor, typeDef, location) {\n  for (var propName in typeDef) {\n    if (typeDef.hasOwnProperty(propName)) {\n      // use a warning instead of an invariant so components\n      // don't show up in prod but only in __DEV__\n      process.env.NODE_ENV !== 'production' ? warning(typeof typeDef[propName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', Constructor.displayName || 'ReactClass', ReactPropTypeLocationNames[location], propName) : void 0;\n    }\n  }\n}\n\nfunction validateMethodOverride(isAlreadyDefined, name) {\n  var specPolicy = ReactClassInterface.hasOwnProperty(name) ? ReactClassInterface[name] : null;\n\n  // Disallow overriding of base class methods unless explicitly allowed.\n  if (ReactClassMixin.hasOwnProperty(name)) {\n    !(specPolicy === 'OVERRIDE_BASE') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClassInterface: You are attempting to override `%s` from your class specification. Ensure that your method names do not overlap with React methods.', name) : _prodInvariant('73', name) : void 0;\n  }\n\n  // Disallow defining methods more than once unless explicitly allowed.\n  if (isAlreadyDefined) {\n    !(specPolicy === 'DEFINE_MANY' || specPolicy === 'DEFINE_MANY_MERGED') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClassInterface: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.', name) : _prodInvariant('74', name) : void 0;\n  }\n}\n\n/**\n * Mixin helper which handles policy validation and reserved\n * specification keys when building React classes.\n */\nfunction mixSpecIntoComponent(Constructor, spec) {\n  if (!spec) {\n    if (process.env.NODE_ENV !== 'production') {\n      var typeofSpec = typeof spec;\n      var isMixinValid = typeofSpec === 'object' && spec !== null;\n\n      process.env.NODE_ENV !== 'production' ? warning(isMixinValid, '%s: You\\'re attempting to include a mixin that is either null ' + 'or not an object. Check the mixins included by the component, ' + 'as well as any mixins they include themselves. ' + 'Expected object but got %s.', Constructor.displayName || 'ReactClass', spec === null ? null : typeofSpec) : void 0;\n    }\n\n    return;\n  }\n\n  !(typeof spec !== 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You\\'re attempting to use a component class or function as a mixin. Instead, just use a regular object.') : _prodInvariant('75') : void 0;\n  !!ReactElement.isValidElement(spec) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You\\'re attempting to use a component as a mixin. Instead, just use a regular object.') : _prodInvariant('76') : void 0;\n\n  var proto = Constructor.prototype;\n  var autoBindPairs = proto.__reactAutoBindPairs;\n\n  // By handling mixins before any other properties, we ensure the same\n  // chaining order is applied to methods with DEFINE_MANY policy, whether\n  // mixins are listed before or after these methods in the spec.\n  if (spec.hasOwnProperty(MIXINS_KEY)) {\n    RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);\n  }\n\n  for (var name in spec) {\n    if (!spec.hasOwnProperty(name)) {\n      continue;\n    }\n\n    if (name === MIXINS_KEY) {\n      // We have already handled mixins in a special case above.\n      continue;\n    }\n\n    var property = spec[name];\n    var isAlreadyDefined = proto.hasOwnProperty(name);\n    validateMethodOverride(isAlreadyDefined, name);\n\n    if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {\n      RESERVED_SPEC_KEYS[name](Constructor, property);\n    } else {\n      // Setup methods on prototype:\n      // The following member methods should not be automatically bound:\n      // 1. Expected ReactClass methods (in the \"interface\").\n      // 2. Overridden methods (that were mixed in).\n      var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);\n      var isFunction = typeof property === 'function';\n      var shouldAutoBind = isFunction && !isReactClassMethod && !isAlreadyDefined && spec.autobind !== false;\n\n      if (shouldAutoBind) {\n        autoBindPairs.push(name, property);\n        proto[name] = property;\n      } else {\n        if (isAlreadyDefined) {\n          var specPolicy = ReactClassInterface[name];\n\n          // These cases should already be caught by validateMethodOverride.\n          !(isReactClassMethod && (specPolicy === 'DEFINE_MANY_MERGED' || specPolicy === 'DEFINE_MANY')) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: Unexpected spec policy %s for key %s when mixing in component specs.', specPolicy, name) : _prodInvariant('77', specPolicy, name) : void 0;\n\n          // For methods which are defined more than once, call the existing\n          // methods before calling the new property, merging if appropriate.\n          if (specPolicy === 'DEFINE_MANY_MERGED') {\n            proto[name] = createMergedResultFunction(proto[name], property);\n          } else if (specPolicy === 'DEFINE_MANY') {\n            proto[name] = createChainedFunction(proto[name], property);\n          }\n        } else {\n          proto[name] = property;\n          if (process.env.NODE_ENV !== 'production') {\n            // Add verbose displayName to the function, which helps when looking\n            // at profiling tools.\n            if (typeof property === 'function' && spec.displayName) {\n              proto[name].displayName = spec.displayName + '_' + name;\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\nfunction mixStaticSpecIntoComponent(Constructor, statics) {\n  if (!statics) {\n    return;\n  }\n  for (var name in statics) {\n    var property = statics[name];\n    if (!statics.hasOwnProperty(name)) {\n      continue;\n    }\n\n    var isReserved = name in RESERVED_SPEC_KEYS;\n    !!isReserved ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You are attempting to define a reserved property, `%s`, that shouldn\\'t be on the \"statics\" key. Define it as an instance property instead; it will still be accessible on the constructor.', name) : _prodInvariant('78', name) : void 0;\n\n    var isInherited = name in Constructor;\n    !!isInherited ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.', name) : _prodInvariant('79', name) : void 0;\n    Constructor[name] = property;\n  }\n}\n\n/**\n * Merge two objects, but throw if both contain the same key.\n *\n * @param {object} one The first object, which is mutated.\n * @param {object} two The second object\n * @return {object} one after it has been mutated to contain everything in two.\n */\nfunction mergeIntoWithNoDuplicateKeys(one, two) {\n  !(one && two && typeof one === 'object' && typeof two === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.') : _prodInvariant('80') : void 0;\n\n  for (var key in two) {\n    if (two.hasOwnProperty(key)) {\n      !(one[key] === undefined) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Tried to merge two objects with the same key: `%s`. This conflict may be due to a mixin; in particular, this may be caused by two getInitialState() or getDefaultProps() methods returning objects with clashing keys.', key) : _prodInvariant('81', key) : void 0;\n      one[key] = two[key];\n    }\n  }\n  return one;\n}\n\n/**\n * Creates a function that invokes two functions and merges their return values.\n *\n * @param {function} one Function to invoke first.\n * @param {function} two Function to invoke second.\n * @return {function} Function that invokes the two argument functions.\n * @private\n */\nfunction createMergedResultFunction(one, two) {\n  return function mergedResult() {\n    var a = one.apply(this, arguments);\n    var b = two.apply(this, arguments);\n    if (a == null) {\n      return b;\n    } else if (b == null) {\n      return a;\n    }\n    var c = {};\n    mergeIntoWithNoDuplicateKeys(c, a);\n    mergeIntoWithNoDuplicateKeys(c, b);\n    return c;\n  };\n}\n\n/**\n * Creates a function that invokes two functions and ignores their return vales.\n *\n * @param {function} one Function to invoke first.\n * @param {function} two Function to invoke second.\n * @return {function} Function that invokes the two argument functions.\n * @private\n */\nfunction createChainedFunction(one, two) {\n  return function chainedFunction() {\n    one.apply(this, arguments);\n    two.apply(this, arguments);\n  };\n}\n\n/**\n * Binds a method to the component.\n *\n * @param {object} component Component whose method is going to be bound.\n * @param {function} method Method to be bound.\n * @return {function} The bound method.\n */\nfunction bindAutoBindMethod(component, method) {\n  var boundMethod = method.bind(component);\n  if (process.env.NODE_ENV !== 'production') {\n    boundMethod.__reactBoundContext = component;\n    boundMethod.__reactBoundMethod = method;\n    boundMethod.__reactBoundArguments = null;\n    var componentName = component.constructor.displayName;\n    var _bind = boundMethod.bind;\n    boundMethod.bind = function (newThis) {\n      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      // User is trying to bind() an autobound method; we effectively will\n      // ignore the value of \"this\" that the user is trying to use, so\n      // let's warn.\n      if (newThis !== component && newThis !== null) {\n        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): React component methods may only be bound to the ' + 'component instance. See %s', componentName) : void 0;\n      } else if (!args.length) {\n        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): You are binding a component method to the component. ' + 'React does this for you automatically in a high-performance ' + 'way, so you can safely remove this call. See %s', componentName) : void 0;\n        return boundMethod;\n      }\n      var reboundMethod = _bind.apply(boundMethod, arguments);\n      reboundMethod.__reactBoundContext = component;\n      reboundMethod.__reactBoundMethod = method;\n      reboundMethod.__reactBoundArguments = args;\n      return reboundMethod;\n    };\n  }\n  return boundMethod;\n}\n\n/**\n * Binds all auto-bound methods in a component.\n *\n * @param {object} component Component whose method is going to be bound.\n */\nfunction bindAutoBindMethods(component) {\n  var pairs = component.__reactAutoBindPairs;\n  for (var i = 0; i < pairs.length; i += 2) {\n    var autoBindKey = pairs[i];\n    var method = pairs[i + 1];\n    component[autoBindKey] = bindAutoBindMethod(component, method);\n  }\n}\n\n/**\n * Add more to the ReactClass base class. These are all legacy features and\n * therefore not already part of the modern ReactComponent.\n */\nvar ReactClassMixin = {\n\n  /**\n   * TODO: This will be deprecated because state should always keep a consistent\n   * type signature and the only use case for this, is to avoid that.\n   */\n  replaceState: function (newState, callback) {\n    this.updater.enqueueReplaceState(this, newState);\n    if (callback) {\n      this.updater.enqueueCallback(this, callback, 'replaceState');\n    }\n  },\n\n  /**\n   * Checks whether or not this composite component is mounted.\n   * @return {boolean} True if mounted, false otherwise.\n   * @protected\n   * @final\n   */\n  isMounted: function () {\n    return this.updater.isMounted(this);\n  }\n};\n\nvar ReactClassComponent = function () {};\n_assign(ReactClassComponent.prototype, ReactComponent.prototype, ReactClassMixin);\n\nvar didWarnDeprecated = false;\n\n/**\n * Module for creating composite components.\n *\n * @class ReactClass\n */\nvar ReactClass = {\n\n  /**\n   * Creates a composite component class given a class specification.\n   * See https://facebook.github.io/react/docs/top-level-api.html#react.createclass\n   *\n   * @param {object} spec Class specification (which must define `render`).\n   * @return {function} Component constructor function.\n   * @public\n   */\n  createClass: function (spec) {\n    if (process.env.NODE_ENV !== 'production') {\n      process.env.NODE_ENV !== 'production' ? warning(didWarnDeprecated, '%s: React.createClass is deprecated and will be removed in version 16. ' + 'Use plain JavaScript classes instead. If you\\'re not yet ready to ' + 'migrate, create-react-class is available on npm as a ' + 'drop-in replacement.', spec && spec.displayName || 'A Component') : void 0;\n      didWarnDeprecated = true;\n    }\n\n    // To keep our warnings more understandable, we'll use a little hack here to\n    // ensure that Constructor.name !== 'Constructor'. This makes sure we don't\n    // unnecessarily identify a class without displayName as 'Constructor'.\n    var Constructor = identity(function (props, context, updater) {\n      // This constructor gets overridden by mocks. The argument is used\n      // by mocks to assert on what gets mounted.\n\n      if (process.env.NODE_ENV !== 'production') {\n        process.env.NODE_ENV !== 'production' ? warning(this instanceof Constructor, 'Something is calling a React component directly. Use a factory or ' + 'JSX instead. See: https://fb.me/react-legacyfactory') : void 0;\n      }\n\n      // Wire up auto-binding\n      if (this.__reactAutoBindPairs.length) {\n        bindAutoBindMethods(this);\n      }\n\n      this.props = props;\n      this.context = context;\n      this.refs = emptyObject;\n      this.updater = updater || ReactNoopUpdateQueue;\n\n      this.state = null;\n\n      // ReactClasses doesn't have constructors. Instead, they use the\n      // getInitialState and componentWillMount methods for initialization.\n\n      var initialState = this.getInitialState ? this.getInitialState() : null;\n      if (process.env.NODE_ENV !== 'production') {\n        // We allow auto-mocks to proceed as if they're returning null.\n        if (initialState === undefined && this.getInitialState._isMockFunction) {\n          // This is probably bad practice. Consider warning here and\n          // deprecating this convenience.\n          initialState = null;\n        }\n      }\n      !(typeof initialState === 'object' && !Array.isArray(initialState)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getInitialState(): must return an object or null', Constructor.displayName || 'ReactCompositeComponent') : _prodInvariant('82', Constructor.displayName || 'ReactCompositeComponent') : void 0;\n\n      this.state = initialState;\n    });\n    Constructor.prototype = new ReactClassComponent();\n    Constructor.prototype.constructor = Constructor;\n    Constructor.prototype.__reactAutoBindPairs = [];\n\n    injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));\n\n    mixSpecIntoComponent(Constructor, spec);\n\n    // Initialize the defaultProps property after all mixins have been merged.\n    if (Constructor.getDefaultProps) {\n      Constructor.defaultProps = Constructor.getDefaultProps();\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      // This is a tag to indicate that the use of these method names is ok,\n      // since it's used with createClass. If it's not, then it's likely a\n      // mistake so we'll warn you to use the static property, property\n      // initializer or constructor respectively.\n      if (Constructor.getDefaultProps) {\n        Constructor.getDefaultProps.isReactClassApproved = {};\n      }\n      if (Constructor.prototype.getInitialState) {\n        Constructor.prototype.getInitialState.isReactClassApproved = {};\n      }\n    }\n\n    !Constructor.prototype.render ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createClass(...): Class specification must implement a `render` method.') : _prodInvariant('83') : void 0;\n\n    if (process.env.NODE_ENV !== 'production') {\n      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentShouldUpdate, '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', spec.displayName || 'A component') : void 0;\n      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentWillRecieveProps, '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', spec.displayName || 'A component') : void 0;\n    }\n\n    // Reduce time spent doing lookups by setting these on the prototype.\n    for (var methodName in ReactClassInterface) {\n      if (!Constructor.prototype[methodName]) {\n        Constructor.prototype[methodName] = null;\n      }\n    }\n\n    return Constructor;\n  },\n\n  injection: {\n    injectMixin: function (mixin) {\n      injectedMixins.push(mixin);\n    }\n  }\n\n};\n\nmodule.exports = ReactClass;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/ReactClass.js\n// module id = 172\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar ReactElement = require('./ReactElement');\n\n/**\n * Create a factory that creates HTML tag elements.\n *\n * @private\n */\nvar createDOMFactory = ReactElement.createFactory;\nif (process.env.NODE_ENV !== 'production') {\n  var ReactElementValidator = require('./ReactElementValidator');\n  createDOMFactory = ReactElementValidator.createFactory;\n}\n\n/**\n * Creates a mapping from supported HTML tags to `ReactDOMComponent` classes.\n * This is also accessible via `React.DOM`.\n *\n * @public\n */\nvar ReactDOMFactories = {\n  a: createDOMFactory('a'),\n  abbr: createDOMFactory('abbr'),\n  address: createDOMFactory('address'),\n  area: createDOMFactory('area'),\n  article: createDOMFactory('article'),\n  aside: createDOMFactory('aside'),\n  audio: createDOMFactory('audio'),\n  b: createDOMFactory('b'),\n  base: createDOMFactory('base'),\n  bdi: createDOMFactory('bdi'),\n  bdo: createDOMFactory('bdo'),\n  big: createDOMFactory('big'),\n  blockquote: createDOMFactory('blockquote'),\n  body: createDOMFactory('body'),\n  br: createDOMFactory('br'),\n  button: createDOMFactory('button'),\n  canvas: createDOMFactory('canvas'),\n  caption: createDOMFactory('caption'),\n  cite: createDOMFactory('cite'),\n  code: createDOMFactory('code'),\n  col: createDOMFactory('col'),\n  colgroup: createDOMFactory('colgroup'),\n  data: createDOMFactory('data'),\n  datalist: createDOMFactory('datalist'),\n  dd: createDOMFactory('dd'),\n  del: createDOMFactory('del'),\n  details: createDOMFactory('details'),\n  dfn: createDOMFactory('dfn'),\n  dialog: createDOMFactory('dialog'),\n  div: createDOMFactory('div'),\n  dl: createDOMFactory('dl'),\n  dt: createDOMFactory('dt'),\n  em: createDOMFactory('em'),\n  embed: createDOMFactory('embed'),\n  fieldset: createDOMFactory('fieldset'),\n  figcaption: createDOMFactory('figcaption'),\n  figure: createDOMFactory('figure'),\n  footer: createDOMFactory('footer'),\n  form: createDOMFactory('form'),\n  h1: createDOMFactory('h1'),\n  h2: createDOMFactory('h2'),\n  h3: createDOMFactory('h3'),\n  h4: createDOMFactory('h4'),\n  h5: createDOMFactory('h5'),\n  h6: createDOMFactory('h6'),\n  head: createDOMFactory('head'),\n  header: createDOMFactory('header'),\n  hgroup: createDOMFactory('hgroup'),\n  hr: createDOMFactory('hr'),\n  html: createDOMFactory('html'),\n  i: createDOMFactory('i'),\n  iframe: createDOMFactory('iframe'),\n  img: createDOMFactory('img'),\n  input: createDOMFactory('input'),\n  ins: createDOMFactory('ins'),\n  kbd: createDOMFactory('kbd'),\n  keygen: createDOMFactory('keygen'),\n  label: createDOMFactory('label'),\n  legend: createDOMFactory('legend'),\n  li: createDOMFactory('li'),\n  link: createDOMFactory('link'),\n  main: createDOMFactory('main'),\n  map: createDOMFactory('map'),\n  mark: createDOMFactory('mark'),\n  menu: createDOMFactory('menu'),\n  menuitem: createDOMFactory('menuitem'),\n  meta: createDOMFactory('meta'),\n  meter: createDOMFactory('meter'),\n  nav: createDOMFactory('nav'),\n  noscript: createDOMFactory('noscript'),\n  object: createDOMFactory('object'),\n  ol: createDOMFactory('ol'),\n  optgroup: createDOMFactory('optgroup'),\n  option: createDOMFactory('option'),\n  output: createDOMFactory('output'),\n  p: createDOMFactory('p'),\n  param: createDOMFactory('param'),\n  picture: createDOMFactory('picture'),\n  pre: createDOMFactory('pre'),\n  progress: createDOMFactory('progress'),\n  q: createDOMFactory('q'),\n  rp: createDOMFactory('rp'),\n  rt: createDOMFactory('rt'),\n  ruby: createDOMFactory('ruby'),\n  s: createDOMFactory('s'),\n  samp: createDOMFactory('samp'),\n  script: createDOMFactory('script'),\n  section: createDOMFactory('section'),\n  select: createDOMFactory('select'),\n  small: createDOMFactory('small'),\n  source: createDOMFactory('source'),\n  span: createDOMFactory('span'),\n  strong: createDOMFactory('strong'),\n  style: createDOMFactory('style'),\n  sub: createDOMFactory('sub'),\n  summary: createDOMFactory('summary'),\n  sup: createDOMFactory('sup'),\n  table: createDOMFactory('table'),\n  tbody: createDOMFactory('tbody'),\n  td: createDOMFactory('td'),\n  textarea: createDOMFactory('textarea'),\n  tfoot: createDOMFactory('tfoot'),\n  th: createDOMFactory('th'),\n  thead: createDOMFactory('thead'),\n  time: createDOMFactory('time'),\n  title: createDOMFactory('title'),\n  tr: createDOMFactory('tr'),\n  track: createDOMFactory('track'),\n  u: createDOMFactory('u'),\n  ul: createDOMFactory('ul'),\n  'var': createDOMFactory('var'),\n  video: createDOMFactory('video'),\n  wbr: createDOMFactory('wbr'),\n\n  // SVG\n  circle: createDOMFactory('circle'),\n  clipPath: createDOMFactory('clipPath'),\n  defs: createDOMFactory('defs'),\n  ellipse: createDOMFactory('ellipse'),\n  g: createDOMFactory('g'),\n  image: createDOMFactory('image'),\n  line: createDOMFactory('line'),\n  linearGradient: createDOMFactory('linearGradient'),\n  mask: createDOMFactory('mask'),\n  path: createDOMFactory('path'),\n  pattern: createDOMFactory('pattern'),\n  polygon: createDOMFactory('polygon'),\n  polyline: createDOMFactory('polyline'),\n  radialGradient: createDOMFactory('radialGradient'),\n  rect: createDOMFactory('rect'),\n  stop: createDOMFactory('stop'),\n  svg: createDOMFactory('svg'),\n  text: createDOMFactory('text'),\n  tspan: createDOMFactory('tspan')\n};\n\nmodule.exports = ReactDOMFactories;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/ReactDOMFactories.js\n// module id = 173\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar ReactPropTypeLocationNames = {};\n\nif (process.env.NODE_ENV !== 'production') {\n  ReactPropTypeLocationNames = {\n    prop: 'prop',\n    context: 'context',\n    childContext: 'child context'\n  };\n}\n\nmodule.exports = ReactPropTypeLocationNames;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/ReactPropTypeLocationNames.js\n// module id = 174\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _require = require('./ReactElement'),\n    isValidElement = _require.isValidElement;\n\nvar factory = require('prop-types/factory');\n\nmodule.exports = factory(isValidElement);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/ReactPropTypes.js\n// module id = 175\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar ReactComponent = require('./ReactComponent');\nvar ReactNoopUpdateQueue = require('./ReactNoopUpdateQueue');\n\nvar emptyObject = require('fbjs/lib/emptyObject');\n\n/**\n * Base class helpers for the updating state of a component.\n */\nfunction ReactPureComponent(props, context, updater) {\n  // Duplicated from ReactComponent.\n  this.props = props;\n  this.context = context;\n  this.refs = emptyObject;\n  // We initialize the default updater but the real one gets injected by the\n  // renderer.\n  this.updater = updater || ReactNoopUpdateQueue;\n}\n\nfunction ComponentDummy() {}\nComponentDummy.prototype = ReactComponent.prototype;\nReactPureComponent.prototype = new ComponentDummy();\nReactPureComponent.prototype.constructor = ReactPureComponent;\n// Avoid an extra prototype jump for these methods.\n_assign(ReactPureComponent.prototype, ReactComponent.prototype);\nReactPureComponent.prototype.isPureReactComponent = true;\n\nmodule.exports = ReactPureComponent;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/ReactPureComponent.js\n// module id = 176\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar nextDebugID = 1;\n\nfunction getNextDebugID() {\n  return nextDebugID++;\n}\n\nmodule.exports = getNextDebugID;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/getNextDebugID.js\n// module id = 179\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar ReactElement = require('./ReactElement');\n\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * Returns the first child in a collection of children and verifies that there\n * is only one child in the collection.\n *\n * See https://facebook.github.io/react/docs/top-level-api.html#react.children.only\n *\n * The current implementation of this function assumes that a single child gets\n * passed without a wrapper, but the purpose of this helper function is to\n * abstract away the particular structure of children.\n *\n * @param {?object} children Child collection structure.\n * @return {ReactElement} The first and only `ReactElement` contained in the\n * structure.\n */\nfunction onlyChild(children) {\n  !ReactElement.isValidElement(children) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'React.Children.only expected to receive a single React element child.') : _prodInvariant('143') : void 0;\n  return children;\n}\n\nmodule.exports = onlyChild;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/onlyChild.js\n// module id = 180\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar ReactCurrentOwner = require('./ReactCurrentOwner');\nvar REACT_ELEMENT_TYPE = require('./ReactElementSymbol');\n\nvar getIteratorFn = require('./getIteratorFn');\nvar invariant = require('fbjs/lib/invariant');\nvar KeyEscapeUtils = require('./KeyEscapeUtils');\nvar warning = require('fbjs/lib/warning');\n\nvar SEPARATOR = '.';\nvar SUBSEPARATOR = ':';\n\n/**\n * This is inlined from ReactElement since this file is shared between\n * isomorphic and renderers. We could extract this to a\n *\n */\n\n/**\n * TODO: Test that a single child and an array with one item have the same key\n * pattern.\n */\n\nvar didWarnAboutMaps = false;\n\n/**\n * Generate a key string that identifies a component within a set.\n *\n * @param {*} component A component that could contain a manual key.\n * @param {number} index Index that is used if a manual key is not provided.\n * @return {string}\n */\nfunction getComponentKey(component, index) {\n  // Do some typechecking here since we call this blindly. We want to ensure\n  // that we don't block potential future ES APIs.\n  if (component && typeof component === 'object' && component.key != null) {\n    // Explicit key\n    return KeyEscapeUtils.escape(component.key);\n  }\n  // Implicit key determined by the index in the set\n  return index.toString(36);\n}\n\n/**\n * @param {?*} children Children tree container.\n * @param {!string} nameSoFar Name of the key path so far.\n * @param {!function} callback Callback to invoke with each child found.\n * @param {?*} traverseContext Used to pass information throughout the traversal\n * process.\n * @return {!number} The number of children in this subtree.\n */\nfunction traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {\n  var type = typeof children;\n\n  if (type === 'undefined' || type === 'boolean') {\n    // All of the above are perceived as null.\n    children = null;\n  }\n\n  if (children === null || type === 'string' || type === 'number' ||\n  // The following is inlined from ReactElement. This means we can optimize\n  // some checks. React Fiber also inlines this logic for similar purposes.\n  type === 'object' && children.$$typeof === REACT_ELEMENT_TYPE) {\n    callback(traverseContext, children,\n    // If it's the only child, treat the name as if it was wrapped in an array\n    // so that it's consistent if the number of children grows.\n    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);\n    return 1;\n  }\n\n  var child;\n  var nextName;\n  var subtreeCount = 0; // Count of children found in the current subtree.\n  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;\n\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      child = children[i];\n      nextName = nextNamePrefix + getComponentKey(child, i);\n      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n    }\n  } else {\n    var iteratorFn = getIteratorFn(children);\n    if (iteratorFn) {\n      var iterator = iteratorFn.call(children);\n      var step;\n      if (iteratorFn !== children.entries) {\n        var ii = 0;\n        while (!(step = iterator.next()).done) {\n          child = step.value;\n          nextName = nextNamePrefix + getComponentKey(child, ii++);\n          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n        }\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          var mapsAsChildrenAddendum = '';\n          if (ReactCurrentOwner.current) {\n            var mapsAsChildrenOwnerName = ReactCurrentOwner.current.getName();\n            if (mapsAsChildrenOwnerName) {\n              mapsAsChildrenAddendum = ' Check the render method of `' + mapsAsChildrenOwnerName + '`.';\n            }\n          }\n          process.env.NODE_ENV !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.%s', mapsAsChildrenAddendum) : void 0;\n          didWarnAboutMaps = true;\n        }\n        // Iterator will provide entry [k,v] tuples rather than values.\n        while (!(step = iterator.next()).done) {\n          var entry = step.value;\n          if (entry) {\n            child = entry[1];\n            nextName = nextNamePrefix + KeyEscapeUtils.escape(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);\n            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n          }\n        }\n      }\n    } else if (type === 'object') {\n      var addendum = '';\n      if (process.env.NODE_ENV !== 'production') {\n        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';\n        if (children._isReactElement) {\n          addendum = ' It looks like you\\'re using an element created by a different ' + 'version of React. Make sure to use only one copy of React.';\n        }\n        if (ReactCurrentOwner.current) {\n          var name = ReactCurrentOwner.current.getName();\n          if (name) {\n            addendum += ' Check the render method of `' + name + '`.';\n          }\n        }\n      }\n      var childrenString = String(children);\n      !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : _prodInvariant('31', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : void 0;\n    }\n  }\n\n  return subtreeCount;\n}\n\n/**\n * Traverses children that are typically specified as `props.children`, but\n * might also be specified through attributes:\n *\n * - `traverseAllChildren(this.props.children, ...)`\n * - `traverseAllChildren(this.props.leftPanelChildren, ...)`\n *\n * The `traverseContext` is an optional argument that is passed through the\n * entire traversal. It can be used to store accumulations or anything else that\n * the callback might find relevant.\n *\n * @param {?*} children Children tree object.\n * @param {!function} callback To invoke upon traversing each child.\n * @param {?*} traverseContext Context for traversal.\n * @return {!number} The number of children in this subtree.\n */\nfunction traverseAllChildren(children, callback, traverseContext) {\n  if (children == null) {\n    return 0;\n  }\n\n  return traverseAllChildrenImpl(children, '', callback, traverseContext);\n}\n\nmodule.exports = traverseAllChildren;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/traverseAllChildren.js\n// module id = 181\n// module chunks = 0","'use strict';\n\nmodule.exports = require('./lib/React');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/react.js\n// module id = 186\n// module chunks = 0","(function(root, factory){\n\n\t//UMD\n\tif ( typeof define === \"function\" && define.amd ) {\n\t\tdefine(function() {\n\t\t\treturn factory();\n\t\t});\n\t} else if (typeof module === \"object\") {\n\t\tmodule.exports = factory();\n \t} else {\n\t\troot.Tone = factory();\n\t}\n\n}(this, function(){\n\n\t\"use strict\";\n\t\n\tvar Tone;\n\t//constructs the main Tone object\n\tfunction Main(func){\n\t\tTone = func();\n\t}\n\t//invokes each of the modules with the main Tone object as the argument\n\tfunction Module(func){\n\t\tfunc(Tone);\n\t}\t/**\n\t *  Tone.js\n\t *  @author Yotam Mann\n\t *  @license http://opensource.org/licenses/MIT MIT License\n\t *  @copyright 2014-2017 Yotam Mann\n\t */\n\tMain(function () {\n\t    \n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tTONE\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  @class  Tone is the base class of all other classes. It provides \n\t\t *          a lot of methods and functionality to all classes that extend\n\t\t *          it. \n\t\t *  \n\t\t *  @constructor\n\t\t *  @alias Tone\n\t\t *  @param {number} [inputs=1] the number of input nodes\n\t\t *  @param {number} [outputs=1] the number of output nodes\n\t\t */\n\t    var Tone = function (inputs, outputs) {\n\t        /**\n\t\t\t *  the input node(s)\n\t\t\t *  @type {GainNode|Array}\n\t\t\t */\n\t        if (this.isUndef(inputs) || inputs === 1) {\n\t            this.input = this.context.createGain();\n\t        } else if (inputs > 1) {\n\t            this.input = new Array(inputs);\n\t        }\n\t        /**\n\t\t\t *  the output node(s)\n\t\t\t *  @type {GainNode|Array}\n\t\t\t */\n\t        if (this.isUndef(outputs) || outputs === 1) {\n\t            this.output = this.context.createGain();\n\t        } else if (outputs > 1) {\n\t            this.output = new Array(inputs);\n\t        }\n\t    };\n\t    /**\n\t\t *  Set the parameters at once. Either pass in an\n\t\t *  object mapping parameters to values, or to set a\n\t\t *  single parameter, by passing in a string and value.\n\t\t *  The last argument is an optional ramp time which \n\t\t *  will ramp any signal values to their destination value\n\t\t *  over the duration of the rampTime.\n\t\t *  @param {Object|string} params\n\t\t *  @param {number=} value\n\t\t *  @param {Time=} rampTime\n\t\t *  @returns {Tone} this\n\t\t *  @example\n\t\t * //set values using an object\n\t\t * filter.set({\n\t\t * \t\"frequency\" : 300,\n\t\t * \t\"type\" : highpass\n\t\t * });\n\t\t *  @example\n\t\t * filter.set(\"type\", \"highpass\");\n\t\t *  @example\n\t\t * //ramp to the value 220 over 3 seconds. \n\t\t * oscillator.set({\n\t\t * \t\"frequency\" : 220\n\t\t * }, 3);\n\t\t */\n\t    Tone.prototype.set = function (params, value, rampTime) {\n\t        if (this.isObject(params)) {\n\t            rampTime = value;\n\t        } else if (this.isString(params)) {\n\t            var tmpObj = {};\n\t            tmpObj[params] = value;\n\t            params = tmpObj;\n\t        }\n\t        paramLoop:\n\t            for (var attr in params) {\n\t                value = params[attr];\n\t                var parent = this;\n\t                if (attr.indexOf('.') !== -1) {\n\t                    var attrSplit = attr.split('.');\n\t                    for (var i = 0; i < attrSplit.length - 1; i++) {\n\t                        parent = parent[attrSplit[i]];\n\t                        if (parent instanceof Tone) {\n\t                            attrSplit.splice(0, i + 1);\n\t                            var innerParam = attrSplit.join('.');\n\t                            parent.set(innerParam, value);\n\t                            continue paramLoop;\n\t                        }\n\t                    }\n\t                    attr = attrSplit[attrSplit.length - 1];\n\t                }\n\t                var param = parent[attr];\n\t                if (this.isUndef(param)) {\n\t                    continue;\n\t                }\n\t                if (Tone.Signal && param instanceof Tone.Signal || Tone.Param && param instanceof Tone.Param) {\n\t                    if (param.value !== value) {\n\t                        if (this.isUndef(rampTime)) {\n\t                            param.value = value;\n\t                        } else {\n\t                            param.rampTo(value, rampTime);\n\t                        }\n\t                    }\n\t                } else if (param instanceof AudioParam) {\n\t                    if (param.value !== value) {\n\t                        param.value = value;\n\t                    }\n\t                } else if (param instanceof Tone) {\n\t                    param.set(value);\n\t                } else if (param !== value) {\n\t                    parent[attr] = value;\n\t                }\n\t            }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Get the object's attributes. Given no arguments get\n\t\t *  will return all available object properties and their corresponding\n\t\t *  values. Pass in a single attribute to retrieve or an array\n\t\t *  of attributes. The attribute strings can also include a \".\"\n\t\t *  to access deeper properties.\n\t\t *  @example\n\t\t * osc.get();\n\t\t * //returns {\"type\" : \"sine\", \"frequency\" : 440, ...etc}\n\t\t *  @example\n\t\t * osc.get(\"type\");\n\t\t * //returns { \"type\" : \"sine\"}\n\t\t * @example\n\t\t * //use dot notation to access deep properties\n\t\t * synth.get([\"envelope.attack\", \"envelope.release\"]);\n\t\t * //returns {\"envelope\" : {\"attack\" : 0.2, \"release\" : 0.4}}\n\t\t *  @param {Array=|string|undefined} params the parameters to get, otherwise will return \n\t\t *  \t\t\t\t\t                  all available.\n\t\t *  @returns {Object}\n\t\t */\n\t    Tone.prototype.get = function (params) {\n\t        if (this.isUndef(params)) {\n\t            params = this._collectDefaults(this.constructor);\n\t        } else if (this.isString(params)) {\n\t            params = [params];\n\t        }\n\t        var ret = {};\n\t        for (var i = 0; i < params.length; i++) {\n\t            var attr = params[i];\n\t            var parent = this;\n\t            var subRet = ret;\n\t            if (attr.indexOf('.') !== -1) {\n\t                var attrSplit = attr.split('.');\n\t                for (var j = 0; j < attrSplit.length - 1; j++) {\n\t                    var subAttr = attrSplit[j];\n\t                    subRet[subAttr] = subRet[subAttr] || {};\n\t                    subRet = subRet[subAttr];\n\t                    parent = parent[subAttr];\n\t                }\n\t                attr = attrSplit[attrSplit.length - 1];\n\t            }\n\t            var param = parent[attr];\n\t            if (this.isObject(params[attr])) {\n\t                subRet[attr] = param.get();\n\t            } else if (Tone.Signal && param instanceof Tone.Signal) {\n\t                subRet[attr] = param.value;\n\t            } else if (Tone.Param && param instanceof Tone.Param) {\n\t                subRet[attr] = param.value;\n\t            } else if (param instanceof AudioParam) {\n\t                subRet[attr] = param.value;\n\t            } else if (param instanceof Tone) {\n\t                subRet[attr] = param.get();\n\t            } else if (!this.isFunction(param) && !this.isUndef(param)) {\n\t                subRet[attr] = param;\n\t            }\n\t        }\n\t        return ret;\n\t    };\n\t    /**\n\t\t *  collect all of the default attributes in one\n\t\t *  @private\n\t\t *  @param {function} constr the constructor to find the defaults from\n\t\t *  @return {Array} all of the attributes which belong to the class\n\t\t */\n\t    Tone.prototype._collectDefaults = function (constr) {\n\t        var ret = [];\n\t        if (!this.isUndef(constr.defaults)) {\n\t            ret = Object.keys(constr.defaults);\n\t        }\n\t        if (!this.isUndef(constr._super)) {\n\t            var superDefs = this._collectDefaults(constr._super);\n\t            //filter out repeats\n\t            for (var i = 0; i < superDefs.length; i++) {\n\t                if (ret.indexOf(superDefs[i]) === -1) {\n\t                    ret.push(superDefs[i]);\n\t                }\n\t            }\n\t        }\n\t        return ret;\n\t    };\n\t    /**\n\t\t *  @returns {string} returns the name of the class as a string\n\t\t */\n\t    Tone.prototype.toString = function () {\n\t        for (var className in Tone) {\n\t            var isLetter = className[0].match(/^[A-Z]$/);\n\t            var sameConstructor = Tone[className] === this.constructor;\n\t            if (this.isFunction(Tone[className]) && isLetter && sameConstructor) {\n\t                return className;\n\t            }\n\t        }\n\t        return 'Tone';\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tCLASS VARS\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  The number of inputs feeding into the AudioNode. \n\t\t *  For source nodes, this will be 0.\n\t\t *  @memberOf Tone#\n\t\t *  @name numberOfInputs\n\t\t *  @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.prototype, 'numberOfInputs', {\n\t        get: function () {\n\t            if (this.input) {\n\t                if (this.isArray(this.input)) {\n\t                    return this.input.length;\n\t                } else {\n\t                    return 1;\n\t                }\n\t            } else {\n\t                return 0;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  The number of outputs coming out of the AudioNode. \n\t\t *  For source nodes, this will be 0.\n\t\t *  @memberOf Tone#\n\t\t *  @name numberOfInputs\n\t\t *  @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.prototype, 'numberOfOutputs', {\n\t        get: function () {\n\t            if (this.output) {\n\t                if (this.isArray(this.output)) {\n\t                    return this.output.length;\n\t                } else {\n\t                    return 1;\n\t                }\n\t            } else {\n\t                return 0;\n\t            }\n\t        }\n\t    });\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tCONNECTIONS\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  disconnect and dispose\n\t\t *  @returns {Tone} this\n\t\t */\n\t    Tone.prototype.dispose = function () {\n\t        if (!this.isUndef(this.input)) {\n\t            if (this.input instanceof AudioNode) {\n\t                this.input.disconnect();\n\t            }\n\t            this.input = null;\n\t        }\n\t        if (!this.isUndef(this.output)) {\n\t            if (this.output instanceof AudioNode) {\n\t                this.output.disconnect();\n\t            }\n\t            this.output = null;\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  connect the output of a ToneNode to an AudioParam, AudioNode, or ToneNode\n\t\t *  @param  {Tone | AudioParam | AudioNode} unit \n\t\t *  @param {number} [outputNum=0] optionally which output to connect from\n\t\t *  @param {number} [inputNum=0] optionally which input to connect to\n\t\t *  @returns {Tone} this\n\t\t */\n\t    Tone.prototype.connect = function (unit, outputNum, inputNum) {\n\t        if (Array.isArray(this.output)) {\n\t            outputNum = this.defaultArg(outputNum, 0);\n\t            this.output[outputNum].connect(unit, 0, inputNum);\n\t        } else {\n\t            this.output.connect(unit, outputNum, inputNum);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  disconnect the output\n\t\t *  @param {Number|AudioNode} output Either the output index to disconnect\n\t\t *                                   if the output is an array, or the\n\t\t *                                   node to disconnect from.\n\t\t *  @returns {Tone} this\n\t\t */\n\t    Tone.prototype.disconnect = function (destination, outputNum, inputNum) {\n\t        if (this.isArray(this.output)) {\n\t            if (this.isNumber(destination)) {\n\t                this.output[destination].disconnect();\n\t            } else {\n\t                outputNum = this.defaultArg(outputNum, 0);\n\t                this.output[outputNum].disconnect(destination, 0, inputNum);\n\t            }\n\t        } else {\n\t            this.output.disconnect.apply(this.output, arguments);\n\t        }\n\t    };\n\t    /**\n\t\t *  connect together all of the arguments in series\n\t\t *  @param {...AudioParam|Tone|AudioNode} nodes\n\t\t *  @returns {Tone} this\n\t\t */\n\t    Tone.prototype.connectSeries = function () {\n\t        if (arguments.length > 1) {\n\t            var currentUnit = arguments[0];\n\t            for (var i = 1; i < arguments.length; i++) {\n\t                var toUnit = arguments[i];\n\t                currentUnit.connect(toUnit);\n\t                currentUnit = toUnit;\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Connect the output of this node to the rest of the nodes in series.\n\t\t *  @example\n\t\t *  //connect a node to an effect, panVol and then to the master output\n\t\t *  node.chain(effect, panVol, Tone.Master);\n\t\t *  @param {...AudioParam|Tone|AudioNode} nodes\n\t\t *  @returns {Tone} this\n\t\t */\n\t    Tone.prototype.chain = function () {\n\t        if (arguments.length > 0) {\n\t            var currentUnit = this;\n\t            for (var i = 0; i < arguments.length; i++) {\n\t                var toUnit = arguments[i];\n\t                currentUnit.connect(toUnit);\n\t                currentUnit = toUnit;\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  connect the output of this node to the rest of the nodes in parallel.\n\t\t *  @param {...AudioParam|Tone|AudioNode} nodes\n\t\t *  @returns {Tone} this\n\t\t */\n\t    Tone.prototype.fan = function () {\n\t        if (arguments.length > 0) {\n\t            for (var i = 0; i < arguments.length; i++) {\n\t                this.connect(arguments[i]);\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    //give native nodes chain and fan methods\n\t    AudioNode.prototype.chain = Tone.prototype.chain;\n\t    AudioNode.prototype.fan = Tone.prototype.fan;\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tUTILITIES / HELPERS / MATHS\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  If the `given` parameter is undefined, use the `fallback`. \n\t\t *  If both `given` and `fallback` are object literals, it will\n\t\t *  return a deep copy which includes all of the parameters from both \n\t\t *  objects. If a parameter is undefined in given, it will return\n\t\t *  the fallback property. \n\t\t *  <br><br>\n\t\t *  WARNING: if object is self referential, it will go into an an \n\t\t *  infinite recursive loop.\n\t\t *  \n\t\t *  @param  {*} given    \n\t\t *  @param  {*} fallback \n\t\t *  @return {*}          \n\t\t */\n\t    Tone.prototype.defaultArg = function (given, fallback) {\n\t        if (this.isObject(given) && this.isObject(fallback)) {\n\t            var ret = {};\n\t            //make a deep copy of the given object\n\t            for (var givenProp in given) {\n\t                ret[givenProp] = this.defaultArg(fallback[givenProp], given[givenProp]);\n\t            }\n\t            for (var fallbackProp in fallback) {\n\t                ret[fallbackProp] = this.defaultArg(given[fallbackProp], fallback[fallbackProp]);\n\t            }\n\t            return ret;\n\t        } else {\n\t            return this.isUndef(given) ? fallback : given;\n\t        }\n\t    };\n\t    /**\n\t\t *  returns the args as an options object with given arguments\n\t\t *  mapped to the names provided. \n\t\t *\n\t\t *  if the args given is an array containing only one object, it is assumed\n\t\t *  that that's already the options object and will just return it. \n\t\t *  \n\t\t *  @param  {Array} values  the 'arguments' object of the function\n\t\t *  @param  {Array} keys the names of the arguments as they\n\t\t *                                 should appear in the options object\n\t\t *  @param {Object=} defaults optional defaults to mixin to the returned \n\t\t *                            options object                              \n\t\t *  @return {Object}       the options object with the names mapped to the arguments\n\t\t */\n\t    Tone.prototype.optionsObject = function (values, keys, defaults) {\n\t        var options = {};\n\t        if (values.length === 1 && this.isObject(values[0])) {\n\t            options = values[0];\n\t        } else {\n\t            for (var i = 0; i < keys.length; i++) {\n\t                options[keys[i]] = values[i];\n\t            }\n\t        }\n\t        if (!this.isUndef(defaults)) {\n\t            return this.defaultArg(options, defaults);\n\t        } else {\n\t            return options;\n\t        }\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    // TYPE CHECKING\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  test if the arg is undefined\n\t\t *  @param {*} arg the argument to test\n\t\t *  @returns {boolean} true if the arg is undefined\n\t\t *  @function\n\t\t */\n\t    Tone.prototype.isUndef = function (val) {\n\t        return typeof val === 'undefined';\n\t    };\n\t    /**\n\t\t *  test if the arg is a function\n\t\t *  @param {*} arg the argument to test\n\t\t *  @returns {boolean} true if the arg is a function\n\t\t *  @function\n\t\t */\n\t    Tone.prototype.isFunction = function (val) {\n\t        return typeof val === 'function';\n\t    };\n\t    /**\n\t\t *  Test if the argument is a number.\n\t\t *  @param {*} arg the argument to test\n\t\t *  @returns {boolean} true if the arg is a number\n\t\t */\n\t    Tone.prototype.isNumber = function (arg) {\n\t        return typeof arg === 'number';\n\t    };\n\t    /**\n\t\t *  Test if the given argument is an object literal (i.e. `{}`);\n\t\t *  @param {*} arg the argument to test\n\t\t *  @returns {boolean} true if the arg is an object literal.\n\t\t */\n\t    Tone.prototype.isObject = function (arg) {\n\t        return Object.prototype.toString.call(arg) === '[object Object]' && arg.constructor === Object;\n\t    };\n\t    /**\n\t\t *  Test if the argument is a boolean.\n\t\t *  @param {*} arg the argument to test\n\t\t *  @returns {boolean} true if the arg is a boolean\n\t\t */\n\t    Tone.prototype.isBoolean = function (arg) {\n\t        return typeof arg === 'boolean';\n\t    };\n\t    /**\n\t\t *  Test if the argument is an Array\n\t\t *  @param {*} arg the argument to test\n\t\t *  @returns {boolean} true if the arg is an array\n\t\t */\n\t    Tone.prototype.isArray = function (arg) {\n\t        return Array.isArray(arg);\n\t    };\n\t    /**\n\t\t *  Test if the argument is a string.\n\t\t *  @param {*} arg the argument to test\n\t\t *  @returns {boolean} true if the arg is a string\n\t\t */\n\t    Tone.prototype.isString = function (arg) {\n\t        return typeof arg === 'string';\n\t    };\n\t    /**\n\t\t *  An empty function.\n\t\t *  @static\n\t\t */\n\t    Tone.noOp = function () {\n\t    };\n\t    /**\n\t\t *  Make the property not writable. Internal use only. \n\t\t *  @private\n\t\t *  @param  {string}  property  the property to make not writable\n\t\t */\n\t    Tone.prototype._readOnly = function (property) {\n\t        if (Array.isArray(property)) {\n\t            for (var i = 0; i < property.length; i++) {\n\t                this._readOnly(property[i]);\n\t            }\n\t        } else {\n\t            Object.defineProperty(this, property, {\n\t                writable: false,\n\t                enumerable: true\n\t            });\n\t        }\n\t    };\n\t    /**\n\t\t *  Make an attribute writeable. Interal use only. \n\t\t *  @private\n\t\t *  @param  {string}  property  the property to make writable\n\t\t */\n\t    Tone.prototype._writable = function (property) {\n\t        if (Array.isArray(property)) {\n\t            for (var i = 0; i < property.length; i++) {\n\t                this._writable(property[i]);\n\t            }\n\t        } else {\n\t            Object.defineProperty(this, property, { writable: true });\n\t        }\n\t    };\n\t    /**\n\t\t * Possible play states. \n\t\t * @enum {string}\n\t\t */\n\t    Tone.State = {\n\t        Started: 'started',\n\t        Stopped: 'stopped',\n\t        Paused: 'paused'\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    // CONVERSIONS\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  Equal power gain scale. Good for cross-fading.\n\t\t *  @param  {NormalRange} percent (0-1)\n\t\t *  @return {Number}         output gain (0-1)\n\t\t */\n\t    Tone.prototype.equalPowerScale = function (percent) {\n\t        var piFactor = 0.5 * Math.PI;\n\t        return Math.sin(percent * piFactor);\n\t    };\n\t    /**\n\t\t *  Convert decibels into gain.\n\t\t *  @param  {Decibels} db\n\t\t *  @return {Number}   \n\t\t */\n\t    Tone.prototype.dbToGain = function (db) {\n\t        return Math.pow(2, db / 6);\n\t    };\n\t    /**\n\t\t *  Convert gain to decibels.\n\t\t *  @param  {Number} gain (0-1)\n\t\t *  @return {Decibels}   \n\t\t */\n\t    Tone.prototype.gainToDb = function (gain) {\n\t        return 20 * (Math.log(gain) / Math.LN10);\n\t    };\n\t    /**\n\t\t *  Convert an interval (in semitones) to a frequency ratio.\n\t\t *  @param  {Interval} interval the number of semitones above the base note\n\t\t *  @return {number}          the frequency ratio\n\t\t *  @example\n\t\t * tone.intervalToFrequencyRatio(0); // 1\n\t\t * tone.intervalToFrequencyRatio(12); // 2\n\t\t * tone.intervalToFrequencyRatio(-12); // 0.5\n\t\t */\n\t    Tone.prototype.intervalToFrequencyRatio = function (interval) {\n\t        return Math.pow(2, interval / 12);\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tTIMING\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  Return the current time of the AudioContext clock.\n\t\t *  @return {Number} the currentTime from the AudioContext\n\t\t */\n\t    Tone.prototype.now = function () {\n\t        return Tone.context.now();\n\t    };\n\t    /**\n\t\t *  Return the current time of the AudioContext clock.\n\t\t *  @return {Number} the currentTime from the AudioContext\n\t\t *  @static\n\t\t */\n\t    Tone.now = function () {\n\t        return Tone.context.now();\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tINHERITANCE\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  have a child inherit all of Tone's (or a parent's) prototype\n\t\t *  to inherit the parent's properties, make sure to call \n\t\t *  Parent.call(this) in the child's constructor\n\t\t *\n\t\t *  based on closure library's inherit function\n\t\t *\n\t\t *  @static\n\t\t *  @param  {function} \tchild  \n\t\t *  @param  {function=} parent (optional) parent to inherit from\n\t\t *                             if no parent is supplied, the child\n\t\t *                             will inherit from Tone\n\t\t */\n\t    Tone.extend = function (child, parent) {\n\t        if (Tone.prototype.isUndef(parent)) {\n\t            parent = Tone;\n\t        }\n\t        function TempConstructor() {\n\t        }\n\t        TempConstructor.prototype = parent.prototype;\n\t        child.prototype = new TempConstructor();\n\t        /** @override */\n\t        child.prototype.constructor = child;\n\t        child._super = parent;\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tCONTEXT\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  The private audio context shared by all Tone Nodes. \n\t\t *  @private\n\t\t *  @type {Tone.Context|undefined}\n\t\t */\n\t    var audioContext;\n\t    /**\n\t\t *  A static pointer to the audio context accessible as Tone.context. \n\t\t *  @type {Tone.Context}\n\t\t *  @name context\n\t\t *  @memberOf Tone\n\t\t */\n\t    Object.defineProperty(Tone, 'context', {\n\t        get: function () {\n\t            return audioContext;\n\t        },\n\t        set: function (context) {\n\t            if (Tone.Context && context instanceof Tone.Context) {\n\t                audioContext = context;\n\t            } else {\n\t                audioContext = new Tone.Context(context);\n\t            }\n\t            //initialize the new audio context\n\t            if (Tone.Context) {\n\t                Tone.Context.emit('init', audioContext);\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  The AudioContext\n\t\t *  @type {Tone.Context}\n\t\t *  @name context\n\t\t *  @memberOf Tone#\n\t\t *  @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.prototype, 'context', {\n\t        get: function () {\n\t            return Tone.context;\n\t        }\n\t    });\n\t    /**\n\t\t *  Tone automatically creates a context on init, but if you are working\n\t\t *  with other libraries which also create an AudioContext, it can be\n\t\t *  useful to set your own. If you are going to set your own context, \n\t\t *  be sure to do it at the start of your code, before creating any objects.\n\t\t *  @static\n\t\t *  @param {AudioContext} ctx The new audio context to set\n\t\t */\n\t    Tone.setContext = function (ctx) {\n\t        Tone.context = ctx;\n\t    };\n\t    /**\n\t\t *  The number of seconds of 1 processing block (128 samples)\n\t\t *  @type {Number}\n\t\t *  @name blockTime\n\t\t *  @memberOf Tone#\n\t\t *  @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.prototype, 'blockTime', {\n\t        get: function () {\n\t            return 128 / this.context.sampleRate;\n\t        }\n\t    });\n\t    /**\n\t\t *  The duration in seconds of one sample.\n\t\t *  @type {Number}\n\t\t *  @name sampleTime\n\t\t *  @memberOf Tone#\n\t\t *  @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.prototype, 'sampleTime', {\n\t        get: function () {\n\t            return 1 / this.context.sampleRate;\n\t        }\n\t    });\n\t    /**\n\t\t *  Whether or not all the technologies that Tone.js relies on are supported by the current browser. \n\t\t *  @type {Boolean}\n\t\t *  @name supported\n\t\t *  @memberOf Tone\n\t\t *  @readOnly\n\t\t */\n\t    Object.defineProperty(Tone, 'supported', {\n\t        get: function () {\n\t            var hasAudioContext = window.hasOwnProperty('AudioContext') || window.hasOwnProperty('webkitAudioContext');\n\t            var hasPromises = window.hasOwnProperty('Promise');\n\t            var hasWorkers = window.hasOwnProperty('Worker');\n\t            return hasAudioContext && hasPromises && hasWorkers;\n\t        }\n\t    });\n\t    Tone.version = 'r10';\n\t    // allow optional silencing of this log\n\t    if (!window.TONE_SILENCE_VERSION_LOGGING) {\n\t        console.log('%c * Tone.js ' + Tone.version + ' * ', 'background: #000; color: #fff');\n\t    }\n\t    return Tone;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Base class for all Signals. Used Internally. \n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone}\n\t\t */\n\t    Tone.SignalBase = function () {\n\t    };\n\t    Tone.extend(Tone.SignalBase);\n\t    /**\n\t\t *  When signals connect to other signals or AudioParams, \n\t\t *  they take over the output value of that signal or AudioParam. \n\t\t *  For all other nodes, the behavior is the same as a default <code>connect</code>. \n\t\t *\n\t\t *  @override\n\t\t *  @param {AudioParam|AudioNode|Tone.Signal|Tone} node \n\t\t *  @param {number} [outputNumber=0] The output number to connect from.\n\t\t *  @param {number} [inputNumber=0] The input number to connect to.\n\t\t *  @returns {Tone.SignalBase} this\n\t\t */\n\t    Tone.SignalBase.prototype.connect = function (node, outputNumber, inputNumber) {\n\t        //zero it out so that the signal can have full control\n\t        if (Tone.Signal && Tone.Signal === node.constructor || Tone.Param && Tone.Param === node.constructor || Tone.TimelineSignal && Tone.TimelineSignal === node.constructor) {\n\t            //cancel changes\n\t            node._param.cancelScheduledValues(0);\n\t            //reset the value\n\t            node._param.value = 0;\n\t            //mark the value as overridden\n\t            node.overridden = true;\n\t        } else if (node instanceof AudioParam) {\n\t            node.cancelScheduledValues(0);\n\t            node.value = 0;\n\t        }\n\t        Tone.prototype.connect.call(this, node, outputNumber, inputNumber);\n\t        return this;\n\t    };\n\t    return Tone.SignalBase;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Wraps the native Web Audio API \n\t\t *         [WaveShaperNode](http://webaudio.github.io/web-audio-api/#the-waveshapernode-interface).\n\t\t *\n\t\t *  @extends {Tone.SignalBase}\n\t\t *  @constructor\n\t\t *  @param {function|Array|Number} mapping The function used to define the values. \n\t\t *                                    The mapping function should take two arguments: \n\t\t *                                    the first is the value at the current position \n\t\t *                                    and the second is the array position. \n\t\t *                                    If the argument is an array, that array will be\n\t\t *                                    set as the wave shaping function. The input\n\t\t *                                    signal is an AudioRange [-1, 1] value and the output\n\t\t *                                    signal can take on any numerical values. \n\t\t *                                    \n\t\t *  @param {Number} [bufferLen=1024] The length of the WaveShaperNode buffer.\n\t\t *  @example\n\t\t * var timesTwo = new Tone.WaveShaper(function(val){\n\t\t * \treturn val * 2;\n\t\t * }, 2048);\n\t\t *  @example\n\t\t * //a waveshaper can also be constructed with an array of values\n\t\t * var invert = new Tone.WaveShaper([1, -1]);\n\t\t */\n\t    Tone.WaveShaper = function (mapping, bufferLen) {\n\t        /**\n\t\t\t *  the waveshaper\n\t\t\t *  @type {WaveShaperNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._shaper = this.input = this.output = this.context.createWaveShaper();\n\t        /**\n\t\t\t *  the waveshapers curve\n\t\t\t *  @type {Float32Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._curve = null;\n\t        if (Array.isArray(mapping)) {\n\t            this.curve = mapping;\n\t        } else if (isFinite(mapping) || this.isUndef(mapping)) {\n\t            this._curve = new Float32Array(this.defaultArg(mapping, 1024));\n\t        } else if (this.isFunction(mapping)) {\n\t            this._curve = new Float32Array(this.defaultArg(bufferLen, 1024));\n\t            this.setMap(mapping);\n\t        }\n\t    };\n\t    Tone.extend(Tone.WaveShaper, Tone.SignalBase);\n\t    /**\n\t\t *  Uses a mapping function to set the value of the curve. \n\t\t *  @param {function} mapping The function used to define the values. \n\t\t *                            The mapping function take two arguments: \n\t\t *                            the first is the value at the current position \n\t\t *                            which goes from -1 to 1 over the number of elements\n\t\t *                            in the curve array. The second argument is the array position. \n\t\t *  @returns {Tone.WaveShaper} this\n\t\t *  @example\n\t\t * //map the input signal from [-1, 1] to [0, 10]\n\t\t * shaper.setMap(function(val, index){\n\t\t * \treturn (val + 1) * 5;\n\t\t * })\n\t\t */\n\t    Tone.WaveShaper.prototype.setMap = function (mapping) {\n\t        for (var i = 0, len = this._curve.length; i < len; i++) {\n\t            var normalized = i / (len - 1) * 2 - 1;\n\t            this._curve[i] = mapping(normalized, i);\n\t        }\n\t        this._shaper.curve = this._curve;\n\t        return this;\n\t    };\n\t    /**\n\t\t * The array to set as the waveshaper curve. For linear curves\n\t\t * array length does not make much difference, but for complex curves\n\t\t * longer arrays will provide smoother interpolation. \n\t\t * @memberOf Tone.WaveShaper#\n\t\t * @type {Array}\n\t\t * @name curve\n\t\t */\n\t    Object.defineProperty(Tone.WaveShaper.prototype, 'curve', {\n\t        get: function () {\n\t            return this._shaper.curve;\n\t        },\n\t        set: function (mapping) {\n\t            this._curve = new Float32Array(mapping);\n\t            this._shaper.curve = this._curve;\n\t        }\n\t    });\n\t    /**\n\t\t * Specifies what type of oversampling (if any) should be used when \n\t\t * applying the shaping curve. Can either be \"none\", \"2x\" or \"4x\". \n\t\t * @memberOf Tone.WaveShaper#\n\t\t * @type {string}\n\t\t * @name oversample\n\t\t */\n\t    Object.defineProperty(Tone.WaveShaper.prototype, 'oversample', {\n\t        get: function () {\n\t            return this._shaper.oversample;\n\t        },\n\t        set: function (oversampling) {\n\t            if ([\n\t                    'none',\n\t                    '2x',\n\t                    '4x'\n\t                ].indexOf(oversampling) !== -1) {\n\t                this._shaper.oversample = oversampling;\n\t            } else {\n\t                throw new RangeError('Tone.WaveShaper: oversampling must be either \\'none\\', \\'2x\\', or \\'4x\\'');\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.WaveShaper} this\n\t\t */\n\t    Tone.WaveShaper.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._shaper.disconnect();\n\t        this._shaper = null;\n\t        this._curve = null;\n\t        return this;\n\t    };\n\t    return Tone.WaveShaper;\n\t});\n\tModule(function (Tone) {\n\t    /**\n\t\t *  @class Tone.TimeBase is a flexible encoding of time\n\t\t *         which can be evaluated to and from a string.\n\t\t *         Parsing code modified from https://code.google.com/p/tapdigit/\n\t\t *         Copyright 2011 2012 Ariya Hidayat, New BSD License\n\t\t *  @extends {Tone}\n\t\t *  @param  {Time}  val    The time value as a number or string\n\t\t *  @param  {String=}  units  Unit values\n\t\t *  @example\n\t\t * Tone.TimeBase(4, \"n\")\n\t\t * Tone.TimeBase(2, \"t\")\n\t\t * Tone.TimeBase(\"2t\").add(\"1m\")\n\t\t * Tone.TimeBase(\"2t + 1m\");\n\t\t */\n\t    Tone.TimeBase = function (val, units) {\n\t        //allows it to be constructed with or without 'new'\n\t        if (this instanceof Tone.TimeBase) {\n\t            /**\n\t\t\t\t *  Any expressions parsed from the Time\n\t\t\t\t *  @type  {Array}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t            this._expr = this._noOp;\n\t            if (val instanceof Tone.TimeBase) {\n\t                this.copy(val);\n\t            } else if (!this.isUndef(units) || this.isNumber(val)) {\n\t                //default units\n\t                units = this.defaultArg(units, this._defaultUnits);\n\t                var method = this._primaryExpressions[units].method;\n\t                this._expr = method.bind(this, val);\n\t            } else if (this.isString(val)) {\n\t                this.set(val);\n\t            } else if (this.isUndef(val)) {\n\t                //default expression\n\t                this._expr = this._defaultExpr();\n\t            }\n\t        } else {\n\t            return new Tone.TimeBase(val, units);\n\t        }\n\t    };\n\t    Tone.extend(Tone.TimeBase);\n\t    /**\n\t\t *  Repalce the current time value with the value\n\t\t *  given by the expression string.\n\t\t *  @param  {String}  exprString\n\t\t *  @return {Tone.TimeBase} this\n\t\t */\n\t    Tone.TimeBase.prototype.set = function (exprString) {\n\t        this._expr = this._parseExprString(exprString);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Return a clone of the TimeBase object.\n\t\t *  @return  {Tone.TimeBase} The new cloned Tone.TimeBase\n\t\t */\n\t    Tone.TimeBase.prototype.clone = function () {\n\t        var instance = new this.constructor();\n\t        instance.copy(this);\n\t        return instance;\n\t    };\n\t    /**\n\t\t *  Copies the value of time to this Time\n\t\t *  @param {Tone.TimeBase} time\n\t\t *  @return  {TimeBase}\n\t\t */\n\t    Tone.TimeBase.prototype.copy = function (time) {\n\t        var val = time._expr();\n\t        return this.set(val);\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tABSTRACT SYNTAX TREE PARSER\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  All the primary expressions.\n\t\t *  @private\n\t\t *  @type  {Object}\n\t\t */\n\t    Tone.TimeBase.prototype._primaryExpressions = {\n\t        'n': {\n\t            regexp: /^(\\d+)n/i,\n\t            method: function (value) {\n\t                value = parseInt(value);\n\t                if (value === 1) {\n\t                    return this._beatsToUnits(this._timeSignature());\n\t                } else {\n\t                    return this._beatsToUnits(4 / value);\n\t                }\n\t            }\n\t        },\n\t        't': {\n\t            regexp: /^(\\d+)t/i,\n\t            method: function (value) {\n\t                value = parseInt(value);\n\t                return this._beatsToUnits(8 / (parseInt(value) * 3));\n\t            }\n\t        },\n\t        'm': {\n\t            regexp: /^(\\d+)m/i,\n\t            method: function (value) {\n\t                return this._beatsToUnits(parseInt(value) * this._timeSignature());\n\t            }\n\t        },\n\t        'i': {\n\t            regexp: /^(\\d+)i/i,\n\t            method: function (value) {\n\t                return this._ticksToUnits(parseInt(value));\n\t            }\n\t        },\n\t        'hz': {\n\t            regexp: /^(\\d+(?:\\.\\d+)?)hz/i,\n\t            method: function (value) {\n\t                return this._frequencyToUnits(parseFloat(value));\n\t            }\n\t        },\n\t        'tr': {\n\t            regexp: /^(\\d+(?:\\.\\d+)?):(\\d+(?:\\.\\d+)?):?(\\d+(?:\\.\\d+)?)?/,\n\t            method: function (m, q, s) {\n\t                var total = 0;\n\t                if (m && m !== '0') {\n\t                    total += this._beatsToUnits(this._timeSignature() * parseFloat(m));\n\t                }\n\t                if (q && q !== '0') {\n\t                    total += this._beatsToUnits(parseFloat(q));\n\t                }\n\t                if (s && s !== '0') {\n\t                    total += this._beatsToUnits(parseFloat(s) / 4);\n\t                }\n\t                return total;\n\t            }\n\t        },\n\t        's': {\n\t            regexp: /^(\\d+(?:\\.\\d+)?s)/,\n\t            method: function (value) {\n\t                return this._secondsToUnits(parseFloat(value));\n\t            }\n\t        },\n\t        'samples': {\n\t            regexp: /^(\\d+)samples/,\n\t            method: function (value) {\n\t                return parseInt(value) / this.context.sampleRate;\n\t            }\n\t        },\n\t        'default': {\n\t            regexp: /^(\\d+(?:\\.\\d+)?)/,\n\t            method: function (value) {\n\t                return this._primaryExpressions[this._defaultUnits].method.call(this, value);\n\t            }\n\t        }\n\t    };\n\t    /**\n\t\t *  All the binary expressions that TimeBase can accept.\n\t\t *  @private\n\t\t *  @type  {Object}\n\t\t */\n\t    Tone.TimeBase.prototype._binaryExpressions = {\n\t        '+': {\n\t            regexp: /^\\+/,\n\t            precedence: 2,\n\t            method: function (lh, rh) {\n\t                return lh() + rh();\n\t            }\n\t        },\n\t        '-': {\n\t            regexp: /^\\-/,\n\t            precedence: 2,\n\t            method: function (lh, rh) {\n\t                return lh() - rh();\n\t            }\n\t        },\n\t        '*': {\n\t            regexp: /^\\*/,\n\t            precedence: 1,\n\t            method: function (lh, rh) {\n\t                return lh() * rh();\n\t            }\n\t        },\n\t        '/': {\n\t            regexp: /^\\//,\n\t            precedence: 1,\n\t            method: function (lh, rh) {\n\t                return lh() / rh();\n\t            }\n\t        }\n\t    };\n\t    /**\n\t\t *  All the unary expressions.\n\t\t *  @private\n\t\t *  @type  {Object}\n\t\t */\n\t    Tone.TimeBase.prototype._unaryExpressions = {\n\t        'neg': {\n\t            regexp: /^\\-/,\n\t            method: function (lh) {\n\t                return -lh();\n\t            }\n\t        }\n\t    };\n\t    /**\n\t\t *  Syntactic glue which holds expressions together\n\t\t *  @private\n\t\t *  @type  {Object}\n\t\t */\n\t    Tone.TimeBase.prototype._syntaxGlue = {\n\t        '(': { regexp: /^\\(/ },\n\t        ')': { regexp: /^\\)/ }\n\t    };\n\t    /**\n\t\t *  tokenize the expression based on the Expressions object\n\t\t *  @param   {string} expr \n\t\t *  @return  {Object}      returns two methods on the tokenized list, next and peek\n\t\t *  @private\n\t\t */\n\t    Tone.TimeBase.prototype._tokenize = function (expr) {\n\t        var position = -1;\n\t        var tokens = [];\n\t        while (expr.length > 0) {\n\t            expr = expr.trim();\n\t            var token = getNextToken(expr, this);\n\t            tokens.push(token);\n\t            expr = expr.substr(token.value.length);\n\t        }\n\t        function getNextToken(expr, context) {\n\t            var expressions = [\n\t                '_binaryExpressions',\n\t                '_unaryExpressions',\n\t                '_primaryExpressions',\n\t                '_syntaxGlue'\n\t            ];\n\t            for (var i = 0; i < expressions.length; i++) {\n\t                var group = context[expressions[i]];\n\t                for (var opName in group) {\n\t                    var op = group[opName];\n\t                    var reg = op.regexp;\n\t                    var match = expr.match(reg);\n\t                    if (match !== null) {\n\t                        return {\n\t                            method: op.method,\n\t                            precedence: op.precedence,\n\t                            regexp: op.regexp,\n\t                            value: match[0]\n\t                        };\n\t                    }\n\t                }\n\t            }\n\t            throw new SyntaxError('Tone.TimeBase: Unexpected token ' + expr);\n\t        }\n\t        return {\n\t            next: function () {\n\t                return tokens[++position];\n\t            },\n\t            peek: function () {\n\t                return tokens[position + 1];\n\t            }\n\t        };\n\t    };\n\t    /**\n\t\t *  Given a token, find the value within the groupName\n\t\t *  @param {Object} token\n\t\t *  @param {String} groupName\n\t\t *  @param {Number} precedence\n\t\t *  @private\n\t\t */\n\t    Tone.TimeBase.prototype._matchGroup = function (token, group, prec) {\n\t        var ret = false;\n\t        if (!this.isUndef(token)) {\n\t            for (var opName in group) {\n\t                var op = group[opName];\n\t                if (op.regexp.test(token.value)) {\n\t                    if (!this.isUndef(prec)) {\n\t                        if (op.precedence === prec) {\n\t                            return op;\n\t                        }\n\t                    } else {\n\t                        return op;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t        return ret;\n\t    };\n\t    /**\n\t\t *  Match a binary expression given the token and the precedence\n\t\t *  @param {Lexer} lexer\n\t\t *  @param {Number} precedence\n\t\t *  @private\n\t\t */\n\t    Tone.TimeBase.prototype._parseBinary = function (lexer, precedence) {\n\t        if (this.isUndef(precedence)) {\n\t            precedence = 2;\n\t        }\n\t        var expr;\n\t        if (precedence < 0) {\n\t            expr = this._parseUnary(lexer);\n\t        } else {\n\t            expr = this._parseBinary(lexer, precedence - 1);\n\t        }\n\t        var token = lexer.peek();\n\t        while (token && this._matchGroup(token, this._binaryExpressions, precedence)) {\n\t            token = lexer.next();\n\t            expr = token.method.bind(this, expr, this._parseBinary(lexer, precedence - 1));\n\t            token = lexer.peek();\n\t        }\n\t        return expr;\n\t    };\n\t    /**\n\t\t *  Match a unary expression.\n\t\t *  @param {Lexer} lexer\n\t\t *  @private\n\t\t */\n\t    Tone.TimeBase.prototype._parseUnary = function (lexer) {\n\t        var token, expr;\n\t        token = lexer.peek();\n\t        var op = this._matchGroup(token, this._unaryExpressions);\n\t        if (op) {\n\t            token = lexer.next();\n\t            expr = this._parseUnary(lexer);\n\t            return op.method.bind(this, expr);\n\t        }\n\t        return this._parsePrimary(lexer);\n\t    };\n\t    /**\n\t\t *  Match a primary expression (a value).\n\t\t *  @param {Lexer} lexer\n\t\t *  @private\n\t\t */\n\t    Tone.TimeBase.prototype._parsePrimary = function (lexer) {\n\t        var token, expr;\n\t        token = lexer.peek();\n\t        if (this.isUndef(token)) {\n\t            throw new SyntaxError('Tone.TimeBase: Unexpected end of expression');\n\t        }\n\t        if (this._matchGroup(token, this._primaryExpressions)) {\n\t            token = lexer.next();\n\t            var matching = token.value.match(token.regexp);\n\t            return token.method.bind(this, matching[1], matching[2], matching[3]);\n\t        }\n\t        if (token && token.value === '(') {\n\t            lexer.next();\n\t            expr = this._parseBinary(lexer);\n\t            token = lexer.next();\n\t            if (!(token && token.value === ')')) {\n\t                throw new SyntaxError('Expected )');\n\t            }\n\t            return expr;\n\t        }\n\t        throw new SyntaxError('Tone.TimeBase: Cannot process token ' + token.value);\n\t    };\n\t    /**\n\t\t *  Recursively parse the string expression into a syntax tree.\n\t\t *  @param   {string} expr \n\t\t *  @return  {Function} the bound method to be evaluated later\n\t\t *  @private\n\t\t */\n\t    Tone.TimeBase.prototype._parseExprString = function (exprString) {\n\t        if (!this.isString(exprString)) {\n\t            exprString = exprString.toString();\n\t        }\n\t        var lexer = this._tokenize(exprString);\n\t        var tree = this._parseBinary(lexer);\n\t        return tree;\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tDEFAULTS\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  The initial expression value\n\t\t *  @return  {Number}  The initial value 0\n\t\t *  @private\n\t\t */\n\t    Tone.TimeBase.prototype._noOp = function () {\n\t        return 0;\n\t    };\n\t    /**\n\t\t *  The default expression value if no arguments are given\n\t\t *  @private\n\t\t */\n\t    Tone.TimeBase.prototype._defaultExpr = function () {\n\t        return this._noOp;\n\t    };\n\t    /**\n\t\t *  The default units if none are given.\n\t\t *  @private\n\t\t */\n\t    Tone.TimeBase.prototype._defaultUnits = 's';\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tUNIT CONVERSIONS\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  Returns the value of a frequency in the current units\n\t\t *  @param {Frequency} freq\n\t\t *  @return  {Number}\n\t\t *  @private\n\t\t */\n\t    Tone.TimeBase.prototype._frequencyToUnits = function (freq) {\n\t        return 1 / freq;\n\t    };\n\t    /**\n\t\t *  Return the value of the beats in the current units\n\t\t *  @param {Number} beats\n\t\t *  @return  {Number}\n\t\t *  @private\n\t\t */\n\t    Tone.TimeBase.prototype._beatsToUnits = function (beats) {\n\t        return 60 / Tone.Transport.bpm.value * beats;\n\t    };\n\t    /**\n\t\t *  Returns the value of a second in the current units\n\t\t *  @param {Seconds} seconds\n\t\t *  @return  {Number}\n\t\t *  @private\n\t\t */\n\t    Tone.TimeBase.prototype._secondsToUnits = function (seconds) {\n\t        return seconds;\n\t    };\n\t    /**\n\t\t *  Returns the value of a tick in the current time units\n\t\t *  @param {Ticks} ticks\n\t\t *  @return  {Number}\n\t\t *  @private\n\t\t */\n\t    Tone.TimeBase.prototype._ticksToUnits = function (ticks) {\n\t        return ticks * (this._beatsToUnits(1) / Tone.Transport.PPQ);\n\t    };\n\t    /**\n\t\t *  Return the time signature.\n\t\t *  @return  {Number}\n\t\t *  @private\n\t\t */\n\t    Tone.TimeBase.prototype._timeSignature = function () {\n\t        return Tone.Transport.timeSignature;\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tEXPRESSIONS\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  Push an expression onto the expression list\n\t\t *  @param  {Time}  val\n\t\t *  @param  {String}  type\n\t\t *  @param  {String}  units\n\t\t *  @return  {Tone.TimeBase} \n\t\t *  @private\n\t\t */\n\t    Tone.TimeBase.prototype._pushExpr = function (val, name, units) {\n\t        //create the expression\n\t        if (!(val instanceof Tone.TimeBase)) {\n\t            val = new this.constructor(val, units);\n\t        }\n\t        this._expr = this._binaryExpressions[name].method.bind(this, this._expr, val._expr);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Add to the current value.\n\t\t *  @param  {Time}  val    The value to add\n\t\t *  @param  {String=}  units  Optional units to use with the value.\n\t\t *  @return  {Tone.TimeBase}  this\n\t\t *  @example\n\t\t * Tone.TimeBase(\"2m\").add(\"1m\"); //\"3m\"\n\t\t */\n\t    Tone.TimeBase.prototype.add = function (val, units) {\n\t        return this._pushExpr(val, '+', units);\n\t    };\n\t    /**\n\t\t *  Subtract the value from the current time.\n\t\t *  @param  {Time}  val    The value to subtract\n\t\t *  @param  {String=}  units  Optional units to use with the value.\n\t\t *  @return  {Tone.TimeBase}  this\n\t\t *  @example\n\t\t * Tone.TimeBase(\"2m\").sub(\"1m\"); //\"1m\"\n\t\t */\n\t    Tone.TimeBase.prototype.sub = function (val, units) {\n\t        return this._pushExpr(val, '-', units);\n\t    };\n\t    /**\n\t\t *  Multiply the current value by the given time.\n\t\t *  @param  {Time}  val    The value to multiply\n\t\t *  @param  {String=}  units  Optional units to use with the value.\n\t\t *  @return  {Tone.TimeBase}  this\n\t\t *  @example\n\t\t * Tone.TimeBase(\"2m\").mult(\"2\"); //\"4m\"\n\t\t */\n\t    Tone.TimeBase.prototype.mult = function (val, units) {\n\t        return this._pushExpr(val, '*', units);\n\t    };\n\t    /**\n\t\t *  Divide the current value by the given time.\n\t\t *  @param  {Time}  val    The value to divide by\n\t\t *  @param  {String=}  units  Optional units to use with the value.\n\t\t *  @return  {Tone.TimeBase}  this\n\t\t *  @example\n\t\t * Tone.TimeBase(\"2m\").div(2); //\"1m\"\n\t\t */\n\t    Tone.TimeBase.prototype.div = function (val, units) {\n\t        return this._pushExpr(val, '/', units);\n\t    };\n\t    /**\n\t\t *  Evaluate the time value. Returns the time\n\t\t *  in seconds.\n\t\t *  @return  {Seconds} \n\t\t */\n\t    Tone.TimeBase.prototype.valueOf = function () {\n\t        return this._expr();\n\t    };\n\t    /**\n\t\t *  Clean up\n\t\t *  @return {Tone.TimeBase} this\n\t\t */\n\t    Tone.TimeBase.prototype.dispose = function () {\n\t        this._expr = null;\n\t    };\n\t    return Tone.TimeBase;\n\t});\n\tModule(function (Tone) {\n\t    /**\n\t\t *  @class Tone.Time is a primitive type for encoding Time values. \n\t\t *         Eventually all time values are evaluated to seconds\n\t\t *         using the `eval` method. Tone.Time can be constructed\n\t\t *         with or without the `new` keyword. Tone.Time can be passed\n\t\t *         into the parameter of any method which takes time as an argument. \n\t\t *  @constructor\n\t\t *  @extends {Tone.TimeBase}\n\t\t *  @param  {String|Number}  val    The time value.\n\t\t *  @param  {String=}  units  The units of the value.\n\t\t *  @example\n\t\t * var t = Tone.Time(\"4n\");//encodes a quarter note\n\t\t * t.mult(4); // multiply that value by 4\n\t\t * t.toNotation(); //returns \"1m\"\n\t\t */\n\t    Tone.Time = function (val, units) {\n\t        if (this instanceof Tone.Time) {\n\t            /**\n\t\t\t\t *  If the current clock time should\n\t\t\t\t *  be added to the output\n\t\t\t\t *  @type  {Boolean}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t            this._plusNow = false;\n\t            Tone.TimeBase.call(this, val, units);\n\t        } else {\n\t            return new Tone.Time(val, units);\n\t        }\n\t    };\n\t    Tone.extend(Tone.Time, Tone.TimeBase);\n\t    //clone the expressions so that \n\t    //we can add more without modifying the original\n\t    Tone.Time.prototype._unaryExpressions = Object.create(Tone.TimeBase.prototype._unaryExpressions);\n\t    /*\n\t\t *  Adds an additional unary expression\n\t\t *  which quantizes values to the next subdivision\n\t\t *  @type {Object}\n\t\t *  @private\n\t\t */\n\t    Tone.Time.prototype._unaryExpressions.quantize = {\n\t        regexp: /^@/,\n\t        method: function (rh) {\n\t            return Tone.Transport.nextSubdivision(rh());\n\t        }\n\t    };\n\t    /*\n\t\t *  Adds an additional unary expression\n\t\t *  which adds the current clock time.\n\t\t *  @type {Object}\n\t\t *  @private\n\t\t */\n\t    Tone.Time.prototype._unaryExpressions.now = {\n\t        regexp: /^\\+/,\n\t        method: function (lh) {\n\t            this._plusNow = true;\n\t            return lh();\n\t        }\n\t    };\n\t    /**\n\t\t *  Quantize the time by the given subdivision. Optionally add a\n\t\t *  percentage which will move the time value towards the ideal\n\t\t *  quantized value by that percentage. \n\t\t *  @param  {Number|Time}  val    The subdivision to quantize to\n\t\t *  @param  {NormalRange}  [percent=1]  Move the time value\n\t\t *                                   towards the quantized value by\n\t\t *                                   a percentage.\n\t\t *  @return  {Tone.Time}  this\n\t\t *  @example\n\t\t * Tone.Time(21).quantize(2) //returns 22\n\t\t * Tone.Time(0.6).quantize(\"4n\", 0.5) //returns 0.55\n\t\t */\n\t    Tone.Time.prototype.quantize = function (subdiv, percent) {\n\t        percent = this.defaultArg(percent, 1);\n\t        this._expr = function (expr, subdivision, percent) {\n\t            expr = expr();\n\t            subdivision = subdivision.toSeconds();\n\t            var multiple = Math.round(expr / subdivision);\n\t            var ideal = multiple * subdivision;\n\t            var diff = ideal - expr;\n\t            return expr + diff * percent;\n\t        }.bind(this, this._expr, new this.constructor(subdiv), percent);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Adds the clock time to the time expression at the \n\t\t *  moment of evaluation. \n\t\t *  @return  {Tone.Time}  this\n\t\t */\n\t    Tone.Time.prototype.addNow = function () {\n\t        this._plusNow = true;\n\t        return this;\n\t    };\n\t    /**\n\t\t *  @override\n\t\t *  Override the default value return when no arguments are passed in.\n\t\t *  The default value is 'now'\n\t\t *  @private\n\t\t */\n\t    Tone.Time.prototype._defaultExpr = function () {\n\t        this._plusNow = true;\n\t        return this._noOp;\n\t    };\n\t    /**\n\t\t *  Copies the value of time to this Time\n\t\t *  @param {Tone.Time} time\n\t\t *  @return  {Time}\n\t\t */\n\t    Tone.Time.prototype.copy = function (time) {\n\t        Tone.TimeBase.prototype.copy.call(this, time);\n\t        this._plusNow = time._plusNow;\n\t        return this;\n\t    };\n\t    //CONVERSIONS//////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  Convert a Time to Notation. Values will be thresholded to the nearest 128th note. \n\t\t *  @return {Notation} \n\t\t *  @example\n\t\t * //if the Transport is at 120bpm:\n\t\t * Tone.Time(2).toNotation();//returns \"1m\"\n\t\t */\n\t    Tone.Time.prototype.toNotation = function () {\n\t        var time = this.toSeconds();\n\t        var testNotations = [\n\t            '1m',\n\t            '2n',\n\t            '4n',\n\t            '8n',\n\t            '16n',\n\t            '32n',\n\t            '64n',\n\t            '128n'\n\t        ];\n\t        var retNotation = this._toNotationHelper(time, testNotations);\n\t        //try the same thing but with tripelets\n\t        var testTripletNotations = [\n\t            '1m',\n\t            '2n',\n\t            '2t',\n\t            '4n',\n\t            '4t',\n\t            '8n',\n\t            '8t',\n\t            '16n',\n\t            '16t',\n\t            '32n',\n\t            '32t',\n\t            '64n',\n\t            '64t',\n\t            '128n'\n\t        ];\n\t        var retTripletNotation = this._toNotationHelper(time, testTripletNotations);\n\t        //choose the simpler expression of the two\n\t        if (retTripletNotation.split('+').length < retNotation.split('+').length) {\n\t            return retTripletNotation;\n\t        } else {\n\t            return retNotation;\n\t        }\n\t    };\n\t    /**\n\t\t *  Helper method for Tone.toNotation\n\t\t *  @param {Number} units \n\t\t *  @param {Array} testNotations\n\t\t *  @return {String}\n\t\t *  @private\n\t\t */\n\t    Tone.Time.prototype._toNotationHelper = function (units, testNotations) {\n\t        //the threshold is the last value in the array\n\t        var threshold = this._notationToUnits(testNotations[testNotations.length - 1]);\n\t        var retNotation = '';\n\t        for (var i = 0; i < testNotations.length; i++) {\n\t            var notationTime = this._notationToUnits(testNotations[i]);\n\t            //account for floating point errors (i.e. round up if the value is 0.999999)\n\t            var multiple = units / notationTime;\n\t            var floatingPointError = 0.000001;\n\t            if (1 - multiple % 1 < floatingPointError) {\n\t                multiple += floatingPointError;\n\t            }\n\t            multiple = Math.floor(multiple);\n\t            if (multiple > 0) {\n\t                if (multiple === 1) {\n\t                    retNotation += testNotations[i];\n\t                } else {\n\t                    retNotation += multiple.toString() + '*' + testNotations[i];\n\t                }\n\t                units -= multiple * notationTime;\n\t                if (units < threshold) {\n\t                    break;\n\t                } else {\n\t                    retNotation += ' + ';\n\t                }\n\t            }\n\t        }\n\t        if (retNotation === '') {\n\t            retNotation = '0';\n\t        }\n\t        return retNotation;\n\t    };\n\t    /**\n\t\t *  Convert a notation value to the current units\n\t\t *  @param  {Notation}  notation \n\t\t *  @return  {Number} \n\t\t *  @private\n\t\t */\n\t    Tone.Time.prototype._notationToUnits = function (notation) {\n\t        var primaryExprs = this._primaryExpressions;\n\t        var notationExprs = [\n\t            primaryExprs.n,\n\t            primaryExprs.t,\n\t            primaryExprs.m\n\t        ];\n\t        for (var i = 0; i < notationExprs.length; i++) {\n\t            var expr = notationExprs[i];\n\t            var match = notation.match(expr.regexp);\n\t            if (match) {\n\t                return expr.method.call(this, match[1]);\n\t            }\n\t        }\n\t    };\n\t    /**\n\t\t *  Return the time encoded as Bars:Beats:Sixteenths.\n\t\t *  @return  {BarsBeatsSixteenths}\n\t\t */\n\t    Tone.Time.prototype.toBarsBeatsSixteenths = function () {\n\t        var quarterTime = this._beatsToUnits(1);\n\t        var quarters = this.toSeconds() / quarterTime;\n\t        var measures = Math.floor(quarters / this._timeSignature());\n\t        var sixteenths = quarters % 1 * 4;\n\t        quarters = Math.floor(quarters) % this._timeSignature();\n\t        sixteenths = sixteenths.toString();\n\t        if (sixteenths.length > 3) {\n\t            sixteenths = parseFloat(sixteenths).toFixed(3);\n\t        }\n\t        var progress = [\n\t            measures,\n\t            quarters,\n\t            sixteenths\n\t        ];\n\t        return progress.join(':');\n\t    };\n\t    /**\n\t\t *  Return the time in ticks.\n\t\t *  @return  {Ticks}\n\t\t */\n\t    Tone.Time.prototype.toTicks = function () {\n\t        var quarterTime = this._beatsToUnits(1);\n\t        var quarters = this.valueOf() / quarterTime;\n\t        return Math.floor(quarters * Tone.Transport.PPQ);\n\t    };\n\t    /**\n\t\t *  Return the time in samples\n\t\t *  @return  {Samples}  \n\t\t */\n\t    Tone.Time.prototype.toSamples = function () {\n\t        return this.toSeconds() * this.context.sampleRate;\n\t    };\n\t    /**\n\t\t *  Return the time as a frequency value\n\t\t *  @return  {Frequency} \n\t\t *  @example\n\t\t * Tone.Time(2).toFrequency(); //0.5\n\t\t */\n\t    Tone.Time.prototype.toFrequency = function () {\n\t        return 1 / this.toSeconds();\n\t    };\n\t    /**\n\t\t *  Return the time in seconds.\n\t\t *  @return  {Seconds} \n\t\t */\n\t    Tone.Time.prototype.toSeconds = function () {\n\t        return this.valueOf();\n\t    };\n\t    /**\n\t\t *  Return the time in milliseconds.\n\t\t *  @return  {Milliseconds} \n\t\t */\n\t    Tone.Time.prototype.toMilliseconds = function () {\n\t        return this.toSeconds() * 1000;\n\t    };\n\t    /**\n\t\t *  Return the time in seconds.\n\t\t *  @return  {Seconds} \n\t\t */\n\t    Tone.Time.prototype.valueOf = function () {\n\t        var val = this._expr();\n\t        return val + (this._plusNow ? this.now() : 0);\n\t    };\n\t    return Tone.Time;\n\t});\n\tModule(function (Tone) {\n\t    /**\n\t\t *  @class Tone.Frequency is a primitive type for encoding Frequency values. \n\t\t *         Eventually all time values are evaluated to hertz\n\t\t *         using the `eval` method. \n\t\t *  @constructor\n\t\t *  @extends {Tone.TimeBase}\n\t\t *  @param  {String|Number}  val    The time value.\n\t\t *  @param  {String=}  units  The units of the value.\n\t\t *  @example\n\t\t * Tone.Frequency(\"C3\") // 261\n\t\t * Tone.Frequency(38, \"midi\") //\n\t\t * Tone.Frequency(\"C3\").transpose(4);\n\t\t */\n\t    Tone.Frequency = function (val, units) {\n\t        if (this instanceof Tone.Frequency) {\n\t            Tone.TimeBase.call(this, val, units);\n\t        } else {\n\t            return new Tone.Frequency(val, units);\n\t        }\n\t    };\n\t    Tone.extend(Tone.Frequency, Tone.TimeBase);\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tAUGMENT BASE EXPRESSIONS\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //clone the expressions so that \n\t    //we can add more without modifying the original\n\t    Tone.Frequency.prototype._primaryExpressions = Object.create(Tone.TimeBase.prototype._primaryExpressions);\n\t    /*\n\t\t *  midi type primary expression\n\t\t *  @type {Object}\n\t\t *  @private\n\t\t */\n\t    Tone.Frequency.prototype._primaryExpressions.midi = {\n\t        regexp: /^(\\d+(?:\\.\\d+)?midi)/,\n\t        method: function (value) {\n\t            return this.midiToFrequency(value);\n\t        }\n\t    };\n\t    /*\n\t\t *  note type primary expression\n\t\t *  @type {Object}\n\t\t *  @private\n\t\t */\n\t    Tone.Frequency.prototype._primaryExpressions.note = {\n\t        regexp: /^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i,\n\t        method: function (pitch, octave) {\n\t            var index = noteToScaleIndex[pitch.toLowerCase()];\n\t            var noteNumber = index + (parseInt(octave) + 1) * 12;\n\t            return this.midiToFrequency(noteNumber);\n\t        }\n\t    };\n\t    /*\n\t\t *  BeatsBarsSixteenths type primary expression\n\t\t *  @type {Object}\n\t\t *  @private\n\t\t */\n\t    Tone.Frequency.prototype._primaryExpressions.tr = {\n\t        regexp: /^(\\d+(?:\\.\\d+)?):(\\d+(?:\\.\\d+)?):?(\\d+(?:\\.\\d+)?)?/,\n\t        method: function (m, q, s) {\n\t            var total = 1;\n\t            if (m && m !== '0') {\n\t                total *= this._beatsToUnits(this._timeSignature() * parseFloat(m));\n\t            }\n\t            if (q && q !== '0') {\n\t                total *= this._beatsToUnits(parseFloat(q));\n\t            }\n\t            if (s && s !== '0') {\n\t                total *= this._beatsToUnits(parseFloat(s) / 4);\n\t            }\n\t            return total;\n\t        }\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tEXPRESSIONS\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  Transposes the frequency by the given number of semitones.\n\t\t *  @param  {Interval}  interval\n\t\t *  @return  {Tone.Frequency} this\n\t\t *  @example\n\t\t * Tone.Frequency(\"A4\").transpose(3); //\"C5\"\n\t\t */\n\t    Tone.Frequency.prototype.transpose = function (interval) {\n\t        this._expr = function (expr, interval) {\n\t            var val = expr();\n\t            return val * this.intervalToFrequencyRatio(interval);\n\t        }.bind(this, this._expr, interval);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Takes an array of semitone intervals and returns\n\t\t *  an array of frequencies transposed by those intervals.\n\t\t *  @param  {Array}  intervals\n\t\t *  @return  {Tone.Frequency} this\n\t\t *  @example\n\t\t * Tone.Frequency(\"A4\").harmonize([0, 3, 7]); //[\"A4\", \"C5\", \"E5\"]\n\t\t */\n\t    Tone.Frequency.prototype.harmonize = function (intervals) {\n\t        this._expr = function (expr, intervals) {\n\t            var val = expr();\n\t            var ret = [];\n\t            for (var i = 0; i < intervals.length; i++) {\n\t                ret[i] = val * this.intervalToFrequencyRatio(intervals[i]);\n\t            }\n\t            return ret;\n\t        }.bind(this, this._expr, intervals);\n\t        return this;\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tUNIT CONVERSIONS\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  Return the value of the frequency as a MIDI note\n\t\t *  @return  {MIDI}\n\t\t *  @example\n\t\t * Tone.Frequency(\"C4\").toMidi(); //60\n\t\t */\n\t    Tone.Frequency.prototype.toMidi = function () {\n\t        return this.frequencyToMidi(this.valueOf());\n\t    };\n\t    /**\n\t\t *  Return the value of the frequency in Scientific Pitch Notation\n\t\t *  @return  {Note}\n\t\t *  @example\n\t\t * Tone.Frequency(69, \"midi\").toNote(); //\"A4\"\n\t\t */\n\t    Tone.Frequency.prototype.toNote = function () {\n\t        var freq = this.valueOf();\n\t        var log = Math.log(freq / Tone.Frequency.A4) / Math.LN2;\n\t        var noteNumber = Math.round(12 * log) + 57;\n\t        var octave = Math.floor(noteNumber / 12);\n\t        if (octave < 0) {\n\t            noteNumber += -12 * octave;\n\t        }\n\t        var noteName = scaleIndexToNote[noteNumber % 12];\n\t        return noteName + octave.toString();\n\t    };\n\t    /**\n\t\t *  Return the duration of one cycle in seconds.\n\t\t *  @return  {Seconds}\n\t\t */\n\t    Tone.Frequency.prototype.toSeconds = function () {\n\t        return 1 / this.valueOf();\n\t    };\n\t    /**\n\t\t *  Return the value in Hertz\n\t\t *  @return  {Frequency}\n\t\t */\n\t    Tone.Frequency.prototype.toFrequency = function () {\n\t        return this.valueOf();\n\t    };\n\t    /**\n\t\t *  Return the duration of one cycle in ticks\n\t\t *  @return  {Ticks}\n\t\t */\n\t    Tone.Frequency.prototype.toTicks = function () {\n\t        var quarterTime = this._beatsToUnits(1);\n\t        var quarters = this.valueOf() / quarterTime;\n\t        return Math.floor(quarters * Tone.Transport.PPQ);\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tUNIT CONVERSIONS HELPERS\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  Returns the value of a frequency in the current units\n\t\t *  @param {Frequency} freq\n\t\t *  @return  {Number}\n\t\t *  @private\n\t\t */\n\t    Tone.Frequency.prototype._frequencyToUnits = function (freq) {\n\t        return freq;\n\t    };\n\t    /**\n\t\t *  Returns the value of a tick in the current time units\n\t\t *  @param {Ticks} ticks\n\t\t *  @return  {Number}\n\t\t *  @private\n\t\t */\n\t    Tone.Frequency.prototype._ticksToUnits = function (ticks) {\n\t        return 1 / (ticks * 60 / (Tone.Transport.bpm.value * Tone.Transport.PPQ));\n\t    };\n\t    /**\n\t\t *  Return the value of the beats in the current units\n\t\t *  @param {Number} beats\n\t\t *  @return  {Number}\n\t\t *  @private\n\t\t */\n\t    Tone.Frequency.prototype._beatsToUnits = function (beats) {\n\t        return 1 / Tone.TimeBase.prototype._beatsToUnits.call(this, beats);\n\t    };\n\t    /**\n\t\t *  Returns the value of a second in the current units\n\t\t *  @param {Seconds} seconds\n\t\t *  @return  {Number}\n\t\t *  @private\n\t\t */\n\t    Tone.Frequency.prototype._secondsToUnits = function (seconds) {\n\t        return 1 / seconds;\n\t    };\n\t    /**\n\t\t *  The default units if none are given.\n\t\t *  @private\n\t\t */\n\t    Tone.Frequency.prototype._defaultUnits = 'hz';\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tFREQUENCY CONVERSIONS\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  Note to scale index\n\t\t *  @type  {Object}\n\t\t */\n\t    var noteToScaleIndex = {\n\t        'cbb': -2,\n\t        'cb': -1,\n\t        'c': 0,\n\t        'c#': 1,\n\t        'cx': 2,\n\t        'dbb': 0,\n\t        'db': 1,\n\t        'd': 2,\n\t        'd#': 3,\n\t        'dx': 4,\n\t        'ebb': 2,\n\t        'eb': 3,\n\t        'e': 4,\n\t        'e#': 5,\n\t        'ex': 6,\n\t        'fbb': 3,\n\t        'fb': 4,\n\t        'f': 5,\n\t        'f#': 6,\n\t        'fx': 7,\n\t        'gbb': 5,\n\t        'gb': 6,\n\t        'g': 7,\n\t        'g#': 8,\n\t        'gx': 9,\n\t        'abb': 7,\n\t        'ab': 8,\n\t        'a': 9,\n\t        'a#': 10,\n\t        'ax': 11,\n\t        'bbb': 9,\n\t        'bb': 10,\n\t        'b': 11,\n\t        'b#': 12,\n\t        'bx': 13\n\t    };\n\t    /**\n\t\t *  scale index to note (sharps)\n\t\t *  @type  {Array}\n\t\t */\n\t    var scaleIndexToNote = [\n\t        'C',\n\t        'C#',\n\t        'D',\n\t        'D#',\n\t        'E',\n\t        'F',\n\t        'F#',\n\t        'G',\n\t        'G#',\n\t        'A',\n\t        'A#',\n\t        'B'\n\t    ];\n\t    /**\n\t\t *  The [concert pitch](https://en.wikipedia.org/wiki/Concert_pitch)\n\t\t *  A4's values in Hertz. \n\t\t *  @type {Frequency}\n\t\t *  @static\n\t\t */\n\t    Tone.Frequency.A4 = 440;\n\t    /**\n\t\t *  Convert a MIDI note to frequency value. \n\t\t *  @param  {MIDI} midi The midi number to convert.\n\t\t *  @return {Frequency} the corresponding frequency value\n\t\t *  @example\n\t\t * tone.midiToFrequency(69); // returns 440\n\t\t */\n\t    Tone.Frequency.prototype.midiToFrequency = function (midi) {\n\t        return Tone.Frequency.A4 * Math.pow(2, (midi - 69) / 12);\n\t    };\n\t    /**\n\t\t *  Convert a frequency value to a MIDI note.\n\t\t *  @param {Frequency} frequency The value to frequency value to convert.\n\t\t *  @returns  {MIDI}\n\t\t *  @example\n\t\t * tone.midiToFrequency(440); // returns 69\n\t\t */\n\t    Tone.Frequency.prototype.frequencyToMidi = function (frequency) {\n\t        return 69 + 12 * Math.log(frequency / Tone.Frequency.A4) / Math.LN2;\n\t    };\n\t    return Tone.Frequency;\n\t});\n\tModule(function (Tone) {\n\t    /**\n\t\t *  @class Tone.TransportTime is a the time along the Transport's\n\t\t *         timeline. It is similar to Tone.Time, but instead of evaluating\n\t\t *         against the AudioContext's clock, it is evaluated against\n\t\t *         the Transport's position. See [TransportTime wiki](https://github.com/Tonejs/Tone.js/wiki/TransportTime).\n\t\t *  @constructor\n\t\t *  @param  {Time}  val    The time value as a number or string\n\t\t *  @param  {String=}  units  Unit values\n\t\t *  @extends {Tone.Time}\n\t\t */\n\t    Tone.TransportTime = function (val, units) {\n\t        if (this instanceof Tone.TransportTime) {\n\t            Tone.Time.call(this, val, units);\n\t        } else {\n\t            return new Tone.TransportTime(val, units);\n\t        }\n\t    };\n\t    Tone.extend(Tone.TransportTime, Tone.Time);\n\t    //clone the expressions so that \n\t    //we can add more without modifying the original\n\t    Tone.TransportTime.prototype._unaryExpressions = Object.create(Tone.Time.prototype._unaryExpressions);\n\t    /**\n\t\t *  Adds an additional unary expression\n\t\t *  which quantizes values to the next subdivision\n\t\t *  @type {Object}\n\t\t *  @private\n\t\t */\n\t    Tone.TransportTime.prototype._unaryExpressions.quantize = {\n\t        regexp: /^@/,\n\t        method: function (rh) {\n\t            var subdivision = this._secondsToTicks(rh());\n\t            var multiple = Math.ceil(Tone.Transport.ticks / subdivision);\n\t            return this._ticksToUnits(multiple * subdivision);\n\t        }\n\t    };\n\t    /**\n\t\t *  Convert seconds into ticks\n\t\t *  @param {Seconds} seconds\n\t\t *  @return  {Ticks}\n\t\t *  @private\n\t\t */\n\t    Tone.TransportTime.prototype._secondsToTicks = function (seconds) {\n\t        var quarterTime = this._beatsToUnits(1);\n\t        var quarters = seconds / quarterTime;\n\t        return Math.round(quarters * Tone.Transport.PPQ);\n\t    };\n\t    /**\n\t\t *  Evaluate the time expression. Returns values in ticks\n\t\t *  @return {Ticks}\n\t\t */\n\t    Tone.TransportTime.prototype.valueOf = function () {\n\t        var val = this._secondsToTicks(this._expr());\n\t        return val + (this._plusNow ? Tone.Transport.ticks : 0);\n\t    };\n\t    /**\n\t\t *  Return the time in ticks.\n\t\t *  @return  {Ticks}\n\t\t */\n\t    Tone.TransportTime.prototype.toTicks = function () {\n\t        return this.valueOf();\n\t    };\n\t    /**\n\t\t *  Return the time in seconds.\n\t\t *  @return  {Seconds}\n\t\t */\n\t    Tone.TransportTime.prototype.toSeconds = function () {\n\t        var val = this._expr();\n\t        return val + (this._plusNow ? Tone.Transport.seconds : 0);\n\t    };\n\t    /**\n\t\t *  Return the time as a frequency value\n\t\t *  @return  {Frequency} \n\t\t */\n\t    Tone.TransportTime.prototype.toFrequency = function () {\n\t        return 1 / this.toSeconds();\n\t    };\n\t    return Tone.TransportTime;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.Emitter gives classes which extend it\n\t\t *         the ability to listen for and emit events. \n\t\t *         Inspiration and reference from Jerome Etienne's [MicroEvent](https://github.com/jeromeetienne/microevent.js).\n\t\t *         MIT (c) 2011 Jerome Etienne.\n\t\t *         \n\t\t *  @extends {Tone}\n\t\t */\n\t    Tone.Emitter = function () {\n\t        /**\n\t\t\t *  Contains all of the events.\n\t\t\t *  @private\n\t\t\t *  @type  {Object}\n\t\t\t */\n\t        this._events = {};\n\t    };\n\t    Tone.extend(Tone.Emitter);\n\t    /**\n\t\t *  Bind a callback to a specific event.\n\t\t *  @param  {String}    event     The name of the event to listen for.\n\t\t *  @param  {Function}  callback  The callback to invoke when the\n\t\t *                                event is emitted\n\t\t *  @return  {Tone.Emitter}    this\n\t\t */\n\t    Tone.Emitter.prototype.on = function (event, callback) {\n\t        //split the event\n\t        var events = event.split(/\\W+/);\n\t        for (var i = 0; i < events.length; i++) {\n\t            var eventName = events[i];\n\t            if (!this._events.hasOwnProperty(eventName)) {\n\t                this._events[eventName] = [];\n\t            }\n\t            this._events[eventName].push(callback);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Remove the event listener.\n\t\t *  @param  {String}    event     The event to stop listening to.\n\t\t *  @param  {Function=}  callback  The callback which was bound to \n\t\t *                                the event with Tone.Emitter.on.\n\t\t *                                If no callback is given, all callbacks\n\t\t *                                events are removed.\n\t\t *  @return  {Tone.Emitter}    this\n\t\t */\n\t    Tone.Emitter.prototype.off = function (event, callback) {\n\t        var events = event.split(/\\W+/);\n\t        for (var ev = 0; ev < events.length; ev++) {\n\t            event = events[ev];\n\t            if (this._events.hasOwnProperty(event)) {\n\t                if (Tone.prototype.isUndef(callback)) {\n\t                    this._events[event] = [];\n\t                } else {\n\t                    var eventList = this._events[event];\n\t                    for (var i = 0; i < eventList.length; i++) {\n\t                        if (eventList[i] === callback) {\n\t                            eventList.splice(i, 1);\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Invoke all of the callbacks bound to the event\n\t\t *  with any arguments passed in. \n\t\t *  @param  {String}  event  The name of the event.\n\t\t *  @param {*...} args The arguments to pass to the functions listening.\n\t\t *  @return  {Tone.Emitter}  this\n\t\t */\n\t    Tone.Emitter.prototype.emit = function (event) {\n\t        if (this._events) {\n\t            var args = Array.apply(null, arguments).slice(1);\n\t            if (this._events.hasOwnProperty(event)) {\n\t                var eventList = this._events[event];\n\t                for (var i = 0, len = eventList.length; i < len; i++) {\n\t                    eventList[i].apply(this, args);\n\t                }\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Add Emitter functions (on/off/emit) to the object\n\t\t *  @param  {Object|Function}  object  The object or class to extend.\n\t\t */\n\t    Tone.Emitter.mixin = function (object) {\n\t        var functions = [\n\t            'on',\n\t            'off',\n\t            'emit'\n\t        ];\n\t        object._events = {};\n\t        for (var i = 0; i < functions.length; i++) {\n\t            var func = functions[i];\n\t            var emitterFunc = Tone.Emitter.prototype[func];\n\t            object[func] = emitterFunc;\n\t        }\n\t    };\n\t    /**\n\t\t *  Clean up\n\t\t *  @return  {Tone.Emitter}  this\n\t\t */\n\t    Tone.Emitter.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._events = null;\n\t        return this;\n\t    };\n\t    return Tone.Emitter;\n\t});\n\tModule(function (Tone) {\n\t    /**\n\t\t *  shim\n\t\t *  @private\n\t\t */\n\t    if (!window.hasOwnProperty('AudioContext') && window.hasOwnProperty('webkitAudioContext')) {\n\t        window.AudioContext = window.webkitAudioContext;\n\t    }\n\t    /**\n\t\t *  @class Wrapper around the native AudioContext.\n\t\t *  @extends {Tone.Emitter}\n\t\t *  @param {AudioContext=} context optionally pass in a context\n\t\t */\n\t    Tone.Context = function (context) {\n\t        Tone.Emitter.call(this);\n\t        if (!context) {\n\t            context = new window.AudioContext();\n\t        }\n\t        this._context = context;\n\t        // extend all of the methods\n\t        for (var prop in this._context) {\n\t            this._defineProperty(this._context, prop);\n\t        }\n\t        ///////////////////////////////////////////////////////////////////////\n\t        // WORKER\n\t        ///////////////////////////////////////////////////////////////////////\n\t        /**\n\t\t\t *  The default latency hint\n\t\t\t *  @type  {String}\n\t\t\t *  @private\n\t\t\t */\n\t        this._latencyHint = 'interactive';\n\t        /**\n\t\t\t *  The amount of time events are scheduled\n\t\t\t *  into the future\n\t\t\t *  @type  {Number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._lookAhead = 0.1;\n\t        /**\n\t\t\t *  How often the update look runs\n\t\t\t *  @type  {Number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._updateInterval = this._lookAhead / 3;\n\t        /**\n\t\t\t *  A reference to the actual computed update interval\n\t\t\t *  @type  {Number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._computedUpdateInterval = 0;\n\t        /**\n\t\t\t *  The web worker which is used to update Tone.Clock\n\t\t\t *  @private\n\t\t\t *  @type  {WebWorker}\n\t\t\t */\n\t        this._worker = this._createWorker();\n\t        /**\n\t\t\t *  An object containing all of the constants AudioBufferSourceNodes\n\t\t\t *  @type  {Object}\n\t\t\t *  @private\n\t\t\t */\n\t        this._constants = {};\n\t    };\n\t    Tone.extend(Tone.Context, Tone.Emitter);\n\t    Tone.Emitter.mixin(Tone.Context);\n\t    /**\n\t\t *  Define a property on this Tone.Context. \n\t\t *  This is used to extend the native AudioContext\n\t\t *  @param  {AudioContext}  context\n\t\t *  @param  {String}  prop \n\t\t *  @private\n\t\t */\n\t    Tone.Context.prototype._defineProperty = function (context, prop) {\n\t        if (this.isUndef(this[prop])) {\n\t            Object.defineProperty(this, prop, {\n\t                get: function () {\n\t                    if (typeof context[prop] === 'function') {\n\t                        return context[prop].bind(context);\n\t                    } else {\n\t                        return context[prop];\n\t                    }\n\t                },\n\t                set: function (val) {\n\t                    context[prop] = val;\n\t                }\n\t            });\n\t        }\n\t    };\n\t    /**\n\t\t *  The current audio context time\n\t\t *  @return  {Number}\n\t\t */\n\t    Tone.Context.prototype.now = function () {\n\t        return this._context.currentTime;\n\t    };\n\t    /**\n\t\t *  Generate a web worker\n\t\t *  @return  {WebWorker}\n\t\t *  @private\n\t\t */\n\t    Tone.Context.prototype._createWorker = function () {\n\t        //URL Shim\n\t        window.URL = window.URL || window.webkitURL;\n\t        var blob = new Blob([//the initial timeout time\n\t            'var timeoutTime = ' + (this._updateInterval * 1000).toFixed(1) + ';' + //onmessage callback\n\t            'self.onmessage = function(msg){' + '\\ttimeoutTime = parseInt(msg.data);' + '};' + //the tick function which posts a message\n\t            //and schedules a new tick\n\t            'function tick(){' + '\\tsetTimeout(tick, timeoutTime);' + '\\tself.postMessage(\\'tick\\');' + '}' + //call tick initially\n\t            'tick();']);\n\t        var blobUrl = URL.createObjectURL(blob);\n\t        var worker = new Worker(blobUrl);\n\t        worker.addEventListener('message', function () {\n\t            // tick the clock\n\t            this.emit('tick');\n\t        }.bind(this));\n\t        //lag compensation\n\t        worker.addEventListener('message', function () {\n\t            var now = this.now();\n\t            if (this.isNumber(this._lastUpdate)) {\n\t                var diff = now - this._lastUpdate;\n\t                this._computedUpdateInterval = Math.max(diff, this._computedUpdateInterval * 0.97);\n\t            }\n\t            this._lastUpdate = now;\n\t        }.bind(this));\n\t        return worker;\n\t    };\n\t    /**\n\t\t *  Generate a looped buffer at some constant value.\n\t\t *  @param  {Number}  val\n\t\t *  @return  {BufferSourceNode}\n\t\t */\n\t    Tone.Context.prototype.getConstant = function (val) {\n\t        if (this._constants[val]) {\n\t            return this._constants[val];\n\t        } else {\n\t            var buffer = this._context.createBuffer(1, 128, this._context.sampleRate);\n\t            var arr = buffer.getChannelData(0);\n\t            for (var i = 0; i < arr.length; i++) {\n\t                arr[i] = val;\n\t            }\n\t            var constant = this._context.createBufferSource();\n\t            constant.channelCount = 1;\n\t            constant.channelCountMode = 'explicit';\n\t            constant.buffer = buffer;\n\t            constant.loop = true;\n\t            constant.start(0);\n\t            this._constants[val] = constant;\n\t            return constant;\n\t        }\n\t    };\n\t    /**\n\t\t *  This is the time that the clock is falling behind\n\t\t *  the scheduled update interval. The Context automatically\n\t\t *  adjusts for the lag and schedules further in advance.\n\t\t *  @type {Number}\n\t\t *  @memberOf Tone.Context\n\t\t *  @name lag\n\t\t *  @static\n\t\t *  @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.Context.prototype, 'lag', {\n\t        get: function () {\n\t            var diff = this._computedUpdateInterval - this._updateInterval;\n\t            diff = Math.max(diff, 0);\n\t            return diff;\n\t        }\n\t    });\n\t    /**\n\t\t *  The amount of time in advance that events are scheduled.\n\t\t *  The lookAhead will adjust slightly in response to the \n\t\t *  measured update time to try to avoid clicks.\n\t\t *  @type {Number}\n\t\t *  @memberOf Tone.Context\n\t\t *  @name lookAhead\n\t\t *  @static\n\t\t */\n\t    Object.defineProperty(Tone.Context.prototype, 'lookAhead', {\n\t        get: function () {\n\t            return this._lookAhead;\n\t        },\n\t        set: function (lA) {\n\t            this._lookAhead = lA;\n\t        }\n\t    });\n\t    /**\n\t\t *  How often the Web Worker callback is invoked.\n\t\t *  This number corresponds to how responsive the scheduling\n\t\t *  can be. Context.updateInterval + Context.lookAhead gives you the\n\t\t *  total latency between scheduling an event and hearing it.\n\t\t *  @type {Number}\n\t\t *  @memberOf Tone.Context\n\t\t *  @name updateInterval\n\t\t *  @static\n\t\t */\n\t    Object.defineProperty(Tone.Context.prototype, 'updateInterval', {\n\t        get: function () {\n\t            return this._updateInterval;\n\t        },\n\t        set: function (interval) {\n\t            this._updateInterval = Math.max(interval, Tone.prototype.blockTime);\n\t            this._worker.postMessage(Math.max(interval * 1000, 1));\n\t        }\n\t    });\n\t    /**\n\t\t *  The type of playback, which affects tradeoffs between audio \n\t\t *  output latency and responsiveness. \n\t\t *  \n\t\t *  In addition to setting the value in seconds, the latencyHint also\n\t\t *  accepts the strings \"interactive\" (prioritizes low latency), \n\t\t *  \"playback\" (prioritizes sustained playback), \"balanced\" (balances\n\t\t *  latency and performance), and \"fastest\" (lowest latency, might glitch more often). \n\t\t *  @type {String|Seconds}\n\t\t *  @memberOf Tone.Context#\n\t\t *  @name latencyHint\n\t\t *  @static\n\t\t *  @example\n\t\t * //set the lookAhead to 0.3 seconds\n\t\t * Tone.context.latencyHint = 0.3;\n\t\t */\n\t    Object.defineProperty(Tone.Context.prototype, 'latencyHint', {\n\t        get: function () {\n\t            return this._latencyHint;\n\t        },\n\t        set: function (hint) {\n\t            var lookAhead = hint;\n\t            this._latencyHint = hint;\n\t            if (this.isString(hint)) {\n\t                switch (hint) {\n\t                case 'interactive':\n\t                    lookAhead = 0.1;\n\t                    this._context.latencyHint = hint;\n\t                    break;\n\t                case 'playback':\n\t                    lookAhead = 0.8;\n\t                    this._context.latencyHint = hint;\n\t                    break;\n\t                case 'balanced':\n\t                    lookAhead = 0.25;\n\t                    this._context.latencyHint = hint;\n\t                    break;\n\t                case 'fastest':\n\t                    lookAhead = 0.01;\n\t                    break;\n\t                }\n\t            }\n\t            this.lookAhead = lookAhead;\n\t            this.updateInterval = lookAhead / 3;\n\t        }\n\t    });\n\t    /**\n\t\t *  Shim all connect/disconnect and some deprecated methods which are still in\n\t\t *  some older implementations.\n\t\t *  @private\n\t\t */\n\t    function shimConnect() {\n\t        var nativeConnect = AudioNode.prototype.connect;\n\t        var nativeDisconnect = AudioNode.prototype.disconnect;\n\t        //replace the old connect method\n\t        function toneConnect(B, outNum, inNum) {\n\t            if (B.input) {\n\t                if (Array.isArray(B.input)) {\n\t                    if (Tone.prototype.isUndef(inNum)) {\n\t                        inNum = 0;\n\t                    }\n\t                    this.connect(B.input[inNum]);\n\t                } else {\n\t                    this.connect(B.input, outNum, inNum);\n\t                }\n\t            } else {\n\t                try {\n\t                    if (B instanceof AudioNode) {\n\t                        nativeConnect.call(this, B, outNum, inNum);\n\t                    } else {\n\t                        nativeConnect.call(this, B, outNum);\n\t                    }\n\t                } catch (e) {\n\t                    throw new Error('error connecting to node: ' + B + '\\n' + e);\n\t                }\n\t            }\n\t        }\n\t        //replace the old disconnect method\n\t        function toneDisconnect(B, outNum, inNum) {\n\t            if (B && B.input && Array.isArray(B.input)) {\n\t                if (Tone.prototype.isUndef(inNum)) {\n\t                    inNum = 0;\n\t                }\n\t                this.disconnect(B.input[inNum], outNum, inNum);\n\t            } else if (B && B.input) {\n\t                this.disconnect(B.input, outNum, inNum);\n\t            } else {\n\t                try {\n\t                    nativeDisconnect.apply(this, arguments);\n\t                } catch (e) {\n\t                    throw new Error('error disconnecting node: ' + B + '\\n' + e);\n\t                }\n\t            }\n\t        }\n\t        if (AudioNode.prototype.connect !== toneConnect) {\n\t            AudioNode.prototype.connect = toneConnect;\n\t            AudioNode.prototype.disconnect = toneDisconnect;\n\t        }\n\t    }\n\t    // set the audio context initially\n\t    if (Tone.supported) {\n\t        shimConnect();\n\t        Tone.context = new Tone.Context();\n\t    } else {\n\t        console.warn('This browser does not support Tone.js');\n\t    }\n\t    return Tone.Context;\n\t});\n\tModule(function (Tone) {\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tTYPES\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t * Units which a value can take on.\n\t\t * @enum {String}\n\t\t */\n\t    Tone.Type = {\n\t        /** \n\t\t\t *  Default units\n\t\t\t *  @typedef {Default}\n\t\t\t */\n\t        Default: 'number',\n\t        /**\n\t\t\t *  Time can be described in a number of ways. Read more [Time](https://github.com/Tonejs/Tone.js/wiki/Time).\n\t\t\t *\n\t\t\t *  <ul>\n\t\t\t *  <li>Numbers, which will be taken literally as the time (in seconds).</li>\n\t\t\t *  <li>Notation, (\"4n\", \"8t\") describes time in BPM and time signature relative values.</li>\n\t\t\t *  <li>TransportTime, (\"4:3:2\") will also provide tempo and time signature relative times \n\t\t\t *  in the form BARS:QUARTERS:SIXTEENTHS.</li>\n\t\t\t *  <li>Frequency, (\"8hz\") is converted to the length of the cycle in seconds.</li>\n\t\t\t *  <li>Now-Relative, (\"+1\") prefix any of the above with \"+\" and it will be interpreted as \n\t\t\t *  \"the current time plus whatever expression follows\".</li>\n\t\t\t *  <li>Expressions, (\"3:0 + 2 - (1m / 7)\") any of the above can also be combined \n\t\t\t *  into a mathematical expression which will be evaluated to compute the desired time.</li>\n\t\t\t *  <li>No Argument, for methods which accept time, no argument will be interpreted as \n\t\t\t *  \"now\" (i.e. the currentTime).</li>\n\t\t\t *  </ul>\n\t\t\t *  \n\t\t\t *  @typedef {Time}\n\t\t\t */\n\t        Time: 'time',\n\t        /**\n\t\t\t *  Frequency can be described similar to time, except ultimately the\n\t\t\t *  values are converted to frequency instead of seconds. A number\n\t\t\t *  is taken literally as the value in hertz. Additionally any of the \n\t\t\t *  Time encodings can be used. Note names in the form\n\t\t\t *  of NOTE OCTAVE (i.e. C4) are also accepted and converted to their\n\t\t\t *  frequency value. \n\t\t\t *  @typedef {Frequency}\n\t\t\t */\n\t        Frequency: 'frequency',\n\t        /**\n\t\t\t *  TransportTime describes a position along the Transport's timeline. It is\n\t\t\t *  similar to Time in that it uses all the same encodings, but TransportTime specifically\n\t\t\t *  pertains to the Transport's timeline, which is startable, stoppable, loopable, and seekable. \n\t\t\t *  [Read more](https://github.com/Tonejs/Tone.js/wiki/TransportTime)\n\t\t\t *  @typedef {TransportTime}\n\t\t\t */\n\t        TransportTime: 'transportTime',\n\t        /** \n\t\t\t *  Ticks are the basic subunit of the Transport. They are\n\t\t\t *  the smallest unit of time that the Transport supports.\n\t\t\t *  @typedef {Ticks}\n\t\t\t */\n\t        Ticks: 'ticks',\n\t        /** \n\t\t\t *  Normal values are within the range [0, 1].\n\t\t\t *  @typedef {NormalRange}\n\t\t\t */\n\t        NormalRange: 'normalRange',\n\t        /** \n\t\t\t *  AudioRange values are between [-1, 1].\n\t\t\t *  @typedef {AudioRange}\n\t\t\t */\n\t        AudioRange: 'audioRange',\n\t        /** \n\t\t\t *  Decibels are a logarithmic unit of measurement which is useful for volume\n\t\t\t *  because of the logarithmic way that we perceive loudness. 0 decibels \n\t\t\t *  means no change in volume. -10db is approximately half as loud and 10db \n\t\t\t *  is twice is loud. \n\t\t\t *  @typedef {Decibels}\n\t\t\t */\n\t        Decibels: 'db',\n\t        /** \n\t\t\t *  Half-step note increments, i.e. 12 is an octave above the root. and 1 is a half-step up.\n\t\t\t *  @typedef {Interval}\n\t\t\t */\n\t        Interval: 'interval',\n\t        /** \n\t\t\t *  Beats per minute. \n\t\t\t *  @typedef {BPM}\n\t\t\t */\n\t        BPM: 'bpm',\n\t        /** \n\t\t\t *  The value must be greater than or equal to 0.\n\t\t\t *  @typedef {Positive}\n\t\t\t */\n\t        Positive: 'positive',\n\t        /** \n\t\t\t *  A cent is a hundredth of a semitone. \n\t\t\t *  @typedef {Cents}\n\t\t\t */\n\t        Cents: 'cents',\n\t        /** \n\t\t\t *  Angle between 0 and 360. \n\t\t\t *  @typedef {Degrees}\n\t\t\t */\n\t        Degrees: 'degrees',\n\t        /** \n\t\t\t *  A number representing a midi note.\n\t\t\t *  @typedef {MIDI}\n\t\t\t */\n\t        MIDI: 'midi',\n\t        /** \n\t\t\t *  A colon-separated representation of time in the form of\n\t\t\t *  Bars:Beats:Sixteenths. \n\t\t\t *  @typedef {BarsBeatsSixteenths}\n\t\t\t */\n\t        BarsBeatsSixteenths: 'barsBeatsSixteenths',\n\t        /** \n\t\t\t *  Sampling is the reduction of a continuous signal to a discrete signal.\n\t\t\t *  Audio is typically sampled 44100 times per second. \n\t\t\t *  @typedef {Samples}\n\t\t\t */\n\t        Samples: 'samples',\n\t        /** \n\t\t\t *  Hertz are a frequency representation defined as one cycle per second.\n\t\t\t *  @typedef {Hertz}\n\t\t\t */\n\t        Hertz: 'hertz',\n\t        /** \n\t\t\t *  A frequency represented by a letter name, \n\t\t\t *  accidental and octave. This system is known as\n\t\t\t *  [Scientific Pitch Notation](https://en.wikipedia.org/wiki/Scientific_pitch_notation).\n\t\t\t *  @typedef {Note}\n\t\t\t */\n\t        Note: 'note',\n\t        /** \n\t\t\t *  One millisecond is a thousandth of a second. \n\t\t\t *  @typedef {Milliseconds}\n\t\t\t */\n\t        Milliseconds: 'milliseconds',\n\t        /** \n\t\t\t *  Seconds are the time unit of the AudioContext. In the end, \n\t\t\t *  all values need to be evaluated to seconds. \n\t\t\t *  @typedef {Seconds}\n\t\t\t */\n\t        Seconds: 'seconds',\n\t        /** \n\t\t\t *  A string representing a duration relative to a measure. \n\t\t\t *  <ul>\n\t\t\t *  \t<li>\"4n\" = quarter note</li>\n\t\t\t *   \t<li>\"2m\" = two measures</li>\n\t\t\t *    \t<li>\"8t\" = eighth-note triplet</li>\n\t\t\t *  </ul>\n\t\t\t *  @typedef {Notation}\n\t\t\t */\n\t        Notation: 'notation'\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    // AUGMENT TONE's PROTOTYPE\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  Convert Time into seconds.\n\t\t *  \n\t\t *  Unlike the method which it overrides, this takes into account \n\t\t *  transporttime and musical notation.\n\t\t *\n\t\t *  Time : 1.40\n\t\t *  Notation: 4n|1m|2t\n\t\t *  Now Relative: +3n\n\t\t *  Math: 3n+16n or even complicated expressions ((3n*2)/6 + 1)\n\t\t *\n\t\t *  @param  {Time} time \n\t\t *  @return {Seconds} \n\t\t */\n\t    Tone.prototype.toSeconds = function (time) {\n\t        if (this.isNumber(time)) {\n\t            return time;\n\t        } else if (this.isUndef(time)) {\n\t            return this.now();\n\t        } else if (this.isString(time)) {\n\t            return new Tone.Time(time).toSeconds();\n\t        } else if (time instanceof Tone.TimeBase) {\n\t            return time.toSeconds();\n\t        }\n\t    };\n\t    /**\n\t\t *  Convert a frequency representation into a number.\n\t\t *  @param  {Frequency} freq \n\t\t *  @return {Hertz}      the frequency in hertz\n\t\t */\n\t    Tone.prototype.toFrequency = function (freq) {\n\t        if (this.isNumber(freq)) {\n\t            return freq;\n\t        } else if (this.isString(freq) || this.isUndef(freq)) {\n\t            return new Tone.Frequency(freq).valueOf();\n\t        } else if (freq instanceof Tone.TimeBase) {\n\t            return freq.toFrequency();\n\t        }\n\t    };\n\t    /**\n\t\t *  Convert a time representation into ticks.\n\t\t *  @param  {Time} time\n\t\t *  @return {Ticks}  the time in ticks\n\t\t */\n\t    Tone.prototype.toTicks = function (time) {\n\t        if (this.isNumber(time) || this.isString(time)) {\n\t            return new Tone.TransportTime(time).toTicks();\n\t        } else if (this.isUndef(time)) {\n\t            return Tone.Transport.ticks;\n\t        } else if (time instanceof Tone.TimeBase) {\n\t            return time.toTicks();\n\t        }\n\t    };\n\t    return Tone;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.Param wraps the native Web Audio's AudioParam to provide\n\t\t *         additional unit conversion functionality. It also\n\t\t *         serves as a base-class for classes which have a single,\n\t\t *         automatable parameter. \n\t\t *  @extends {Tone}\n\t\t *  @param  {AudioParam}  param  The parameter to wrap.\n\t\t *  @param  {Tone.Type} units The units of the audio param.\n\t\t *  @param  {Boolean} convert If the param should be converted.\n\t\t */\n\t    Tone.Param = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'param',\n\t            'units',\n\t            'convert'\n\t        ], Tone.Param.defaults);\n\t        /**\n\t\t\t *  The native parameter to control\n\t\t\t *  @type  {AudioParam}\n\t\t\t *  @private\n\t\t\t */\n\t        this._param = this.input = options.param;\n\t        /**\n\t\t\t *  The units of the parameter\n\t\t\t *  @type {Tone.Type}\n\t\t\t */\n\t        this.units = options.units;\n\t        /**\n\t\t\t *  If the value should be converted or not\n\t\t\t *  @type {Boolean}\n\t\t\t */\n\t        this.convert = options.convert;\n\t        /**\n\t\t\t *  True if the signal value is being overridden by \n\t\t\t *  a connected signal.\n\t\t\t *  @readOnly\n\t\t\t *  @type  {boolean}\n\t\t\t *  @private\n\t\t\t */\n\t        this.overridden = false;\n\t        /**\n\t\t\t *  If there is an LFO, this is where it is held.\n\t\t\t *  @type  {Tone.LFO}\n\t\t\t *  @private\n\t\t\t */\n\t        this._lfo = null;\n\t        if (this.isObject(options.lfo)) {\n\t            this.value = options.lfo;\n\t        } else if (!this.isUndef(options.value)) {\n\t            this.value = options.value;\n\t        }\n\t    };\n\t    Tone.extend(Tone.Param);\n\t    /**\n\t\t *  Defaults\n\t\t *  @type  {Object}\n\t\t *  @const\n\t\t */\n\t    Tone.Param.defaults = {\n\t        'units': Tone.Type.Default,\n\t        'convert': true,\n\t        'param': undefined\n\t    };\n\t    /**\n\t\t * The current value of the parameter. \n\t\t * @memberOf Tone.Param#\n\t\t * @type {Number}\n\t\t * @name value\n\t\t */\n\t    Object.defineProperty(Tone.Param.prototype, 'value', {\n\t        get: function () {\n\t            return this._toUnits(this._param.value);\n\t        },\n\t        set: function (value) {\n\t            if (this.isObject(value)) {\n\t                //throw an error if the LFO needs to be included\n\t                if (this.isUndef(Tone.LFO)) {\n\t                    throw new Error('Include \\'Tone.LFO\\' to use an LFO as a Param value.');\n\t                }\n\t                //remove the old one\n\t                if (this._lfo) {\n\t                    this._lfo.dispose();\n\t                }\n\t                this._lfo = new Tone.LFO(value).start();\n\t                this._lfo.connect(this.input);\n\t            } else {\n\t                var convertedVal = this._fromUnits(value);\n\t                this._param.cancelScheduledValues(0);\n\t                this._param.value = convertedVal;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  Convert the given value from the type specified by Tone.Param.units\n\t\t *  into the destination value (such as Gain or Frequency).\n\t\t *  @private\n\t\t *  @param  {*} val the value to convert\n\t\t *  @return {number}     the number which the value should be set to\n\t\t */\n\t    Tone.Param.prototype._fromUnits = function (val) {\n\t        if (this.convert || this.isUndef(this.convert)) {\n\t            switch (this.units) {\n\t            case Tone.Type.Time:\n\t                return this.toSeconds(val);\n\t            case Tone.Type.Frequency:\n\t                return this.toFrequency(val);\n\t            case Tone.Type.Decibels:\n\t                return this.dbToGain(val);\n\t            case Tone.Type.NormalRange:\n\t                return Math.min(Math.max(val, 0), 1);\n\t            case Tone.Type.AudioRange:\n\t                return Math.min(Math.max(val, -1), 1);\n\t            case Tone.Type.Positive:\n\t                return Math.max(val, 0);\n\t            default:\n\t                return val;\n\t            }\n\t        } else {\n\t            return val;\n\t        }\n\t    };\n\t    /**\n\t\t * Convert the parameters value into the units specified by Tone.Param.units.\n\t\t * @private\n\t\t * @param  {number} val the value to convert\n\t\t * @return {number}\n\t\t */\n\t    Tone.Param.prototype._toUnits = function (val) {\n\t        if (this.convert || this.isUndef(this.convert)) {\n\t            switch (this.units) {\n\t            case Tone.Type.Decibels:\n\t                return this.gainToDb(val);\n\t            default:\n\t                return val;\n\t            }\n\t        } else {\n\t            return val;\n\t        }\n\t    };\n\t    /**\n\t\t *  the minimum output value\n\t\t *  @type {Number}\n\t\t *  @private\n\t\t */\n\t    Tone.Param.prototype._minOutput = 0.00001;\n\t    /**\n\t\t *  Schedules a parameter value change at the given time.\n\t\t *  @param {*}\tvalue The value to set the signal.\n\t\t *  @param {Time}  time The time when the change should occur.\n\t\t *  @returns {Tone.Param} this\n\t\t *  @example\n\t\t * //set the frequency to \"G4\" in exactly 1 second from now. \n\t\t * freq.setValueAtTime(\"G4\", \"+1\");\n\t\t */\n\t    Tone.Param.prototype.setValueAtTime = function (value, time) {\n\t        value = this._fromUnits(value);\n\t        time = this.toSeconds(time);\n\t        if (time <= this.now() + this.blockTime) {\n\t            this._param.value = value;\n\t        } else {\n\t            this._param.setValueAtTime(value, time);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Creates a schedule point with the current value at the current time.\n\t\t *  This is useful for creating an automation anchor point in order to \n\t\t *  schedule changes from the current value. \n\t\t *\n\t\t *  @param {number=} now (Optionally) pass the now value in. \n\t\t *  @returns {Tone.Param} this\n\t\t */\n\t    Tone.Param.prototype.setRampPoint = function (now) {\n\t        now = this.defaultArg(now, this.now());\n\t        var currentVal = this._param.value;\n\t        // exponentialRampToValueAt cannot ever ramp from or to 0\n\t        // More info: https://bugzilla.mozilla.org/show_bug.cgi?id=1125600#c2\n\t        if (currentVal === 0) {\n\t            currentVal = this._minOutput;\n\t        }\n\t        this._param.setValueAtTime(currentVal, now);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Schedules a linear continuous change in parameter value from the \n\t\t *  previous scheduled parameter value to the given value.\n\t\t *  \n\t\t *  @param  {number} value   \n\t\t *  @param  {Time} endTime \n\t\t *  @returns {Tone.Param} this\n\t\t */\n\t    Tone.Param.prototype.linearRampToValueAtTime = function (value, endTime) {\n\t        value = this._fromUnits(value);\n\t        this._param.linearRampToValueAtTime(value, this.toSeconds(endTime));\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Schedules an exponential continuous change in parameter value from \n\t\t *  the previous scheduled parameter value to the given value.\n\t\t *  \n\t\t *  @param  {number} value   \n\t\t *  @param  {Time} endTime \n\t\t *  @returns {Tone.Param} this\n\t\t */\n\t    Tone.Param.prototype.exponentialRampToValueAtTime = function (value, endTime) {\n\t        value = this._fromUnits(value);\n\t        value = Math.max(this._minOutput, value);\n\t        this._param.exponentialRampToValueAtTime(value, this.toSeconds(endTime));\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Schedules an exponential continuous change in parameter value from \n\t\t *  the current time and current value to the given value over the \n\t\t *  duration of the rampTime.\n\t\t *  \n\t\t *  @param  {number} value   The value to ramp to.\n\t\t *  @param  {Time} rampTime the time that it takes the \n\t\t *                               value to ramp from it's current value\n\t\t *  @param {Time}\t[startTime=now] \tWhen the ramp should start. \n\t\t *  @returns {Tone.Param} this\n\t\t *  @example\n\t\t * //exponentially ramp to the value 2 over 4 seconds. \n\t\t * signal.exponentialRampToValue(2, 4);\n\t\t */\n\t    Tone.Param.prototype.exponentialRampToValue = function (value, rampTime, startTime) {\n\t        startTime = this.toSeconds(startTime);\n\t        this.setRampPoint(startTime);\n\t        this.exponentialRampToValueAtTime(value, startTime + this.toSeconds(rampTime));\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Schedules an linear continuous change in parameter value from \n\t\t *  the current time and current value to the given value over the \n\t\t *  duration of the rampTime.\n\t\t *  \n\t\t *  @param  {number} value   The value to ramp to.\n\t\t *  @param  {Time} rampTime the time that it takes the \n\t\t *                               value to ramp from it's current value\n\t\t *  @param {Time}\t[startTime=now] \tWhen the ramp should start. \n\t\t *  @returns {Tone.Param} this\n\t\t *  @example\n\t\t * //linearly ramp to the value 4 over 3 seconds. \n\t\t * signal.linearRampToValue(4, 3);\n\t\t */\n\t    Tone.Param.prototype.linearRampToValue = function (value, rampTime, startTime) {\n\t        startTime = this.toSeconds(startTime);\n\t        this.setRampPoint(startTime);\n\t        this.linearRampToValueAtTime(value, startTime + this.toSeconds(rampTime));\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Start exponentially approaching the target value at the given time with\n\t\t *  a rate having the given time constant.\n\t\t *  @param {number} value        \n\t\t *  @param {Time} startTime    \n\t\t *  @param {number} timeConstant \n\t\t *  @returns {Tone.Param} this \n\t\t */\n\t    Tone.Param.prototype.setTargetAtTime = function (value, startTime, timeConstant) {\n\t        value = this._fromUnits(value);\n\t        // The value will never be able to approach without timeConstant > 0.\n\t        // http://www.w3.org/TR/webaudio/#dfn-setTargetAtTime, where the equation\n\t        // is described. 0 results in a division by 0.\n\t        value = Math.max(this._minOutput, value);\n\t        timeConstant = Math.max(this._minOutput, timeConstant);\n\t        this._param.setTargetAtTime(value, this.toSeconds(startTime), timeConstant);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Sets an array of arbitrary parameter values starting at the given time\n\t\t *  for the given duration.\n\t\t *  \t\n\t\t *  @param {Array} values    \n\t\t *  @param {Time} startTime \n\t\t *  @param {Time} duration  \n\t\t *  @returns {Tone.Param} this\n\t\t */\n\t    Tone.Param.prototype.setValueCurveAtTime = function (values, startTime, duration) {\n\t        for (var i = 0; i < values.length; i++) {\n\t            values[i] = this._fromUnits(values[i]);\n\t        }\n\t        this._param.setValueCurveAtTime(values, this.toSeconds(startTime), this.toSeconds(duration));\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Cancels all scheduled parameter changes with times greater than or \n\t\t *  equal to startTime.\n\t\t *  \n\t\t *  @param  {Time} startTime\n\t\t *  @returns {Tone.Param} this\n\t\t */\n\t    Tone.Param.prototype.cancelScheduledValues = function (startTime) {\n\t        this._param.cancelScheduledValues(this.toSeconds(startTime));\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Ramps to the given value over the duration of the rampTime. \n\t\t *  Automatically selects the best ramp type (exponential or linear)\n\t\t *  depending on the `units` of the signal\n\t\t *  \n\t\t *  @param  {number} value   \n\t\t *  @param  {Time} rampTime \tThe time that it takes the \n\t\t *                              value to ramp from it's current value\n\t\t *  @param {Time}\t[startTime=now] \tWhen the ramp should start. \n\t\t *  @returns {Tone.Param} this\n\t\t *  @example\n\t\t * //ramp to the value either linearly or exponentially \n\t\t * //depending on the \"units\" value of the signal\n\t\t * signal.rampTo(0, 10);\n\t\t *  @example\n\t\t * //schedule it to ramp starting at a specific time\n\t\t * signal.rampTo(0, 10, 5)\n\t\t */\n\t    Tone.Param.prototype.rampTo = function (value, rampTime, startTime) {\n\t        rampTime = this.defaultArg(rampTime, 0);\n\t        if (this.units === Tone.Type.Frequency || this.units === Tone.Type.BPM || this.units === Tone.Type.Decibels) {\n\t            this.exponentialRampToValue(value, rampTime, startTime);\n\t        } else {\n\t            this.linearRampToValue(value, rampTime, startTime);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  The LFO created by the signal instance. If none\n\t\t *  was created, this is null.\n\t\t *  @type {Tone.LFO}\n\t\t *  @readOnly\n\t\t *  @memberOf Tone.Param#\n\t\t *  @name lfo\n\t\t */\n\t    Object.defineProperty(Tone.Param.prototype, 'lfo', {\n\t        get: function () {\n\t            return this._lfo;\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up\n\t\t *  @returns {Tone.Param} this\n\t\t */\n\t    Tone.Param.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._param = null;\n\t        if (this._lfo) {\n\t            this._lfo.dispose();\n\t            this._lfo = null;\n\t        }\n\t        return this;\n\t    };\n\t    return Tone.Param;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  createGain shim\n\t\t *  @private\n\t\t */\n\t    if (window.GainNode && !AudioContext.prototype.createGain) {\n\t        AudioContext.prototype.createGain = AudioContext.prototype.createGainNode;\n\t    }\n\t    /**\n\t\t *  @class A thin wrapper around the Native Web Audio GainNode.\n\t\t *         The GainNode is a basic building block of the Web Audio\n\t\t *         API and is useful for routing audio and adjusting gains. \n\t\t *  @extends {Tone}\n\t\t *  @param  {Number=}  gain  The initial gain of the GainNode\n\t\t *  @param {Tone.Type=} units The units of the gain parameter. \n\t\t */\n\t    Tone.Gain = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'gain',\n\t            'units'\n\t        ], Tone.Gain.defaults);\n\t        /**\n\t\t\t *  The GainNode\n\t\t\t *  @type  {GainNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this.input = this.output = this._gainNode = this.context.createGain();\n\t        /**\n\t\t\t *  The gain parameter of the gain node.\n\t\t\t *  @type {Tone.Param}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.gain = new Tone.Param({\n\t            'param': this._gainNode.gain,\n\t            'units': options.units,\n\t            'value': options.gain,\n\t            'convert': options.convert\n\t        });\n\t        this._readOnly('gain');\n\t    };\n\t    Tone.extend(Tone.Gain);\n\t    /**\n\t\t *  The defaults\n\t\t *  @const\n\t\t *  @type  {Object}\n\t\t */\n\t    Tone.Gain.defaults = {\n\t        'gain': 1,\n\t        'convert': true\n\t    };\n\t    /**\n\t\t *  Clean up.\n\t\t *  @return  {Tone.Gain}  this\n\t\t */\n\t    Tone.Gain.prototype.dispose = function () {\n\t        Tone.Param.prototype.dispose.call(this);\n\t        this._gainNode.disconnect();\n\t        this._gainNode = null;\n\t        this._writable('gain');\n\t        this.gain.dispose();\n\t        this.gain = null;\n\t    };\n\t    //STATIC///////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  Create input and outputs for this object.\n\t\t *  @param  {Number}  input   The number of inputs\n\t\t *  @param  {Number=}  outputs  The number of outputs\n\t\t *  @return  {Tone}  this\n\t\t *  @internal\n\t\t */\n\t    Tone.prototype.createInsOuts = function (inputs, outputs) {\n\t        if (inputs === 1) {\n\t            this.input = new Tone.Gain();\n\t        } else if (inputs > 1) {\n\t            this.input = new Array(inputs);\n\t        }\n\t        if (outputs === 1) {\n\t            this.output = new Tone.Gain();\n\t        } else if (outputs > 1) {\n\t            this.output = new Array(inputs);\n\t        }\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    return Tone.Gain;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  A signal is an audio-rate value. Tone.Signal is a core component of the library.\n\t\t *          Unlike a number, Signals can be scheduled with sample-level accuracy. Tone.Signal\n\t\t *          has all of the methods available to native Web Audio \n\t\t *          [AudioParam](http://webaudio.github.io/web-audio-api/#the-audioparam-interface)\n\t\t *          as well as additional conveniences. Read more about working with signals \n\t\t *          [here](https://github.com/Tonejs/Tone.js/wiki/Signals).\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Param}\n\t\t *  @param {Number|AudioParam} [value] Initial value of the signal. If an AudioParam\n\t\t *                                     is passed in, that parameter will be wrapped\n\t\t *                                     and controlled by the Signal. \n\t\t *  @param {string} [units=Number] unit The units the signal is in. \n\t\t *  @example\n\t\t * var signal = new Tone.Signal(10);\n\t\t */\n\t    Tone.Signal = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'value',\n\t            'units'\n\t        ], Tone.Signal.defaults);\n\t        /**\n\t\t\t * The node where the constant signal value is scaled.\n\t\t\t * @type {GainNode}\n\t\t\t * @private\n\t\t\t */\n\t        this.output = this._gain = this.context.createGain();\n\t        options.param = this._gain.gain;\n\t        Tone.Param.call(this, options);\n\t        /**\n\t\t\t * The node where the value is set.\n\t\t\t * @type {Tone.Param}\n\t\t\t * @private\n\t\t\t */\n\t        this.input = this._param = this._gain.gain;\n\t        //connect the const output to the node output\n\t        this.context.getConstant(1).chain(this._gain);\n\t    };\n\t    Tone.extend(Tone.Signal, Tone.Param);\n\t    /**\n\t\t *  The default values\n\t\t *  @type  {Object}\n\t\t *  @static\n\t\t *  @const\n\t\t */\n\t    Tone.Signal.defaults = {\n\t        'value': 0,\n\t        'units': Tone.Type.Default,\n\t        'convert': true\n\t    };\n\t    /**\n\t\t *  When signals connect to other signals or AudioParams, \n\t\t *  they take over the output value of that signal or AudioParam. \n\t\t *  For all other nodes, the behavior is the same as a default <code>connect</code>. \n\t\t *\n\t\t *  @override\n\t\t *  @param {AudioParam|AudioNode|Tone.Signal|Tone} node \n\t\t *  @param {number} [outputNumber=0] The output number to connect from.\n\t\t *  @param {number} [inputNumber=0] The input number to connect to.\n\t\t *  @returns {Tone.SignalBase} this\n\t\t *  @method\n\t\t */\n\t    Tone.Signal.prototype.connect = Tone.SignalBase.prototype.connect;\n\t    /**\n\t\t *  dispose and disconnect\n\t\t *  @returns {Tone.Signal} this\n\t\t */\n\t    Tone.Signal.prototype.dispose = function () {\n\t        Tone.Param.prototype.dispose.call(this);\n\t        this._param = null;\n\t        this._gain.disconnect();\n\t        this._gain = null;\n\t        return this;\n\t    };\n\t    return Tone.Signal;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class A Timeline class for scheduling and maintaining state\n\t\t *         along a timeline. All events must have a \"time\" property. \n\t\t *         Internally, events are stored in time order for fast \n\t\t *         retrieval.\n\t\t *  @extends {Tone}\n\t\t *  @param {Positive} [memory=Infinity] The number of previous events that are retained.\n\t\t */\n\t    Tone.Timeline = function () {\n\t        var options = this.optionsObject(arguments, ['memory'], Tone.Timeline.defaults);\n\t        /**\n\t\t\t *  The array of scheduled timeline events\n\t\t\t *  @type  {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._timeline = [];\n\t        /**\n\t\t\t *  An array of items to remove from the list. \n\t\t\t *  @type {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._toRemove = [];\n\t        /**\n\t\t\t *  Flag if the tieline is mid iteration\n\t\t\t *  @private\n\t\t\t *  @type {Boolean}\n\t\t\t */\n\t        this._iterating = false;\n\t        /**\n\t\t\t *  The memory of the timeline, i.e.\n\t\t\t *  how many events in the past it will retain\n\t\t\t *  @type {Positive}\n\t\t\t */\n\t        this.memory = options.memory;\n\t    };\n\t    Tone.extend(Tone.Timeline);\n\t    /**\n\t\t *  the default parameters\n\t\t *  @static\n\t\t *  @const\n\t\t */\n\t    Tone.Timeline.defaults = { 'memory': Infinity };\n\t    /**\n\t\t *  The number of items in the timeline.\n\t\t *  @type {Number}\n\t\t *  @memberOf Tone.Timeline#\n\t\t *  @name length\n\t\t *  @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.Timeline.prototype, 'length', {\n\t        get: function () {\n\t            return this._timeline.length;\n\t        }\n\t    });\n\t    /**\n\t\t *  Insert an event object onto the timeline. Events must have a \"time\" attribute.\n\t\t *  @param  {Object}  event  The event object to insert into the \n\t\t *                           timeline. \n\t\t *  @returns {Tone.Timeline} this\n\t\t */\n\t    Tone.Timeline.prototype.add = function (event) {\n\t        //the event needs to have a time attribute\n\t        if (this.isUndef(event.time)) {\n\t            throw new Error('Tone.Timeline: events must have a time attribute');\n\t        }\n\t        if (this._timeline.length) {\n\t            var index = this._search(event.time);\n\t            this._timeline.splice(index + 1, 0, event);\n\t        } else {\n\t            this._timeline.push(event);\n\t        }\n\t        //if the length is more than the memory, remove the previous ones\n\t        if (this.length > this.memory) {\n\t            var diff = this.length - this.memory;\n\t            this._timeline.splice(0, diff);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Remove an event from the timeline.\n\t\t *  @param  {Object}  event  The event object to remove from the list.\n\t\t *  @returns {Tone.Timeline} this\n\t\t */\n\t    Tone.Timeline.prototype.remove = function (event) {\n\t        if (this._iterating) {\n\t            this._toRemove.push(event);\n\t        } else {\n\t            var index = this._timeline.indexOf(event);\n\t            if (index !== -1) {\n\t                this._timeline.splice(index, 1);\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Get the nearest event whose time is less than or equal to the given time.\n\t\t *  @param  {Number}  time  The time to query.\n\t\t *  @returns {Object} The event object set after that time.\n\t\t */\n\t    Tone.Timeline.prototype.get = function (time) {\n\t        var index = this._search(time);\n\t        if (index !== -1) {\n\t            return this._timeline[index];\n\t        } else {\n\t            return null;\n\t        }\n\t    };\n\t    /**\n\t\t *  Return the first event in the timeline without removing it\n\t\t *  @returns {Object} The first event object\n\t\t */\n\t    Tone.Timeline.prototype.peek = function () {\n\t        return this._timeline[0];\n\t    };\n\t    /**\n\t\t *  Return the first event in the timeline and remove it\n\t\t *  @returns {Object} The first event object\n\t\t */\n\t    Tone.Timeline.prototype.shift = function () {\n\t        return this._timeline.shift();\n\t    };\n\t    /**\n\t\t *  Get the event which is scheduled after the given time.\n\t\t *  @param  {Number}  time  The time to query.\n\t\t *  @returns {Object} The event object after the given time\n\t\t */\n\t    Tone.Timeline.prototype.getAfter = function (time) {\n\t        var index = this._search(time);\n\t        if (index + 1 < this._timeline.length) {\n\t            return this._timeline[index + 1];\n\t        } else {\n\t            return null;\n\t        }\n\t    };\n\t    /**\n\t\t *  Get the event before the event at the given time.\n\t\t *  @param  {Number}  time  The time to query.\n\t\t *  @returns {Object} The event object before the given time\n\t\t */\n\t    Tone.Timeline.prototype.getBefore = function (time) {\n\t        var len = this._timeline.length;\n\t        //if it's after the last item, return the last item\n\t        if (len > 0 && this._timeline[len - 1].time < time) {\n\t            return this._timeline[len - 1];\n\t        }\n\t        var index = this._search(time);\n\t        if (index - 1 >= 0) {\n\t            return this._timeline[index - 1];\n\t        } else {\n\t            return null;\n\t        }\n\t    };\n\t    /**\n\t\t *  Cancel events after the given time\n\t\t *  @param  {Number}  time  The time to query.\n\t\t *  @returns {Tone.Timeline} this\n\t\t */\n\t    Tone.Timeline.prototype.cancel = function (after) {\n\t        if (this._timeline.length > 1) {\n\t            var index = this._search(after);\n\t            if (index >= 0) {\n\t                if (this._timeline[index].time === after) {\n\t                    //get the first item with that time\n\t                    for (var i = index; i >= 0; i--) {\n\t                        if (this._timeline[i].time === after) {\n\t                            index = i;\n\t                        } else {\n\t                            break;\n\t                        }\n\t                    }\n\t                    this._timeline = this._timeline.slice(0, index);\n\t                } else {\n\t                    this._timeline = this._timeline.slice(0, index + 1);\n\t                }\n\t            } else {\n\t                this._timeline = [];\n\t            }\n\t        } else if (this._timeline.length === 1) {\n\t            //the first item's time\n\t            if (this._timeline[0].time >= after) {\n\t                this._timeline = [];\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Cancel events before or equal to the given time.\n\t\t *  @param  {Number}  time  The time to cancel before.\n\t\t *  @returns {Tone.Timeline} this\n\t\t */\n\t    Tone.Timeline.prototype.cancelBefore = function (time) {\n\t        if (this._timeline.length) {\n\t            var index = this._search(time);\n\t            if (index >= 0) {\n\t                this._timeline = this._timeline.slice(index + 1);\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Does a binary serach on the timeline array and returns the \n\t\t *  nearest event index whose time is after or equal to the given time.\n\t\t *  If a time is searched before the first index in the timeline, -1 is returned.\n\t\t *  If the time is after the end, the index of the last item is returned.\n\t\t *  @param  {Number}  time  \n\t\t *  @return  {Number} the index in the timeline array \n\t\t *  @private\n\t\t */\n\t    Tone.Timeline.prototype._search = function (time) {\n\t        var beginning = 0;\n\t        var len = this._timeline.length;\n\t        var end = len;\n\t        if (len > 0 && this._timeline[len - 1].time <= time) {\n\t            return len - 1;\n\t        }\n\t        while (beginning < end) {\n\t            // calculate the midpoint for roughly equal partition\n\t            var midPoint = Math.floor(beginning + (end - beginning) / 2);\n\t            var event = this._timeline[midPoint];\n\t            var nextEvent = this._timeline[midPoint + 1];\n\t            if (event.time === time) {\n\t                //choose the last one that has the same time\n\t                for (var i = midPoint; i < this._timeline.length; i++) {\n\t                    var testEvent = this._timeline[i];\n\t                    if (testEvent.time === time) {\n\t                        midPoint = i;\n\t                    }\n\t                }\n\t                return midPoint;\n\t            } else if (event.time < time && nextEvent.time > time) {\n\t                return midPoint;\n\t            } else if (event.time > time) {\n\t                //search lower\n\t                end = midPoint;\n\t            } else if (event.time < time) {\n\t                //search upper\n\t                beginning = midPoint + 1;\n\t            }\n\t        }\n\t        return -1;\n\t    };\n\t    /**\n\t\t *  Internal iterator. Applies extra safety checks for \n\t\t *  removing items from the array. \n\t\t *  @param  {Function}  callback \n\t\t *  @param  {Number=}    lowerBound     \n\t\t *  @param  {Number=}    upperBound    \n\t\t *  @private\n\t\t */\n\t    Tone.Timeline.prototype._iterate = function (callback, lowerBound, upperBound) {\n\t        this._iterating = true;\n\t        lowerBound = this.defaultArg(lowerBound, 0);\n\t        upperBound = this.defaultArg(upperBound, this._timeline.length - 1);\n\t        for (var i = lowerBound; i <= upperBound; i++) {\n\t            callback(this._timeline[i]);\n\t        }\n\t        this._iterating = false;\n\t        if (this._toRemove.length > 0) {\n\t            for (var j = 0; j < this._toRemove.length; j++) {\n\t                var index = this._timeline.indexOf(this._toRemove[j]);\n\t                if (index !== -1) {\n\t                    this._timeline.splice(index, 1);\n\t                }\n\t            }\n\t            this._toRemove = [];\n\t        }\n\t    };\n\t    /**\n\t\t *  Iterate over everything in the array\n\t\t *  @param  {Function}  callback The callback to invoke with every item\n\t\t *  @returns {Tone.Timeline} this\n\t\t */\n\t    Tone.Timeline.prototype.forEach = function (callback) {\n\t        this._iterate(callback);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Iterate over everything in the array at or before the given time.\n\t\t *  @param  {Number}  time The time to check if items are before\n\t\t *  @param  {Function}  callback The callback to invoke with every item\n\t\t *  @returns {Tone.Timeline} this\n\t\t */\n\t    Tone.Timeline.prototype.forEachBefore = function (time, callback) {\n\t        //iterate over the items in reverse so that removing an item doesn't break things\n\t        var upperBound = this._search(time);\n\t        if (upperBound !== -1) {\n\t            this._iterate(callback, 0, upperBound);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Iterate over everything in the array after the given time.\n\t\t *  @param  {Number}  time The time to check if items are before\n\t\t *  @param  {Function}  callback The callback to invoke with every item\n\t\t *  @returns {Tone.Timeline} this\n\t\t */\n\t    Tone.Timeline.prototype.forEachAfter = function (time, callback) {\n\t        //iterate over the items in reverse so that removing an item doesn't break things\n\t        var lowerBound = this._search(time);\n\t        this._iterate(callback, lowerBound + 1);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Iterate over everything in the array at or after the given time. Similar to \n\t\t *  forEachAfter, but includes the item(s) at the given time.\n\t\t *  @param  {Number}  time The time to check if items are before\n\t\t *  @param  {Function}  callback The callback to invoke with every item\n\t\t *  @returns {Tone.Timeline} this\n\t\t */\n\t    Tone.Timeline.prototype.forEachFrom = function (time, callback) {\n\t        //iterate over the items in reverse so that removing an item doesn't break things\n\t        var lowerBound = this._search(time);\n\t        //work backwards until the event time is less than time\n\t        while (lowerBound >= 0 && this._timeline[lowerBound].time >= time) {\n\t            lowerBound--;\n\t        }\n\t        this._iterate(callback, lowerBound + 1);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Iterate over everything in the array at the given time\n\t\t *  @param  {Number}  time The time to check if items are before\n\t\t *  @param  {Function}  callback The callback to invoke with every item\n\t\t *  @returns {Tone.Timeline} this\n\t\t */\n\t    Tone.Timeline.prototype.forEachAtTime = function (time, callback) {\n\t        //iterate over the items in reverse so that removing an item doesn't break things\n\t        var upperBound = this._search(time);\n\t        if (upperBound !== -1) {\n\t            this._iterate(function (event) {\n\t                if (event.time === time) {\n\t                    callback(event);\n\t                }\n\t            }, 0, upperBound);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Clean up.\n\t\t *  @return  {Tone.Timeline}  this\n\t\t */\n\t    Tone.Timeline.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._timeline = null;\n\t        this._toRemove = null;\n\t    };\n\t    return Tone.Timeline;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class A signal which adds the method getValueAtTime. \n\t\t *         Code and inspiration from https://github.com/jsantell/web-audio-automation-timeline\n\t\t *  @extends {Tone.Param}\n\t\t *  @param {Number=} value The initial value of the signal\n\t\t *  @param {String=} units The conversion units of the signal.\n\t\t */\n\t    Tone.TimelineSignal = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'value',\n\t            'units'\n\t        ], Tone.Signal.defaults);\n\t        /**\n\t\t\t *  The scheduled events\n\t\t\t *  @type {Tone.Timeline}\n\t\t\t *  @private\n\t\t\t */\n\t        this._events = new Tone.Timeline(10);\n\t        //constructors\n\t        Tone.Signal.apply(this, options);\n\t        options.param = this._param;\n\t        Tone.Param.call(this, options);\n\t        /**\n\t\t\t *  The initial scheduled value\n\t\t\t *  @type {Number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._initial = this._fromUnits(this._param.value);\n\t    };\n\t    Tone.extend(Tone.TimelineSignal, Tone.Param);\n\t    /**\n\t\t *  The event types of a schedulable signal.\n\t\t *  @enum {String}\n\t\t *  @private\n\t\t */\n\t    Tone.TimelineSignal.Type = {\n\t        Linear: 'linear',\n\t        Exponential: 'exponential',\n\t        Target: 'target',\n\t        Curve: 'curve',\n\t        Set: 'set'\n\t    };\n\t    /**\n\t\t * The current value of the signal. \n\t\t * @memberOf Tone.TimelineSignal#\n\t\t * @type {Number}\n\t\t * @name value\n\t\t */\n\t    Object.defineProperty(Tone.TimelineSignal.prototype, 'value', {\n\t        get: function () {\n\t            var now = this.now();\n\t            var val = this.getValueAtTime(now);\n\t            return this._toUnits(val);\n\t        },\n\t        set: function (value) {\n\t            var convertedVal = this._fromUnits(value);\n\t            this._initial = convertedVal;\n\t            this.cancelScheduledValues();\n\t            this._param.value = convertedVal;\n\t        }\n\t    });\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tSCHEDULING\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  Schedules a parameter value change at the given time.\n\t\t *  @param {*}\tvalue The value to set the signal.\n\t\t *  @param {Time}  time The time when the change should occur.\n\t\t *  @returns {Tone.TimelineSignal} this\n\t\t *  @example\n\t\t * //set the frequency to \"G4\" in exactly 1 second from now. \n\t\t * freq.setValueAtTime(\"G4\", \"+1\");\n\t\t */\n\t    Tone.TimelineSignal.prototype.setValueAtTime = function (value, startTime) {\n\t        value = this._fromUnits(value);\n\t        startTime = this.toSeconds(startTime);\n\t        this._events.add({\n\t            'type': Tone.TimelineSignal.Type.Set,\n\t            'value': value,\n\t            'time': startTime\n\t        });\n\t        //invoke the original event\n\t        this._param.setValueAtTime(value, startTime);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Schedules a linear continuous change in parameter value from the \n\t\t *  previous scheduled parameter value to the given value.\n\t\t *  \n\t\t *  @param  {number} value   \n\t\t *  @param  {Time} endTime \n\t\t *  @returns {Tone.TimelineSignal} this\n\t\t */\n\t    Tone.TimelineSignal.prototype.linearRampToValueAtTime = function (value, endTime) {\n\t        value = this._fromUnits(value);\n\t        endTime = this.toSeconds(endTime);\n\t        this._events.add({\n\t            'type': Tone.TimelineSignal.Type.Linear,\n\t            'value': value,\n\t            'time': endTime\n\t        });\n\t        this._param.linearRampToValueAtTime(value, endTime);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Schedules an exponential continuous change in parameter value from \n\t\t *  the previous scheduled parameter value to the given value.\n\t\t *  \n\t\t *  @param  {number} value   \n\t\t *  @param  {Time} endTime \n\t\t *  @returns {Tone.TimelineSignal} this\n\t\t */\n\t    Tone.TimelineSignal.prototype.exponentialRampToValueAtTime = function (value, endTime) {\n\t        //get the previous event and make sure it's not starting from 0\n\t        endTime = this.toSeconds(endTime);\n\t        var beforeEvent = this._searchBefore(endTime);\n\t        if (beforeEvent && beforeEvent.value === 0) {\n\t            //reschedule that event\n\t            this.setValueAtTime(this._minOutput, beforeEvent.time);\n\t        }\n\t        value = this._fromUnits(value);\n\t        var setValue = Math.max(value, this._minOutput);\n\t        this._events.add({\n\t            'type': Tone.TimelineSignal.Type.Exponential,\n\t            'value': setValue,\n\t            'time': endTime\n\t        });\n\t        //if the ramped to value is 0, make it go to the min output, and then set to 0.\n\t        if (value < this._minOutput) {\n\t            this._param.exponentialRampToValueAtTime(this._minOutput, endTime - this.sampleTime);\n\t            this.setValueAtTime(0, endTime);\n\t        } else {\n\t            this._param.exponentialRampToValueAtTime(value, endTime);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Start exponentially approaching the target value at the given time with\n\t\t *  a rate having the given time constant.\n\t\t *  @param {number} value        \n\t\t *  @param {Time} startTime    \n\t\t *  @param {number} timeConstant \n\t\t *  @returns {Tone.TimelineSignal} this \n\t\t */\n\t    Tone.TimelineSignal.prototype.setTargetAtTime = function (value, startTime, timeConstant) {\n\t        value = this._fromUnits(value);\n\t        value = Math.max(this._minOutput, value);\n\t        timeConstant = Math.max(this._minOutput, timeConstant);\n\t        startTime = this.toSeconds(startTime);\n\t        this._events.add({\n\t            'type': Tone.TimelineSignal.Type.Target,\n\t            'value': value,\n\t            'time': startTime,\n\t            'constant': timeConstant\n\t        });\n\t        this._param.setTargetAtTime(value, startTime, timeConstant);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Set an array of arbitrary values starting at the given time for the given duration.\n\t\t *  @param {Float32Array} values        \n\t\t *  @param {Time} startTime    \n\t\t *  @param {Time} duration\n\t\t *  @param {NormalRange} [scaling=1] If the values in the curve should be scaled by some value\n\t\t *  @returns {Tone.TimelineSignal} this \n\t\t */\n\t    Tone.TimelineSignal.prototype.setValueCurveAtTime = function (values, startTime, duration, scaling) {\n\t        scaling = this.defaultArg(scaling, 1);\n\t        //copy the array\n\t        var floats = new Array(values.length);\n\t        for (var i = 0; i < floats.length; i++) {\n\t            floats[i] = this._fromUnits(values[i]) * scaling;\n\t        }\n\t        startTime = this.toSeconds(startTime);\n\t        duration = this.toSeconds(duration);\n\t        this._events.add({\n\t            'type': Tone.TimelineSignal.Type.Curve,\n\t            'value': floats,\n\t            'time': startTime,\n\t            'duration': duration\n\t        });\n\t        //set the first value\n\t        this._param.setValueAtTime(floats[0], startTime);\n\t        //schedule a lienar ramp for each of the segments\n\t        for (var j = 1; j < floats.length; j++) {\n\t            var segmentTime = startTime + j / (floats.length - 1) * duration;\n\t            this._param.linearRampToValueAtTime(floats[j], segmentTime);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Cancels all scheduled parameter changes with times greater than or \n\t\t *  equal to startTime.\n\t\t *  \n\t\t *  @param  {Time} startTime\n\t\t *  @returns {Tone.TimelineSignal} this\n\t\t */\n\t    Tone.TimelineSignal.prototype.cancelScheduledValues = function (after) {\n\t        after = this.toSeconds(after);\n\t        this._events.cancel(after);\n\t        this._param.cancelScheduledValues(after);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Sets the computed value at the given time. This provides\n\t\t *  a point from which a linear or exponential curve\n\t\t *  can be scheduled after. Will cancel events after \n\t\t *  the given time and shorten the currently scheduled\n\t\t *  linear or exponential ramp so that it ends at `time` .\n\t\t *  This is to avoid discontinuities and clicks in envelopes. \n\t\t *  @param {Time} time When to set the ramp point\n\t\t *  @returns {Tone.TimelineSignal} this\n\t\t */\n\t    Tone.TimelineSignal.prototype.setRampPoint = function (time) {\n\t        time = this.toSeconds(time);\n\t        //get the value at the given time\n\t        var val = this._toUnits(this.getValueAtTime(time));\n\t        //if there is an event at the given time\n\t        //and that even is not a \"set\"\n\t        var before = this._searchBefore(time);\n\t        if (before && before.time === time) {\n\t            //remove everything after\n\t            this.cancelScheduledValues(time + this.sampleTime);\n\t        } else if (before && before.type === Tone.TimelineSignal.Type.Curve && before.time + before.duration > time) {\n\t            //if the curve is still playing\n\t            //cancel the curve\n\t            this.cancelScheduledValues(time);\n\t            this.linearRampToValueAtTime(val, time);\n\t        } else {\n\t            //reschedule the next event to end at the given time\n\t            var after = this._searchAfter(time);\n\t            if (after) {\n\t                //cancel the next event(s)\n\t                this.cancelScheduledValues(time);\n\t                if (after.type === Tone.TimelineSignal.Type.Linear) {\n\t                    this.linearRampToValueAtTime(val, time);\n\t                } else if (after.type === Tone.TimelineSignal.Type.Exponential) {\n\t                    this.exponentialRampToValueAtTime(val, time);\n\t                }\n\t            }\n\t            this.setValueAtTime(val, time);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Do a linear ramp to the given value between the start and finish times.\n\t\t *  @param {Number} value The value to ramp to.\n\t\t *  @param {Time} start The beginning anchor point to do the linear ramp\n\t\t *  @param {Time} finish The ending anchor point by which the value of\n\t\t *                       the signal will equal the given value.\n\t\t *  @returns {Tone.TimelineSignal} this\n\t\t */\n\t    Tone.TimelineSignal.prototype.linearRampToValueBetween = function (value, start, finish) {\n\t        this.setRampPoint(start);\n\t        this.linearRampToValueAtTime(value, finish);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Do a exponential ramp to the given value between the start and finish times.\n\t\t *  @param {Number} value The value to ramp to.\n\t\t *  @param {Time} start The beginning anchor point to do the exponential ramp\n\t\t *  @param {Time} finish The ending anchor point by which the value of\n\t\t *                       the signal will equal the given value.\n\t\t *  @returns {Tone.TimelineSignal} this\n\t\t */\n\t    Tone.TimelineSignal.prototype.exponentialRampToValueBetween = function (value, start, finish) {\n\t        this.setRampPoint(start);\n\t        this.exponentialRampToValueAtTime(value, finish);\n\t        return this;\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tGETTING SCHEDULED VALUES\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  Returns the value before or equal to the given time\n\t\t *  @param  {Number}  time  The time to query\n\t\t *  @return  {Object}  The event at or before the given time.\n\t\t *  @private\n\t\t */\n\t    Tone.TimelineSignal.prototype._searchBefore = function (time) {\n\t        return this._events.get(time);\n\t    };\n\t    /**\n\t\t *  The event after the given time\n\t\t *  @param  {Number}  time  The time to query.\n\t\t *  @return  {Object}  The next event after the given time\n\t\t *  @private\n\t\t */\n\t    Tone.TimelineSignal.prototype._searchAfter = function (time) {\n\t        return this._events.getAfter(time);\n\t    };\n\t    /**\n\t\t *  Get the scheduled value at the given time. This will\n\t\t *  return the unconverted (raw) value.\n\t\t *  @param  {Number}  time  The time in seconds.\n\t\t *  @return  {Number}  The scheduled value at the given time.\n\t\t */\n\t    Tone.TimelineSignal.prototype.getValueAtTime = function (time) {\n\t        time = this.toSeconds(time);\n\t        var after = this._searchAfter(time);\n\t        var before = this._searchBefore(time);\n\t        var value = this._initial;\n\t        //if it was set by\n\t        if (before === null) {\n\t            value = this._initial;\n\t        } else if (before.type === Tone.TimelineSignal.Type.Target) {\n\t            var previous = this._events.getBefore(before.time);\n\t            var previouVal;\n\t            if (previous === null) {\n\t                previouVal = this._initial;\n\t            } else {\n\t                previouVal = previous.value;\n\t            }\n\t            value = this._exponentialApproach(before.time, previouVal, before.value, before.constant, time);\n\t        } else if (before.type === Tone.TimelineSignal.Type.Curve) {\n\t            value = this._curveInterpolate(before.time, before.value, before.duration, time);\n\t        } else if (after === null) {\n\t            value = before.value;\n\t        } else if (after.type === Tone.TimelineSignal.Type.Linear) {\n\t            value = this._linearInterpolate(before.time, before.value, after.time, after.value, time);\n\t        } else if (after.type === Tone.TimelineSignal.Type.Exponential) {\n\t            value = this._exponentialInterpolate(before.time, before.value, after.time, after.value, time);\n\t        } else {\n\t            value = before.value;\n\t        }\n\t        return value;\n\t    };\n\t    /**\n\t\t *  When signals connect to other signals or AudioParams, \n\t\t *  they take over the output value of that signal or AudioParam. \n\t\t *  For all other nodes, the behavior is the same as a default <code>connect</code>. \n\t\t *\n\t\t *  @override\n\t\t *  @param {AudioParam|AudioNode|Tone.Signal|Tone} node \n\t\t *  @param {number} [outputNumber=0] The output number to connect from.\n\t\t *  @param {number} [inputNumber=0] The input number to connect to.\n\t\t *  @returns {Tone.TimelineSignal} this\n\t\t *  @method\n\t\t */\n\t    Tone.TimelineSignal.prototype.connect = Tone.SignalBase.prototype.connect;\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tAUTOMATION CURVE CALCULATIONS\n\t    //\tMIT License, copyright (c) 2014 Jordan Santell\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  Calculates the the value along the curve produced by setTargetAtTime\n\t\t *  @private\n\t\t */\n\t    Tone.TimelineSignal.prototype._exponentialApproach = function (t0, v0, v1, timeConstant, t) {\n\t        return v1 + (v0 - v1) * Math.exp(-(t - t0) / timeConstant);\n\t    };\n\t    /**\n\t\t *  Calculates the the value along the curve produced by linearRampToValueAtTime\n\t\t *  @private\n\t\t */\n\t    Tone.TimelineSignal.prototype._linearInterpolate = function (t0, v0, t1, v1, t) {\n\t        return v0 + (v1 - v0) * ((t - t0) / (t1 - t0));\n\t    };\n\t    /**\n\t\t *  Calculates the the value along the curve produced by exponentialRampToValueAtTime\n\t\t *  @private\n\t\t */\n\t    Tone.TimelineSignal.prototype._exponentialInterpolate = function (t0, v0, t1, v1, t) {\n\t        v0 = Math.max(this._minOutput, v0);\n\t        return v0 * Math.pow(v1 / v0, (t - t0) / (t1 - t0));\n\t    };\n\t    /**\n\t\t *  Calculates the the value along the curve produced by setValueCurveAtTime\n\t\t *  @private\n\t\t */\n\t    Tone.TimelineSignal.prototype._curveInterpolate = function (start, curve, duration, time) {\n\t        var len = curve.length;\n\t        // If time is after duration, return the last curve value\n\t        if (time >= start + duration) {\n\t            return curve[len - 1];\n\t        } else if (time <= start) {\n\t            return curve[0];\n\t        } else {\n\t            var progress = (time - start) / duration;\n\t            var lowerIndex = Math.floor((len - 1) * progress);\n\t            var upperIndex = Math.ceil((len - 1) * progress);\n\t            var lowerVal = curve[lowerIndex];\n\t            var upperVal = curve[upperIndex];\n\t            if (upperIndex === lowerIndex) {\n\t                return lowerVal;\n\t            } else {\n\t                return this._linearInterpolate(lowerIndex, lowerVal, upperIndex, upperVal, progress * (len - 1));\n\t            }\n\t        }\n\t    };\n\t    /**\n\t\t *  Clean up.\n\t\t *  @return {Tone.TimelineSignal} this\n\t\t */\n\t    Tone.TimelineSignal.prototype.dispose = function () {\n\t        Tone.Signal.prototype.dispose.call(this);\n\t        Tone.Param.prototype.dispose.call(this);\n\t        this._events.dispose();\n\t        this._events = null;\n\t    };\n\t    return Tone.TimelineSignal;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Pow applies an exponent to the incoming signal. The incoming signal\n\t\t *         must be AudioRange.\n\t\t *\n\t\t *  @extends {Tone.SignalBase}\n\t\t *  @constructor\n\t\t *  @param {Positive} exp The exponent to apply to the incoming signal, must be at least 2. \n\t\t *  @example\n\t\t * var pow = new Tone.Pow(2);\n\t\t * var sig = new Tone.Signal(0.5).connect(pow);\n\t\t * //output of pow is 0.25. \n\t\t */\n\t    Tone.Pow = function (exp) {\n\t        /**\n\t\t\t * the exponent\n\t\t\t * @private\n\t\t\t * @type {number}\n\t\t\t */\n\t        this._exp = this.defaultArg(exp, 1);\n\t        /**\n\t\t\t *  @type {WaveShaperNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._expScaler = this.input = this.output = new Tone.WaveShaper(this._expFunc(this._exp), 8192);\n\t    };\n\t    Tone.extend(Tone.Pow, Tone.SignalBase);\n\t    /**\n\t\t * The value of the exponent.\n\t\t * @memberOf Tone.Pow#\n\t\t * @type {number}\n\t\t * @name value\n\t\t */\n\t    Object.defineProperty(Tone.Pow.prototype, 'value', {\n\t        get: function () {\n\t            return this._exp;\n\t        },\n\t        set: function (exp) {\n\t            this._exp = exp;\n\t            this._expScaler.setMap(this._expFunc(this._exp));\n\t        }\n\t    });\n\t    /**\n\t\t *  the function which maps the waveshaper\n\t\t *  @param   {number} exp\n\t\t *  @return {function}\n\t\t *  @private\n\t\t */\n\t    Tone.Pow.prototype._expFunc = function (exp) {\n\t        return function (val) {\n\t            return Math.pow(Math.abs(val), exp);\n\t        };\n\t    };\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.Pow} this\n\t\t */\n\t    Tone.Pow.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._expScaler.dispose();\n\t        this._expScaler = null;\n\t        return this;\n\t    };\n\t    return Tone.Pow;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.Envelope is an [ADSR](https://en.wikipedia.org/wiki/Synthesizer#ADSR_envelope)\n\t\t *          envelope generator. Tone.Envelope outputs a signal which \n\t\t *          can be connected to an AudioParam or Tone.Signal. \n\t\t *          <img src=\"https://upload.wikimedia.org/wikipedia/commons/e/ea/ADSR_parameter.svg\">\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone}\n\t\t *  @param {Time} [attack] The amount of time it takes for the envelope to go from \n\t\t *                         0 to it's maximum value. \n\t\t *  @param {Time} [decay]\tThe period of time after the attack that it takes for the envelope\n\t\t *                       \tto fall to the sustain value. \n\t\t *  @param {NormalRange} [sustain]\tThe percent of the maximum value that the envelope rests at until\n\t\t *                                \tthe release is triggered. \n\t\t *  @param {Time} [release]\tThe amount of time after the release is triggered it takes to reach 0. \n\t\t *  @example\n\t\t * //an amplitude envelope\n\t\t * var gainNode = Tone.context.createGain();\n\t\t * var env = new Tone.Envelope({\n\t\t * \t\"attack\" : 0.1,\n\t\t * \t\"decay\" : 0.2,\n\t\t * \t\"sustain\" : 1,\n\t\t * \t\"release\" : 0.8,\n\t\t * });\n\t\t * env.connect(gainNode.gain);\n\t\t */\n\t    Tone.Envelope = function () {\n\t        //get all of the defaults\n\t        var options = this.optionsObject(arguments, [\n\t            'attack',\n\t            'decay',\n\t            'sustain',\n\t            'release'\n\t        ], Tone.Envelope.defaults);\n\t        /** \n\t\t\t *  When triggerAttack is called, the attack time is the amount of\n\t\t\t *  time it takes for the envelope to reach it's maximum value. \n\t\t\t *  @type {Time}\n\t\t\t */\n\t        this.attack = options.attack;\n\t        /**\n\t\t\t *  After the attack portion of the envelope, the value will fall\n\t\t\t *  over the duration of the decay time to it's sustain value. \n\t\t\t *  @type {Time}\n\t\t\t */\n\t        this.decay = options.decay;\n\t        /**\n\t\t\t * \tThe sustain value is the value \n\t\t\t * \twhich the envelope rests at after triggerAttack is\n\t\t\t * \tcalled, but before triggerRelease is invoked. \n\t\t\t *  @type {NormalRange}\n\t\t\t */\n\t        this.sustain = options.sustain;\n\t        /**\n\t\t\t *  After triggerRelease is called, the envelope's\n\t\t\t *  value will fall to it's miminum value over the\n\t\t\t *  duration of the release time. \n\t\t\t *  @type {Time}\n\t\t\t */\n\t        this.release = options.release;\n\t        /**\n\t\t\t *  the next time the envelope is at standby\n\t\t\t *  @type {number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._attackCurve = 'linear';\n\t        /**\n\t\t\t *  the next time the envelope is at standby\n\t\t\t *  @type {number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._releaseCurve = 'exponential';\n\t        /**\n\t\t\t *  the signal\n\t\t\t *  @type {Tone.TimelineSignal}\n\t\t\t *  @private\n\t\t\t */\n\t        this._sig = this.output = new Tone.TimelineSignal();\n\t        this._sig.setValueAtTime(0, 0);\n\t        //set the attackCurve initially\n\t        this.attackCurve = options.attackCurve;\n\t        this.releaseCurve = options.releaseCurve;\n\t    };\n\t    Tone.extend(Tone.Envelope);\n\t    /**\n\t\t *  the default parameters\n\t\t *  @static\n\t\t *  @const\n\t\t */\n\t    Tone.Envelope.defaults = {\n\t        'attack': 0.01,\n\t        'decay': 0.1,\n\t        'sustain': 0.5,\n\t        'release': 1,\n\t        'attackCurve': 'linear',\n\t        'releaseCurve': 'exponential'\n\t    };\n\t    /**\n\t\t * Read the current value of the envelope. Useful for \n\t\t * syncronizing visual output to the envelope. \n\t\t * @memberOf Tone.Envelope#\n\t\t * @type {Number}\n\t\t * @name value\n\t\t * @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.Envelope.prototype, 'value', {\n\t        get: function () {\n\t            return this.getValueAtTime(this.now());\n\t        }\n\t    });\n\t    /**\n\t\t * The shape of the attack. \n\t\t * Can be any of these strings:\n\t\t * <ul>\n\t\t *   <li>linear</li>\n\t\t *   <li>exponential</li>\n\t\t *   <li>sine</li>\n\t\t *   <li>cosine</li>\n\t\t *   <li>bounce</li>\n\t\t *   <li>ripple</li>\n\t\t *   <li>step</li>\n\t\t * </ul>\n\t\t * Can also be an array which describes the curve. Values\n\t\t * in the array are evenly subdivided and linearly\n\t\t * interpolated over the duration of the attack. \n\t\t * @memberOf Tone.Envelope#\n\t\t * @type {String|Array}\n\t\t * @name attackCurve\n\t\t * @example\n\t\t * env.attackCurve = \"linear\";\n\t\t * @example\n\t\t * //can also be an array\n\t\t * env.attackCurve = [0, 0.2, 0.3, 0.4, 1]\n\t\t */\n\t    Object.defineProperty(Tone.Envelope.prototype, 'attackCurve', {\n\t        get: function () {\n\t            if (this.isString(this._attackCurve)) {\n\t                return this._attackCurve;\n\t            } else if (this.isArray(this._attackCurve)) {\n\t                //look up the name in the curves array\n\t                for (var type in Tone.Envelope.Type) {\n\t                    if (Tone.Envelope.Type[type].In === this._attackCurve) {\n\t                        return type;\n\t                    }\n\t                }\n\t                //otherwise just return the array\n\t                return this._attackCurve;\n\t            }\n\t        },\n\t        set: function (curve) {\n\t            //check if it's a valid type\n\t            if (Tone.Envelope.Type.hasOwnProperty(curve)) {\n\t                var curveDef = Tone.Envelope.Type[curve];\n\t                if (this.isObject(curveDef)) {\n\t                    this._attackCurve = curveDef.In;\n\t                } else {\n\t                    this._attackCurve = curveDef;\n\t                }\n\t            } else if (this.isArray(curve)) {\n\t                this._attackCurve = curve;\n\t            } else {\n\t                throw new Error('Tone.Envelope: invalid curve: ' + curve);\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * The shape of the release. See the attack curve types. \n\t\t * @memberOf Tone.Envelope#\n\t\t * @type {String|Array}\n\t\t * @name releaseCurve\n\t\t * @example\n\t\t * env.releaseCurve = \"linear\";\n\t\t */\n\t    Object.defineProperty(Tone.Envelope.prototype, 'releaseCurve', {\n\t        get: function () {\n\t            if (this.isString(this._releaseCurve)) {\n\t                return this._releaseCurve;\n\t            } else if (this.isArray(this._releaseCurve)) {\n\t                //look up the name in the curves array\n\t                for (var type in Tone.Envelope.Type) {\n\t                    if (Tone.Envelope.Type[type].Out === this._releaseCurve) {\n\t                        return type;\n\t                    }\n\t                }\n\t                //otherwise just return the array\n\t                return this._releaseCurve;\n\t            }\n\t        },\n\t        set: function (curve) {\n\t            //check if it's a valid type\n\t            if (Tone.Envelope.Type.hasOwnProperty(curve)) {\n\t                var curveDef = Tone.Envelope.Type[curve];\n\t                if (this.isObject(curveDef)) {\n\t                    this._releaseCurve = curveDef.Out;\n\t                } else {\n\t                    this._releaseCurve = curveDef;\n\t                }\n\t            } else if (this.isArray(curve)) {\n\t                this._releaseCurve = curve;\n\t            } else {\n\t                throw new Error('Tone.Envelope: invalid curve: ' + curve);\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  Trigger the attack/decay portion of the ADSR envelope. \n\t\t *  @param  {Time} [time=now] When the attack should start.\n\t\t *  @param {NormalRange} [velocity=1] The velocity of the envelope scales the vales.\n\t\t *                               number between 0-1\n\t\t *  @returns {Tone.Envelope} this\n\t\t *  @example\n\t\t *  //trigger the attack 0.5 seconds from now with a velocity of 0.2\n\t\t *  env.triggerAttack(\"+0.5\", 0.2);\n\t\t */\n\t    Tone.Envelope.prototype.triggerAttack = function (time, velocity) {\n\t        time = this.toSeconds(time);\n\t        var originalAttack = this.toSeconds(this.attack);\n\t        var attack = originalAttack;\n\t        var decay = this.toSeconds(this.decay);\n\t        velocity = this.defaultArg(velocity, 1);\n\t        //check if it's not a complete attack\n\t        var currentValue = this.getValueAtTime(time);\n\t        if (currentValue > 0) {\n\t            //subtract the current value from the attack time\n\t            var attackRate = 1 / attack;\n\t            var remainingDistance = 1 - currentValue;\n\t            //the attack is now the remaining time\n\t            attack = remainingDistance / attackRate;\n\t        }\n\t        //attack\n\t        if (this._attackCurve === 'linear') {\n\t            this._sig.linearRampToValue(velocity, attack, time);\n\t        } else if (this._attackCurve === 'exponential') {\n\t            this._sig.exponentialRampToValue(velocity, attack, time);\n\t        } else if (attack > 0) {\n\t            this._sig.setRampPoint(time);\n\t            var curve = this._attackCurve;\n\t            //take only a portion of the curve\n\t            if (attack < originalAttack) {\n\t                var percentComplete = 1 - attack / originalAttack;\n\t                var sliceIndex = Math.floor(percentComplete * this._attackCurve.length);\n\t                curve = this._attackCurve.slice(sliceIndex);\n\t                //the first index is the current value\n\t                curve[0] = currentValue;\n\t            }\n\t            this._sig.setValueCurveAtTime(curve, time, attack, velocity);\n\t        }\n\t        //decay\n\t        this._sig.exponentialRampToValue(velocity * this.sustain, decay, attack + time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Triggers the release of the envelope.\n\t\t *  @param  {Time} [time=now] When the release portion of the envelope should start. \n\t\t *  @returns {Tone.Envelope} this\n\t\t *  @example\n\t\t *  //trigger release immediately\n\t\t *  env.triggerRelease();\n\t\t */\n\t    Tone.Envelope.prototype.triggerRelease = function (time) {\n\t        time = this.toSeconds(time);\n\t        var currentValue = this.getValueAtTime(time);\n\t        if (currentValue > 0) {\n\t            var release = this.toSeconds(this.release);\n\t            if (this._releaseCurve === 'linear') {\n\t                this._sig.linearRampToValue(0, release, time);\n\t            } else if (this._releaseCurve === 'exponential') {\n\t                this._sig.exponentialRampToValue(0, release, time);\n\t            } else {\n\t                var curve = this._releaseCurve;\n\t                if (this.isArray(curve)) {\n\t                    this._sig.setRampPoint(time);\n\t                    this._sig.setValueCurveAtTime(curve, time, release, currentValue);\n\t                }\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Get the scheduled value at the given time. This will\n\t\t *  return the unconverted (raw) value.\n\t\t *  @param  {Number}  time  The time in seconds.\n\t\t *  @return  {Number}  The scheduled value at the given time.\n\t\t */\n\t    Tone.Envelope.prototype.getValueAtTime = function (time) {\n\t        return this._sig.getValueAtTime(time);\n\t    };\n\t    /**\n\t\t *  triggerAttackRelease is shorthand for triggerAttack, then waiting\n\t\t *  some duration, then triggerRelease. \n\t\t *  @param {Time} duration The duration of the sustain.\n\t\t *  @param {Time} [time=now] When the attack should be triggered.\n\t\t *  @param {number} [velocity=1] The velocity of the envelope. \n\t\t *  @returns {Tone.Envelope} this\n\t\t *  @example\n\t\t * //trigger the attack and then the release after 0.6 seconds.\n\t\t * env.triggerAttackRelease(0.6);\n\t\t */\n\t    Tone.Envelope.prototype.triggerAttackRelease = function (duration, time, velocity) {\n\t        time = this.toSeconds(time);\n\t        this.triggerAttack(time, velocity);\n\t        this.triggerRelease(time + this.toSeconds(duration));\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Cancels all scheduled envelope changes after the given time.\n\t\t *  @param  {Time} after\n\t\t *  @returns {Tone.Envelope} this\n\t\t */\n\t    Tone.Envelope.prototype.cancel = function (after) {\n\t        this._sig.cancelScheduledValues(after);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Borrows the connect method from Tone.Signal. \n\t\t *  @function\n\t\t *  @private\n\t\t */\n\t    Tone.Envelope.prototype.connect = Tone.Signal.prototype.connect;\n\t    /**\n\t \t *  Generate some complex envelope curves. \n\t \t */\n\t    (function _createCurves() {\n\t        var curveLen = 128;\n\t        var i, k;\n\t        //cosine curve\n\t        var cosineCurve = [];\n\t        for (i = 0; i < curveLen; i++) {\n\t            cosineCurve[i] = Math.sin(i / (curveLen - 1) * (Math.PI / 2));\n\t        }\n\t        //ripple curve\n\t        var rippleCurve = [];\n\t        var rippleCurveFreq = 6.4;\n\t        for (i = 0; i < curveLen - 1; i++) {\n\t            k = i / (curveLen - 1);\n\t            var sineWave = Math.sin(k * (Math.PI * 2) * rippleCurveFreq - Math.PI / 2) + 1;\n\t            rippleCurve[i] = sineWave / 10 + k * 0.83;\n\t        }\n\t        rippleCurve[curveLen - 1] = 1;\n\t        //stairs curve\n\t        var stairsCurve = [];\n\t        var steps = 5;\n\t        for (i = 0; i < curveLen; i++) {\n\t            stairsCurve[i] = Math.ceil(i / (curveLen - 1) * steps) / steps;\n\t        }\n\t        //in-out easing curve\n\t        var sineCurve = [];\n\t        for (i = 0; i < curveLen; i++) {\n\t            k = i / (curveLen - 1);\n\t            sineCurve[i] = 0.5 * (1 - Math.cos(Math.PI * k));\n\t        }\n\t        //a bounce curve\n\t        var bounceCurve = [];\n\t        for (i = 0; i < curveLen; i++) {\n\t            k = i / (curveLen - 1);\n\t            var freq = Math.pow(k, 3) * 4 + 0.2;\n\t            var val = Math.cos(freq * Math.PI * 2 * k);\n\t            bounceCurve[i] = Math.abs(val * (1 - k));\n\t        }\n\t        /**\n\t\t\t *  Invert a value curve to make it work for the release\n\t\t\t *  @private\n\t\t\t */\n\t        function invertCurve(curve) {\n\t            var out = new Array(curve.length);\n\t            for (var j = 0; j < curve.length; j++) {\n\t                out[j] = 1 - curve[j];\n\t            }\n\t            return out;\n\t        }\n\t        /**\n\t\t\t *  reverse the curve\n\t\t\t *  @private\n\t\t\t */\n\t        function reverseCurve(curve) {\n\t            return curve.slice(0).reverse();\n\t        }\n\t        /**\n\t\t\t *  attack and release curve arrays\n\t\t\t *  @type  {Object}\n\t\t\t *  @private\n\t\t\t */\n\t        Tone.Envelope.Type = {\n\t            'linear': 'linear',\n\t            'exponential': 'exponential',\n\t            'bounce': {\n\t                In: invertCurve(bounceCurve),\n\t                Out: bounceCurve\n\t            },\n\t            'cosine': {\n\t                In: cosineCurve,\n\t                Out: reverseCurve(cosineCurve)\n\t            },\n\t            'step': {\n\t                In: stairsCurve,\n\t                Out: invertCurve(stairsCurve)\n\t            },\n\t            'ripple': {\n\t                In: rippleCurve,\n\t                Out: invertCurve(rippleCurve)\n\t            },\n\t            'sine': {\n\t                In: sineCurve,\n\t                Out: invertCurve(sineCurve)\n\t            }\n\t        };\n\t    }());\n\t    /**\n\t\t *  Disconnect and dispose.\n\t\t *  @returns {Tone.Envelope} this\n\t\t */\n\t    Tone.Envelope.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._sig.dispose();\n\t        this._sig = null;\n\t        this._attackCurve = null;\n\t        this._releaseCurve = null;\n\t        return this;\n\t    };\n\t    return Tone.Envelope;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.AmplitudeEnvelope is a Tone.Envelope connected to a gain node. \n\t\t *          Unlike Tone.Envelope, which outputs the envelope's value, Tone.AmplitudeEnvelope accepts\n\t\t *          an audio signal as the input and will apply the envelope to the amplitude\n\t\t *          of the signal. Read more about ADSR Envelopes on [Wikipedia](https://en.wikipedia.org/wiki/Synthesizer#ADSR_envelope).\n\t\t *  \n\t\t *  @constructor\n\t\t *  @extends {Tone.Envelope}\n\t\t *  @param {Time|Object} [attack] The amount of time it takes for the envelope to go from \n\t\t *                               0 to it's maximum value. \n\t\t *  @param {Time} [decay]\tThe period of time after the attack that it takes for the envelope\n\t\t *                       \tto fall to the sustain value. \n\t\t *  @param {NormalRange} [sustain]\tThe percent of the maximum value that the envelope rests at until\n\t\t *                                \tthe release is triggered. \n\t\t *  @param {Time} [release]\tThe amount of time after the release is triggered it takes to reach 0. \n\t\t *  @example\n\t\t * var ampEnv = new Tone.AmplitudeEnvelope({\n\t\t * \t\"attack\": 0.1,\n\t\t * \t\"decay\": 0.2,\n\t\t * \t\"sustain\": 1.0,\n\t\t * \t\"release\": 0.8\n\t\t * }).toMaster();\n\t\t * //create an oscillator and connect it\n\t\t * var osc = new Tone.Oscillator().connect(ampEnv).start();\n\t\t * //trigger the envelopes attack and release \"8t\" apart\n\t\t * ampEnv.triggerAttackRelease(\"8t\");\n\t\t */\n\t    Tone.AmplitudeEnvelope = function () {\n\t        Tone.Envelope.apply(this, arguments);\n\t        /**\n\t\t\t *  the input node\n\t\t\t *  @type {GainNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this.input = this.output = new Tone.Gain();\n\t        this._sig.connect(this.output.gain);\n\t    };\n\t    Tone.extend(Tone.AmplitudeEnvelope, Tone.Envelope);\n\t    /**\n\t\t *  Clean up\n\t\t *  @return  {Tone.AmplitudeEnvelope}  this\n\t\t */\n\t    Tone.AmplitudeEnvelope.prototype.dispose = function () {\n\t        this.input.dispose();\n\t        this.input = null;\n\t        Tone.Envelope.prototype.dispose.call(this);\n\t        return this;\n\t    };\n\t    return Tone.AmplitudeEnvelope;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  AnalyserNode.getFloatTimeDomainData polyfill\n\t\t *  @private\n\t\t */\n\t    if (window.AnalyserNode && !AnalyserNode.prototype.getFloatTimeDomainData) {\n\t        //referenced https://github.com/mohayonao/get-float-time-domain-data \n\t        AnalyserNode.prototype.getFloatTimeDomainData = function (array) {\n\t            var uint8 = new Uint8Array(array.length);\n\t            this.getByteTimeDomainData(uint8);\n\t            for (var i = 0; i < uint8.length; i++) {\n\t                array[i] = (uint8[i] - 128) / 128;\n\t            }\n\t        };\n\t    }\n\t    /**\n\t\t *  @class  Wrapper around the native Web Audio's \n\t\t *          [AnalyserNode](http://webaudio.github.io/web-audio-api/#idl-def-AnalyserNode).\n\t\t *          Extracts FFT or Waveform data from the incoming signal.\n\t\t *  @extends {Tone}\n\t\t *  @param {String=} type The return type of the analysis, either \"fft\", or \"waveform\". \n\t\t *  @param {Number=} size The size of the FFT. Value must be a power of \n\t\t *                       two in the range 32 to 32768.\n\t\t */\n\t    Tone.Analyser = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'type',\n\t            'size'\n\t        ], Tone.Analyser.defaults);\n\t        /**\n\t\t\t *  The analyser node.\n\t\t\t *  @private\n\t\t\t *  @type {AnalyserNode}\n\t\t\t */\n\t        this._analyser = this.input = this.output = this.context.createAnalyser();\n\t        /**\n\t\t\t *  The analysis type\n\t\t\t *  @type {String}\n\t\t\t *  @private\n\t\t\t */\n\t        this._type = options.type;\n\t        /**\n\t\t\t *  The return type of the analysis\n\t\t\t *  @type {String}\n\t\t\t *  @private\n\t\t\t */\n\t        this._returnType = options.returnType;\n\t        /**\n\t\t\t *  The buffer that the FFT data is written to\n\t\t\t *  @type {TypedArray}\n\t\t\t *  @private\n\t\t\t */\n\t        this._buffer = null;\n\t        //set the values initially\n\t        this.size = options.size;\n\t        this.type = options.type;\n\t        this.returnType = options.returnType;\n\t        this.minDecibels = options.minDecibels;\n\t        this.maxDecibels = options.maxDecibels;\n\t    };\n\t    Tone.extend(Tone.Analyser);\n\t    /**\n\t\t *  The default values.\n\t\t *  @type {Object}\n\t\t *  @const\n\t\t */\n\t    Tone.Analyser.defaults = {\n\t        'size': 1024,\n\t        'returnType': 'byte',\n\t        'type': 'fft',\n\t        'smoothing': 0.8,\n\t        'maxDecibels': -30,\n\t        'minDecibels': -100\n\t    };\n\t    /**\n\t\t *  Possible return types of Tone.Analyser.analyse()\n\t\t *  @enum {String}\n\t\t */\n\t    Tone.Analyser.Type = {\n\t        Waveform: 'waveform',\n\t        FFT: 'fft'\n\t    };\n\t    /**\n\t\t *  Possible return types of Tone.Analyser.analyse(). \n\t\t *  byte values are between [0,255]. float values are between \n\t\t *  [-1, 1] when the type is set to \"waveform\" and between \n\t\t *  [minDecibels,maxDecibels] when the type is \"fft\".\n\t\t *  @enum {String}\n\t\t */\n\t    Tone.Analyser.ReturnType = {\n\t        Byte: 'byte',\n\t        Float: 'float'\n\t    };\n\t    /**\n\t\t *  Run the analysis given the current settings and return the \n\t\t *  result as a TypedArray. \n\t\t *  @returns {TypedArray}\n\t\t */\n\t    Tone.Analyser.prototype.analyse = function () {\n\t        if (this._type === Tone.Analyser.Type.FFT) {\n\t            if (this._returnType === Tone.Analyser.ReturnType.Byte) {\n\t                this._analyser.getByteFrequencyData(this._buffer);\n\t            } else {\n\t                this._analyser.getFloatFrequencyData(this._buffer);\n\t            }\n\t        } else if (this._type === Tone.Analyser.Type.Waveform) {\n\t            if (this._returnType === Tone.Analyser.ReturnType.Byte) {\n\t                this._analyser.getByteTimeDomainData(this._buffer);\n\t            } else {\n\t                this._analyser.getFloatTimeDomainData(this._buffer);\n\t            }\n\t        }\n\t        return this._buffer;\n\t    };\n\t    /**\n\t\t *  The size of analysis. This must be a power of two in the range 32 to 32768.\n\t\t *  @memberOf Tone.Analyser#\n\t\t *  @type {Number}\n\t\t *  @name size\n\t\t */\n\t    Object.defineProperty(Tone.Analyser.prototype, 'size', {\n\t        get: function () {\n\t            return this._analyser.frequencyBinCount;\n\t        },\n\t        set: function (size) {\n\t            this._analyser.fftSize = size * 2;\n\t            this.type = this._type;\n\t        }\n\t    });\n\t    /**\n\t\t *  The return type of Tone.Analyser.analyse(), either \"byte\" or \"float\". \n\t\t *  When the type is set to \"byte\" the range of values returned in the array\n\t\t *  are between 0-255. \"float\" values are between \n\t\t *  [-1, 1] when the type is set to \"waveform\" and between \n\t\t *  [minDecibels,maxDecibels] when the type is \"fft\".\n\t\t *  @memberOf Tone.Analyser#\n\t\t *  @type {String}\n\t\t *  @name type\n\t\t */\n\t    Object.defineProperty(Tone.Analyser.prototype, 'returnType', {\n\t        get: function () {\n\t            return this._returnType;\n\t        },\n\t        set: function (type) {\n\t            if (type === Tone.Analyser.ReturnType.Byte) {\n\t                this._buffer = new Uint8Array(this._analyser.frequencyBinCount);\n\t            } else if (type === Tone.Analyser.ReturnType.Float) {\n\t                this._buffer = new Float32Array(this._analyser.frequencyBinCount);\n\t            } else {\n\t                throw new TypeError('Tone.Analayser: invalid return type: ' + type);\n\t            }\n\t            this._returnType = type;\n\t        }\n\t    });\n\t    /**\n\t\t *  The analysis function returned by Tone.Analyser.analyse(), either \"fft\" or \"waveform\". \n\t\t *  @memberOf Tone.Analyser#\n\t\t *  @type {String}\n\t\t *  @name type\n\t\t */\n\t    Object.defineProperty(Tone.Analyser.prototype, 'type', {\n\t        get: function () {\n\t            return this._type;\n\t        },\n\t        set: function (type) {\n\t            if (type !== Tone.Analyser.Type.Waveform && type !== Tone.Analyser.Type.FFT) {\n\t                throw new TypeError('Tone.Analyser: invalid type: ' + type);\n\t            }\n\t            this._type = type;\n\t        }\n\t    });\n\t    /**\n\t\t *  0 represents no time averaging with the last analysis frame.\n\t\t *  @memberOf Tone.Analyser#\n\t\t *  @type {NormalRange}\n\t\t *  @name smoothing\n\t\t */\n\t    Object.defineProperty(Tone.Analyser.prototype, 'smoothing', {\n\t        get: function () {\n\t            return this._analyser.smoothingTimeConstant;\n\t        },\n\t        set: function (val) {\n\t            this._analyser.smoothingTimeConstant = val;\n\t        }\n\t    });\n\t    /**\n\t\t *  The smallest decibel value which is analysed by the FFT. \n\t\t *  @memberOf Tone.Analyser#\n\t\t *  @type {Decibels}\n\t\t *  @name minDecibels\n\t\t */\n\t    Object.defineProperty(Tone.Analyser.prototype, 'minDecibels', {\n\t        get: function () {\n\t            return this._analyser.minDecibels;\n\t        },\n\t        set: function (val) {\n\t            this._analyser.minDecibels = val;\n\t        }\n\t    });\n\t    /**\n\t\t *  The largest decibel value which is analysed by the FFT. \n\t\t *  @memberOf Tone.Analyser#\n\t\t *  @type {Decibels}\n\t\t *  @name maxDecibels\n\t\t */\n\t    Object.defineProperty(Tone.Analyser.prototype, 'maxDecibels', {\n\t        get: function () {\n\t            return this._analyser.maxDecibels;\n\t        },\n\t        set: function (val) {\n\t            this._analyser.maxDecibels = val;\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up.\n\t\t *  @return  {Tone.Analyser}  this\n\t\t */\n\t    Tone.Analyser.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._analyser.disconnect();\n\t        this._analyser = null;\n\t        this._buffer = null;\n\t    };\n\t    return Tone.Analyser;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.Compressor is a thin wrapper around the Web Audio \n\t\t *         [DynamicsCompressorNode](http://webaudio.github.io/web-audio-api/#the-dynamicscompressornode-interface).\n\t\t *         Compression reduces the volume of loud sounds or amplifies quiet sounds \n\t\t *         by narrowing or \"compressing\" an audio signal's dynamic range. \n\t\t *         Read more on [Wikipedia](https://en.wikipedia.org/wiki/Dynamic_range_compression).\n\t\t *\n\t\t *  @extends {Tone}\n\t\t *  @constructor\n\t\t *  @param {Decibels|Object} [threshold] The value above which the compression starts to be applied.\n\t\t *  @param {Positive} [ratio] The gain reduction ratio.\n\t\t *  @example\n\t\t * var comp = new Tone.Compressor(-30, 3);\n\t\t */\n\t    Tone.Compressor = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'threshold',\n\t            'ratio'\n\t        ], Tone.Compressor.defaults);\n\t        /**\n\t\t\t *  the compressor node\n\t\t\t *  @type {DynamicsCompressorNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._compressor = this.input = this.output = this.context.createDynamicsCompressor();\n\t        /**\n\t\t\t *  the threshold vaue\n\t\t\t *  @type {Decibels}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.threshold = new Tone.Param({\n\t            'param': this._compressor.threshold,\n\t            'units': Tone.Type.Decibels,\n\t            'convert': false\n\t        });\n\t        /**\n\t\t\t *  The attack parameter\n\t\t\t *  @type {Time}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.attack = new Tone.Param(this._compressor.attack, Tone.Type.Time);\n\t        /**\n\t\t\t *  The release parameter\n\t\t\t *  @type {Time}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.release = new Tone.Param(this._compressor.release, Tone.Type.Time);\n\t        /**\n\t\t\t *  The knee parameter\n\t\t\t *  @type {Decibels}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.knee = new Tone.Param({\n\t            'param': this._compressor.knee,\n\t            'units': Tone.Type.Decibels,\n\t            'convert': false\n\t        });\n\t        /**\n\t\t\t *  The ratio value\n\t\t\t *  @type {Number}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.ratio = new Tone.Param({\n\t            'param': this._compressor.ratio,\n\t            'convert': false\n\t        });\n\t        //set the defaults\n\t        this._readOnly([\n\t            'knee',\n\t            'release',\n\t            'attack',\n\t            'ratio',\n\t            'threshold'\n\t        ]);\n\t        this.set(options);\n\t    };\n\t    Tone.extend(Tone.Compressor);\n\t    /**\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.Compressor.defaults = {\n\t        'ratio': 12,\n\t        'threshold': -24,\n\t        'release': 0.25,\n\t        'attack': 0.003,\n\t        'knee': 30\n\t    };\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.Compressor} this\n\t\t */\n\t    Tone.Compressor.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._writable([\n\t            'knee',\n\t            'release',\n\t            'attack',\n\t            'ratio',\n\t            'threshold'\n\t        ]);\n\t        this._compressor.disconnect();\n\t        this._compressor = null;\n\t        this.attack.dispose();\n\t        this.attack = null;\n\t        this.release.dispose();\n\t        this.release = null;\n\t        this.threshold.dispose();\n\t        this.threshold = null;\n\t        this.ratio.dispose();\n\t        this.ratio = null;\n\t        this.knee.dispose();\n\t        this.knee = null;\n\t        return this;\n\t    };\n\t    return Tone.Compressor;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Add a signal and a number or two signals. When no value is\n\t\t *         passed into the constructor, Tone.Add will sum <code>input[0]</code>\n\t\t *         and <code>input[1]</code>. If a value is passed into the constructor, \n\t\t *         the it will be added to the input.\n\t\t *  \n\t\t *  @constructor\n\t\t *  @extends {Tone.Signal}\n\t\t *  @param {number=} value If no value is provided, Tone.Add will sum the first\n\t\t *                         and second inputs. \n\t\t *  @example\n\t\t * var signal = new Tone.Signal(2);\n\t\t * var add = new Tone.Add(2);\n\t\t * signal.connect(add);\n\t\t * //the output of add equals 4\n\t\t *  @example\n\t\t * //if constructed with no arguments\n\t\t * //it will add the first and second inputs\n\t\t * var add = new Tone.Add();\n\t\t * var sig0 = new Tone.Signal(3).connect(add, 0, 0);\n\t\t * var sig1 = new Tone.Signal(4).connect(add, 0, 1);\n\t\t * //the output of add equals 7. \n\t\t */\n\t    Tone.Add = function (value) {\n\t        this.createInsOuts(2, 0);\n\t        /**\n\t\t\t *  the summing node\n\t\t\t *  @type {GainNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._sum = this.input[0] = this.input[1] = this.output = new Tone.Gain();\n\t        /**\n\t\t\t *  @private\n\t\t\t *  @type {Tone.Signal}\n\t\t\t */\n\t        this._param = this.input[1] = new Tone.Signal(value);\n\t        this._param.connect(this._sum);\n\t    };\n\t    Tone.extend(Tone.Add, Tone.Signal);\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.Add} this\n\t\t */\n\t    Tone.Add.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._sum.dispose();\n\t        this._sum = null;\n\t        this._param.dispose();\n\t        this._param = null;\n\t        return this;\n\t    };\n\t    return Tone.Add;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Multiply two incoming signals. Or, if a number is given in the constructor, \n\t\t *          multiplies the incoming signal by that value. \n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Signal}\n\t\t *  @param {number=} value Constant value to multiple. If no value is provided,\n\t\t *                         it will return the product of the first and second inputs\n\t\t *  @example\n\t\t * var mult = new Tone.Multiply();\n\t\t * var sigA = new Tone.Signal(3);\n\t\t * var sigB = new Tone.Signal(4);\n\t\t * sigA.connect(mult, 0, 0);\n\t\t * sigB.connect(mult, 0, 1);\n\t\t * //output of mult is 12.\n\t\t *  @example\n\t\t * var mult = new Tone.Multiply(10);\n\t\t * var sig = new Tone.Signal(2).connect(mult);\n\t\t * //the output of mult is 20. \n\t\t */\n\t    Tone.Multiply = function (value) {\n\t        this.createInsOuts(2, 0);\n\t        /**\n\t\t\t *  the input node is the same as the output node\n\t\t\t *  it is also the GainNode which handles the scaling of incoming signal\n\t\t\t *  \n\t\t\t *  @type {GainNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._mult = this.input[0] = this.output = new Tone.Gain();\n\t        /**\n\t\t\t *  the scaling parameter\n\t\t\t *  @type {AudioParam}\n\t\t\t *  @private\n\t\t\t */\n\t        this._param = this.input[1] = this.output.gain;\n\t        this._param.value = this.defaultArg(value, 0);\n\t    };\n\t    Tone.extend(Tone.Multiply, Tone.Signal);\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.Multiply} this\n\t\t */\n\t    Tone.Multiply.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._mult.dispose();\n\t        this._mult = null;\n\t        this._param = null;\n\t        return this;\n\t    };\n\t    return Tone.Multiply;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Negate the incoming signal. i.e. an input signal of 10 will output -10\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.SignalBase}\n\t\t *  @example\n\t\t * var neg = new Tone.Negate();\n\t\t * var sig = new Tone.Signal(-2).connect(neg);\n\t\t * //output of neg is positive 2. \n\t\t */\n\t    Tone.Negate = function () {\n\t        /**\n\t\t\t *  negation is done by multiplying by -1\n\t\t\t *  @type {Tone.Multiply}\n\t\t\t *  @private\n\t\t\t */\n\t        this._multiply = this.input = this.output = new Tone.Multiply(-1);\n\t    };\n\t    Tone.extend(Tone.Negate, Tone.SignalBase);\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.Negate} this\n\t\t */\n\t    Tone.Negate.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._multiply.dispose();\n\t        this._multiply = null;\n\t        return this;\n\t    };\n\t    return Tone.Negate;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Subtract the signal connected to <code>input[1]</code> from the signal connected \n\t\t *         to <code>input[0]</code>. If an argument is provided in the constructor, the \n\t\t *         signals <code>.value</code> will be subtracted from the incoming signal.\n\t\t *\n\t\t *  @extends {Tone.Signal}\n\t\t *  @constructor\n\t\t *  @param {number=} value The value to subtract from the incoming signal. If the value\n\t\t *                         is omitted, it will subtract the second signal from the first.\n\t\t *  @example\n\t\t * var sub = new Tone.Subtract(1);\n\t\t * var sig = new Tone.Signal(4).connect(sub);\n\t\t * //the output of sub is 3. \n\t\t *  @example\n\t\t * var sub = new Tone.Subtract();\n\t\t * var sigA = new Tone.Signal(10);\n\t\t * var sigB = new Tone.Signal(2.5);\n\t\t * sigA.connect(sub, 0, 0);\n\t\t * sigB.connect(sub, 0, 1);\n\t\t * //output of sub is 7.5\n\t\t */\n\t    Tone.Subtract = function (value) {\n\t        this.createInsOuts(2, 0);\n\t        /**\n\t\t\t *  the summing node\n\t\t\t *  @type {GainNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._sum = this.input[0] = this.output = new Tone.Gain();\n\t        /**\n\t\t\t *  negate the input of the second input before connecting it\n\t\t\t *  to the summing node.\n\t\t\t *  @type {Tone.Negate}\n\t\t\t *  @private\n\t\t\t */\n\t        this._neg = new Tone.Negate();\n\t        /**\n\t\t\t *  the node where the value is set\n\t\t\t *  @private\n\t\t\t *  @type {Tone.Signal}\n\t\t\t */\n\t        this._param = this.input[1] = new Tone.Signal(value);\n\t        this._param.chain(this._neg, this._sum);\n\t    };\n\t    Tone.extend(Tone.Subtract, Tone.Signal);\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.SignalBase} this\n\t\t */\n\t    Tone.Subtract.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._neg.dispose();\n\t        this._neg = null;\n\t        this._sum.disconnect();\n\t        this._sum = null;\n\t        this._param.dispose();\n\t        this._param = null;\n\t        return this;\n\t    };\n\t    return Tone.Subtract;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  GreaterThanZero outputs 1 when the input is strictly greater than zero\n\t\t *  \n\t\t *  @constructor\n\t\t *  @extends {Tone.SignalBase}\n\t\t *  @example\n\t\t * var gt0 = new Tone.GreaterThanZero();\n\t\t * var sig = new Tone.Signal(0.01).connect(gt0);\n\t\t * //the output of gt0 is 1. \n\t\t * sig.value = 0;\n\t\t * //the output of gt0 is 0. \n\t\t */\n\t    Tone.GreaterThanZero = function () {\n\t        /**\n\t\t\t *  @type {Tone.WaveShaper}\n\t\t\t *  @private\n\t\t\t */\n\t        this._thresh = this.output = new Tone.WaveShaper(function (val) {\n\t            if (val <= 0) {\n\t                return 0;\n\t            } else {\n\t                return 1;\n\t            }\n\t        }, 127);\n\t        /**\n\t\t\t *  scale the first thresholded signal by a large value.\n\t\t\t *  this will help with values which are very close to 0\n\t\t\t *  @type {Tone.Multiply}\n\t\t\t *  @private\n\t\t\t */\n\t        this._scale = this.input = new Tone.Multiply(10000);\n\t        //connections\n\t        this._scale.connect(this._thresh);\n\t    };\n\t    Tone.extend(Tone.GreaterThanZero, Tone.SignalBase);\n\t    /**\n\t\t *  dispose method\n\t\t *  @returns {Tone.GreaterThanZero} this\n\t\t */\n\t    Tone.GreaterThanZero.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._scale.dispose();\n\t        this._scale = null;\n\t        this._thresh.dispose();\n\t        this._thresh = null;\n\t        return this;\n\t    };\n\t    return Tone.GreaterThanZero;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Output 1 if the signal is greater than the value, otherwise outputs 0.\n\t\t *          can compare two signals or a signal and a number. \n\t\t *  \n\t\t *  @constructor\n\t\t *  @extends {Tone.Signal}\n\t\t *  @param {number} [value=0] the value to compare to the incoming signal\n\t\t *  @example\n\t\t * var gt = new Tone.GreaterThan(2);\n\t\t * var sig = new Tone.Signal(4).connect(gt);\n\t\t * //output of gt is equal 1. \n\t\t */\n\t    Tone.GreaterThan = function (value) {\n\t        this.createInsOuts(2, 0);\n\t        /**\n\t\t\t *  subtract the amount from the incoming signal\n\t\t\t *  @type {Tone.Subtract}\n\t\t\t *  @private\n\t\t\t */\n\t        this._param = this.input[0] = new Tone.Subtract(value);\n\t        this.input[1] = this._param.input[1];\n\t        /**\n\t\t\t *  compare that amount to zero\n\t\t\t *  @type {Tone.GreaterThanZero}\n\t\t\t *  @private\n\t\t\t */\n\t        this._gtz = this.output = new Tone.GreaterThanZero();\n\t        //connect\n\t        this._param.connect(this._gtz);\n\t    };\n\t    Tone.extend(Tone.GreaterThan, Tone.Signal);\n\t    /**\n\t\t *  dispose method\n\t\t *  @returns {Tone.GreaterThan} this\n\t\t */\n\t    Tone.GreaterThan.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._param.dispose();\n\t        this._param = null;\n\t        this._gtz.dispose();\n\t        this._gtz = null;\n\t        return this;\n\t    };\n\t    return Tone.GreaterThan;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Return the absolute value of an incoming signal. \n\t\t *  \n\t\t *  @constructor\n\t\t *  @extends {Tone.SignalBase}\n\t\t *  @example\n\t\t * var signal = new Tone.Signal(-1);\n\t\t * var abs = new Tone.Abs();\n\t\t * signal.connect(abs);\n\t\t * //the output of abs is 1. \n\t\t */\n\t    Tone.Abs = function () {\n\t        /**\n\t\t\t *  @type {Tone.LessThan}\n\t\t\t *  @private\n\t\t\t */\n\t        this._abs = this.input = this.output = new Tone.WaveShaper(function (val) {\n\t            if (val === 0) {\n\t                return 0;\n\t            } else {\n\t                return Math.abs(val);\n\t            }\n\t        }, 127);\n\t    };\n\t    Tone.extend(Tone.Abs, Tone.SignalBase);\n\t    /**\n\t\t *  dispose method\n\t\t *  @returns {Tone.Abs} this\n\t\t */\n\t    Tone.Abs.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._abs.dispose();\n\t        this._abs = null;\n\t        return this;\n\t    };\n\t    return Tone.Abs;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Signal-rate modulo operator. Only works in AudioRange [-1, 1] and for modulus\n\t\t *         values in the NormalRange. \n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.SignalBase}\n\t\t *  @param {NormalRange} modulus The modulus to apply.\n\t\t *  @example\n\t\t * var mod = new Tone.Modulo(0.2)\n\t\t * var sig = new Tone.Signal(0.5).connect(mod);\n\t\t * //mod outputs 0.1\n\t\t */\n\t    Tone.Modulo = function (modulus) {\n\t        this.createInsOuts(1, 0);\n\t        /**\n\t\t\t *  A waveshaper gets the integer multiple of \n\t\t\t *  the input signal and the modulus.\n\t\t\t *  @private\n\t\t\t *  @type {Tone.WaveShaper}\n\t\t\t */\n\t        this._shaper = new Tone.WaveShaper(Math.pow(2, 16));\n\t        /**\n\t\t\t *  the integer multiple is multiplied by the modulus\n\t\t\t *  @type  {Tone.Multiply}\n\t\t\t *  @private\n\t\t\t */\n\t        this._multiply = new Tone.Multiply();\n\t        /**\n\t\t\t *  and subtracted from the input signal\n\t\t\t *  @type  {Tone.Subtract}\n\t\t\t *  @private\n\t\t\t */\n\t        this._subtract = this.output = new Tone.Subtract();\n\t        /**\n\t\t\t *  the modulus signal\n\t\t\t *  @type  {Tone.Signal}\n\t\t\t *  @private\n\t\t\t */\n\t        this._modSignal = new Tone.Signal(modulus);\n\t        //connections\n\t        this.input.fan(this._shaper, this._subtract);\n\t        this._modSignal.connect(this._multiply, 0, 0);\n\t        this._shaper.connect(this._multiply, 0, 1);\n\t        this._multiply.connect(this._subtract, 0, 1);\n\t        this._setWaveShaper(modulus);\n\t    };\n\t    Tone.extend(Tone.Modulo, Tone.SignalBase);\n\t    /**\n\t\t *  @param  {number}  mod  the modulus to apply\n\t\t *  @private\n\t\t */\n\t    Tone.Modulo.prototype._setWaveShaper = function (mod) {\n\t        this._shaper.setMap(function (val) {\n\t            var multiple = Math.floor((val + 0.0001) / mod);\n\t            return multiple;\n\t        });\n\t    };\n\t    /**\n\t\t * The modulus value.\n\t\t * @memberOf Tone.Modulo#\n\t\t * @type {NormalRange}\n\t\t * @name value\n\t\t */\n\t    Object.defineProperty(Tone.Modulo.prototype, 'value', {\n\t        get: function () {\n\t            return this._modSignal.value;\n\t        },\n\t        set: function (mod) {\n\t            this._modSignal.value = mod;\n\t            this._setWaveShaper(mod);\n\t        }\n\t    });\n\t    /**\n\t\t * clean up\n\t\t *  @returns {Tone.Modulo} this\n\t\t */\n\t    Tone.Modulo.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._shaper.dispose();\n\t        this._shaper = null;\n\t        this._multiply.dispose();\n\t        this._multiply = null;\n\t        this._subtract.dispose();\n\t        this._subtract = null;\n\t        this._modSignal.dispose();\n\t        this._modSignal = null;\n\t        return this;\n\t    };\n\t    return Tone.Modulo;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class AudioToGain converts an input in AudioRange [-1,1] to NormalRange [0,1]. \n\t\t *         See Tone.GainToAudio.\n\t\t *\n\t\t *  @extends {Tone.SignalBase}\n\t\t *  @constructor\n\t\t *  @example\n\t\t *  var a2g = new Tone.AudioToGain();\n\t\t */\n\t    Tone.AudioToGain = function () {\n\t        /**\n\t\t\t *  @type {WaveShaperNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._norm = this.input = this.output = new Tone.WaveShaper(function (x) {\n\t            return (x + 1) / 2;\n\t        });\n\t    };\n\t    Tone.extend(Tone.AudioToGain, Tone.SignalBase);\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.AudioToGain} this\n\t\t */\n\t    Tone.AudioToGain.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._norm.dispose();\n\t        this._norm = null;\n\t        return this;\n\t    };\n\t    return Tone.AudioToGain;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Evaluate an expression at audio rate. <br><br>\n\t\t *         Parsing code modified from https://code.google.com/p/tapdigit/\n\t\t *         Copyright 2011 2012 Ariya Hidayat, New BSD License\n\t\t *\n\t\t *  @extends {Tone.SignalBase}\n\t\t *  @constructor\n\t\t *  @param {string} expr the expression to generate\n\t\t *  @example\n\t\t * //adds the signals from input[0] and input[1].\n\t\t * var expr = new Tone.Expr(\"$0 + $1\");\n\t\t */\n\t    Tone.Expr = function () {\n\t        var expr = this._replacements(Array.prototype.slice.call(arguments));\n\t        var inputCount = this._parseInputs(expr);\n\t        /**\n\t\t\t *  hold onto all of the nodes for disposal\n\t\t\t *  @type {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._nodes = [];\n\t        /**\n\t\t\t *  The inputs. The length is determined by the expression. \n\t\t\t *  @type {Array}\n\t\t\t */\n\t        this.input = new Array(inputCount);\n\t        //create a gain for each input\n\t        for (var i = 0; i < inputCount; i++) {\n\t            this.input[i] = this.context.createGain();\n\t        }\n\t        //parse the syntax tree\n\t        var tree = this._parseTree(expr);\n\t        //evaluate the results\n\t        var result;\n\t        try {\n\t            result = this._eval(tree);\n\t        } catch (e) {\n\t            this._disposeNodes();\n\t            throw new Error('Tone.Expr: Could evaluate expression: ' + expr);\n\t        }\n\t        /**\n\t\t\t *  The output node is the result of the expression\n\t\t\t *  @type {Tone}\n\t\t\t */\n\t        this.output = result;\n\t    };\n\t    Tone.extend(Tone.Expr, Tone.SignalBase);\n\t    //some helpers to cut down the amount of code\n\t    function applyBinary(Constructor, args, self) {\n\t        var op = new Constructor();\n\t        self._eval(args[0]).connect(op, 0, 0);\n\t        self._eval(args[1]).connect(op, 0, 1);\n\t        return op;\n\t    }\n\t    function applyUnary(Constructor, args, self) {\n\t        var op = new Constructor();\n\t        self._eval(args[0]).connect(op, 0, 0);\n\t        return op;\n\t    }\n\t    function getNumber(arg) {\n\t        return arg ? parseFloat(arg) : undefined;\n\t    }\n\t    function literalNumber(arg) {\n\t        return arg && arg.args ? parseFloat(arg.args) : undefined;\n\t    }\n\t    /*\n\t\t *  the Expressions that Tone.Expr can parse.\n\t\t *\n\t\t *  each expression belongs to a group and contains a regexp \n\t\t *  for selecting the operator as well as that operators method\n\t\t *  \n\t\t *  @type {Object}\n\t\t *  @private\n\t\t */\n\t    Tone.Expr._Expressions = {\n\t        //values\n\t        'value': {\n\t            'signal': {\n\t                regexp: /^\\d+\\.\\d+|^\\d+/,\n\t                method: function (arg) {\n\t                    var sig = new Tone.Signal(getNumber(arg));\n\t                    return sig;\n\t                }\n\t            },\n\t            'input': {\n\t                regexp: /^\\$\\d/,\n\t                method: function (arg, self) {\n\t                    return self.input[getNumber(arg.substr(1))];\n\t                }\n\t            }\n\t        },\n\t        //syntactic glue\n\t        'glue': {\n\t            '(': { regexp: /^\\(/ },\n\t            ')': { regexp: /^\\)/ },\n\t            ',': { regexp: /^,/ }\n\t        },\n\t        //functions\n\t        'func': {\n\t            'abs': {\n\t                regexp: /^abs/,\n\t                method: applyUnary.bind(this, Tone.Abs)\n\t            },\n\t            'mod': {\n\t                regexp: /^mod/,\n\t                method: function (args, self) {\n\t                    var modulus = literalNumber(args[1]);\n\t                    var op = new Tone.Modulo(modulus);\n\t                    self._eval(args[0]).connect(op);\n\t                    return op;\n\t                }\n\t            },\n\t            'pow': {\n\t                regexp: /^pow/,\n\t                method: function (args, self) {\n\t                    var exp = literalNumber(args[1]);\n\t                    var op = new Tone.Pow(exp);\n\t                    self._eval(args[0]).connect(op);\n\t                    return op;\n\t                }\n\t            },\n\t            'a2g': {\n\t                regexp: /^a2g/,\n\t                method: function (args, self) {\n\t                    var op = new Tone.AudioToGain();\n\t                    self._eval(args[0]).connect(op);\n\t                    return op;\n\t                }\n\t            }\n\t        },\n\t        //binary expressions\n\t        'binary': {\n\t            '+': {\n\t                regexp: /^\\+/,\n\t                precedence: 1,\n\t                method: applyBinary.bind(this, Tone.Add)\n\t            },\n\t            '-': {\n\t                regexp: /^\\-/,\n\t                precedence: 1,\n\t                method: function (args, self) {\n\t                    //both unary and binary op\n\t                    if (args.length === 1) {\n\t                        return applyUnary(Tone.Negate, args, self);\n\t                    } else {\n\t                        return applyBinary(Tone.Subtract, args, self);\n\t                    }\n\t                }\n\t            },\n\t            '*': {\n\t                regexp: /^\\*/,\n\t                precedence: 0,\n\t                method: applyBinary.bind(this, Tone.Multiply)\n\t            }\n\t        },\n\t        //unary expressions\n\t        'unary': {\n\t            '-': {\n\t                regexp: /^\\-/,\n\t                method: applyUnary.bind(this, Tone.Negate)\n\t            },\n\t            '!': {\n\t                regexp: /^\\!/,\n\t                method: applyUnary.bind(this, Tone.NOT)\n\t            }\n\t        }\n\t    };\n\t    /**\n\t\t *  @param   {string} expr the expression string\n\t\t *  @return  {number}      the input count\n\t\t *  @private\n\t\t */\n\t    Tone.Expr.prototype._parseInputs = function (expr) {\n\t        var inputArray = expr.match(/\\$\\d/g);\n\t        var inputMax = 0;\n\t        if (inputArray !== null) {\n\t            for (var i = 0; i < inputArray.length; i++) {\n\t                var inputNum = parseInt(inputArray[i].substr(1)) + 1;\n\t                inputMax = Math.max(inputMax, inputNum);\n\t            }\n\t        }\n\t        return inputMax;\n\t    };\n\t    /**\n\t\t *  @param   {Array} args \tan array of arguments\n\t\t *  @return  {string} the results of the replacements being replaced\n\t\t *  @private\n\t\t */\n\t    Tone.Expr.prototype._replacements = function (args) {\n\t        var expr = args.shift();\n\t        for (var i = 0; i < args.length; i++) {\n\t            expr = expr.replace(/\\%/i, args[i]);\n\t        }\n\t        return expr;\n\t    };\n\t    /**\n\t\t *  tokenize the expression based on the Expressions object\n\t\t *  @param   {string} expr \n\t\t *  @return  {Object}      returns two methods on the tokenized list, next and peek\n\t\t *  @private\n\t\t */\n\t    Tone.Expr.prototype._tokenize = function (expr) {\n\t        var position = -1;\n\t        var tokens = [];\n\t        while (expr.length > 0) {\n\t            expr = expr.trim();\n\t            var token = getNextToken(expr);\n\t            tokens.push(token);\n\t            expr = expr.substr(token.value.length);\n\t        }\n\t        function getNextToken(expr) {\n\t            for (var type in Tone.Expr._Expressions) {\n\t                var group = Tone.Expr._Expressions[type];\n\t                for (var opName in group) {\n\t                    var op = group[opName];\n\t                    var reg = op.regexp;\n\t                    var match = expr.match(reg);\n\t                    if (match !== null) {\n\t                        return {\n\t                            type: type,\n\t                            value: match[0],\n\t                            method: op.method\n\t                        };\n\t                    }\n\t                }\n\t            }\n\t            throw new SyntaxError('Tone.Expr: Unexpected token ' + expr);\n\t        }\n\t        return {\n\t            next: function () {\n\t                return tokens[++position];\n\t            },\n\t            peek: function () {\n\t                return tokens[position + 1];\n\t            }\n\t        };\n\t    };\n\t    /**\n\t\t *  recursively parse the string expression into a syntax tree\n\t\t *  \n\t\t *  @param   {string} expr \n\t\t *  @return  {Object}\n\t\t *  @private\n\t\t */\n\t    Tone.Expr.prototype._parseTree = function (expr) {\n\t        var lexer = this._tokenize(expr);\n\t        var isUndef = this.isUndef.bind(this);\n\t        function matchSyntax(token, syn) {\n\t            return !isUndef(token) && token.type === 'glue' && token.value === syn;\n\t        }\n\t        function matchGroup(token, groupName, prec) {\n\t            var ret = false;\n\t            var group = Tone.Expr._Expressions[groupName];\n\t            if (!isUndef(token)) {\n\t                for (var opName in group) {\n\t                    var op = group[opName];\n\t                    if (op.regexp.test(token.value)) {\n\t                        if (!isUndef(prec)) {\n\t                            if (op.precedence === prec) {\n\t                                return true;\n\t                            }\n\t                        } else {\n\t                            return true;\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t            return ret;\n\t        }\n\t        function parseExpression(precedence) {\n\t            if (isUndef(precedence)) {\n\t                precedence = 5;\n\t            }\n\t            var expr;\n\t            if (precedence < 0) {\n\t                expr = parseUnary();\n\t            } else {\n\t                expr = parseExpression(precedence - 1);\n\t            }\n\t            var token = lexer.peek();\n\t            while (matchGroup(token, 'binary', precedence)) {\n\t                token = lexer.next();\n\t                expr = {\n\t                    operator: token.value,\n\t                    method: token.method,\n\t                    args: [\n\t                        expr,\n\t                        parseExpression(precedence - 1)\n\t                    ]\n\t                };\n\t                token = lexer.peek();\n\t            }\n\t            return expr;\n\t        }\n\t        function parseUnary() {\n\t            var token, expr;\n\t            token = lexer.peek();\n\t            if (matchGroup(token, 'unary')) {\n\t                token = lexer.next();\n\t                expr = parseUnary();\n\t                return {\n\t                    operator: token.value,\n\t                    method: token.method,\n\t                    args: [expr]\n\t                };\n\t            }\n\t            return parsePrimary();\n\t        }\n\t        function parsePrimary() {\n\t            var token, expr;\n\t            token = lexer.peek();\n\t            if (isUndef(token)) {\n\t                throw new SyntaxError('Tone.Expr: Unexpected termination of expression');\n\t            }\n\t            if (token.type === 'func') {\n\t                token = lexer.next();\n\t                return parseFunctionCall(token);\n\t            }\n\t            if (token.type === 'value') {\n\t                token = lexer.next();\n\t                return {\n\t                    method: token.method,\n\t                    args: token.value\n\t                };\n\t            }\n\t            if (matchSyntax(token, '(')) {\n\t                lexer.next();\n\t                expr = parseExpression();\n\t                token = lexer.next();\n\t                if (!matchSyntax(token, ')')) {\n\t                    throw new SyntaxError('Expected )');\n\t                }\n\t                return expr;\n\t            }\n\t            throw new SyntaxError('Tone.Expr: Parse error, cannot process token ' + token.value);\n\t        }\n\t        function parseFunctionCall(func) {\n\t            var token, args = [];\n\t            token = lexer.next();\n\t            if (!matchSyntax(token, '(')) {\n\t                throw new SyntaxError('Tone.Expr: Expected ( in a function call \"' + func.value + '\"');\n\t            }\n\t            token = lexer.peek();\n\t            if (!matchSyntax(token, ')')) {\n\t                args = parseArgumentList();\n\t            }\n\t            token = lexer.next();\n\t            if (!matchSyntax(token, ')')) {\n\t                throw new SyntaxError('Tone.Expr: Expected ) in a function call \"' + func.value + '\"');\n\t            }\n\t            return {\n\t                method: func.method,\n\t                args: args,\n\t                name: name\n\t            };\n\t        }\n\t        function parseArgumentList() {\n\t            var token, expr, args = [];\n\t            while (true) {\n\t                expr = parseExpression();\n\t                if (isUndef(expr)) {\n\t                    // TODO maybe throw exception?\n\t                    break;\n\t                }\n\t                args.push(expr);\n\t                token = lexer.peek();\n\t                if (!matchSyntax(token, ',')) {\n\t                    break;\n\t                }\n\t                lexer.next();\n\t            }\n\t            return args;\n\t        }\n\t        return parseExpression();\n\t    };\n\t    /**\n\t\t *  recursively evaluate the expression tree\n\t\t *  @param   {Object} tree \n\t\t *  @return  {AudioNode}      the resulting audio node from the expression\n\t\t *  @private\n\t\t */\n\t    Tone.Expr.prototype._eval = function (tree) {\n\t        if (!this.isUndef(tree)) {\n\t            var node = tree.method(tree.args, this);\n\t            this._nodes.push(node);\n\t            return node;\n\t        }\n\t    };\n\t    /**\n\t\t *  dispose all the nodes\n\t\t *  @private\n\t\t */\n\t    Tone.Expr.prototype._disposeNodes = function () {\n\t        for (var i = 0; i < this._nodes.length; i++) {\n\t            var node = this._nodes[i];\n\t            if (this.isFunction(node.dispose)) {\n\t                node.dispose();\n\t            } else if (this.isFunction(node.disconnect)) {\n\t                node.disconnect();\n\t            }\n\t            node = null;\n\t            this._nodes[i] = null;\n\t        }\n\t        this._nodes = null;\n\t    };\n\t    /**\n\t\t *  clean up\n\t\t */\n\t    Tone.Expr.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._disposeNodes();\n\t    };\n\t    return Tone.Expr;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Convert an incoming signal between 0, 1 to an equal power gain scale.\n\t\t *\n\t\t *  @extends {Tone.SignalBase}\n\t\t *  @constructor\n\t\t *  @example\n\t\t * var eqPowGain = new Tone.EqualPowerGain();\n\t\t */\n\t    Tone.EqualPowerGain = function () {\n\t        /**\n\t\t\t *  @type {Tone.WaveShaper}\n\t\t\t *  @private\n\t\t\t */\n\t        this._eqPower = this.input = this.output = new Tone.WaveShaper(function (val) {\n\t            if (Math.abs(val) < 0.001) {\n\t                //should output 0 when input is 0\n\t                return 0;\n\t            } else {\n\t                return this.equalPowerScale(val);\n\t            }\n\t        }.bind(this), 4096);\n\t    };\n\t    Tone.extend(Tone.EqualPowerGain, Tone.SignalBase);\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.EqualPowerGain} this\n\t\t */\n\t    Tone.EqualPowerGain.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._eqPower.dispose();\n\t        this._eqPower = null;\n\t        return this;\n\t    };\n\t    return Tone.EqualPowerGain;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t * @class  Tone.Crossfade provides equal power fading between two inputs. \n\t\t *         More on crossfading technique [here](https://en.wikipedia.org/wiki/Fade_(audio_engineering)#Crossfading).\n\t\t *\n\t\t * @constructor\n\t\t * @extends {Tone}\n\t\t * @param {NormalRange} [initialFade=0.5]\n\t\t * @example\n\t\t * var crossFade = new Tone.CrossFade(0.5);\n\t\t * //connect effect A to crossfade from\n\t\t * //effect output 0 to crossfade input 0\n\t\t * effectA.connect(crossFade, 0, 0);\n\t\t * //connect effect B to crossfade from\n\t\t * //effect output 0 to crossfade input 1\n\t\t * effectB.connect(crossFade, 0, 1);\n\t\t * crossFade.fade.value = 0;\n\t\t * // ^ only effectA is output\n\t\t * crossFade.fade.value = 1;\n\t\t * // ^ only effectB is output\n\t\t * crossFade.fade.value = 0.5;\n\t\t * // ^ the two signals are mixed equally. \n\t\t */\n\t    Tone.CrossFade = function (initialFade) {\n\t        this.createInsOuts(2, 1);\n\t        /**\n\t\t\t *  Alias for <code>input[0]</code>. \n\t\t\t *  @type {Tone.Gain}\n\t\t\t */\n\t        this.a = this.input[0] = new Tone.Gain();\n\t        /**\n\t\t\t *  Alias for <code>input[1]</code>. \n\t\t\t *  @type {Tone.Gain}\n\t\t\t */\n\t        this.b = this.input[1] = new Tone.Gain();\n\t        /**\n\t\t\t * \tThe mix between the two inputs. A fade value of 0\n\t\t\t * \twill output 100% <code>input[0]</code> and \n\t\t\t * \ta value of 1 will output 100% <code>input[1]</code>. \n\t\t\t *  @type {NormalRange}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.fade = new Tone.Signal(this.defaultArg(initialFade, 0.5), Tone.Type.NormalRange);\n\t        /**\n\t\t\t *  equal power gain cross fade\n\t\t\t *  @private\n\t\t\t *  @type {Tone.EqualPowerGain}\n\t\t\t */\n\t        this._equalPowerA = new Tone.EqualPowerGain();\n\t        /**\n\t\t\t *  equal power gain cross fade\n\t\t\t *  @private\n\t\t\t *  @type {Tone.EqualPowerGain}\n\t\t\t */\n\t        this._equalPowerB = new Tone.EqualPowerGain();\n\t        /**\n\t\t\t *  invert the incoming signal\n\t\t\t *  @private\n\t\t\t *  @type {Tone}\n\t\t\t */\n\t        this._invert = new Tone.Expr('1 - $0');\n\t        //connections\n\t        this.a.connect(this.output);\n\t        this.b.connect(this.output);\n\t        this.fade.chain(this._equalPowerB, this.b.gain);\n\t        this.fade.chain(this._invert, this._equalPowerA, this.a.gain);\n\t        this._readOnly('fade');\n\t    };\n\t    Tone.extend(Tone.CrossFade);\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.CrossFade} this\n\t\t */\n\t    Tone.CrossFade.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._writable('fade');\n\t        this._equalPowerA.dispose();\n\t        this._equalPowerA = null;\n\t        this._equalPowerB.dispose();\n\t        this._equalPowerB = null;\n\t        this.fade.dispose();\n\t        this.fade = null;\n\t        this._invert.dispose();\n\t        this._invert = null;\n\t        this.a.dispose();\n\t        this.a = null;\n\t        this.b.dispose();\n\t        this.b = null;\n\t        return this;\n\t    };\n\t    return Tone.CrossFade;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.Filter is a filter which allows for all of the same native methods\n\t\t *          as the [BiquadFilterNode](http://webaudio.github.io/web-audio-api/#the-biquadfilternode-interface). \n\t\t *          Tone.Filter has the added ability to set the filter rolloff at -12 \n\t\t *          (default), -24 and -48. \n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone}\n\t\t *  @param {Frequency|Object} [frequency] The cutoff frequency of the filter.\n\t\t *  @param {string=} type The type of filter.\n\t\t *  @param {number=} rolloff The drop in decibels per octave after the cutoff frequency.\n\t\t *                            3 choices: -12, -24, and -48\n\t\t *  @example\n\t\t *  var filter = new Tone.Filter(200, \"highpass\");\n\t\t */\n\t    Tone.Filter = function () {\n\t        this.createInsOuts(1, 1);\n\t        var options = this.optionsObject(arguments, [\n\t            'frequency',\n\t            'type',\n\t            'rolloff'\n\t        ], Tone.Filter.defaults);\n\t        /**\n\t\t\t *  the filter(s)\n\t\t\t *  @type {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._filters = [];\n\t        /**\n\t\t\t *  The cutoff frequency of the filter. \n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.frequency = new Tone.Signal(options.frequency, Tone.Type.Frequency);\n\t        /**\n\t\t\t *  The detune parameter\n\t\t\t *  @type {Cents}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.detune = new Tone.Signal(0, Tone.Type.Cents);\n\t        /**\n\t\t\t *  The gain of the filter, only used in certain filter types\n\t\t\t *  @type {Number}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.gain = new Tone.Signal({\n\t            'value': options.gain,\n\t            'convert': false\n\t        });\n\t        /**\n\t\t\t *  The Q or Quality of the filter\n\t\t\t *  @type {Positive}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.Q = new Tone.Signal(options.Q);\n\t        /**\n\t\t\t *  the type of the filter\n\t\t\t *  @type {string}\n\t\t\t *  @private\n\t\t\t */\n\t        this._type = options.type;\n\t        /**\n\t\t\t *  the rolloff value of the filter\n\t\t\t *  @type {number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._rolloff = options.rolloff;\n\t        //set the rolloff;\n\t        this.rolloff = options.rolloff;\n\t        this._readOnly([\n\t            'detune',\n\t            'frequency',\n\t            'gain',\n\t            'Q'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.Filter);\n\t    /**\n\t\t *  the default parameters\n\t\t *\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.Filter.defaults = {\n\t        'type': 'lowpass',\n\t        'frequency': 350,\n\t        'rolloff': -12,\n\t        'Q': 1,\n\t        'gain': 0\n\t    };\n\t    /**\n\t\t * The type of the filter. Types: \"lowpass\", \"highpass\", \n\t\t * \"bandpass\", \"lowshelf\", \"highshelf\", \"notch\", \"allpass\", or \"peaking\". \n\t\t * @memberOf Tone.Filter#\n\t\t * @type {string}\n\t\t * @name type\n\t\t */\n\t    Object.defineProperty(Tone.Filter.prototype, 'type', {\n\t        get: function () {\n\t            return this._type;\n\t        },\n\t        set: function (type) {\n\t            var types = [\n\t                'lowpass',\n\t                'highpass',\n\t                'bandpass',\n\t                'lowshelf',\n\t                'highshelf',\n\t                'notch',\n\t                'allpass',\n\t                'peaking'\n\t            ];\n\t            if (types.indexOf(type) === -1) {\n\t                throw new TypeError('Tone.Filter: invalid type ' + type);\n\t            }\n\t            this._type = type;\n\t            for (var i = 0; i < this._filters.length; i++) {\n\t                this._filters[i].type = type;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * The rolloff of the filter which is the drop in db\n\t\t * per octave. Implemented internally by cascading filters.\n\t\t * Only accepts the values -12, -24, -48 and -96.\n\t\t * @memberOf Tone.Filter#\n\t\t * @type {number}\n\t\t * @name rolloff\n\t\t */\n\t    Object.defineProperty(Tone.Filter.prototype, 'rolloff', {\n\t        get: function () {\n\t            return this._rolloff;\n\t        },\n\t        set: function (rolloff) {\n\t            rolloff = parseInt(rolloff, 10);\n\t            var possibilities = [\n\t                -12,\n\t                -24,\n\t                -48,\n\t                -96\n\t            ];\n\t            var cascadingCount = possibilities.indexOf(rolloff);\n\t            //check the rolloff is valid\n\t            if (cascadingCount === -1) {\n\t                throw new RangeError('Tone.Filter: rolloff can only be -12, -24, -48 or -96');\n\t            }\n\t            cascadingCount += 1;\n\t            this._rolloff = rolloff;\n\t            //first disconnect the filters and throw them away\n\t            this.input.disconnect();\n\t            for (var i = 0; i < this._filters.length; i++) {\n\t                this._filters[i].disconnect();\n\t                this._filters[i] = null;\n\t            }\n\t            this._filters = new Array(cascadingCount);\n\t            for (var count = 0; count < cascadingCount; count++) {\n\t                var filter = this.context.createBiquadFilter();\n\t                filter.type = this._type;\n\t                this.frequency.connect(filter.frequency);\n\t                this.detune.connect(filter.detune);\n\t                this.Q.connect(filter.Q);\n\t                this.gain.connect(filter.gain);\n\t                this._filters[count] = filter;\n\t            }\n\t            //connect them up\n\t            var connectionChain = [this.input].concat(this._filters).concat([this.output]);\n\t            this.connectSeries.apply(this, connectionChain);\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up. \n\t\t *  @return {Tone.Filter} this\n\t\t */\n\t    Tone.Filter.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        for (var i = 0; i < this._filters.length; i++) {\n\t            this._filters[i].disconnect();\n\t            this._filters[i] = null;\n\t        }\n\t        this._filters = null;\n\t        this._writable([\n\t            'detune',\n\t            'frequency',\n\t            'gain',\n\t            'Q'\n\t        ]);\n\t        this.frequency.dispose();\n\t        this.Q.dispose();\n\t        this.frequency = null;\n\t        this.Q = null;\n\t        this.detune.dispose();\n\t        this.detune = null;\n\t        this.gain.dispose();\n\t        this.gain = null;\n\t        return this;\n\t    };\n\t    return Tone.Filter;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Split the incoming signal into three bands (low, mid, high)\n\t\t *         with two crossover frequency controls. \n\t\t *\n\t\t *  @extends {Tone}\n\t\t *  @constructor\n\t\t *  @param {Frequency|Object} [lowFrequency] the low/mid crossover frequency\n\t\t *  @param {Frequency} [highFrequency] the mid/high crossover frequency\n\t\t */\n\t    Tone.MultibandSplit = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'lowFrequency',\n\t            'highFrequency'\n\t        ], Tone.MultibandSplit.defaults);\n\t        /**\n\t\t\t *  the input\n\t\t\t *  @type {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this.input = new Tone.Gain();\n\t        /**\n\t\t\t *  the outputs\n\t\t\t *  @type {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this.output = new Array(3);\n\t        /**\n\t\t\t *  The low band. Alias for <code>output[0]</code>\n\t\t\t *  @type {Tone.Filter}\n\t\t\t */\n\t        this.low = this.output[0] = new Tone.Filter(0, 'lowpass');\n\t        /**\n\t\t\t *  the lower filter of the mid band\n\t\t\t *  @type {Tone.Filter}\n\t\t\t *  @private\n\t\t\t */\n\t        this._lowMidFilter = new Tone.Filter(0, 'highpass');\n\t        /**\n\t\t\t *  The mid band output. Alias for <code>output[1]</code>\n\t\t\t *  @type {Tone.Filter}\n\t\t\t */\n\t        this.mid = this.output[1] = new Tone.Filter(0, 'lowpass');\n\t        /**\n\t\t\t *  The high band output. Alias for <code>output[2]</code>\n\t\t\t *  @type {Tone.Filter}\n\t\t\t */\n\t        this.high = this.output[2] = new Tone.Filter(0, 'highpass');\n\t        /**\n\t\t\t *  The low/mid crossover frequency.\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.lowFrequency = new Tone.Signal(options.lowFrequency, Tone.Type.Frequency);\n\t        /**\n\t\t\t *  The mid/high crossover frequency.\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.highFrequency = new Tone.Signal(options.highFrequency, Tone.Type.Frequency);\n\t        /**\n\t\t\t *  The quality of all the filters\n\t\t\t *  @type {Number}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.Q = new Tone.Signal(options.Q);\n\t        this.input.fan(this.low, this.high);\n\t        this.input.chain(this._lowMidFilter, this.mid);\n\t        //the frequency control signal\n\t        this.lowFrequency.connect(this.low.frequency);\n\t        this.lowFrequency.connect(this._lowMidFilter.frequency);\n\t        this.highFrequency.connect(this.mid.frequency);\n\t        this.highFrequency.connect(this.high.frequency);\n\t        //the Q value\n\t        this.Q.connect(this.low.Q);\n\t        this.Q.connect(this._lowMidFilter.Q);\n\t        this.Q.connect(this.mid.Q);\n\t        this.Q.connect(this.high.Q);\n\t        this._readOnly([\n\t            'high',\n\t            'mid',\n\t            'low',\n\t            'highFrequency',\n\t            'lowFrequency'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.MultibandSplit);\n\t    /**\n\t\t *  @private\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.MultibandSplit.defaults = {\n\t        'lowFrequency': 400,\n\t        'highFrequency': 2500,\n\t        'Q': 1\n\t    };\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.MultibandSplit} this\n\t\t */\n\t    Tone.MultibandSplit.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._writable([\n\t            'high',\n\t            'mid',\n\t            'low',\n\t            'highFrequency',\n\t            'lowFrequency'\n\t        ]);\n\t        this.low.dispose();\n\t        this.low = null;\n\t        this._lowMidFilter.dispose();\n\t        this._lowMidFilter = null;\n\t        this.mid.dispose();\n\t        this.mid = null;\n\t        this.high.dispose();\n\t        this.high = null;\n\t        this.lowFrequency.dispose();\n\t        this.lowFrequency = null;\n\t        this.highFrequency.dispose();\n\t        this.highFrequency = null;\n\t        this.Q.dispose();\n\t        this.Q = null;\n\t        return this;\n\t    };\n\t    return Tone.MultibandSplit;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.EQ3 is a three band EQ with control over low, mid, and high gain as\n\t\t *         well as the low and high crossover frequencies.\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone}\n\t\t *  \n\t\t *  @param {Decibels|Object} [lowLevel] The gain applied to the lows.\n\t\t *  @param {Decibels} [midLevel] The gain applied to the mid.\n\t\t *  @param {Decibels} [highLevel] The gain applied to the high.\n\t\t *  @example\n\t\t * var eq = new Tone.EQ3(-10, 3, -20);\n\t\t */\n\t    Tone.EQ3 = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'low',\n\t            'mid',\n\t            'high'\n\t        ], Tone.EQ3.defaults);\n\t        /**\n\t\t\t *  the output node\n\t\t\t *  @type {GainNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this.output = new Tone.Gain();\n\t        /**\n\t\t\t *  the multiband split\n\t\t\t *  @type {Tone.MultibandSplit}\n\t\t\t *  @private\n\t\t\t */\n\t        this._multibandSplit = this.input = new Tone.MultibandSplit({\n\t            'lowFrequency': options.lowFrequency,\n\t            'highFrequency': options.highFrequency\n\t        });\n\t        /**\n\t\t\t *  The gain for the lower signals\n\t\t\t *  @type  {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._lowGain = new Tone.Gain(options.low, Tone.Type.Decibels);\n\t        /**\n\t\t\t *  The gain for the mid signals\n\t\t\t *  @type  {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._midGain = new Tone.Gain(options.mid, Tone.Type.Decibels);\n\t        /**\n\t\t\t * The gain in decibels of the high part\n\t\t\t * @type {Tone.Gain}\n\t\t\t * @private\n\t\t\t */\n\t        this._highGain = new Tone.Gain(options.high, Tone.Type.Decibels);\n\t        /**\n\t\t\t * The gain in decibels of the low part\n\t\t\t * @type {Decibels}\n\t\t\t * @signal\n\t\t\t */\n\t        this.low = this._lowGain.gain;\n\t        /**\n\t\t\t * The gain in decibels of the mid part\n\t\t\t * @type {Decibels}\n\t\t\t * @signal\n\t\t\t */\n\t        this.mid = this._midGain.gain;\n\t        /**\n\t\t\t * The gain in decibels of the high part\n\t\t\t * @type {Decibels}\n\t\t\t * @signal\n\t\t\t */\n\t        this.high = this._highGain.gain;\n\t        /**\n\t\t\t *  The Q value for all of the filters. \n\t\t\t *  @type {Positive}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.Q = this._multibandSplit.Q;\n\t        /**\n\t\t\t *  The low/mid crossover frequency. \n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.lowFrequency = this._multibandSplit.lowFrequency;\n\t        /**\n\t\t\t *  The mid/high crossover frequency. \n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.highFrequency = this._multibandSplit.highFrequency;\n\t        //the frequency bands\n\t        this._multibandSplit.low.chain(this._lowGain, this.output);\n\t        this._multibandSplit.mid.chain(this._midGain, this.output);\n\t        this._multibandSplit.high.chain(this._highGain, this.output);\n\t        this._readOnly([\n\t            'low',\n\t            'mid',\n\t            'high',\n\t            'lowFrequency',\n\t            'highFrequency'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.EQ3);\n\t    /**\n\t\t *  the default values\n\t\t */\n\t    Tone.EQ3.defaults = {\n\t        'low': 0,\n\t        'mid': 0,\n\t        'high': 0,\n\t        'lowFrequency': 400,\n\t        'highFrequency': 2500\n\t    };\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.EQ3} this\n\t\t */\n\t    Tone.EQ3.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._writable([\n\t            'low',\n\t            'mid',\n\t            'high',\n\t            'lowFrequency',\n\t            'highFrequency'\n\t        ]);\n\t        this._multibandSplit.dispose();\n\t        this._multibandSplit = null;\n\t        this.lowFrequency = null;\n\t        this.highFrequency = null;\n\t        this._lowGain.dispose();\n\t        this._lowGain = null;\n\t        this._midGain.dispose();\n\t        this._midGain = null;\n\t        this._highGain.dispose();\n\t        this._highGain = null;\n\t        this.low = null;\n\t        this.mid = null;\n\t        this.high = null;\n\t        this.Q = null;\n\t        return this;\n\t    };\n\t    return Tone.EQ3;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Performs a linear scaling on an input signal.\n\t\t *          Scales a NormalRange input to between\n\t\t *          outputMin and outputMax.\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.SignalBase}\n\t\t *  @param {number} [outputMin=0] The output value when the input is 0. \n\t\t *  @param {number} [outputMax=1]\tThe output value when the input is 1. \n\t\t *  @example\n\t\t * var scale = new Tone.Scale(50, 100);\n\t\t * var signal = new Tone.Signal(0.5).connect(scale);\n\t\t * //the output of scale equals 75\n\t\t */\n\t    Tone.Scale = function (outputMin, outputMax) {\n\t        /** \n\t\t\t *  @private\n\t\t\t *  @type {number}\n\t\t\t */\n\t        this._outputMin = this.defaultArg(outputMin, 0);\n\t        /** \n\t\t\t *  @private\n\t\t\t *  @type {number}\n\t\t\t */\n\t        this._outputMax = this.defaultArg(outputMax, 1);\n\t        /** \n\t\t\t *  @private\n\t\t\t *  @type {Tone.Multiply}\n\t\t\t *  @private\n\t\t\t */\n\t        this._scale = this.input = new Tone.Multiply(1);\n\t        /** \n\t\t\t *  @private\n\t\t\t *  @type {Tone.Add}\n\t\t\t *  @private\n\t\t\t */\n\t        this._add = this.output = new Tone.Add(0);\n\t        this._scale.connect(this._add);\n\t        this._setRange();\n\t    };\n\t    Tone.extend(Tone.Scale, Tone.SignalBase);\n\t    /**\n\t\t * The minimum output value. This number is output when \n\t\t * the value input value is 0. \n\t\t * @memberOf Tone.Scale#\n\t\t * @type {number}\n\t\t * @name min\n\t\t */\n\t    Object.defineProperty(Tone.Scale.prototype, 'min', {\n\t        get: function () {\n\t            return this._outputMin;\n\t        },\n\t        set: function (min) {\n\t            this._outputMin = min;\n\t            this._setRange();\n\t        }\n\t    });\n\t    /**\n\t\t * The maximum output value. This number is output when \n\t\t * the value input value is 1. \n\t\t * @memberOf Tone.Scale#\n\t\t * @type {number}\n\t\t * @name max\n\t\t */\n\t    Object.defineProperty(Tone.Scale.prototype, 'max', {\n\t        get: function () {\n\t            return this._outputMax;\n\t        },\n\t        set: function (max) {\n\t            this._outputMax = max;\n\t            this._setRange();\n\t        }\n\t    });\n\t    /**\n\t\t *  set the values\n\t\t *  @private\n\t\t */\n\t    Tone.Scale.prototype._setRange = function () {\n\t        this._add.value = this._outputMin;\n\t        this._scale.value = this._outputMax - this._outputMin;\n\t    };\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.Scale} this\n\t\t */\n\t    Tone.Scale.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._add.dispose();\n\t        this._add = null;\n\t        this._scale.dispose();\n\t        this._scale = null;\n\t        return this;\n\t    };\n\t    return Tone.Scale;\n\t});\n\tModule(function (Tone) {\n\t    /**\n\t\t *  @class  Performs an exponential scaling on an input signal.\n\t\t *          Scales a NormalRange value [0,1] exponentially\n\t\t *          to the output range of outputMin to outputMax.\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.SignalBase}\n\t\t *  @param {number} [outputMin=0] The output value when the input is 0. \n\t\t *  @param {number} [outputMax=1]\tThe output value when the input is 1. \n\t\t *  @param {number} [exponent=2] The exponent which scales the incoming signal.\n\t\t *  @example\n\t\t * var scaleExp = new Tone.ScaleExp(0, 100, 2);\n\t\t * var signal = new Tone.Signal(0.5).connect(scaleExp);\n\t\t */\n\t    Tone.ScaleExp = function (outputMin, outputMax, exponent) {\n\t        /**\n\t\t\t *  scale the input to the output range\n\t\t\t *  @type {Tone.Scale}\n\t\t\t *  @private\n\t\t\t */\n\t        this._scale = this.output = new Tone.Scale(outputMin, outputMax);\n\t        /**\n\t\t\t *  @private\n\t\t\t *  @type {Tone.Pow}\n\t\t\t *  @private\n\t\t\t */\n\t        this._exp = this.input = new Tone.Pow(this.defaultArg(exponent, 2));\n\t        this._exp.connect(this._scale);\n\t    };\n\t    Tone.extend(Tone.ScaleExp, Tone.SignalBase);\n\t    /**\n\t\t * Instead of interpolating linearly between the <code>min</code> and \n\t\t * <code>max</code> values, setting the exponent will interpolate between\n\t\t * the two values with an exponential curve. \n\t\t * @memberOf Tone.ScaleExp#\n\t\t * @type {number}\n\t\t * @name exponent\n\t\t */\n\t    Object.defineProperty(Tone.ScaleExp.prototype, 'exponent', {\n\t        get: function () {\n\t            return this._exp.value;\n\t        },\n\t        set: function (exp) {\n\t            this._exp.value = exp;\n\t        }\n\t    });\n\t    /**\n\t\t * The minimum output value. This number is output when \n\t\t * the value input value is 0. \n\t\t * @memberOf Tone.ScaleExp#\n\t\t * @type {number}\n\t\t * @name min\n\t\t */\n\t    Object.defineProperty(Tone.ScaleExp.prototype, 'min', {\n\t        get: function () {\n\t            return this._scale.min;\n\t        },\n\t        set: function (min) {\n\t            this._scale.min = min;\n\t        }\n\t    });\n\t    /**\n\t\t * The maximum output value. This number is output when \n\t\t * the value input value is 1. \n\t\t * @memberOf Tone.ScaleExp#\n\t\t * @type {number}\n\t\t * @name max\n\t\t */\n\t    Object.defineProperty(Tone.ScaleExp.prototype, 'max', {\n\t        get: function () {\n\t            return this._scale.max;\n\t        },\n\t        set: function (max) {\n\t            this._scale.max = max;\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.ScaleExp} this\n\t\t */\n\t    Tone.ScaleExp.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._scale.dispose();\n\t        this._scale = null;\n\t        this._exp.dispose();\n\t        this._exp = null;\n\t        return this;\n\t    };\n\t    return Tone.ScaleExp;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  createDelay shim\n\t\t *  @private\n\t\t */\n\t    if (window.DelayNode && !AudioContext.prototype.createDelay) {\n\t        AudioContext.prototype.createDelay = AudioContext.prototype.createDelayNode;\n\t    }\n\t    /**\n\t\t *  @class Wrapper around Web Audio's native [DelayNode](http://webaudio.github.io/web-audio-api/#the-delaynode-interface). \n\t\t *  @extends {Tone}\n\t\t *  @param {Time=} delayTime The delay applied to the incoming signal.\n\t\t *  @param {Time=} maxDelay The maximum delay time. \n\t\t */\n\t    Tone.Delay = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'delayTime',\n\t            'maxDelay'\n\t        ], Tone.Delay.defaults);\n\t        /**\n\t\t\t *  The native delay node\n\t\t\t *  @type {DelayNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._delayNode = this.input = this.output = this.context.createDelay(this.toSeconds(options.maxDelay));\n\t        /**\n\t\t\t *  The amount of time the incoming signal is\n\t\t\t *  delayed. \n\t\t\t *  @type {Tone.Param}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.delayTime = new Tone.Param({\n\t            'param': this._delayNode.delayTime,\n\t            'units': Tone.Type.Time,\n\t            'value': options.delayTime\n\t        });\n\t        this._readOnly('delayTime');\n\t    };\n\t    Tone.extend(Tone.Delay);\n\t    /**\n\t\t *  The defaults\n\t\t *  @const\n\t\t *  @type  {Object}\n\t\t */\n\t    Tone.Delay.defaults = {\n\t        'maxDelay': 1,\n\t        'delayTime': 0\n\t    };\n\t    /**\n\t\t *  Clean up.\n\t\t *  @return  {Tone.Delay}  this\n\t\t */\n\t    Tone.Delay.prototype.dispose = function () {\n\t        Tone.Param.prototype.dispose.call(this);\n\t        this._delayNode.disconnect();\n\t        this._delayNode = null;\n\t        this._writable('delayTime');\n\t        this.delayTime = null;\n\t        return this;\n\t    };\n\t    return Tone.Delay;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Comb filters are basic building blocks for physical modeling. Read more\n\t\t *         about comb filters on [CCRMA's website](https://ccrma.stanford.edu/~jos/pasp/Feedback_Comb_Filters.html).\n\t\t *\n\t\t *  @extends {Tone}\n\t\t *  @constructor\n\t\t *  @param {Time|Object} [delayTime] The delay time of the filter. \n\t\t *  @param {NormalRange=} resonance The amount of feedback the filter has. \n\t\t */\n\t    Tone.FeedbackCombFilter = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'delayTime',\n\t            'resonance'\n\t        ], Tone.FeedbackCombFilter.defaults);\n\t        /**\n\t\t\t *  the delay node\n\t\t\t *  @type {DelayNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._delay = this.input = this.output = new Tone.Delay(options.delayTime);\n\t        /**\n\t\t\t *  The amount of delay of the comb filter. \n\t\t\t *  @type {Time}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.delayTime = this._delay.delayTime;\n\t        /**\n\t\t\t *  the feedback node\n\t\t\t *  @type {GainNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._feedback = new Tone.Gain(options.resonance, Tone.Type.NormalRange);\n\t        /**\n\t\t\t *  The amount of feedback of the delayed signal. \n\t\t\t *  @type {NormalRange}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.resonance = this._feedback.gain;\n\t        this._delay.chain(this._feedback, this._delay);\n\t        this._readOnly([\n\t            'resonance',\n\t            'delayTime'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.FeedbackCombFilter);\n\t    /**\n\t\t *  the default parameters\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.FeedbackCombFilter.defaults = {\n\t        'delayTime': 0.1,\n\t        'resonance': 0.5\n\t    };\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.FeedbackCombFilter} this\n\t\t */\n\t    Tone.FeedbackCombFilter.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._writable([\n\t            'resonance',\n\t            'delayTime'\n\t        ]);\n\t        this._delay.dispose();\n\t        this._delay = null;\n\t        this.delayTime = null;\n\t        this._feedback.dispose();\n\t        this._feedback = null;\n\t        this.resonance = null;\n\t        return this;\n\t    };\n\t    return Tone.FeedbackCombFilter;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.Follower is a  crude envelope follower which will follow \n\t\t *          the amplitude of an incoming signal. \n\t\t *          Take care with small (< 0.02) attack or decay values \n\t\t *          as follower has some ripple which is exaggerated\n\t\t *          at these values. Read more about envelope followers (also known \n\t\t *          as envelope detectors) on [Wikipedia](https://en.wikipedia.org/wiki/Envelope_detector).\n\t\t *  \n\t\t *  @constructor\n\t\t *  @extends {Tone}\n\t\t *  @param {Time|Object} [attack] The rate at which the follower rises.\n\t\t *  @param {Time=} release The rate at which the folower falls. \n\t\t *  @example\n\t\t * var follower = new Tone.Follower(0.2, 0.4);\n\t\t */\n\t    Tone.Follower = function () {\n\t        this.createInsOuts(1, 1);\n\t        var options = this.optionsObject(arguments, [\n\t            'attack',\n\t            'release'\n\t        ], Tone.Follower.defaults);\n\t        /**\n\t\t\t *  @type {Tone.Abs}\n\t\t\t *  @private\n\t\t\t */\n\t        this._abs = new Tone.Abs();\n\t        /**\n\t\t\t *  the lowpass filter which smooths the input\n\t\t\t *  @type {BiquadFilterNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._filter = this.context.createBiquadFilter();\n\t        this._filter.type = 'lowpass';\n\t        this._filter.frequency.value = 0;\n\t        this._filter.Q.value = -100;\n\t        /**\n\t\t\t *  @type {WaveShaperNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._frequencyValues = new Tone.WaveShaper();\n\t        /**\n\t\t\t *  @type {Tone.Subtract}\n\t\t\t *  @private\n\t\t\t */\n\t        this._sub = new Tone.Subtract();\n\t        /**\n\t\t\t *  @type {Tone.Delay}\n\t\t\t *  @private\n\t\t\t */\n\t        this._delay = new Tone.Delay(this.blockTime);\n\t        /**\n\t\t\t *  this keeps it far from 0, even for very small differences\n\t\t\t *  @type {Tone.Multiply}\n\t\t\t *  @private\n\t\t\t */\n\t        this._mult = new Tone.Multiply(10000);\n\t        /**\n\t\t\t *  @private\n\t\t\t *  @type {number}\n\t\t\t */\n\t        this._attack = options.attack;\n\t        /**\n\t\t\t *  @private\n\t\t\t *  @type {number}\n\t\t\t */\n\t        this._release = options.release;\n\t        //the smoothed signal to get the values\n\t        this.input.chain(this._abs, this._filter, this.output);\n\t        //the difference path\n\t        this._abs.connect(this._sub, 0, 1);\n\t        this._filter.chain(this._delay, this._sub);\n\t        //threshold the difference and use the thresh to set the frequency\n\t        this._sub.chain(this._mult, this._frequencyValues, this._filter.frequency);\n\t        //set the attack and release values in the table\n\t        this._setAttackRelease(this._attack, this._release);\n\t    };\n\t    Tone.extend(Tone.Follower);\n\t    /**\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.Follower.defaults = {\n\t        'attack': 0.05,\n\t        'release': 0.5\n\t    };\n\t    /**\n\t\t *  sets the attack and release times in the wave shaper\n\t\t *  @param   {Time} attack  \n\t\t *  @param   {Time} release \n\t\t *  @private\n\t\t */\n\t    Tone.Follower.prototype._setAttackRelease = function (attack, release) {\n\t        var minTime = this.blockTime;\n\t        attack = Tone.Time(attack).toFrequency();\n\t        release = Tone.Time(release).toFrequency();\n\t        attack = Math.max(attack, minTime);\n\t        release = Math.max(release, minTime);\n\t        this._frequencyValues.setMap(function (val) {\n\t            if (val <= 0) {\n\t                return attack;\n\t            } else {\n\t                return release;\n\t            }\n\t        });\n\t    };\n\t    /**\n\t\t * The attack time.\n\t\t * @memberOf Tone.Follower#\n\t\t * @type {Time}\n\t\t * @name attack\n\t\t */\n\t    Object.defineProperty(Tone.Follower.prototype, 'attack', {\n\t        get: function () {\n\t            return this._attack;\n\t        },\n\t        set: function (attack) {\n\t            this._attack = attack;\n\t            this._setAttackRelease(this._attack, this._release);\n\t        }\n\t    });\n\t    /**\n\t\t * The release time.\n\t\t * @memberOf Tone.Follower#\n\t\t * @type {Time}\n\t\t * @name release\n\t\t */\n\t    Object.defineProperty(Tone.Follower.prototype, 'release', {\n\t        get: function () {\n\t            return this._release;\n\t        },\n\t        set: function (release) {\n\t            this._release = release;\n\t            this._setAttackRelease(this._attack, this._release);\n\t        }\n\t    });\n\t    /**\n\t\t *  Borrows the connect method from Signal so that the output can be used\n\t\t *  as a Tone.Signal control signal.\n\t\t *  @function\n\t\t */\n\t    Tone.Follower.prototype.connect = Tone.Signal.prototype.connect;\n\t    /**\n\t\t *  dispose\n\t\t *  @returns {Tone.Follower} this\n\t\t */\n\t    Tone.Follower.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._filter.disconnect();\n\t        this._filter = null;\n\t        this._frequencyValues.disconnect();\n\t        this._frequencyValues = null;\n\t        this._delay.dispose();\n\t        this._delay = null;\n\t        this._sub.disconnect();\n\t        this._sub = null;\n\t        this._abs.dispose();\n\t        this._abs = null;\n\t        this._mult.dispose();\n\t        this._mult = null;\n\t        this._curve = null;\n\t        return this;\n\t    };\n\t    return Tone.Follower;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.ScaledEnvelop is an envelope which can be scaled \n\t\t *         to any range. It's useful for applying an envelope \n\t\t *         to a frequency or any other non-NormalRange signal \n\t\t *         parameter. \n\t\t *\n\t\t *  @extends {Tone.Envelope}\n\t\t *  @constructor\n\t\t *  @param {Time|Object} [attack]\tthe attack time in seconds\n\t\t *  @param {Time} [decay]\tthe decay time in seconds\n\t\t *  @param {number} [sustain] \ta percentage (0-1) of the full amplitude\n\t\t *  @param {Time} [release]\tthe release time in seconds\n\t\t *  @example\n\t\t *  var scaledEnv = new Tone.ScaledEnvelope({\n\t\t *  \t\"attack\" : 0.2,\n\t\t *  \t\"min\" : 200,\n\t\t *  \t\"max\" : 2000\n\t\t *  });\n\t\t *  scaledEnv.connect(oscillator.frequency);\n\t\t */\n\t    Tone.ScaledEnvelope = function () {\n\t        //get all of the defaults\n\t        var options = this.optionsObject(arguments, [\n\t            'attack',\n\t            'decay',\n\t            'sustain',\n\t            'release'\n\t        ], Tone.Envelope.defaults);\n\t        Tone.Envelope.call(this, options);\n\t        options = this.defaultArg(options, Tone.ScaledEnvelope.defaults);\n\t        /** \n\t\t\t *  scale the incoming signal by an exponent\n\t\t\t *  @type {Tone.Pow}\n\t\t\t *  @private\n\t\t\t */\n\t        this._exp = this.output = new Tone.Pow(options.exponent);\n\t        /**\n\t\t\t *  scale the signal to the desired range\n\t\t\t *  @type {Tone.Multiply}\n\t\t\t *  @private\n\t\t\t */\n\t        this._scale = this.output = new Tone.Scale(options.min, options.max);\n\t        this._sig.chain(this._exp, this._scale);\n\t    };\n\t    Tone.extend(Tone.ScaledEnvelope, Tone.Envelope);\n\t    /**\n\t\t *  the default parameters\n\t\t *  @static\n\t\t */\n\t    Tone.ScaledEnvelope.defaults = {\n\t        'min': 0,\n\t        'max': 1,\n\t        'exponent': 1\n\t    };\n\t    /**\n\t\t * The envelope's min output value. This is the value which it\n\t\t * starts at. \n\t\t * @memberOf Tone.ScaledEnvelope#\n\t\t * @type {number}\n\t\t * @name min\n\t\t */\n\t    Object.defineProperty(Tone.ScaledEnvelope.prototype, 'min', {\n\t        get: function () {\n\t            return this._scale.min;\n\t        },\n\t        set: function (min) {\n\t            this._scale.min = min;\n\t        }\n\t    });\n\t    /**\n\t\t * The envelope's max output value. In other words, the value\n\t\t * at the peak of the attack portion of the envelope. \n\t\t * @memberOf Tone.ScaledEnvelope#\n\t\t * @type {number}\n\t\t * @name max\n\t\t */\n\t    Object.defineProperty(Tone.ScaledEnvelope.prototype, 'max', {\n\t        get: function () {\n\t            return this._scale.max;\n\t        },\n\t        set: function (max) {\n\t            this._scale.max = max;\n\t        }\n\t    });\n\t    /**\n\t\t * The envelope's exponent value. \n\t\t * @memberOf Tone.ScaledEnvelope#\n\t\t * @type {number}\n\t\t * @name exponent\n\t\t */\n\t    Object.defineProperty(Tone.ScaledEnvelope.prototype, 'exponent', {\n\t        get: function () {\n\t            return this._exp.value;\n\t        },\n\t        set: function (exp) {\n\t            this._exp.value = exp;\n\t        }\n\t    });\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.ScaledEnvelope} this\n\t\t */\n\t    Tone.ScaledEnvelope.prototype.dispose = function () {\n\t        Tone.Envelope.prototype.dispose.call(this);\n\t        this._scale.dispose();\n\t        this._scale = null;\n\t        this._exp.dispose();\n\t        this._exp = null;\n\t        return this;\n\t    };\n\t    return Tone.ScaledEnvelope;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.FrequencyEnvelope is a Tone.ScaledEnvelope, but instead of `min` and `max`\n\t\t *         it's got a `baseFrequency` and `octaves` parameter. \n\t\t *\n\t\t *  @extends {Tone.Envelope}\n\t\t *  @constructor\n\t\t *  @param {Time|Object} [attack]\tthe attack time in seconds\n\t\t *  @param {Time} [decay]\tthe decay time in seconds\n\t\t *  @param {number} [sustain] \ta percentage (0-1) of the full amplitude\n\t\t *  @param {Time} [release]\tthe release time in seconds\n\t\t *  @example\n\t\t *  var env = new Tone.FrequencyEnvelope({\n\t\t *  \t\"attack\" : 0.2,\n\t\t *  \t\"baseFrequency\" : \"C2\",\n\t\t *  \t\"octaves\" : 4\n\t\t *  });\n\t\t *  scaledEnv.connect(oscillator.frequency);\n\t\t */\n\t    Tone.FrequencyEnvelope = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'attack',\n\t            'decay',\n\t            'sustain',\n\t            'release'\n\t        ], Tone.Envelope.defaults);\n\t        Tone.ScaledEnvelope.call(this, options);\n\t        options = this.defaultArg(options, Tone.FrequencyEnvelope.defaults);\n\t        /**\n\t\t\t *  Stores the octave value\n\t\t\t *  @type {Positive}\n\t\t\t *  @private\n\t\t\t */\n\t        this._octaves = options.octaves;\n\t        //setup\n\t        this.baseFrequency = options.baseFrequency;\n\t        this.octaves = options.octaves;\n\t    };\n\t    Tone.extend(Tone.FrequencyEnvelope, Tone.Envelope);\n\t    /**\n\t\t *  the default parameters\n\t\t *  @static\n\t\t */\n\t    Tone.FrequencyEnvelope.defaults = {\n\t        'baseFrequency': 200,\n\t        'octaves': 4,\n\t        'exponent': 2\n\t    };\n\t    /**\n\t\t * The envelope's mininum output value. This is the value which it\n\t\t * starts at. \n\t\t * @memberOf Tone.FrequencyEnvelope#\n\t\t * @type {Frequency}\n\t\t * @name baseFrequency\n\t\t */\n\t    Object.defineProperty(Tone.FrequencyEnvelope.prototype, 'baseFrequency', {\n\t        get: function () {\n\t            return this._scale.min;\n\t        },\n\t        set: function (min) {\n\t            this._scale.min = this.toFrequency(min);\n\t            //also update the octaves\n\t            this.octaves = this._octaves;\n\t        }\n\t    });\n\t    /**\n\t\t * The number of octaves above the baseFrequency that the\n\t\t * envelope will scale to.\n\t\t * @memberOf Tone.FrequencyEnvelope#\n\t\t * @type {Positive}\n\t\t * @name octaves\n\t\t */\n\t    Object.defineProperty(Tone.FrequencyEnvelope.prototype, 'octaves', {\n\t        get: function () {\n\t            return this._octaves;\n\t        },\n\t        set: function (octaves) {\n\t            this._octaves = octaves;\n\t            this._scale.max = this.baseFrequency * Math.pow(2, octaves);\n\t        }\n\t    });\n\t    /**\n\t\t * The envelope's exponent value. \n\t\t * @memberOf Tone.FrequencyEnvelope#\n\t\t * @type {number}\n\t\t * @name exponent\n\t\t */\n\t    Object.defineProperty(Tone.FrequencyEnvelope.prototype, 'exponent', {\n\t        get: function () {\n\t            return this._exp.value;\n\t        },\n\t        set: function (exp) {\n\t            this._exp.value = exp;\n\t        }\n\t    });\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.FrequencyEnvelope} this\n\t\t */\n\t    Tone.FrequencyEnvelope.prototype.dispose = function () {\n\t        Tone.ScaledEnvelope.prototype.dispose.call(this);\n\t        return this;\n\t    };\n\t    return Tone.FrequencyEnvelope;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.Gate only passes a signal through when the incoming \n\t\t *          signal exceeds a specified threshold. To do this, Gate uses \n\t\t *          a Tone.Follower to follow the amplitude of the incoming signal. \n\t\t *          A common implementation of this class is a [Noise Gate](https://en.wikipedia.org/wiki/Noise_gate).\n\t\t *  \n\t\t *  @constructor\n\t\t *  @extends {Tone}\n\t\t *  @param {Decibels|Object} [threshold] The threshold above which the gate will open. \n\t\t *  @param {Time=} attack The follower's attack time\n\t\t *  @param {Time=} release The follower's release time\n\t\t *  @example\n\t\t * var gate = new Tone.Gate(-30, 0.2, 0.3).toMaster();\n\t\t * var mic = new Tone.UserMedia().connect(gate);\n\t\t * //the gate will only pass through the incoming \n\t\t * //signal when it's louder than -30db\n\t\t */\n\t    Tone.Gate = function () {\n\t        this.createInsOuts(1, 1);\n\t        var options = this.optionsObject(arguments, [\n\t            'threshold',\n\t            'attack',\n\t            'release'\n\t        ], Tone.Gate.defaults);\n\t        /**\n\t\t\t *  @type {Tone.Follower}\n\t\t\t *  @private\n\t\t\t */\n\t        this._follower = new Tone.Follower(options.attack, options.release);\n\t        /**\n\t\t\t *  @type {Tone.GreaterThan}\n\t\t\t *  @private\n\t\t\t */\n\t        this._gt = new Tone.GreaterThan(this.dbToGain(options.threshold));\n\t        //the connections\n\t        this.input.connect(this.output);\n\t        //the control signal\n\t        this.input.chain(this._gt, this._follower, this.output.gain);\n\t    };\n\t    Tone.extend(Tone.Gate);\n\t    /**\n\t\t *  @const\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.Gate.defaults = {\n\t        'attack': 0.1,\n\t        'release': 0.1,\n\t        'threshold': -40\n\t    };\n\t    /**\n\t\t * The threshold of the gate in decibels\n\t\t * @memberOf Tone.Gate#\n\t\t * @type {Decibels}\n\t\t * @name threshold\n\t\t */\n\t    Object.defineProperty(Tone.Gate.prototype, 'threshold', {\n\t        get: function () {\n\t            return this.gainToDb(this._gt.value);\n\t        },\n\t        set: function (thresh) {\n\t            this._gt.value = this.dbToGain(thresh);\n\t        }\n\t    });\n\t    /**\n\t\t * The attack speed of the gate\n\t\t * @memberOf Tone.Gate#\n\t\t * @type {Time}\n\t\t * @name attack\n\t\t */\n\t    Object.defineProperty(Tone.Gate.prototype, 'attack', {\n\t        get: function () {\n\t            return this._follower.attack;\n\t        },\n\t        set: function (attackTime) {\n\t            this._follower.attack = attackTime;\n\t        }\n\t    });\n\t    /**\n\t\t * The release speed of the gate\n\t\t * @memberOf Tone.Gate#\n\t\t * @type {Time}\n\t\t * @name release\n\t\t */\n\t    Object.defineProperty(Tone.Gate.prototype, 'release', {\n\t        get: function () {\n\t            return this._follower.release;\n\t        },\n\t        set: function (releaseTime) {\n\t            this._follower.release = releaseTime;\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up. \n\t\t *  @returns {Tone.Gate} this\n\t\t */\n\t    Tone.Gate.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._follower.dispose();\n\t        this._gt.dispose();\n\t        this._follower = null;\n\t        this._gt = null;\n\t        return this;\n\t    };\n\t    return Tone.Gate;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  A Timeline State. Provides the methods: <code>setStateAtTime(\"state\", time)</code>\n\t\t *          and <code>getValueAtTime(time)</code>.\n\t\t *\n\t\t *  @extends {Tone.Timeline}\n\t\t *  @param {String} initial The initial state of the TimelineState. \n\t\t *                          Defaults to <code>undefined</code>\n\t\t */\n\t    Tone.TimelineState = function (initial) {\n\t        Tone.Timeline.call(this);\n\t        /**\n\t\t\t *  The initial state\n\t\t\t *  @private\n\t\t\t *  @type {String}\n\t\t\t */\n\t        this._initial = initial;\n\t    };\n\t    Tone.extend(Tone.TimelineState, Tone.Timeline);\n\t    /**\n\t\t *  Returns the scheduled state scheduled before or at\n\t\t *  the given time.\n\t\t *  @param  {Number}  time  The time to query.\n\t\t *  @return  {String}  The name of the state input in setStateAtTime.\n\t\t */\n\t    Tone.TimelineState.prototype.getValueAtTime = function (time) {\n\t        var event = this.get(time);\n\t        if (event !== null) {\n\t            return event.state;\n\t        } else {\n\t            return this._initial;\n\t        }\n\t    };\n\t    /**\n\t\t *  Returns the scheduled state scheduled before or at\n\t\t *  the given time.\n\t\t *  @param  {String}  state The name of the state to set.\n\t\t *  @param  {Number}  time  The time to query.\n\t\t */\n\t    Tone.TimelineState.prototype.setStateAtTime = function (state, time) {\n\t        this.add({\n\t            'state': state,\n\t            'time': time\n\t        });\n\t    };\n\t    return Tone.TimelineState;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  A sample accurate clock which provides a callback at the given rate. \n\t\t *          While the callback is not sample-accurate (it is still susceptible to\n\t\t *          loose JS timing), the time passed in as the argument to the callback\n\t\t *          is precise. For most applications, it is better to use Tone.Transport\n\t\t *          instead of the Clock by itself since you can synchronize multiple callbacks.\n\t\t *\n\t\t * \t@constructor\n\t\t *  @extends {Tone.Emitter}\n\t\t * \t@param {function} callback The callback to be invoked with the time of the audio event\n\t\t * \t@param {Frequency} frequency The rate of the callback\n\t\t * \t@example\n\t\t * //the callback will be invoked approximately once a second\n\t\t * //and will print the time exactly once a second apart.\n\t\t * var clock = new Tone.Clock(function(time){\n\t\t * \tconsole.log(time);\n\t\t * }, 1);\n\t\t */\n\t    Tone.Clock = function () {\n\t        Tone.Emitter.call(this);\n\t        var options = this.optionsObject(arguments, [\n\t            'callback',\n\t            'frequency'\n\t        ], Tone.Clock.defaults);\n\t        /**\n\t\t\t *  The callback function to invoke at the scheduled tick.\n\t\t\t *  @type  {Function}\n\t\t\t */\n\t        this.callback = options.callback;\n\t        /**\n\t\t\t *  The next time the callback is scheduled.\n\t\t\t *  @type {Number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._nextTick = 0;\n\t        /**\n\t\t\t *  The last state of the clock.\n\t\t\t *  @type  {State}\n\t\t\t *  @private\n\t\t\t */\n\t        this._lastState = Tone.State.Stopped;\n\t        /**\n\t\t\t *  The rate the callback function should be invoked. \n\t\t\t *  @type  {BPM}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.frequency = new Tone.TimelineSignal(options.frequency, Tone.Type.Frequency);\n\t        this._readOnly('frequency');\n\t        /**\n\t\t\t *  The number of times the callback was invoked. Starts counting at 0\n\t\t\t *  and increments after the callback was invoked. \n\t\t\t *  @type {Ticks}\n\t\t\t *  @readOnly\n\t\t\t */\n\t        this.ticks = 0;\n\t        /**\n\t\t\t *  The state timeline\n\t\t\t *  @type {Tone.TimelineState}\n\t\t\t *  @private\n\t\t\t */\n\t        this._state = new Tone.TimelineState(Tone.State.Stopped);\n\t        /**\n\t\t\t *  The loop function bound to its context. \n\t\t\t *  This is necessary to remove the event in the end.\n\t\t\t *  @type {Function}\n\t\t\t *  @private\n\t\t\t */\n\t        this._boundLoop = this._loop.bind(this);\n\t        //bind a callback to the worker thread\n\t        this.context.on('tick', this._boundLoop);\n\t    };\n\t    Tone.extend(Tone.Clock, Tone.Emitter);\n\t    /**\n\t\t *  The defaults\n\t\t *  @const\n\t\t *  @type  {Object}\n\t\t */\n\t    Tone.Clock.defaults = {\n\t        'callback': Tone.noOp,\n\t        'frequency': 1,\n\t        'lookAhead': 'auto'\n\t    };\n\t    /**\n\t\t *  Returns the playback state of the source, either \"started\", \"stopped\" or \"paused\".\n\t\t *  @type {Tone.State}\n\t\t *  @readOnly\n\t\t *  @memberOf Tone.Clock#\n\t\t *  @name state\n\t\t */\n\t    Object.defineProperty(Tone.Clock.prototype, 'state', {\n\t        get: function () {\n\t            return this._state.getValueAtTime(this.now());\n\t        }\n\t    });\n\t    /**\n\t\t *  Start the clock at the given time. Optionally pass in an offset\n\t\t *  of where to start the tick counter from.\n\t\t *  @param  {Time}  time    The time the clock should start\n\t\t *  @param  {Ticks=}  offset  Where the tick counter starts counting from.\n\t\t *  @return  {Tone.Clock}  this\n\t\t */\n\t    Tone.Clock.prototype.start = function (time, offset) {\n\t        time = this.toSeconds(time);\n\t        if (this._state.getValueAtTime(time) !== Tone.State.Started) {\n\t            this._state.add({\n\t                'state': Tone.State.Started,\n\t                'time': time,\n\t                'offset': offset\n\t            });\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Stop the clock. Stopping the clock resets the tick counter to 0.\n\t\t *  @param {Time} [time=now] The time when the clock should stop.\n\t\t *  @returns {Tone.Clock} this\n\t\t *  @example\n\t\t * clock.stop();\n\t\t */\n\t    Tone.Clock.prototype.stop = function (time) {\n\t        time = this.toSeconds(time);\n\t        this._state.cancel(time);\n\t        this._state.setStateAtTime(Tone.State.Stopped, time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Pause the clock. Pausing does not reset the tick counter.\n\t\t *  @param {Time} [time=now] The time when the clock should stop.\n\t\t *  @returns {Tone.Clock} this\n\t\t */\n\t    Tone.Clock.prototype.pause = function (time) {\n\t        time = this.toSeconds(time);\n\t        if (this._state.getValueAtTime(time) === Tone.State.Started) {\n\t            this._state.setStateAtTime(Tone.State.Paused, time);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  The scheduling loop.\n\t\t *  @param  {Number}  time  The current page time starting from 0\n\t\t *                          when the page was loaded.\n\t\t *  @private\n\t\t */\n\t    Tone.Clock.prototype._loop = function () {\n\t        //get the frequency value to compute the value of the next loop\n\t        var now = this.now();\n\t        //if it's started\n\t        var lookAhead = this.context.lookAhead;\n\t        var updateInterval = this.context.updateInterval;\n\t        var lagCompensation = this.context.lag * 2;\n\t        var loopInterval = now + lookAhead + updateInterval + lagCompensation;\n\t        while (loopInterval > this._nextTick && this._state) {\n\t            var currentState = this._state.getValueAtTime(this._nextTick);\n\t            if (currentState !== this._lastState) {\n\t                this._lastState = currentState;\n\t                var event = this._state.get(this._nextTick);\n\t                // emit an event\n\t                if (currentState === Tone.State.Started) {\n\t                    //correct the time\n\t                    this._nextTick = event.time;\n\t                    if (!this.isUndef(event.offset)) {\n\t                        this.ticks = event.offset;\n\t                    }\n\t                    this.emit('start', event.time, this.ticks);\n\t                } else if (currentState === Tone.State.Stopped) {\n\t                    this.ticks = 0;\n\t                    this.emit('stop', event.time);\n\t                } else if (currentState === Tone.State.Paused) {\n\t                    this.emit('pause', event.time);\n\t                }\n\t            }\n\t            var tickTime = this._nextTick;\n\t            if (this.frequency) {\n\t                this._nextTick += 1 / this.frequency.getValueAtTime(this._nextTick);\n\t                if (currentState === Tone.State.Started) {\n\t                    this.callback(tickTime);\n\t                    this.ticks++;\n\t                }\n\t            }\n\t        }\n\t    };\n\t    /**\n\t\t *  Returns the scheduled state at the given time.\n\t\t *  @param  {Time}  time  The time to query.\n\t\t *  @return  {String}  The name of the state input in setStateAtTime.\n\t\t *  @example\n\t\t * clock.start(\"+0.1\");\n\t\t * clock.getStateAtTime(\"+0.1\"); //returns \"started\"\n\t\t */\n\t    Tone.Clock.prototype.getStateAtTime = function (time) {\n\t        time = this.toSeconds(time);\n\t        return this._state.getValueAtTime(time);\n\t    };\n\t    /**\n\t\t *  Clean up\n\t\t *  @returns {Tone.Clock} this\n\t\t */\n\t    Tone.Clock.prototype.dispose = function () {\n\t        Tone.Emitter.prototype.dispose.call(this);\n\t        this.context.off('tick', this._boundLoop);\n\t        this._writable('frequency');\n\t        this.frequency.dispose();\n\t        this.frequency = null;\n\t        this._boundLoop = null;\n\t        this._nextTick = Infinity;\n\t        this.callback = null;\n\t        this._state.dispose();\n\t        this._state = null;\n\t    };\n\t    return Tone.Clock;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Similar to Tone.Timeline, but all events represent\n\t\t *         intervals with both \"time\" and \"duration\" times. The \n\t\t *         events are placed in a tree structure optimized\n\t\t *         for querying an intersection point with the timeline\n\t\t *         events. Internally uses an [Interval Tree](https://en.wikipedia.org/wiki/Interval_tree)\n\t\t *         to represent the data.\n\t\t *  @extends {Tone}\n\t\t */\n\t    Tone.IntervalTimeline = function () {\n\t        /**\n\t\t\t *  The root node of the inteval tree\n\t\t\t *  @type  {IntervalNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._root = null;\n\t        /**\n\t\t\t *  Keep track of the length of the timeline.\n\t\t\t *  @type  {Number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._length = 0;\n\t    };\n\t    Tone.extend(Tone.IntervalTimeline);\n\t    /**\n\t\t *  The event to add to the timeline. All events must \n\t\t *  have a time and duration value\n\t\t *  @param  {Object}  event  The event to add to the timeline\n\t\t *  @return  {Tone.IntervalTimeline}  this\n\t\t */\n\t    Tone.IntervalTimeline.prototype.add = function (event) {\n\t        if (this.isUndef(event.time) || this.isUndef(event.duration)) {\n\t            throw new Error('Tone.IntervalTimeline: events must have time and duration parameters');\n\t        }\n\t        var node = new IntervalNode(event.time, event.time + event.duration, event);\n\t        if (this._root === null) {\n\t            this._root = node;\n\t        } else {\n\t            this._root.insert(node);\n\t        }\n\t        this._length++;\n\t        // Restructure tree to be balanced\n\t        while (node !== null) {\n\t            node.updateHeight();\n\t            node.updateMax();\n\t            this._rebalance(node);\n\t            node = node.parent;\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Remove an event from the timeline.\n\t\t *  @param  {Object}  event  The event to remove from the timeline\n\t\t *  @return  {Tone.IntervalTimeline}  this\n\t\t */\n\t    Tone.IntervalTimeline.prototype.remove = function (event) {\n\t        if (this._root !== null) {\n\t            var results = [];\n\t            this._root.search(event.time, results);\n\t            for (var i = 0; i < results.length; i++) {\n\t                var node = results[i];\n\t                if (node.event === event) {\n\t                    this._removeNode(node);\n\t                    this._length--;\n\t                    break;\n\t                }\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  The number of items in the timeline.\n\t\t *  @type {Number}\n\t\t *  @memberOf Tone.IntervalTimeline#\n\t\t *  @name length\n\t\t *  @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.IntervalTimeline.prototype, 'length', {\n\t        get: function () {\n\t            return this._length;\n\t        }\n\t    });\n\t    /**\n\t\t *  Remove events whose time time is after the given time\n\t\t *  @param  {Number}  time  The time to query.\n\t\t *  @returns {Tone.IntervalTimeline} this\n\t\t */\n\t    Tone.IntervalTimeline.prototype.cancel = function (after) {\n\t        this.forEachAfter(after, function (event) {\n\t            this.remove(event);\n\t        }.bind(this));\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Set the root node as the given node\n\t\t *  @param {IntervalNode} node\n\t\t *  @private\n\t\t */\n\t    Tone.IntervalTimeline.prototype._setRoot = function (node) {\n\t        this._root = node;\n\t        if (this._root !== null) {\n\t            this._root.parent = null;\n\t        }\n\t    };\n\t    /**\n\t\t *  Replace the references to the node in the node's parent\n\t\t *  with the replacement node.\n\t\t *  @param  {IntervalNode}  node        \n\t\t *  @param  {IntervalNode}  replacement \n\t\t *  @private\n\t\t */\n\t    Tone.IntervalTimeline.prototype._replaceNodeInParent = function (node, replacement) {\n\t        if (node.parent !== null) {\n\t            if (node.isLeftChild()) {\n\t                node.parent.left = replacement;\n\t            } else {\n\t                node.parent.right = replacement;\n\t            }\n\t            this._rebalance(node.parent);\n\t        } else {\n\t            this._setRoot(replacement);\n\t        }\n\t    };\n\t    /**\n\t\t *  Remove the node from the tree and replace it with \n\t\t *  a successor which follows the schema.\n\t\t *  @param  {IntervalNode}  node\n\t\t *  @private\n\t\t */\n\t    Tone.IntervalTimeline.prototype._removeNode = function (node) {\n\t        if (node.left === null && node.right === null) {\n\t            this._replaceNodeInParent(node, null);\n\t        } else if (node.right === null) {\n\t            this._replaceNodeInParent(node, node.left);\n\t        } else if (node.left === null) {\n\t            this._replaceNodeInParent(node, node.right);\n\t        } else {\n\t            var balance = node.getBalance();\n\t            var replacement, temp;\n\t            if (balance > 0) {\n\t                if (node.left.right === null) {\n\t                    replacement = node.left;\n\t                    replacement.right = node.right;\n\t                    temp = replacement;\n\t                } else {\n\t                    replacement = node.left.right;\n\t                    while (replacement.right !== null) {\n\t                        replacement = replacement.right;\n\t                    }\n\t                    replacement.parent.right = replacement.left;\n\t                    temp = replacement.parent;\n\t                    replacement.left = node.left;\n\t                    replacement.right = node.right;\n\t                }\n\t            } else {\n\t                if (node.right.left === null) {\n\t                    replacement = node.right;\n\t                    replacement.left = node.left;\n\t                    temp = replacement;\n\t                } else {\n\t                    replacement = node.right.left;\n\t                    while (replacement.left !== null) {\n\t                        replacement = replacement.left;\n\t                    }\n\t                    replacement.parent = replacement.parent;\n\t                    replacement.parent.left = replacement.right;\n\t                    temp = replacement.parent;\n\t                    replacement.left = node.left;\n\t                    replacement.right = node.right;\n\t                }\n\t            }\n\t            if (node.parent !== null) {\n\t                if (node.isLeftChild()) {\n\t                    node.parent.left = replacement;\n\t                } else {\n\t                    node.parent.right = replacement;\n\t                }\n\t            } else {\n\t                this._setRoot(replacement);\n\t            }\n\t            // this._replaceNodeInParent(node, replacement);\n\t            this._rebalance(temp);\n\t        }\n\t        node.dispose();\n\t    };\n\t    /**\n\t\t *  Rotate the tree to the left\n\t\t *  @param  {IntervalNode}  node\n\t\t *  @private\n\t\t */\n\t    Tone.IntervalTimeline.prototype._rotateLeft = function (node) {\n\t        var parent = node.parent;\n\t        var isLeftChild = node.isLeftChild();\n\t        // Make node.right the new root of this sub tree (instead of node)\n\t        var pivotNode = node.right;\n\t        node.right = pivotNode.left;\n\t        pivotNode.left = node;\n\t        if (parent !== null) {\n\t            if (isLeftChild) {\n\t                parent.left = pivotNode;\n\t            } else {\n\t                parent.right = pivotNode;\n\t            }\n\t        } else {\n\t            this._setRoot(pivotNode);\n\t        }\n\t    };\n\t    /**\n\t\t *  Rotate the tree to the right\n\t\t *  @param  {IntervalNode}  node\n\t\t *  @private\n\t\t */\n\t    Tone.IntervalTimeline.prototype._rotateRight = function (node) {\n\t        var parent = node.parent;\n\t        var isLeftChild = node.isLeftChild();\n\t        // Make node.left the new root of this sub tree (instead of node)\n\t        var pivotNode = node.left;\n\t        node.left = pivotNode.right;\n\t        pivotNode.right = node;\n\t        if (parent !== null) {\n\t            if (isLeftChild) {\n\t                parent.left = pivotNode;\n\t            } else {\n\t                parent.right = pivotNode;\n\t            }\n\t        } else {\n\t            this._setRoot(pivotNode);\n\t        }\n\t    };\n\t    /**\n\t\t *  Balance the BST\n\t\t *  @param  {IntervalNode}  node\n\t\t *  @private\n\t\t */\n\t    Tone.IntervalTimeline.prototype._rebalance = function (node) {\n\t        var balance = node.getBalance();\n\t        if (balance > 1) {\n\t            if (node.left.getBalance() < 0) {\n\t                this._rotateLeft(node.left);\n\t            } else {\n\t                this._rotateRight(node);\n\t            }\n\t        } else if (balance < -1) {\n\t            if (node.right.getBalance() > 0) {\n\t                this._rotateRight(node.right);\n\t            } else {\n\t                this._rotateLeft(node);\n\t            }\n\t        }\n\t    };\n\t    /**\n\t\t *  Get an event whose time and duration span the give time. Will\n\t\t *  return the match whose \"time\" value is closest to the given time.\n\t\t *  @param  {Object}  event  The event to add to the timeline\n\t\t *  @return  {Object}  The event which spans the desired time\n\t\t */\n\t    Tone.IntervalTimeline.prototype.get = function (time) {\n\t        if (this._root !== null) {\n\t            var results = [];\n\t            this._root.search(time, results);\n\t            if (results.length > 0) {\n\t                var max = results[0];\n\t                for (var i = 1; i < results.length; i++) {\n\t                    if (results[i].low > max.low) {\n\t                        max = results[i];\n\t                    }\n\t                }\n\t                return max.event;\n\t            }\n\t        }\n\t        return null;\n\t    };\n\t    /**\n\t\t *  Iterate over everything in the timeline.\n\t\t *  @param  {Function}  callback The callback to invoke with every item\n\t\t *  @returns {Tone.IntervalTimeline} this\n\t\t */\n\t    Tone.IntervalTimeline.prototype.forEach = function (callback) {\n\t        if (this._root !== null) {\n\t            var allNodes = [];\n\t            if (this._root !== null) {\n\t                this._root.traverse(function (node) {\n\t                    allNodes.push(node);\n\t                });\n\t            }\n\t            for (var i = 0; i < allNodes.length; i++) {\n\t                var ev = allNodes[i].event;\n\t                if (ev) {\n\t                    callback(ev);\n\t                }\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Iterate over everything in the array in which the given time\n\t\t *  overlaps with the time and duration time of the event.\n\t\t *  @param  {Number}  time The time to check if items are overlapping\n\t\t *  @param  {Function}  callback The callback to invoke with every item\n\t\t *  @returns {Tone.IntervalTimeline} this\n\t\t */\n\t    Tone.IntervalTimeline.prototype.forEachAtTime = function (time, callback) {\n\t        if (this._root !== null) {\n\t            var results = [];\n\t            this._root.search(time, results);\n\t            for (var i = results.length - 1; i >= 0; i--) {\n\t                var ev = results[i].event;\n\t                if (ev) {\n\t                    callback(ev);\n\t                }\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Iterate over everything in the array in which the time is greater\n\t\t *  than the given time.\n\t\t *  @param  {Number}  time The time to check if items are before\n\t\t *  @param  {Function}  callback The callback to invoke with every item\n\t\t *  @returns {Tone.IntervalTimeline} this\n\t\t */\n\t    Tone.IntervalTimeline.prototype.forEachAfter = function (time, callback) {\n\t        if (this._root !== null) {\n\t            var results = [];\n\t            this._root.searchAfter(time, results);\n\t            for (var i = results.length - 1; i >= 0; i--) {\n\t                var ev = results[i].event;\n\t                if (ev) {\n\t                    callback(ev);\n\t                }\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Clean up\n\t\t *  @return  {Tone.IntervalTimeline}  this\n\t\t */\n\t    Tone.IntervalTimeline.prototype.dispose = function () {\n\t        var allNodes = [];\n\t        if (this._root !== null) {\n\t            this._root.traverse(function (node) {\n\t                allNodes.push(node);\n\t            });\n\t        }\n\t        for (var i = 0; i < allNodes.length; i++) {\n\t            allNodes[i].dispose();\n\t        }\n\t        allNodes = null;\n\t        this._root = null;\n\t        return this;\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tINTERVAL NODE HELPER\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  Represents a node in the binary search tree, with the addition\n\t\t *  of a \"high\" value which keeps track of the highest value of\n\t\t *  its children. \n\t\t *  References: \n\t\t *  https://brooknovak.wordpress.com/2013/12/07/augmented-interval-tree-in-c/\n\t\t *  http://www.mif.vu.lt/~valdas/ALGORITMAI/LITERATURA/Cormen/Cormen.pdf\n\t\t *  @param {Number} low\n\t\t *  @param {Number} high\n\t\t *  @private\n\t\t */\n\t    var IntervalNode = function (low, high, event) {\n\t        //the event container\n\t        this.event = event;\n\t        //the low value\n\t        this.low = low;\n\t        //the high value\n\t        this.high = high;\n\t        //the high value for this and all child nodes\n\t        this.max = this.high;\n\t        //the nodes to the left\n\t        this._left = null;\n\t        //the nodes to the right\n\t        this._right = null;\n\t        //the parent node\n\t        this.parent = null;\n\t        //the number of child nodes\n\t        this.height = 0;\n\t    };\n\t    /** \n\t\t *  Insert a node into the correct spot in the tree\n\t\t *  @param  {IntervalNode}  node\n\t\t */\n\t    IntervalNode.prototype.insert = function (node) {\n\t        if (node.low <= this.low) {\n\t            if (this.left === null) {\n\t                this.left = node;\n\t            } else {\n\t                this.left.insert(node);\n\t            }\n\t        } else {\n\t            if (this.right === null) {\n\t                this.right = node;\n\t            } else {\n\t                this.right.insert(node);\n\t            }\n\t        }\n\t    };\n\t    /**\n\t\t *  Search the tree for nodes which overlap \n\t\t *  with the given point\n\t\t *  @param  {Number}  point  The point to query\n\t\t *  @param  {Array}  results  The array to put the results\n\t\t */\n\t    IntervalNode.prototype.search = function (point, results) {\n\t        // If p is to the right of the rightmost point of any interval\n\t        // in this node and all children, there won't be any matches.\n\t        if (point > this.max) {\n\t            return;\n\t        }\n\t        // Search left children\n\t        if (this.left !== null) {\n\t            this.left.search(point, results);\n\t        }\n\t        // Check this node\n\t        if (this.low <= point && this.high > point) {\n\t            results.push(this);\n\t        }\n\t        // If p is to the left of the time of this interval,\n\t        // then it can't be in any child to the right.\n\t        if (this.low > point) {\n\t            return;\n\t        }\n\t        // Search right children\n\t        if (this.right !== null) {\n\t            this.right.search(point, results);\n\t        }\n\t    };\n\t    /**\n\t\t *  Search the tree for nodes which are less \n\t\t *  than the given point\n\t\t *  @param  {Number}  point  The point to query\n\t\t *  @param  {Array}  results  The array to put the results\n\t\t */\n\t    IntervalNode.prototype.searchAfter = function (point, results) {\n\t        // Check this node\n\t        if (this.low >= point) {\n\t            results.push(this);\n\t            if (this.left !== null) {\n\t                this.left.searchAfter(point, results);\n\t            }\n\t        }\n\t        // search the right side\n\t        if (this.right !== null) {\n\t            this.right.searchAfter(point, results);\n\t        }\n\t    };\n\t    /**\n\t\t *  Invoke the callback on this element and both it's branches\n\t\t *  @param  {Function}  callback\n\t\t */\n\t    IntervalNode.prototype.traverse = function (callback) {\n\t        callback(this);\n\t        if (this.left !== null) {\n\t            this.left.traverse(callback);\n\t        }\n\t        if (this.right !== null) {\n\t            this.right.traverse(callback);\n\t        }\n\t    };\n\t    /**\n\t\t *  Update the height of the node\n\t\t */\n\t    IntervalNode.prototype.updateHeight = function () {\n\t        if (this.left !== null && this.right !== null) {\n\t            this.height = Math.max(this.left.height, this.right.height) + 1;\n\t        } else if (this.right !== null) {\n\t            this.height = this.right.height + 1;\n\t        } else if (this.left !== null) {\n\t            this.height = this.left.height + 1;\n\t        } else {\n\t            this.height = 0;\n\t        }\n\t    };\n\t    /**\n\t\t *  Update the height of the node\n\t\t */\n\t    IntervalNode.prototype.updateMax = function () {\n\t        this.max = this.high;\n\t        if (this.left !== null) {\n\t            this.max = Math.max(this.max, this.left.max);\n\t        }\n\t        if (this.right !== null) {\n\t            this.max = Math.max(this.max, this.right.max);\n\t        }\n\t    };\n\t    /**\n\t\t *  The balance is how the leafs are distributed on the node\n\t\t *  @return  {Number}  Negative numbers are balanced to the right\n\t\t */\n\t    IntervalNode.prototype.getBalance = function () {\n\t        var balance = 0;\n\t        if (this.left !== null && this.right !== null) {\n\t            balance = this.left.height - this.right.height;\n\t        } else if (this.left !== null) {\n\t            balance = this.left.height + 1;\n\t        } else if (this.right !== null) {\n\t            balance = -(this.right.height + 1);\n\t        }\n\t        return balance;\n\t    };\n\t    /**\n\t\t *  @returns {Boolean} true if this node is the left child\n\t\t *  of its parent\n\t\t */\n\t    IntervalNode.prototype.isLeftChild = function () {\n\t        return this.parent !== null && this.parent.left === this;\n\t    };\n\t    /**\n\t\t *  get/set the left node\n\t\t *  @type {IntervalNode}\n\t\t */\n\t    Object.defineProperty(IntervalNode.prototype, 'left', {\n\t        get: function () {\n\t            return this._left;\n\t        },\n\t        set: function (node) {\n\t            this._left = node;\n\t            if (node !== null) {\n\t                node.parent = this;\n\t            }\n\t            this.updateHeight();\n\t            this.updateMax();\n\t        }\n\t    });\n\t    /**\n\t\t *  get/set the right node\n\t\t *  @type {IntervalNode}\n\t\t */\n\t    Object.defineProperty(IntervalNode.prototype, 'right', {\n\t        get: function () {\n\t            return this._right;\n\t        },\n\t        set: function (node) {\n\t            this._right = node;\n\t            if (node !== null) {\n\t                node.parent = this;\n\t            }\n\t            this.updateHeight();\n\t            this.updateMax();\n\t        }\n\t    });\n\t    /**\n\t\t *  null out references.\n\t\t */\n\t    IntervalNode.prototype.dispose = function () {\n\t        this.parent = null;\n\t        this._left = null;\n\t        this._right = null;\n\t        this.event = null;\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tEND INTERVAL NODE HELPER\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    return Tone.IntervalTimeline;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Transport for timing musical events.\n\t\t *          Supports tempo curves and time changes. Unlike browser-based timing (setInterval, requestAnimationFrame)\n\t\t *          Tone.Transport timing events pass in the exact time of the scheduled event\n\t\t *          in the argument of the callback function. Pass that time value to the object\n\t\t *          you're scheduling. <br><br>\n\t\t *          A single transport is created for you when the library is initialized. \n\t\t *          <br><br>\n\t\t *          The transport emits the events: \"start\", \"stop\", \"pause\", and \"loop\" which are\n\t\t *          called with the time of that event as the argument. \n\t\t *\n\t\t *  @extends {Tone.Emitter}\n\t\t *  @singleton\n\t\t *  @example\n\t\t * //repeated event every 8th note\n\t\t * Tone.Transport.scheduleRepeat(function(time){\n\t\t * \t//do something with the time\n\t\t * }, \"8n\");\n\t\t *  @example\n\t\t * //schedule an event on the 16th measure\n\t\t * Tone.Transport.schedule(function(time){\n\t\t * \t//do something with the time\n\t\t * }, \"16:0:0\");\n\t\t */\n\t    Tone.Transport = function () {\n\t        Tone.Emitter.call(this);\n\t        ///////////////////////////////////////////////////////////////////////\n\t        //\tLOOPING\n\t        //////////////////////////////////////////////////////////////////////\n\t        /** \n\t\t\t * \tIf the transport loops or not.\n\t\t\t *  @type {boolean}\n\t\t\t */\n\t        this.loop = false;\n\t        /** \n\t\t\t * \tThe loop start position in ticks\n\t\t\t *  @type {Ticks}\n\t\t\t *  @private\n\t\t\t */\n\t        this._loopStart = 0;\n\t        /** \n\t\t\t * \tThe loop end position in ticks\n\t\t\t *  @type {Ticks}\n\t\t\t *  @private\n\t\t\t */\n\t        this._loopEnd = 0;\n\t        ///////////////////////////////////////////////////////////////////////\n\t        //\tCLOCK/TEMPO\n\t        //////////////////////////////////////////////////////////////////////\n\t        /**\n\t\t\t *  Pulses per quarter is the number of ticks per quarter note.\n\t\t\t *  @private\n\t\t\t *  @type  {Number}\n\t\t\t */\n\t        this._ppq = TransportConstructor.defaults.PPQ;\n\t        /**\n\t\t\t *  watches the main oscillator for timing ticks\n\t\t\t *  initially starts at 120bpm\n\t\t\t *  @private\n\t\t\t *  @type {Tone.Clock}\n\t\t\t */\n\t        this._clock = new Tone.Clock({\n\t            'callback': this._processTick.bind(this),\n\t            'frequency': 0\n\t        });\n\t        this._bindClockEvents();\n\t        /**\n\t\t\t *  The Beats Per Minute of the Transport. \n\t\t\t *  @type {BPM}\n\t\t\t *  @signal\n\t\t\t *  @example\n\t\t\t * Tone.Transport.bpm.value = 80;\n\t\t\t * //ramp the bpm to 120 over 10 seconds\n\t\t\t * Tone.Transport.bpm.rampTo(120, 10);\n\t\t\t */\n\t        this.bpm = this._clock.frequency;\n\t        this.bpm._toUnits = this._toUnits.bind(this);\n\t        this.bpm._fromUnits = this._fromUnits.bind(this);\n\t        this.bpm.units = Tone.Type.BPM;\n\t        this.bpm.value = TransportConstructor.defaults.bpm;\n\t        this._readOnly('bpm');\n\t        /**\n\t\t\t *  The time signature, or more accurately the numerator\n\t\t\t *  of the time signature over a denominator of 4. \n\t\t\t *  @type {Number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._timeSignature = TransportConstructor.defaults.timeSignature;\n\t        ///////////////////////////////////////////////////////////////////////\n\t        //\tTIMELINE EVENTS\n\t        //////////////////////////////////////////////////////////////////////\n\t        /**\n\t\t\t *  All the events in an object to keep track by ID\n\t\t\t *  @type {Object}\n\t\t\t *  @private\n\t\t\t */\n\t        this._scheduledEvents = {};\n\t        /**\n\t\t\t *  The event ID counter\n\t\t\t *  @type {Number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._eventID = 0;\n\t        /**\n\t\t\t * \tThe scheduled events.\n\t\t\t *  @type {Tone.Timeline}\n\t\t\t *  @private\n\t\t\t */\n\t        this._timeline = new Tone.Timeline();\n\t        /**\n\t\t\t *  Repeated events\n\t\t\t *  @type {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._repeatedEvents = new Tone.IntervalTimeline();\n\t        /**\n\t\t\t *  Events that occur once\n\t\t\t *  @type {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._onceEvents = new Tone.Timeline();\n\t        /** \n\t\t\t *  All of the synced Signals\n\t\t\t *  @private \n\t\t\t *  @type {Array}\n\t\t\t */\n\t        this._syncedSignals = [];\n\t        ///////////////////////////////////////////////////////////////////////\n\t        //\tSWING\n\t        //////////////////////////////////////////////////////////////////////\n\t        /**\n\t\t\t *  The subdivision of the swing\n\t\t\t *  @type  {Ticks}\n\t\t\t *  @private\n\t\t\t */\n\t        this._swingTicks = TransportConstructor.defaults.PPQ / 2;\n\t        //8n\n\t        /**\n\t\t\t *  The swing amount\n\t\t\t *  @type {NormalRange}\n\t\t\t *  @private\n\t\t\t */\n\t        this._swingAmount = 0;\n\t    };\n\t    Tone.extend(Tone.Transport, Tone.Emitter);\n\t    /**\n\t\t *  the defaults\n\t\t *  @type {Object}\n\t\t *  @const\n\t\t *  @static\n\t\t */\n\t    Tone.Transport.defaults = {\n\t        'bpm': 120,\n\t        'swing': 0,\n\t        'swingSubdivision': '8n',\n\t        'timeSignature': 4,\n\t        'loopStart': 0,\n\t        'loopEnd': '4m',\n\t        'PPQ': 192\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////////\n\t    //\tTICKS\n\t    ///////////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  called on every tick\n\t\t *  @param   {number} tickTime clock relative tick time\n\t\t *  @private\n\t\t */\n\t    Tone.Transport.prototype._processTick = function (tickTime) {\n\t        var ticks = this._clock.ticks;\n\t        //handle swing\n\t        if (this._swingAmount > 0 && ticks % this._ppq !== 0 && //not on a downbeat\n\t            ticks % (this._swingTicks * 2) !== 0) {\n\t            //add some swing\n\t            var progress = ticks % (this._swingTicks * 2) / (this._swingTicks * 2);\n\t            var amount = Math.sin(progress * Math.PI) * this._swingAmount;\n\t            tickTime += Tone.Time(this._swingTicks * 2 / 3, 'i') * amount;\n\t        }\n\t        //do the loop test\n\t        if (this.loop) {\n\t            if (ticks === this._loopEnd) {\n\t                this.emit('loopEnd', tickTime);\n\t                this._clock.ticks = this._loopStart;\n\t                ticks = this._loopStart;\n\t                this.emit('loopStart', tickTime, this.seconds);\n\t                this.emit('loop', tickTime);\n\t            }\n\t        }\n\t        //process the single occurrence events\n\t        this._onceEvents.forEachBefore(ticks, function (event) {\n\t            event.callback(tickTime);\n\t            //remove the event\n\t            delete this._scheduledEvents[event.id.toString()];\n\t        }.bind(this));\n\t        //and clear the single occurrence timeline\n\t        this._onceEvents.cancelBefore(ticks);\n\t        //fire the next tick events if their time has come\n\t        this._timeline.forEachAtTime(ticks, function (event) {\n\t            event.callback(tickTime);\n\t        });\n\t        //process the repeated events\n\t        this._repeatedEvents.forEachAtTime(ticks, function (event) {\n\t            if ((ticks - event.time) % event.interval === 0) {\n\t                event.callback(tickTime);\n\t            }\n\t        });\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////////\n\t    //\tSCHEDULABLE EVENTS\n\t    ///////////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  Schedule an event along the timeline.\n\t\t *  @param {Function} callback The callback to be invoked at the time.\n\t\t *  @param {TransportTime}  time The time to invoke the callback at.\n\t\t *  @return {Number} The id of the event which can be used for canceling the event. \n\t\t *  @example\n\t\t * //trigger the callback when the Transport reaches the desired time\n\t\t * Tone.Transport.schedule(function(time){\n\t\t * \tenvelope.triggerAttack(time);\n\t\t * }, \"128i\");\n\t\t */\n\t    Tone.Transport.prototype.schedule = function (callback, time) {\n\t        var event = {\n\t            'time': this.toTicks(time),\n\t            'callback': callback\n\t        };\n\t        var id = this._eventID++;\n\t        this._scheduledEvents[id.toString()] = {\n\t            'event': event,\n\t            'timeline': this._timeline\n\t        };\n\t        this._timeline.add(event);\n\t        return id;\n\t    };\n\t    /**\n\t\t *  Schedule a repeated event along the timeline. The event will fire\n\t\t *  at the `interval` starting at the `startTime` and for the specified\n\t\t *  `duration`. \n\t\t *  @param  {Function}  callback   The callback to invoke.\n\t\t *  @param  {Time}    interval   The duration between successive\n\t\t *                               callbacks.\n\t\t *  @param  {TimelinePosition=}    startTime  When along the timeline the events should\n\t\t *                               start being invoked.\n\t\t *  @param {Time} [duration=Infinity] How long the event should repeat. \n\t\t *  @return  {Number}    The ID of the scheduled event. Use this to cancel\n\t\t *                           the event. \n\t\t *  @example\n\t\t * //a callback invoked every eighth note after the first measure\n\t\t * Tone.Transport.scheduleRepeat(callback, \"8n\", \"1m\");\n\t\t */\n\t    Tone.Transport.prototype.scheduleRepeat = function (callback, interval, startTime, duration) {\n\t        if (interval <= 0) {\n\t            throw new Error('Tone.Transport: repeat events must have an interval larger than 0');\n\t        }\n\t        var event = {\n\t            'time': this.toTicks(startTime),\n\t            'duration': this.toTicks(this.defaultArg(duration, Infinity)),\n\t            'interval': this.toTicks(interval),\n\t            'callback': callback\n\t        };\n\t        var id = this._eventID++;\n\t        this._scheduledEvents[id.toString()] = {\n\t            'event': event,\n\t            'timeline': this._repeatedEvents\n\t        };\n\t        this._repeatedEvents.add(event);\n\t        return id;\n\t    };\n\t    /**\n\t\t *  Schedule an event that will be removed after it is invoked. \n\t\t *  Note that if the given time is less than the current transport time, \n\t\t *  the event will be invoked immediately. \n\t\t *  @param {Function} callback The callback to invoke once.\n\t\t *  @param {TransportTime} time The time the callback should be invoked.\n\t\t *  @returns {Number} The ID of the scheduled event. \n\t\t */\n\t    Tone.Transport.prototype.scheduleOnce = function (callback, time) {\n\t        var id = this._eventID++;\n\t        var event = {\n\t            'time': this.toTicks(time),\n\t            'callback': callback,\n\t            'id': id\n\t        };\n\t        this._scheduledEvents[id.toString()] = {\n\t            'event': event,\n\t            'timeline': this._onceEvents\n\t        };\n\t        this._onceEvents.add(event);\n\t        return id;\n\t    };\n\t    /**\n\t\t *  Clear the passed in event id from the timeline\n\t\t *  @param {Number} eventId The id of the event.\n\t\t *  @returns {Tone.Transport} this\n\t\t */\n\t    Tone.Transport.prototype.clear = function (eventId) {\n\t        if (this._scheduledEvents.hasOwnProperty(eventId)) {\n\t            var item = this._scheduledEvents[eventId.toString()];\n\t            item.timeline.remove(item.event);\n\t            delete this._scheduledEvents[eventId.toString()];\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Remove scheduled events from the timeline after\n\t\t *  the given time. Repeated events will be removed\n\t\t *  if their startTime is after the given time\n\t\t *  @param {TransportTime} [after=0] Clear all events after\n\t\t *                          this time. \n\t\t *  @returns {Tone.Transport} this\n\t\t */\n\t    Tone.Transport.prototype.cancel = function (after) {\n\t        after = this.defaultArg(after, 0);\n\t        after = this.toTicks(after);\n\t        this._timeline.cancel(after);\n\t        this._onceEvents.cancel(after);\n\t        this._repeatedEvents.cancel(after);\n\t        return this;\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////////\n\t    //\tSTART/STOP/PAUSE\n\t    ///////////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  Bind start/stop/pause events from the clock and emit them.\n\t\t */\n\t    Tone.Transport.prototype._bindClockEvents = function () {\n\t        this._clock.on('start', function (time, offset) {\n\t            offset = Tone.Time(this._clock.ticks, 'i').toSeconds();\n\t            this.emit('start', time, offset);\n\t        }.bind(this));\n\t        this._clock.on('stop', function (time) {\n\t            this.emit('stop', time);\n\t        }.bind(this));\n\t        this._clock.on('pause', function (time) {\n\t            this.emit('pause', time);\n\t        }.bind(this));\n\t    };\n\t    /**\n\t\t *  Returns the playback state of the source, either \"started\", \"stopped\", or \"paused\"\n\t\t *  @type {Tone.State}\n\t\t *  @readOnly\n\t\t *  @memberOf Tone.Transport#\n\t\t *  @name state\n\t\t */\n\t    Object.defineProperty(Tone.Transport.prototype, 'state', {\n\t        get: function () {\n\t            return this._clock.getStateAtTime(this.now());\n\t        }\n\t    });\n\t    /**\n\t\t *  Start the transport and all sources synced to the transport.\n\t\t *  @param  {Time} [time=now] The time when the transport should start.\n\t\t *  @param  {TransportTime=} offset The timeline offset to start the transport.\n\t\t *  @returns {Tone.Transport} this\n\t\t *  @example\n\t\t * //start the transport in one second starting at beginning of the 5th measure. \n\t\t * Tone.Transport.start(\"+1\", \"4:0:0\");\n\t\t */\n\t    Tone.Transport.prototype.start = function (time, offset) {\n\t        //start the clock\n\t        if (!this.isUndef(offset)) {\n\t            offset = this.toTicks(offset);\n\t        }\n\t        this._clock.start(time, offset);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Stop the transport and all sources synced to the transport.\n\t\t *  @param  {Time} [time=now] The time when the transport should stop. \n\t\t *  @returns {Tone.Transport} this\n\t\t *  @example\n\t\t * Tone.Transport.stop();\n\t\t */\n\t    Tone.Transport.prototype.stop = function (time) {\n\t        this._clock.stop(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Pause the transport and all sources synced to the transport.\n\t\t *  @param  {Time} [time=now]\n\t\t *  @returns {Tone.Transport} this\n\t\t */\n\t    Tone.Transport.prototype.pause = function (time) {\n\t        this._clock.pause(time);\n\t        return this;\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////////\n\t    //\tSETTERS/GETTERS\n\t    ///////////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  The time signature as just the numerator over 4. \n\t\t *  For example 4/4 would be just 4 and 6/8 would be 3.\n\t\t *  @memberOf Tone.Transport#\n\t\t *  @type {Number|Array}\n\t\t *  @name timeSignature\n\t\t *  @example\n\t\t * //common time\n\t\t * Tone.Transport.timeSignature = 4;\n\t\t * // 7/8\n\t\t * Tone.Transport.timeSignature = [7, 8];\n\t\t * //this will be reduced to a single number\n\t\t * Tone.Transport.timeSignature; //returns 3.5\n\t\t */\n\t    Object.defineProperty(Tone.Transport.prototype, 'timeSignature', {\n\t        get: function () {\n\t            return this._timeSignature;\n\t        },\n\t        set: function (timeSig) {\n\t            if (this.isArray(timeSig)) {\n\t                timeSig = timeSig[0] / timeSig[1] * 4;\n\t            }\n\t            this._timeSignature = timeSig;\n\t        }\n\t    });\n\t    /**\n\t\t * When the Tone.Transport.loop = true, this is the starting position of the loop.\n\t\t * @memberOf Tone.Transport#\n\t\t * @type {TransportTime}\n\t\t * @name loopStart\n\t\t */\n\t    Object.defineProperty(Tone.Transport.prototype, 'loopStart', {\n\t        get: function () {\n\t            return Tone.TransportTime(this._loopStart, 'i').toSeconds();\n\t        },\n\t        set: function (startPosition) {\n\t            this._loopStart = this.toTicks(startPosition);\n\t        }\n\t    });\n\t    /**\n\t\t * When the Tone.Transport.loop = true, this is the ending position of the loop.\n\t\t * @memberOf Tone.Transport#\n\t\t * @type {TransportTime}\n\t\t * @name loopEnd\n\t\t */\n\t    Object.defineProperty(Tone.Transport.prototype, 'loopEnd', {\n\t        get: function () {\n\t            return Tone.TransportTime(this._loopEnd, 'i').toSeconds();\n\t        },\n\t        set: function (endPosition) {\n\t            this._loopEnd = this.toTicks(endPosition);\n\t        }\n\t    });\n\t    /**\n\t\t *  Set the loop start and stop at the same time. \n\t\t *  @param {TransportTime} startPosition \n\t\t *  @param {TransportTime} endPosition   \n\t\t *  @returns {Tone.Transport} this\n\t\t *  @example\n\t\t * //loop over the first measure\n\t\t * Tone.Transport.setLoopPoints(0, \"1m\");\n\t\t * Tone.Transport.loop = true;\n\t\t */\n\t    Tone.Transport.prototype.setLoopPoints = function (startPosition, endPosition) {\n\t        this.loopStart = startPosition;\n\t        this.loopEnd = endPosition;\n\t        return this;\n\t    };\n\t    /**\n\t\t *  The swing value. Between 0-1 where 1 equal to \n\t\t *  the note + half the subdivision.\n\t\t *  @memberOf Tone.Transport#\n\t\t *  @type {NormalRange}\n\t\t *  @name swing\n\t\t */\n\t    Object.defineProperty(Tone.Transport.prototype, 'swing', {\n\t        get: function () {\n\t            return this._swingAmount;\n\t        },\n\t        set: function (amount) {\n\t            //scale the values to a normal range\n\t            this._swingAmount = amount;\n\t        }\n\t    });\n\t    /**\n\t\t *  Set the subdivision which the swing will be applied to. \n\t\t *  The default value is an 8th note. Value must be less \n\t\t *  than a quarter note.\n\t\t *  \n\t\t *  @memberOf Tone.Transport#\n\t\t *  @type {Time}\n\t\t *  @name swingSubdivision\n\t\t */\n\t    Object.defineProperty(Tone.Transport.prototype, 'swingSubdivision', {\n\t        get: function () {\n\t            return Tone.Time(this._swingTicks, 'i').toNotation();\n\t        },\n\t        set: function (subdivision) {\n\t            this._swingTicks = this.toTicks(subdivision);\n\t        }\n\t    });\n\t    /**\n\t\t *  The Transport's position in Bars:Beats:Sixteenths.\n\t\t *  Setting the value will jump to that position right away. \n\t\t *  @memberOf Tone.Transport#\n\t\t *  @type {BarsBeatsSixteenths}\n\t\t *  @name position\n\t\t */\n\t    Object.defineProperty(Tone.Transport.prototype, 'position', {\n\t        get: function () {\n\t            return Tone.TransportTime(this.ticks, 'i').toBarsBeatsSixteenths();\n\t        },\n\t        set: function (progress) {\n\t            var ticks = this.toTicks(progress);\n\t            this.ticks = ticks;\n\t        }\n\t    });\n\t    /**\n\t\t *  The Transport's position in seconds\n\t\t *  Setting the value will jump to that position right away. \n\t\t *  @memberOf Tone.Transport#\n\t\t *  @type {Seconds}\n\t\t *  @name seconds\n\t\t */\n\t    Object.defineProperty(Tone.Transport.prototype, 'seconds', {\n\t        get: function () {\n\t            return Tone.TransportTime(this.ticks, 'i').toSeconds();\n\t        },\n\t        set: function (progress) {\n\t            var ticks = this.toTicks(progress);\n\t            this.ticks = ticks;\n\t        }\n\t    });\n\t    /**\n\t\t *  The Transport's loop position as a normalized value. Always\n\t\t *  returns 0 if the transport if loop is not true. \n\t\t *  @memberOf Tone.Transport#\n\t\t *  @name progress\n\t\t *  @type {NormalRange}\n\t\t */\n\t    Object.defineProperty(Tone.Transport.prototype, 'progress', {\n\t        get: function () {\n\t            if (this.loop) {\n\t                return (this.ticks - this._loopStart) / (this._loopEnd - this._loopStart);\n\t            } else {\n\t                return 0;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  The transports current tick position.\n\t\t *  \n\t\t *  @memberOf Tone.Transport#\n\t\t *  @type {Ticks}\n\t\t *  @name ticks\n\t\t */\n\t    Object.defineProperty(Tone.Transport.prototype, 'ticks', {\n\t        get: function () {\n\t            return this._clock.ticks;\n\t        },\n\t        set: function (t) {\n\t            if (this._clock.ticks !== t) {\n\t                var now = this.now();\n\t                //stop everything synced to the transport\n\t                if (this.state === Tone.State.Started) {\n\t                    this.emit('stop', now);\n\t                    this._clock.ticks = t;\n\t                    //restart it with the new time\n\t                    this.emit('start', now, this.seconds);\n\t                } else {\n\t                    this._clock.ticks = t;\n\t                }\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  Pulses Per Quarter note. This is the smallest resolution\n\t\t *  the Transport timing supports. This should be set once\n\t\t *  on initialization and not set again. Changing this value \n\t\t *  after other objects have been created can cause problems. \n\t\t *  \n\t\t *  @memberOf Tone.Transport#\n\t\t *  @type {Number}\n\t\t *  @name PPQ\n\t\t */\n\t    Object.defineProperty(Tone.Transport.prototype, 'PPQ', {\n\t        get: function () {\n\t            return this._ppq;\n\t        },\n\t        set: function (ppq) {\n\t            var bpm = this.bpm.value;\n\t            this._ppq = ppq;\n\t            this.bpm.value = bpm;\n\t        }\n\t    });\n\t    /**\n\t\t *  The hint to the type of playback. Affects tradeoffs between audio \n\t\t *  output latency and responsiveness. \n\t\t *  \n\t\t *  In addition to setting the value in seconds, the latencyHint also\n\t\t *  accepts the strings \"interactive\" (prioritizes low latency), \n\t\t *  \"playback\" (prioritizes sustained playback), \"balanced\" (balances\n\t\t *  latency and performance), and \"fastest\" (lowest latency, might glitch more often). \n\t\t *  @memberOf Tone.Transport#\n\t\t *  @type {Seconds|String}\n\t\t *  @name latencyHint\n\t\t */\n\t    Object.defineProperty(Tone.Transport.prototype, 'latencyHint', {\n\t        get: function () {\n\t            return Tone.Clock.latencyHint;\n\t        },\n\t        set: function (hint) {\n\t            Tone.Clock.latencyHint = hint;\n\t        }\n\t    });\n\t    /**\n\t\t *  Convert from BPM to frequency (factoring in PPQ)\n\t\t *  @param  {BPM}  bpm The BPM value to convert to frequency\n\t\t *  @return  {Frequency}  The BPM as a frequency with PPQ factored in.\n\t\t *  @private\n\t\t */\n\t    Tone.Transport.prototype._fromUnits = function (bpm) {\n\t        return 1 / (60 / bpm / this.PPQ);\n\t    };\n\t    /**\n\t\t *  Convert from frequency (with PPQ) into BPM\n\t\t *  @param  {Frequency}  freq The clocks frequency to convert to BPM\n\t\t *  @return  {BPM}  The frequency value as BPM.\n\t\t *  @private\n\t\t */\n\t    Tone.Transport.prototype._toUnits = function (freq) {\n\t        return freq / this.PPQ * 60;\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////////\n\t    //\tSYNCING\n\t    ///////////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  Returns the time aligned to the next subdivision\n\t\t *  of the Transport. If the Transport is not started,\n\t\t *  it will return 0.\n\t\t *  Note: this will not work precisely during tempo ramps.\n\t\t *  @param  {Time}  subdivision  The subdivision to quantize to\n\t\t *  @return  {Number}  The context time of the next subdivision.\n\t\t *  @example\n\t\t * Tone.Transport.start(); //the transport must be started\n\t\t * Tone.Transport.nextSubdivision(\"4n\");\n\t\t */\n\t    Tone.Transport.prototype.nextSubdivision = function (subdivision) {\n\t        subdivision = this.toSeconds(subdivision);\n\t        //if the transport's not started, return 0\n\t        var now;\n\t        if (this.state === Tone.State.Started) {\n\t            now = this._clock._nextTick;\n\t        } else {\n\t            return 0;\n\t        }\n\t        var transportPos = Tone.Time(this.ticks, 'i');\n\t        var remainingTime = subdivision - transportPos % subdivision;\n\t        if (remainingTime === 0) {\n\t            remainingTime = subdivision;\n\t        }\n\t        return now + remainingTime;\n\t    };\n\t    /**\n\t\t *  Attaches the signal to the tempo control signal so that \n\t\t *  any changes in the tempo will change the signal in the same\n\t\t *  ratio. \n\t\t *  \n\t\t *  @param  {Tone.Signal} signal \n\t\t *  @param {number=} ratio Optionally pass in the ratio between\n\t\t *                         the two signals. Otherwise it will be computed\n\t\t *                         based on their current values. \n\t\t *  @returns {Tone.Transport} this\n\t\t */\n\t    Tone.Transport.prototype.syncSignal = function (signal, ratio) {\n\t        if (!ratio) {\n\t            //get the sync ratio\n\t            if (signal._param.value !== 0) {\n\t                ratio = signal._param.value / this.bpm._param.value;\n\t            } else {\n\t                ratio = 0;\n\t            }\n\t        }\n\t        var ratioSignal = new Tone.Gain(ratio);\n\t        this.bpm.chain(ratioSignal, signal._param);\n\t        this._syncedSignals.push({\n\t            'ratio': ratioSignal,\n\t            'signal': signal,\n\t            'initial': signal._param.value\n\t        });\n\t        signal._param.value = 0;\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Unsyncs a previously synced signal from the transport's control. \n\t\t *  See Tone.Transport.syncSignal.\n\t\t *  @param  {Tone.Signal} signal \n\t\t *  @returns {Tone.Transport} this\n\t\t */\n\t    Tone.Transport.prototype.unsyncSignal = function (signal) {\n\t        for (var i = this._syncedSignals.length - 1; i >= 0; i--) {\n\t            var syncedSignal = this._syncedSignals[i];\n\t            if (syncedSignal.signal === signal) {\n\t                syncedSignal.ratio.dispose();\n\t                syncedSignal.signal._param.value = syncedSignal.initial;\n\t                this._syncedSignals.splice(i, 1);\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Clean up. \n\t\t *  @returns {Tone.Transport} this\n\t\t *  @private\n\t\t */\n\t    Tone.Transport.prototype.dispose = function () {\n\t        Tone.Emitter.prototype.dispose.call(this);\n\t        this._clock.dispose();\n\t        this._clock = null;\n\t        this._writable('bpm');\n\t        this.bpm = null;\n\t        this._timeline.dispose();\n\t        this._timeline = null;\n\t        this._onceEvents.dispose();\n\t        this._onceEvents = null;\n\t        this._repeatedEvents.dispose();\n\t        this._repeatedEvents = null;\n\t        return this;\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////////\n\t    //\tINITIALIZATION\n\t    ///////////////////////////////////////////////////////////////////////////////\n\t    var TransportConstructor = Tone.Transport;\n\t    Tone.Transport = new TransportConstructor();\n\t    Tone.Context.on('init', function (context) {\n\t        if (context.Transport instanceof TransportConstructor) {\n\t            Tone.Transport = context.Transport;\n\t        } else {\n\t            Tone.Transport = new TransportConstructor();\n\t            //store the Transport on the context so it can be retrieved later\n\t            context.Transport = Tone.Transport;\n\t        }\n\t    });\n\t    return Tone.Transport;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.Volume is a simple volume node, useful for creating a volume fader. \n\t\t *\n\t\t *  @extends {Tone}\n\t\t *  @constructor\n\t\t *  @param {Decibels} [volume=0] the initial volume\n\t\t *  @example\n\t\t * var vol = new Tone.Volume(-12);\n\t\t * instrument.chain(vol, Tone.Master);\n\t\t */\n\t    Tone.Volume = function () {\n\t        var options = this.optionsObject(arguments, ['volume'], Tone.Volume.defaults);\n\t        /**\n\t\t\t * the output node\n\t\t\t * @type {GainNode}\n\t\t\t * @private\n\t\t\t */\n\t        this.output = this.input = new Tone.Gain(options.volume, Tone.Type.Decibels);\n\t        /**\n\t\t\t * The unmuted volume\n\t\t\t * @type {Decibels}\n\t\t\t * @private\n\t\t\t */\n\t        this._unmutedVolume = options.volume;\n\t        /**\n\t\t\t *  The volume control in decibels. \n\t\t\t *  @type {Decibels}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.volume = this.output.gain;\n\t        this._readOnly('volume');\n\t        //set the mute initially\n\t        this.mute = options.mute;\n\t    };\n\t    Tone.extend(Tone.Volume);\n\t    /**\n\t\t *  Defaults\n\t\t *  @type  {Object}\n\t\t *  @const\n\t\t *  @static\n\t\t */\n\t    Tone.Volume.defaults = {\n\t        'volume': 0,\n\t        'mute': false\n\t    };\n\t    /**\n\t\t * Mute the output. \n\t\t * @memberOf Tone.Volume#\n\t\t * @type {boolean}\n\t\t * @name mute\n\t\t * @example\n\t\t * //mute the output\n\t\t * volume.mute = true;\n\t\t */\n\t    Object.defineProperty(Tone.Volume.prototype, 'mute', {\n\t        get: function () {\n\t            return this.volume.value === -Infinity;\n\t        },\n\t        set: function (mute) {\n\t            if (!this.mute && mute) {\n\t                this._unmutedVolume = this.volume.value;\n\t                //maybe it should ramp here?\n\t                this.volume.value = -Infinity;\n\t            } else if (this.mute && !mute) {\n\t                this.volume.value = this._unmutedVolume;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.Volume} this\n\t\t */\n\t    Tone.Volume.prototype.dispose = function () {\n\t        this.input.dispose();\n\t        Tone.prototype.dispose.call(this);\n\t        this._writable('volume');\n\t        this.volume.dispose();\n\t        this.volume = null;\n\t        return this;\n\t    };\n\t    return Tone.Volume;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  A single master output which is connected to the\n\t\t *          AudioDestinationNode (aka your speakers). \n\t\t *          It provides useful conveniences such as the ability \n\t\t *          to set the volume and mute the entire application. \n\t\t *          It also gives you the ability to apply master effects to your application. \n\t\t *          <br><br>\n\t\t *          Like Tone.Transport, A single Tone.Master is created\n\t\t *          on initialization and you do not need to explicitly construct one.\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone}\n\t\t *  @singleton\n\t\t *  @example\n\t\t * //the audio will go from the oscillator to the speakers\n\t\t * oscillator.connect(Tone.Master);\n\t\t * //a convenience for connecting to the master output is also provided:\n\t\t * oscillator.toMaster();\n\t\t * //the above two examples are equivalent.\n\t\t */\n\t    Tone.Master = function () {\n\t        this.createInsOuts(1, 1);\n\t        /**\n\t\t\t *  The private volume node\n\t\t\t *  @type  {Tone.Volume}\n\t\t\t *  @private\n\t\t\t */\n\t        this._volume = this.output = new Tone.Volume();\n\t        /**\n\t\t\t * The volume of the master output.\n\t\t\t * @type {Decibels}\n\t\t\t * @signal\n\t\t\t */\n\t        this.volume = this._volume.volume;\n\t        this._readOnly('volume');\n\t        //connections\n\t        this.input.chain(this.output, this.context.destination);\n\t    };\n\t    Tone.extend(Tone.Master);\n\t    /**\n\t\t *  @type {Object}\n\t\t *  @const\n\t\t */\n\t    Tone.Master.defaults = {\n\t        'volume': 0,\n\t        'mute': false\n\t    };\n\t    /**\n\t\t * Mute the output. \n\t\t * @memberOf Tone.Master#\n\t\t * @type {boolean}\n\t\t * @name mute\n\t\t * @example\n\t\t * //mute the output\n\t\t * Tone.Master.mute = true;\n\t\t */\n\t    Object.defineProperty(Tone.Master.prototype, 'mute', {\n\t        get: function () {\n\t            return this._volume.mute;\n\t        },\n\t        set: function (mute) {\n\t            this._volume.mute = mute;\n\t        }\n\t    });\n\t    /**\n\t\t *  Add a master effects chain. NOTE: this will disconnect any nodes which were previously \n\t\t *  chained in the master effects chain. \n\t\t *  @param {AudioNode|Tone...} args All arguments will be connected in a row\n\t\t *                                  and the Master will be routed through it.\n\t\t *  @return  {Tone.Master}  this\n\t\t *  @example\n\t\t * //some overall compression to keep the levels in check\n\t\t * var masterCompressor = new Tone.Compressor({\n\t\t * \t\"threshold\" : -6,\n\t\t * \t\"ratio\" : 3,\n\t\t * \t\"attack\" : 0.5,\n\t\t * \t\"release\" : 0.1\n\t\t * });\n\t\t * //give a little boost to the lows\n\t\t * var lowBump = new Tone.Filter(200, \"lowshelf\");\n\t\t * //route everything through the filter \n\t\t * //and compressor before going to the speakers\n\t\t * Tone.Master.chain(lowBump, masterCompressor);\n\t\t */\n\t    Tone.Master.prototype.chain = function () {\n\t        this.input.disconnect();\n\t        this.input.chain.apply(this.input, arguments);\n\t        arguments[arguments.length - 1].connect(this.output);\n\t    };\n\t    /**\n\t\t *  Clean up\n\t\t *  @return  {Tone.Master}  this\n\t\t */\n\t    Tone.Master.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._writable('volume');\n\t        this._volume.dispose();\n\t        this._volume = null;\n\t        this.volume = null;\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //\tAUGMENT TONE's PROTOTYPE\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    /**\n\t\t *  Connect 'this' to the master output. Shorthand for this.connect(Tone.Master)\n\t\t *  @returns {Tone} this\n\t\t *  @example\n\t\t * //connect an oscillator to the master output\n\t\t * var osc = new Tone.Oscillator().toMaster();\n\t\t */\n\t    Tone.prototype.toMaster = function () {\n\t        this.connect(Tone.Master);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Also augment AudioNode's prototype to include toMaster\n\t\t *  as a convenience\n\t\t *  @returns {AudioNode} this\n\t\t */\n\t    AudioNode.prototype.toMaster = function () {\n\t        this.connect(Tone.Master);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  initialize the module and listen for new audio contexts\n\t\t */\n\t    var MasterConstructor = Tone.Master;\n\t    Tone.Master = new MasterConstructor();\n\t    Tone.Context.on('init', function (context) {\n\t        // if it already exists, just restore it\n\t        if (context.Master instanceof MasterConstructor) {\n\t            Tone.Master = context.Master;\n\t        } else {\n\t            Tone.Master = new MasterConstructor();\n\t        }\n\t        context.Master = Tone.Master;\n\t    });\n\t    return Tone.Master;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Base class for sources. Sources have start/stop methods\n\t\t *          and the ability to be synced to the \n\t\t *          start/stop of Tone.Transport. \n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone}\n\t\t *  @example\n\t\t * //Multiple state change events can be chained together,\n\t\t * //but must be set in the correct order and with ascending times\n\t\t * \n\t\t * // OK\n\t\t * state.start().stop(\"+0.2\");\n\t\t * // AND\n\t\t * state.start().stop(\"+0.2\").start(\"+0.4\").stop(\"+0.7\")\n\t\t *\n\t\t * // BAD\n\t\t * state.stop(\"+0.2\").start();\n\t\t * // OR\n\t\t * state.start(\"+0.3\").stop(\"+0.2\");\n\t\t * \n\t\t */\n\t    Tone.Source = function (options) {\n\t        // this.createInsOuts(0, 1);\n\t        options = this.defaultArg(options, Tone.Source.defaults);\n\t        /**\n\t\t\t *  The output volume node\n\t\t\t *  @type  {Tone.Volume}\n\t\t\t *  @private\n\t\t\t */\n\t        this._volume = this.output = new Tone.Volume(options.volume);\n\t        /**\n\t\t\t * The volume of the output in decibels.\n\t\t\t * @type {Decibels}\n\t\t\t * @signal\n\t\t\t * @example\n\t\t\t * source.volume.value = -6;\n\t\t\t */\n\t        this.volume = this._volume.volume;\n\t        this._readOnly('volume');\n\t        /**\n\t\t\t * \tKeep track of the scheduled state.\n\t\t\t *  @type {Tone.TimelineState}\n\t\t\t *  @private\n\t\t\t */\n\t        this._state = new Tone.TimelineState(Tone.State.Stopped);\n\t        this._state.memory = 10;\n\t        /**\n\t\t\t *  The synced `start` callback function from the transport\n\t\t\t *  @type {Function}\n\t\t\t *  @private\n\t\t\t */\n\t        this._synced = false;\n\t        /**\n\t\t\t *  Keep track of all of the scheduled event ids\n\t\t\t *  @type  {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._scheduled = [];\n\t        //make the output explicitly stereo\n\t        this._volume.output.output.channelCount = 2;\n\t        this._volume.output.output.channelCountMode = 'explicit';\n\t        //mute initially\n\t        this.mute = options.mute;\n\t    };\n\t    Tone.extend(Tone.Source);\n\t    /**\n\t\t *  The default parameters\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.Source.defaults = {\n\t        'volume': 0,\n\t        'mute': false\n\t    };\n\t    /**\n\t\t *  Returns the playback state of the source, either \"started\" or \"stopped\".\n\t\t *  @type {Tone.State}\n\t\t *  @readOnly\n\t\t *  @memberOf Tone.Source#\n\t\t *  @name state\n\t\t */\n\t    Object.defineProperty(Tone.Source.prototype, 'state', {\n\t        get: function () {\n\t            if (this._synced) {\n\t                if (Tone.Transport.state === Tone.State.Started) {\n\t                    return this._state.getValueAtTime(Tone.Transport.seconds);\n\t                } else {\n\t                    return Tone.State.Stopped;\n\t                }\n\t            } else {\n\t                return this._state.getValueAtTime(this.now());\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * Mute the output. \n\t\t * @memberOf Tone.Source#\n\t\t * @type {boolean}\n\t\t * @name mute\n\t\t * @example\n\t\t * //mute the output\n\t\t * source.mute = true;\n\t\t */\n\t    Object.defineProperty(Tone.Source.prototype, 'mute', {\n\t        get: function () {\n\t            return this._volume.mute;\n\t        },\n\t        set: function (mute) {\n\t            this._volume.mute = mute;\n\t        }\n\t    });\n\t    //overwrite these functions\n\t    Tone.Source.prototype._start = Tone.noOp;\n\t    Tone.Source.prototype._stop = Tone.noOp;\n\t    /**\n\t\t *  Start the source at the specified time. If no time is given, \n\t\t *  start the source now.\n\t\t *  @param  {Time} [time=now] When the source should be started.\n\t\t *  @returns {Tone.Source} this\n\t\t *  @example\n\t\t * source.start(\"+0.5\"); //starts the source 0.5 seconds from now\n\t\t */\n\t    Tone.Source.prototype.start = function (time, offset, duration) {\n\t        if (this.isUndef(time) && this._synced) {\n\t            time = Tone.Transport.seconds;\n\t        } else {\n\t            time = this.toSeconds(time);\n\t        }\n\t        //if it's started, stop it and restart it\n\t        if (!this.retrigger && this._state.getValueAtTime(time) === Tone.State.Started) {\n\t            this.stop(time);\n\t        }\n\t        this._state.setStateAtTime(Tone.State.Started, time);\n\t        if (this._synced) {\n\t            // add the offset time to the event\n\t            var event = this._state.get(time);\n\t            event.offset = this.defaultArg(offset, 0);\n\t            event.duration = duration;\n\t            var sched = Tone.Transport.schedule(function (t) {\n\t                this._start(t, offset, duration);\n\t            }.bind(this), time);\n\t            this._scheduled.push(sched);\n\t        } else {\n\t            this._start.apply(this, arguments);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Stop the source at the specified time. If no time is given, \n\t\t *  stop the source now.\n\t\t *  @param  {Time} [time=now] When the source should be stopped. \n\t\t *  @returns {Tone.Source} this\n\t\t *  @example\n\t\t * source.stop(); // stops the source immediately\n\t\t */\n\t    Tone.Source.prototype.stop = function (time) {\n\t        if (this.isUndef(time) && this._synced) {\n\t            time = Tone.Transport.seconds;\n\t        } else {\n\t            time = this.toSeconds(time);\n\t        }\n\t        this._state.cancel(time);\n\t        this._state.setStateAtTime(Tone.State.Stopped, time);\n\t        if (!this._synced) {\n\t            this._stop.apply(this, arguments);\n\t        } else {\n\t            var sched = Tone.Transport.schedule(this._stop.bind(this), time);\n\t            this._scheduled.push(sched);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Sync the source to the Transport so that all subsequent\n\t\t *  calls to `start` and `stop` are synced to the TransportTime\n\t\t *  instead of the AudioContext time. \n\t\t *\n\t\t *  @returns {Tone.Source} this\n\t\t *  @example\n\t\t * //sync the source so that it plays between 0 and 0.3 on the Transport's timeline\n\t\t * source.sync().start(0).stop(0.3);\n\t\t * //start the transport.\n\t\t * Tone.Transport.start();\n\t\t *\n\t\t *  @example\n\t\t * //start the transport with an offset and the sync'ed sources\n\t\t * //will start in the correct position\n\t\t * source.sync().start(0.1);\n\t\t * //the source will be invoked with an offset of 0.4\n\t\t * Tone.Transport.start(\"+0.5\", 0.5);\n\t\t */\n\t    Tone.Source.prototype.sync = function () {\n\t        this._synced = true;\n\t        Tone.Transport.on('start loopStart', function (time, offset) {\n\t            if (offset > 0) {\n\t                // get the playback state at that time\n\t                var stateEvent = this._state.get(offset);\n\t                // listen for start events which may occur in the middle of the sync'ed time\n\t                if (stateEvent && stateEvent.state === Tone.State.Started && stateEvent.time !== offset) {\n\t                    // get the offset\n\t                    var startOffset = offset - this.toSeconds(stateEvent.time);\n\t                    var duration;\n\t                    if (stateEvent.duration) {\n\t                        duration = this.toSeconds(stateEvent.duration) - startOffset;\n\t                    }\n\t                    this._start(time, this.toSeconds(stateEvent.offset) + startOffset, duration);\n\t                }\n\t            }\n\t        }.bind(this));\n\t        Tone.Transport.on('stop pause loopEnd', function (time) {\n\t            if (this._state.getValueAtTime(Tone.Transport.seconds) === Tone.State.Started) {\n\t                this._stop(time);\n\t            }\n\t        }.bind(this));\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Unsync the source to the Transport. See Tone.Source.sync\n\t\t *  @returns {Tone.Source} this\n\t\t */\n\t    Tone.Source.prototype.unsync = function () {\n\t        this._synced = false;\n\t        Tone.Transport.off('start stop pause loopEnd loopStart');\n\t        // clear all of the scheduled ids\n\t        for (var i = 0; i < this._scheduled.length; i++) {\n\t            var id = this._scheduled[i];\n\t            Tone.Transport.clear(id);\n\t        }\n\t        this._scheduled = [];\n\t        this._state.cancel(0);\n\t        return this;\n\t    };\n\t    /**\n\t\t *\tClean up.\n\t\t *  @return {Tone.Source} this\n\t\t */\n\t    Tone.Source.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this.unsync();\n\t        this._scheduled = null;\n\t        this._writable('volume');\n\t        this._volume.dispose();\n\t        this._volume = null;\n\t        this.volume = null;\n\t        this._state.dispose();\n\t        this._state = null;\n\t    };\n\t    return Tone.Source;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  OscillatorNode shim\n\t\t *  @private\n\t\t */\n\t    if (window.OscillatorNode && !OscillatorNode.prototype.start) {\n\t        OscillatorNode.prototype.start = OscillatorNode.prototype.noteOn;\n\t        OscillatorNode.prototype.stop = OscillatorNode.prototype.noteOff;\n\t        if (!OscillatorNode.prototype.setPeriodicWave) {\n\t            OscillatorNode.prototype.setPeriodicWave = OscillatorNode.prototype.setWaveTable;\n\t        }\n\t        if (!AudioContext.prototype.createPeriodicWave) {\n\t            AudioContext.prototype.createPeriodicWave = AudioContext.prototype.createWaveTable;\n\t        }\n\t    }\n\t    /**\n\t\t *  @class Tone.Oscillator supports a number of features including\n\t\t *         phase rotation, multiple oscillator types (see Tone.Oscillator.type), \n\t\t *         and Transport syncing (see Tone.Oscillator.syncFrequency).\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Source}\n\t\t *  @param {Frequency} [frequency] Starting frequency\n\t\t *  @param {string} [type] The oscillator type. Read more about type below.\n\t\t *  @example\n\t\t * //make and start a 440hz sine tone\n\t\t * var osc = new Tone.Oscillator(440, \"sine\").toMaster().start();\n\t\t */\n\t    Tone.Oscillator = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'frequency',\n\t            'type'\n\t        ], Tone.Oscillator.defaults);\n\t        Tone.Source.call(this, options);\n\t        /**\n\t\t\t *  the main oscillator\n\t\t\t *  @type {OscillatorNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._oscillator = null;\n\t        /**\n\t\t\t *  The frequency control.\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.frequency = new Tone.Signal(options.frequency, Tone.Type.Frequency);\n\t        /**\n\t\t\t *  The detune control signal.\n\t\t\t *  @type {Cents}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.detune = new Tone.Signal(options.detune, Tone.Type.Cents);\n\t        /**\n\t\t\t *  the periodic wave\n\t\t\t *  @type {PeriodicWave}\n\t\t\t *  @private\n\t\t\t */\n\t        this._wave = null;\n\t        /**\n\t\t\t *  The partials of the oscillator\n\t\t\t *  @type {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._partials = this.defaultArg(options.partials, [1]);\n\t        /**\n\t\t\t *  the phase of the oscillator\n\t\t\t *  between 0 - 360\n\t\t\t *  @type {number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._phase = options.phase;\n\t        /**\n\t\t\t *  the type of the oscillator\n\t\t\t *  @type {string}\n\t\t\t *  @private\n\t\t\t */\n\t        this._type = null;\n\t        //setup\n\t        this.type = options.type;\n\t        this.phase = this._phase;\n\t        this._readOnly([\n\t            'frequency',\n\t            'detune'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.Oscillator, Tone.Source);\n\t    /**\n\t\t *  the default parameters\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.Oscillator.defaults = {\n\t        'type': 'sine',\n\t        'frequency': 440,\n\t        'detune': 0,\n\t        'phase': 0,\n\t        'partials': []\n\t    };\n\t    /**\n\t\t *  The Oscillator types\n\t\t *  @enum {String}\n\t\t */\n\t    Tone.Oscillator.Type = {\n\t        Sine: 'sine',\n\t        Triangle: 'triangle',\n\t        Sawtooth: 'sawtooth',\n\t        Square: 'square',\n\t        Custom: 'custom'\n\t    };\n\t    /**\n\t\t *  start the oscillator\n\t\t *  @param  {Time} [time=now] \n\t\t *  @private\n\t\t */\n\t    Tone.Oscillator.prototype._start = function (time) {\n\t        //new oscillator with previous values\n\t        this._oscillator = this.context.createOscillator();\n\t        this._oscillator.setPeriodicWave(this._wave);\n\t        //connect the control signal to the oscillator frequency & detune\n\t        this._oscillator.connect(this.output);\n\t        this.frequency.connect(this._oscillator.frequency);\n\t        this.detune.connect(this._oscillator.detune);\n\t        //start the oscillator\n\t        this._oscillator.start(this.toSeconds(time));\n\t    };\n\t    /**\n\t\t *  stop the oscillator\n\t\t *  @private\n\t\t *  @param  {Time} [time=now] (optional) timing parameter\n\t\t *  @returns {Tone.Oscillator} this\n\t\t */\n\t    Tone.Oscillator.prototype._stop = function (time) {\n\t        if (this._oscillator) {\n\t            this._oscillator.stop(this.toSeconds(time));\n\t            this._oscillator = null;\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Sync the signal to the Transport's bpm. Any changes to the transports bpm,\n\t\t *  will also affect the oscillators frequency. \n\t\t *  @returns {Tone.Oscillator} this\n\t\t *  @example\n\t\t * Tone.Transport.bpm.value = 120;\n\t\t * osc.frequency.value = 440;\n\t\t * //the ration between the bpm and the frequency will be maintained\n\t\t * osc.syncFrequency();\n\t\t * Tone.Transport.bpm.value = 240; \n\t\t * // the frequency of the oscillator is doubled to 880\n\t\t */\n\t    Tone.Oscillator.prototype.syncFrequency = function () {\n\t        Tone.Transport.syncSignal(this.frequency);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Unsync the oscillator's frequency from the Transport. \n\t\t *  See Tone.Oscillator.syncFrequency\n\t\t *  @returns {Tone.Oscillator} this\n\t\t */\n\t    Tone.Oscillator.prototype.unsyncFrequency = function () {\n\t        Tone.Transport.unsyncSignal(this.frequency);\n\t        return this;\n\t    };\n\t    /**\n\t\t * The type of the oscillator: either sine, square, triangle, or sawtooth. Also capable of\n\t\t * setting the first x number of partials of the oscillator. For example: \"sine4\" would\n\t\t * set be the first 4 partials of the sine wave and \"triangle8\" would set the first\n\t\t * 8 partials of the triangle wave.\n\t\t * <br><br> \n\t\t * Uses PeriodicWave internally even for native types so that it can set the phase. \n\t\t * PeriodicWave equations are from the \n\t\t * [Webkit Web Audio implementation](https://code.google.com/p/chromium/codesearch#chromium/src/third_party/WebKit/Source/modules/webaudio/PeriodicWave.cpp&sq=package:chromium).\n\t\t *  \n\t\t * @memberOf Tone.Oscillator#\n\t\t * @type {string}\n\t\t * @name type\n\t\t * @example\n\t\t * //set it to a square wave\n\t\t * osc.type = \"square\";\n\t\t * @example\n\t\t * //set the first 6 partials of a sawtooth wave\n\t\t * osc.type = \"sawtooth6\";\n\t\t */\n\t    Object.defineProperty(Tone.Oscillator.prototype, 'type', {\n\t        get: function () {\n\t            return this._type;\n\t        },\n\t        set: function (type) {\n\t            var coefs = this._getRealImaginary(type, this._phase);\n\t            var periodicWave = this.context.createPeriodicWave(coefs[0], coefs[1]);\n\t            this._wave = periodicWave;\n\t            if (this._oscillator !== null) {\n\t                this._oscillator.setPeriodicWave(this._wave);\n\t            }\n\t            this._type = type;\n\t        }\n\t    });\n\t    /**\n\t\t *  Returns the real and imaginary components based \n\t\t *  on the oscillator type.\n\t\t *  @returns {Array} [real, imaginary]\n\t\t *  @private\n\t\t */\n\t    Tone.Oscillator.prototype._getRealImaginary = function (type, phase) {\n\t        var fftSize = 4096;\n\t        var periodicWaveSize = fftSize / 2;\n\t        var real = new Float32Array(periodicWaveSize);\n\t        var imag = new Float32Array(periodicWaveSize);\n\t        var partialCount = 1;\n\t        if (type === Tone.Oscillator.Type.Custom) {\n\t            partialCount = this._partials.length + 1;\n\t            periodicWaveSize = partialCount;\n\t        } else {\n\t            var partial = /^(sine|triangle|square|sawtooth)(\\d+)$/.exec(type);\n\t            if (partial) {\n\t                partialCount = parseInt(partial[2]) + 1;\n\t                type = partial[1];\n\t                partialCount = Math.max(partialCount, 2);\n\t                periodicWaveSize = partialCount;\n\t            }\n\t        }\n\t        for (var n = 1; n < periodicWaveSize; ++n) {\n\t            var piFactor = 2 / (n * Math.PI);\n\t            var b;\n\t            switch (type) {\n\t            case Tone.Oscillator.Type.Sine:\n\t                b = n <= partialCount ? 1 : 0;\n\t                break;\n\t            case Tone.Oscillator.Type.Square:\n\t                b = n & 1 ? 2 * piFactor : 0;\n\t                break;\n\t            case Tone.Oscillator.Type.Sawtooth:\n\t                b = piFactor * (n & 1 ? 1 : -1);\n\t                break;\n\t            case Tone.Oscillator.Type.Triangle:\n\t                if (n & 1) {\n\t                    b = 2 * (piFactor * piFactor) * (n - 1 >> 1 & 1 ? -1 : 1);\n\t                } else {\n\t                    b = 0;\n\t                }\n\t                break;\n\t            case Tone.Oscillator.Type.Custom:\n\t                b = this._partials[n - 1];\n\t                break;\n\t            default:\n\t                throw new TypeError('Tone.Oscillator: invalid type: ' + type);\n\t            }\n\t            if (b !== 0) {\n\t                real[n] = -b * Math.sin(phase * n);\n\t                imag[n] = b * Math.cos(phase * n);\n\t            } else {\n\t                real[n] = 0;\n\t                imag[n] = 0;\n\t            }\n\t        }\n\t        return [\n\t            real,\n\t            imag\n\t        ];\n\t    };\n\t    /**\n\t\t *  Compute the inverse FFT for a given phase.\t\n\t\t *  @param  {Float32Array}  real\n\t\t *  @param  {Float32Array}  imag \n\t\t *  @param  {NormalRange}  phase \n\t\t *  @return  {AudioRange}\n\t\t *  @private\n\t\t */\n\t    Tone.Oscillator.prototype._inverseFFT = function (real, imag, phase) {\n\t        var sum = 0;\n\t        var len = real.length;\n\t        for (var i = 0; i < len; i++) {\n\t            sum += real[i] * Math.cos(i * phase) + imag[i] * Math.sin(i * phase);\n\t        }\n\t        return sum;\n\t    };\n\t    /**\n\t\t *  Returns the initial value of the oscillator.\n\t\t *  @return  {AudioRange}\n\t\t *  @private\n\t\t */\n\t    Tone.Oscillator.prototype._getInitialValue = function () {\n\t        var coefs = this._getRealImaginary(this._type, 0);\n\t        var real = coefs[0];\n\t        var imag = coefs[1];\n\t        var maxValue = 0;\n\t        var twoPi = Math.PI * 2;\n\t        //check for peaks in 8 places\n\t        for (var i = 0; i < 8; i++) {\n\t            maxValue = Math.max(this._inverseFFT(real, imag, i / 8 * twoPi), maxValue);\n\t        }\n\t        return -this._inverseFFT(real, imag, this._phase) / maxValue;\n\t    };\n\t    /**\n\t\t * The partials of the waveform. A partial represents \n\t\t * the amplitude at a harmonic. The first harmonic is the \n\t\t * fundamental frequency, the second is the octave and so on\n\t\t * following the harmonic series. \n\t\t * Setting this value will automatically set the type to \"custom\". \n\t\t * The value is an empty array when the type is not \"custom\". \n\t\t * @memberOf Tone.Oscillator#\n\t\t * @type {Array}\n\t\t * @name partials\n\t\t * @example\n\t\t * osc.partials = [1, 0.2, 0.01];\n\t\t */\n\t    Object.defineProperty(Tone.Oscillator.prototype, 'partials', {\n\t        get: function () {\n\t            if (this._type !== Tone.Oscillator.Type.Custom) {\n\t                return [];\n\t            } else {\n\t                return this._partials;\n\t            }\n\t        },\n\t        set: function (partials) {\n\t            this._partials = partials;\n\t            this.type = Tone.Oscillator.Type.Custom;\n\t        }\n\t    });\n\t    /**\n\t\t * The phase of the oscillator in degrees. \n\t\t * @memberOf Tone.Oscillator#\n\t\t * @type {Degrees}\n\t\t * @name phase\n\t\t * @example\n\t\t * osc.phase = 180; //flips the phase of the oscillator\n\t\t */\n\t    Object.defineProperty(Tone.Oscillator.prototype, 'phase', {\n\t        get: function () {\n\t            return this._phase * (180 / Math.PI);\n\t        },\n\t        set: function (phase) {\n\t            this._phase = phase * Math.PI / 180;\n\t            //reset the type\n\t            this.type = this._type;\n\t        }\n\t    });\n\t    /**\n\t\t *  Dispose and disconnect.\n\t\t *  @return {Tone.Oscillator} this\n\t\t */\n\t    Tone.Oscillator.prototype.dispose = function () {\n\t        Tone.Source.prototype.dispose.call(this);\n\t        if (this._oscillator !== null) {\n\t            this._oscillator.disconnect();\n\t            this._oscillator = null;\n\t        }\n\t        this._wave = null;\n\t        this._writable([\n\t            'frequency',\n\t            'detune'\n\t        ]);\n\t        this.frequency.dispose();\n\t        this.frequency = null;\n\t        this.detune.dispose();\n\t        this.detune = null;\n\t        this._partials = null;\n\t        return this;\n\t    };\n\t    return Tone.Oscillator;\n\t});\n\tModule(function (Tone) {\n\t    /**\n\t\t *  @class Tone.Zero outputs 0's at audio-rate. The reason this has to be\n\t\t *         it's own class is that many browsers optimize out Tone.Signal\n\t\t *         with a value of 0 and will not process nodes further down the graph. \n\t\t *  @extends {Tone}\n\t\t */\n\t    Tone.Zero = function () {\n\t        /**\n\t\t\t *  The gain node\n\t\t\t *  @type  {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._gain = this.input = this.output = new Tone.Gain();\n\t        this.context.getConstant(0).connect(this._gain);\n\t    };\n\t    Tone.extend(Tone.Zero);\n\t    /**\n\t\t *  clean up\n\t\t *  @return  {Tone.Zero}  this\n\t\t */\n\t    Tone.Zero.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._gain.dispose();\n\t        this._gain = null;\n\t        return this;\n\t    };\n\t    return Tone.Zero;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  LFO stands for low frequency oscillator. Tone.LFO produces an output signal \n\t\t *          which can be attached to an AudioParam or Tone.Signal \n\t\t *          in order to modulate that parameter with an oscillator. The LFO can \n\t\t *          also be synced to the transport to start/stop and change when the tempo changes.\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Oscillator}\n\t\t *  @param {Frequency|Object} [frequency] The frequency of the oscillation. Typically, LFOs will be\n\t\t *                               in the frequency range of 0.1 to 10 hertz. \n\t\t *  @param {number=} min The minimum output value of the LFO. \n\t\t *  @param {number=} max The maximum value of the LFO. \n\t\t *  @example\n\t\t * var lfo = new Tone.LFO(\"4n\", 400, 4000);\n\t\t * lfo.connect(filter.frequency);\n\t\t */\n\t    Tone.LFO = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'frequency',\n\t            'min',\n\t            'max'\n\t        ], Tone.LFO.defaults);\n\t        /** \n\t\t\t *  The oscillator. \n\t\t\t *  @type {Tone.Oscillator}\n\t\t\t *  @private\n\t\t\t */\n\t        this._oscillator = new Tone.Oscillator({\n\t            'frequency': options.frequency,\n\t            'type': options.type\n\t        });\n\t        /**\n\t\t\t *  the lfo's frequency\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.frequency = this._oscillator.frequency;\n\t        /**\n\t\t\t * The amplitude of the LFO, which controls the output range between\n\t\t\t * the min and max output. For example if the min is -10 and the max \n\t\t\t * is 10, setting the amplitude to 0.5 would make the LFO modulate\n\t\t\t * between -5 and 5. \n\t\t\t * @type {Number}\n\t\t\t * @signal\n\t\t\t */\n\t        this.amplitude = this._oscillator.volume;\n\t        this.amplitude.units = Tone.Type.NormalRange;\n\t        this.amplitude.value = options.amplitude;\n\t        /**\n\t\t\t *  The signal which is output when the LFO is stopped\n\t\t\t *  @type  {Tone.Signal}\n\t\t\t *  @private\n\t\t\t */\n\t        this._stoppedSignal = new Tone.Signal(0, Tone.Type.AudioRange);\n\t        /**\n\t\t\t *  Just outputs zeros.\n\t\t\t *  @type {Tone.Zero}\n\t\t\t *  @private\n\t\t\t */\n\t        this._zeros = new Tone.Zero();\n\t        /**\n\t\t\t *  The value that the LFO outputs when it's stopped\n\t\t\t *  @type {AudioRange}\n\t\t\t *  @private\n\t\t\t */\n\t        this._stoppedValue = 0;\n\t        /**\n\t\t\t *  @type {Tone.AudioToGain} \n\t\t\t *  @private\n\t\t\t */\n\t        this._a2g = new Tone.AudioToGain();\n\t        /**\n\t\t\t *  @type {Tone.Scale} \n\t\t\t *  @private\n\t\t\t */\n\t        this._scaler = this.output = new Tone.Scale(options.min, options.max);\n\t        /**\n\t\t\t *  the units of the LFO (used for converting)\n\t\t\t *  @type {Tone.Type} \n\t\t\t *  @private\n\t\t\t */\n\t        this._units = Tone.Type.Default;\n\t        this.units = options.units;\n\t        //connect it up\n\t        this._oscillator.chain(this._a2g, this._scaler);\n\t        this._zeros.connect(this._a2g);\n\t        this._stoppedSignal.connect(this._a2g);\n\t        this._readOnly([\n\t            'amplitude',\n\t            'frequency'\n\t        ]);\n\t        this.phase = options.phase;\n\t    };\n\t    Tone.extend(Tone.LFO, Tone.Oscillator);\n\t    /**\n\t\t *  the default parameters\n\t\t *\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.LFO.defaults = {\n\t        'type': 'sine',\n\t        'min': 0,\n\t        'max': 1,\n\t        'phase': 0,\n\t        'frequency': '4n',\n\t        'amplitude': 1,\n\t        'units': Tone.Type.Default\n\t    };\n\t    /**\n\t\t *  Start the LFO. \n\t\t *  @param  {Time} [time=now] the time the LFO will start\n\t\t *  @returns {Tone.LFO} this\n\t\t */\n\t    Tone.LFO.prototype.start = function (time) {\n\t        time = this.toSeconds(time);\n\t        this._stoppedSignal.setValueAtTime(0, time);\n\t        this._oscillator.start(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Stop the LFO. \n\t\t *  @param  {Time} [time=now] the time the LFO will stop\n\t\t *  @returns {Tone.LFO} this\n\t\t */\n\t    Tone.LFO.prototype.stop = function (time) {\n\t        time = this.toSeconds(time);\n\t        this._stoppedSignal.setValueAtTime(this._stoppedValue, time);\n\t        this._oscillator.stop(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Sync the start/stop/pause to the transport \n\t\t *  and the frequency to the bpm of the transport\n\t\t *  @returns {Tone.LFO} this\n\t\t *  @example\n\t\t *  lfo.frequency.value = \"8n\";\n\t\t *  lfo.sync().start(0)\n\t\t *  //the rate of the LFO will always be an eighth note, \n\t\t *  //even as the tempo changes\n\t\t */\n\t    Tone.LFO.prototype.sync = function () {\n\t        this._oscillator.sync();\n\t        this._oscillator.syncFrequency();\n\t        return this;\n\t    };\n\t    /**\n\t\t *  unsync the LFO from transport control\n\t\t *  @returns {Tone.LFO} this\n\t\t */\n\t    Tone.LFO.prototype.unsync = function () {\n\t        this._oscillator.unsync();\n\t        this._oscillator.unsyncFrequency();\n\t        return this;\n\t    };\n\t    /**\n\t\t * The miniumum output of the LFO.\n\t\t * @memberOf Tone.LFO#\n\t\t * @type {number}\n\t\t * @name min\n\t\t */\n\t    Object.defineProperty(Tone.LFO.prototype, 'min', {\n\t        get: function () {\n\t            return this._toUnits(this._scaler.min);\n\t        },\n\t        set: function (min) {\n\t            min = this._fromUnits(min);\n\t            this._scaler.min = min;\n\t        }\n\t    });\n\t    /**\n\t\t * The maximum output of the LFO.\n\t\t * @memberOf Tone.LFO#\n\t\t * @type {number}\n\t\t * @name max\n\t\t */\n\t    Object.defineProperty(Tone.LFO.prototype, 'max', {\n\t        get: function () {\n\t            return this._toUnits(this._scaler.max);\n\t        },\n\t        set: function (max) {\n\t            max = this._fromUnits(max);\n\t            this._scaler.max = max;\n\t        }\n\t    });\n\t    /**\n\t\t * The type of the oscillator: sine, square, sawtooth, triangle. \n\t\t * @memberOf Tone.LFO#\n\t\t * @type {string}\n\t\t * @name type\n\t\t */\n\t    Object.defineProperty(Tone.LFO.prototype, 'type', {\n\t        get: function () {\n\t            return this._oscillator.type;\n\t        },\n\t        set: function (type) {\n\t            this._oscillator.type = type;\n\t            this._stoppedValue = this._oscillator._getInitialValue();\n\t            this._stoppedSignal.value = this._stoppedValue;\n\t        }\n\t    });\n\t    /**\n\t\t * The phase of the LFO.\n\t\t * @memberOf Tone.LFO#\n\t\t * @type {number}\n\t\t * @name phase\n\t\t */\n\t    Object.defineProperty(Tone.LFO.prototype, 'phase', {\n\t        get: function () {\n\t            return this._oscillator.phase;\n\t        },\n\t        set: function (phase) {\n\t            this._oscillator.phase = phase;\n\t            this._stoppedValue = this._oscillator._getInitialValue();\n\t            this._stoppedSignal.value = this._stoppedValue;\n\t        }\n\t    });\n\t    /**\n\t\t * The output units of the LFO.\n\t\t * @memberOf Tone.LFO#\n\t\t * @type {Tone.Type}\n\t\t * @name units\n\t\t */\n\t    Object.defineProperty(Tone.LFO.prototype, 'units', {\n\t        get: function () {\n\t            return this._units;\n\t        },\n\t        set: function (val) {\n\t            var currentMin = this.min;\n\t            var currentMax = this.max;\n\t            //convert the min and the max\n\t            this._units = val;\n\t            this.min = currentMin;\n\t            this.max = currentMax;\n\t        }\n\t    });\n\t    /**\n\t\t * Mute the output. \n\t\t * @memberOf Tone.LFO#\n\t\t * @type {Boolean}\n\t\t * @name mute\n\t\t */\n\t    Object.defineProperty(Tone.LFO.prototype, 'mute', {\n\t        get: function () {\n\t            return this._oscillator.mute;\n\t        },\n\t        set: function (mute) {\n\t            this._oscillator.mute = mute;\n\t        }\n\t    });\n\t    /**\n\t\t *  Returns the playback state of the source, either \"started\" or \"stopped\".\n\t\t *  @type {Tone.State}\n\t\t *  @readOnly\n\t\t *  @memberOf Tone.LFO#\n\t\t *  @name state\n\t\t */\n\t    Object.defineProperty(Tone.LFO.prototype, 'state', {\n\t        get: function () {\n\t            return this._oscillator.state;\n\t        }\n\t    });\n\t    /**\n\t\t *  Connect the output of the LFO to an AudioParam, AudioNode, or Tone Node. \n\t\t *  Tone.LFO will automatically convert to the destination units of the \n\t\t *  will get the units from the connected node.\n\t\t *  @param  {Tone | AudioParam | AudioNode} node \n\t\t *  @param {number} [outputNum=0] optionally which output to connect from\n\t\t *  @param {number} [inputNum=0] optionally which input to connect to\n\t\t *  @returns {Tone.LFO} this\n\t\t *  @private\n\t\t */\n\t    Tone.LFO.prototype.connect = function (node) {\n\t        if (node.constructor === Tone.Signal || node.constructor === Tone.Param || node.constructor === Tone.TimelineSignal) {\n\t            this.convert = node.convert;\n\t            this.units = node.units;\n\t        }\n\t        Tone.Signal.prototype.connect.apply(this, arguments);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  private method borrowed from Param converts \n\t\t *  units from their destination value\n\t\t *  @function\n\t\t *  @private\n\t\t */\n\t    Tone.LFO.prototype._fromUnits = Tone.Param.prototype._fromUnits;\n\t    /**\n\t\t *  private method borrowed from Param converts \n\t\t *  units to their destination value\n\t\t *  @function\n\t\t *  @private\n\t\t */\n\t    Tone.LFO.prototype._toUnits = Tone.Param.prototype._toUnits;\n\t    /**\n\t\t *  disconnect and dispose\n\t\t *  @returns {Tone.LFO} this\n\t\t */\n\t    Tone.LFO.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._writable([\n\t            'amplitude',\n\t            'frequency'\n\t        ]);\n\t        this._oscillator.dispose();\n\t        this._oscillator = null;\n\t        this._stoppedSignal.dispose();\n\t        this._stoppedSignal = null;\n\t        this._zeros.dispose();\n\t        this._zeros = null;\n\t        this._scaler.dispose();\n\t        this._scaler = null;\n\t        this._a2g.dispose();\n\t        this._a2g = null;\n\t        this.frequency = null;\n\t        this.amplitude = null;\n\t        return this;\n\t    };\n\t    return Tone.LFO;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.Limiter will limit the loudness of an incoming signal. \n\t\t *         It is composed of a Tone.Compressor with a fast attack \n\t\t *         and release. Limiters are commonly used to safeguard against \n\t\t *         signal clipping. Unlike a compressor, limiters do not provide \n\t\t *         smooth gain reduction and almost completely prevent \n\t\t *         additional gain above the threshold.\n\t\t *\n\t\t *  @extends {Tone}\n\t\t *  @constructor\n\t\t *  @param {number} threshold The theshold above which the limiting is applied. \n\t\t *  @example\n\t\t *  var limiter = new Tone.Limiter(-6);\n\t\t */\n\t    Tone.Limiter = function () {\n\t        var options = this.optionsObject(arguments, ['threshold'], Tone.Limiter.defaults);\n\t        /**\n\t\t\t *  the compressor\n\t\t\t *  @private\n\t\t\t *  @type {Tone.Compressor}\n\t\t\t */\n\t        this._compressor = this.input = this.output = new Tone.Compressor({\n\t            'attack': 0.001,\n\t            'decay': 0.001,\n\t            'threshold': options.threshold\n\t        });\n\t        /**\n\t\t\t * The threshold of of the limiter\n\t\t\t * @type {Decibel}\n\t\t\t * @signal\n\t\t\t */\n\t        this.threshold = this._compressor.threshold;\n\t        this._readOnly('threshold');\n\t    };\n\t    Tone.extend(Tone.Limiter);\n\t    /**\n\t\t *  The default value\n\t\t *  @type {Object}\n\t\t *  @const\n\t\t *  @static\n\t\t */\n\t    Tone.Limiter.defaults = { 'threshold': -12 };\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.Limiter} this\n\t\t */\n\t    Tone.Limiter.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._compressor.dispose();\n\t        this._compressor = null;\n\t        this._writable('threshold');\n\t        this.threshold = null;\n\t        return this;\n\t    };\n\t    return Tone.Limiter;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.Lowpass is a lowpass feedback comb filter. It is similar to \n\t\t *         Tone.FeedbackCombFilter, but includes a lowpass filter.\n\t\t *\n\t\t *  @extends {Tone}\n\t\t *  @constructor\n\t\t *  @param {Time|Object} [delayTime] The delay time of the comb filter\n\t\t *  @param {NormalRange=} resonance The resonance (feedback) of the comb filter\n\t\t *  @param {Frequency=} dampening The cutoff of the lowpass filter dampens the\n\t\t *                                signal as it is fedback. \n\t\t */\n\t    Tone.LowpassCombFilter = function () {\n\t        this.createInsOuts(1, 1);\n\t        var options = this.optionsObject(arguments, [\n\t            'delayTime',\n\t            'resonance',\n\t            'dampening'\n\t        ], Tone.LowpassCombFilter.defaults);\n\t        /**\n\t\t\t *  the delay node\n\t\t\t *  @type {DelayNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._delay = this.input = new Tone.Delay(options.delayTime);\n\t        /**\n\t\t\t *  The delayTime of the comb filter. \n\t\t\t *  @type {Time}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.delayTime = this._delay.delayTime;\n\t        /**\n\t\t\t *  the lowpass filter\n\t\t\t *  @type  {BiquadFilterNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._lowpass = this.output = this.context.createBiquadFilter();\n\t        this._lowpass.Q.value = -3.0102999566398125;\n\t        this._lowpass.type = 'lowpass';\n\t        /**\n\t\t\t *  The dampening control of the feedback\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.dampening = new Tone.Param({\n\t            'param': this._lowpass.frequency,\n\t            'units': Tone.Type.Frequency,\n\t            'value': options.dampening\n\t        });\n\t        /**\n\t\t\t *  the feedback gain\n\t\t\t *  @type {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._feedback = new Tone.Gain(options.resonance, Tone.Type.NormalRange);\n\t        /**\n\t\t\t *  The amount of feedback of the delayed signal. \n\t\t\t *  @type {NormalRange}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.resonance = this._feedback.gain;\n\t        //connections\n\t        this._delay.chain(this._lowpass, this._feedback, this._delay);\n\t        this._readOnly([\n\t            'dampening',\n\t            'resonance',\n\t            'delayTime'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.LowpassCombFilter);\n\t    /**\n\t\t *  the default parameters\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.LowpassCombFilter.defaults = {\n\t        'delayTime': 0.1,\n\t        'resonance': 0.5,\n\t        'dampening': 3000\n\t    };\n\t    /**\n\t\t *  Clean up. \n\t\t *  @returns {Tone.LowpassCombFilter} this\n\t\t */\n\t    Tone.LowpassCombFilter.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._writable([\n\t            'dampening',\n\t            'resonance',\n\t            'delayTime'\n\t        ]);\n\t        this.dampening.dispose();\n\t        this.dampening = null;\n\t        this.resonance.dispose();\n\t        this.resonance = null;\n\t        this._delay.dispose();\n\t        this._delay = null;\n\t        this.delayTime = null;\n\t        this._lowpass.disconnect();\n\t        this._lowpass = null;\n\t        this._feedback.disconnect();\n\t        this._feedback = null;\n\t        return this;\n\t    };\n\t    return Tone.LowpassCombFilter;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.Merge brings two signals into the left and right \n\t\t *          channels of a single stereo channel.\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone}\n\t\t *  @example\n\t\t * var merge = new Tone.Merge().toMaster();\n\t\t * //routing a sine tone in the left channel\n\t\t * //and noise in the right channel\n\t\t * var osc = new Tone.Oscillator().connect(merge.left);\n\t\t * var noise = new Tone.Noise().connect(merge.right);\n\t\t * //starting our oscillators\n\t\t * noise.start();\n\t\t * osc.start();\n\t\t */\n\t    Tone.Merge = function () {\n\t        this.createInsOuts(2, 0);\n\t        /**\n\t\t\t *  The left input channel.\n\t\t\t *  Alias for <code>input[0]</code>\n\t\t\t *  @type {GainNode}\n\t\t\t */\n\t        this.left = this.input[0] = new Tone.Gain();\n\t        /**\n\t\t\t *  The right input channel.\n\t\t\t *  Alias for <code>input[1]</code>.\n\t\t\t *  @type {GainNode}\n\t\t\t */\n\t        this.right = this.input[1] = new Tone.Gain();\n\t        /**\n\t\t\t *  the merger node for the two channels\n\t\t\t *  @type {ChannelMergerNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._merger = this.output = this.context.createChannelMerger(2);\n\t        //connections\n\t        this.left.connect(this._merger, 0, 0);\n\t        this.right.connect(this._merger, 0, 1);\n\t        this.left.channelCount = 1;\n\t        this.right.channelCount = 1;\n\t        this.left.channelCountMode = 'explicit';\n\t        this.right.channelCountMode = 'explicit';\n\t    };\n\t    Tone.extend(Tone.Merge);\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.Merge} this\n\t\t */\n\t    Tone.Merge.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this.left.dispose();\n\t        this.left = null;\n\t        this.right.dispose();\n\t        this.right = null;\n\t        this._merger.disconnect();\n\t        this._merger = null;\n\t        return this;\n\t    };\n\t    return Tone.Merge;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.Meter gets the [RMS](https://en.wikipedia.org/wiki/Root_mean_square)\n\t\t *          of an input signal with some averaging applied. It can also get the raw \n\t\t *          value of the input signal.\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone}\n\t\t *  @param {String} type Either \"level\" or \"signal\". \n\t\t *  @param {Number} smoothing The amount of smoothing applied between frames.\n\t\t *  @example\n\t\t * var meter = new Tone.Meter();\n\t\t * var mic = new Tone.UserMedia().start();\n\t\t * //connect mic to the meter\n\t\t * mic.connect(meter);\n\t\t * //the current level of the mic input\n\t\t * var level = meter.value;\n\t\t */\n\t    Tone.Meter = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'type',\n\t            'smoothing'\n\t        ], Tone.Meter.defaults);\n\t        /**\n\t\t\t *  The type of the meter, either \"level\" or \"signal\". \n\t\t\t *  A \"level\" meter will return the volume level (rms) of the \n\t\t\t *  input signal and a \"signal\" meter will return\n\t\t\t *  the signal value of the input. \n\t\t\t *  @type  {String}\n\t\t\t */\n\t        this.type = options.type;\n\t        /**\n\t\t\t *  The analyser node which computes the levels.\n\t\t\t *  @private\n\t\t\t *  @type  {Tone.Analyser}\n\t\t\t */\n\t        this.input = this.output = this._analyser = new Tone.Analyser('waveform', 512);\n\t        this._analyser.returnType = 'float';\n\t        /**\n\t\t\t *  The amount of carryover between the current and last frame. \n\t\t\t *  Only applied meter for \"level\" type.\n\t\t\t *  @type  {Number}\n\t\t\t */\n\t        this.smoothing = options.smoothing;\n\t        /**\n\t\t\t *  The last computed value\n\t\t\t *  @type {Number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._lastValue = 0;\n\t    };\n\t    Tone.extend(Tone.Meter);\n\t    /**\n\t\t *  @private\n\t\t *  @enum {String}\n\t\t */\n\t    Tone.Meter.Type = {\n\t        Level: 'level',\n\t        Signal: 'signal'\n\t    };\n\t    /**\n\t\t *  The defaults\n\t\t *  @type {Object}\n\t\t *  @static\n\t\t *  @const\n\t\t */\n\t    Tone.Meter.defaults = {\n\t        'smoothing': 0.8,\n\t        'type': Tone.Meter.Type.Level\n\t    };\n\t    /**\n\t\t * The current value of the meter. A value of 1 is\n\t\t * \"unity\".\n\t\t * @memberOf Tone.Meter#\n\t\t * @type {Number}\n\t\t * @name value\n\t\t * @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.Meter.prototype, 'value', {\n\t        get: function () {\n\t            var signal = this._analyser.analyse();\n\t            if (this.type === Tone.Meter.Type.Level) {\n\t                //rms\n\t                var sum = 0;\n\t                for (var i = 0; i < signal.length; i++) {\n\t                    sum += Math.pow(signal[i], 2);\n\t                }\n\t                var rms = Math.sqrt(sum / signal.length);\n\t                //smooth it\n\t                rms = Math.max(rms, this._lastValue * this.smoothing);\n\t                this._lastValue = rms;\n\t                //scale it\n\t                var unity = 0.35;\n\t                var val = rms / unity;\n\t                //scale the output curve\n\t                return Math.sqrt(val);\n\t            } else {\n\t                return signal[0];\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.Meter} this\n\t\t */\n\t    Tone.Meter.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._analyser.dispose();\n\t        this._analyser = null;\n\t        return this;\n\t    };\n\t    return Tone.Meter;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *\t@class  Tone.Split splits an incoming signal into left and right channels.\n\t\t *\t\n\t\t *  @constructor\n\t\t *  @extends {Tone}\n\t\t *  @example\n\t\t * var split = new Tone.Split();\n\t\t * stereoSignal.connect(split);\n\t\t */\n\t    Tone.Split = function () {\n\t        this.createInsOuts(0, 2);\n\t        /** \n\t\t\t *  @type {ChannelSplitterNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._splitter = this.input = this.context.createChannelSplitter(2);\n\t        /** \n\t\t\t *  Left channel output. \n\t\t\t *  Alias for <code>output[0]</code>\n\t\t\t *  @type {Tone.Gain}\n\t\t\t */\n\t        this.left = this.output[0] = new Tone.Gain();\n\t        /**\n\t\t\t *  Right channel output.\n\t\t\t *  Alias for <code>output[1]</code>\n\t\t\t *  @type {Tone.Gain}\n\t\t\t */\n\t        this.right = this.output[1] = new Tone.Gain();\n\t        //connections\n\t        this._splitter.connect(this.left, 0, 0);\n\t        this._splitter.connect(this.right, 1, 0);\n\t    };\n\t    Tone.extend(Tone.Split);\n\t    /**\n\t\t *  Clean up. \n\t\t *  @returns {Tone.Split} this\n\t\t */\n\t    Tone.Split.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._splitter.disconnect();\n\t        this.left.dispose();\n\t        this.left = null;\n\t        this.right.dispose();\n\t        this.right = null;\n\t        this._splitter = null;\n\t        return this;\n\t    };\n\t    return Tone.Split;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Mid/Side processing separates the the 'mid' signal \n\t\t *         (which comes out of both the left and the right channel) \n\t\t *         and the 'side' (which only comes out of the the side channels). <br><br>\n\t\t *         <code>\n\t\t *         Mid = (Left+Right)/sqrt(2);   // obtain mid-signal from left and right<br>\n\t\t *         Side = (Left-Right)/sqrt(2);   // obtain side-signal from left and righ<br>\n\t\t *         </code>\n\t\t *\n\t\t *  @extends {Tone}\n\t\t *  @constructor\n\t\t */\n\t    Tone.MidSideSplit = function () {\n\t        this.createInsOuts(0, 2);\n\t        /**\n\t\t\t *  split the incoming signal into left and right channels\n\t\t\t *  @type  {Tone.Split}\n\t\t\t *  @private\n\t\t\t */\n\t        this._split = this.input = new Tone.Split();\n\t        /**\n\t\t\t *  The mid send. Connect to mid processing. Alias for\n\t\t\t *  <code>output[0]</code>\n\t\t\t *  @type {Tone.Expr}\n\t\t\t */\n\t        this.mid = this.output[0] = new Tone.Expr('($0 + $1) * $2');\n\t        /**\n\t\t\t *  The side output. Connect to side processing. Alias for\n\t\t\t *  <code>output[1]</code>\n\t\t\t *  @type {Tone.Expr}\n\t\t\t */\n\t        this.side = this.output[1] = new Tone.Expr('($0 - $1) * $2');\n\t        this._split.connect(this.mid, 0, 0);\n\t        this._split.connect(this.mid, 1, 1);\n\t        this._split.connect(this.side, 0, 0);\n\t        this._split.connect(this.side, 1, 1);\n\t        this.context.getConstant(Math.SQRT1_2).connect(this.mid, 0, 2);\n\t        this.context.getConstant(Math.SQRT1_2).connect(this.side, 0, 2);\n\t    };\n\t    Tone.extend(Tone.MidSideSplit);\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.MidSideSplit} this\n\t\t */\n\t    Tone.MidSideSplit.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this.mid.dispose();\n\t        this.mid = null;\n\t        this.side.dispose();\n\t        this.side = null;\n\t        this._split.dispose();\n\t        this._split = null;\n\t        return this;\n\t    };\n\t    return Tone.MidSideSplit;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Mid/Side processing separates the the 'mid' signal \n\t\t *         (which comes out of both the left and the right channel) \n\t\t *         and the 'side' (which only comes out of the the side channels). \n\t\t *         MidSideMerge merges the mid and side signal after they've been seperated\n\t\t *         by Tone.MidSideSplit.<br><br>\n\t\t *         <code>\n\t\t *         Left = (Mid+Side)/sqrt(2);   // obtain left signal from mid and side<br>\n\t\t *         Right = (Mid-Side)/sqrt(2);   // obtain right signal from mid and side<br>\n\t\t *         </code>\n\t\t *\n\t\t *  @extends {Tone.StereoEffect}\n\t\t *  @constructor\n\t\t */\n\t    Tone.MidSideMerge = function () {\n\t        this.createInsOuts(2, 0);\n\t        /**\n\t\t\t *  The mid signal input. Alias for\n\t\t\t *  <code>input[0]</code>\n\t\t\t *  @type  {Tone.Gain}\n\t\t\t */\n\t        this.mid = this.input[0] = new Tone.Gain();\n\t        /**\n\t\t\t *  recombine the mid/side into Left\n\t\t\t *  @type {Tone.Expr}\n\t\t\t *  @private\n\t\t\t */\n\t        this._left = new Tone.Expr('($0 + $1) * $2');\n\t        /**\n\t\t\t *  The side signal input. Alias for\n\t\t\t *  <code>input[1]</code>\n\t\t\t *  @type  {Tone.Gain}\n\t\t\t */\n\t        this.side = this.input[1] = new Tone.Gain();\n\t        /**\n\t\t\t *  recombine the mid/side into Right\n\t\t\t *  @type {Tone.Expr}\n\t\t\t *  @private\n\t\t\t */\n\t        this._right = new Tone.Expr('($0 - $1) * $2');\n\t        /**\n\t\t\t *  Merge the left/right signal back into a stereo signal.\n\t\t\t *  @type {Tone.Merge}\n\t\t\t *  @private\n\t\t\t */\n\t        this._merge = this.output = new Tone.Merge();\n\t        this.mid.connect(this._left, 0, 0);\n\t        this.side.connect(this._left, 0, 1);\n\t        this.mid.connect(this._right, 0, 0);\n\t        this.side.connect(this._right, 0, 1);\n\t        this._left.connect(this._merge, 0, 0);\n\t        this._right.connect(this._merge, 0, 1);\n\t        this.context.getConstant(Math.SQRT1_2).connect(this._left, 0, 2);\n\t        this.context.getConstant(Math.SQRT1_2).connect(this._right, 0, 2);\n\t    };\n\t    Tone.extend(Tone.MidSideMerge);\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.MidSideMerge} this\n\t\t */\n\t    Tone.MidSideMerge.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this.mid.dispose();\n\t        this.mid = null;\n\t        this.side.dispose();\n\t        this.side = null;\n\t        this._left.dispose();\n\t        this._left = null;\n\t        this._right.dispose();\n\t        this._right = null;\n\t        this._merge.dispose();\n\t        this._merge = null;\n\t        return this;\n\t    };\n\t    return Tone.MidSideMerge;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.MidSideCompressor applies two different compressors to the mid\n\t\t *         and side signal components. See Tone.MidSideSplit. \n\t\t *\n\t\t *  @extends {Tone}\n\t\t *  @param {Object} options The options that are passed to the mid and side\n\t\t *                          compressors. \n\t\t *  @constructor\n\t\t */\n\t    Tone.MidSideCompressor = function (options) {\n\t        options = this.defaultArg(options, Tone.MidSideCompressor.defaults);\n\t        /**\n\t\t\t *  the mid/side split\n\t\t\t *  @type  {Tone.MidSideSplit}\n\t\t\t *  @private\n\t\t\t */\n\t        this._midSideSplit = this.input = new Tone.MidSideSplit();\n\t        /**\n\t\t\t *  the mid/side recombination\n\t\t\t *  @type  {Tone.MidSideMerge}\n\t\t\t *  @private\n\t\t\t */\n\t        this._midSideMerge = this.output = new Tone.MidSideMerge();\n\t        /**\n\t\t\t *  The compressor applied to the mid signal\n\t\t\t *  @type  {Tone.Compressor}\n\t\t\t */\n\t        this.mid = new Tone.Compressor(options.mid);\n\t        /**\n\t\t\t *  The compressor applied to the side signal\n\t\t\t *  @type  {Tone.Compressor}\n\t\t\t */\n\t        this.side = new Tone.Compressor(options.side);\n\t        this._midSideSplit.mid.chain(this.mid, this._midSideMerge.mid);\n\t        this._midSideSplit.side.chain(this.side, this._midSideMerge.side);\n\t        this._readOnly([\n\t            'mid',\n\t            'side'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.MidSideCompressor);\n\t    /**\n\t\t *  @const\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.MidSideCompressor.defaults = {\n\t        'mid': {\n\t            'ratio': 3,\n\t            'threshold': -24,\n\t            'release': 0.03,\n\t            'attack': 0.02,\n\t            'knee': 16\n\t        },\n\t        'side': {\n\t            'ratio': 6,\n\t            'threshold': -30,\n\t            'release': 0.25,\n\t            'attack': 0.03,\n\t            'knee': 10\n\t        }\n\t    };\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.MidSideCompressor} this\n\t\t */\n\t    Tone.MidSideCompressor.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._writable([\n\t            'mid',\n\t            'side'\n\t        ]);\n\t        this.mid.dispose();\n\t        this.mid = null;\n\t        this.side.dispose();\n\t        this.side = null;\n\t        this._midSideSplit.dispose();\n\t        this._midSideSplit = null;\n\t        this._midSideMerge.dispose();\n\t        this._midSideMerge = null;\n\t        return this;\n\t    };\n\t    return Tone.MidSideCompressor;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.Mono coerces the incoming mono or stereo signal into a mono signal\n\t\t *         where both left and right channels have the same value. This can be useful \n\t\t *         for [stereo imaging](https://en.wikipedia.org/wiki/Stereo_imaging).\n\t\t *\n\t\t *  @extends {Tone}\n\t\t *  @constructor\n\t\t */\n\t    Tone.Mono = function () {\n\t        this.createInsOuts(1, 0);\n\t        /**\n\t\t\t *  merge the signal\n\t\t\t *  @type {Tone.Merge}\n\t\t\t *  @private\n\t\t\t */\n\t        this._merge = this.output = new Tone.Merge();\n\t        this.input.connect(this._merge, 0, 0);\n\t        this.input.connect(this._merge, 0, 1);\n\t        this.input.gain.value = this.dbToGain(-10);\n\t    };\n\t    Tone.extend(Tone.Mono);\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.Mono} this\n\t\t */\n\t    Tone.Mono.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._merge.dispose();\n\t        this._merge = null;\n\t        return this;\n\t    };\n\t    return Tone.Mono;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class A compressor with seperate controls over low/mid/high dynamics\n\t\t *\n\t\t *  @extends {Tone}\n\t\t *  @constructor\n\t\t *  @param {Object} options The low/mid/high compressor settings.\n\t\t *  @example\n\t\t *  var multiband = new Tone.MultibandCompressor({\n\t\t *  \t\"lowFrequency\" : 200,\n\t\t *  \t\"highFrequency\" : 1300\n\t\t *  \t\"low\" : {\n\t\t *  \t\t\"threshold\" : -12\n\t\t *  \t}\n\t\t *  })\n\t\t */\n\t    Tone.MultibandCompressor = function (options) {\n\t        options = this.defaultArg(arguments, Tone.MultibandCompressor.defaults);\n\t        /**\n\t\t\t *  split the incoming signal into high/mid/low\n\t\t\t *  @type {Tone.MultibandSplit}\n\t\t\t *  @private\n\t\t\t */\n\t        this._splitter = this.input = new Tone.MultibandSplit({\n\t            'lowFrequency': options.lowFrequency,\n\t            'highFrequency': options.highFrequency\n\t        });\n\t        /**\n\t\t\t *  low/mid crossover frequency.\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.lowFrequency = this._splitter.lowFrequency;\n\t        /**\n\t\t\t *  mid/high crossover frequency.\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.highFrequency = this._splitter.highFrequency;\n\t        /**\n\t\t\t *  the output\n\t\t\t *  @type {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this.output = new Tone.Gain();\n\t        /**\n\t\t\t *  The compressor applied to the low frequencies.\n\t\t\t *  @type {Tone.Compressor}\n\t\t\t */\n\t        this.low = new Tone.Compressor(options.low);\n\t        /**\n\t\t\t *  The compressor applied to the mid frequencies.\n\t\t\t *  @type {Tone.Compressor}\n\t\t\t */\n\t        this.mid = new Tone.Compressor(options.mid);\n\t        /**\n\t\t\t *  The compressor applied to the high frequencies.\n\t\t\t *  @type {Tone.Compressor}\n\t\t\t */\n\t        this.high = new Tone.Compressor(options.high);\n\t        //connect the compressor\n\t        this._splitter.low.chain(this.low, this.output);\n\t        this._splitter.mid.chain(this.mid, this.output);\n\t        this._splitter.high.chain(this.high, this.output);\n\t        this._readOnly([\n\t            'high',\n\t            'mid',\n\t            'low',\n\t            'highFrequency',\n\t            'lowFrequency'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.MultibandCompressor);\n\t    /**\n\t\t *  @const\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.MultibandCompressor.defaults = {\n\t        'low': Tone.Compressor.defaults,\n\t        'mid': Tone.Compressor.defaults,\n\t        'high': Tone.Compressor.defaults,\n\t        'lowFrequency': 250,\n\t        'highFrequency': 2000\n\t    };\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.MultibandCompressor} this\n\t\t */\n\t    Tone.MultibandCompressor.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._splitter.dispose();\n\t        this._writable([\n\t            'high',\n\t            'mid',\n\t            'low',\n\t            'highFrequency',\n\t            'lowFrequency'\n\t        ]);\n\t        this.low.dispose();\n\t        this.mid.dispose();\n\t        this.high.dispose();\n\t        this._splitter = null;\n\t        this.low = null;\n\t        this.mid = null;\n\t        this.high = null;\n\t        this.lowFrequency = null;\n\t        this.highFrequency = null;\n\t        return this;\n\t    };\n\t    return Tone.MultibandCompressor;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.Panner is an equal power Left/Right Panner and does not\n\t\t *          support 3D. Panner uses the StereoPannerNode when available. \n\t\t *  \n\t\t *  @constructor\n\t\t *  @extends {Tone}\n\t\t *  @param {NormalRange} [initialPan=0] The initail panner value (defaults to 0 = center)\n\t\t *  @example\n\t\t *  //pan the input signal hard right. \n\t\t *  var panner = new Tone.Panner(1);\n\t\t */\n\t    Tone.Panner = function (initialPan) {\n\t        if (this._hasStereoPanner) {\n\t            /**\n\t\t\t\t *  the panner node\n\t\t\t\t *  @type {StereoPannerNode}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t            this._panner = this.input = this.output = this.context.createStereoPanner();\n\t            /**\n\t\t\t\t *  The pan control. -1 = hard left, 1 = hard right. \n\t\t\t\t *  @type {NormalRange}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t            this.pan = this._panner.pan;\n\t        } else {\n\t            /**\n\t\t\t\t *  the dry/wet knob\n\t\t\t\t *  @type {Tone.CrossFade}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t            this._crossFade = new Tone.CrossFade();\n\t            /**\n\t\t\t\t *  @type {Tone.Merge}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t            this._merger = this.output = new Tone.Merge();\n\t            /**\n\t\t\t\t *  @type {Tone.Split}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t            this._splitter = this.input = new Tone.Split();\n\t            /**\n\t\t\t\t *  The pan control. -1 = hard left, 1 = hard right. \n\t\t\t\t *  @type {AudioRange}\n\t\t\t\t *  @signal\n\t\t\t\t */\n\t            this.pan = new Tone.Signal(0, Tone.Type.AudioRange);\n\t            /**\n\t\t\t\t *  always sends 0\n\t\t\t\t *  @type {Tone.Zero}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t            this._zero = new Tone.Zero();\n\t            /**\n\t\t\t\t *  The analog to gain conversion\n\t\t\t\t *  @type  {Tone.AudioToGain}\n\t\t\t\t *  @private\n\t\t\t\t */\n\t            this._a2g = new Tone.AudioToGain();\n\t            //CONNECTIONS:\n\t            this._zero.connect(this._a2g);\n\t            this.pan.chain(this._a2g, this._crossFade.fade);\n\t            //left channel is a, right channel is b\n\t            this._splitter.connect(this._crossFade, 0, 0);\n\t            this._splitter.connect(this._crossFade, 1, 1);\n\t            //merge it back together\n\t            this._crossFade.a.connect(this._merger, 0, 0);\n\t            this._crossFade.b.connect(this._merger, 0, 1);\n\t        }\n\t        //initial value\n\t        this.pan.value = this.defaultArg(initialPan, 0);\n\t        this._readOnly('pan');\n\t    };\n\t    Tone.extend(Tone.Panner);\n\t    /**\n\t\t *  indicates if the panner is using the new StereoPannerNode internally\n\t\t *  @type  {boolean}\n\t\t *  @private\n\t\t */\n\t    Tone.Panner.prototype._hasStereoPanner = Tone.prototype.isFunction(Tone.context.createStereoPanner);\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.Panner} this\n\t\t */\n\t    Tone.Panner.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._writable('pan');\n\t        if (this._hasStereoPanner) {\n\t            this._panner.disconnect();\n\t            this._panner = null;\n\t            this.pan = null;\n\t        } else {\n\t            this._zero.dispose();\n\t            this._zero = null;\n\t            this._crossFade.dispose();\n\t            this._crossFade = null;\n\t            this._splitter.dispose();\n\t            this._splitter = null;\n\t            this._merger.dispose();\n\t            this._merger = null;\n\t            this.pan.dispose();\n\t            this.pan = null;\n\t            this._a2g.dispose();\n\t            this._a2g = null;\n\t        }\n\t        return this;\n\t    };\n\t    return Tone.Panner;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  A spatialized panner node which supports equalpower or HRTF panning.\n\t\t *          Tries to normalize the API across various browsers. See Tone.Listener\n\t\t *  \n\t\t *  @constructor\n\t\t *  @extends {Tone}\n\t\t *  @param {Number} positionX The initial x position.\n\t\t *  @param {Number} positionY The initial y position.\n\t\t *  @param {Number} positionZ The initial z position.\n\t\t */\n\t    Tone.Panner3D = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'positionX',\n\t            'positionY',\n\t            'positionZ'\n\t        ], Tone.Panner3D.defaults);\n\t        /**\n\t\t\t *  The panner node\n\t\t\t *  @type {PannerNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._panner = this.input = this.output = this.context.createPanner();\n\t        //set some values\n\t        this._panner.panningModel = options.panningModel;\n\t        this._panner.maxDistance = options.maxDistance;\n\t        this._panner.distanceModel = options.distanceModel;\n\t        this._panner.coneOuterGain = options.coneOuterGain;\n\t        this._panner.coneOuterAngle = options.coneOuterAngle;\n\t        this._panner.coneInnerAngle = options.coneInnerAngle;\n\t        this._panner.refDistance = options.refDistance;\n\t        this._panner.rolloffFactor = options.rolloffFactor;\n\t        /**\n\t\t\t *  Holds the current orientation\n\t\t\t *  @type  {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._orientation = [\n\t            options.orientationX,\n\t            options.orientationY,\n\t            options.orientationZ\n\t        ];\n\t        /**\n\t\t\t *  Holds the current position\n\t\t\t *  @type  {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._position = [\n\t            options.positionX,\n\t            options.positionY,\n\t            options.positionZ\n\t        ];\n\t        // set the default position/orientation\n\t        this.orientationX = options.orientationX;\n\t        this.orientationY = options.orientationY;\n\t        this.orientationZ = options.orientationZ;\n\t        this.positionX = options.positionX;\n\t        this.positionY = options.positionY;\n\t        this.positionZ = options.positionZ;\n\t    };\n\t    Tone.extend(Tone.Panner3D);\n\t    /**\n\t\t *  the default parameters\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type {Object}\n\t\t *  Defaults according to the specification\n\t\t */\n\t    Tone.Panner3D.defaults = {\n\t        'positionX': 0,\n\t        'positionY': 0,\n\t        'positionZ': 0,\n\t        'orientationX': 0,\n\t        'orientationY': 0,\n\t        'orientationZ': 0,\n\t        'panningModel': 'equalpower',\n\t        'maxDistance': 10000,\n\t        'distanceModel': 'inverse',\n\t        'coneOuterGain': 0,\n\t        'coneOuterAngle': 360,\n\t        'coneInnerAngle': 360,\n\t        'refDistance': 1,\n\t        'rolloffFactor': 1\n\t    };\n\t    /**\n\t\t * The ramp time which is applied to the setTargetAtTime\n\t\t * @type {Number}\n\t\t * @private\n\t\t */\n\t    Tone.Panner3D.prototype._rampTimeConstant = 0.01;\n\t    /**\n\t\t *  Sets the position of the source in 3d space.\t\n\t\t *  @param  {Number}  x\n\t\t *  @param  {Number}  y\n\t\t *  @param  {Number}  z\n\t\t *  @return {Tone.Panner3D} this\n\t\t */\n\t    Tone.Panner3D.prototype.setPosition = function (x, y, z) {\n\t        if (this._panner.positionX) {\n\t            var now = this.now();\n\t            this._panner.positionX.setTargetAtTime(x, now, this._rampTimeConstant);\n\t            this._panner.positionY.setTargetAtTime(y, now, this._rampTimeConstant);\n\t            this._panner.positionZ.setTargetAtTime(z, now, this._rampTimeConstant);\n\t        } else {\n\t            this._panner.setPosition(x, y, z);\n\t        }\n\t        this._position = Array.prototype.slice.call(arguments);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Sets the orientation of the source in 3d space.\t\n\t\t *  @param  {Number}  x\n\t\t *  @param  {Number}  y\n\t\t *  @param  {Number}  z\n\t\t *  @return {Tone.Panner3D} this\n\t\t */\n\t    Tone.Panner3D.prototype.setOrientation = function (x, y, z) {\n\t        if (this._panner.orientationX) {\n\t            var now = this.now();\n\t            this._panner.orientationX.setTargetAtTime(x, now, this._rampTimeConstant);\n\t            this._panner.orientationY.setTargetAtTime(y, now, this._rampTimeConstant);\n\t            this._panner.orientationZ.setTargetAtTime(z, now, this._rampTimeConstant);\n\t        } else {\n\t            this._panner.setOrientation(x, y, z);\n\t        }\n\t        this._orientation = Array.prototype.slice.call(arguments);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  The x position of the panner object.\n\t\t *  @type {Number}\n\t\t *  @memberOf Tone.Panner3D#\n\t\t *  @name positionX\n\t\t */\n\t    Object.defineProperty(Tone.Panner3D.prototype, 'positionX', {\n\t        set: function (pos) {\n\t            this._position[0] = pos;\n\t            this.setPosition.apply(this, this._position);\n\t        },\n\t        get: function () {\n\t            return this._position[0];\n\t        }\n\t    });\n\t    /**\n\t\t *  The y position of the panner object.\n\t\t *  @type {Number}\n\t\t *  @memberOf Tone.Panner3D#\n\t\t *  @name positionY\n\t\t */\n\t    Object.defineProperty(Tone.Panner3D.prototype, 'positionY', {\n\t        set: function (pos) {\n\t            this._position[1] = pos;\n\t            this.setPosition.apply(this, this._position);\n\t        },\n\t        get: function () {\n\t            return this._position[1];\n\t        }\n\t    });\n\t    /**\n\t\t *  The z position of the panner object.\n\t\t *  @type {Number}\n\t\t *  @memberOf Tone.Panner3D#\n\t\t *  @name positionZ\n\t\t */\n\t    Object.defineProperty(Tone.Panner3D.prototype, 'positionZ', {\n\t        set: function (pos) {\n\t            this._position[2] = pos;\n\t            this.setPosition.apply(this, this._position);\n\t        },\n\t        get: function () {\n\t            return this._position[2];\n\t        }\n\t    });\n\t    /**\n\t\t *  The x orientation of the panner object.\n\t\t *  @type {Number}\n\t\t *  @memberOf Tone.Panner3D#\n\t\t *  @name orientationX\n\t\t */\n\t    Object.defineProperty(Tone.Panner3D.prototype, 'orientationX', {\n\t        set: function (pos) {\n\t            this._orientation[0] = pos;\n\t            this.setOrientation.apply(this, this._orientation);\n\t        },\n\t        get: function () {\n\t            return this._orientation[0];\n\t        }\n\t    });\n\t    /**\n\t\t *  The y orientation of the panner object.\n\t\t *  @type {Number}\n\t\t *  @memberOf Tone.Panner3D#\n\t\t *  @name orientationY\n\t\t */\n\t    Object.defineProperty(Tone.Panner3D.prototype, 'orientationY', {\n\t        set: function (pos) {\n\t            this._orientation[1] = pos;\n\t            this.setOrientation.apply(this, this._orientation);\n\t        },\n\t        get: function () {\n\t            return this._orientation[1];\n\t        }\n\t    });\n\t    /**\n\t\t *  The z orientation of the panner object.\n\t\t *  @type {Number}\n\t\t *  @memberOf Tone.Panner3D#\n\t\t *  @name orientationZ\n\t\t */\n\t    Object.defineProperty(Tone.Panner3D.prototype, 'orientationZ', {\n\t        set: function (pos) {\n\t            this._orientation[2] = pos;\n\t            this.setOrientation.apply(this, this._orientation);\n\t        },\n\t        get: function () {\n\t            return this._orientation[2];\n\t        }\n\t    });\n\t    /**\n\t\t *  Proxy a property on the panner to an exposed public propery\n\t\t *  @param  {String}  prop\n\t\t *  @private\n\t\t */\n\t    Tone.Panner3D._aliasProperty = function (prop) {\n\t        Object.defineProperty(Tone.Panner3D.prototype, prop, {\n\t            set: function (val) {\n\t                this._panner[prop] = val;\n\t            },\n\t            get: function () {\n\t                return this._panner[prop];\n\t            }\n\t        });\n\t    };\n\t    /**\n\t\t *  The panning model. Either \"equalpower\" or \"HRTF\".\n\t\t *  @type {String}\n\t\t *  @memberOf Tone.Panner3D#\n\t\t *  @name panningModel\n\t\t */\n\t    Tone.Panner3D._aliasProperty('panningModel');\n\t    /**\n\t\t *  A reference distance for reducing volume as source move further from the listener\n\t\t *  @type {Number}\n\t\t *  @memberOf Tone.Panner3D#\n\t\t *  @name refDistance\n\t\t */\n\t    Tone.Panner3D._aliasProperty('refDistance');\n\t    /**\n\t\t *  Describes how quickly the volume is reduced as source moves away from listener.\n\t\t *  @type {Number}\n\t\t *  @memberOf Tone.Panner3D#\n\t\t *  @name rolloffFactor\n\t\t */\n\t    Tone.Panner3D._aliasProperty('rolloffFactor');\n\t    /**\n\t\t *  The distance model used by,  \"linear\", \"inverse\", or \"exponential\".\n\t\t *  @type {String}\n\t\t *  @memberOf Tone.Panner3D#\n\t\t *  @name distanceModel\n\t\t */\n\t    Tone.Panner3D._aliasProperty('distanceModel');\n\t    /**\n\t\t *  The angle, in degrees, inside of which there will be no volume reduction\n\t\t *  @type {Degrees}\n\t\t *  @memberOf Tone.Panner3D#\n\t\t *  @name coneInnerAngle\n\t\t */\n\t    Tone.Panner3D._aliasProperty('coneInnerAngle');\n\t    /**\n\t\t *  The angle, in degrees, outside of which the volume will be reduced \n\t\t *  to a constant value of coneOuterGain\n\t\t *  @type {Degrees}\n\t\t *  @memberOf Tone.Panner3D#\n\t\t *  @name coneOuterAngle\n\t\t */\n\t    Tone.Panner3D._aliasProperty('coneOuterAngle');\n\t    /**\n\t\t *  The gain outside of the coneOuterAngle\n\t\t *  @type {Gain}\n\t\t *  @memberOf Tone.Panner3D#\n\t\t *  @name coneOuterGain\n\t\t */\n\t    Tone.Panner3D._aliasProperty('coneOuterGain');\n\t    /**\n\t\t *  The maximum distance between source and listener, \n\t\t *  after which the volume will not be reduced any further.\n\t\t *  @type {Positive}\n\t\t *  @memberOf Tone.Panner3D#\n\t\t *  @name maxDistance\n\t\t */\n\t    Tone.Panner3D._aliasProperty('maxDistance');\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.Panner3D} this\n\t\t */\n\t    Tone.Panner3D.prototype.dispose = function () {\n\t        this._panner.disconnect();\n\t        this._panner = null;\n\t        this._orientation = null;\n\t        this._position = null;\n\t        return this;\n\t    };\n\t    return Tone.Panner3D;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.PanVol is a Tone.Panner and Tone.Volume in one.\n\t\t *\n\t\t *  @extends {Tone}\n\t\t *  @constructor\n\t\t *  @param {AudioRange} pan the initial pan\n\t\t *  @param {number} volume The output volume. \n\t\t *  @example\n\t\t * //pan the incoming signal left and drop the volume\n\t\t * var panVol = new Tone.PanVol(0.25, -12);\n\t\t */\n\t    Tone.PanVol = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'pan',\n\t            'volume'\n\t        ], Tone.PanVol.defaults);\n\t        /**\n\t\t\t *  The panning node\n\t\t\t *  @type {Tone.Panner}\n\t\t\t *  @private\n\t\t\t */\n\t        this._panner = this.input = new Tone.Panner(options.pan);\n\t        /**\n\t\t\t *  The L/R panning control.\n\t\t\t *  @type {AudioRange}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.pan = this._panner.pan;\n\t        /**\n\t\t\t *  The volume node\n\t\t\t *  @type {Tone.Volume}\n\t\t\t */\n\t        this._volume = this.output = new Tone.Volume(options.volume);\n\t        /**\n\t\t\t *  The volume control in decibels. \n\t\t\t *  @type {Decibels}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.volume = this._volume.volume;\n\t        //connections\n\t        this._panner.connect(this._volume);\n\t        this._readOnly([\n\t            'pan',\n\t            'volume'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.PanVol);\n\t    /**\n\t\t *  The defaults\n\t\t *  @type  {Object}\n\t\t *  @const\n\t\t *  @static\n\t\t */\n\t    Tone.PanVol.defaults = {\n\t        'pan': 0.5,\n\t        'volume': 0\n\t    };\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.PanVol} this\n\t\t */\n\t    Tone.PanVol.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._writable([\n\t            'pan',\n\t            'volume'\n\t        ]);\n\t        this._panner.dispose();\n\t        this._panner = null;\n\t        this.pan = null;\n\t        this._volume.dispose();\n\t        this._volume = null;\n\t        this.volume = null;\n\t        return this;\n\t    };\n\t    return Tone.PanVol;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.CtrlInterpolate will interpolate between given values based\n\t\t *         on the \"index\" property. Passing in an array or object literal\n\t\t *         will interpolate each of the parameters. Note (i.e. \"C3\")\n\t\t *         and Time (i.e. \"4n + 2\") can be interpolated. All other values are\n\t\t *         assumed to be numbers. \n\t\t *  @example\n\t\t * var interp = new Tone.CtrlInterpolate([0, 2, 9, 4]);\n\t\t * interp.index = 0.75;\n\t\t * interp.value; //returns 1.5\n\t\t *\n\t\t *  @example\n\t\t * var interp = new Tone.CtrlInterpolate([\n\t\t * \t[2, 4, 5],\n\t\t * \t[9, 3, 2],\n\t\t * ]);\n\t\t * @param {Array} values The array of values to interpolate over\n\t\t * @param {Positive} index The initial interpolation index.\n\t\t * @extends {Tone}\n\t\t */\n\t    Tone.CtrlInterpolate = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'values',\n\t            'index'\n\t        ], Tone.CtrlInterpolate.defaults);\n\t        /**\n\t\t\t *  The values to interpolate between\n\t\t\t *  @type  {Array}\n\t\t\t */\n\t        this.values = options.values;\n\t        /**\n\t\t\t *  The interpolated index between values. For example: a value of 1.5\n\t\t\t *  would interpolate equally between the value at index 1\n\t\t\t *  and the value at index 2. \n\t\t\t *  @example\n\t\t\t * interp.index = 0; \n\t\t\t * interp.value; //returns the value at 0\n\t\t\t * interp.index = 0.5;\n\t\t\t * interp.value; //returns the value between indices 0 and 1. \n\t\t\t *  @type  {Positive}\n\t\t\t */\n\t        this.index = options.index;\n\t    };\n\t    Tone.extend(Tone.CtrlInterpolate);\n\t    /**\n\t\t *  The defaults\n\t\t *  @const\n\t\t *  @type  {Object}\n\t\t */\n\t    Tone.CtrlInterpolate.defaults = {\n\t        'index': 0,\n\t        'values': []\n\t    };\n\t    /**\n\t\t *  The current interpolated value based on the index\n\t\t *  @readOnly\n\t\t *  @memberOf Tone.CtrlInterpolate#\n\t\t *  @type {*}\n\t\t *  @name value\n\t\t */\n\t    Object.defineProperty(Tone.CtrlInterpolate.prototype, 'value', {\n\t        get: function () {\n\t            var index = this.index;\n\t            index = Math.min(index, this.values.length - 1);\n\t            var lowerPosition = Math.floor(index);\n\t            var lower = this.values[lowerPosition];\n\t            var upper = this.values[Math.ceil(index)];\n\t            return this._interpolate(index - lowerPosition, lower, upper);\n\t        }\n\t    });\n\t    /**\n\t\t *  Internal interpolation routine\n\t\t *  @param  {NormalRange}  index  The index between the lower and upper\n\t\t *  @param  {*}  lower \n\t\t *  @param  {*}  upper \n\t\t *  @return  {*}  The interpolated value\n\t\t *  @private\n\t\t */\n\t    Tone.CtrlInterpolate.prototype._interpolate = function (index, lower, upper) {\n\t        if (this.isArray(lower)) {\n\t            var retArray = [];\n\t            for (var i = 0; i < lower.length; i++) {\n\t                retArray[i] = this._interpolate(index, lower[i], upper[i]);\n\t            }\n\t            return retArray;\n\t        } else if (this.isObject(lower)) {\n\t            var retObj = {};\n\t            for (var attr in lower) {\n\t                retObj[attr] = this._interpolate(index, lower[attr], upper[attr]);\n\t            }\n\t            return retObj;\n\t        } else {\n\t            lower = this._toNumber(lower);\n\t            upper = this._toNumber(upper);\n\t            return (1 - index) * lower + index * upper;\n\t        }\n\t    };\n\t    /**\n\t\t *  Convert from the given type into a number\n\t\t *  @param  {Number|String}  value\n\t\t *  @return  {Number}\n\t\t *  @private\n\t\t */\n\t    Tone.CtrlInterpolate.prototype._toNumber = function (val) {\n\t        if (this.isNumber(val)) {\n\t            return val;\n\t        } else {\n\t            //otherwise assume that it's Time...\n\t            return this.toSeconds(val);\n\t        }\n\t    };\n\t    /**\n\t\t *  Clean up\n\t\t *  @return  {Tone.CtrlInterpolate}  this\n\t\t */\n\t    Tone.CtrlInterpolate.prototype.dispose = function () {\n\t        this.values = null;\n\t    };\n\t    return Tone.CtrlInterpolate;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.CtrlMarkov represents a Markov Chain where each call\n\t\t *         to Tone.CtrlMarkov.next will move to the next state. If the next\n\t\t *         state choice is an array, the next state is chosen randomly with\n\t\t *         even probability for all of the choices. For a weighted probability\n\t\t *         of the next choices, pass in an object with \"state\" and \"probability\" attributes. \n\t\t *         The probabilities will be normalized and then chosen. If no next options\n\t\t *         are given for the current state, the state will stay there. \n\t\t *  @extends {Tone}\n\t\t *  @example\n\t\t * var chain = new Tone.CtrlMarkov({\n\t\t * \t\"beginning\" : [\"end\", \"middle\"],\n\t\t * \t\"middle\" : \"end\"\n\t\t * });\n\t\t * chain.value = \"beginning\";\n\t\t * chain.next(); //returns \"end\" or \"middle\" with 50% probability\n\t\t *\n\t\t *  @example\n\t\t * var chain = new Tone.CtrlMarkov({\n\t\t * \t\"beginning\" : [{\"value\" : \"end\", \"probability\" : 0.8}, \n\t\t * \t\t\t\t\t{\"value\" : \"middle\", \"probability\" : 0.2}],\n\t\t * \t\"middle\" : \"end\"\n\t\t * });\n\t\t * chain.value = \"beginning\";\n\t\t * chain.next(); //returns \"end\" with 80% probability or \"middle\" with 20%.\n\t\t *  @param {Object} values An object with the state names as the keys\n\t\t *                         and the next state(s) as the values. \n\t\t */\n\t    Tone.CtrlMarkov = function (values, initial) {\n\t        /**\n\t\t\t *  The Markov values with states as the keys\n\t\t\t *  and next state(s) as the values. \n\t\t\t *  @type {Object}\n\t\t\t */\n\t        this.values = this.defaultArg(values, {});\n\t        /**\n\t\t\t *  The current state of the Markov values. The next\n\t\t\t *  state will be evaluated and returned when Tone.CtrlMarkov.next\n\t\t\t *  is invoked.\n\t\t\t *  @type {String}\n\t\t\t */\n\t        this.value = this.defaultArg(initial, Object.keys(this.values)[0]);\n\t    };\n\t    Tone.extend(Tone.CtrlMarkov);\n\t    /**\n\t\t *  Returns the next state of the Markov values. \n\t\t *  @return  {String}\n\t\t */\n\t    Tone.CtrlMarkov.prototype.next = function () {\n\t        if (this.values.hasOwnProperty(this.value)) {\n\t            var next = this.values[this.value];\n\t            if (this.isArray(next)) {\n\t                var distribution = this._getProbDistribution(next);\n\t                var rand = Math.random();\n\t                var total = 0;\n\t                for (var i = 0; i < distribution.length; i++) {\n\t                    var dist = distribution[i];\n\t                    if (rand > total && rand < total + dist) {\n\t                        var chosen = next[i];\n\t                        if (this.isObject(chosen)) {\n\t                            this.value = chosen.value;\n\t                        } else {\n\t                            this.value = chosen;\n\t                        }\n\t                    }\n\t                    total += dist;\n\t                }\n\t            } else {\n\t                this.value = next;\n\t            }\n\t        }\n\t        return this.value;\n\t    };\n\t    /**\n\t\t *  Choose randomly from an array weighted options in the form \n\t\t *  {\"state\" : string, \"probability\" : number} or an array of values\n\t\t *  @param  {Array}  options \n\t\t *  @return  {Array}  The randomly selected choice\n\t\t *  @private\n\t\t */\n\t    Tone.CtrlMarkov.prototype._getProbDistribution = function (options) {\n\t        var distribution = [];\n\t        var total = 0;\n\t        var needsNormalizing = false;\n\t        for (var i = 0; i < options.length; i++) {\n\t            var option = options[i];\n\t            if (this.isObject(option)) {\n\t                needsNormalizing = true;\n\t                distribution[i] = option.probability;\n\t            } else {\n\t                distribution[i] = 1 / options.length;\n\t            }\n\t            total += distribution[i];\n\t        }\n\t        if (needsNormalizing) {\n\t            //normalize the values\n\t            for (var j = 0; j < distribution.length; j++) {\n\t                distribution[j] = distribution[j] / total;\n\t            }\n\t        }\n\t        return distribution;\n\t    };\n\t    /**\n\t\t *  Clean up\n\t\t *  @return  {Tone.CtrlMarkov}  this\n\t\t */\n\t    Tone.CtrlMarkov.prototype.dispose = function () {\n\t        this.values = null;\n\t    };\n\t    return Tone.CtrlMarkov;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Generate patterns from an array of values.\n\t\t *         Has a number of arpeggiation and randomized\n\t\t *         selection patterns. \n\t\t *           <ul>\n\t\t *  \t        <li>\"up\" - cycles upward</li>\n\t\t *  \t\t\t<li>\"down\" - cycles downward</li>\n\t\t *  \t\t\t<li>\"upDown\" - up then and down</li>\n\t\t *  \t\t\t<li>\"downUp\" - cycles down then and up</li>\n\t\t *  \t\t\t<li>\"alternateUp\" - jump up two and down one</li>\n\t\t *  \t\t\t<li>\"alternateDown\" - jump down two and up one</li>\n\t\t *  \t\t\t<li>\"random\" - randomly select an index</li>\n\t\t *  \t\t\t<li>\"randomWalk\" - randomly moves one index away from the current position</li>\n\t\t *  \t\t\t<li>\"randomOnce\" - randomly select an index without repeating until all values have been chosen.</li>\n\t\t *     \t\t</ul>\n\t\t *  @param  {Array}  values   An array of options to choose from.\n\t\t *  @param  {Tone.CtrlPattern.Type=}  type  The name of the pattern.\n\t\t *  @extends {Tone}\n\t\t */\n\t    Tone.CtrlPattern = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'values',\n\t            'type'\n\t        ], Tone.CtrlPattern.defaults);\n\t        /**\n\t\t\t *  The array of values to arpeggiate over\n\t\t\t *  @type {Array}\n\t\t\t */\n\t        this.values = options.values;\n\t        /**\n\t\t\t *  The current position in the values array\n\t\t\t *  @type  {Number}\n\t\t\t */\n\t        this.index = 0;\n\t        /**\n\t\t\t *  The type placeholder\n\t\t\t *  @type {Tone.CtrlPattern.Type}\n\t\t\t *  @private\n\t\t\t */\n\t        this._type = null;\n\t        /**\n\t\t\t *  Shuffled values for the RandomOnce type\n\t\t\t *  @type {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._shuffled = null;\n\t        /**\n\t\t\t *  The direction of the movement\n\t\t\t *  @type {String}\n\t\t\t *  @private\n\t\t\t */\n\t        this._direction = null;\n\t        this.type = options.type;\n\t    };\n\t    Tone.extend(Tone.CtrlPattern);\n\t    /**\n\t\t *  The Control Patterns\n\t\t *  @type  {Object}\n\t\t *  @static\n\t\t */\n\t    Tone.CtrlPattern.Type = {\n\t        Up: 'up',\n\t        Down: 'down',\n\t        UpDown: 'upDown',\n\t        DownUp: 'downUp',\n\t        AlternateUp: 'alternateUp',\n\t        AlternateDown: 'alternateDown',\n\t        Random: 'random',\n\t        RandomWalk: 'randomWalk',\n\t        RandomOnce: 'randomOnce'\n\t    };\n\t    /**\n\t\t *  The default values. \n\t\t *  @type  {Object}\n\t\t */\n\t    Tone.CtrlPattern.defaults = {\n\t        'type': Tone.CtrlPattern.Type.Up,\n\t        'values': []\n\t    };\n\t    /**\n\t\t *  The value at the current index of the pattern.\n\t\t *  @readOnly\n\t\t *  @memberOf Tone.CtrlPattern#\n\t\t *  @type {*}\n\t\t *  @name value\n\t\t */\n\t    Object.defineProperty(Tone.CtrlPattern.prototype, 'value', {\n\t        get: function () {\n\t            //some safeguards\n\t            if (this.values.length === 0) {\n\t                return;\n\t            } else if (this.values.length === 1) {\n\t                return this.values[0];\n\t            }\n\t            this.index = Math.min(this.index, this.values.length - 1);\n\t            var val = this.values[this.index];\n\t            if (this.type === Tone.CtrlPattern.Type.RandomOnce) {\n\t                if (this.values.length !== this._shuffled.length) {\n\t                    this._shuffleValues();\n\t                }\n\t                val = this.values[this._shuffled[this.index]];\n\t            }\n\t            return val;\n\t        }\n\t    });\n\t    /**\n\t\t *  The pattern used to select the next\n\t\t *  item from the values array\n\t\t *  @memberOf Tone.CtrlPattern#\n\t\t *  @type {Tone.CtrlPattern.Type}\n\t\t *  @name type\n\t\t */\n\t    Object.defineProperty(Tone.CtrlPattern.prototype, 'type', {\n\t        get: function () {\n\t            return this._type;\n\t        },\n\t        set: function (type) {\n\t            this._type = type;\n\t            this._shuffled = null;\n\t            //the first index\n\t            if (this._type === Tone.CtrlPattern.Type.Up || this._type === Tone.CtrlPattern.Type.UpDown || this._type === Tone.CtrlPattern.Type.RandomOnce || this._type === Tone.CtrlPattern.Type.AlternateUp) {\n\t                this.index = 0;\n\t            } else if (this._type === Tone.CtrlPattern.Type.Down || this._type === Tone.CtrlPattern.Type.DownUp || this._type === Tone.CtrlPattern.Type.AlternateDown) {\n\t                this.index = this.values.length - 1;\n\t            }\n\t            //the direction\n\t            if (this._type === Tone.CtrlPattern.Type.UpDown || this._type === Tone.CtrlPattern.Type.AlternateUp) {\n\t                this._direction = Tone.CtrlPattern.Type.Up;\n\t            } else if (this._type === Tone.CtrlPattern.Type.DownUp || this._type === Tone.CtrlPattern.Type.AlternateDown) {\n\t                this._direction = Tone.CtrlPattern.Type.Down;\n\t            }\n\t            //randoms\n\t            if (this._type === Tone.CtrlPattern.Type.RandomOnce) {\n\t                this._shuffleValues();\n\t            } else if (this._type === Tone.CtrlPattern.Random) {\n\t                this.index = Math.floor(Math.random() * this.values.length);\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  Return the next value given the current position\n\t\t *  and pattern.\n\t\t *  @return {*} The next value\n\t\t */\n\t    Tone.CtrlPattern.prototype.next = function () {\n\t        var type = this.type;\n\t        //choose the next index\n\t        if (type === Tone.CtrlPattern.Type.Up) {\n\t            this.index++;\n\t            if (this.index >= this.values.length) {\n\t                this.index = 0;\n\t            }\n\t        } else if (type === Tone.CtrlPattern.Type.Down) {\n\t            this.index--;\n\t            if (this.index < 0) {\n\t                this.index = this.values.length - 1;\n\t            }\n\t        } else if (type === Tone.CtrlPattern.Type.UpDown || type === Tone.CtrlPattern.Type.DownUp) {\n\t            if (this._direction === Tone.CtrlPattern.Type.Up) {\n\t                this.index++;\n\t            } else {\n\t                this.index--;\n\t            }\n\t            if (this.index < 0) {\n\t                this.index = 1;\n\t                this._direction = Tone.CtrlPattern.Type.Up;\n\t            } else if (this.index >= this.values.length) {\n\t                this.index = this.values.length - 2;\n\t                this._direction = Tone.CtrlPattern.Type.Down;\n\t            }\n\t        } else if (type === Tone.CtrlPattern.Type.Random) {\n\t            this.index = Math.floor(Math.random() * this.values.length);\n\t        } else if (type === Tone.CtrlPattern.Type.RandomWalk) {\n\t            if (Math.random() < 0.5) {\n\t                this.index--;\n\t                this.index = Math.max(this.index, 0);\n\t            } else {\n\t                this.index++;\n\t                this.index = Math.min(this.index, this.values.length - 1);\n\t            }\n\t        } else if (type === Tone.CtrlPattern.Type.RandomOnce) {\n\t            this.index++;\n\t            if (this.index >= this.values.length) {\n\t                this.index = 0;\n\t                //reshuffle the values for next time\n\t                this._shuffleValues();\n\t            }\n\t        } else if (type === Tone.CtrlPattern.Type.AlternateUp) {\n\t            if (this._direction === Tone.CtrlPattern.Type.Up) {\n\t                this.index += 2;\n\t                this._direction = Tone.CtrlPattern.Type.Down;\n\t            } else {\n\t                this.index -= 1;\n\t                this._direction = Tone.CtrlPattern.Type.Up;\n\t            }\n\t            if (this.index >= this.values.length) {\n\t                this.index = 0;\n\t                this._direction = Tone.CtrlPattern.Type.Up;\n\t            }\n\t        } else if (type === Tone.CtrlPattern.Type.AlternateDown) {\n\t            if (this._direction === Tone.CtrlPattern.Type.Up) {\n\t                this.index += 1;\n\t                this._direction = Tone.CtrlPattern.Type.Down;\n\t            } else {\n\t                this.index -= 2;\n\t                this._direction = Tone.CtrlPattern.Type.Up;\n\t            }\n\t            if (this.index < 0) {\n\t                this.index = this.values.length - 1;\n\t                this._direction = Tone.CtrlPattern.Type.Down;\n\t            }\n\t        }\n\t        return this.value;\n\t    };\n\t    /**\n\t\t *  Shuffles the values and places the results into the _shuffled\n\t\t *  @private\n\t\t */\n\t    Tone.CtrlPattern.prototype._shuffleValues = function () {\n\t        var copy = [];\n\t        this._shuffled = [];\n\t        for (var i = 0; i < this.values.length; i++) {\n\t            copy[i] = i;\n\t        }\n\t        while (copy.length > 0) {\n\t            var randVal = copy.splice(Math.floor(copy.length * Math.random()), 1);\n\t            this._shuffled.push(randVal[0]);\n\t        }\n\t    };\n\t    /**\n\t\t *  Clean up\n\t\t *  @returns {Tone.CtrlPattern} this\n\t\t */\n\t    Tone.CtrlPattern.prototype.dispose = function () {\n\t        this._shuffled = null;\n\t        this.values = null;\n\t    };\n\t    return Tone.CtrlPattern;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Choose a random value.\n\t\t *  @extends {Tone}\n\t\t *  @example\n\t\t * var randomWalk = new Tone.CtrlRandom({\n\t\t * \t\"min\" : 0,\n\t\t * \t\"max\" : 10,\n\t\t * \t\"integer\" : true\n\t\t * });\n\t\t * randomWalk.eval();\n\t\t *\n\t\t *  @param {Number|Time=} min The minimum return value.\n\t\t *  @param {Number|Time=} max The maximum return value.\n\t\t */\n\t    Tone.CtrlRandom = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'min',\n\t            'max'\n\t        ], Tone.CtrlRandom.defaults);\n\t        /**\n\t\t\t *  The minimum return value\n\t\t\t *  @type  {Number|Time}\n\t\t\t */\n\t        this.min = options.min;\n\t        /**\n\t\t\t *  The maximum return value\n\t\t\t *  @type  {Number|Time}\n\t\t\t */\n\t        this.max = options.max;\n\t        /**\n\t\t\t *  If the return value should be an integer\n\t\t\t *  @type  {Boolean}\n\t\t\t */\n\t        this.integer = options.integer;\n\t    };\n\t    Tone.extend(Tone.CtrlRandom);\n\t    /**\n\t\t *  The defaults\n\t\t *  @const\n\t\t *  @type  {Object}\n\t\t */\n\t    Tone.CtrlRandom.defaults = {\n\t        'min': 0,\n\t        'max': 1,\n\t        'integer': false\n\t    };\n\t    /**\n\t\t *  Return a random value between min and max. \n\t\t *  @readOnly\n\t\t *  @memberOf Tone.CtrlRandom#\n\t\t *  @type {*}\n\t\t *  @name value\n\t\t */\n\t    Object.defineProperty(Tone.CtrlRandom.prototype, 'value', {\n\t        get: function () {\n\t            var min = this.toSeconds(this.min);\n\t            var max = this.toSeconds(this.max);\n\t            var rand = Math.random();\n\t            var val = rand * min + (1 - rand) * max;\n\t            if (this.integer) {\n\t                val = Math.floor(val);\n\t            }\n\t            return val;\n\t        }\n\t    });\n\t    return Tone.CtrlRandom;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  AudioBuffer.copyToChannel polyfill\n\t\t *  @private\n\t\t */\n\t    if (window.AudioBuffer && !AudioBuffer.prototype.copyToChannel) {\n\t        AudioBuffer.prototype.copyToChannel = function (src, chanNum, start) {\n\t            var channel = this.getChannelData(chanNum);\n\t            start = start || 0;\n\t            for (var i = 0; i < channel.length; i++) {\n\t                channel[i + start] = src[i];\n\t            }\n\t        };\n\t        AudioBuffer.prototype.copyFromChannel = function (dest, chanNum, start) {\n\t            var channel = this.getChannelData(chanNum);\n\t            start = start || 0;\n\t            for (var i = 0; i < channel.length; i++) {\n\t                dest[i] = channel[i + start];\n\t            }\n\t        };\n\t    }\n\t    /**\n\t\t *  @class  Buffer loading and storage. Tone.Buffer is used internally by all \n\t\t *          classes that make requests for audio files such as Tone.Player,\n\t\t *          Tone.Sampler and Tone.Convolver.\n\t\t *          <br><br>\n\t\t *          Aside from load callbacks from individual buffers, Tone.Buffer \n\t\t *  \t\tprovides static methods which keep track of the loading progress \n\t\t *  \t\tof all of the buffers. These methods are Tone.Buffer.on(\"load\" / \"progress\" / \"error\")\n\t\t *\n\t\t *  @constructor \n\t\t *  @extends {Tone}\n\t\t *  @param {AudioBuffer|string} url The url to load, or the audio buffer to set. \n\t\t *  @param {Function=} onload A callback which is invoked after the buffer is loaded. \n\t\t *                            It's recommended to use Tone.Buffer.onload instead \n\t\t *                            since it will give you a callback when ALL buffers are loaded.\n\t\t *  @param {Function=} onerror The callback to invoke if there is an error\n\t\t *  @example\n\t\t * var buffer = new Tone.Buffer(\"path/to/sound.mp3\", function(){\n\t\t * \t//the buffer is now available.\n\t\t * \tvar buff = buffer.get();\n\t\t * });\n\t\t */\n\t    Tone.Buffer = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'url',\n\t            'onload',\n\t            'onerror'\n\t        ], Tone.Buffer.defaults);\n\t        /**\n\t\t\t *  stores the loaded AudioBuffer\n\t\t\t *  @type {AudioBuffer}\n\t\t\t *  @private\n\t\t\t */\n\t        this._buffer = null;\n\t        /**\n\t\t\t *  indicates if the buffer should be reversed or not\n\t\t\t *  @type {Boolean}\n\t\t\t *  @private\n\t\t\t */\n\t        this._reversed = options.reverse;\n\t        /**\n\t\t\t *  The XHR\n\t\t\t *  @type  {XMLHttpRequest}\n\t\t\t *  @private\n\t\t\t */\n\t        this._xhr = null;\n\t        if (options.url instanceof AudioBuffer || options.url instanceof Tone.Buffer) {\n\t            this.set(options.url);\n\t            // invoke the onload callback\n\t            if (options.onload) {\n\t                options.onload(this);\n\t            }\n\t        } else if (this.isString(options.url)) {\n\t            this.load(options.url, options.onload, options.onerror);\n\t        }\n\t    };\n\t    Tone.extend(Tone.Buffer);\n\t    /**\n\t\t *  the default parameters\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.Buffer.defaults = {\n\t        'url': undefined,\n\t        'reverse': false\n\t    };\n\t    /**\n\t\t *  Pass in an AudioBuffer or Tone.Buffer to set the value\n\t\t *  of this buffer.\n\t\t *  @param {AudioBuffer|Tone.Buffer} buffer the buffer\n\t\t *  @returns {Tone.Buffer} this\n\t\t */\n\t    Tone.Buffer.prototype.set = function (buffer) {\n\t        if (buffer instanceof Tone.Buffer) {\n\t            this._buffer = buffer.get();\n\t        } else {\n\t            this._buffer = buffer;\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  @return {AudioBuffer} The audio buffer stored in the object.\n\t\t */\n\t    Tone.Buffer.prototype.get = function () {\n\t        return this._buffer;\n\t    };\n\t    /**\n\t\t *  Makes an xhr reqest for the selected url then decodes\n\t\t *  the file as an audio buffer. Invokes\n\t\t *  the callback once the audio buffer loads.\n\t\t *  @param {String} url The url of the buffer to load.\n\t\t *                      filetype support depends on the\n\t\t *                      browser.\n\t\t *  @returns {Promise} returns a Promise which resolves with the Tone.Buffer\n\t\t */\n\t    Tone.Buffer.prototype.load = function (url, onload, onerror) {\n\t        var promise = new Promise(function (load, error) {\n\t            this._xhr = Tone.Buffer.load(url, //success\n\t            function (buff) {\n\t                this._xhr = null;\n\t                this.set(buff);\n\t                load(this);\n\t                if (onload) {\n\t                    onload(this);\n\t                }\n\t            }.bind(this), //error\n\t            function (err) {\n\t                this._xhr = null;\n\t                error(err);\n\t                if (onerror) {\n\t                    onerror(err);\n\t                }\n\t            }.bind(this));\n\t        }.bind(this));\n\t        return promise;\n\t    };\n\t    /**\n\t\t *  dispose and disconnect\n\t\t *  @returns {Tone.Buffer} this\n\t\t */\n\t    Tone.Buffer.prototype.dispose = function () {\n\t        Tone.Emitter.prototype.dispose.call(this);\n\t        this._buffer = null;\n\t        if (this._xhr) {\n\t            Tone.Buffer._currentDownloads--;\n\t            this._xhr.abort();\n\t            this._xhr = null;\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t * If the buffer is loaded or not\n\t\t * @memberOf Tone.Buffer#\n\t\t * @type {Boolean}\n\t\t * @name loaded\n\t\t * @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.Buffer.prototype, 'loaded', {\n\t        get: function () {\n\t            return this.length > 0;\n\t        }\n\t    });\n\t    /**\n\t\t * The duration of the buffer. \n\t\t * @memberOf Tone.Buffer#\n\t\t * @type {Number}\n\t\t * @name duration\n\t\t * @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.Buffer.prototype, 'duration', {\n\t        get: function () {\n\t            if (this._buffer) {\n\t                return this._buffer.duration;\n\t            } else {\n\t                return 0;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * The length of the buffer in samples\n\t\t * @memberOf Tone.Buffer#\n\t\t * @type {Number}\n\t\t * @name length\n\t\t * @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.Buffer.prototype, 'length', {\n\t        get: function () {\n\t            if (this._buffer) {\n\t                return this._buffer.length;\n\t            } else {\n\t                return 0;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * The number of discrete audio channels. Returns 0 if no buffer\n\t\t * is loaded.\n\t\t * @memberOf Tone.Buffer#\n\t\t * @type {Number}\n\t\t * @name numberOfChannels\n\t\t * @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.Buffer.prototype, 'numberOfChannels', {\n\t        get: function () {\n\t            if (this._buffer) {\n\t                return this._buffer.numberOfChannels;\n\t            } else {\n\t                return 0;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  Set the audio buffer from the array\n\t\t *  @param {Float32Array} array The array to fill the audio buffer\n\t\t *  @param {Number} [channels=1] The number of channels contained in the array. \n\t\t *                               If the channel is more than 1, the input array\n\t\t *                               is expected to be a multidimensional array\n\t\t *                               with dimensions equal to the number of channels.\n\t\t *  @return {Tone.Buffer} this\n\t\t */\n\t    Tone.Buffer.prototype.fromArray = function (array) {\n\t        var isMultidimensional = array[0].length > 0;\n\t        var channels = isMultidimensional ? array.length : 1;\n\t        var len = isMultidimensional ? array[0].length : array.length;\n\t        var buffer = this.context.createBuffer(channels, len, this.context.sampleRate);\n\t        if (!isMultidimensional && channels === 1) {\n\t            array = [array];\n\t        }\n\t        for (var c = 0; c < channels; c++) {\n\t            buffer.copyToChannel(array[c], c);\n\t        }\n\t        this._buffer = buffer;\n\t        return this;\n\t    };\n\t    /**\n\t\t * \tSums muliple channels into 1 channel\n\t\t *  @param {Number=} channel Optionally only copy a single channel from the array.\n\t\t *  @return {Array}\n\t\t */\n\t    Tone.Buffer.prototype.toMono = function (chanNum) {\n\t        if (this.isNumber(chanNum)) {\n\t            this.fromArray(this.toArray(chanNum));\n\t        } else {\n\t            var outputArray = new Float32Array(this.length);\n\t            var numChannels = this.numberOfChannels;\n\t            for (var channel = 0; channel < numChannels; channel++) {\n\t                var channelArray = this.toArray(channel);\n\t                for (var i = 0; i < channelArray.length; i++) {\n\t                    outputArray[i] += channelArray[i];\n\t                }\n\t            }\n\t            //divide by the number of channels\n\t            outputArray = outputArray.map(function (sample) {\n\t                return sample / numChannels;\n\t            });\n\t            this.fromArray(outputArray);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t * \tGet the buffer as an array. Single channel buffers will return a 1-dimensional \n\t\t * \tFloat32Array, and multichannel buffers will return multidimensional arrays.\n\t\t *  @param {Number=} channel Optionally only copy a single channel from the array.\n\t\t *  @return {Array}\n\t\t */\n\t    Tone.Buffer.prototype.toArray = function (channel) {\n\t        if (this.isNumber(channel)) {\n\t            return this.getChannelData(channel);\n\t        } else if (this.numberOfChannels === 1) {\n\t            return this.toArray(0);\n\t        } else {\n\t            var ret = [];\n\t            for (var c = 0; c < this.numberOfChannels; c++) {\n\t                ret[c] = this.getChannelData(c);\n\t            }\n\t            return ret;\n\t        }\n\t    };\n\t    /**\n\t\t *  Returns the Float32Array representing the PCM audio data for the specific channel.\n\t\t *  @param  {Number}  channel  The channel number to return\n\t\t *  @return  {Float32Array}  The audio as a TypedArray\n\t\t */\n\t    Tone.Buffer.prototype.getChannelData = function (channel) {\n\t        return this._buffer.getChannelData(channel);\n\t    };\n\t    /**\n\t\t *  Cut a subsection of the array and return a buffer of the\n\t\t *  subsection. Does not modify the original buffer\n\t\t *  @param {Time} start The time to start the slice\n\t\t *  @param {Time=} end The end time to slice. If none is given\n\t\t *                     will default to the end of the buffer\n\t\t *  @return {Tone.Buffer} this\n\t\t */\n\t    Tone.Buffer.prototype.slice = function (start, end) {\n\t        end = this.defaultArg(end, this.duration);\n\t        var startSamples = Math.floor(this.context.sampleRate * this.toSeconds(start));\n\t        var endSamples = Math.floor(this.context.sampleRate * this.toSeconds(end));\n\t        var replacement = [];\n\t        for (var i = 0; i < this.numberOfChannels; i++) {\n\t            replacement[i] = this.toArray(i).slice(startSamples, endSamples);\n\t        }\n\t        var retBuffer = new Tone.Buffer().fromArray(replacement);\n\t        return retBuffer;\n\t    };\n\t    /**\n\t\t *  Reverse the buffer.\n\t\t *  @private\n\t\t *  @return {Tone.Buffer} this\n\t\t */\n\t    Tone.Buffer.prototype._reverse = function () {\n\t        if (this.loaded) {\n\t            for (var i = 0; i < this.numberOfChannels; i++) {\n\t                Array.prototype.reverse.call(this.getChannelData(i));\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t * Reverse the buffer.\n\t\t * @memberOf Tone.Buffer#\n\t\t * @type {Boolean}\n\t\t * @name reverse\n\t\t */\n\t    Object.defineProperty(Tone.Buffer.prototype, 'reverse', {\n\t        get: function () {\n\t            return this._reversed;\n\t        },\n\t        set: function (rev) {\n\t            if (this._reversed !== rev) {\n\t                this._reversed = rev;\n\t                this._reverse();\n\t            }\n\t        }\n\t    });\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    // STATIC METHODS\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //statically inherits Emitter methods\n\t    Tone.Emitter.mixin(Tone.Buffer);\n\t    /**\n\t\t *  the static queue for all of the xhr requests\n\t\t *  @type {Array}\n\t\t *  @private\n\t\t */\n\t    Tone.Buffer._downloadQueue = [];\n\t    /**\n\t\t *  the total number of downloads\n\t\t *  @type {Number}\n\t\t *  @private\n\t\t */\n\t    Tone.Buffer._currentDownloads = 0;\n\t    /**\n\t\t *  A path which is prefixed before every url.\n\t\t *  @type  {String}\n\t\t *  @static\n\t\t */\n\t    Tone.Buffer.baseUrl = '';\n\t    /**\n\t\t *  Loads a url using XMLHttpRequest.\n\t\t *  @param {String} url\n\t\t *  @param {Function} onload\n\t\t *  @param {Function} onerror\n\t\t *  @param {Function} onprogress\n\t\t *  @return {XMLHttpRequest}\n\t\t */\n\t    Tone.Buffer.load = function (url, onload, onerror) {\n\t        //default\n\t        onload = onload || Tone.noOp;\n\t        function onError(e) {\n\t            if (onerror) {\n\t                onerror(e);\n\t                Tone.Buffer.emit('error', e);\n\t            } else {\n\t                throw new Error(e);\n\t            }\n\t        }\n\t        function onProgress() {\n\t            //calculate the progress\n\t            var totalProgress = 0;\n\t            for (var i = 0; i < Tone.Buffer._downloadQueue.length; i++) {\n\t                totalProgress += Tone.Buffer._downloadQueue[i].progress;\n\t            }\n\t            Tone.Buffer.emit('progress', totalProgress / Tone.Buffer._downloadQueue.length);\n\t        }\n\t        var request = new XMLHttpRequest();\n\t        request.open('GET', Tone.Buffer.baseUrl + url, true);\n\t        request.responseType = 'arraybuffer';\n\t        //start out as 0\n\t        request.progress = 0;\n\t        Tone.Buffer._currentDownloads++;\n\t        Tone.Buffer._downloadQueue.push(request);\n\t        request.addEventListener('load', function () {\n\t            if (request.status === 200) {\n\t                Tone.context.decodeAudioData(request.response, function (buff) {\n\t                    request.progress = 1;\n\t                    onProgress();\n\t                    onload(buff);\n\t                    Tone.Buffer._currentDownloads--;\n\t                    if (Tone.Buffer._currentDownloads === 0) {\n\t                        // clear the downloads\n\t                        Tone.Buffer._downloadQueue = [];\n\t                        //emit the event at the end\n\t                        Tone.Buffer.emit('load');\n\t                    }\n\t                }, function () {\n\t                    onError('Tone.Buffer: could not decode audio data: ' + url);\n\t                });\n\t            } else {\n\t                onError('Tone.Buffer: could not locate file: ' + url);\n\t            }\n\t        });\n\t        request.addEventListener('error', onError);\n\t        request.addEventListener('progress', function (event) {\n\t            if (event.lengthComputable) {\n\t                //only go to 95%, the last 5% is when the audio is decoded\n\t                request.progress = event.loaded / event.total * 0.95;\n\t                onProgress();\n\t            }\n\t        });\n\t        request.send();\n\t        return request;\n\t    };\n\t    /**\n\t\t *  Stop all of the downloads in progress\n\t\t *  @return {Tone.Buffer}\n\t\t *  @static\n\t\t */\n\t    Tone.Buffer.cancelDownloads = function () {\n\t        Tone.Buffer._downloadQueue.forEach(function (request) {\n\t            request.abort();\n\t        });\n\t        Tone.Buffer._currentDownloads = 0;\n\t        return Tone.Buffer;\n\t    };\n\t    /**\n\t\t *  Checks a url's extension to see if the current browser can play that file type.\n\t\t *  @param {String} url The url/extension to test\n\t\t *  @return {Boolean} If the file extension can be played\n\t\t *  @static\n\t\t *  @example\n\t\t * Tone.Buffer.supportsType(\"wav\"); //returns true\n\t\t * Tone.Buffer.supportsType(\"path/to/file.wav\"); //returns true\n\t\t */\n\t    Tone.Buffer.supportsType = function (url) {\n\t        var extension = url.split('.');\n\t        extension = extension[extension.length - 1];\n\t        var response = document.createElement('audio').canPlayType('audio/' + extension);\n\t        return response !== '';\n\t    };\n\t    /**\n\t\t *  Returns a Promise which resolves when all of the buffers have loaded\n\t\t *  @return {Promise}\n\t\t */\n\t    Tone.loaded = function () {\n\t        var onload, onerror;\n\t        function removeEvents() {\n\t            //remove the events when it's resolved\n\t            Tone.Buffer.off('load', onload);\n\t            Tone.Buffer.off('error', onerror);\n\t        }\n\t        return new Promise(function (success, fail) {\n\t            onload = function () {\n\t                success();\n\t            };\n\t            onerror = function () {\n\t                fail();\n\t            };\n\t            //add the event listeners\n\t            Tone.Buffer.on('load', onload);\n\t            Tone.Buffer.on('error', onerror);\n\t        }).then(removeEvents).catch(function (e) {\n\t            removeEvents();\n\t            throw new Error(e);\n\t        });\n\t    };\n\t    return Tone.Buffer;\n\t});\n\tModule(function (Tone) {\n\t    /**\n\t\t *  @class A data structure for holding multiple buffers.\n\t\t *  \n\t\t *  @param  {Object|Array}    urls      An object literal or array\n\t\t *                                      of urls to load.\n\t\t *  @param  {Function=}  callback  The callback to invoke when\n\t\t *                                 the buffers are loaded. \n\t\t *  @extends {Tone}\n\t\t *  @example\n\t\t * //load a whole bank of piano samples\n\t\t * var pianoSamples = new Tone.Buffers({\n\t\t * \t\"C4\" : \"path/to/C4.mp3\"\n\t\t * \t\"C#4\" : \"path/to/C#4.mp3\"\n\t\t * \t\"D4\" : \"path/to/D4.mp3\"\n\t\t * \t\"D#4\" : \"path/to/D#4.mp3\"\n\t\t * \t...\n\t\t * }, function(){\n\t\t * \t//play one of the samples when they all load\n\t\t * \tplayer.buffer = pianoSamples.get(\"C4\");\n\t\t * \tplayer.start();\n\t\t * });\n\t\t * \n\t\t */\n\t    Tone.Buffers = function (urls, onload, baseUrl) {\n\t        /**\n\t\t\t *  All of the buffers\n\t\t\t *  @type  {Object}\n\t\t\t *  @private\n\t\t\t */\n\t        this._buffers = {};\n\t        /**\n\t\t\t *  A path which is prefixed before every url.\n\t\t\t *  @type  {String}\n\t\t\t */\n\t        this.baseUrl = this.defaultArg(baseUrl, '');\n\t        urls = this._flattenUrls(urls);\n\t        this._loadingCount = 0;\n\t        //add each one\n\t        for (var key in urls) {\n\t            this._loadingCount++;\n\t            this.add(key, urls[key], this._bufferLoaded.bind(this, onload));\n\t        }\n\t    };\n\t    Tone.extend(Tone.Buffers);\n\t    /**\n\t\t *  True if the buffers object has a buffer by that name.\n\t\t *  @param  {String|Number}  name  The key or index of the \n\t\t *                                 buffer.\n\t\t *  @return  {Boolean}\n\t\t */\n\t    Tone.Buffers.prototype.has = function (name) {\n\t        return this._buffers.hasOwnProperty(name);\n\t    };\n\t    /**\n\t\t *  Get a buffer by name. If an array was loaded, \n\t\t *  then use the array index.\n\t\t *  @param  {String|Number}  name  The key or index of the \n\t\t *                                 buffer.\n\t\t *  @return  {Tone.Buffer}\n\t\t */\n\t    Tone.Buffers.prototype.get = function (name) {\n\t        if (this.has(name)) {\n\t            return this._buffers[name];\n\t        } else {\n\t            throw new Error('Tone.Buffers: no buffer named ' + name);\n\t        }\n\t    };\n\t    /**\n\t\t *  A buffer was loaded. decrement the counter.\n\t\t *  @param  {Function}  callback \n\t\t *  @private\n\t\t */\n\t    Tone.Buffers.prototype._bufferLoaded = function (callback) {\n\t        this._loadingCount--;\n\t        if (this._loadingCount === 0 && callback) {\n\t            callback(this);\n\t        }\n\t    };\n\t    /**\n\t\t * If the buffers are loaded or not\n\t\t * @memberOf Tone.Buffers#\n\t\t * @type {Boolean}\n\t\t * @name loaded\n\t\t * @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.Buffers.prototype, 'loaded', {\n\t        get: function () {\n\t            var isLoaded = true;\n\t            for (var buffName in this._buffers) {\n\t                var buff = this.get(buffName);\n\t                isLoaded = isLoaded && buff.loaded;\n\t            }\n\t            return isLoaded;\n\t        }\n\t    });\n\t    /**\n\t\t *  Add a buffer by name and url to the Buffers\n\t\t *  @param  {String}    name      A unique name to give\n\t\t *                                the buffer\n\t\t *  @param  {String|Tone.Buffer|Audiobuffer}  url  Either the url of the bufer, \n\t\t *                                                 or a buffer which will be added\n\t\t *                                                 with the given name.\n\t\t *  @param  {Function=}  callback  The callback to invoke \n\t\t *                                 when the url is loaded.\n\t\t */\n\t    Tone.Buffers.prototype.add = function (name, url, callback) {\n\t        callback = this.defaultArg(callback, Tone.noOp);\n\t        if (url instanceof Tone.Buffer) {\n\t            this._buffers[name] = url;\n\t            callback(this);\n\t        } else if (url instanceof AudioBuffer) {\n\t            this._buffers[name] = new Tone.Buffer(url);\n\t            callback(this);\n\t        } else if (this.isString(url)) {\n\t            this._buffers[name] = new Tone.Buffer(this.baseUrl + url, callback);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Flatten an object into a single depth object. \n\t\t *  thanks to https://gist.github.com/penguinboy/762197\n\t\t *  @param   {Object} ob \t\n\t\t *  @return  {Object}    \n\t\t *  @private\n\t\t */\n\t    Tone.Buffers.prototype._flattenUrls = function (ob) {\n\t        var toReturn = {};\n\t        for (var i in ob) {\n\t            if (!ob.hasOwnProperty(i))\n\t                continue;\n\t            if (this.isObject(ob[i])) {\n\t                var flatObject = this._flattenUrls(ob[i]);\n\t                for (var x in flatObject) {\n\t                    if (!flatObject.hasOwnProperty(x))\n\t                        continue;\n\t                    toReturn[i + '.' + x] = flatObject[x];\n\t                }\n\t            } else {\n\t                toReturn[i] = ob[i];\n\t            }\n\t        }\n\t        return toReturn;\n\t    };\n\t    /**\n\t\t *  Clean up.\n\t\t *  @return  {Tone.Buffers} this\n\t\t */\n\t    Tone.Buffers.prototype.dispose = function () {\n\t        for (var name in this._buffers) {\n\t            this._buffers[name].dispose();\n\t        }\n\t        this._buffers = null;\n\t        return this;\n\t    };\n\t    return Tone.Buffers;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  buses are another way of routing audio\n\t\t *\n\t\t *  augments Tone.prototype to include send and recieve\n\t\t */\n\t    /**\n\t\t  *  All of the routes\n\t\t  *  \n\t\t  *  @type {Object}\n\t\t  *  @static\n\t\t  *  @private\n\t\t  */\n\t    var Buses = {};\n\t    /**\n\t\t *  Send this signal to the channel name. \n\t\t *  @param  {string} channelName A named channel to send the signal to.\n\t\t *  @param  {Decibels} amount The amount of the source to send to the bus. \n\t\t *  @return {GainNode} The gain node which connects this node to the desired channel. \n\t\t *                     Can be used to adjust the levels of the send.\n\t\t *  @example\n\t\t * source.send(\"reverb\", -12);\n\t\t */\n\t    Tone.prototype.send = function (channelName, amount) {\n\t        if (!Buses.hasOwnProperty(channelName)) {\n\t            Buses[channelName] = this.context.createGain();\n\t        }\n\t        amount = this.defaultArg(amount, 0);\n\t        var sendKnob = new Tone.Gain(amount, Tone.Type.Decibels);\n\t        this.output.chain(sendKnob, Buses[channelName]);\n\t        return sendKnob;\n\t    };\n\t    /**\n\t\t *  Recieve the input from the desired channelName to the input\n\t\t *\n\t\t *  @param  {string} channelName A named channel to send the signal to.\n\t\t *  @param {AudioNode} [input] If no input is selected, the\n\t\t *                                         input of the current node is\n\t\t *                                         chosen. \n\t\t *  @returns {Tone} this\n\t\t *  @example\n\t\t * reverbEffect.receive(\"reverb\");\n\t\t */\n\t    Tone.prototype.receive = function (channelName, input) {\n\t        if (!Buses.hasOwnProperty(channelName)) {\n\t            Buses[channelName] = this.context.createGain();\n\t        }\n\t        if (this.isUndef(input)) {\n\t            input = this.input;\n\t        }\n\t        Buses[channelName].connect(input);\n\t        return this;\n\t    };\n\t    //remove all the send/receives when a new audio context is passed in\n\t    Tone.Context.on('init', function (context) {\n\t        if (context.Buses) {\n\t            Buses = context.Buses;\n\t        } else {\n\t            Buses = {};\n\t            context.Buses = Buses;\n\t        }\n\t    });\n\t    return Tone;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.Draw is useful for synchronizing visuals and audio events.\n\t\t *         Callbacks from Tone.Transport or any of the Tone.Event classes\n\t\t *         always happen _before_ the scheduled time and are not synchronized\n\t\t *         to the animation frame so they are not good for triggering tightly\n\t\t *         synchronized visuals and sound. Tone.Draw makes it easy to schedule\n\t\t *         callbacks using the AudioContext time and uses requestAnimationFrame.\n\t\t *         \n\t\t *  @singleton\n\t\t *  @extends {Tone}\n\t\t *  @example\n\t\t * Tone.Transport.schedule(function(time){\n\t\t * \t//use the time argument to schedule a callback with Tone.Draw\n\t\t * \tTone.Draw.schedule(function(){\n\t\t * \t\t//do drawing or DOM manipulation here\n\t\t * \t}, time)\n\t\t * }, \"+0.5\")\n\t\t */\n\t    Tone.Draw = function () {\n\t        /**\n\t\t\t *  All of the events.\n\t\t\t *  @type  {Tone.Timeline}\n\t\t\t *  @private\n\t\t\t */\n\t        this._events = new Tone.Timeline();\n\t        /**\n\t\t\t *  The duration after which events are not invoked.\n\t\t\t *  @type  {Number}\n\t\t\t *  @default 0.25\n\t\t\t */\n\t        this.expiration = 0.25;\n\t        /**\n\t\t\t *  The amount of time before the scheduled time \n\t\t\t *  that the callback can be invoked. Default is\n\t\t\t *  half the time of an animation frame (0.008 seconds).\n\t\t\t *  @type  {Number}\n\t\t\t *  @default 0.008\n\t\t\t */\n\t        this.anticipation = 0.008;\n\t        /**\n\t\t\t *  The draw loop\n\t\t\t *  @type  {Function}\n\t\t\t *  @private\n\t\t\t */\n\t        this._boundDrawLoop = this._drawLoop.bind(this);\n\t    };\n\t    Tone.extend(Tone.Draw);\n\t    /**\n\t\t *  Schedule a function at the given time to be invoked\n\t\t *  on the nearest animation frame.\n\t\t *  @param  {Function}  callback  Callback is invoked at the given time.\n\t\t *  @param  {Time}    time      The time relative to the AudioContext time\n\t\t *                              to invoke the callback.\n\t\t *  @return  {Tone.Draw}    this\n\t\t */\n\t    Tone.Draw.prototype.schedule = function (callback, time) {\n\t        this._events.add({\n\t            callback: callback,\n\t            time: this.toSeconds(time)\n\t        });\n\t        //start the draw loop on the first event\n\t        if (this._events.length === 1) {\n\t            requestAnimationFrame(this._boundDrawLoop);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Cancel events scheduled after the given time\n\t\t *  @param  {Time=}  after  Time after which scheduled events will \n\t\t *                          be removed from the scheduling timeline.\n\t\t *  @return  {Tone.Draw}  this\n\t\t */\n\t    Tone.Draw.prototype.cancel = function (after) {\n\t        this._events.cancel(this.toSeconds(after));\n\t        return this;\n\t    };\n\t    /**\n\t\t *  The draw loop\n\t\t *  @private\n\t\t */\n\t    Tone.Draw.prototype._drawLoop = function () {\n\t        var now = Tone.now();\n\t        while (this._events.length && this._events.peek().time - this.anticipation <= now) {\n\t            var event = this._events.shift();\n\t            if (now - event.time <= this.expiration) {\n\t                event.callback();\n\t            }\n\t        }\n\t        if (this._events.length > 0) {\n\t            requestAnimationFrame(this._boundDrawLoop);\n\t        }\n\t    };\n\t    //make a singleton\n\t    Tone.Draw = new Tone.Draw();\n\t    return Tone.Draw;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Both Tone.Panner3D and Tone.Listener have a position in 3D space \n\t\t *          using a right-handed cartesian coordinate system. \n\t\t *          The units used in the coordinate system are not defined; \n\t\t *          these coordinates are independent/invariant of any particular \n\t\t *          units such as meters or feet. Tone.Panner3D objects have an forward \n\t\t *          vector representing the direction the sound is projecting. Additionally, \n\t\t *          they have a sound cone representing how directional the sound is. \n\t\t *          For example, the sound could be omnidirectional, in which case it would \n\t\t *          be heard anywhere regardless of its forward, or it can be more directional \n\t\t *          and heard only if it is facing the listener. Tone.Listener objects \n\t\t *          (representing a person's ears) have an forward and up vector \n\t\t *          representing in which direction the person is facing. Because both the \n\t\t *          source stream and the listener can be moving, they both have a velocity \n\t\t *          vector representing both the speed and direction of movement. Taken together, \n\t\t *          these two velocities can be used to generate a doppler shift effect which changes the pitch.\n\t\t *          <br><br>\n\t\t *          Note: the position of the Listener will have no effect on nodes not connected to a Tone.Panner3D\n\t\t *  \n\t\t *  @constructor\n\t\t *  @extends {Tone}\n\t\t *  @singleton\n\t\t *  @param {Number} positionX The initial x position.\n\t\t *  @param {Number} positionY The initial y position.\n\t\t *  @param {Number} positionZ The initial z position.\n\t\t */\n\t    Tone.Listener = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'positionX',\n\t            'positionY',\n\t            'positionZ'\n\t        ], ListenerConstructor.defaults);\n\t        /**\n\t\t\t *  Holds the current forward orientation\n\t\t\t *  @type  {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._orientation = [\n\t            options.forwardX,\n\t            options.forwardY,\n\t            options.forwardZ,\n\t            options.upX,\n\t            options.upY,\n\t            options.upZ\n\t        ];\n\t        /**\n\t\t\t *  Holds the current position\n\t\t\t *  @type  {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._position = [\n\t            options.positionX,\n\t            options.positionY,\n\t            options.positionZ\n\t        ];\n\t        // set the default position/forward\n\t        this.forwardX = options.forwardX;\n\t        this.forwardY = options.forwardY;\n\t        this.forwardZ = options.forwardZ;\n\t        this.upX = options.upX;\n\t        this.upY = options.upY;\n\t        this.upZ = options.upZ;\n\t        this.positionX = options.positionX;\n\t        this.positionY = options.positionY;\n\t        this.positionZ = options.positionZ;\n\t    };\n\t    Tone.extend(Tone.Listener);\n\t    /**\n\t\t *  the default parameters\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type {Object}\n\t\t *  Defaults according to the specification\n\t\t */\n\t    Tone.Listener.defaults = {\n\t        'positionX': 0,\n\t        'positionY': 0,\n\t        'positionZ': 0,\n\t        'forwardX': 0,\n\t        'forwardY': 0,\n\t        'forwardZ': 1,\n\t        'upX': 0,\n\t        'upY': 1,\n\t        'upZ': 0\n\t    };\n\t    /**\n\t\t * The ramp time which is applied to the setTargetAtTime\n\t\t * @type {Number}\n\t\t * @private\n\t\t */\n\t    Tone.Listener.prototype._rampTimeConstant = 0.01;\n\t    /**\n\t\t *  Sets the position of the listener in 3d space.\t\n\t\t *  @param  {Number}  x\n\t\t *  @param  {Number}  y\n\t\t *  @param  {Number}  z\n\t\t *  @return {Tone.Listener} this\n\t\t */\n\t    Tone.Listener.prototype.setPosition = function (x, y, z) {\n\t        if (this.context.listener.positionX) {\n\t            var now = this.now();\n\t            this.context.listener.positionX.setTargetAtTime(x, now, this._rampTimeConstant);\n\t            this.context.listener.positionY.setTargetAtTime(y, now, this._rampTimeConstant);\n\t            this.context.listener.positionZ.setTargetAtTime(z, now, this._rampTimeConstant);\n\t        } else {\n\t            this.context.listener.setPosition(x, y, z);\n\t        }\n\t        this._position = Array.prototype.slice.call(arguments);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Sets the orientation of the listener using two vectors, the forward\n\t\t *  vector (which direction the listener is facing) and the up vector \n\t\t *  (which the up direction of the listener). An up vector\n\t\t *  of 0, 0, 1 is equivalent to the listener standing up in the Z direction. \n\t\t *  @param  {Number}  x\n\t\t *  @param  {Number}  y\n\t\t *  @param  {Number}  z\n\t\t *  @param  {Number}  upX\n\t\t *  @param  {Number}  upY\n\t\t *  @param  {Number}  upZ\n\t\t *  @return {Tone.Listener} this\n\t\t */\n\t    Tone.Listener.prototype.setOrientation = function (x, y, z, upX, upY, upZ) {\n\t        if (this.context.listener.forwardX) {\n\t            var now = this.now();\n\t            this.context.listener.forwardX.setTargetAtTime(x, now, this._rampTimeConstant);\n\t            this.context.listener.forwardY.setTargetAtTime(y, now, this._rampTimeConstant);\n\t            this.context.listener.forwardZ.setTargetAtTime(z, now, this._rampTimeConstant);\n\t            this.context.listener.upX.setTargetAtTime(upX, now, this._rampTimeConstant);\n\t            this.context.listener.upY.setTargetAtTime(upY, now, this._rampTimeConstant);\n\t            this.context.listener.upZ.setTargetAtTime(upZ, now, this._rampTimeConstant);\n\t        } else {\n\t            this.context.listener.setOrientation(x, y, z, upX, upY, upZ);\n\t        }\n\t        this._orientation = Array.prototype.slice.call(arguments);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  The x position of the panner object.\n\t\t *  @type {Number}\n\t\t *  @memberOf Tone.Listener#\n\t\t *  @name positionX\n\t\t */\n\t    Object.defineProperty(Tone.Listener.prototype, 'positionX', {\n\t        set: function (pos) {\n\t            this._position[0] = pos;\n\t            this.setPosition.apply(this, this._position);\n\t        },\n\t        get: function () {\n\t            return this._position[0];\n\t        }\n\t    });\n\t    /**\n\t\t *  The y position of the panner object.\n\t\t *  @type {Number}\n\t\t *  @memberOf Tone.Listener#\n\t\t *  @name positionY\n\t\t */\n\t    Object.defineProperty(Tone.Listener.prototype, 'positionY', {\n\t        set: function (pos) {\n\t            this._position[1] = pos;\n\t            this.setPosition.apply(this, this._position);\n\t        },\n\t        get: function () {\n\t            return this._position[1];\n\t        }\n\t    });\n\t    /**\n\t\t *  The z position of the panner object.\n\t\t *  @type {Number}\n\t\t *  @memberOf Tone.Listener#\n\t\t *  @name positionZ\n\t\t */\n\t    Object.defineProperty(Tone.Listener.prototype, 'positionZ', {\n\t        set: function (pos) {\n\t            this._position[2] = pos;\n\t            this.setPosition.apply(this, this._position);\n\t        },\n\t        get: function () {\n\t            return this._position[2];\n\t        }\n\t    });\n\t    /**\n\t\t *  The x coordinate of the listeners front direction. i.e. \n\t\t *  which way they are facing.\n\t\t *  @type {Number}\n\t\t *  @memberOf Tone.Listener#\n\t\t *  @name forwardX\n\t\t */\n\t    Object.defineProperty(Tone.Listener.prototype, 'forwardX', {\n\t        set: function (pos) {\n\t            this._orientation[0] = pos;\n\t            this.setOrientation.apply(this, this._orientation);\n\t        },\n\t        get: function () {\n\t            return this._orientation[0];\n\t        }\n\t    });\n\t    /**\n\t\t *  The y coordinate of the listeners front direction. i.e. \n\t\t *  which way they are facing.\n\t\t *  @type {Number}\n\t\t *  @memberOf Tone.Listener#\n\t\t *  @name forwardY\n\t\t */\n\t    Object.defineProperty(Tone.Listener.prototype, 'forwardY', {\n\t        set: function (pos) {\n\t            this._orientation[1] = pos;\n\t            this.setOrientation.apply(this, this._orientation);\n\t        },\n\t        get: function () {\n\t            return this._orientation[1];\n\t        }\n\t    });\n\t    /**\n\t\t *  The z coordinate of the listeners front direction. i.e. \n\t\t *  which way they are facing.\n\t\t *  @type {Number}\n\t\t *  @memberOf Tone.Listener#\n\t\t *  @name forwardZ\n\t\t */\n\t    Object.defineProperty(Tone.Listener.prototype, 'forwardZ', {\n\t        set: function (pos) {\n\t            this._orientation[2] = pos;\n\t            this.setOrientation.apply(this, this._orientation);\n\t        },\n\t        get: function () {\n\t            return this._orientation[2];\n\t        }\n\t    });\n\t    /**\n\t\t *  The x coordinate of the listener's up direction. i.e.\n\t\t *  the direction the listener is standing in.\n\t\t *  @type {Number}\n\t\t *  @memberOf Tone.Listener#\n\t\t *  @name upX\n\t\t */\n\t    Object.defineProperty(Tone.Listener.prototype, 'upX', {\n\t        set: function (pos) {\n\t            this._orientation[3] = pos;\n\t            this.setOrientation.apply(this, this._orientation);\n\t        },\n\t        get: function () {\n\t            return this._orientation[3];\n\t        }\n\t    });\n\t    /**\n\t\t *  The y coordinate of the listener's up direction. i.e.\n\t\t *  the direction the listener is standing in.\n\t\t *  @type {Number}\n\t\t *  @memberOf Tone.Listener#\n\t\t *  @name upY\n\t\t */\n\t    Object.defineProperty(Tone.Listener.prototype, 'upY', {\n\t        set: function (pos) {\n\t            this._orientation[4] = pos;\n\t            this.setOrientation.apply(this, this._orientation);\n\t        },\n\t        get: function () {\n\t            return this._orientation[4];\n\t        }\n\t    });\n\t    /**\n\t\t *  The z coordinate of the listener's up direction. i.e.\n\t\t *  the direction the listener is standing in.\n\t\t *  @type {Number}\n\t\t *  @memberOf Tone.Listener#\n\t\t *  @name upZ\n\t\t */\n\t    Object.defineProperty(Tone.Listener.prototype, 'upZ', {\n\t        set: function (pos) {\n\t            this._orientation[5] = pos;\n\t            this.setOrientation.apply(this, this._orientation);\n\t        },\n\t        get: function () {\n\t            return this._orientation[5];\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.Listener} this\n\t\t */\n\t    Tone.Listener.prototype.dispose = function () {\n\t        this._orientation = null;\n\t        this._position = null;\n\t        return this;\n\t    };\n\t    //SINGLETON SETUP\n\t    var ListenerConstructor = Tone.Listener;\n\t    Tone.Listener = new ListenerConstructor();\n\t    Tone.Context.on('init', function (context) {\n\t        if (context.Listener instanceof ListenerConstructor) {\n\t            //a single listener object\n\t            Tone.Listener = context.Listener;\n\t        } else {\n\t            //make new Listener insides\n\t            Tone.Listener = new ListenerConstructor();\n\t        }\n\t        context.Listener = Tone.Listener;\n\t    });\n\t    //END SINGLETON SETUP\n\t    return Tone.Listener;\n\t});\n\tModule(function (Tone) {\n\t    /**\n\t\t *  shim\n\t\t *  @private\n\t\t */\n\t    if (!window.hasOwnProperty('OfflineAudioContext') && window.hasOwnProperty('webkitOfflineAudioContext')) {\n\t        window.OfflineAudioContext = window.webkitOfflineAudioContext;\n\t    }\n\t    /**\n\t\t *  @class Wrapper around the OfflineAudioContext\n\t\t *  @extends {Tone.Context\n\t\t *  @param  {Number}  channels  The number of channels to render\n\t\t *  @param  {Number}  duration  The duration to render in samples\n\t\t *  @param {Number} sampleRate the sample rate to render at\n\t\t */\n\t    Tone.OfflineContext = function (channels, duration, sampleRate) {\n\t        /**\n\t\t\t *  The offline context\n\t\t\t *  @private\n\t\t\t *  @type  {OfflineAudioContext}\n\t\t\t */\n\t        var offlineContext = new OfflineAudioContext(channels, duration * sampleRate, sampleRate);\n\t        //wrap the methods/members\n\t        Tone.Context.call(this, offlineContext);\n\t        /**\n\t\t\t *  A private reference to the duration\n\t\t\t *  @private\n\t\t\t *  @type  {Number}\n\t\t\t */\n\t        this._duration = duration;\n\t        /**\n\t\t\t *  An artificial clock source\n\t\t\t *  @type  {Number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._currentTime = 0;\n\t        //modify the lookAhead and updateInterval to one block\n\t        this.lookAhead = this.blockTime;\n\t        this.updateInterval = this.blockTime;\n\t    };\n\t    Tone.extend(Tone.OfflineContext, Tone.Context);\n\t    /**\n\t\t *  Override the now method to point to the internal clock time\n\t\t *  @return  {Number}\n\t\t */\n\t    Tone.OfflineContext.prototype.now = function () {\n\t        return this._currentTime;\n\t    };\n\t    /**\n\t\t *  Overwrite this method since the worker is not necessary for the offline context\n\t\t *  @private\n\t\t */\n\t    Tone.OfflineContext.prototype._createWorker = function () {\n\t        //dummy worker that does nothing\n\t        return {\n\t            postMessage: function () {\n\t            }\n\t        };\n\t    };\n\t    /**\n\t\t *  Render the output of the OfflineContext\n\t\t *  @return  {Promise}\n\t\t */\n\t    Tone.OfflineContext.prototype.render = function () {\n\t        while (this._duration - this._currentTime >= 0) {\n\t            //invoke all the callbacks on that time\n\t            this.emit('tick');\n\t            //increment the clock\n\t            this._currentTime += Tone.prototype.blockTime;\n\t        }\n\t        //promise returned is not yet implemented in all browsers\n\t        return new Promise(function (done) {\n\t            this._context.oncomplete = function (e) {\n\t                done(e.renderedBuffer);\n\t            };\n\t            this._context.startRendering();\n\t        }.bind(this));\n\t    };\n\t    return Tone.OfflineContext;\n\t});\n\tModule(function (Tone) {\n\t    /**\n\t\t *  Generate a buffer by rendering all of the Tone.js code within the callback using the OfflineAudioContext. \n\t\t *  The OfflineAudioContext is capable of rendering much faster than real time in many cases. \n\t\t *  The callback function also passes in an offline instance of Tone.Transport which can be used\n\t\t *  to schedule events along the Transport. \n\t\t *  @param  {Function}  callback  All Tone.js nodes which are created and scheduled within this callback are recorded into the output Buffer.\n\t\t *  @param  {Time}  duration     the amount of time to record for.\n\t\t *  @return  {Promise}  The promise which is invoked with the Tone.Buffer of the recorded output.\n\t\t *  @example\n\t\t * //render 2 seconds of the oscillator\n\t\t * Tone.Offline(function(){\n\t\t * \t//only nodes created in this callback will be recorded\n\t\t * \tvar oscillator = new Tone.Oscillator().toMaster().start(0)\n\t\t * \t//schedule their events\n\t\t * }, 2).then(function(buffer){\n\t\t * \t//do something with the output buffer\n\t\t * })\n\t\t * @example\n\t\t * //can also schedule events along the Transport\n\t\t * //using the passed in Offline Transport\n\t\t * Tone.Offline(function(Transport){\n\t\t * \tvar osc = new Tone.Oscillator().toMaster()\n\t\t * \tTransport.schedule(function(time){\n\t\t * \t\tosc.start(time).stop(time + 0.1)\n\t\t * \t}, 1)\n\t\t * \tTransport.start(0.2)\n\t\t * }, 4).then(function(buffer){\n\t\t * \t//do something with the output buffer\n\t\t * })\n\t\t */\n\t    Tone.Offline = function (callback, duration) {\n\t        //set the OfflineAudioContext\n\t        var sampleRate = Tone.context.sampleRate;\n\t        var originalContext = Tone.context;\n\t        var context = new Tone.OfflineContext(2, duration, sampleRate);\n\t        Tone.context = context;\n\t        //invoke the callback/scheduling\n\t        callback(Tone.Transport);\n\t        //process the audio\n\t        var rendered = context.render();\n\t        //return the original AudioContext\n\t        Tone.context = originalContext;\n\t        //return the audio\n\t        return rendered.then(function (buffer) {\n\t            //wrap it in a Tone.Buffer\n\t            return new Tone.Buffer(buffer);\n\t        });\n\t    };\n\t    return Tone.Offline;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t * \t@class  Tone.Effect is the base class for effects. Connect the effect between\n\t\t * \t        the effectSend and effectReturn GainNodes, then control the amount of\n\t\t * \t        effect which goes to the output using the wet control.\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone}\n\t\t *  @param {NormalRange|Object} [wet] The starting wet value. \n\t\t */\n\t    Tone.Effect = function () {\n\t        this.createInsOuts(1, 1);\n\t        //get all of the defaults\n\t        var options = this.optionsObject(arguments, ['wet'], Tone.Effect.defaults);\n\t        /**\n\t\t\t *  the drywet knob to control the amount of effect\n\t\t\t *  @type {Tone.CrossFade}\n\t\t\t *  @private\n\t\t\t */\n\t        this._dryWet = new Tone.CrossFade(options.wet);\n\t        /**\n\t\t\t *  The wet control is how much of the effected\n\t\t\t *  will pass through to the output. 1 = 100% effected\n\t\t\t *  signal, 0 = 100% dry signal. \n\t\t\t *  @type {NormalRange}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.wet = this._dryWet.fade;\n\t        /**\n\t\t\t *  connect the effectSend to the input of hte effect\n\t\t\t *  @type {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this.effectSend = new Tone.Gain();\n\t        /**\n\t\t\t *  connect the output of the effect to the effectReturn\n\t\t\t *  @type {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this.effectReturn = new Tone.Gain();\n\t        //connections\n\t        this.input.connect(this._dryWet.a);\n\t        this.input.connect(this.effectSend);\n\t        this.effectReturn.connect(this._dryWet.b);\n\t        this._dryWet.connect(this.output);\n\t        this._readOnly(['wet']);\n\t    };\n\t    Tone.extend(Tone.Effect);\n\t    /**\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.Effect.defaults = { 'wet': 1 };\n\t    /**\n\t\t *  chains the effect in between the effectSend and effectReturn\n\t\t *  @param  {Tone} effect\n\t\t *  @private\n\t\t *  @returns {Tone.Effect} this\n\t\t */\n\t    Tone.Effect.prototype.connectEffect = function (effect) {\n\t        this.effectSend.chain(effect, this.effectReturn);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Clean up. \n\t\t *  @returns {Tone.Effect} this\n\t\t */\n\t    Tone.Effect.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._dryWet.dispose();\n\t        this._dryWet = null;\n\t        this.effectSend.dispose();\n\t        this.effectSend = null;\n\t        this.effectReturn.dispose();\n\t        this.effectReturn = null;\n\t        this._writable(['wet']);\n\t        this.wet = null;\n\t        return this;\n\t    };\n\t    return Tone.Effect;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.AutoFilter is a Tone.Filter with a Tone.LFO connected to the filter cutoff frequency.\n\t\t *         Setting the LFO rate and depth allows for control over the filter modulation rate \n\t\t *         and depth.\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Effect}\n\t\t *  @param {Time|Object} [frequency] The rate of the LFO.\n\t\t *  @param {Frequency=} baseFrequency The lower value of the LFOs oscillation\n\t \t *  @param {Frequency=} octaves The number of octaves above the baseFrequency\n\t\t *  @example\n\t\t * //create an autofilter and start it's LFO\n\t\t * var autoFilter = new Tone.AutoFilter(\"4n\").toMaster().start();\n\t\t * //route an oscillator through the filter and start it\n\t\t * var oscillator = new Tone.Oscillator().connect(autoFilter).start();\n\t\t */\n\t    Tone.AutoFilter = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'frequency',\n\t            'baseFrequency',\n\t            'octaves'\n\t        ], Tone.AutoFilter.defaults);\n\t        Tone.Effect.call(this, options);\n\t        /**\n\t\t\t *  the lfo which drives the filter cutoff\n\t\t\t *  @type {Tone.LFO}\n\t\t\t *  @private\n\t\t\t */\n\t        this._lfo = new Tone.LFO({\n\t            'frequency': options.frequency,\n\t            'amplitude': options.depth\n\t        });\n\t        /**\n\t\t\t * The range of the filter modulating between the min and max frequency. \n\t\t\t * 0 = no modulation. 1 = full modulation.\n\t\t\t * @type {NormalRange}\n\t\t\t * @signal\n\t\t\t */\n\t        this.depth = this._lfo.amplitude;\n\t        /**\n\t\t\t * How fast the filter modulates between min and max. \n\t\t\t * @type {Frequency}\n\t\t\t * @signal\n\t\t\t */\n\t        this.frequency = this._lfo.frequency;\n\t        /**\n\t\t\t *  The filter node\n\t\t\t *  @type {Tone.Filter}\n\t\t\t */\n\t        this.filter = new Tone.Filter(options.filter);\n\t        /**\n\t\t\t *  The octaves placeholder\n\t\t\t *  @type {Positive}\n\t\t\t *  @private\n\t\t\t */\n\t        this._octaves = 0;\n\t        //connections\n\t        this.connectEffect(this.filter);\n\t        this._lfo.connect(this.filter.frequency);\n\t        this.type = options.type;\n\t        this._readOnly([\n\t            'frequency',\n\t            'depth'\n\t        ]);\n\t        this.octaves = options.octaves;\n\t        this.baseFrequency = options.baseFrequency;\n\t    };\n\t    //extend Effect\n\t    Tone.extend(Tone.AutoFilter, Tone.Effect);\n\t    /**\n\t\t *  defaults\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.AutoFilter.defaults = {\n\t        'frequency': 1,\n\t        'type': 'sine',\n\t        'depth': 1,\n\t        'baseFrequency': 200,\n\t        'octaves': 2.6,\n\t        'filter': {\n\t            'type': 'lowpass',\n\t            'rolloff': -12,\n\t            'Q': 1\n\t        }\n\t    };\n\t    /**\n\t\t * Start the effect.\n\t\t * @param {Time} [time=now] When the LFO will start. \n\t\t * @returns {Tone.AutoFilter} this\n\t\t */\n\t    Tone.AutoFilter.prototype.start = function (time) {\n\t        this._lfo.start(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t * Stop the effect.\n\t\t * @param {Time} [time=now] When the LFO will stop. \n\t\t * @returns {Tone.AutoFilter} this\n\t\t */\n\t    Tone.AutoFilter.prototype.stop = function (time) {\n\t        this._lfo.stop(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t * Sync the filter to the transport.\n\t\t * @param {Time} [delay=0] Delay time before starting the effect after the\n\t\t *                               Transport has started. \n\t\t * @returns {Tone.AutoFilter} this\n\t\t */\n\t    Tone.AutoFilter.prototype.sync = function (delay) {\n\t        this._lfo.sync(delay);\n\t        return this;\n\t    };\n\t    /**\n\t\t * Unsync the filter from the transport.\n\t\t * @returns {Tone.AutoFilter} this\n\t\t */\n\t    Tone.AutoFilter.prototype.unsync = function () {\n\t        this._lfo.unsync();\n\t        return this;\n\t    };\n\t    /**\n\t\t * Type of oscillator attached to the AutoFilter. \n\t\t * Possible values: \"sine\", \"square\", \"triangle\", \"sawtooth\".\n\t\t * @memberOf Tone.AutoFilter#\n\t\t * @type {string}\n\t\t * @name type\n\t\t */\n\t    Object.defineProperty(Tone.AutoFilter.prototype, 'type', {\n\t        get: function () {\n\t            return this._lfo.type;\n\t        },\n\t        set: function (type) {\n\t            this._lfo.type = type;\n\t        }\n\t    });\n\t    /**\n\t\t * The minimum value of the filter's cutoff frequency.\n\t\t * @memberOf Tone.AutoFilter#\n\t\t * @type {Frequency}\n\t\t * @name min\n\t\t */\n\t    Object.defineProperty(Tone.AutoFilter.prototype, 'baseFrequency', {\n\t        get: function () {\n\t            return this._lfo.min;\n\t        },\n\t        set: function (freq) {\n\t            this._lfo.min = this.toFrequency(freq);\n\t            //and set the max\n\t            this.octaves = this._octaves;\n\t        }\n\t    });\n\t    /**\n\t\t * The maximum value of the filter's cutoff frequency. \n\t\t * @memberOf Tone.AutoFilter#\n\t\t * @type {Positive}\n\t\t * @name octaves\n\t\t */\n\t    Object.defineProperty(Tone.AutoFilter.prototype, 'octaves', {\n\t        get: function () {\n\t            return this._octaves;\n\t        },\n\t        set: function (oct) {\n\t            this._octaves = oct;\n\t            this._lfo.max = this.baseFrequency * Math.pow(2, oct);\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up. \n\t\t *  @returns {Tone.AutoFilter} this\n\t\t */\n\t    Tone.AutoFilter.prototype.dispose = function () {\n\t        Tone.Effect.prototype.dispose.call(this);\n\t        this._lfo.dispose();\n\t        this._lfo = null;\n\t        this.filter.dispose();\n\t        this.filter = null;\n\t        this._writable([\n\t            'frequency',\n\t            'depth'\n\t        ]);\n\t        this.frequency = null;\n\t        this.depth = null;\n\t        return this;\n\t    };\n\t    return Tone.AutoFilter;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.AutoPanner is a Tone.Panner with an LFO connected to the pan amount. \n\t\t *         More on using autopanners [here](https://www.ableton.com/en/blog/autopan-chopper-effect-and-more-liveschool/).\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Effect}\n\t\t *  @param {Frequency|Object} [frequency] Rate of left-right oscillation. \n\t\t *  @example\n\t\t * //create an autopanner and start it's LFO\n\t\t * var autoPanner = new Tone.AutoPanner(\"4n\").toMaster().start();\n\t\t * //route an oscillator through the panner and start it\n\t\t * var oscillator = new Tone.Oscillator().connect(autoPanner).start();\n\t\t */\n\t    Tone.AutoPanner = function () {\n\t        var options = this.optionsObject(arguments, ['frequency'], Tone.AutoPanner.defaults);\n\t        Tone.Effect.call(this, options);\n\t        /**\n\t\t\t *  the lfo which drives the panning\n\t\t\t *  @type {Tone.LFO}\n\t\t\t *  @private\n\t\t\t */\n\t        this._lfo = new Tone.LFO({\n\t            'frequency': options.frequency,\n\t            'amplitude': options.depth,\n\t            'min': -1,\n\t            'max': 1\n\t        });\n\t        /**\n\t\t\t * The amount of panning between left and right. \n\t\t\t * 0 = always center. 1 = full range between left and right. \n\t\t\t * @type {NormalRange}\n\t\t\t * @signal\n\t\t\t */\n\t        this.depth = this._lfo.amplitude;\n\t        /**\n\t\t\t *  the panner node which does the panning\n\t\t\t *  @type {Tone.Panner}\n\t\t\t *  @private\n\t\t\t */\n\t        this._panner = new Tone.Panner();\n\t        /**\n\t\t\t * How fast the panner modulates between left and right. \n\t\t\t * @type {Frequency}\n\t\t\t * @signal\n\t\t\t */\n\t        this.frequency = this._lfo.frequency;\n\t        //connections\n\t        this.connectEffect(this._panner);\n\t        this._lfo.connect(this._panner.pan);\n\t        this.type = options.type;\n\t        this._readOnly([\n\t            'depth',\n\t            'frequency'\n\t        ]);\n\t    };\n\t    //extend Effect\n\t    Tone.extend(Tone.AutoPanner, Tone.Effect);\n\t    /**\n\t\t *  defaults\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.AutoPanner.defaults = {\n\t        'frequency': 1,\n\t        'type': 'sine',\n\t        'depth': 1\n\t    };\n\t    /**\n\t\t * Start the effect.\n\t\t * @param {Time} [time=now] When the LFO will start. \n\t\t * @returns {Tone.AutoPanner} this\n\t\t */\n\t    Tone.AutoPanner.prototype.start = function (time) {\n\t        this._lfo.start(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t * Stop the effect.\n\t\t * @param {Time} [time=now] When the LFO will stop. \n\t\t * @returns {Tone.AutoPanner} this\n\t\t */\n\t    Tone.AutoPanner.prototype.stop = function (time) {\n\t        this._lfo.stop(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t * Sync the panner to the transport.\n\t\t * @param {Time} [delay=0] Delay time before starting the effect after the\n\t\t *                               Transport has started. \n\t\t * @returns {Tone.AutoPanner} this\n\t\t */\n\t    Tone.AutoPanner.prototype.sync = function (delay) {\n\t        this._lfo.sync(delay);\n\t        return this;\n\t    };\n\t    /**\n\t\t * Unsync the panner from the transport\n\t\t * @returns {Tone.AutoPanner} this\n\t\t */\n\t    Tone.AutoPanner.prototype.unsync = function () {\n\t        this._lfo.unsync();\n\t        return this;\n\t    };\n\t    /**\n\t\t * Type of oscillator attached to the AutoFilter. \n\t\t * Possible values: \"sine\", \"square\", \"triangle\", \"sawtooth\".\n\t\t * @memberOf Tone.AutoFilter#\n\t\t * @type {string}\n\t\t * @name type\n\t\t */\n\t    Object.defineProperty(Tone.AutoPanner.prototype, 'type', {\n\t        get: function () {\n\t            return this._lfo.type;\n\t        },\n\t        set: function (type) {\n\t            this._lfo.type = type;\n\t        }\n\t    });\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.AutoPanner} this\n\t\t */\n\t    Tone.AutoPanner.prototype.dispose = function () {\n\t        Tone.Effect.prototype.dispose.call(this);\n\t        this._lfo.dispose();\n\t        this._lfo = null;\n\t        this._panner.dispose();\n\t        this._panner = null;\n\t        this._writable([\n\t            'depth',\n\t            'frequency'\n\t        ]);\n\t        this.frequency = null;\n\t        this.depth = null;\n\t        return this;\n\t    };\n\t    return Tone.AutoPanner;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.AutoWah connects a Tone.Follower to a bandpass filter (Tone.Filter).\n\t\t *          The frequency of the filter is adjusted proportionally to the \n\t\t *          incoming signal's amplitude. Inspiration from [Tuna.js](https://github.com/Dinahmoe/tuna).\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Effect}\n\t\t *  @param {Frequency|Object} [baseFrequency] The frequency the filter is set \n\t\t *                                            to at the low point of the wah\n\t\t *  @param {Positive} [octaves] The number of octaves above the baseFrequency\n\t\t *                                the filter will sweep to when fully open\n\t\t *  @param {Decibels} [sensitivity] The decibel threshold sensitivity for \n\t\t *                                   the incoming signal. Normal range of -40 to 0. \n\t\t *  @example\n\t\t * var autoWah = new Tone.AutoWah(50, 6, -30).toMaster();\n\t\t * //initialize the synth and connect to autowah\n\t\t * var synth = new Synth.connect(autoWah);\n\t\t * //Q value influences the effect of the wah - default is 2\n\t\t * autoWah.Q.value = 6;\n\t\t * //more audible on higher notes\n\t\t * synth.triggerAttackRelease(\"C4\", \"8n\")\n\t\t */\n\t    Tone.AutoWah = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'baseFrequency',\n\t            'octaves',\n\t            'sensitivity'\n\t        ], Tone.AutoWah.defaults);\n\t        Tone.Effect.call(this, options);\n\t        /**\n\t\t\t *  The envelope follower. Set the attack/release\n\t\t\t *  timing to adjust how the envelope is followed. \n\t\t\t *  @type {Tone.Follower}\n\t\t\t *  @private\n\t\t\t */\n\t        this.follower = new Tone.Follower(options.follower);\n\t        /**\n\t\t\t *  scales the follower value to the frequency domain\n\t\t\t *  @type {Tone}\n\t\t\t *  @private\n\t\t\t */\n\t        this._sweepRange = new Tone.ScaleExp(0, 1, 0.5);\n\t        /**\n\t\t\t *  @type {number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._baseFrequency = options.baseFrequency;\n\t        /**\n\t\t\t *  @type {number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._octaves = options.octaves;\n\t        /**\n\t\t\t *  the input gain to adjust the sensitivity\n\t\t\t *  @type {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._inputBoost = new Tone.Gain();\n\t        /**\n\t\t\t *  @type {BiquadFilterNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._bandpass = new Tone.Filter({\n\t            'rolloff': -48,\n\t            'frequency': 0,\n\t            'Q': options.Q\n\t        });\n\t        /**\n\t\t\t *  @type {Tone.Filter}\n\t\t\t *  @private\n\t\t\t */\n\t        this._peaking = new Tone.Filter(0, 'peaking');\n\t        this._peaking.gain.value = options.gain;\n\t        /**\n\t\t\t * The gain of the filter.\n\t\t\t * @type {Number}\n\t\t\t * @signal\n\t\t\t */\n\t        this.gain = this._peaking.gain;\n\t        /**\n\t\t\t * The quality of the filter.\n\t\t\t * @type {Positive}\n\t\t\t * @signal\n\t\t\t */\n\t        this.Q = this._bandpass.Q;\n\t        //the control signal path\n\t        this.effectSend.chain(this._inputBoost, this.follower, this._sweepRange);\n\t        this._sweepRange.connect(this._bandpass.frequency);\n\t        this._sweepRange.connect(this._peaking.frequency);\n\t        //the filtered path\n\t        this.effectSend.chain(this._bandpass, this._peaking, this.effectReturn);\n\t        //set the initial value\n\t        this._setSweepRange();\n\t        this.sensitivity = options.sensitivity;\n\t        this._readOnly([\n\t            'gain',\n\t            'Q'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.AutoWah, Tone.Effect);\n\t    /**\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.AutoWah.defaults = {\n\t        'baseFrequency': 100,\n\t        'octaves': 6,\n\t        'sensitivity': 0,\n\t        'Q': 2,\n\t        'gain': 2,\n\t        'follower': {\n\t            'attack': 0.3,\n\t            'release': 0.5\n\t        }\n\t    };\n\t    /**\n\t\t * The number of octaves that the filter will sweep above the \n\t\t * baseFrequency. \n\t\t * @memberOf Tone.AutoWah#\n\t\t * @type {Number}\n\t\t * @name octaves\n\t\t */\n\t    Object.defineProperty(Tone.AutoWah.prototype, 'octaves', {\n\t        get: function () {\n\t            return this._octaves;\n\t        },\n\t        set: function (octaves) {\n\t            this._octaves = octaves;\n\t            this._setSweepRange();\n\t        }\n\t    });\n\t    /**\n\t\t * The base frequency from which the sweep will start from.\n\t\t * @memberOf Tone.AutoWah#\n\t\t * @type {Frequency}\n\t\t * @name baseFrequency\n\t\t */\n\t    Object.defineProperty(Tone.AutoWah.prototype, 'baseFrequency', {\n\t        get: function () {\n\t            return this._baseFrequency;\n\t        },\n\t        set: function (baseFreq) {\n\t            this._baseFrequency = baseFreq;\n\t            this._setSweepRange();\n\t        }\n\t    });\n\t    /**\n\t\t * The sensitivity to control how responsive to the input signal the filter is. \n\t\t * @memberOf Tone.AutoWah#\n\t\t * @type {Decibels}\n\t\t * @name sensitivity\n\t\t */\n\t    Object.defineProperty(Tone.AutoWah.prototype, 'sensitivity', {\n\t        get: function () {\n\t            return this.gainToDb(1 / this._inputBoost.gain.value);\n\t        },\n\t        set: function (sensitivy) {\n\t            this._inputBoost.gain.value = 1 / this.dbToGain(sensitivy);\n\t        }\n\t    });\n\t    /**\n\t\t *  sets the sweep range of the scaler\n\t\t *  @private\n\t\t */\n\t    Tone.AutoWah.prototype._setSweepRange = function () {\n\t        this._sweepRange.min = this._baseFrequency;\n\t        this._sweepRange.max = Math.min(this._baseFrequency * Math.pow(2, this._octaves), this.context.sampleRate / 2);\n\t    };\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.AutoWah} this\n\t\t */\n\t    Tone.AutoWah.prototype.dispose = function () {\n\t        Tone.Effect.prototype.dispose.call(this);\n\t        this.follower.dispose();\n\t        this.follower = null;\n\t        this._sweepRange.dispose();\n\t        this._sweepRange = null;\n\t        this._bandpass.dispose();\n\t        this._bandpass = null;\n\t        this._peaking.dispose();\n\t        this._peaking = null;\n\t        this._inputBoost.dispose();\n\t        this._inputBoost = null;\n\t        this._writable([\n\t            'gain',\n\t            'Q'\n\t        ]);\n\t        this.gain = null;\n\t        this.Q = null;\n\t        return this;\n\t    };\n\t    return Tone.AutoWah;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.Bitcrusher downsamples the incoming signal to a different bitdepth. \n\t\t *         Lowering the bitdepth of the signal creates distortion. Read more about Bitcrushing\n\t\t *         on [Wikipedia](https://en.wikipedia.org/wiki/Bitcrusher).\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Effect}\n\t\t *  @param {Number} bits The number of bits to downsample the signal. Nominal range\n\t\t *                       of 1 to 8. \n\t\t *  @example\n\t\t * //initialize crusher and route a synth through it\n\t\t * var crusher = new Tone.BitCrusher(4).toMaster();\n\t\t * var synth = new Tone.MonoSynth().connect(crusher);\n\t\t */\n\t    Tone.BitCrusher = function () {\n\t        var options = this.optionsObject(arguments, ['bits'], Tone.BitCrusher.defaults);\n\t        Tone.Effect.call(this, options);\n\t        var invStepSize = 1 / Math.pow(2, options.bits - 1);\n\t        /**\n\t\t\t *  Subtract the input signal and the modulus of the input signal\n\t\t\t *  @type {Tone.Subtract}\n\t\t\t *  @private\n\t\t\t */\n\t        this._subtract = new Tone.Subtract();\n\t        /**\n\t\t\t *  The mod function\n\t\t\t *  @type  {Tone.Modulo}\n\t\t\t *  @private\n\t\t\t */\n\t        this._modulo = new Tone.Modulo(invStepSize);\n\t        /**\n\t\t\t *  keeps track of the bits\n\t\t\t *  @type {number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._bits = options.bits;\n\t        //connect it up\n\t        this.effectSend.fan(this._subtract, this._modulo);\n\t        this._modulo.connect(this._subtract, 0, 1);\n\t        this._subtract.connect(this.effectReturn);\n\t    };\n\t    Tone.extend(Tone.BitCrusher, Tone.Effect);\n\t    /**\n\t\t *  the default values\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.BitCrusher.defaults = { 'bits': 4 };\n\t    /**\n\t\t * The bit depth of the effect. Nominal range of 1-8. \n\t\t * @memberOf Tone.BitCrusher#\n\t\t * @type {number}\n\t\t * @name bits\n\t\t */\n\t    Object.defineProperty(Tone.BitCrusher.prototype, 'bits', {\n\t        get: function () {\n\t            return this._bits;\n\t        },\n\t        set: function (bits) {\n\t            this._bits = bits;\n\t            var invStepSize = 1 / Math.pow(2, bits - 1);\n\t            this._modulo.value = invStepSize;\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up. \n\t\t *  @returns {Tone.BitCrusher} this\n\t\t */\n\t    Tone.BitCrusher.prototype.dispose = function () {\n\t        Tone.Effect.prototype.dispose.call(this);\n\t        this._subtract.dispose();\n\t        this._subtract = null;\n\t        this._modulo.dispose();\n\t        this._modulo = null;\n\t        return this;\n\t    };\n\t    return Tone.BitCrusher;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.ChebyShev is a Chebyshev waveshaper, an effect which is good \n\t\t *         for making different types of distortion sounds.\n\t\t *         Note that odd orders sound very different from even ones, \n\t\t *         and order = 1 is no change. \n\t\t *         Read more at [music.columbia.edu](http://music.columbia.edu/cmc/musicandcomputers/chapter4/04_06.php).\n\t\t *\n\t\t *  @extends {Tone.Effect}\n\t\t *  @constructor\n\t\t *  @param {Positive|Object} [order] The order of the chebyshev polynomial. Normal range between 1-100. \n\t\t *  @example\n\t\t * //create a new cheby\n\t\t * var cheby = new Tone.Chebyshev(50);\n\t\t * //create a monosynth connected to our cheby\n\t\t * synth = new Tone.MonoSynth().connect(cheby);\n\t\t */\n\t    Tone.Chebyshev = function () {\n\t        var options = this.optionsObject(arguments, ['order'], Tone.Chebyshev.defaults);\n\t        Tone.Effect.call(this, options);\n\t        /**\n\t\t\t *  @type {WaveShaperNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._shaper = new Tone.WaveShaper(4096);\n\t        /**\n\t\t\t * holds onto the order of the filter\n\t\t\t * @type {number}\n\t\t\t * @private\n\t\t\t */\n\t        this._order = options.order;\n\t        this.connectEffect(this._shaper);\n\t        this.order = options.order;\n\t        this.oversample = options.oversample;\n\t    };\n\t    Tone.extend(Tone.Chebyshev, Tone.Effect);\n\t    /**\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.Chebyshev.defaults = {\n\t        'order': 1,\n\t        'oversample': 'none'\n\t    };\n\t    /**\n\t\t *  get the coefficient for that degree\n\t\t *  @param {number} x the x value\n\t\t *  @param   {number} degree \n\t\t *  @param {Object} memo memoize the computed value. \n\t\t *                       this speeds up computation greatly. \n\t\t *  @return  {number}       the coefficient \n\t\t *  @private\n\t\t */\n\t    Tone.Chebyshev.prototype._getCoefficient = function (x, degree, memo) {\n\t        if (memo.hasOwnProperty(degree)) {\n\t            return memo[degree];\n\t        } else if (degree === 0) {\n\t            memo[degree] = 0;\n\t        } else if (degree === 1) {\n\t            memo[degree] = x;\n\t        } else {\n\t            memo[degree] = 2 * x * this._getCoefficient(x, degree - 1, memo) - this._getCoefficient(x, degree - 2, memo);\n\t        }\n\t        return memo[degree];\n\t    };\n\t    /**\n\t\t * The order of the Chebyshev polynomial which creates\n\t\t * the equation which is applied to the incoming \n\t\t * signal through a Tone.WaveShaper. The equations\n\t\t * are in the form:<br>\n\t\t * order 2: 2x^2 + 1<br>\n\t\t * order 3: 4x^3 + 3x <br>\n\t\t * @memberOf Tone.Chebyshev#\n\t\t * @type {Positive}\n\t\t * @name order\n\t\t */\n\t    Object.defineProperty(Tone.Chebyshev.prototype, 'order', {\n\t        get: function () {\n\t            return this._order;\n\t        },\n\t        set: function (order) {\n\t            this._order = order;\n\t            var curve = new Array(4096);\n\t            var len = curve.length;\n\t            for (var i = 0; i < len; ++i) {\n\t                var x = i * 2 / len - 1;\n\t                if (x === 0) {\n\t                    //should output 0 when input is 0\n\t                    curve[i] = 0;\n\t                } else {\n\t                    curve[i] = this._getCoefficient(x, order, {});\n\t                }\n\t            }\n\t            this._shaper.curve = curve;\n\t        }\n\t    });\n\t    /**\n\t\t * The oversampling of the effect. Can either be \"none\", \"2x\" or \"4x\".\n\t\t * @memberOf Tone.Chebyshev#\n\t\t * @type {string}\n\t\t * @name oversample\n\t\t */\n\t    Object.defineProperty(Tone.Chebyshev.prototype, 'oversample', {\n\t        get: function () {\n\t            return this._shaper.oversample;\n\t        },\n\t        set: function (oversampling) {\n\t            this._shaper.oversample = oversampling;\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up. \n\t\t *  @returns {Tone.Chebyshev} this\n\t\t */\n\t    Tone.Chebyshev.prototype.dispose = function () {\n\t        Tone.Effect.prototype.dispose.call(this);\n\t        this._shaper.dispose();\n\t        this._shaper = null;\n\t        return this;\n\t    };\n\t    return Tone.Chebyshev;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Base class for Stereo effects. Provides effectSendL/R and effectReturnL/R. \n\t\t *\n\t\t *\t@constructor\n\t\t *\t@extends {Tone.Effect}\n\t\t */\n\t    Tone.StereoEffect = function () {\n\t        this.createInsOuts(1, 1);\n\t        //get the defaults\n\t        var options = this.optionsObject(arguments, ['wet'], Tone.Effect.defaults);\n\t        /**\n\t\t\t *  the drywet knob to control the amount of effect\n\t\t\t *  @type {Tone.CrossFade}\n\t\t\t *  @private\n\t\t\t */\n\t        this._dryWet = new Tone.CrossFade(options.wet);\n\t        /**\n\t\t\t *  The wet control, i.e. how much of the effected\n\t\t\t *  will pass through to the output. \n\t\t\t *  @type {NormalRange}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.wet = this._dryWet.fade;\n\t        /**\n\t\t\t *  then split it\n\t\t\t *  @type {Tone.Split}\n\t\t\t *  @private\n\t\t\t */\n\t        this._split = new Tone.Split();\n\t        /**\n\t\t\t *  the effects send LEFT\n\t\t\t *  @type {GainNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this.effectSendL = this._split.left;\n\t        /**\n\t\t\t *  the effects send RIGHT\n\t\t\t *  @type {GainNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this.effectSendR = this._split.right;\n\t        /**\n\t\t\t *  the stereo effect merger\n\t\t\t *  @type {Tone.Merge}\n\t\t\t *  @private\n\t\t\t */\n\t        this._merge = new Tone.Merge();\n\t        /**\n\t\t\t *  the effect return LEFT\n\t\t\t *  @type {GainNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this.effectReturnL = this._merge.left;\n\t        /**\n\t\t\t *  the effect return RIGHT\n\t\t\t *  @type {GainNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this.effectReturnR = this._merge.right;\n\t        //connections\n\t        this.input.connect(this._split);\n\t        //dry wet connections\n\t        this.input.connect(this._dryWet, 0, 0);\n\t        this._merge.connect(this._dryWet, 0, 1);\n\t        this._dryWet.connect(this.output);\n\t        this._readOnly(['wet']);\n\t    };\n\t    Tone.extend(Tone.StereoEffect, Tone.Effect);\n\t    /**\n\t\t *  Clean up. \n\t\t *  @returns {Tone.StereoEffect} this\n\t\t */\n\t    Tone.StereoEffect.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._dryWet.dispose();\n\t        this._dryWet = null;\n\t        this._split.dispose();\n\t        this._split = null;\n\t        this._merge.dispose();\n\t        this._merge = null;\n\t        this.effectSendL = null;\n\t        this.effectSendR = null;\n\t        this.effectReturnL = null;\n\t        this.effectReturnR = null;\n\t        this._writable(['wet']);\n\t        this.wet = null;\n\t        return this;\n\t    };\n\t    return Tone.StereoEffect;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t * \t@class  Tone.FeedbackEffect provides a loop between an \n\t\t * \t        audio source and its own output. This is a base-class\n\t\t * \t        for feedback effects. \n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Effect}\n\t\t *  @param {NormalRange|Object} [feedback] The initial feedback value.\n\t\t */\n\t    Tone.FeedbackEffect = function () {\n\t        var options = this.optionsObject(arguments, ['feedback']);\n\t        options = this.defaultArg(options, Tone.FeedbackEffect.defaults);\n\t        Tone.Effect.call(this, options);\n\t        /**\n\t\t\t *  the gain which controls the feedback\n\t\t\t *  @type {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._feedbackGain = new Tone.Gain(options.feedback, Tone.Type.NormalRange);\n\t        /**\n\t\t\t *  The amount of signal which is fed back into the effect input. \n\t\t\t *  @type {NormalRange}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.feedback = this._feedbackGain.gain;\n\t        //the feedback loop\n\t        this.effectReturn.chain(this._feedbackGain, this.effectSend);\n\t        this._readOnly(['feedback']);\n\t    };\n\t    Tone.extend(Tone.FeedbackEffect, Tone.Effect);\n\t    /**\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.FeedbackEffect.defaults = { 'feedback': 0.125 };\n\t    /**\n\t\t *  Clean up. \n\t\t *  @returns {Tone.FeedbackEffect} this\n\t\t */\n\t    Tone.FeedbackEffect.prototype.dispose = function () {\n\t        Tone.Effect.prototype.dispose.call(this);\n\t        this._writable(['feedback']);\n\t        this._feedbackGain.dispose();\n\t        this._feedbackGain = null;\n\t        this.feedback = null;\n\t        return this;\n\t    };\n\t    return Tone.FeedbackEffect;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Just like a stereo feedback effect, but the feedback is routed from left to right\n\t\t *         and right to left instead of on the same channel.\n\t\t *\n\t\t *\t@constructor\n\t\t *\t@extends {Tone.FeedbackEffect}\n\t\t */\n\t    Tone.StereoXFeedbackEffect = function () {\n\t        var options = this.optionsObject(arguments, ['feedback'], Tone.FeedbackEffect.defaults);\n\t        Tone.StereoEffect.call(this, options);\n\t        /**\n\t\t\t *  The amount of feedback from the output\n\t\t\t *  back into the input of the effect (routed\n\t\t\t *  across left and right channels).\n\t\t\t *  @type {NormalRange}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.feedback = new Tone.Signal(options.feedback, Tone.Type.NormalRange);\n\t        /**\n\t\t\t *  the left side feeback\n\t\t\t *  @type {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._feedbackLR = new Tone.Gain();\n\t        /**\n\t\t\t *  the right side feeback\n\t\t\t *  @type {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._feedbackRL = new Tone.Gain();\n\t        //connect it up\n\t        this.effectReturnL.chain(this._feedbackLR, this.effectSendR);\n\t        this.effectReturnR.chain(this._feedbackRL, this.effectSendL);\n\t        this.feedback.fan(this._feedbackLR.gain, this._feedbackRL.gain);\n\t        this._readOnly(['feedback']);\n\t    };\n\t    Tone.extend(Tone.StereoXFeedbackEffect, Tone.FeedbackEffect);\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.StereoXFeedbackEffect} this\n\t\t */\n\t    Tone.StereoXFeedbackEffect.prototype.dispose = function () {\n\t        Tone.StereoEffect.prototype.dispose.call(this);\n\t        this._writable(['feedback']);\n\t        this.feedback.dispose();\n\t        this.feedback = null;\n\t        this._feedbackLR.dispose();\n\t        this._feedbackLR = null;\n\t        this._feedbackRL.dispose();\n\t        this._feedbackRL = null;\n\t        return this;\n\t    };\n\t    return Tone.StereoXFeedbackEffect;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.Chorus is a stereo chorus effect with feedback composed of \n\t\t *         a left and right delay with a Tone.LFO applied to the delayTime of each channel. \n\t\t *         Inspiration from [Tuna.js](https://github.com/Dinahmoe/tuna/blob/master/tuna.js).\n\t\t *         Read more on the chorus effect on [SoundOnSound](http://www.soundonsound.com/sos/jun04/articles/synthsecrets.htm).\n\t\t *\n\t\t *\t@constructor\n\t\t *\t@extends {Tone.StereoXFeedbackEffect}\n\t\t *\t@param {Frequency|Object} [frequency] The frequency of the LFO.\n\t\t *\t@param {Milliseconds} [delayTime] The delay of the chorus effect in ms. \n\t\t *\t@param {NormalRange} [depth] The depth of the chorus.\n\t\t *\t@example\n\t\t * var chorus = new Tone.Chorus(4, 2.5, 0.5);\n\t\t * var synth = new Tone.PolySynth(4, Tone.MonoSynth).connect(chorus);\n\t\t * synth.triggerAttackRelease([\"C3\",\"E3\",\"G3\"], \"8n\");\n\t\t */\n\t    Tone.Chorus = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'frequency',\n\t            'delayTime',\n\t            'depth'\n\t        ], Tone.Chorus.defaults);\n\t        Tone.StereoXFeedbackEffect.call(this, options);\n\t        /**\n\t\t\t *  the depth of the chorus\n\t\t\t *  @type {number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._depth = options.depth;\n\t        /**\n\t\t\t *  the delayTime\n\t\t\t *  @type {number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._delayTime = options.delayTime / 1000;\n\t        /**\n\t\t\t *  the lfo which controls the delayTime\n\t\t\t *  @type {Tone.LFO}\n\t\t\t *  @private\n\t\t\t */\n\t        this._lfoL = new Tone.LFO({\n\t            'frequency': options.frequency,\n\t            'min': 0,\n\t            'max': 1\n\t        });\n\t        /**\n\t\t\t *  another LFO for the right side with a 180 degree phase diff\n\t\t\t *  @type {Tone.LFO}\n\t\t\t *  @private\n\t\t\t */\n\t        this._lfoR = new Tone.LFO({\n\t            'frequency': options.frequency,\n\t            'min': 0,\n\t            'max': 1,\n\t            'phase': 180\n\t        });\n\t        /**\n\t\t\t *  delay for left\n\t\t\t *  @type {Tone.Delay}\n\t\t\t *  @private\n\t\t\t */\n\t        this._delayNodeL = new Tone.Delay();\n\t        /**\n\t\t\t *  delay for right\n\t\t\t *  @type {Tone.Delay}\n\t\t\t *  @private\n\t\t\t */\n\t        this._delayNodeR = new Tone.Delay();\n\t        /**\n\t\t\t * The frequency of the LFO which modulates the delayTime. \n\t\t\t * @type {Frequency}\n\t\t\t * @signal\n\t\t\t */\n\t        this.frequency = this._lfoL.frequency;\n\t        //connections\n\t        this.effectSendL.chain(this._delayNodeL, this.effectReturnL);\n\t        this.effectSendR.chain(this._delayNodeR, this.effectReturnR);\n\t        //and pass through to make the detune apparent\n\t        this.effectSendL.connect(this.effectReturnL);\n\t        this.effectSendR.connect(this.effectReturnR);\n\t        //lfo setup\n\t        this._lfoL.connect(this._delayNodeL.delayTime);\n\t        this._lfoR.connect(this._delayNodeR.delayTime);\n\t        //start the lfo\n\t        this._lfoL.start();\n\t        this._lfoR.start();\n\t        //have one LFO frequency control the other\n\t        this._lfoL.frequency.connect(this._lfoR.frequency);\n\t        //set the initial values\n\t        this.depth = this._depth;\n\t        this.frequency.value = options.frequency;\n\t        this.type = options.type;\n\t        this._readOnly(['frequency']);\n\t        this.spread = options.spread;\n\t    };\n\t    Tone.extend(Tone.Chorus, Tone.StereoXFeedbackEffect);\n\t    /**\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.Chorus.defaults = {\n\t        'frequency': 1.5,\n\t        'delayTime': 3.5,\n\t        'depth': 0.7,\n\t        'feedback': 0.1,\n\t        'type': 'sine',\n\t        'spread': 180\n\t    };\n\t    /**\n\t\t * The depth of the effect. A depth of 1 makes the delayTime\n\t\t * modulate between 0 and 2*delayTime (centered around the delayTime). \n\t\t * @memberOf Tone.Chorus#\n\t\t * @type {NormalRange}\n\t\t * @name depth\n\t\t */\n\t    Object.defineProperty(Tone.Chorus.prototype, 'depth', {\n\t        get: function () {\n\t            return this._depth;\n\t        },\n\t        set: function (depth) {\n\t            this._depth = depth;\n\t            var deviation = this._delayTime * depth;\n\t            this._lfoL.min = Math.max(this._delayTime - deviation, 0);\n\t            this._lfoL.max = this._delayTime + deviation;\n\t            this._lfoR.min = Math.max(this._delayTime - deviation, 0);\n\t            this._lfoR.max = this._delayTime + deviation;\n\t        }\n\t    });\n\t    /**\n\t\t * The delayTime in milliseconds of the chorus. A larger delayTime\n\t\t * will give a more pronounced effect. Nominal range a delayTime\n\t\t * is between 2 and 20ms. \n\t\t * @memberOf Tone.Chorus#\n\t\t * @type {Milliseconds}\n\t\t * @name delayTime\n\t\t */\n\t    Object.defineProperty(Tone.Chorus.prototype, 'delayTime', {\n\t        get: function () {\n\t            return this._delayTime * 1000;\n\t        },\n\t        set: function (delayTime) {\n\t            this._delayTime = delayTime / 1000;\n\t            this.depth = this._depth;\n\t        }\n\t    });\n\t    /**\n\t\t * The oscillator type of the LFO. \n\t\t * @memberOf Tone.Chorus#\n\t\t * @type {string}\n\t\t * @name type\n\t\t */\n\t    Object.defineProperty(Tone.Chorus.prototype, 'type', {\n\t        get: function () {\n\t            return this._lfoL.type;\n\t        },\n\t        set: function (type) {\n\t            this._lfoL.type = type;\n\t            this._lfoR.type = type;\n\t        }\n\t    });\n\t    /** \n\t\t * Amount of stereo spread. When set to 0, both LFO's will be panned centrally.\n\t\t * When set to 180, LFO's will be panned hard left and right respectively.\n\t\t * @memberOf Tone.Chorus#\n\t\t * @type {Degrees}\n\t\t * @name spread\n\t\t */\n\t    Object.defineProperty(Tone.Chorus.prototype, 'spread', {\n\t        get: function () {\n\t            return this._lfoR.phase - this._lfoL.phase;    //180\n\t        },\n\t        set: function (spread) {\n\t            this._lfoL.phase = 90 - spread / 2;\n\t            this._lfoR.phase = spread / 2 + 90;\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up. \n\t\t *  @returns {Tone.Chorus} this\n\t\t */\n\t    Tone.Chorus.prototype.dispose = function () {\n\t        Tone.StereoXFeedbackEffect.prototype.dispose.call(this);\n\t        this._lfoL.dispose();\n\t        this._lfoL = null;\n\t        this._lfoR.dispose();\n\t        this._lfoR = null;\n\t        this._delayNodeL.dispose();\n\t        this._delayNodeL = null;\n\t        this._delayNodeR.dispose();\n\t        this._delayNodeR = null;\n\t        this._writable('frequency');\n\t        this.frequency = null;\n\t        return this;\n\t    };\n\t    return Tone.Chorus;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.Convolver is a wrapper around the Native Web Audio \n\t\t *          [ConvolverNode](http://webaudio.github.io/web-audio-api/#the-convolvernode-interface).\n\t\t *          Convolution is useful for reverb and filter emulation. Read more about convolution reverb on\n\t\t *          [Wikipedia](https://en.wikipedia.org/wiki/Convolution_reverb).\n\t\t *  \n\t\t *  @constructor\n\t\t *  @extends {Tone.Effect}\n\t\t *  @param {string|Tone.Buffer|Object} [url] The URL of the impulse response or the Tone.Buffer\n\t\t *                                           contianing the impulse response. \n\t\t *  @param {Function} onload The callback to invoke when the url is loaded.\n\t\t *  @example\n\t\t * //initializing the convolver with an impulse response\n\t\t * var convolver = new Tone.Convolver(\"./path/to/ir.wav\").toMaster();\n\t\t */\n\t    Tone.Convolver = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'url',\n\t            'onload'\n\t        ], Tone.Convolver.defaults);\n\t        Tone.Effect.call(this, options);\n\t        /**\n\t\t\t *  convolver node\n\t\t\t *  @type {ConvolverNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._convolver = this.context.createConvolver();\n\t        /**\n\t\t\t *  the convolution buffer\n\t\t\t *  @type {Tone.Buffer}\n\t\t\t *  @private\n\t\t\t */\n\t        this._buffer = new Tone.Buffer();\n\t        if (this.isString(options.url)) {\n\t            this._buffer.load(options.url, function (buffer) {\n\t                this.buffer = buffer;\n\t                options.onload();\n\t            }.bind(this));\n\t        } else if (options.url) {\n\t            this.buffer = options.url;\n\t            options.onload();\n\t        }\n\t        this.connectEffect(this._convolver);\n\t    };\n\t    Tone.extend(Tone.Convolver, Tone.Effect);\n\t    /**\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type  {Object}\n\t\t */\n\t    Tone.Convolver.defaults = { 'onload': Tone.noOp };\n\t    /**\n\t\t *  The convolver's buffer\n\t\t *  @memberOf Tone.Convolver#\n\t\t *  @type {AudioBuffer}\n\t\t *  @name buffer\n\t\t */\n\t    Object.defineProperty(Tone.Convolver.prototype, 'buffer', {\n\t        get: function () {\n\t            return this._buffer.get();\n\t        },\n\t        set: function (buffer) {\n\t            this._buffer.set(buffer);\n\t            this._convolver.buffer = this._buffer.get();\n\t        }\n\t    });\n\t    /**\n\t\t *  Load an impulse response url as an audio buffer.\n\t\t *  Decodes the audio asynchronously and invokes\n\t\t *  the callback once the audio buffer loads.\n\t\t *  @param {string} url The url of the buffer to load.\n\t\t *                      filetype support depends on the\n\t\t *                      browser.\n\t\t *  @param  {function=} callback\n\t\t *  @returns {Promise}\n\t\t */\n\t    Tone.Convolver.prototype.load = function (url, callback) {\n\t        return this._buffer.load(url, function (buff) {\n\t            this.buffer = buff;\n\t            if (callback) {\n\t                callback();\n\t            }\n\t        }.bind(this));\n\t    };\n\t    /**\n\t\t *  Clean up. \n\t\t *  @returns {Tone.Convolver} this\n\t\t */\n\t    Tone.Convolver.prototype.dispose = function () {\n\t        Tone.Effect.prototype.dispose.call(this);\n\t        this._convolver.disconnect();\n\t        this._convolver = null;\n\t        this._buffer.dispose();\n\t        this._buffer = null;\n\t        return this;\n\t    };\n\t    return Tone.Convolver;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.Distortion is a simple distortion effect using Tone.WaveShaper.\n\t\t *         Algorithm from [a stackoverflow answer](http://stackoverflow.com/a/22313408).\n\t\t *\n\t\t *  @extends {Tone.Effect}\n\t\t *  @constructor\n\t\t *  @param {Number|Object} [distortion] The amount of distortion (nominal range of 0-1)\n\t\t *  @example\n\t\t * var dist = new Tone.Distortion(0.8).toMaster();\n\t\t * var fm = new Tone.SimpleFM().connect(dist);\n\t\t * //this sounds good on bass notes\n\t\t * fm.triggerAttackRelease(\"A1\", \"8n\");\n\t\t */\n\t    Tone.Distortion = function () {\n\t        var options = this.optionsObject(arguments, ['distortion'], Tone.Distortion.defaults);\n\t        Tone.Effect.call(this, options);\n\t        /**\n\t\t\t *  @type {Tone.WaveShaper}\n\t\t\t *  @private\n\t\t\t */\n\t        this._shaper = new Tone.WaveShaper(4096);\n\t        /**\n\t\t\t * holds the distortion amount\n\t\t\t * @type {number}\n\t\t\t * @private\n\t\t\t */\n\t        this._distortion = options.distortion;\n\t        this.connectEffect(this._shaper);\n\t        this.distortion = options.distortion;\n\t        this.oversample = options.oversample;\n\t    };\n\t    Tone.extend(Tone.Distortion, Tone.Effect);\n\t    /**\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.Distortion.defaults = {\n\t        'distortion': 0.4,\n\t        'oversample': 'none'\n\t    };\n\t    /**\n\t\t * The amount of distortion.\n\t\t * @memberOf Tone.Distortion#\n\t\t * @type {NormalRange}\n\t\t * @name distortion\n\t\t */\n\t    Object.defineProperty(Tone.Distortion.prototype, 'distortion', {\n\t        get: function () {\n\t            return this._distortion;\n\t        },\n\t        set: function (amount) {\n\t            this._distortion = amount;\n\t            var k = amount * 100;\n\t            var deg = Math.PI / 180;\n\t            this._shaper.setMap(function (x) {\n\t                if (Math.abs(x) < 0.001) {\n\t                    //should output 0 when input is 0\n\t                    return 0;\n\t                } else {\n\t                    return (3 + k) * x * 20 * deg / (Math.PI + k * Math.abs(x));\n\t                }\n\t            });\n\t        }\n\t    });\n\t    /**\n\t\t * The oversampling of the effect. Can either be \"none\", \"2x\" or \"4x\".\n\t\t * @memberOf Tone.Distortion#\n\t\t * @type {string}\n\t\t * @name oversample\n\t\t */\n\t    Object.defineProperty(Tone.Distortion.prototype, 'oversample', {\n\t        get: function () {\n\t            return this._shaper.oversample;\n\t        },\n\t        set: function (oversampling) {\n\t            this._shaper.oversample = oversampling;\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up. \n\t\t *  @returns {Tone.Distortion} this\n\t\t */\n\t    Tone.Distortion.prototype.dispose = function () {\n\t        Tone.Effect.prototype.dispose.call(this);\n\t        this._shaper.dispose();\n\t        this._shaper = null;\n\t        return this;\n\t    };\n\t    return Tone.Distortion;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.FeedbackDelay is a DelayNode in which part of output\n\t\t *          signal is fed back into the delay. \n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.FeedbackEffect}\n\t\t *  @param {Time|Object} [delayTime] The delay applied to the incoming signal. \n\t\t *  @param {NormalRange=} feedback The amount of the effected signal which \n\t\t *                            is fed back through the delay.\n\t\t *  @example\n\t\t * var feedbackDelay = new Tone.FeedbackDelay(\"8n\", 0.5).toMaster();\n\t\t * var tom = new Tone.DrumSynth({\n\t\t * \t\"octaves\" : 4,\n\t\t * \t\"pitchDecay\" : 0.1\n\t\t * }).connect(feedbackDelay);\n\t\t * tom.triggerAttackRelease(\"A2\",\"32n\");\n\t\t */\n\t    Tone.FeedbackDelay = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'delayTime',\n\t            'feedback'\n\t        ], Tone.FeedbackDelay.defaults);\n\t        Tone.FeedbackEffect.call(this, options);\n\t        /**\n\t\t\t *  the delay node\n\t\t\t *  @type {Tone.Delay}\n\t\t\t *  @private\n\t\t\t */\n\t        this._delayNode = new Tone.Delay(options.delayTime);\n\t        /**\n\t\t\t *  The delayTime of the DelayNode. \n\t\t\t *  @type {Time}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.delayTime = this._delayNode.delayTime;\n\t        // connect it up\n\t        this.connectEffect(this._delayNode);\n\t        this._readOnly(['delayTime']);\n\t    };\n\t    Tone.extend(Tone.FeedbackDelay, Tone.FeedbackEffect);\n\t    /**\n\t\t *  The default values. \n\t\t *  @const\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.FeedbackDelay.defaults = { 'delayTime': 0.25 };\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.FeedbackDelay} this\n\t\t */\n\t    Tone.FeedbackDelay.prototype.dispose = function () {\n\t        Tone.FeedbackEffect.prototype.dispose.call(this);\n\t        this._delayNode.dispose();\n\t        this._delayNode = null;\n\t        this._writable(['delayTime']);\n\t        this.delayTime = null;\n\t        return this;\n\t    };\n\t    return Tone.FeedbackDelay;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  an array of comb filter delay values from Freeverb implementation\n\t\t *  @static\n\t\t *  @private\n\t\t *  @type {Array}\n\t\t */\n\t    var combFilterTunings = [\n\t        1557 / 44100,\n\t        1617 / 44100,\n\t        1491 / 44100,\n\t        1422 / 44100,\n\t        1277 / 44100,\n\t        1356 / 44100,\n\t        1188 / 44100,\n\t        1116 / 44100\n\t    ];\n\t    /**\n\t\t *  an array of allpass filter frequency values from Freeverb implementation\n\t\t *  @private\n\t\t *  @static\n\t\t *  @type {Array}\n\t\t */\n\t    var allpassFilterFrequencies = [\n\t        225,\n\t        556,\n\t        441,\n\t        341\n\t    ];\n\t    /**\n\t\t *  @class Tone.Freeverb is a reverb based on [Freeverb](https://ccrma.stanford.edu/~jos/pasp/Freeverb.html).\n\t\t *         Read more on reverb on [SoundOnSound](http://www.soundonsound.com/sos/may00/articles/reverb.htm).\n\t\t *\n\t\t *  @extends {Tone.Effect}\n\t\t *  @constructor\n\t\t *  @param {NormalRange|Object} [roomSize] Correlated to the decay time. \n\t\t *  @param {Frequency} [dampening] The cutoff frequency of a lowpass filter as part \n\t\t *                                 of the reverb. \n\t\t *  @example\n\t\t * var freeverb = new Tone.Freeverb().toMaster();\n\t\t * freeverb.dampening.value = 1000;\n\t\t * //routing synth through the reverb\n\t\t * var synth = new Tone.AMSynth().connect(freeverb);\n\t\t */\n\t    Tone.Freeverb = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'roomSize',\n\t            'dampening'\n\t        ], Tone.Freeverb.defaults);\n\t        Tone.StereoEffect.call(this, options);\n\t        /**\n\t\t\t *  The roomSize value between. A larger roomSize\n\t\t\t *  will result in a longer decay. \n\t\t\t *  @type {NormalRange}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.roomSize = new Tone.Signal(options.roomSize, Tone.Type.NormalRange);\n\t        /**\n\t\t\t *  The amount of dampening of the reverberant signal. \n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.dampening = new Tone.Signal(options.dampening, Tone.Type.Frequency);\n\t        /**\n\t\t\t *  the comb filters\n\t\t\t *  @type {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._combFilters = [];\n\t        /**\n\t\t\t *  the allpass filters on the left\n\t\t\t *  @type {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._allpassFiltersL = [];\n\t        /**\n\t\t\t *  the allpass filters on the right\n\t\t\t *  @type {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._allpassFiltersR = [];\n\t        //make the allpass filters on the right\n\t        for (var l = 0; l < allpassFilterFrequencies.length; l++) {\n\t            var allpassL = this.context.createBiquadFilter();\n\t            allpassL.type = 'allpass';\n\t            allpassL.frequency.value = allpassFilterFrequencies[l];\n\t            this._allpassFiltersL.push(allpassL);\n\t        }\n\t        //make the allpass filters on the left\n\t        for (var r = 0; r < allpassFilterFrequencies.length; r++) {\n\t            var allpassR = this.context.createBiquadFilter();\n\t            allpassR.type = 'allpass';\n\t            allpassR.frequency.value = allpassFilterFrequencies[r];\n\t            this._allpassFiltersR.push(allpassR);\n\t        }\n\t        //make the comb filters\n\t        for (var c = 0; c < combFilterTunings.length; c++) {\n\t            var lfpf = new Tone.LowpassCombFilter(combFilterTunings[c]);\n\t            if (c < combFilterTunings.length / 2) {\n\t                this.effectSendL.chain(lfpf, this._allpassFiltersL[0]);\n\t            } else {\n\t                this.effectSendR.chain(lfpf, this._allpassFiltersR[0]);\n\t            }\n\t            this.roomSize.connect(lfpf.resonance);\n\t            this.dampening.connect(lfpf.dampening);\n\t            this._combFilters.push(lfpf);\n\t        }\n\t        //chain the allpass filters togetehr\n\t        this.connectSeries.apply(this, this._allpassFiltersL);\n\t        this.connectSeries.apply(this, this._allpassFiltersR);\n\t        this._allpassFiltersL[this._allpassFiltersL.length - 1].connect(this.effectReturnL);\n\t        this._allpassFiltersR[this._allpassFiltersR.length - 1].connect(this.effectReturnR);\n\t        this._readOnly([\n\t            'roomSize',\n\t            'dampening'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.Freeverb, Tone.StereoEffect);\n\t    /**\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.Freeverb.defaults = {\n\t        'roomSize': 0.7,\n\t        'dampening': 3000\n\t    };\n\t    /**\n\t\t *  Clean up. \n\t\t *  @returns {Tone.Freeverb} this\n\t\t */\n\t    Tone.Freeverb.prototype.dispose = function () {\n\t        Tone.StereoEffect.prototype.dispose.call(this);\n\t        for (var al = 0; al < this._allpassFiltersL.length; al++) {\n\t            this._allpassFiltersL[al].disconnect();\n\t            this._allpassFiltersL[al] = null;\n\t        }\n\t        this._allpassFiltersL = null;\n\t        for (var ar = 0; ar < this._allpassFiltersR.length; ar++) {\n\t            this._allpassFiltersR[ar].disconnect();\n\t            this._allpassFiltersR[ar] = null;\n\t        }\n\t        this._allpassFiltersR = null;\n\t        for (var cf = 0; cf < this._combFilters.length; cf++) {\n\t            this._combFilters[cf].dispose();\n\t            this._combFilters[cf] = null;\n\t        }\n\t        this._combFilters = null;\n\t        this._writable([\n\t            'roomSize',\n\t            'dampening'\n\t        ]);\n\t        this.roomSize.dispose();\n\t        this.roomSize = null;\n\t        this.dampening.dispose();\n\t        this.dampening = null;\n\t        return this;\n\t    };\n\t    return Tone.Freeverb;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  an array of the comb filter delay time values\n\t\t *  @private\n\t\t *  @static\n\t\t *  @type {Array}\n\t\t */\n\t    var combFilterDelayTimes = [\n\t        1687 / 25000,\n\t        1601 / 25000,\n\t        2053 / 25000,\n\t        2251 / 25000\n\t    ];\n\t    /**\n\t\t *  the resonances of each of the comb filters\n\t\t *  @private\n\t\t *  @static\n\t\t *  @type {Array}\n\t\t */\n\t    var combFilterResonances = [\n\t        0.773,\n\t        0.802,\n\t        0.753,\n\t        0.733\n\t    ];\n\t    /**\n\t\t *  the allpass filter frequencies\n\t\t *  @private\n\t\t *  @static\n\t\t *  @type {Array}\n\t\t */\n\t    var allpassFilterFreqs = [\n\t        347,\n\t        113,\n\t        37\n\t    ];\n\t    /**\n\t\t *  @class Tone.JCReverb is a simple [Schroeder Reverberator](https://ccrma.stanford.edu/~jos/pasp/Schroeder_Reverberators.html)\n\t\t *         tuned by John Chowning in 1970.\n\t\t *         It is made up of three allpass filters and four Tone.FeedbackCombFilter. \n\t\t *         \n\t\t *\n\t\t *  @extends {Tone.Effect}\n\t\t *  @constructor\n\t\t *  @param {NormalRange|Object} [roomSize] Coorelates to the decay time.\n\t\t *  @example\n\t\t * var reverb = new Tone.JCReverb(0.4).connect(Tone.Master);\n\t\t * var delay = new Tone.FeedbackDelay(0.5); \n\t\t * //connecting the synth to reverb through delay\n\t\t * var synth = new Tone.DuoSynth().chain(delay, reverb);\n\t\t * synth.triggerAttackRelease(\"A4\",\"8n\");\n\t\t */\n\t    Tone.JCReverb = function () {\n\t        var options = this.optionsObject(arguments, ['roomSize'], Tone.JCReverb.defaults);\n\t        Tone.StereoEffect.call(this, options);\n\t        /**\n\t\t\t *  room size control values between [0,1]\n\t\t\t *  @type {NormalRange}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.roomSize = new Tone.Signal(options.roomSize, Tone.Type.NormalRange);\n\t        /**\n\t\t\t *  scale the room size\n\t\t\t *  @type {Tone.Scale}\n\t\t\t *  @private\n\t\t\t */\n\t        this._scaleRoomSize = new Tone.Scale(-0.733, 0.197);\n\t        /**\n\t\t\t *  a series of allpass filters\n\t\t\t *  @type {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._allpassFilters = [];\n\t        /**\n\t\t\t *  parallel feedback comb filters\n\t\t\t *  @type {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._feedbackCombFilters = [];\n\t        //make the allpass filters\n\t        for (var af = 0; af < allpassFilterFreqs.length; af++) {\n\t            var allpass = this.context.createBiquadFilter();\n\t            allpass.type = 'allpass';\n\t            allpass.frequency.value = allpassFilterFreqs[af];\n\t            this._allpassFilters.push(allpass);\n\t        }\n\t        //and the comb filters\n\t        for (var cf = 0; cf < combFilterDelayTimes.length; cf++) {\n\t            var fbcf = new Tone.FeedbackCombFilter(combFilterDelayTimes[cf], 0.1);\n\t            this._scaleRoomSize.connect(fbcf.resonance);\n\t            fbcf.resonance.value = combFilterResonances[cf];\n\t            this._allpassFilters[this._allpassFilters.length - 1].connect(fbcf);\n\t            if (cf < combFilterDelayTimes.length / 2) {\n\t                fbcf.connect(this.effectReturnL);\n\t            } else {\n\t                fbcf.connect(this.effectReturnR);\n\t            }\n\t            this._feedbackCombFilters.push(fbcf);\n\t        }\n\t        //chain the allpass filters together\n\t        this.roomSize.connect(this._scaleRoomSize);\n\t        this.connectSeries.apply(this, this._allpassFilters);\n\t        this.effectSendL.connect(this._allpassFilters[0]);\n\t        this.effectSendR.connect(this._allpassFilters[0]);\n\t        this._readOnly(['roomSize']);\n\t    };\n\t    Tone.extend(Tone.JCReverb, Tone.StereoEffect);\n\t    /**\n\t\t *  the default values\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.JCReverb.defaults = { 'roomSize': 0.5 };\n\t    /**\n\t\t *  Clean up. \n\t\t *  @returns {Tone.JCReverb} this\n\t\t */\n\t    Tone.JCReverb.prototype.dispose = function () {\n\t        Tone.StereoEffect.prototype.dispose.call(this);\n\t        for (var apf = 0; apf < this._allpassFilters.length; apf++) {\n\t            this._allpassFilters[apf].disconnect();\n\t            this._allpassFilters[apf] = null;\n\t        }\n\t        this._allpassFilters = null;\n\t        for (var fbcf = 0; fbcf < this._feedbackCombFilters.length; fbcf++) {\n\t            this._feedbackCombFilters[fbcf].dispose();\n\t            this._feedbackCombFilters[fbcf] = null;\n\t        }\n\t        this._feedbackCombFilters = null;\n\t        this._writable(['roomSize']);\n\t        this.roomSize.dispose();\n\t        this.roomSize = null;\n\t        this._scaleRoomSize.dispose();\n\t        this._scaleRoomSize = null;\n\t        return this;\n\t    };\n\t    return Tone.JCReverb;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Mid/Side processing separates the the 'mid' signal \n\t\t *         (which comes out of both the left and the right channel) \n\t\t *         and the 'side' (which only comes out of the the side channels) \n\t\t *         and effects them separately before being recombined.\n\t\t *         Applies a Mid/Side seperation and recombination.\n\t\t *         Algorithm found in [kvraudio forums](http://www.kvraudio.com/forum/viewtopic.php?t=212587).\n\t\t *         <br><br>\n\t\t *         This is a base-class for Mid/Side Effects. \n\t\t *\n\t\t *  @extends {Tone.Effect}\n\t\t *  @constructor\n\t\t */\n\t    Tone.MidSideEffect = function () {\n\t        Tone.Effect.apply(this, arguments);\n\t        /**\n\t\t\t *  The mid/side split\n\t\t\t *  @type  {Tone.MidSideSplit}\n\t\t\t *  @private\n\t\t\t */\n\t        this._midSideSplit = new Tone.MidSideSplit();\n\t        /**\n\t\t\t *  The mid/side merge\n\t\t\t *  @type  {Tone.MidSideMerge}\n\t\t\t *  @private\n\t\t\t */\n\t        this._midSideMerge = new Tone.MidSideMerge();\n\t        /**\n\t\t\t *  The mid send. Connect to mid processing\n\t\t\t *  @type {Tone.Expr}\n\t\t\t *  @private\n\t\t\t */\n\t        this.midSend = this._midSideSplit.mid;\n\t        /**\n\t\t\t *  The side send. Connect to side processing\n\t\t\t *  @type {Tone.Expr}\n\t\t\t *  @private\n\t\t\t */\n\t        this.sideSend = this._midSideSplit.side;\n\t        /**\n\t\t\t *  The mid return connection\n\t\t\t *  @type {GainNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this.midReturn = this._midSideMerge.mid;\n\t        /**\n\t\t\t *  The side return connection\n\t\t\t *  @type {GainNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this.sideReturn = this._midSideMerge.side;\n\t        //the connections\n\t        this.effectSend.connect(this._midSideSplit);\n\t        this._midSideMerge.connect(this.effectReturn);\n\t    };\n\t    Tone.extend(Tone.MidSideEffect, Tone.Effect);\n\t    /**\n\t\t *  Clean up. \n\t\t *  @returns {Tone.MidSideEffect} this\n\t\t */\n\t    Tone.MidSideEffect.prototype.dispose = function () {\n\t        Tone.Effect.prototype.dispose.call(this);\n\t        this._midSideSplit.dispose();\n\t        this._midSideSplit = null;\n\t        this._midSideMerge.dispose();\n\t        this._midSideMerge = null;\n\t        this.midSend = null;\n\t        this.sideSend = null;\n\t        this.midReturn = null;\n\t        this.sideReturn = null;\n\t        return this;\n\t    };\n\t    return Tone.MidSideEffect;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.Phaser is a phaser effect. Phasers work by changing the phase\n\t\t *         of different frequency components of an incoming signal. Read more on \n\t\t *         [Wikipedia](https://en.wikipedia.org/wiki/Phaser_(effect)). \n\t\t *         Inspiration for this phaser comes from [Tuna.js](https://github.com/Dinahmoe/tuna/).\n\t\t *\n\t\t *\t@extends {Tone.StereoEffect}\n\t\t *\t@constructor\n\t\t *\t@param {Frequency|Object} [frequency] The speed of the phasing. \n\t\t *\t@param {number} [octaves] The octaves of the effect. \n\t\t *\t@param {Frequency} [baseFrequency] The base frequency of the filters. \n\t\t *\t@example\n\t\t * var phaser = new Tone.Phaser({\n\t\t * \t\"frequency\" : 15, \n\t\t * \t\"octaves\" : 5, \n\t\t * \t\"baseFrequency\" : 1000\n\t\t * }).toMaster();\n\t\t * var synth = new Tone.FMSynth().connect(phaser);\n\t\t * synth.triggerAttackRelease(\"E3\", \"2n\");\n\t\t */\n\t    Tone.Phaser = function () {\n\t        //set the defaults\n\t        var options = this.optionsObject(arguments, [\n\t            'frequency',\n\t            'octaves',\n\t            'baseFrequency'\n\t        ], Tone.Phaser.defaults);\n\t        Tone.StereoEffect.call(this, options);\n\t        /**\n\t\t\t *  the lfo which controls the frequency on the left side\n\t\t\t *  @type {Tone.LFO}\n\t\t\t *  @private\n\t\t\t */\n\t        this._lfoL = new Tone.LFO(options.frequency, 0, 1);\n\t        /**\n\t\t\t *  the lfo which controls the frequency on the right side\n\t\t\t *  @type {Tone.LFO}\n\t\t\t *  @private\n\t\t\t */\n\t        this._lfoR = new Tone.LFO(options.frequency, 0, 1);\n\t        this._lfoR.phase = 180;\n\t        /**\n\t\t\t *  the base modulation frequency\n\t\t\t *  @type {number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._baseFrequency = options.baseFrequency;\n\t        /**\n\t\t\t *  the octaves of the phasing\n\t\t\t *  @type {number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._octaves = options.octaves;\n\t        /**\n\t\t\t *  The quality factor of the filters\n\t\t\t *  @type {Positive}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.Q = new Tone.Signal(options.Q, Tone.Type.Positive);\n\t        /**\n\t\t\t *  the array of filters for the left side\n\t\t\t *  @type {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._filtersL = this._makeFilters(options.stages, this._lfoL, this.Q);\n\t        /**\n\t\t\t *  the array of filters for the left side\n\t\t\t *  @type {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._filtersR = this._makeFilters(options.stages, this._lfoR, this.Q);\n\t        /**\n\t\t\t * the frequency of the effect\n\t\t\t * @type {Tone.Signal}\n\t\t\t */\n\t        this.frequency = this._lfoL.frequency;\n\t        this.frequency.value = options.frequency;\n\t        //connect them up\n\t        this.effectSendL.connect(this._filtersL[0]);\n\t        this.effectSendR.connect(this._filtersR[0]);\n\t        this._filtersL[options.stages - 1].connect(this.effectReturnL);\n\t        this._filtersR[options.stages - 1].connect(this.effectReturnR);\n\t        //control the frequency with one LFO\n\t        this._lfoL.frequency.connect(this._lfoR.frequency);\n\t        //set the options\n\t        this.baseFrequency = options.baseFrequency;\n\t        this.octaves = options.octaves;\n\t        //start the lfo\n\t        this._lfoL.start();\n\t        this._lfoR.start();\n\t        this._readOnly([\n\t            'frequency',\n\t            'Q'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.Phaser, Tone.StereoEffect);\n\t    /**\n\t\t *  defaults\n\t\t *  @static\n\t\t *  @type {object}\n\t\t */\n\t    Tone.Phaser.defaults = {\n\t        'frequency': 0.5,\n\t        'octaves': 3,\n\t        'stages': 10,\n\t        'Q': 10,\n\t        'baseFrequency': 350\n\t    };\n\t    /**\n\t\t *  @param {number} stages\n\t\t *  @returns {Array} the number of filters all connected together\n\t\t *  @private\n\t\t */\n\t    Tone.Phaser.prototype._makeFilters = function (stages, connectToFreq, Q) {\n\t        var filters = new Array(stages);\n\t        //make all the filters\n\t        for (var i = 0; i < stages; i++) {\n\t            var filter = this.context.createBiquadFilter();\n\t            filter.type = 'allpass';\n\t            Q.connect(filter.Q);\n\t            connectToFreq.connect(filter.frequency);\n\t            filters[i] = filter;\n\t        }\n\t        this.connectSeries.apply(this, filters);\n\t        return filters;\n\t    };\n\t    /**\n\t\t * The number of octaves the phase goes above\n\t\t * the baseFrequency\n\t\t * @memberOf Tone.Phaser#\n\t\t * @type {Positive}\n\t\t * @name octaves\n\t\t */\n\t    Object.defineProperty(Tone.Phaser.prototype, 'octaves', {\n\t        get: function () {\n\t            return this._octaves;\n\t        },\n\t        set: function (octaves) {\n\t            this._octaves = octaves;\n\t            var max = this._baseFrequency * Math.pow(2, octaves);\n\t            this._lfoL.max = max;\n\t            this._lfoR.max = max;\n\t        }\n\t    });\n\t    /**\n\t\t * The the base frequency of the filters. \n\t\t * @memberOf Tone.Phaser#\n\t\t * @type {number}\n\t\t * @name baseFrequency\n\t\t */\n\t    Object.defineProperty(Tone.Phaser.prototype, 'baseFrequency', {\n\t        get: function () {\n\t            return this._baseFrequency;\n\t        },\n\t        set: function (freq) {\n\t            this._baseFrequency = freq;\n\t            this._lfoL.min = freq;\n\t            this._lfoR.min = freq;\n\t            this.octaves = this._octaves;\n\t        }\n\t    });\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.Phaser} this\n\t\t */\n\t    Tone.Phaser.prototype.dispose = function () {\n\t        Tone.StereoEffect.prototype.dispose.call(this);\n\t        this._writable([\n\t            'frequency',\n\t            'Q'\n\t        ]);\n\t        this.Q.dispose();\n\t        this.Q = null;\n\t        this._lfoL.dispose();\n\t        this._lfoL = null;\n\t        this._lfoR.dispose();\n\t        this._lfoR = null;\n\t        for (var i = 0; i < this._filtersL.length; i++) {\n\t            this._filtersL[i].disconnect();\n\t            this._filtersL[i] = null;\n\t        }\n\t        this._filtersL = null;\n\t        for (var j = 0; j < this._filtersR.length; j++) {\n\t            this._filtersR[j].disconnect();\n\t            this._filtersR[j] = null;\n\t        }\n\t        this._filtersR = null;\n\t        this.frequency = null;\n\t        return this;\n\t    };\n\t    return Tone.Phaser;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.PingPongDelay is a feedback delay effect where the echo is heard\n\t\t *          first in one channel and next in the opposite channel. In a stereo\n\t\t *          system these are the right and left channels.\n\t\t *          PingPongDelay in more simplified terms is two Tone.FeedbackDelays \n\t\t *          with independent delay values. Each delay is routed to one channel\n\t\t *          (left or right), and the channel triggered second will always \n\t\t *          trigger at the same interval after the first.\n\t\t *\n\t\t * \t@constructor\n\t\t * \t@extends {Tone.StereoXFeedbackEffect}\n\t\t *  @param {Time|Object} [delayTime] The delayTime between consecutive echos.\n\t\t *  @param {NormalRange=} feedback The amount of the effected signal which \n\t\t *                                 is fed back through the delay.\n\t\t *  @example\n\t\t * var pingPong = new Tone.PingPongDelay(\"4n\", 0.2).toMaster();\n\t\t * var drum = new Tone.DrumSynth().connect(pingPong);\n\t\t * drum.triggerAttackRelease(\"C4\", \"32n\");\n\t\t */\n\t    Tone.PingPongDelay = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'delayTime',\n\t            'feedback'\n\t        ], Tone.PingPongDelay.defaults);\n\t        Tone.StereoXFeedbackEffect.call(this, options);\n\t        /**\n\t\t\t *  the delay node on the left side\n\t\t\t *  @type {Tone.Delay}\n\t\t\t *  @private\n\t\t\t */\n\t        this._leftDelay = new Tone.Delay(0, options.maxDelayTime);\n\t        /**\n\t\t\t *  the delay node on the right side\n\t\t\t *  @type {Tone.Delay}\n\t\t\t *  @private\n\t\t\t */\n\t        this._rightDelay = new Tone.Delay(0, options.maxDelayTime);\n\t        /**\n\t\t\t *  the predelay on the right side\n\t\t\t *  @type {Tone.Delay}\n\t\t\t *  @private\n\t\t\t */\n\t        this._rightPreDelay = new Tone.Delay(0, options.maxDelayTime);\n\t        /**\n\t\t\t *  the delay time signal\n\t\t\t *  @type {Time}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.delayTime = new Tone.Signal(options.delayTime, Tone.Type.Time);\n\t        //connect it up\n\t        this.effectSendL.chain(this._leftDelay, this.effectReturnL);\n\t        this.effectSendR.chain(this._rightPreDelay, this._rightDelay, this.effectReturnR);\n\t        this.delayTime.fan(this._leftDelay.delayTime, this._rightDelay.delayTime, this._rightPreDelay.delayTime);\n\t        //rearranged the feedback to be after the rightPreDelay\n\t        this._feedbackLR.disconnect();\n\t        this._feedbackLR.connect(this._rightDelay);\n\t        this._readOnly(['delayTime']);\n\t    };\n\t    Tone.extend(Tone.PingPongDelay, Tone.StereoXFeedbackEffect);\n\t    /**\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.PingPongDelay.defaults = {\n\t        'delayTime': 0.25,\n\t        'maxDelayTime': 1\n\t    };\n\t    /**\n\t\t *  Clean up. \n\t\t *  @returns {Tone.PingPongDelay} this\n\t\t */\n\t    Tone.PingPongDelay.prototype.dispose = function () {\n\t        Tone.StereoXFeedbackEffect.prototype.dispose.call(this);\n\t        this._leftDelay.dispose();\n\t        this._leftDelay = null;\n\t        this._rightDelay.dispose();\n\t        this._rightDelay = null;\n\t        this._rightPreDelay.dispose();\n\t        this._rightPreDelay = null;\n\t        this._writable(['delayTime']);\n\t        this.delayTime.dispose();\n\t        this.delayTime = null;\n\t        return this;\n\t    };\n\t    return Tone.PingPongDelay;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.PitchShift does near-realtime pitch shifting to the incoming signal. \n\t\t *         The effect is achieved by speeding up or slowing down the delayTime\n\t\t *         of a DelayNode using a sawtooth wave. \n\t\t *         Algorithm found in [this pdf](http://dsp-book.narod.ru/soundproc.pdf).\n\t\t *         Additional reference by [Miller Pucket](http://msp.ucsd.edu/techniques/v0.11/book-html/node115.html).\n\t\t *         \n\t\t *  @extends {Tone.FeedbackEffect}\n\t\t *  @param {Interval=} pitch The interval to transpose the incoming signal by. \n\t\t */\n\t    Tone.PitchShift = function () {\n\t        var options = this.optionsObject(arguments, ['pitch'], Tone.PitchShift.defaults);\n\t        Tone.FeedbackEffect.call(this, options);\n\t        /**\n\t\t\t *  The pitch signal\n\t\t\t *  @type  {Tone.Signal}\n\t\t\t *  @private\n\t\t\t */\n\t        this._frequency = new Tone.Signal(0);\n\t        /**\n\t\t\t *  Uses two DelayNodes to cover up the jump in\n\t\t\t *  the sawtooth wave. \n\t\t\t *  @type  {DelayNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._delayA = new Tone.Delay(0, 1);\n\t        /**\n\t\t\t *  The first LFO.\n\t\t\t *  @type  {Tone.LFO}\n\t\t\t *  @private\n\t\t\t */\n\t        this._lfoA = new Tone.LFO({\n\t            'min': 0,\n\t            'max': 0.1,\n\t            'type': 'sawtooth'\n\t        }).connect(this._delayA.delayTime);\n\t        /**\n\t\t\t *  The second DelayNode\n\t\t\t *  @type  {DelayNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._delayB = new Tone.Delay(0, 1);\n\t        /**\n\t\t\t *  The first LFO.\n\t\t\t *  @type  {Tone.LFO}\n\t\t\t *  @private\n\t\t\t */\n\t        this._lfoB = new Tone.LFO({\n\t            'min': 0,\n\t            'max': 0.1,\n\t            'type': 'sawtooth',\n\t            'phase': 180\n\t        }).connect(this._delayB.delayTime);\n\t        /**\n\t\t\t *  Crossfade quickly between the two delay lines\n\t\t\t *  to cover up the jump in the sawtooth wave\n\t\t\t *  @type  {Tone.CrossFade}\n\t\t\t *  @private\n\t\t\t */\n\t        this._crossFade = new Tone.CrossFade();\n\t        /**\n\t\t\t *  LFO which alternates between the two\n\t\t\t *  delay lines to cover up the disparity in the\n\t\t\t *  sawtooth wave. \n\t\t\t *  @type  {Tone.LFO}\n\t\t\t *  @private\n\t\t\t */\n\t        this._crossFadeLFO = new Tone.LFO({\n\t            'min': 0,\n\t            'max': 1,\n\t            'type': 'triangle',\n\t            'phase': 90\n\t        }).connect(this._crossFade.fade);\n\t        /**\n\t\t\t *  The delay node\n\t\t\t *  @type {Tone.Delay}\n\t\t\t *  @private\n\t\t\t */\n\t        this._feedbackDelay = new Tone.Delay(options.delayTime);\n\t        /**\n\t\t\t *  The amount of delay on the input signal\n\t\t\t *  @type {Time}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.delayTime = this._feedbackDelay.delayTime;\n\t        this._readOnly('delayTime');\n\t        /**\n\t\t\t *  Hold the current pitch\n\t\t\t *  @type {Number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._pitch = options.pitch;\n\t        /**\n\t\t\t *  Hold the current windowSize\n\t\t\t *  @type {Number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._windowSize = options.windowSize;\n\t        //connect the two delay lines up\n\t        this._delayA.connect(this._crossFade.a);\n\t        this._delayB.connect(this._crossFade.b);\n\t        //connect the frequency\n\t        this._frequency.fan(this._lfoA.frequency, this._lfoB.frequency, this._crossFadeLFO.frequency);\n\t        //route the input\n\t        this.effectSend.fan(this._delayA, this._delayB);\n\t        this._crossFade.chain(this._feedbackDelay, this.effectReturn);\n\t        //start the LFOs at the same time\n\t        var now = this.now();\n\t        this._lfoA.start(now);\n\t        this._lfoB.start(now);\n\t        this._crossFadeLFO.start(now);\n\t        //set the initial value\n\t        this.windowSize = this._windowSize;\n\t    };\n\t    Tone.extend(Tone.PitchShift, Tone.FeedbackEffect);\n\t    /**\n\t\t *  default values\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t *  @const\n\t\t */\n\t    Tone.PitchShift.defaults = {\n\t        'pitch': 0,\n\t        'windowSize': 0.1,\n\t        'delayTime': 0,\n\t        'feedback': 0\n\t    };\n\t    /**\n\t\t * Repitch the incoming signal by some interval (measured\n\t\t * in semi-tones). \n\t\t * @memberOf Tone.PitchShift#\n\t\t * @type {Interval}\n\t\t * @name pitch\n\t\t * @example\n\t\t * pitchShift.pitch = -12; //down one octave\n\t\t * pitchShift.pitch = 7; //up a fifth\n\t\t */\n\t    Object.defineProperty(Tone.PitchShift.prototype, 'pitch', {\n\t        get: function () {\n\t            return this._pitch;\n\t        },\n\t        set: function (interval) {\n\t            this._pitch = interval;\n\t            var factor = 0;\n\t            if (interval < 0) {\n\t                this._lfoA.min = 0;\n\t                this._lfoA.max = this._windowSize;\n\t                this._lfoB.min = 0;\n\t                this._lfoB.max = this._windowSize;\n\t                factor = this.intervalToFrequencyRatio(interval - 1) + 1;\n\t            } else {\n\t                this._lfoA.min = this._windowSize;\n\t                this._lfoA.max = 0;\n\t                this._lfoB.min = this._windowSize;\n\t                this._lfoB.max = 0;\n\t                factor = this.intervalToFrequencyRatio(interval) - 1;\n\t            }\n\t            this._frequency.value = factor * (1.2 / this._windowSize);\n\t        }\n\t    });\n\t    /**\n\t\t * The window size corresponds roughly to the sample length in a looping sampler. \n\t\t * Smaller values are desirable for a less noticeable delay time of the pitch shifted\n\t\t * signal, but larger values will result in smoother pitch shifting for larger intervals. \n\t\t * A nominal range of 0.03 to 0.1 is recommended. \n\t\t * @memberOf Tone.PitchShift#\n\t\t * @type {Time}\n\t\t * @name windowSize\n\t\t * @example\n\t\t * pitchShift.windowSize = 0.1;\n\t\t */\n\t    Object.defineProperty(Tone.PitchShift.prototype, 'windowSize', {\n\t        get: function () {\n\t            return this._windowSize;\n\t        },\n\t        set: function (size) {\n\t            this._windowSize = this.toSeconds(size);\n\t            this.pitch = this._pitch;\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up.\n\t\t *  @return  {Tone.PitchShift}  this\n\t\t */\n\t    Tone.PitchShift.prototype.dispose = function () {\n\t        Tone.FeedbackEffect.prototype.dispose.call(this);\n\t        this._frequency.dispose();\n\t        this._frequency = null;\n\t        this._delayA.disconnect();\n\t        this._delayA = null;\n\t        this._delayB.disconnect();\n\t        this._delayB = null;\n\t        this._lfoA.dispose();\n\t        this._lfoA = null;\n\t        this._lfoB.dispose();\n\t        this._lfoB = null;\n\t        this._crossFade.dispose();\n\t        this._crossFade = null;\n\t        this._crossFadeLFO.dispose();\n\t        this._crossFadeLFO = null;\n\t        this._writable('delayTime');\n\t        this._feedbackDelay.dispose();\n\t        this._feedbackDelay = null;\n\t        this.delayTime = null;\n\t        return this;\n\t    };\n\t    return Tone.PitchShift;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Base class for stereo feedback effects where the effectReturn\n\t\t *         is fed back into the same channel. \n\t\t *\n\t\t *\t@constructor\n\t\t *\t@extends {Tone.FeedbackEffect}\n\t\t */\n\t    Tone.StereoFeedbackEffect = function () {\n\t        var options = this.optionsObject(arguments, ['feedback'], Tone.FeedbackEffect.defaults);\n\t        Tone.StereoEffect.call(this, options);\n\t        /**\n\t\t\t *  controls the amount of feedback\n\t\t\t *  @type {NormalRange}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.feedback = new Tone.Signal(options.feedback, Tone.Type.NormalRange);\n\t        /**\n\t\t\t *  the left side feeback\n\t\t\t *  @type {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._feedbackL = new Tone.Gain();\n\t        /**\n\t\t\t *  the right side feeback\n\t\t\t *  @type {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._feedbackR = new Tone.Gain();\n\t        //connect it up\n\t        this.effectReturnL.chain(this._feedbackL, this.effectSendL);\n\t        this.effectReturnR.chain(this._feedbackR, this.effectSendR);\n\t        this.feedback.fan(this._feedbackL.gain, this._feedbackR.gain);\n\t        this._readOnly(['feedback']);\n\t    };\n\t    Tone.extend(Tone.StereoFeedbackEffect, Tone.FeedbackEffect);\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.StereoFeedbackEffect} this\n\t\t */\n\t    Tone.StereoFeedbackEffect.prototype.dispose = function () {\n\t        Tone.StereoEffect.prototype.dispose.call(this);\n\t        this._writable(['feedback']);\n\t        this.feedback.dispose();\n\t        this.feedback = null;\n\t        this._feedbackL.dispose();\n\t        this._feedbackL = null;\n\t        this._feedbackR.dispose();\n\t        this._feedbackR = null;\n\t        return this;\n\t    };\n\t    return Tone.StereoFeedbackEffect;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Applies a width factor to the mid/side seperation. \n\t\t *         0 is all mid and 1 is all side.\n\t\t *         Algorithm found in [kvraudio forums](http://www.kvraudio.com/forum/viewtopic.php?t=212587).\n\t\t *         <br><br>\n\t\t *         <code>\n\t\t *         Mid *= 2*(1-width)<br>\n\t\t *         Side *= 2*width\n\t\t *         </code>\n\t\t *\n\t\t *  @extends {Tone.MidSideEffect}\n\t\t *  @constructor\n\t\t *  @param {NormalRange|Object} [width] The stereo width. A width of 0 is mono and 1 is stereo. 0.5 is no change.\n\t\t */\n\t    Tone.StereoWidener = function () {\n\t        var options = this.optionsObject(arguments, ['width'], Tone.StereoWidener.defaults);\n\t        Tone.MidSideEffect.call(this, options);\n\t        /**\n\t\t\t *  The width control. 0 = 100% mid. 1 = 100% side. 0.5 = no change. \n\t\t\t *  @type {NormalRange}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.width = new Tone.Signal(options.width, Tone.Type.NormalRange);\n\t        /**\n\t\t\t *  Mid multiplier\n\t\t\t *  @type {Tone.Expr}\n\t\t\t *  @private\n\t\t\t */\n\t        this._midMult = new Tone.Expr('$0 * ($1 * (1 - $2))');\n\t        /**\n\t\t\t *  Side multiplier\n\t\t\t *  @type {Tone.Expr}\n\t\t\t *  @private\n\t\t\t */\n\t        this._sideMult = new Tone.Expr('$0 * ($1 * $2)');\n\t        /**\n\t\t\t *  constant output of 2\n\t\t\t *  @type {Tone}\n\t\t\t *  @private\n\t\t\t */\n\t        this._two = new Tone.Signal(2);\n\t        //the mid chain\n\t        this._two.connect(this._midMult, 0, 1);\n\t        this.width.connect(this._midMult, 0, 2);\n\t        //the side chain\n\t        this._two.connect(this._sideMult, 0, 1);\n\t        this.width.connect(this._sideMult, 0, 2);\n\t        //connect it to the effect send/return\n\t        this.midSend.chain(this._midMult, this.midReturn);\n\t        this.sideSend.chain(this._sideMult, this.sideReturn);\n\t        this._readOnly(['width']);\n\t    };\n\t    Tone.extend(Tone.StereoWidener, Tone.MidSideEffect);\n\t    /**\n\t\t *  the default values\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.StereoWidener.defaults = { 'width': 0.5 };\n\t    /**\n\t\t *  Clean up. \n\t\t *  @returns {Tone.StereoWidener} this\n\t\t */\n\t    Tone.StereoWidener.prototype.dispose = function () {\n\t        Tone.MidSideEffect.prototype.dispose.call(this);\n\t        this._writable(['width']);\n\t        this.width.dispose();\n\t        this.width = null;\n\t        this._midMult.dispose();\n\t        this._midMult = null;\n\t        this._sideMult.dispose();\n\t        this._sideMult = null;\n\t        this._two.dispose();\n\t        this._two = null;\n\t        return this;\n\t    };\n\t    return Tone.StereoWidener;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.Tremolo modulates the amplitude of an incoming signal using a Tone.LFO.\n\t\t *         The type, frequency, and depth of the LFO is controllable.\n\t\t *\n\t\t *  @extends {Tone.StereoEffect}\n\t\t *  @constructor\n\t\t *  @param {Frequency} [frequency] The rate of the effect.\n\t\t *  @param {NormalRange} [depth] The depth of the effect.\n\t\t *  @example\n\t\t * //create a tremolo and start it's LFO\n\t\t * var tremolo = new Tone.Tremolo(9, 0.75).toMaster().start();\n\t\t * //route an oscillator through the tremolo and start it\n\t\t * var oscillator = new Tone.Oscillator().connect(tremolo).start();\n\t\t */\n\t    Tone.Tremolo = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'frequency',\n\t            'depth'\n\t        ], Tone.Tremolo.defaults);\n\t        Tone.StereoEffect.call(this, options);\n\t        /**\n\t\t\t *  The tremelo LFO in the left channel\n\t\t\t *  @type  {Tone.LFO}\n\t\t\t *  @private\n\t\t\t */\n\t        this._lfoL = new Tone.LFO({\n\t            'phase': options.spread,\n\t            'min': 1,\n\t            'max': 0\n\t        });\n\t        /**\n\t\t\t *  The tremelo LFO in the left channel\n\t\t\t *  @type  {Tone.LFO}\n\t\t\t *  @private\n\t\t\t */\n\t        this._lfoR = new Tone.LFO({\n\t            'phase': options.spread,\n\t            'min': 1,\n\t            'max': 0\n\t        });\n\t        /**\n\t\t\t *  Where the gain is multiplied\n\t\t\t *  @type  {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._amplitudeL = new Tone.Gain();\n\t        /**\n\t\t\t *  Where the gain is multiplied\n\t\t\t *  @type  {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._amplitudeR = new Tone.Gain();\n\t        /**\n\t\t\t *  The frequency of the tremolo.\n\t\t\t *  @type  {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.frequency = new Tone.Signal(options.frequency, Tone.Type.Frequency);\n\t        /**\n\t\t\t *  The depth of the effect. A depth of 0, has no effect\n\t\t\t *  on the amplitude, and a depth of 1 makes the amplitude\n\t\t\t *  modulate fully between 0 and 1.\n\t\t\t *  @type  {NormalRange}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.depth = new Tone.Signal(options.depth, Tone.Type.NormalRange);\n\t        this._readOnly([\n\t            'frequency',\n\t            'depth'\n\t        ]);\n\t        this.effectSendL.chain(this._amplitudeL, this.effectReturnL);\n\t        this.effectSendR.chain(this._amplitudeR, this.effectReturnR);\n\t        this._lfoL.connect(this._amplitudeL.gain);\n\t        this._lfoR.connect(this._amplitudeR.gain);\n\t        this.frequency.fan(this._lfoL.frequency, this._lfoR.frequency);\n\t        this.depth.fan(this._lfoR.amplitude, this._lfoL.amplitude);\n\t        this.type = options.type;\n\t        this.spread = options.spread;\n\t    };\n\t    Tone.extend(Tone.Tremolo, Tone.StereoEffect);\n\t    /**\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.Tremolo.defaults = {\n\t        'frequency': 10,\n\t        'type': 'sine',\n\t        'depth': 0.5,\n\t        'spread': 180\n\t    };\n\t    /**\n\t\t * Start the tremolo.\n\t\t * @param {Time} [time=now] When the tremolo begins.\n\t\t * @returns {Tone.Tremolo} this\n\t\t */\n\t    Tone.Tremolo.prototype.start = function (time) {\n\t        this._lfoL.start(time);\n\t        this._lfoR.start(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t * Stop the tremolo.\n\t\t * @param {Time} [time=now] When the tremolo stops.\n\t\t * @returns {Tone.Tremolo} this\n\t\t */\n\t    Tone.Tremolo.prototype.stop = function (time) {\n\t        this._lfoL.stop(time);\n\t        this._lfoR.stop(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t * Sync the effect to the transport.\n\t\t * @param {Time} [delay=0] Delay time before starting the effect after the\n\t\t *                              Transport has started.\n\t\t * @returns {Tone.AutoFilter} this\n\t\t */\n\t    Tone.Tremolo.prototype.sync = function (delay) {\n\t        this._lfoL.sync(delay);\n\t        this._lfoR.sync(delay);\n\t        return this;\n\t    };\n\t    /**\n\t\t * Unsync the filter from the transport\n\t\t * @returns {Tone.Tremolo} this\n\t\t */\n\t    Tone.Tremolo.prototype.unsync = function () {\n\t        this._lfoL.unsync();\n\t        this._lfoR.unsync();\n\t        return this;\n\t    };\n\t    /**\n\t\t * The Tremolo's oscillator type.\n\t\t * @memberOf Tone.Tremolo#\n\t\t * @type {string}\n\t\t * @name type\n\t\t */\n\t    Object.defineProperty(Tone.Tremolo.prototype, 'type', {\n\t        get: function () {\n\t            return this._lfoL.type;\n\t        },\n\t        set: function (type) {\n\t            this._lfoL.type = type;\n\t            this._lfoR.type = type;\n\t        }\n\t    });\n\t    /** \n\t\t * Amount of stereo spread. When set to 0, both LFO's will be panned centrally.\n\t\t * When set to 180, LFO's will be panned hard left and right respectively.\n\t\t * @memberOf Tone.Tremolo#\n\t\t * @type {Degrees}\n\t\t * @name spread\n\t\t */\n\t    Object.defineProperty(Tone.Tremolo.prototype, 'spread', {\n\t        get: function () {\n\t            return this._lfoR.phase - this._lfoL.phase;    //180\n\t        },\n\t        set: function (spread) {\n\t            this._lfoL.phase = 90 - spread / 2;\n\t            this._lfoR.phase = spread / 2 + 90;\n\t        }\n\t    });\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.Tremolo} this\n\t\t */\n\t    Tone.Tremolo.prototype.dispose = function () {\n\t        Tone.StereoEffect.prototype.dispose.call(this);\n\t        this._writable([\n\t            'frequency',\n\t            'depth'\n\t        ]);\n\t        this._lfoL.dispose();\n\t        this._lfoL = null;\n\t        this._lfoR.dispose();\n\t        this._lfoR = null;\n\t        this._amplitudeL.dispose();\n\t        this._amplitudeL = null;\n\t        this._amplitudeR.dispose();\n\t        this._amplitudeR = null;\n\t        this.frequency = null;\n\t        this.depth = null;\n\t        return this;\n\t    };\n\t    return Tone.Tremolo;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class A Vibrato effect composed of a Tone.Delay and a Tone.LFO. The LFO\n\t\t *         modulates the delayTime of the delay, causing the pitch to rise\n\t\t *         and fall. \n\t\t *  @extends {Tone.Effect}\n\t\t *  @param {Frequency} frequency The frequency of the vibrato.\n\t\t *  @param {NormalRange} depth The amount the pitch is modulated.\n\t\t */\n\t    Tone.Vibrato = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'frequency',\n\t            'depth'\n\t        ], Tone.Vibrato.defaults);\n\t        Tone.Effect.call(this, options);\n\t        /**\n\t\t\t *  The delay node used for the vibrato effect\n\t\t\t *  @type {Tone.Delay}\n\t\t\t *  @private\n\t\t\t */\n\t        this._delayNode = new Tone.Delay(0, options.maxDelay);\n\t        /**\n\t\t\t *  The LFO used to control the vibrato\n\t\t\t *  @type {Tone.LFO}\n\t\t\t *  @private\n\t\t\t */\n\t        this._lfo = new Tone.LFO({\n\t            'type': options.type,\n\t            'min': 0,\n\t            'max': options.maxDelay,\n\t            'frequency': options.frequency,\n\t            'phase': -90    //offse the phase so the resting position is in the center\n\t        }).start().connect(this._delayNode.delayTime);\n\t        /**\n\t\t\t *  The frequency of the vibrato\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.frequency = this._lfo.frequency;\n\t        /**\n\t\t\t *  The depth of the vibrato. \n\t\t\t *  @type {NormalRange}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.depth = this._lfo.amplitude;\n\t        this.depth.value = options.depth;\n\t        this._readOnly([\n\t            'frequency',\n\t            'depth'\n\t        ]);\n\t        this.effectSend.chain(this._delayNode, this.effectReturn);\n\t    };\n\t    Tone.extend(Tone.Vibrato, Tone.Effect);\n\t    /**\n\t\t *  The defaults\n\t\t *  @type  {Object}\n\t\t *  @const\n\t\t */\n\t    Tone.Vibrato.defaults = {\n\t        'maxDelay': 0.005,\n\t        'frequency': 5,\n\t        'depth': 0.1,\n\t        'type': 'sine'\n\t    };\n\t    /**\n\t\t * Type of oscillator attached to the Vibrato.\n\t\t * @memberOf Tone.Vibrato#\n\t\t * @type {string}\n\t\t * @name type\n\t\t */\n\t    Object.defineProperty(Tone.Vibrato.prototype, 'type', {\n\t        get: function () {\n\t            return this._lfo.type;\n\t        },\n\t        set: function (type) {\n\t            this._lfo.type = type;\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.Vibrato} this\n\t\t */\n\t    Tone.Vibrato.prototype.dispose = function () {\n\t        Tone.Effect.prototype.dispose.call(this);\n\t        this._delayNode.dispose();\n\t        this._delayNode = null;\n\t        this._lfo.dispose();\n\t        this._lfo = null;\n\t        this._writable([\n\t            'frequency',\n\t            'depth'\n\t        ]);\n\t        this.frequency = null;\n\t        this.depth = null;\n\t    };\n\t    return Tone.Vibrato;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.Event abstracts away Tone.Transport.schedule and provides a schedulable\n\t\t *          callback for a single or repeatable events along the timeline. \n\t\t *\n\t\t *  @extends {Tone}\n\t\t *  @param {function} callback The callback to invoke at the time. \n\t\t *  @param {*} value The value or values which should be passed to\n\t\t *                      the callback function on invocation.  \n\t\t *  @example\n\t\t * var chord = new Tone.Event(function(time, chord){\n\t\t * \t//the chord as well as the exact time of the event\n\t\t * \t//are passed in as arguments to the callback function\n\t\t * }, [\"D4\", \"E4\", \"F4\"]);\n\t\t * //start the chord at the beginning of the transport timeline\n\t\t * chord.start();\n\t\t * //loop it every measure for 8 measures\n\t\t * chord.loop = 8;\n\t\t * chord.loopEnd = \"1m\";\n\t\t */\n\t    Tone.Event = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'callback',\n\t            'value'\n\t        ], Tone.Event.defaults);\n\t        /**\n\t\t\t *  Loop value\n\t\t\t *  @type  {Boolean|Positive}\n\t\t\t *  @private\n\t\t\t */\n\t        this._loop = options.loop;\n\t        /**\n\t\t\t *  The callback to invoke. \n\t\t\t *  @type  {Function}\n\t\t\t */\n\t        this.callback = options.callback;\n\t        /**\n\t\t\t *  The value which is passed to the\n\t\t\t *  callback function.\n\t\t\t *  @type  {*}\n\t\t\t *  @private\n\t\t\t */\n\t        this.value = options.value;\n\t        /**\n\t\t\t *  When the note is scheduled to start.\n\t\t\t *  @type  {Number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._loopStart = this.toTicks(options.loopStart);\n\t        /**\n\t\t\t *  When the note is scheduled to start.\n\t\t\t *  @type  {Number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._loopEnd = this.toTicks(options.loopEnd);\n\t        /**\n\t\t\t *  Tracks the scheduled events\n\t\t\t *  @type {Tone.TimelineState}\n\t\t\t *  @private\n\t\t\t */\n\t        this._state = new Tone.TimelineState(Tone.State.Stopped);\n\t        /**\n\t\t\t *  The playback speed of the note. A speed of 1\n\t\t\t *  is no change. \n\t\t\t *  @private\n\t\t\t *  @type {Positive}\n\t\t\t */\n\t        this._playbackRate = 1;\n\t        /**\n\t\t\t *  A delay time from when the event is scheduled to start\n\t\t\t *  @type {Ticks}\n\t\t\t *  @private\n\t\t\t */\n\t        this._startOffset = 0;\n\t        /**\n\t\t\t *  The probability that the callback will be invoked\n\t\t\t *  at the scheduled time. \n\t\t\t *  @type {NormalRange}\n\t\t\t *  @example\n\t\t\t * //the callback will be invoked 50% of the time\n\t\t\t * event.probability = 0.5;\n\t\t\t */\n\t        this.probability = options.probability;\n\t        /**\n\t\t\t *  If set to true, will apply small (+/-0.02 seconds) random variation\n\t\t\t *  to the callback time. If the value is given as a time, it will randomize\n\t\t\t *  by that amount.\n\t\t\t *  @example\n\t\t\t * event.humanize = true;\n\t\t\t *  @type {Boolean|Time}\n\t\t\t */\n\t        this.humanize = options.humanize;\n\t        /**\n\t\t\t *  If mute is true, the callback won't be\n\t\t\t *  invoked.\n\t\t\t *  @type {Boolean}\n\t\t\t */\n\t        this.mute = options.mute;\n\t        //set the initial values\n\t        this.playbackRate = options.playbackRate;\n\t    };\n\t    Tone.extend(Tone.Event);\n\t    /**\n\t\t *  The default values\n\t\t *  @type  {Object}\n\t\t *  @const\n\t\t */\n\t    Tone.Event.defaults = {\n\t        'callback': Tone.noOp,\n\t        'loop': false,\n\t        'loopEnd': '1m',\n\t        'loopStart': 0,\n\t        'playbackRate': 1,\n\t        'value': null,\n\t        'probability': 1,\n\t        'mute': false,\n\t        'humanize': false\n\t    };\n\t    /**\n\t\t *  Reschedule all of the events along the timeline\n\t\t *  with the updated values.\n\t\t *  @param {Time} after Only reschedules events after the given time.\n\t\t *  @return  {Tone.Event}  this\n\t\t *  @private\n\t\t */\n\t    Tone.Event.prototype._rescheduleEvents = function (after) {\n\t        //if no argument is given, schedules all of the events\n\t        after = this.defaultArg(after, -1);\n\t        this._state.forEachFrom(after, function (event) {\n\t            var duration;\n\t            if (event.state === Tone.State.Started) {\n\t                if (!this.isUndef(event.id)) {\n\t                    Tone.Transport.clear(event.id);\n\t                }\n\t                var startTick = event.time + Math.round(this.startOffset / this._playbackRate);\n\t                if (this._loop) {\n\t                    duration = Infinity;\n\t                    if (this.isNumber(this._loop)) {\n\t                        duration = this._loop * this._getLoopDuration();\n\t                    }\n\t                    var nextEvent = this._state.getAfter(startTick);\n\t                    if (nextEvent !== null) {\n\t                        duration = Math.min(duration, nextEvent.time - startTick);\n\t                    }\n\t                    if (duration !== Infinity) {\n\t                        //schedule a stop since it's finite duration\n\t                        this._state.setStateAtTime(Tone.State.Stopped, startTick + duration + 1);\n\t                        duration = Tone.Time(duration, 'i');\n\t                    }\n\t                    var interval = Tone.Time(this._getLoopDuration(), 'i');\n\t                    event.id = Tone.Transport.scheduleRepeat(this._tick.bind(this), interval, Tone.TransportTime(startTick, 'i'), duration);\n\t                } else {\n\t                    event.id = Tone.Transport.schedule(this._tick.bind(this), startTick + 'i');\n\t                }\n\t            }\n\t        }.bind(this));\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Returns the playback state of the note, either \"started\" or \"stopped\".\n\t\t *  @type {String}\n\t\t *  @readOnly\n\t\t *  @memberOf Tone.Event#\n\t\t *  @name state\n\t\t */\n\t    Object.defineProperty(Tone.Event.prototype, 'state', {\n\t        get: function () {\n\t            return this._state.getValueAtTime(Tone.Transport.ticks);\n\t        }\n\t    });\n\t    /**\n\t\t *  The start from the scheduled start time\n\t\t *  @type {Ticks}\n\t\t *  @memberOf Tone.Event#\n\t\t *  @name startOffset\n\t\t *  @private\n\t\t */\n\t    Object.defineProperty(Tone.Event.prototype, 'startOffset', {\n\t        get: function () {\n\t            return this._startOffset;\n\t        },\n\t        set: function (offset) {\n\t            this._startOffset = offset;\n\t        }\n\t    });\n\t    /**\n\t\t *  Start the note at the given time. \n\t\t *  @param  {TimelinePosition}  time  When the note should start.\n\t\t *  @return  {Tone.Event}  this\n\t\t */\n\t    Tone.Event.prototype.start = function (time) {\n\t        time = this.toTicks(time);\n\t        if (this._state.getValueAtTime(time) === Tone.State.Stopped) {\n\t            this._state.add({\n\t                'state': Tone.State.Started,\n\t                'time': time,\n\t                'id': undefined\n\t            });\n\t            this._rescheduleEvents(time);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Stop the Event at the given time.\n\t\t *  @param  {TimelinePosition}  time  When the note should stop.\n\t\t *  @return  {Tone.Event}  this\n\t\t */\n\t    Tone.Event.prototype.stop = function (time) {\n\t        this.cancel(time);\n\t        time = this.toTicks(time);\n\t        if (this._state.getValueAtTime(time) === Tone.State.Started) {\n\t            this._state.setStateAtTime(Tone.State.Stopped, time);\n\t            var previousEvent = this._state.getBefore(time);\n\t            var reschedulTime = time;\n\t            if (previousEvent !== null) {\n\t                reschedulTime = previousEvent.time;\n\t            }\n\t            this._rescheduleEvents(reschedulTime);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Cancel all scheduled events greater than or equal to the given time\n\t\t *  @param  {TimelinePosition}  [time=0]  The time after which events will be cancel.\n\t\t *  @return  {Tone.Event}  this\n\t\t */\n\t    Tone.Event.prototype.cancel = function (time) {\n\t        time = this.defaultArg(time, -Infinity);\n\t        time = this.toTicks(time);\n\t        this._state.forEachFrom(time, function (event) {\n\t            Tone.Transport.clear(event.id);\n\t        });\n\t        this._state.cancel(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  The callback function invoker. Also \n\t\t *  checks if the Event is done playing\n\t\t *  @param  {Number}  time  The time of the event in seconds\n\t\t *  @private\n\t\t */\n\t    Tone.Event.prototype._tick = function (time) {\n\t        if (!this.mute && this._state.getValueAtTime(Tone.Transport.ticks) === Tone.State.Started) {\n\t            if (this.probability < 1 && Math.random() > this.probability) {\n\t                return;\n\t            }\n\t            if (this.humanize) {\n\t                var variation = 0.02;\n\t                if (!this.isBoolean(this.humanize)) {\n\t                    variation = this.toSeconds(this.humanize);\n\t                }\n\t                time += (Math.random() * 2 - 1) * variation;\n\t            }\n\t            this.callback(time, this.value);\n\t        }\n\t    };\n\t    /**\n\t\t *  Get the duration of the loop.\n\t\t *  @return  {Ticks}\n\t\t *  @private\n\t\t */\n\t    Tone.Event.prototype._getLoopDuration = function () {\n\t        return Math.round((this._loopEnd - this._loopStart) / this._playbackRate);\n\t    };\n\t    /**\n\t\t *  If the note should loop or not\n\t\t *  between Tone.Event.loopStart and \n\t\t *  Tone.Event.loopEnd. An integer\n\t\t *  value corresponds to the number of\n\t\t *  loops the Event does after it starts.\n\t\t *  @memberOf Tone.Event#\n\t\t *  @type {Boolean|Positive}\n\t\t *  @name loop\n\t\t */\n\t    Object.defineProperty(Tone.Event.prototype, 'loop', {\n\t        get: function () {\n\t            return this._loop;\n\t        },\n\t        set: function (loop) {\n\t            this._loop = loop;\n\t            this._rescheduleEvents();\n\t        }\n\t    });\n\t    /**\n\t\t * \tThe playback rate of the note. Defaults to 1.\n\t\t *  @memberOf Tone.Event#\n\t\t *  @type {Positive}\n\t\t *  @name playbackRate\n\t\t *  @example\n\t\t * note.loop = true;\n\t\t * //repeat the note twice as fast\n\t\t * note.playbackRate = 2;\n\t\t */\n\t    Object.defineProperty(Tone.Event.prototype, 'playbackRate', {\n\t        get: function () {\n\t            return this._playbackRate;\n\t        },\n\t        set: function (rate) {\n\t            this._playbackRate = rate;\n\t            this._rescheduleEvents();\n\t        }\n\t    });\n\t    /**\n\t\t *  The loopEnd point is the time the event will loop\n\t\t *  if Tone.Event.loop is true.\n\t\t *  @memberOf Tone.Event#\n\t\t *  @type {TransportTime}\n\t\t *  @name loopEnd\n\t\t */\n\t    Object.defineProperty(Tone.Event.prototype, 'loopEnd', {\n\t        get: function () {\n\t            return Tone.TransportTime(this._loopEnd, 'i').toNotation();\n\t        },\n\t        set: function (loopEnd) {\n\t            this._loopEnd = this.toTicks(loopEnd);\n\t            if (this._loop) {\n\t                this._rescheduleEvents();\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  The time when the loop should start. \n\t\t *  @memberOf Tone.Event#\n\t\t *  @type {TransportTime}\n\t\t *  @name loopStart\n\t\t */\n\t    Object.defineProperty(Tone.Event.prototype, 'loopStart', {\n\t        get: function () {\n\t            return Tone.TransportTime(this._loopStart, 'i').toNotation();\n\t        },\n\t        set: function (loopStart) {\n\t            this._loopStart = this.toTicks(loopStart);\n\t            if (this._loop) {\n\t                this._rescheduleEvents();\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  The current progress of the loop interval.\n\t\t *  Returns 0 if the event is not started yet or\n\t\t *  it is not set to loop.\n\t\t *  @memberOf Tone.Event#\n\t\t *  @type {NormalRange}\n\t\t *  @name progress\n\t\t *  @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.Event.prototype, 'progress', {\n\t        get: function () {\n\t            if (this._loop) {\n\t                var ticks = Tone.Transport.ticks;\n\t                var lastEvent = this._state.get(ticks);\n\t                if (lastEvent !== null && lastEvent.state === Tone.State.Started) {\n\t                    var loopDuration = this._getLoopDuration();\n\t                    var progress = (ticks - lastEvent.time) % loopDuration;\n\t                    return progress / loopDuration;\n\t                } else {\n\t                    return 0;\n\t                }\n\t            } else {\n\t                return 0;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up\n\t\t *  @return  {Tone.Event}  this\n\t\t */\n\t    Tone.Event.prototype.dispose = function () {\n\t        this.cancel();\n\t        this._state.dispose();\n\t        this._state = null;\n\t        this.callback = null;\n\t        this.value = null;\n\t    };\n\t    return Tone.Event;\n\t});\n\tModule(function (Tone) {\n\t    /**\n\t\t *  @class Tone.Loop creates a looped callback at the \n\t\t *         specified interval. The callback can be \n\t\t *         started, stopped and scheduled along\n\t\t *         the Transport's timeline. \n\t\t *  @example\n\t\t * var loop = new Tone.Loop(function(time){\n\t\t * \t//triggered every eighth note. \n\t\t * \tconsole.log(time);\n\t\t * }, \"8n\").start(0);\n\t\t * Tone.Transport.start();\n\t\t *  @extends {Tone}\n\t\t *  @param {Function} callback The callback to invoke with the event.\n\t\t *  @param {Time} interval The time between successive callback calls. \n\t\t */\n\t    Tone.Loop = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'callback',\n\t            'interval'\n\t        ], Tone.Loop.defaults);\n\t        /**\n\t\t\t *  The event which produces the callbacks\n\t\t\t */\n\t        this._event = new Tone.Event({\n\t            'callback': this._tick.bind(this),\n\t            'loop': true,\n\t            'loopEnd': options.interval,\n\t            'playbackRate': options.playbackRate,\n\t            'probability': options.probability\n\t        });\n\t        /**\n\t\t\t *  The callback to invoke with the next event in the pattern\n\t\t\t *  @type {Function}\n\t\t\t */\n\t        this.callback = options.callback;\n\t        //set the iterations\n\t        this.iterations = options.iterations;\n\t    };\n\t    Tone.extend(Tone.Loop);\n\t    /**\n\t\t *  The defaults\n\t\t *  @const\n\t\t *  @type  {Object}\n\t\t */\n\t    Tone.Loop.defaults = {\n\t        'interval': '4n',\n\t        'callback': Tone.noOp,\n\t        'playbackRate': 1,\n\t        'iterations': Infinity,\n\t        'probability': true,\n\t        'mute': false\n\t    };\n\t    /**\n\t\t *  Start the loop at the specified time along the Transport's\n\t\t *  timeline.\n\t\t *  @param  {TimelinePosition=}  time  When to start the Loop.\n\t\t *  @return  {Tone.Loop}  this\n\t\t */\n\t    Tone.Loop.prototype.start = function (time) {\n\t        this._event.start(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Stop the loop at the given time.\n\t\t *  @param  {TimelinePosition=}  time  When to stop the Arpeggio\n\t\t *  @return  {Tone.Loop}  this\n\t\t */\n\t    Tone.Loop.prototype.stop = function (time) {\n\t        this._event.stop(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Cancel all scheduled events greater than or equal to the given time\n\t\t *  @param  {TimelinePosition}  [time=0]  The time after which events will be cancel.\n\t\t *  @return  {Tone.Loop}  this\n\t\t */\n\t    Tone.Loop.prototype.cancel = function (time) {\n\t        this._event.cancel(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Internal function called when the notes should be called\n\t\t *  @param  {Number}  time  The time the event occurs\n\t\t *  @private\n\t\t */\n\t    Tone.Loop.prototype._tick = function (time) {\n\t        this.callback(time);\n\t    };\n\t    /**\n\t\t *  The state of the Loop, either started or stopped.\n\t\t *  @memberOf Tone.Loop#\n\t\t *  @type {String}\n\t\t *  @name state\n\t\t *  @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.Loop.prototype, 'state', {\n\t        get: function () {\n\t            return this._event.state;\n\t        }\n\t    });\n\t    /**\n\t\t *  The progress of the loop as a value between 0-1. 0, when\n\t\t *  the loop is stopped or done iterating. \n\t\t *  @memberOf Tone.Loop#\n\t\t *  @type {NormalRange}\n\t\t *  @name progress\n\t\t *  @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.Loop.prototype, 'progress', {\n\t        get: function () {\n\t            return this._event.progress;\n\t        }\n\t    });\n\t    /**\n\t\t *  The time between successive callbacks. \n\t\t *  @example\n\t\t * loop.interval = \"8n\"; //loop every 8n\n\t\t *  @memberOf Tone.Loop#\n\t\t *  @type {Time}\n\t\t *  @name interval\n\t\t */\n\t    Object.defineProperty(Tone.Loop.prototype, 'interval', {\n\t        get: function () {\n\t            return this._event.loopEnd;\n\t        },\n\t        set: function (interval) {\n\t            this._event.loopEnd = interval;\n\t        }\n\t    });\n\t    /**\n\t\t *  The playback rate of the loop. The normal playback rate is 1 (no change). \n\t\t *  A `playbackRate` of 2 would be twice as fast. \n\t\t *  @memberOf Tone.Loop#\n\t\t *  @type {Time}\n\t\t *  @name playbackRate\n\t\t */\n\t    Object.defineProperty(Tone.Loop.prototype, 'playbackRate', {\n\t        get: function () {\n\t            return this._event.playbackRate;\n\t        },\n\t        set: function (rate) {\n\t            this._event.playbackRate = rate;\n\t        }\n\t    });\n\t    /**\n\t\t *  Random variation +/-0.01s to the scheduled time. \n\t\t *  Or give it a time value which it will randomize by.\n\t\t *  @type {Boolean|Time}\n\t\t *  @memberOf Tone.Loop#\n\t\t *  @name humanize\n\t\t */\n\t    Object.defineProperty(Tone.Loop.prototype, 'humanize', {\n\t        get: function () {\n\t            return this._event.humanize;\n\t        },\n\t        set: function (variation) {\n\t            this._event.humanize = variation;\n\t        }\n\t    });\n\t    /**\n\t\t *  The probably of the callback being invoked.\n\t\t *  @memberOf Tone.Loop#\n\t\t *  @type {NormalRange}\n\t\t *  @name probability\n\t\t */\n\t    Object.defineProperty(Tone.Loop.prototype, 'probability', {\n\t        get: function () {\n\t            return this._event.probability;\n\t        },\n\t        set: function (prob) {\n\t            this._event.probability = prob;\n\t        }\n\t    });\n\t    /**\n\t\t *  Muting the Loop means that no callbacks are invoked.\n\t\t *  @memberOf Tone.Loop#\n\t\t *  @type {Boolean}\n\t\t *  @name mute\n\t\t */\n\t    Object.defineProperty(Tone.Loop.prototype, 'mute', {\n\t        get: function () {\n\t            return this._event.mute;\n\t        },\n\t        set: function (mute) {\n\t            this._event.mute = mute;\n\t        }\n\t    });\n\t    /**\n\t\t *  The number of iterations of the loop. The default\n\t\t *  value is Infinity (loop forever).\n\t\t *  @memberOf Tone.Loop#\n\t\t *  @type {Positive}\n\t\t *  @name iterations\n\t\t */\n\t    Object.defineProperty(Tone.Loop.prototype, 'iterations', {\n\t        get: function () {\n\t            if (this._event.loop === true) {\n\t                return Infinity;\n\t            } else {\n\t                return this._event.loop;\n\t            }\n\t            return this._pattern.index;\n\t        },\n\t        set: function (iters) {\n\t            if (iters === Infinity) {\n\t                this._event.loop = true;\n\t            } else {\n\t                this._event.loop = iters;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up\n\t\t *  @return  {Tone.Loop}  this\n\t\t */\n\t    Tone.Loop.prototype.dispose = function () {\n\t        this._event.dispose();\n\t        this._event = null;\n\t        this.callback = null;\n\t    };\n\t    return Tone.Loop;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.Part is a collection Tone.Events which can be\n\t\t *         started/stoped and looped as a single unit.\n\t\t *\n\t\t *  @extends {Tone.Event}\n\t\t *  @param {Function} callback The callback to invoke on each event\n\t\t *  @param {Array} events the array of events\n\t\t *  @example\n\t\t * var part = new Tone.Part(function(time, note){\n\t\t * \t//the notes given as the second element in the array\n\t\t * \t//will be passed in as the second argument\n\t\t * \tsynth.triggerAttackRelease(note, \"8n\", time);\n\t\t * }, [[0, \"C2\"], [\"0:2\", \"C3\"], [\"0:3:2\", \"G2\"]]);\n\t\t *  @example\n\t\t * //use an array of objects as long as the object has a \"time\" attribute\n\t\t * var part = new Tone.Part(function(time, value){\n\t\t * \t//the value is an object which contains both the note and the velocity\n\t\t * \tsynth.triggerAttackRelease(value.note, \"8n\", time, value.velocity);\n\t\t * }, [{\"time\" : 0, \"note\" : \"C3\", \"velocity\": 0.9}, \n\t\t * \t   {\"time\" : \"0:2\", \"note\" : \"C4\", \"velocity\": 0.5}\n\t\t * ]).start(0);\n\t\t */\n\t    Tone.Part = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'callback',\n\t            'events'\n\t        ], Tone.Part.defaults);\n\t        /**\n\t\t\t *  If the part is looping or not\n\t\t\t *  @type  {Boolean|Positive}\n\t\t\t *  @private\n\t\t\t */\n\t        this._loop = options.loop;\n\t        /**\n\t\t\t *  When the note is scheduled to start.\n\t\t\t *  @type  {Ticks}\n\t\t\t *  @private\n\t\t\t */\n\t        this._loopStart = this.toTicks(options.loopStart);\n\t        /**\n\t\t\t *  When the note is scheduled to start.\n\t\t\t *  @type  {Ticks}\n\t\t\t *  @private\n\t\t\t */\n\t        this._loopEnd = this.toTicks(options.loopEnd);\n\t        /**\n\t\t\t *  The playback rate of the part\n\t\t\t *  @type  {Positive}\n\t\t\t *  @private\n\t\t\t */\n\t        this._playbackRate = options.playbackRate;\n\t        /**\n\t\t\t *  private holder of probability value\n\t\t\t *  @type {NormalRange}\n\t\t\t *  @private\n\t\t\t */\n\t        this._probability = options.probability;\n\t        /**\n\t\t\t *  the amount of variation from the\n\t\t\t *  given time. \n\t\t\t *  @type {Boolean|Time}\n\t\t\t *  @private\n\t\t\t */\n\t        this._humanize = options.humanize;\n\t        /**\n\t\t\t *  The start offset\n\t\t\t *  @type {Ticks}\n\t\t\t *  @private\n\t\t\t */\n\t        this._startOffset = 0;\n\t        /**\n\t\t\t *  Keeps track of the current state\n\t\t\t *  @type {Tone.TimelineState}\n\t\t\t *  @private\n\t\t\t */\n\t        this._state = new Tone.TimelineState(Tone.State.Stopped);\n\t        /**\n\t\t\t *  An array of Objects. \n\t\t\t *  @type  {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._events = [];\n\t        /**\n\t\t\t *  The callback to invoke at all the scheduled events.\n\t\t\t *  @type {Function}\n\t\t\t */\n\t        this.callback = options.callback;\n\t        /**\n\t\t\t *  If mute is true, the callback won't be\n\t\t\t *  invoked.\n\t\t\t *  @type {Boolean}\n\t\t\t */\n\t        this.mute = options.mute;\n\t        //add the events\n\t        var events = this.defaultArg(options.events, []);\n\t        if (!this.isUndef(options.events)) {\n\t            for (var i = 0; i < events.length; i++) {\n\t                if (Array.isArray(events[i])) {\n\t                    this.add(events[i][0], events[i][1]);\n\t                } else {\n\t                    this.add(events[i]);\n\t                }\n\t            }\n\t        }\n\t    };\n\t    Tone.extend(Tone.Part, Tone.Event);\n\t    /**\n\t\t *  The default values\n\t\t *  @type  {Object}\n\t\t *  @const\n\t\t */\n\t    Tone.Part.defaults = {\n\t        'callback': Tone.noOp,\n\t        'loop': false,\n\t        'loopEnd': '1m',\n\t        'loopStart': 0,\n\t        'playbackRate': 1,\n\t        'probability': 1,\n\t        'humanize': false,\n\t        'mute': false\n\t    };\n\t    /**\n\t\t *  Start the part at the given time. \n\t\t *  @param  {TransportTime}  time    When to start the part.\n\t\t *  @param  {Time=}  offset  The offset from the start of the part\n\t\t *                           to begin playing at.\n\t\t *  @return  {Tone.Part}  this\n\t\t */\n\t    Tone.Part.prototype.start = function (time, offset) {\n\t        var ticks = this.toTicks(time);\n\t        if (this._state.getValueAtTime(ticks) !== Tone.State.Started) {\n\t            if (this._loop) {\n\t                offset = this.defaultArg(offset, this._loopStart);\n\t            } else {\n\t                offset = this.defaultArg(offset, 0);\n\t            }\n\t            offset = this.toTicks(offset);\n\t            this._state.add({\n\t                'state': Tone.State.Started,\n\t                'time': ticks,\n\t                'offset': offset\n\t            });\n\t            this._forEach(function (event) {\n\t                this._startNote(event, ticks, offset);\n\t            });\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Start the event in the given event at the correct time given\n\t\t *  the ticks and offset and looping.\n\t\t *  @param  {Tone.Event}  event \n\t\t *  @param  {Ticks}  ticks\n\t\t *  @param  {Ticks}  offset\n\t\t *  @private\n\t\t */\n\t    Tone.Part.prototype._startNote = function (event, ticks, offset) {\n\t        ticks -= offset;\n\t        if (this._loop) {\n\t            if (event.startOffset >= this._loopStart && event.startOffset < this._loopEnd) {\n\t                if (event.startOffset < offset) {\n\t                    //start it on the next loop\n\t                    ticks += this._getLoopDuration();\n\t                }\n\t                event.start(Tone.TransportTime(ticks, 'i'));\n\t            } else if (event.startOffset < this._loopStart && event.startOffset >= offset) {\n\t                event.loop = false;\n\t                event.start(Tone.TransportTime(ticks, 'i'));\n\t            }\n\t        } else {\n\t            if (event.startOffset >= offset) {\n\t                event.start(Tone.TransportTime(ticks, 'i'));\n\t            }\n\t        }\n\t    };\n\t    /**\n\t\t *  The start from the scheduled start time\n\t\t *  @type {Ticks}\n\t\t *  @memberOf Tone.Part#\n\t\t *  @name startOffset\n\t\t *  @private\n\t\t */\n\t    Object.defineProperty(Tone.Part.prototype, 'startOffset', {\n\t        get: function () {\n\t            return this._startOffset;\n\t        },\n\t        set: function (offset) {\n\t            this._startOffset = offset;\n\t            this._forEach(function (event) {\n\t                event.startOffset += this._startOffset;\n\t            });\n\t        }\n\t    });\n\t    /**\n\t\t *  Stop the part at the given time.\n\t\t *  @param  {TimelinePosition}  time  When to stop the part.\n\t\t *  @return  {Tone.Part}  this\n\t\t */\n\t    Tone.Part.prototype.stop = function (time) {\n\t        var ticks = this.toTicks(time);\n\t        this._state.cancel(ticks);\n\t        this._state.setStateAtTime(Tone.State.Stopped, ticks);\n\t        this._forEach(function (event) {\n\t            event.stop(time);\n\t        });\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Get/Set an Event's value at the given time. \n\t\t *  If a value is passed in and no event exists at\n\t\t *  the given time, one will be created with that value. \n\t\t *  If two events are at the same time, the first one will\n\t\t *  be returned.\n\t\t *  @example\n\t\t * part.at(\"1m\"); //returns the part at the first measure\n\t\t *\n\t\t * part.at(\"2m\", \"C2\"); //set the value at \"2m\" to C2. \n\t\t * //if an event didn't exist at that time, it will be created.\n\t\t *  @param {TransportTime} time The time of the event to get or set.\n\t\t *  @param {*=} value If a value is passed in, the value of the\n\t\t *                    event at the given time will be set to it.\n\t\t *  @return {Tone.Event} the event at the time\n\t\t */\n\t    Tone.Part.prototype.at = function (time, value) {\n\t        time = Tone.TransportTime(time);\n\t        var tickTime = Tone.Time(1, 'i').toSeconds();\n\t        for (var i = 0; i < this._events.length; i++) {\n\t            var event = this._events[i];\n\t            if (Math.abs(time.toTicks() - event.startOffset) < tickTime) {\n\t                if (!this.isUndef(value)) {\n\t                    event.value = value;\n\t                }\n\t                return event;\n\t            }\n\t        }\n\t        //if there was no event at that time, create one\n\t        if (!this.isUndef(value)) {\n\t            this.add(time, value);\n\t            //return the new event\n\t            return this._events[this._events.length - 1];\n\t        } else {\n\t            return null;\n\t        }\n\t    };\n\t    /**\n\t\t *  Add a an event to the part. \n\t\t *  @param {Time} time The time the note should start.\n\t\t *                            If an object is passed in, it should\n\t\t *                            have a 'time' attribute and the rest\n\t\t *                            of the object will be used as the 'value'.\n\t\t *  @param  {Tone.Event|*}  value \n\t\t *  @returns {Tone.Part} this\n\t\t *  @example\n\t\t * part.add(\"1m\", \"C#+11\");\n\t\t */\n\t    Tone.Part.prototype.add = function (time, value) {\n\t        //extract the parameters\n\t        if (time.hasOwnProperty('time')) {\n\t            value = time;\n\t            time = value.time;\n\t        }\n\t        time = this.toTicks(time);\n\t        var event;\n\t        if (value instanceof Tone.Event) {\n\t            event = value;\n\t            event.callback = this._tick.bind(this);\n\t        } else {\n\t            event = new Tone.Event({\n\t                'callback': this._tick.bind(this),\n\t                'value': value\n\t            });\n\t        }\n\t        //the start offset\n\t        event.startOffset = time;\n\t        //initialize the values\n\t        event.set({\n\t            'loopEnd': this.loopEnd,\n\t            'loopStart': this.loopStart,\n\t            'loop': this.loop,\n\t            'humanize': this.humanize,\n\t            'playbackRate': this.playbackRate,\n\t            'probability': this.probability\n\t        });\n\t        this._events.push(event);\n\t        //start the note if it should be played right now\n\t        this._restartEvent(event);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Restart the given event\n\t\t *  @param  {Tone.Event}  event \n\t\t *  @private\n\t\t */\n\t    Tone.Part.prototype._restartEvent = function (event) {\n\t        this._state.forEach(function (stateEvent) {\n\t            if (stateEvent.state === Tone.State.Started) {\n\t                this._startNote(event, stateEvent.time, stateEvent.offset);\n\t            } else {\n\t                //stop the note\n\t                event.stop(Tone.TransportTime(stateEvent.time, 'i'));\n\t            }\n\t        }.bind(this));\n\t    };\n\t    /**\n\t\t *  Remove an event from the part. Will recursively iterate\n\t\t *  into nested parts to find the event.\n\t\t *  @param {Time} time The time of the event\n\t\t *  @param {*} value Optionally select only a specific event value\n\t\t *  @return  {Tone.Part}  this\n\t\t */\n\t    Tone.Part.prototype.remove = function (time, value) {\n\t        //extract the parameters\n\t        if (time.hasOwnProperty('time')) {\n\t            value = time;\n\t            time = value.time;\n\t        }\n\t        time = this.toTicks(time);\n\t        for (var i = this._events.length - 1; i >= 0; i--) {\n\t            var event = this._events[i];\n\t            if (event instanceof Tone.Part) {\n\t                event.remove(time, value);\n\t            } else {\n\t                if (event.startOffset === time) {\n\t                    if (this.isUndef(value) || !this.isUndef(value) && event.value === value) {\n\t                        this._events.splice(i, 1);\n\t                        event.dispose();\n\t                    }\n\t                }\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Remove all of the notes from the group. \n\t\t *  @return  {Tone.Part}  this\n\t\t */\n\t    Tone.Part.prototype.removeAll = function () {\n\t        this._forEach(function (event) {\n\t            event.dispose();\n\t        });\n\t        this._events = [];\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Cancel scheduled state change events: i.e. \"start\" and \"stop\".\n\t\t *  @param {TimelinePosition} after The time after which to cancel the scheduled events.\n\t\t *  @return  {Tone.Part}  this\n\t\t */\n\t    Tone.Part.prototype.cancel = function (after) {\n\t        after = this.toTicks(after);\n\t        this._forEach(function (event) {\n\t            event.cancel(after);\n\t        });\n\t        this._state.cancel(after);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Iterate over all of the events\n\t\t *  @param {Function} callback\n\t\t *  @param {Object} ctx The context\n\t\t *  @private\n\t\t */\n\t    Tone.Part.prototype._forEach = function (callback, ctx) {\n\t        ctx = this.defaultArg(ctx, this);\n\t        for (var i = this._events.length - 1; i >= 0; i--) {\n\t            var e = this._events[i];\n\t            if (e instanceof Tone.Part) {\n\t                e._forEach(callback, ctx);\n\t            } else {\n\t                callback.call(ctx, e);\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Set the attribute of all of the events\n\t\t *  @param  {String}  attr  the attribute to set\n\t\t *  @param  {*}  value      The value to set it to\n\t\t *  @private\n\t\t */\n\t    Tone.Part.prototype._setAll = function (attr, value) {\n\t        this._forEach(function (event) {\n\t            event[attr] = value;\n\t        });\n\t    };\n\t    /**\n\t\t *  Internal tick method\n\t\t *  @param  {Number}  time  The time of the event in seconds\n\t\t *  @private\n\t\t */\n\t    Tone.Part.prototype._tick = function (time, value) {\n\t        if (!this.mute) {\n\t            this.callback(time, value);\n\t        }\n\t    };\n\t    /**\n\t\t *  Determine if the event should be currently looping\n\t\t *  given the loop boundries of this Part.\n\t\t *  @param  {Tone.Event}  event  The event to test\n\t\t *  @private\n\t\t */\n\t    Tone.Part.prototype._testLoopBoundries = function (event) {\n\t        if (event.startOffset < this._loopStart || event.startOffset >= this._loopEnd) {\n\t            event.cancel(0);\n\t        } else {\n\t            //reschedule it if it's stopped\n\t            if (event.state === Tone.State.Stopped) {\n\t                this._restartEvent(event);\n\t            }\n\t        }\n\t    };\n\t    /**\n\t\t *  The probability of the notes being triggered.\n\t\t *  @memberOf Tone.Part#\n\t\t *  @type {NormalRange}\n\t\t *  @name probability\n\t\t */\n\t    Object.defineProperty(Tone.Part.prototype, 'probability', {\n\t        get: function () {\n\t            return this._probability;\n\t        },\n\t        set: function (prob) {\n\t            this._probability = prob;\n\t            this._setAll('probability', prob);\n\t        }\n\t    });\n\t    /**\n\t\t *  If set to true, will apply small random variation\n\t\t *  to the callback time. If the value is given as a time, it will randomize\n\t\t *  by that amount.\n\t\t *  @example\n\t\t * event.humanize = true;\n\t\t *  @type {Boolean|Time}\n\t\t *  @name humanize\n\t\t */\n\t    Object.defineProperty(Tone.Part.prototype, 'humanize', {\n\t        get: function () {\n\t            return this._humanize;\n\t        },\n\t        set: function (variation) {\n\t            this._humanize = variation;\n\t            this._setAll('humanize', variation);\n\t        }\n\t    });\n\t    /**\n\t\t *  If the part should loop or not\n\t\t *  between Tone.Part.loopStart and \n\t\t *  Tone.Part.loopEnd. An integer\n\t\t *  value corresponds to the number of\n\t\t *  loops the Part does after it starts.\n\t\t *  @memberOf Tone.Part#\n\t\t *  @type {Boolean|Positive}\n\t\t *  @name loop\n\t\t *  @example\n\t\t * //loop the part 8 times\n\t\t * part.loop = 8;\n\t\t */\n\t    Object.defineProperty(Tone.Part.prototype, 'loop', {\n\t        get: function () {\n\t            return this._loop;\n\t        },\n\t        set: function (loop) {\n\t            this._loop = loop;\n\t            this._forEach(function (event) {\n\t                event._loopStart = this._loopStart;\n\t                event._loopEnd = this._loopEnd;\n\t                event.loop = loop;\n\t                this._testLoopBoundries(event);\n\t            });\n\t        }\n\t    });\n\t    /**\n\t\t *  The loopEnd point determines when it will \n\t\t *  loop if Tone.Part.loop is true.\n\t\t *  @memberOf Tone.Part#\n\t\t *  @type {TransportTime}\n\t\t *  @name loopEnd\n\t\t */\n\t    Object.defineProperty(Tone.Part.prototype, 'loopEnd', {\n\t        get: function () {\n\t            return Tone.TransportTime(this._loopEnd, 'i').toNotation();\n\t        },\n\t        set: function (loopEnd) {\n\t            this._loopEnd = this.toTicks(loopEnd);\n\t            if (this._loop) {\n\t                this._forEach(function (event) {\n\t                    event.loopEnd = loopEnd;\n\t                    this._testLoopBoundries(event);\n\t                });\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  The loopStart point determines when it will \n\t\t *  loop if Tone.Part.loop is true.\n\t\t *  @memberOf Tone.Part#\n\t\t *  @type {TransportTime}\n\t\t *  @name loopStart\n\t\t */\n\t    Object.defineProperty(Tone.Part.prototype, 'loopStart', {\n\t        get: function () {\n\t            return Tone.TransportTime(this._loopStart, 'i').toNotation();\n\t        },\n\t        set: function (loopStart) {\n\t            this._loopStart = this.toTicks(loopStart);\n\t            if (this._loop) {\n\t                this._forEach(function (event) {\n\t                    event.loopStart = this.loopStart;\n\t                    this._testLoopBoundries(event);\n\t                });\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * \tThe playback rate of the part\n\t\t *  @memberOf Tone.Part#\n\t\t *  @type {Positive}\n\t\t *  @name playbackRate\n\t\t */\n\t    Object.defineProperty(Tone.Part.prototype, 'playbackRate', {\n\t        get: function () {\n\t            return this._playbackRate;\n\t        },\n\t        set: function (rate) {\n\t            this._playbackRate = rate;\n\t            this._setAll('playbackRate', rate);\n\t        }\n\t    });\n\t    /**\n\t\t * \tThe number of scheduled notes in the part. \n\t\t *  @memberOf Tone.Part#\n\t\t *  @type {Positive}\n\t\t *  @name length\n\t\t *  @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.Part.prototype, 'length', {\n\t        get: function () {\n\t            return this._events.length;\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up\n\t\t *  @return  {Tone.Part}  this\n\t\t */\n\t    Tone.Part.prototype.dispose = function () {\n\t        this.removeAll();\n\t        this._state.dispose();\n\t        this._state = null;\n\t        this.callback = null;\n\t        this._events = null;\n\t        return this;\n\t    };\n\t    return Tone.Part;\n\t});\n\tModule(function (Tone) {\n\t    /**\n\t\t *  @class Tone.Pattern arpeggiates between the given notes\n\t\t *         in a number of patterns. See Tone.CtrlPattern for\n\t\t *         a full list of patterns.\n\t\t *  @example\n\t\t * var pattern = new Tone.Pattern(function(time, note){\n\t\t *   //the order of the notes passed in depends on the pattern\n\t\t * }, [\"C2\", \"D4\", \"E5\", \"A6\"], \"upDown\");\n\t\t *  @extends {Tone.Loop}\n\t\t *  @param {Function} callback The callback to invoke with the\n\t\t *                             event.\n\t\t *  @param {Array} values The values to arpeggiate over.\n\t\t */\n\t    Tone.Pattern = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'callback',\n\t            'values',\n\t            'pattern'\n\t        ], Tone.Pattern.defaults);\n\t        Tone.Loop.call(this, options);\n\t        /**\n\t\t\t *  The pattern manager\n\t\t\t *  @type {Tone.CtrlPattern}\n\t\t\t *  @private\n\t\t\t */\n\t        this._pattern = new Tone.CtrlPattern({\n\t            'values': options.values,\n\t            'type': options.pattern,\n\t            'index': options.index\n\t        });\n\t    };\n\t    Tone.extend(Tone.Pattern, Tone.Loop);\n\t    /**\n\t\t *  The defaults\n\t\t *  @const\n\t\t *  @type  {Object}\n\t\t */\n\t    Tone.Pattern.defaults = {\n\t        'pattern': Tone.CtrlPattern.Type.Up,\n\t        'values': []\n\t    };\n\t    /**\n\t\t *  Internal function called when the notes should be called\n\t\t *  @param  {Number}  time  The time the event occurs\n\t\t *  @private\n\t\t */\n\t    Tone.Pattern.prototype._tick = function (time) {\n\t        this.callback(time, this._pattern.value);\n\t        this._pattern.next();\n\t    };\n\t    /**\n\t\t *  The current index in the values array.\n\t\t *  @memberOf Tone.Pattern#\n\t\t *  @type {Positive}\n\t\t *  @name index\n\t\t */\n\t    Object.defineProperty(Tone.Pattern.prototype, 'index', {\n\t        get: function () {\n\t            return this._pattern.index;\n\t        },\n\t        set: function (i) {\n\t            this._pattern.index = i;\n\t        }\n\t    });\n\t    /**\n\t\t *  The array of events.\n\t\t *  @memberOf Tone.Pattern#\n\t\t *  @type {Array}\n\t\t *  @name values\n\t\t */\n\t    Object.defineProperty(Tone.Pattern.prototype, 'values', {\n\t        get: function () {\n\t            return this._pattern.values;\n\t        },\n\t        set: function (vals) {\n\t            this._pattern.values = vals;\n\t        }\n\t    });\n\t    /**\n\t\t *  The current value of the pattern.\n\t\t *  @memberOf Tone.Pattern#\n\t\t *  @type {*}\n\t\t *  @name value\n\t\t *  @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.Pattern.prototype, 'value', {\n\t        get: function () {\n\t            return this._pattern.value;\n\t        }\n\t    });\n\t    /**\n\t\t *  The pattern type. See Tone.CtrlPattern for the full list of patterns.\n\t\t *  @memberOf Tone.Pattern#\n\t\t *  @type {String}\n\t\t *  @name pattern\n\t\t */\n\t    Object.defineProperty(Tone.Pattern.prototype, 'pattern', {\n\t        get: function () {\n\t            return this._pattern.type;\n\t        },\n\t        set: function (pattern) {\n\t            this._pattern.type = pattern;\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up\n\t\t *  @return  {Tone.Pattern}  this\n\t\t */\n\t    Tone.Pattern.prototype.dispose = function () {\n\t        Tone.Loop.prototype.dispose.call(this);\n\t        this._pattern.dispose();\n\t        this._pattern = null;\n\t    };\n\t    return Tone.Pattern;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class A sequence is an alternate notation of a part. Instead\n\t\t *         of passing in an array of [time, event] pairs, pass\n\t\t *         in an array of events which will be spaced at the\n\t\t *         given subdivision. Sub-arrays will subdivide that beat\n\t\t *         by the number of items are in the array. \n\t\t *         Sequence notation inspiration from [Tidal](http://yaxu.org/tidal/)\n\t\t *  @param  {Function}  callback  The callback to invoke with every note\n\t\t *  @param  {Array}    events  The sequence\n\t\t *  @param  {Time} subdivision  The subdivision between which events are placed. \n\t\t *  @extends {Tone.Part}\n\t\t *  @example\n\t\t * var seq = new Tone.Sequence(function(time, note){\n\t\t * \tconsole.log(note);\n\t\t * //straight quater notes\n\t\t * }, [\"C4\", \"E4\", \"G4\", \"A4\"], \"4n\");\n\t\t *  @example\n\t\t * var seq = new Tone.Sequence(function(time, note){\n\t\t * \tconsole.log(note);\n\t\t * //subdivisions are given as subarrays\n\t\t * }, [\"C4\", [\"E4\", \"D4\", \"E4\"], \"G4\", [\"A4\", \"G4\"]]);\n\t\t */\n\t    Tone.Sequence = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'callback',\n\t            'events',\n\t            'subdivision'\n\t        ], Tone.Sequence.defaults);\n\t        //remove the events\n\t        var events = options.events;\n\t        delete options.events;\n\t        Tone.Part.call(this, options);\n\t        /**\n\t\t\t *  The subdivison of each note\n\t\t\t *  @type  {Ticks}\n\t\t\t *  @private\n\t\t\t */\n\t        this._subdivision = this.toTicks(options.subdivision);\n\t        //if no time was passed in, the loop end is the end of the cycle\n\t        if (this.isUndef(options.loopEnd) && !this.isUndef(events)) {\n\t            this._loopEnd = events.length * this._subdivision;\n\t        }\n\t        //defaults to looping\n\t        this._loop = true;\n\t        //add all of the events\n\t        if (!this.isUndef(events)) {\n\t            for (var i = 0; i < events.length; i++) {\n\t                this.add(i, events[i]);\n\t            }\n\t        }\n\t    };\n\t    Tone.extend(Tone.Sequence, Tone.Part);\n\t    /**\n\t\t *  The default values.\n\t\t *  @type  {Object}\n\t\t */\n\t    Tone.Sequence.defaults = { 'subdivision': '4n' };\n\t    /**\n\t\t *  The subdivision of the sequence. This can only be \n\t\t *  set in the constructor. The subdivision is the \n\t\t *  interval between successive steps. \n\t\t *  @type {Time}\n\t\t *  @memberOf Tone.Sequence#\n\t\t *  @name subdivision\n\t\t *  @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.Sequence.prototype, 'subdivision', {\n\t        get: function () {\n\t            return Tone.Time(this._subdivision, 'i').toNotation();\n\t        }\n\t    });\n\t    /**\n\t\t *  Get/Set an index of the sequence. If the index contains a subarray, \n\t\t *  a Tone.Sequence representing that sub-array will be returned. \n\t\t *  @example\n\t\t * var sequence = new Tone.Sequence(playNote, [\"E4\", \"C4\", \"F#4\", [\"A4\", \"Bb3\"]])\n\t\t * sequence.at(0)// => returns \"E4\"\n\t\t * //set a value\n\t\t * sequence.at(0, \"G3\");\n\t\t * //get a nested sequence\n\t\t * sequence.at(3).at(1)// => returns \"Bb3\"\n\t\t * @param {Positive} index The index to get or set\n\t\t * @param {*} value Optionally pass in the value to set at the given index.\n\t\t */\n\t    Tone.Sequence.prototype.at = function (index, value) {\n\t        //if the value is an array, \n\t        if (this.isArray(value)) {\n\t            //remove the current event at that index\n\t            this.remove(index);\n\t        }\n\t        //call the parent's method\n\t        return Tone.Part.prototype.at.call(this, this._indexTime(index), value);\n\t    };\n\t    /**\n\t\t *  Add an event at an index, if there's already something\n\t\t *  at that index, overwrite it. If `value` is an array, \n\t\t *  it will be parsed as a subsequence.\n\t\t *  @param {Number} index The index to add the event to\n\t\t *  @param {*} value The value to add at that index\n\t\t *  @returns {Tone.Sequence} this\n\t\t */\n\t    Tone.Sequence.prototype.add = function (index, value) {\n\t        if (value === null) {\n\t            return this;\n\t        }\n\t        if (this.isArray(value)) {\n\t            //make a subsequence and add that to the sequence\n\t            var subSubdivision = Math.round(this._subdivision / value.length);\n\t            value = new Tone.Sequence(this._tick.bind(this), value, Tone.Time(subSubdivision, 'i'));\n\t        }\n\t        Tone.Part.prototype.add.call(this, this._indexTime(index), value);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Remove a value from the sequence by index\n\t\t *  @param {Number} index The index of the event to remove\n\t\t *  @returns {Tone.Sequence} this\n\t\t */\n\t    Tone.Sequence.prototype.remove = function (index, value) {\n\t        Tone.Part.prototype.remove.call(this, this._indexTime(index), value);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Get the time of the index given the Sequence's subdivision\n\t\t *  @param  {Number}  index \n\t\t *  @return  {Time}  The time of that index\n\t\t *  @private\n\t\t */\n\t    Tone.Sequence.prototype._indexTime = function (index) {\n\t        if (index instanceof Tone.TransportTime) {\n\t            return index;\n\t        } else {\n\t            return Tone.TransportTime(index * this._subdivision + this.startOffset, 'i');\n\t        }\n\t    };\n\t    /**\n\t\t *  Clean up.\n\t\t *  @return {Tone.Sequence} this\n\t\t */\n\t    Tone.Sequence.prototype.dispose = function () {\n\t        Tone.Part.prototype.dispose.call(this);\n\t        return this;\n\t    };\n\t    return Tone.Sequence;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.PulseOscillator is a pulse oscillator with control over pulse width,\n\t\t *         also known as the duty cycle. At 50% duty cycle (width = 0.5) the wave is \n\t\t *         a square and only odd-numbered harmonics are present. At all other widths \n\t\t *         even-numbered harmonics are present. Read more \n\t\t *         [here](https://wigglewave.wordpress.com/2014/08/16/pulse-waveforms-and-harmonics/).\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Oscillator}\n\t\t *  @param {Frequency} [frequency] The frequency of the oscillator\n\t\t *  @param {NormalRange} [width] The width of the pulse\n\t\t *  @example\n\t\t * var pulse = new Tone.PulseOscillator(\"E5\", 0.4).toMaster().start();\n\t\t */\n\t    Tone.PulseOscillator = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'frequency',\n\t            'width'\n\t        ], Tone.Oscillator.defaults);\n\t        Tone.Source.call(this, options);\n\t        /**\n\t\t\t *  The width of the pulse. \n\t\t\t *  @type {NormalRange}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.width = new Tone.Signal(options.width, Tone.Type.NormalRange);\n\t        /**\n\t\t\t *  gate the width amount\n\t\t\t *  @type {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._widthGate = new Tone.Gain();\n\t        /**\n\t\t\t *  the sawtooth oscillator\n\t\t\t *  @type {Tone.Oscillator}\n\t\t\t *  @private\n\t\t\t */\n\t        this._sawtooth = new Tone.Oscillator({\n\t            frequency: options.frequency,\n\t            detune: options.detune,\n\t            type: 'sawtooth',\n\t            phase: options.phase\n\t        });\n\t        /**\n\t\t\t *  The frequency control.\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.frequency = this._sawtooth.frequency;\n\t        /**\n\t\t\t *  The detune in cents. \n\t\t\t *  @type {Cents}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.detune = this._sawtooth.detune;\n\t        /**\n\t\t\t *  Threshold the signal to turn it into a square\n\t\t\t *  @type {Tone.WaveShaper}\n\t\t\t *  @private\n\t\t\t */\n\t        this._thresh = new Tone.WaveShaper(function (val) {\n\t            if (val < 0) {\n\t                return -1;\n\t            } else {\n\t                return 1;\n\t            }\n\t        });\n\t        //connections\n\t        this._sawtooth.chain(this._thresh, this.output);\n\t        this.width.chain(this._widthGate, this._thresh);\n\t        this._readOnly([\n\t            'width',\n\t            'frequency',\n\t            'detune'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.PulseOscillator, Tone.Oscillator);\n\t    /**\n\t\t *  The default parameters.\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.PulseOscillator.defaults = {\n\t        'frequency': 440,\n\t        'detune': 0,\n\t        'phase': 0,\n\t        'width': 0.2\n\t    };\n\t    /**\n\t\t *  start the oscillator\n\t\t *  @param  {Time} time \n\t\t *  @private\n\t\t */\n\t    Tone.PulseOscillator.prototype._start = function (time) {\n\t        time = this.toSeconds(time);\n\t        this._sawtooth.start(time);\n\t        this._widthGate.gain.setValueAtTime(1, time);\n\t    };\n\t    /**\n\t\t *  stop the oscillator\n\t\t *  @param  {Time} time \n\t\t *  @private\n\t\t */\n\t    Tone.PulseOscillator.prototype._stop = function (time) {\n\t        time = this.toSeconds(time);\n\t        this._sawtooth.stop(time);\n\t        //the width is still connected to the output. \n\t        //that needs to be stopped also\n\t        this._widthGate.gain.setValueAtTime(0, time);\n\t    };\n\t    /**\n\t\t * The phase of the oscillator in degrees.\n\t\t * @memberOf Tone.PulseOscillator#\n\t\t * @type {Degrees}\n\t\t * @name phase\n\t\t */\n\t    Object.defineProperty(Tone.PulseOscillator.prototype, 'phase', {\n\t        get: function () {\n\t            return this._sawtooth.phase;\n\t        },\n\t        set: function (phase) {\n\t            this._sawtooth.phase = phase;\n\t        }\n\t    });\n\t    /**\n\t\t * The type of the oscillator. Always returns \"pulse\".\n\t\t * @readOnly\n\t\t * @memberOf Tone.PulseOscillator#\n\t\t * @type {string}\n\t\t * @name type\n\t\t */\n\t    Object.defineProperty(Tone.PulseOscillator.prototype, 'type', {\n\t        get: function () {\n\t            return 'pulse';\n\t        }\n\t    });\n\t    /**\n\t\t * The partials of the waveform. Cannot set partials for this waveform type\n\t\t * @memberOf Tone.PulseOscillator#\n\t\t * @type {Array}\n\t\t * @name partials\n\t\t * @private\n\t\t */\n\t    Object.defineProperty(Tone.PulseOscillator.prototype, 'partials', {\n\t        get: function () {\n\t            return [];\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up method.\n\t\t *  @return {Tone.PulseOscillator} this\n\t\t */\n\t    Tone.PulseOscillator.prototype.dispose = function () {\n\t        Tone.Source.prototype.dispose.call(this);\n\t        this._sawtooth.dispose();\n\t        this._sawtooth = null;\n\t        this._writable([\n\t            'width',\n\t            'frequency',\n\t            'detune'\n\t        ]);\n\t        this.width.dispose();\n\t        this.width = null;\n\t        this._widthGate.dispose();\n\t        this._widthGate = null;\n\t        this._thresh.dispose();\n\t        this._thresh = null;\n\t        this.frequency = null;\n\t        this.detune = null;\n\t        return this;\n\t    };\n\t    return Tone.PulseOscillator;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.PWMOscillator modulates the width of a Tone.PulseOscillator \n\t\t *         at the modulationFrequency. This has the effect of continuously\n\t\t *         changing the timbre of the oscillator by altering the harmonics \n\t\t *         generated.\n\t\t *\n\t\t *  @extends {Tone.Oscillator}\n\t\t *  @constructor\n\t\t *  @param {Frequency} frequency The starting frequency of the oscillator. \n\t\t *  @param {Frequency} modulationFrequency The modulation frequency of the width of the pulse. \n\t\t *  @example\n\t\t *  var pwm = new Tone.PWMOscillator(\"Ab3\", 0.3).toMaster().start();\n\t\t */\n\t    Tone.PWMOscillator = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'frequency',\n\t            'modulationFrequency'\n\t        ], Tone.PWMOscillator.defaults);\n\t        Tone.Source.call(this, options);\n\t        /**\n\t\t\t *  the pulse oscillator\n\t\t\t *  @type {Tone.PulseOscillator}\n\t\t\t *  @private\n\t\t\t */\n\t        this._pulse = new Tone.PulseOscillator(options.modulationFrequency);\n\t        //change the pulse oscillator type\n\t        this._pulse._sawtooth.type = 'sine';\n\t        /**\n\t\t\t *  the modulator\n\t\t\t *  @type {Tone.Oscillator}\n\t\t\t *  @private\n\t\t\t */\n\t        this._modulator = new Tone.Oscillator({\n\t            'frequency': options.frequency,\n\t            'detune': options.detune,\n\t            'phase': options.phase\n\t        });\n\t        /**\n\t\t\t *  Scale the oscillator so it doesn't go silent \n\t\t\t *  at the extreme values.\n\t\t\t *  @type {Tone.Multiply}\n\t\t\t *  @private\n\t\t\t */\n\t        this._scale = new Tone.Multiply(2);\n\t        /**\n\t\t\t *  The frequency control.\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.frequency = this._modulator.frequency;\n\t        /**\n\t\t\t *  The detune of the oscillator.\n\t\t\t *  @type {Cents}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.detune = this._modulator.detune;\n\t        /**\n\t\t\t *  The modulation rate of the oscillator. \n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.modulationFrequency = this._pulse.frequency;\n\t        //connections\n\t        this._modulator.chain(this._scale, this._pulse.width);\n\t        this._pulse.connect(this.output);\n\t        this._readOnly([\n\t            'modulationFrequency',\n\t            'frequency',\n\t            'detune'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.PWMOscillator, Tone.Oscillator);\n\t    /**\n\t\t *  default values\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t *  @const\n\t\t */\n\t    Tone.PWMOscillator.defaults = {\n\t        'frequency': 440,\n\t        'detune': 0,\n\t        'phase': 0,\n\t        'modulationFrequency': 0.4\n\t    };\n\t    /**\n\t\t *  start the oscillator\n\t\t *  @param  {Time} [time=now]\n\t\t *  @private\n\t\t */\n\t    Tone.PWMOscillator.prototype._start = function (time) {\n\t        time = this.toSeconds(time);\n\t        this._modulator.start(time);\n\t        this._pulse.start(time);\n\t    };\n\t    /**\n\t\t *  stop the oscillator\n\t\t *  @param  {Time} time (optional) timing parameter\n\t\t *  @private\n\t\t */\n\t    Tone.PWMOscillator.prototype._stop = function (time) {\n\t        time = this.toSeconds(time);\n\t        this._modulator.stop(time);\n\t        this._pulse.stop(time);\n\t    };\n\t    /**\n\t\t * The type of the oscillator. Always returns \"pwm\".\n\t\t * @readOnly\n\t\t * @memberOf Tone.PWMOscillator#\n\t\t * @type {string}\n\t\t * @name type\n\t\t */\n\t    Object.defineProperty(Tone.PWMOscillator.prototype, 'type', {\n\t        get: function () {\n\t            return 'pwm';\n\t        }\n\t    });\n\t    /**\n\t\t * The partials of the waveform. Cannot set partials for this waveform type\n\t\t * @memberOf Tone.PWMOscillator#\n\t\t * @type {Array}\n\t\t * @name partials\n\t\t * @private\n\t\t */\n\t    Object.defineProperty(Tone.PWMOscillator.prototype, 'partials', {\n\t        get: function () {\n\t            return [];\n\t        }\n\t    });\n\t    /**\n\t\t * The phase of the oscillator in degrees.\n\t\t * @memberOf Tone.PWMOscillator#\n\t\t * @type {number}\n\t\t * @name phase\n\t\t */\n\t    Object.defineProperty(Tone.PWMOscillator.prototype, 'phase', {\n\t        get: function () {\n\t            return this._modulator.phase;\n\t        },\n\t        set: function (phase) {\n\t            this._modulator.phase = phase;\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up.\n\t\t *  @return {Tone.PWMOscillator} this\n\t\t */\n\t    Tone.PWMOscillator.prototype.dispose = function () {\n\t        Tone.Source.prototype.dispose.call(this);\n\t        this._pulse.dispose();\n\t        this._pulse = null;\n\t        this._scale.dispose();\n\t        this._scale = null;\n\t        this._modulator.dispose();\n\t        this._modulator = null;\n\t        this._writable([\n\t            'modulationFrequency',\n\t            'frequency',\n\t            'detune'\n\t        ]);\n\t        this.frequency = null;\n\t        this.detune = null;\n\t        this.modulationFrequency = null;\n\t        return this;\n\t    };\n\t    return Tone.PWMOscillator;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.FMOscillator \n\t\t *\n\t\t *  @extends {Tone.Oscillator}\n\t\t *  @constructor\n\t\t *  @param {Frequency} frequency The starting frequency of the oscillator. \n\t\t *  @param {String} type The type of the carrier oscillator.\n\t\t *  @param {String} modulationType The type of the modulator oscillator.\n\t\t *  @example\n\t\t * //a sine oscillator frequency-modulated by a square wave\n\t\t * var fmOsc = new Tone.FMOscillator(\"Ab3\", \"sine\", \"square\").toMaster().start();\n\t\t */\n\t    Tone.FMOscillator = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'frequency',\n\t            'type',\n\t            'modulationType'\n\t        ], Tone.FMOscillator.defaults);\n\t        Tone.Source.call(this, options);\n\t        /**\n\t\t\t *  The carrier oscillator\n\t\t\t *  @type {Tone.Oscillator}\n\t\t\t *  @private\n\t\t\t */\n\t        this._carrier = new Tone.Oscillator(options.frequency, options.type);\n\t        /**\n\t\t\t *  The oscillator's frequency\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.frequency = new Tone.Signal(options.frequency, Tone.Type.Frequency);\n\t        /**\n\t\t\t *  The detune control signal.\n\t\t\t *  @type {Cents}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.detune = this._carrier.detune;\n\t        this.detune.value = options.detune;\n\t        /**\n\t\t\t *  The modulation index which is in essence the depth or amount of the modulation. In other terms it is the \n\t\t\t *  ratio of the frequency of the modulating signal (mf) to the amplitude of the \n\t\t\t *  modulating signal (ma) -- as in ma/mf. \n\t\t\t *\t@type {Positive}\n\t\t\t *\t@signal\n\t\t\t */\n\t        this.modulationIndex = new Tone.Multiply(options.modulationIndex);\n\t        this.modulationIndex.units = Tone.Type.Positive;\n\t        /**\n\t\t\t *  The modulating oscillator\n\t\t\t *  @type  {Tone.Oscillator}\n\t\t\t *  @private\n\t\t\t */\n\t        this._modulator = new Tone.Oscillator(options.frequency, options.modulationType);\n\t        /**\n\t\t\t *  Harmonicity is the frequency ratio between the carrier and the modulator oscillators. \n\t\t\t *  A harmonicity of 1 gives both oscillators the same frequency. \n\t\t\t *  Harmonicity = 2 means a change of an octave. \n\t\t\t *  @type {Positive}\n\t\t\t *  @signal\n\t\t\t *  @example\n\t\t\t * //pitch the modulator an octave below carrier\n\t\t\t * synth.harmonicity.value = 0.5;\n\t\t\t */\n\t        this.harmonicity = new Tone.Multiply(options.harmonicity);\n\t        this.harmonicity.units = Tone.Type.Positive;\n\t        /**\n\t\t\t *  the node where the modulation happens\n\t\t\t *  @type {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._modulationNode = new Tone.Gain(0);\n\t        //connections\n\t        this.frequency.connect(this._carrier.frequency);\n\t        this.frequency.chain(this.harmonicity, this._modulator.frequency);\n\t        this.frequency.chain(this.modulationIndex, this._modulationNode);\n\t        this._modulator.connect(this._modulationNode.gain);\n\t        this._modulationNode.connect(this._carrier.frequency);\n\t        this._carrier.connect(this.output);\n\t        this.detune.connect(this._modulator.detune);\n\t        this.phase = options.phase;\n\t        this._readOnly([\n\t            'modulationIndex',\n\t            'frequency',\n\t            'detune',\n\t            'harmonicity'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.FMOscillator, Tone.Oscillator);\n\t    /**\n\t\t *  default values\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t *  @const\n\t\t */\n\t    Tone.FMOscillator.defaults = {\n\t        'frequency': 440,\n\t        'detune': 0,\n\t        'phase': 0,\n\t        'modulationIndex': 2,\n\t        'modulationType': 'square',\n\t        'harmonicity': 1\n\t    };\n\t    /**\n\t\t *  start the oscillator\n\t\t *  @param  {Time} [time=now]\n\t\t *  @private\n\t\t */\n\t    Tone.FMOscillator.prototype._start = function (time) {\n\t        time = this.toSeconds(time);\n\t        this._modulator.start(time);\n\t        this._carrier.start(time);\n\t    };\n\t    /**\n\t\t *  stop the oscillator\n\t\t *  @param  {Time} time (optional) timing parameter\n\t\t *  @private\n\t\t */\n\t    Tone.FMOscillator.prototype._stop = function (time) {\n\t        time = this.toSeconds(time);\n\t        this._modulator.stop(time);\n\t        this._carrier.stop(time);\n\t    };\n\t    /**\n\t\t * The type of the carrier oscillator\n\t\t * @memberOf Tone.FMOscillator#\n\t\t * @type {string}\n\t\t * @name type\n\t\t */\n\t    Object.defineProperty(Tone.FMOscillator.prototype, 'type', {\n\t        get: function () {\n\t            return this._carrier.type;\n\t        },\n\t        set: function (type) {\n\t            this._carrier.type = type;\n\t        }\n\t    });\n\t    /**\n\t\t * The type of the modulator oscillator\n\t\t * @memberOf Tone.FMOscillator#\n\t\t * @type {String}\n\t\t * @name modulationType\n\t\t */\n\t    Object.defineProperty(Tone.FMOscillator.prototype, 'modulationType', {\n\t        get: function () {\n\t            return this._modulator.type;\n\t        },\n\t        set: function (type) {\n\t            this._modulator.type = type;\n\t        }\n\t    });\n\t    /**\n\t\t * The phase of the oscillator in degrees.\n\t\t * @memberOf Tone.FMOscillator#\n\t\t * @type {number}\n\t\t * @name phase\n\t\t */\n\t    Object.defineProperty(Tone.FMOscillator.prototype, 'phase', {\n\t        get: function () {\n\t            return this._carrier.phase;\n\t        },\n\t        set: function (phase) {\n\t            this._carrier.phase = phase;\n\t            this._modulator.phase = phase;\n\t        }\n\t    });\n\t    /**\n\t\t * The partials of the carrier waveform. A partial represents \n\t\t * the amplitude at a harmonic. The first harmonic is the \n\t\t * fundamental frequency, the second is the octave and so on\n\t\t * following the harmonic series. \n\t\t * Setting this value will automatically set the type to \"custom\". \n\t\t * The value is an empty array when the type is not \"custom\". \n\t\t * @memberOf Tone.FMOscillator#\n\t\t * @type {Array}\n\t\t * @name partials\n\t\t * @example\n\t\t * osc.partials = [1, 0.2, 0.01];\n\t\t */\n\t    Object.defineProperty(Tone.FMOscillator.prototype, 'partials', {\n\t        get: function () {\n\t            return this._carrier.partials;\n\t        },\n\t        set: function (partials) {\n\t            this._carrier.partials = partials;\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up.\n\t\t *  @return {Tone.FMOscillator} this\n\t\t */\n\t    Tone.FMOscillator.prototype.dispose = function () {\n\t        Tone.Source.prototype.dispose.call(this);\n\t        this._writable([\n\t            'modulationIndex',\n\t            'frequency',\n\t            'detune',\n\t            'harmonicity'\n\t        ]);\n\t        this.frequency.dispose();\n\t        this.frequency = null;\n\t        this.detune = null;\n\t        this.harmonicity.dispose();\n\t        this.harmonicity = null;\n\t        this._carrier.dispose();\n\t        this._carrier = null;\n\t        this._modulator.dispose();\n\t        this._modulator = null;\n\t        this._modulationNode.dispose();\n\t        this._modulationNode = null;\n\t        this.modulationIndex.dispose();\n\t        this.modulationIndex = null;\n\t        return this;\n\t    };\n\t    return Tone.FMOscillator;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.AMOscillator \n\t\t *\n\t\t *  @extends {Tone.Oscillator}\n\t\t *  @constructor\n\t\t *  @param {Frequency} frequency The starting frequency of the oscillator. \n\t\t *  @param {String} type The type of the carrier oscillator.\n\t\t *  @param {String} modulationType The type of the modulator oscillator.\n\t\t *  @example\n\t\t * //a sine oscillator frequency-modulated by a square wave\n\t\t * var fmOsc = new Tone.AMOscillator(\"Ab3\", \"sine\", \"square\").toMaster().start();\n\t\t */\n\t    Tone.AMOscillator = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'frequency',\n\t            'type',\n\t            'modulationType'\n\t        ], Tone.AMOscillator.defaults);\n\t        Tone.Source.call(this, options);\n\t        /**\n\t\t\t *  The carrier oscillator\n\t\t\t *  @type {Tone.Oscillator}\n\t\t\t *  @private\n\t\t\t */\n\t        this._carrier = new Tone.Oscillator(options.frequency, options.type);\n\t        /**\n\t\t\t *  The oscillator's frequency\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.frequency = this._carrier.frequency;\n\t        /**\n\t\t\t *  The detune control signal.\n\t\t\t *  @type {Cents}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.detune = this._carrier.detune;\n\t        this.detune.value = options.detune;\n\t        /**\n\t\t\t *  The modulating oscillator\n\t\t\t *  @type  {Tone.Oscillator}\n\t\t\t *  @private\n\t\t\t */\n\t        this._modulator = new Tone.Oscillator(options.frequency, options.modulationType);\n\t        /**\n\t\t\t *  convert the -1,1 output to 0,1\n\t\t\t *  @type {Tone.AudioToGain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._modulationScale = new Tone.AudioToGain();\n\t        /**\n\t\t\t *  Harmonicity is the frequency ratio between the carrier and the modulator oscillators. \n\t\t\t *  A harmonicity of 1 gives both oscillators the same frequency. \n\t\t\t *  Harmonicity = 2 means a change of an octave. \n\t\t\t *  @type {Positive}\n\t\t\t *  @signal\n\t\t\t *  @example\n\t\t\t * //pitch the modulator an octave below carrier\n\t\t\t * synth.harmonicity.value = 0.5;\n\t\t\t */\n\t        this.harmonicity = new Tone.Multiply(options.harmonicity);\n\t        this.harmonicity.units = Tone.Type.Positive;\n\t        /**\n\t\t\t *  the node where the modulation happens\n\t\t\t *  @type {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._modulationNode = new Tone.Gain(0);\n\t        //connections\n\t        this.frequency.chain(this.harmonicity, this._modulator.frequency);\n\t        this.detune.connect(this._modulator.detune);\n\t        this._modulator.chain(this._modulationScale, this._modulationNode.gain);\n\t        this._carrier.chain(this._modulationNode, this.output);\n\t        this.phase = options.phase;\n\t        this._readOnly([\n\t            'frequency',\n\t            'detune',\n\t            'harmonicity'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.AMOscillator, Tone.Oscillator);\n\t    /**\n\t\t *  default values\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t *  @const\n\t\t */\n\t    Tone.AMOscillator.defaults = {\n\t        'frequency': 440,\n\t        'detune': 0,\n\t        'phase': 0,\n\t        'modulationType': 'square',\n\t        'harmonicity': 1\n\t    };\n\t    /**\n\t\t *  start the oscillator\n\t\t *  @param  {Time} [time=now]\n\t\t *  @private\n\t\t */\n\t    Tone.AMOscillator.prototype._start = function (time) {\n\t        time = this.toSeconds(time);\n\t        this._modulator.start(time);\n\t        this._carrier.start(time);\n\t    };\n\t    /**\n\t\t *  stop the oscillator\n\t\t *  @param  {Time} time (optional) timing parameter\n\t\t *  @private\n\t\t */\n\t    Tone.AMOscillator.prototype._stop = function (time) {\n\t        time = this.toSeconds(time);\n\t        this._modulator.stop(time);\n\t        this._carrier.stop(time);\n\t    };\n\t    /**\n\t\t * The type of the carrier oscillator\n\t\t * @memberOf Tone.AMOscillator#\n\t\t * @type {string}\n\t\t * @name type\n\t\t */\n\t    Object.defineProperty(Tone.AMOscillator.prototype, 'type', {\n\t        get: function () {\n\t            return this._carrier.type;\n\t        },\n\t        set: function (type) {\n\t            this._carrier.type = type;\n\t        }\n\t    });\n\t    /**\n\t\t * The type of the modulator oscillator\n\t\t * @memberOf Tone.AMOscillator#\n\t\t * @type {string}\n\t\t * @name modulationType\n\t\t */\n\t    Object.defineProperty(Tone.AMOscillator.prototype, 'modulationType', {\n\t        get: function () {\n\t            return this._modulator.type;\n\t        },\n\t        set: function (type) {\n\t            this._modulator.type = type;\n\t        }\n\t    });\n\t    /**\n\t\t * The phase of the oscillator in degrees.\n\t\t * @memberOf Tone.AMOscillator#\n\t\t * @type {number}\n\t\t * @name phase\n\t\t */\n\t    Object.defineProperty(Tone.AMOscillator.prototype, 'phase', {\n\t        get: function () {\n\t            return this._carrier.phase;\n\t        },\n\t        set: function (phase) {\n\t            this._carrier.phase = phase;\n\t            this._modulator.phase = phase;\n\t        }\n\t    });\n\t    /**\n\t\t * The partials of the carrier waveform. A partial represents \n\t\t * the amplitude at a harmonic. The first harmonic is the \n\t\t * fundamental frequency, the second is the octave and so on\n\t\t * following the harmonic series. \n\t\t * Setting this value will automatically set the type to \"custom\". \n\t\t * The value is an empty array when the type is not \"custom\". \n\t\t * @memberOf Tone.AMOscillator#\n\t\t * @type {Array}\n\t\t * @name partials\n\t\t * @example\n\t\t * osc.partials = [1, 0.2, 0.01];\n\t\t */\n\t    Object.defineProperty(Tone.AMOscillator.prototype, 'partials', {\n\t        get: function () {\n\t            return this._carrier.partials;\n\t        },\n\t        set: function (partials) {\n\t            this._carrier.partials = partials;\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up.\n\t\t *  @return {Tone.AMOscillator} this\n\t\t */\n\t    Tone.AMOscillator.prototype.dispose = function () {\n\t        Tone.Source.prototype.dispose.call(this);\n\t        this._writable([\n\t            'frequency',\n\t            'detune',\n\t            'harmonicity'\n\t        ]);\n\t        this.frequency = null;\n\t        this.detune = null;\n\t        this.harmonicity.dispose();\n\t        this.harmonicity = null;\n\t        this._carrier.dispose();\n\t        this._carrier = null;\n\t        this._modulator.dispose();\n\t        this._modulator = null;\n\t        this._modulationNode.dispose();\n\t        this._modulationNode = null;\n\t        this._modulationScale.dispose();\n\t        this._modulationScale = null;\n\t        return this;\n\t    };\n\t    return Tone.AMOscillator;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.FatOscillator \n\t\t *\n\t\t *  @extends {Tone.Oscillator}\n\t\t *  @constructor\n\t\t *  @param {Frequency} frequency The starting frequency of the oscillator. \n\t\t *  @param {String} type The type of the carrier oscillator.\n\t\t *  @param {String} modulationType The type of the modulator oscillator.\n\t\t *  @example\n\t\t * //a sine oscillator frequency-modulated by a square wave\n\t\t * var fmOsc = new Tone.FatOscillator(\"Ab3\", \"sine\", \"square\").toMaster().start();\n\t\t */\n\t    Tone.FatOscillator = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'frequency',\n\t            'type',\n\t            'spread'\n\t        ], Tone.FatOscillator.defaults);\n\t        Tone.Source.call(this, options);\n\t        /**\n\t\t\t *  The oscillator's frequency\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.frequency = new Tone.Signal(options.frequency, Tone.Type.Frequency);\n\t        /**\n\t\t\t *  The detune control signal.\n\t\t\t *  @type {Cents}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.detune = new Tone.Signal(options.detune, Tone.Type.Cents);\n\t        /**\n\t\t\t *  The array of oscillators\n\t\t\t *  @type {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._oscillators = [];\n\t        /**\n\t\t\t *  The total spread of the oscillators\n\t\t\t *  @type  {Cents}\n\t\t\t *  @private\n\t\t\t */\n\t        this._spread = options.spread;\n\t        /**\n\t\t\t *  The type of the oscillator\n\t\t\t *  @type {String}\n\t\t\t *  @private\n\t\t\t */\n\t        this._type = options.type;\n\t        /**\n\t\t\t *  The phase of the oscillators\n\t\t\t *  @type {Degrees}\n\t\t\t *  @private\n\t\t\t */\n\t        this._phase = options.phase;\n\t        /**\n\t\t\t *  The partials array\n\t\t\t *  @type {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._partials = this.defaultArg(options.partials, []);\n\t        //set the count initially\n\t        this.count = options.count;\n\t        this._readOnly([\n\t            'frequency',\n\t            'detune'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.FatOscillator, Tone.Oscillator);\n\t    /**\n\t\t *  default values\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t *  @const\n\t\t */\n\t    Tone.FatOscillator.defaults = {\n\t        'frequency': 440,\n\t        'detune': 0,\n\t        'phase': 0,\n\t        'spread': 20,\n\t        'count': 3,\n\t        'type': 'sawtooth'\n\t    };\n\t    /**\n\t\t *  start the oscillator\n\t\t *  @param  {Time} [time=now]\n\t\t *  @private\n\t\t */\n\t    Tone.FatOscillator.prototype._start = function (time) {\n\t        time = this.toSeconds(time);\n\t        this._forEach(function (osc) {\n\t            osc.start(time);\n\t        });\n\t    };\n\t    /**\n\t\t *  stop the oscillator\n\t\t *  @param  {Time} time (optional) timing parameter\n\t\t *  @private\n\t\t */\n\t    Tone.FatOscillator.prototype._stop = function (time) {\n\t        time = this.toSeconds(time);\n\t        this._forEach(function (osc) {\n\t            osc.stop(time);\n\t        });\n\t    };\n\t    /**\n\t\t *  Iterate over all of the oscillators\n\t\t *  @param  {Function}  iterator  The iterator function\n\t\t *  @private\n\t\t */\n\t    Tone.FatOscillator.prototype._forEach = function (iterator) {\n\t        for (var i = 0; i < this._oscillators.length; i++) {\n\t            iterator.call(this, this._oscillators[i], i);\n\t        }\n\t    };\n\t    /**\n\t\t * The type of the carrier oscillator\n\t\t * @memberOf Tone.FatOscillator#\n\t\t * @type {string}\n\t\t * @name type\n\t\t */\n\t    Object.defineProperty(Tone.FatOscillator.prototype, 'type', {\n\t        get: function () {\n\t            return this._type;\n\t        },\n\t        set: function (type) {\n\t            this._type = type;\n\t            this._forEach(function (osc) {\n\t                osc.type = type;\n\t            });\n\t        }\n\t    });\n\t    /**\n\t\t * The detune spread between the oscillators. If \"count\" is\n\t\t * set to 3 oscillators and the \"spread\" is set to 40,\n\t\t * the three oscillators would be detuned like this: [-20, 0, 20]\n\t\t * for a total detune spread of 40 cents.\n\t\t * @memberOf Tone.FatOscillator#\n\t\t * @type {Cents}\n\t\t * @name spread\n\t\t */\n\t    Object.defineProperty(Tone.FatOscillator.prototype, 'spread', {\n\t        get: function () {\n\t            return this._spread;\n\t        },\n\t        set: function (spread) {\n\t            this._spread = spread;\n\t            if (this._oscillators.length > 1) {\n\t                var start = -spread / 2;\n\t                var step = spread / (this._oscillators.length - 1);\n\t                this._forEach(function (osc, i) {\n\t                    osc.detune.value = start + step * i;\n\t                });\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * The number of detuned oscillators\n\t\t * @memberOf Tone.FatOscillator#\n\t\t * @type {Number}\n\t\t * @name count\n\t\t */\n\t    Object.defineProperty(Tone.FatOscillator.prototype, 'count', {\n\t        get: function () {\n\t            return this._oscillators.length;\n\t        },\n\t        set: function (count) {\n\t            count = Math.max(count, 1);\n\t            if (this._oscillators.length !== count) {\n\t                // var partials = this.partials;\n\t                // var type = this.type;\n\t                //dispose the previous oscillators\n\t                this._forEach(function (osc) {\n\t                    osc.dispose();\n\t                });\n\t                this._oscillators = [];\n\t                for (var i = 0; i < count; i++) {\n\t                    var osc = new Tone.Oscillator();\n\t                    if (this.type === Tone.Oscillator.Type.Custom) {\n\t                        osc.partials = this._partials;\n\t                    } else {\n\t                        osc.type = this._type;\n\t                    }\n\t                    osc.phase = this._phase;\n\t                    osc.volume.value = -6 - count;\n\t                    this.frequency.connect(osc.frequency);\n\t                    this.detune.connect(osc.detune);\n\t                    osc.connect(this.output);\n\t                    this._oscillators[i] = osc;\n\t                }\n\t                //set the spread\n\t                this.spread = this._spread;\n\t                if (this.state === Tone.State.Started) {\n\t                    this._forEach(function (osc) {\n\t                        osc.start();\n\t                    });\n\t                }\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * The phase of the oscillator in degrees.\n\t\t * @memberOf Tone.FatOscillator#\n\t\t * @type {Number}\n\t\t * @name phase\n\t\t */\n\t    Object.defineProperty(Tone.FatOscillator.prototype, 'phase', {\n\t        get: function () {\n\t            return this._phase;\n\t        },\n\t        set: function (phase) {\n\t            this._phase = phase;\n\t            this._forEach(function (osc) {\n\t                osc.phase = phase;\n\t            });\n\t        }\n\t    });\n\t    /**\n\t\t * The partials of the carrier waveform. A partial represents \n\t\t * the amplitude at a harmonic. The first harmonic is the \n\t\t * fundamental frequency, the second is the octave and so on\n\t\t * following the harmonic series. \n\t\t * Setting this value will automatically set the type to \"custom\". \n\t\t * The value is an empty array when the type is not \"custom\". \n\t\t * @memberOf Tone.FatOscillator#\n\t\t * @type {Array}\n\t\t * @name partials\n\t\t * @example\n\t\t * osc.partials = [1, 0.2, 0.01];\n\t\t */\n\t    Object.defineProperty(Tone.FatOscillator.prototype, 'partials', {\n\t        get: function () {\n\t            return this._partials;\n\t        },\n\t        set: function (partials) {\n\t            this._partials = partials;\n\t            this._type = Tone.Oscillator.Type.Custom;\n\t            this._forEach(function (osc) {\n\t                osc.partials = partials;\n\t            });\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up.\n\t\t *  @return {Tone.FatOscillator} this\n\t\t */\n\t    Tone.FatOscillator.prototype.dispose = function () {\n\t        Tone.Source.prototype.dispose.call(this);\n\t        this._writable([\n\t            'frequency',\n\t            'detune'\n\t        ]);\n\t        this.frequency.dispose();\n\t        this.frequency = null;\n\t        this.detune.dispose();\n\t        this.detune = null;\n\t        this._forEach(function (osc) {\n\t            osc.dispose();\n\t        });\n\t        this._oscillators = null;\n\t        this._partials = null;\n\t        return this;\n\t    };\n\t    return Tone.FatOscillator;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Tone.OmniOscillator aggregates Tone.Oscillator, Tone.PulseOscillator,\n\t\t *         Tone.PWMOscillator, Tone.FMOscillator, Tone.AMOscillator, and Tone.FatOscillator\n\t\t *         into one class. The oscillator class can be changed by setting the `type`. \n\t\t *         `omniOsc.type = \"pwm\"` will set it to the Tone.PWMOscillator. Prefixing\n\t\t *         any of the basic types (\"sine\", \"square4\", etc.) with \"fm\", \"am\", or \"fat\"\n\t\t *         will use the FMOscillator, AMOscillator or FatOscillator respectively. \n\t\t *         For example: `omniOsc.type = \"fatsawtooth\"` will create set the oscillator\n\t\t *         to a FatOscillator of type \"sawtooth\". \n\t\t *\n\t\t *  @extends {Tone.Oscillator}\n\t\t *  @constructor\n\t\t *  @param {Frequency} frequency The initial frequency of the oscillator.\n\t\t *  @param {String} type The type of the oscillator.\n\t\t *  @example\n\t\t *  var omniOsc = new Tone.OmniOscillator(\"C#4\", \"pwm\");\n\t\t */\n\t    Tone.OmniOscillator = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'frequency',\n\t            'type'\n\t        ], Tone.OmniOscillator.defaults);\n\t        Tone.Source.call(this, options);\n\t        /**\n\t\t\t *  The frequency control.\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.frequency = new Tone.Signal(options.frequency, Tone.Type.Frequency);\n\t        /**\n\t\t\t *  The detune control\n\t\t\t *  @type {Cents}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.detune = new Tone.Signal(options.detune, Tone.Type.Cents);\n\t        /**\n\t\t\t *  the type of the oscillator source\n\t\t\t *  @type {String}\n\t\t\t *  @private\n\t\t\t */\n\t        this._sourceType = undefined;\n\t        /**\n\t\t\t *  the oscillator\n\t\t\t *  @type {Tone.Oscillator}\n\t\t\t *  @private\n\t\t\t */\n\t        this._oscillator = null;\n\t        //set the oscillator\n\t        this.type = options.type;\n\t        this._readOnly([\n\t            'frequency',\n\t            'detune'\n\t        ]);\n\t        //set the options\n\t        this.set(options);\n\t    };\n\t    Tone.extend(Tone.OmniOscillator, Tone.Oscillator);\n\t    /**\n\t\t *  default values\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t *  @const\n\t\t */\n\t    Tone.OmniOscillator.defaults = {\n\t        'frequency': 440,\n\t        'detune': 0,\n\t        'type': 'sine',\n\t        'phase': 0\n\t    };\n\t    /**\n\t\t *  @enum {String}\n\t\t *  @private\n\t\t */\n\t    var OmniOscType = {\n\t        Pulse: 'PulseOscillator',\n\t        PWM: 'PWMOscillator',\n\t        Osc: 'Oscillator',\n\t        FM: 'FMOscillator',\n\t        AM: 'AMOscillator',\n\t        Fat: 'FatOscillator'\n\t    };\n\t    /**\n\t\t *  start the oscillator\n\t\t *  @param {Time} [time=now] the time to start the oscillator\n\t\t *  @private\n\t\t */\n\t    Tone.OmniOscillator.prototype._start = function (time) {\n\t        this._oscillator.start(time);\n\t    };\n\t    /**\n\t\t *  start the oscillator\n\t\t *  @param {Time} [time=now] the time to start the oscillator\n\t\t *  @private\n\t\t */\n\t    Tone.OmniOscillator.prototype._stop = function (time) {\n\t        this._oscillator.stop(time);\n\t    };\n\t    /**\n\t\t * The type of the oscillator. Can be any of the basic types: sine, square, triangle, sawtooth. Or\n\t\t * prefix the basic types with \"fm\", \"am\", or \"fat\" to use the FMOscillator, AMOscillator or FatOscillator\n\t\t * types. The oscillator could also be set to \"pwm\" or \"pulse\". All of the parameters of the\n\t\t * oscillator's class are accessible when the oscillator is set to that type, but throws an error \n\t\t * when it's not.\n\t\t * \n\t\t * @memberOf Tone.OmniOscillator#\n\t\t * @type {String}\n\t\t * @name type\n\t\t * @example\n\t\t * omniOsc.type = \"pwm\";\n\t\t * //modulationFrequency is parameter which is available\n\t\t * //only when the type is \"pwm\". \n\t\t * omniOsc.modulationFrequency.value = 0.5;\n\t\t * @example\n\t\t * //an square wave frequency modulated by a sawtooth\n\t\t * omniOsc.type = \"fmsquare\";\n\t\t * omniOsc.modulationType = \"sawtooth\";\n\t\t */\n\t    Object.defineProperty(Tone.OmniOscillator.prototype, 'type', {\n\t        get: function () {\n\t            var prefix = '';\n\t            if (this._sourceType === OmniOscType.FM) {\n\t                prefix = 'fm';\n\t            } else if (this._sourceType === OmniOscType.AM) {\n\t                prefix = 'am';\n\t            } else if (this._sourceType === OmniOscType.Fat) {\n\t                prefix = 'fat';\n\t            }\n\t            return prefix + this._oscillator.type;\n\t        },\n\t        set: function (type) {\n\t            if (type.substr(0, 2) === 'fm') {\n\t                this._createNewOscillator(OmniOscType.FM);\n\t                this._oscillator.type = type.substr(2);\n\t            } else if (type.substr(0, 2) === 'am') {\n\t                this._createNewOscillator(OmniOscType.AM);\n\t                this._oscillator.type = type.substr(2);\n\t            } else if (type.substr(0, 3) === 'fat') {\n\t                this._createNewOscillator(OmniOscType.Fat);\n\t                this._oscillator.type = type.substr(3);\n\t            } else if (type === 'pwm') {\n\t                this._createNewOscillator(OmniOscType.PWM);\n\t            } else if (type === 'pulse') {\n\t                this._createNewOscillator(OmniOscType.Pulse);\n\t            } else {\n\t                this._createNewOscillator(OmniOscType.Osc);\n\t                this._oscillator.type = type;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * The partials of the waveform. A partial represents \n\t\t * the amplitude at a harmonic. The first harmonic is the \n\t\t * fundamental frequency, the second is the octave and so on\n\t\t * following the harmonic series. \n\t\t * Setting this value will automatically set the type to \"custom\". \n\t\t * The value is an empty array when the type is not \"custom\". \n\t\t * This is not available on \"pwm\" and \"pulse\" oscillator types.\n\t\t * @memberOf Tone.OmniOscillator#\n\t\t * @type {Array}\n\t\t * @name partials\n\t\t * @example\n\t\t * osc.partials = [1, 0.2, 0.01];\n\t\t */\n\t    Object.defineProperty(Tone.OmniOscillator.prototype, 'partials', {\n\t        get: function () {\n\t            return this._oscillator.partials;\n\t        },\n\t        set: function (partials) {\n\t            this._oscillator.partials = partials;\n\t        }\n\t    });\n\t    /**\n\t\t *  Set a member/attribute of the oscillator. \n\t\t *  @param {Object|String} params\n\t\t *  @param {number=} value\n\t\t *  @param {Time=} rampTime\n\t\t *  @returns {Tone.OmniOscillator} this\n\t\t */\n\t    Tone.OmniOscillator.prototype.set = function (params, value) {\n\t        //make sure the type is set first\n\t        if (params === 'type') {\n\t            this.type = value;\n\t        } else if (this.isObject(params) && params.hasOwnProperty('type')) {\n\t            this.type = params.type;\n\t        }\n\t        //then set the rest\n\t        Tone.prototype.set.apply(this, arguments);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  connect the oscillator to the frequency and detune signals\n\t\t *  @private\n\t\t */\n\t    Tone.OmniOscillator.prototype._createNewOscillator = function (oscType) {\n\t        if (oscType !== this._sourceType) {\n\t            this._sourceType = oscType;\n\t            var OscillatorConstructor = Tone[oscType];\n\t            //short delay to avoid clicks on the change\n\t            var now = this.now() + this.blockTime;\n\t            if (this._oscillator !== null) {\n\t                var oldOsc = this._oscillator;\n\t                oldOsc.stop(now);\n\t                //dispose the old one\n\t                setTimeout(function () {\n\t                    oldOsc.dispose();\n\t                    oldOsc = null;\n\t                }, this.blockTime * 1000);\n\t            }\n\t            this._oscillator = new OscillatorConstructor();\n\t            this.frequency.connect(this._oscillator.frequency);\n\t            this.detune.connect(this._oscillator.detune);\n\t            this._oscillator.connect(this.output);\n\t            if (this.state === Tone.State.Started) {\n\t                this._oscillator.start(now);\n\t            }\n\t        }\n\t    };\n\t    /**\n\t\t * The phase of the oscillator in degrees. \n\t\t * @memberOf Tone.OmniOscillator#\n\t\t * @type {Degrees}\n\t\t * @name phase\n\t\t */\n\t    Object.defineProperty(Tone.OmniOscillator.prototype, 'phase', {\n\t        get: function () {\n\t            return this._oscillator.phase;\n\t        },\n\t        set: function (phase) {\n\t            this._oscillator.phase = phase;\n\t        }\n\t    });\n\t    /**\n\t\t * The width of the oscillator (only if the oscillator is set to \"pulse\")\n\t\t * @memberOf Tone.OmniOscillator#\n\t\t * @type {NormalRange}\n\t\t * @signal\n\t\t * @name width\n\t\t * @example\n\t\t * var omniOsc = new Tone.OmniOscillator(440, \"pulse\");\n\t\t * //can access the width attribute only if type === \"pulse\"\n\t\t * omniOsc.width.value = 0.2; \n\t\t */\n\t    Object.defineProperty(Tone.OmniOscillator.prototype, 'width', {\n\t        get: function () {\n\t            if (this._sourceType === OmniOscType.Pulse) {\n\t                return this._oscillator.width;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * The number of detuned oscillators\n\t\t * @memberOf Tone.OmniOscillator#\n\t\t * @type {Number}\n\t\t * @name count\n\t\t */\n\t    Object.defineProperty(Tone.OmniOscillator.prototype, 'count', {\n\t        get: function () {\n\t            if (this._sourceType === OmniOscType.Fat) {\n\t                return this._oscillator.count;\n\t            }\n\t        },\n\t        set: function (count) {\n\t            if (this._sourceType === OmniOscType.Fat) {\n\t                this._oscillator.count = count;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * The detune spread between the oscillators. If \"count\" is\n\t\t * set to 3 oscillators and the \"spread\" is set to 40,\n\t\t * the three oscillators would be detuned like this: [-20, 0, 20]\n\t\t * for a total detune spread of 40 cents. See Tone.FatOscillator\n\t\t * for more info.\n\t\t * @memberOf Tone.OmniOscillator#\n\t\t * @type {Cents}\n\t\t * @name spread\n\t\t */\n\t    Object.defineProperty(Tone.OmniOscillator.prototype, 'spread', {\n\t        get: function () {\n\t            if (this._sourceType === OmniOscType.Fat) {\n\t                return this._oscillator.spread;\n\t            }\n\t        },\n\t        set: function (spread) {\n\t            if (this._sourceType === OmniOscType.Fat) {\n\t                this._oscillator.spread = spread;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * The type of the modulator oscillator. Only if the oscillator\n\t\t * is set to \"am\" or \"fm\" types. see. Tone.AMOscillator or Tone.FMOscillator\n\t\t * for more info. \n\t\t * @memberOf Tone.OmniOscillator#\n\t\t * @type {String}\n\t\t * @name modulationType\n\t\t */\n\t    Object.defineProperty(Tone.OmniOscillator.prototype, 'modulationType', {\n\t        get: function () {\n\t            if (this._sourceType === OmniOscType.FM || this._sourceType === OmniOscType.AM) {\n\t                return this._oscillator.modulationType;\n\t            }\n\t        },\n\t        set: function (mType) {\n\t            if (this._sourceType === OmniOscType.FM || this._sourceType === OmniOscType.AM) {\n\t                this._oscillator.modulationType = mType;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * The modulation index which is in essence the depth or amount of the modulation. In other terms it is the \n\t\t * ratio of the frequency of the modulating signal (mf) to the amplitude of the \n\t\t * modulating signal (ma) -- as in ma/mf. \n\t\t * See Tone.FMOscillator for more info. \n\t\t * @type {Positive}\n\t\t * @signal\n\t\t * @name modulationIndex\n\t\t */\n\t    Object.defineProperty(Tone.OmniOscillator.prototype, 'modulationIndex', {\n\t        get: function () {\n\t            if (this._sourceType === OmniOscType.FM) {\n\t                return this._oscillator.modulationIndex;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  Harmonicity is the frequency ratio between the carrier and the modulator oscillators. \n\t\t *  A harmonicity of 1 gives both oscillators the same frequency. \n\t\t *  Harmonicity = 2 means a change of an octave. See Tone.AMOscillator or Tone.FMOscillator\n\t\t *  for more info. \n\t\t *  @memberOf Tone.OmniOscillator#\n\t\t *  @signal\n\t\t *  @type {Positive}\n\t\t *  @name harmonicity\n\t\t */\n\t    Object.defineProperty(Tone.OmniOscillator.prototype, 'harmonicity', {\n\t        get: function () {\n\t            if (this._sourceType === OmniOscType.FM || this._sourceType === OmniOscType.AM) {\n\t                return this._oscillator.harmonicity;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * The modulationFrequency Signal of the oscillator \n\t\t * (only if the oscillator type is set to pwm). See \n\t\t * Tone.PWMOscillator for more info. \n\t\t * @memberOf Tone.OmniOscillator#\n\t\t * @type {Frequency}\n\t\t * @signal\n\t\t * @name modulationFrequency\n\t\t * @example\n\t\t * var omniOsc = new Tone.OmniOscillator(440, \"pwm\");\n\t\t * //can access the modulationFrequency attribute only if type === \"pwm\"\n\t\t * omniOsc.modulationFrequency.value = 0.2; \n\t\t */\n\t    Object.defineProperty(Tone.OmniOscillator.prototype, 'modulationFrequency', {\n\t        get: function () {\n\t            if (this._sourceType === OmniOscType.PWM) {\n\t                return this._oscillator.modulationFrequency;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up.\n\t\t *  @return {Tone.OmniOscillator} this\n\t\t */\n\t    Tone.OmniOscillator.prototype.dispose = function () {\n\t        Tone.Source.prototype.dispose.call(this);\n\t        this._writable([\n\t            'frequency',\n\t            'detune'\n\t        ]);\n\t        this.detune.dispose();\n\t        this.detune = null;\n\t        this.frequency.dispose();\n\t        this.frequency = null;\n\t        this._oscillator.dispose();\n\t        this._oscillator = null;\n\t        this._sourceType = null;\n\t        return this;\n\t    };\n\t    return Tone.OmniOscillator;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Base-class for all instruments\n\t\t *  \n\t\t *  @constructor\n\t\t *  @extends {Tone}\n\t\t */\n\t    Tone.Instrument = function (options) {\n\t        //get the defaults\n\t        options = this.defaultArg(options, Tone.Instrument.defaults);\n\t        /**\n\t\t\t *  The output and volume triming node\n\t\t\t *  @type  {Tone.Volume}\n\t\t\t *  @private\n\t\t\t */\n\t        this._volume = this.output = new Tone.Volume(options.volume);\n\t        /**\n\t\t\t * The volume of the output in decibels.\n\t\t\t * @type {Decibels}\n\t\t\t * @signal\n\t\t\t * @example\n\t\t\t * source.volume.value = -6;\n\t\t\t */\n\t        this.volume = this._volume.volume;\n\t        this._readOnly('volume');\n\t    };\n\t    Tone.extend(Tone.Instrument);\n\t    /**\n\t\t *  the default attributes\n\t\t *  @type {object}\n\t\t */\n\t    Tone.Instrument.defaults = {\n\t        /** the volume of the output in decibels */\n\t        'volume': 0\n\t    };\n\t    /**\n\t\t *  @abstract\n\t\t *  @param {string|number} note the note to trigger\n\t\t *  @param {Time} [time=now] the time to trigger the ntoe\n\t\t *  @param {number} [velocity=1] the velocity to trigger the note\n\t\t */\n\t    Tone.Instrument.prototype.triggerAttack = Tone.noOp;\n\t    /**\n\t\t *  @abstract\n\t\t *  @param {Time} [time=now] when to trigger the release\n\t\t */\n\t    Tone.Instrument.prototype.triggerRelease = Tone.noOp;\n\t    /**\n\t\t *  Trigger the attack and then the release after the duration. \n\t\t *  @param  {Frequency} note     The note to trigger.\n\t\t *  @param  {Time} duration How long the note should be held for before\n\t\t *                          triggering the release. This value must be greater than 0. \n\t\t *  @param {Time} [time=now]  When the note should be triggered.\n\t\t *  @param  {NormalRange} [velocity=1] The velocity the note should be triggered at.\n\t\t *  @returns {Tone.Instrument} this\n\t\t *  @example\n\t\t * //trigger \"C4\" for the duration of an 8th note\n\t\t * synth.triggerAttackRelease(\"C4\", \"8n\");\n\t\t */\n\t    Tone.Instrument.prototype.triggerAttackRelease = function (note, duration, time, velocity) {\n\t        if (this.isUndef(time)) {\n\t            time = this.now() + this.blockTime;\n\t        } else {\n\t            time = this.toSeconds(time);\n\t        }\n\t        duration = this.toSeconds(duration);\n\t        this.triggerAttack(note, time, velocity);\n\t        this.triggerRelease(time + duration);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.Instrument} this\n\t\t */\n\t    Tone.Instrument.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._volume.dispose();\n\t        this._volume = null;\n\t        this._writable(['volume']);\n\t        this.volume = null;\n\t        return this;\n\t    };\n\t    return Tone.Instrument;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  This is an abstract base class for other monophonic instruments to \n\t\t *          extend. IMPORTANT: It does not make any sound on its own and\n\t\t *          shouldn't be directly instantiated.\n\t\t *\n\t\t *  @constructor\n\t\t *  @abstract\n\t\t *  @extends {Tone.Instrument}\n\t\t */\n\t    Tone.Monophonic = function (options) {\n\t        //get the defaults\n\t        options = this.defaultArg(options, Tone.Monophonic.defaults);\n\t        Tone.Instrument.call(this, options);\n\t        /**\n\t\t\t *  The glide time between notes. \n\t\t\t *  @type {Time}\n\t\t\t */\n\t        this.portamento = options.portamento;\n\t    };\n\t    Tone.extend(Tone.Monophonic, Tone.Instrument);\n\t    /**\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.Monophonic.defaults = { 'portamento': 0 };\n\t    /**\n\t\t *  Trigger the attack of the note optionally with a given velocity. \n\t\t *  \n\t\t *  \n\t\t *  @param  {Frequency} note     The note to trigger.\n\t\t *  @param  {Time} [time=now]     When the note should start.\n\t\t *  @param  {number} [velocity=1] velocity The velocity scaler \n\t\t *                                determines how \"loud\" the note \n\t\t *                                will be triggered.\n\t\t *  @returns {Tone.Monophonic} this\n\t\t *  @example\n\t\t * synth.triggerAttack(\"C4\");\n\t\t *  @example\n\t\t * //trigger the note a half second from now at half velocity\n\t\t * synth.triggerAttack(\"C4\", \"+0.5\", 0.5);\n\t\t */\n\t    Tone.Monophonic.prototype.triggerAttack = function (note, time, velocity) {\n\t        if (this.isUndef(time)) {\n\t            time = this.now() + this.blockTime;\n\t        } else {\n\t            time = this.toSeconds(time);\n\t        }\n\t        this._triggerEnvelopeAttack(time, velocity);\n\t        this.setNote(note, time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Trigger the release portion of the envelope\n\t\t *  @param  {Time} [time=now] If no time is given, the release happens immediatly\n\t\t *  @returns {Tone.Monophonic} this\n\t\t *  @example\n\t\t * synth.triggerRelease();\n\t\t */\n\t    Tone.Monophonic.prototype.triggerRelease = function (time) {\n\t        if (this.isUndef(time)) {\n\t            time = this.now() + this.blockTime;\n\t        } else {\n\t            time = this.toSeconds(time);\n\t        }\n\t        this._triggerEnvelopeRelease(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  override this method with the actual method\n\t\t *  @abstract\n\t\t *  @private\n\t\t */\n\t    Tone.Monophonic.prototype._triggerEnvelopeAttack = function () {\n\t    };\n\t    /**\n\t\t *  override this method with the actual method\n\t\t *  @abstract\n\t\t *  @private\n\t\t */\n\t    Tone.Monophonic.prototype._triggerEnvelopeRelease = function () {\n\t    };\n\t    /**\n\t\t *  Set the note at the given time. If no time is given, the note\n\t\t *  will set immediately. \n\t\t *  @param {Frequency} note The note to change to.\n\t\t *  @param  {Time} [time=now] The time when the note should be set. \n\t\t *  @returns {Tone.Monophonic} this\n\t\t * @example\n\t\t * //change to F#6 in one quarter note from now.\n\t\t * synth.setNote(\"F#6\", \"+4n\");\n\t\t * @example\n\t\t * //change to Bb4 right now\n\t\t * synth.setNote(\"Bb4\");\n\t\t */\n\t    Tone.Monophonic.prototype.setNote = function (note, time) {\n\t        time = this.toSeconds(time);\n\t        if (this.portamento > 0) {\n\t            var currentNote = this.frequency.value;\n\t            this.frequency.setValueAtTime(currentNote, time);\n\t            var portTime = this.toSeconds(this.portamento);\n\t            this.frequency.exponentialRampToValueAtTime(note, time + portTime);\n\t        } else {\n\t            this.frequency.setValueAtTime(note, time);\n\t        }\n\t        return this;\n\t    };\n\t    return Tone.Monophonic;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.Synth is composed simply of a Tone.OmniOscillator\n\t\t *          routed through a Tone.AmplitudeEnvelope. \n\t\t *          <img src=\"https://docs.google.com/drawings/d/1-1_0YW2Z1J2EPI36P8fNCMcZG7N1w1GZluPs4og4evo/pub?w=1163&h=231\">\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Monophonic}\n\t\t *  @param {Object} [options] the options available for the synth \n\t\t *                          see defaults below\n\t\t *  @example\n\t\t * var synth = new Tone.Synth().toMaster();\n\t\t * synth.triggerAttackRelease(\"C4\", \"8n\");\n\t\t */\n\t    Tone.Synth = function (options) {\n\t        //get the defaults\n\t        options = this.defaultArg(options, Tone.Synth.defaults);\n\t        Tone.Monophonic.call(this, options);\n\t        /**\n\t\t\t *  The oscillator.\n\t\t\t *  @type {Tone.OmniOscillator}\n\t\t\t */\n\t        this.oscillator = new Tone.OmniOscillator(options.oscillator);\n\t        /**\n\t\t\t *  The frequency control.\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.frequency = this.oscillator.frequency;\n\t        /**\n\t\t\t *  The detune control.\n\t\t\t *  @type {Cents}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.detune = this.oscillator.detune;\n\t        /**\n\t\t\t *  The amplitude envelope.\n\t\t\t *  @type {Tone.AmplitudeEnvelope}\n\t\t\t */\n\t        this.envelope = new Tone.AmplitudeEnvelope(options.envelope);\n\t        //connect the oscillators to the output\n\t        this.oscillator.chain(this.envelope, this.output);\n\t        //start the oscillators\n\t        this.oscillator.start();\n\t        this._readOnly([\n\t            'oscillator',\n\t            'frequency',\n\t            'detune',\n\t            'envelope'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.Synth, Tone.Monophonic);\n\t    /**\n\t\t *  @const\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.Synth.defaults = {\n\t        'oscillator': { 'type': 'triangle' },\n\t        'envelope': {\n\t            'attack': 0.005,\n\t            'decay': 0.1,\n\t            'sustain': 0.3,\n\t            'release': 1\n\t        }\n\t    };\n\t    /**\n\t\t *  start the attack portion of the envelope\n\t\t *  @param {Time} [time=now] the time the attack should start\n\t\t *  @param {number} [velocity=1] the velocity of the note (0-1)\n\t\t *  @returns {Tone.Synth} this\n\t\t *  @private\n\t\t */\n\t    Tone.Synth.prototype._triggerEnvelopeAttack = function (time, velocity) {\n\t        //the envelopes\n\t        this.envelope.triggerAttack(time, velocity);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  start the release portion of the envelope\n\t\t *  @param {Time} [time=now] the time the release should start\n\t\t *  @returns {Tone.Synth} this\n\t\t *  @private\n\t\t */\n\t    Tone.Synth.prototype._triggerEnvelopeRelease = function (time) {\n\t        this.envelope.triggerRelease(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.Synth} this\n\t\t */\n\t    Tone.Synth.prototype.dispose = function () {\n\t        Tone.Monophonic.prototype.dispose.call(this);\n\t        this._writable([\n\t            'oscillator',\n\t            'frequency',\n\t            'detune',\n\t            'envelope'\n\t        ]);\n\t        this.oscillator.dispose();\n\t        this.oscillator = null;\n\t        this.envelope.dispose();\n\t        this.envelope = null;\n\t        this.frequency = null;\n\t        this.detune = null;\n\t        return this;\n\t    };\n\t    return Tone.Synth;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  AMSynth uses the output of one Tone.Synth to modulate the\n\t\t *          amplitude of another Tone.Synth. The harmonicity (the ratio between\n\t\t *          the two signals) affects the timbre of the output signal greatly.\n\t\t *          Read more about Amplitude Modulation Synthesis on \n\t\t *          [SoundOnSound](http://www.soundonsound.com/sos/mar00/articles/synthsecrets.htm).\n\t\t *          <img src=\"https://docs.google.com/drawings/d/1TQu8Ed4iFr1YTLKpB3U1_hur-UwBrh5gdBXc8BxfGKw/pub?w=1009&h=457\">\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Monophonic}\n\t\t *  @param {Object} [options] the options available for the synth \n\t\t *                            see defaults below\n\t\t *  @example\n\t\t * var synth = new Tone.AMSynth().toMaster();\n\t\t * synth.triggerAttackRelease(\"C4\", \"4n\");\n\t\t */\n\t    Tone.AMSynth = function (options) {\n\t        options = this.defaultArg(options, Tone.AMSynth.defaults);\n\t        Tone.Monophonic.call(this, options);\n\t        /**\n\t\t\t *  The carrier voice. \n\t\t\t *  @type {Tone.Synth}\n\t\t\t *  @private\n\t\t\t */\n\t        this._carrier = new Tone.Synth();\n\t        this._carrier.volume.value = -10;\n\t        /**\n\t\t\t *  The carrier's oscillator\n\t\t\t *  @type {Tone.Oscillator}\n\t\t\t */\n\t        this.oscillator = this._carrier.oscillator;\n\t        /**\n\t\t\t *  The carrier's envelope\n\t\t\t *  @type {Tone.AmplitudeEnvelope}\n\t\t\t */\n\t        this.envelope = this._carrier.envelope.set(options.envelope);\n\t        /**\n\t\t\t *  The modulator voice. \n\t\t\t *  @type {Tone.Synth}\n\t\t\t *  @private\n\t\t\t */\n\t        this._modulator = new Tone.Synth();\n\t        this._modulator.volume.value = -10;\n\t        /**\n\t\t\t *  The modulator's oscillator which is applied\n\t\t\t *  to the amplitude of the oscillator\n\t\t\t *  @type {Tone.Oscillator}\n\t\t\t */\n\t        this.modulation = this._modulator.oscillator.set(options.modulation);\n\t        /**\n\t\t\t *  The modulator's envelope\n\t\t\t *  @type {Tone.AmplitudeEnvelope}\n\t\t\t */\n\t        this.modulationEnvelope = this._modulator.envelope.set(options.modulationEnvelope);\n\t        /**\n\t\t\t *  The frequency.\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.frequency = new Tone.Signal(440, Tone.Type.Frequency);\n\t        /**\n\t\t\t *  The detune in cents\n\t\t\t *  @type {Cents}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.detune = new Tone.Signal(options.detune, Tone.Type.Cents);\n\t        /**\n\t\t\t *  Harmonicity is the ratio between the two voices. A harmonicity of\n\t\t\t *  1 is no change. Harmonicity = 2 means a change of an octave. \n\t\t\t *  @type {Positive}\n\t\t\t *  @signal\n\t\t\t *  @example\n\t\t\t * //pitch voice1 an octave below voice0\n\t\t\t * synth.harmonicity.value = 0.5;\n\t\t\t */\n\t        this.harmonicity = new Tone.Multiply(options.harmonicity);\n\t        this.harmonicity.units = Tone.Type.Positive;\n\t        /**\n\t\t\t *  convert the -1,1 output to 0,1\n\t\t\t *  @type {Tone.AudioToGain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._modulationScale = new Tone.AudioToGain();\n\t        /**\n\t\t\t *  the node where the modulation happens\n\t\t\t *  @type {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._modulationNode = new Tone.Gain();\n\t        //control the two voices frequency\n\t        this.frequency.connect(this._carrier.frequency);\n\t        this.frequency.chain(this.harmonicity, this._modulator.frequency);\n\t        this.detune.fan(this._carrier.detune, this._modulator.detune);\n\t        this._modulator.chain(this._modulationScale, this._modulationNode.gain);\n\t        this._carrier.chain(this._modulationNode, this.output);\n\t        this._readOnly([\n\t            'frequency',\n\t            'harmonicity',\n\t            'oscillator',\n\t            'envelope',\n\t            'modulation',\n\t            'modulationEnvelope',\n\t            'detune'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.AMSynth, Tone.Monophonic);\n\t    /**\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.AMSynth.defaults = {\n\t        'harmonicity': 3,\n\t        'detune': 0,\n\t        'oscillator': { 'type': 'sine' },\n\t        'envelope': {\n\t            'attack': 0.01,\n\t            'decay': 0.01,\n\t            'sustain': 1,\n\t            'release': 0.5\n\t        },\n\t        'modulation': { 'type': 'square' },\n\t        'modulationEnvelope': {\n\t            'attack': 0.5,\n\t            'decay': 0,\n\t            'sustain': 1,\n\t            'release': 0.5\n\t        }\n\t    };\n\t    /**\n\t\t *  trigger the attack portion of the note\n\t\t *  \n\t\t *  @param  {Time} [time=now] the time the note will occur\n\t\t *  @param {NormalRange} [velocity=1] the velocity of the note\n\t\t *  @private\n\t\t *  @returns {Tone.AMSynth} this\n\t\t */\n\t    Tone.AMSynth.prototype._triggerEnvelopeAttack = function (time, velocity) {\n\t        //the port glide\n\t        time = this.toSeconds(time);\n\t        //the envelopes\n\t        this.envelope.triggerAttack(time, velocity);\n\t        this.modulationEnvelope.triggerAttack(time, velocity);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  trigger the release portion of the note\n\t\t *  \n\t\t *  @param  {Time} [time=now] the time the note will release\n\t\t *  @private\n\t\t *  @returns {Tone.AMSynth} this\n\t\t */\n\t    Tone.AMSynth.prototype._triggerEnvelopeRelease = function (time) {\n\t        this.envelope.triggerRelease(time);\n\t        this.modulationEnvelope.triggerRelease(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.AMSynth} this\n\t\t */\n\t    Tone.AMSynth.prototype.dispose = function () {\n\t        Tone.Monophonic.prototype.dispose.call(this);\n\t        this._writable([\n\t            'frequency',\n\t            'harmonicity',\n\t            'oscillator',\n\t            'envelope',\n\t            'modulation',\n\t            'modulationEnvelope',\n\t            'detune'\n\t        ]);\n\t        this._carrier.dispose();\n\t        this._carrier = null;\n\t        this._modulator.dispose();\n\t        this._modulator = null;\n\t        this.frequency.dispose();\n\t        this.frequency = null;\n\t        this.detune.dispose();\n\t        this.detune = null;\n\t        this.harmonicity.dispose();\n\t        this.harmonicity = null;\n\t        this._modulationScale.dispose();\n\t        this._modulationScale = null;\n\t        this._modulationNode.dispose();\n\t        this._modulationNode = null;\n\t        this.oscillator = null;\n\t        this.envelope = null;\n\t        this.modulationEnvelope = null;\n\t        this.modulation = null;\n\t        return this;\n\t    };\n\t    return Tone.AMSynth;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.MonoSynth is composed of one oscillator, one filter, and two envelopes.\n\t\t *          The amplitude of the Tone.Oscillator and the cutoff frequency of the \n\t\t *          Tone.Filter are controlled by Tone.Envelopes. \n\t\t *          <img src=\"https://docs.google.com/drawings/d/1gaY1DF9_Hzkodqf8JI1Cg2VZfwSElpFQfI94IQwad38/pub?w=924&h=240\">\n\t\t *          \n\t\t *  @constructor\n\t\t *  @extends {Tone.Monophonic}\n\t\t *  @param {Object} [options] the options available for the synth \n\t\t *                          see defaults below\n\t\t *  @example\n\t\t * var synth = new Tone.MonoSynth({\n\t\t * \t\"oscillator\" : {\n\t\t * \t\t\"type\" : \"square\"\n\t\t *  },\n\t\t *  \"envelope\" : {\n\t\t *  \t\"attack\" : 0.1\n\t\t *  }\n\t\t * }).toMaster();\n\t\t * synth.triggerAttackRelease(\"C4\", \"8n\");\n\t\t */\n\t    Tone.MonoSynth = function (options) {\n\t        //get the defaults\n\t        options = this.defaultArg(options, Tone.MonoSynth.defaults);\n\t        Tone.Monophonic.call(this, options);\n\t        /**\n\t\t\t *  The oscillator.\n\t\t\t *  @type {Tone.OmniOscillator}\n\t\t\t */\n\t        this.oscillator = new Tone.OmniOscillator(options.oscillator);\n\t        /**\n\t\t\t *  The frequency control.\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.frequency = this.oscillator.frequency;\n\t        /**\n\t\t\t *  The detune control.\n\t\t\t *  @type {Cents}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.detune = this.oscillator.detune;\n\t        /**\n\t\t\t *  The filter.\n\t\t\t *  @type {Tone.Filter}\n\t\t\t */\n\t        this.filter = new Tone.Filter(options.filter);\n\t        /**\n\t\t\t *  The filter envelope.\n\t\t\t *  @type {Tone.FrequencyEnvelope}\n\t\t\t */\n\t        this.filterEnvelope = new Tone.FrequencyEnvelope(options.filterEnvelope);\n\t        /**\n\t\t\t *  The amplitude envelope.\n\t\t\t *  @type {Tone.AmplitudeEnvelope}\n\t\t\t */\n\t        this.envelope = new Tone.AmplitudeEnvelope(options.envelope);\n\t        //connect the oscillators to the output\n\t        this.oscillator.chain(this.filter, this.envelope, this.output);\n\t        //start the oscillators\n\t        this.oscillator.start();\n\t        //connect the filter envelope\n\t        this.filterEnvelope.connect(this.filter.frequency);\n\t        this._readOnly([\n\t            'oscillator',\n\t            'frequency',\n\t            'detune',\n\t            'filter',\n\t            'filterEnvelope',\n\t            'envelope'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.MonoSynth, Tone.Monophonic);\n\t    /**\n\t\t *  @const\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.MonoSynth.defaults = {\n\t        'frequency': 'C4',\n\t        'detune': 0,\n\t        'oscillator': { 'type': 'square' },\n\t        'filter': {\n\t            'Q': 6,\n\t            'type': 'lowpass',\n\t            'rolloff': -24\n\t        },\n\t        'envelope': {\n\t            'attack': 0.005,\n\t            'decay': 0.1,\n\t            'sustain': 0.9,\n\t            'release': 1\n\t        },\n\t        'filterEnvelope': {\n\t            'attack': 0.06,\n\t            'decay': 0.2,\n\t            'sustain': 0.5,\n\t            'release': 2,\n\t            'baseFrequency': 200,\n\t            'octaves': 7,\n\t            'exponent': 2\n\t        }\n\t    };\n\t    /**\n\t\t *  start the attack portion of the envelope\n\t\t *  @param {Time} [time=now] the time the attack should start\n\t\t *  @param {NormalRange} [velocity=1] the velocity of the note (0-1)\n\t\t *  @returns {Tone.MonoSynth} this\n\t\t *  @private\n\t\t */\n\t    Tone.MonoSynth.prototype._triggerEnvelopeAttack = function (time, velocity) {\n\t        //the envelopes\n\t        this.envelope.triggerAttack(time, velocity);\n\t        this.filterEnvelope.triggerAttack(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  start the release portion of the envelope\n\t\t *  @param {Time} [time=now] the time the release should start\n\t\t *  @returns {Tone.MonoSynth} this\n\t\t *  @private\n\t\t */\n\t    Tone.MonoSynth.prototype._triggerEnvelopeRelease = function (time) {\n\t        this.envelope.triggerRelease(time);\n\t        this.filterEnvelope.triggerRelease(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.MonoSynth} this\n\t\t */\n\t    Tone.MonoSynth.prototype.dispose = function () {\n\t        Tone.Monophonic.prototype.dispose.call(this);\n\t        this._writable([\n\t            'oscillator',\n\t            'frequency',\n\t            'detune',\n\t            'filter',\n\t            'filterEnvelope',\n\t            'envelope'\n\t        ]);\n\t        this.oscillator.dispose();\n\t        this.oscillator = null;\n\t        this.envelope.dispose();\n\t        this.envelope = null;\n\t        this.filterEnvelope.dispose();\n\t        this.filterEnvelope = null;\n\t        this.filter.dispose();\n\t        this.filter = null;\n\t        this.frequency = null;\n\t        this.detune = null;\n\t        return this;\n\t    };\n\t    return Tone.MonoSynth;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.DuoSynth is a monophonic synth composed of two \n\t\t *          MonoSynths run in parallel with control over the \n\t\t *          frequency ratio between the two voices and vibrato effect.\n\t\t *          <img src=\"https://docs.google.com/drawings/d/1bL4GXvfRMMlqS7XyBm9CjL9KJPSUKbcdBNpqOlkFLxk/pub?w=1012&h=448\">\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Monophonic}\n\t\t *  @param {Object} [options] the options available for the synth \n\t\t *                          see defaults below\n\t\t *  @example\n\t\t * var duoSynth = new Tone.DuoSynth().toMaster();\n\t\t * duoSynth.triggerAttackRelease(\"C4\", \"2n\");\n\t\t */\n\t    Tone.DuoSynth = function (options) {\n\t        options = this.defaultArg(options, Tone.DuoSynth.defaults);\n\t        Tone.Monophonic.call(this, options);\n\t        /**\n\t\t\t *  the first voice\n\t\t\t *  @type {Tone.MonoSynth}\n\t\t\t */\n\t        this.voice0 = new Tone.MonoSynth(options.voice0);\n\t        this.voice0.volume.value = -10;\n\t        /**\n\t\t\t *  the second voice\n\t\t\t *  @type {Tone.MonoSynth}\n\t\t\t */\n\t        this.voice1 = new Tone.MonoSynth(options.voice1);\n\t        this.voice1.volume.value = -10;\n\t        /**\n\t\t\t *  The vibrato LFO. \n\t\t\t *  @type {Tone.LFO}\n\t\t\t *  @private\n\t\t\t */\n\t        this._vibrato = new Tone.LFO(options.vibratoRate, -50, 50);\n\t        this._vibrato.start();\n\t        /**\n\t\t\t * the vibrato frequency\n\t\t\t * @type {Frequency}\n\t\t\t * @signal\n\t\t\t */\n\t        this.vibratoRate = this._vibrato.frequency;\n\t        /**\n\t\t\t *  the vibrato gain\n\t\t\t *  @type {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._vibratoGain = new Tone.Gain(options.vibratoAmount, Tone.Type.Positive);\n\t        /**\n\t\t\t * The amount of vibrato\n\t\t\t * @type {Positive}\n\t\t\t * @signal\n\t\t\t */\n\t        this.vibratoAmount = this._vibratoGain.gain;\n\t        /**\n\t\t\t *  the frequency control\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.frequency = new Tone.Signal(440, Tone.Type.Frequency);\n\t        /**\n\t\t\t *  Harmonicity is the ratio between the two voices. A harmonicity of\n\t\t\t *  1 is no change. Harmonicity = 2 means a change of an octave. \n\t\t\t *  @type {Positive}\n\t\t\t *  @signal\n\t\t\t *  @example\n\t\t\t * //pitch voice1 an octave below voice0\n\t\t\t * duoSynth.harmonicity.value = 0.5;\n\t\t\t */\n\t        this.harmonicity = new Tone.Multiply(options.harmonicity);\n\t        this.harmonicity.units = Tone.Type.Positive;\n\t        //control the two voices frequency\n\t        this.frequency.connect(this.voice0.frequency);\n\t        this.frequency.chain(this.harmonicity, this.voice1.frequency);\n\t        this._vibrato.connect(this._vibratoGain);\n\t        this._vibratoGain.fan(this.voice0.detune, this.voice1.detune);\n\t        this.voice0.connect(this.output);\n\t        this.voice1.connect(this.output);\n\t        this._readOnly([\n\t            'voice0',\n\t            'voice1',\n\t            'frequency',\n\t            'vibratoAmount',\n\t            'vibratoRate'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.DuoSynth, Tone.Monophonic);\n\t    /**\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.DuoSynth.defaults = {\n\t        'vibratoAmount': 0.5,\n\t        'vibratoRate': 5,\n\t        'harmonicity': 1.5,\n\t        'voice0': {\n\t            'volume': -10,\n\t            'portamento': 0,\n\t            'oscillator': { 'type': 'sine' },\n\t            'filterEnvelope': {\n\t                'attack': 0.01,\n\t                'decay': 0,\n\t                'sustain': 1,\n\t                'release': 0.5\n\t            },\n\t            'envelope': {\n\t                'attack': 0.01,\n\t                'decay': 0,\n\t                'sustain': 1,\n\t                'release': 0.5\n\t            }\n\t        },\n\t        'voice1': {\n\t            'volume': -10,\n\t            'portamento': 0,\n\t            'oscillator': { 'type': 'sine' },\n\t            'filterEnvelope': {\n\t                'attack': 0.01,\n\t                'decay': 0,\n\t                'sustain': 1,\n\t                'release': 0.5\n\t            },\n\t            'envelope': {\n\t                'attack': 0.01,\n\t                'decay': 0,\n\t                'sustain': 1,\n\t                'release': 0.5\n\t            }\n\t        }\n\t    };\n\t    /**\n\t\t *  start the attack portion of the envelopes\n\t\t *  \n\t\t *  @param {Time} [time=now] the time the attack should start\n\t\t *  @param {NormalRange} [velocity=1] the velocity of the note (0-1)\n\t\t *  @returns {Tone.DuoSynth} this\n\t\t *  @private\n\t\t */\n\t    Tone.DuoSynth.prototype._triggerEnvelopeAttack = function (time, velocity) {\n\t        time = this.toSeconds(time);\n\t        this.voice0.envelope.triggerAttack(time, velocity);\n\t        this.voice1.envelope.triggerAttack(time, velocity);\n\t        this.voice0.filterEnvelope.triggerAttack(time);\n\t        this.voice1.filterEnvelope.triggerAttack(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  start the release portion of the envelopes\n\t\t *  \n\t\t *  @param {Time} [time=now] the time the release should start\n\t\t *  @returns {Tone.DuoSynth} this\n\t\t *  @private\n\t\t */\n\t    Tone.DuoSynth.prototype._triggerEnvelopeRelease = function (time) {\n\t        this.voice0.triggerRelease(time);\n\t        this.voice1.triggerRelease(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.DuoSynth} this\n\t\t */\n\t    Tone.DuoSynth.prototype.dispose = function () {\n\t        Tone.Monophonic.prototype.dispose.call(this);\n\t        this._writable([\n\t            'voice0',\n\t            'voice1',\n\t            'frequency',\n\t            'vibratoAmount',\n\t            'vibratoRate'\n\t        ]);\n\t        this.voice0.dispose();\n\t        this.voice0 = null;\n\t        this.voice1.dispose();\n\t        this.voice1 = null;\n\t        this.frequency.dispose();\n\t        this.frequency = null;\n\t        this._vibratoGain.dispose();\n\t        this._vibratoGain = null;\n\t        this._vibrato = null;\n\t        this.harmonicity.dispose();\n\t        this.harmonicity = null;\n\t        this.vibratoAmount.dispose();\n\t        this.vibratoAmount = null;\n\t        this.vibratoRate = null;\n\t        return this;\n\t    };\n\t    return Tone.DuoSynth;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  FMSynth is composed of two Tone.Synths where one Tone.Synth modulates\n\t\t *          the frequency of a second Tone.Synth. A lot of spectral content \n\t\t *          can be explored using the modulationIndex parameter. Read more about\n\t\t *          frequency modulation synthesis on [SoundOnSound](http://www.soundonsound.com/sos/apr00/articles/synthsecrets.htm).\n\t\t *          <img src=\"https://docs.google.com/drawings/d/1h0PUDZXPgi4Ikx6bVT6oncrYPLluFKy7lj53puxj-DM/pub?w=902&h=462\">\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Monophonic}\n\t\t *  @param {Object} [options] the options available for the synth \n\t\t *                          see defaults below\n\t\t *  @example\n\t\t * var fmSynth = new Tone.FMSynth().toMaster();\n\t\t * fmSynth.triggerAttackRelease(\"C5\", \"4n\");\n\t\t */\n\t    Tone.FMSynth = function (options) {\n\t        options = this.defaultArg(options, Tone.FMSynth.defaults);\n\t        Tone.Monophonic.call(this, options);\n\t        /**\n\t\t\t *  The carrier voice.\n\t\t\t *  @type {Tone.Synth}\n\t\t\t *  @private\n\t\t\t */\n\t        this._carrier = new Tone.Synth(options.carrier);\n\t        this._carrier.volume.value = -10;\n\t        /**\n\t\t\t *  The carrier's oscillator\n\t\t\t *  @type {Tone.Oscillator}\n\t\t\t */\n\t        this.oscillator = this._carrier.oscillator;\n\t        /**\n\t\t\t *  The carrier's envelope\n\t\t\t *  @type {Tone.Oscillator}\n\t\t\t */\n\t        this.envelope = this._carrier.envelope.set(options.envelope);\n\t        /**\n\t\t\t *  The modulator voice.\n\t\t\t *  @type {Tone.Synth}\n\t\t\t *  @private\n\t\t\t */\n\t        this._modulator = new Tone.Synth(options.modulator);\n\t        this._modulator.volume.value = -10;\n\t        /**\n\t\t\t *  The modulator's oscillator which is applied\n\t\t\t *  to the amplitude of the oscillator\n\t\t\t *  @type {Tone.Oscillator}\n\t\t\t */\n\t        this.modulation = this._modulator.oscillator.set(options.modulation);\n\t        /**\n\t\t\t *  The modulator's envelope\n\t\t\t *  @type {Tone.Oscillator}\n\t\t\t */\n\t        this.modulationEnvelope = this._modulator.envelope.set(options.modulationEnvelope);\n\t        /**\n\t\t\t *  The frequency control.\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.frequency = new Tone.Signal(440, Tone.Type.Frequency);\n\t        /**\n\t\t\t *  The detune in cents\n\t\t\t *  @type {Cents}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.detune = new Tone.Signal(options.detune, Tone.Type.Cents);\n\t        /**\n\t\t\t *  Harmonicity is the ratio between the two voices. A harmonicity of\n\t\t\t *  1 is no change. Harmonicity = 2 means a change of an octave. \n\t\t\t *  @type {Positive}\n\t\t\t *  @signal\n\t\t\t *  @example\n\t\t\t * //pitch voice1 an octave below voice0\n\t\t\t * synth.harmonicity.value = 0.5;\n\t\t\t */\n\t        this.harmonicity = new Tone.Multiply(options.harmonicity);\n\t        this.harmonicity.units = Tone.Type.Positive;\n\t        /**\n\t\t\t *  The modulation index which essentially the depth or amount of the modulation. It is the \n\t\t\t *  ratio of the frequency of the modulating signal (mf) to the amplitude of the \n\t\t\t *  modulating signal (ma) -- as in ma/mf. \n\t\t\t *\t@type {Positive}\n\t\t\t *\t@signal\n\t\t\t */\n\t        this.modulationIndex = new Tone.Multiply(options.modulationIndex);\n\t        this.modulationIndex.units = Tone.Type.Positive;\n\t        /**\n\t\t\t *  the node where the modulation happens\n\t\t\t *  @type {GainNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._modulationNode = new Tone.Gain(0);\n\t        //control the two voices frequency\n\t        this.frequency.connect(this._carrier.frequency);\n\t        this.frequency.chain(this.harmonicity, this._modulator.frequency);\n\t        this.frequency.chain(this.modulationIndex, this._modulationNode);\n\t        this.detune.fan(this._carrier.detune, this._modulator.detune);\n\t        this._modulator.connect(this._modulationNode.gain);\n\t        this._modulationNode.connect(this._carrier.frequency);\n\t        this._carrier.connect(this.output);\n\t        this._readOnly([\n\t            'frequency',\n\t            'harmonicity',\n\t            'modulationIndex',\n\t            'oscillator',\n\t            'envelope',\n\t            'modulation',\n\t            'modulationEnvelope',\n\t            'detune'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.FMSynth, Tone.Monophonic);\n\t    /**\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.FMSynth.defaults = {\n\t        'harmonicity': 3,\n\t        'modulationIndex': 10,\n\t        'detune': 0,\n\t        'oscillator': { 'type': 'sine' },\n\t        'envelope': {\n\t            'attack': 0.01,\n\t            'decay': 0.01,\n\t            'sustain': 1,\n\t            'release': 0.5\n\t        },\n\t        'modulation': { 'type': 'square' },\n\t        'modulationEnvelope': {\n\t            'attack': 0.5,\n\t            'decay': 0,\n\t            'sustain': 1,\n\t            'release': 0.5\n\t        }\n\t    };\n\t    /**\n\t\t * \ttrigger the attack portion of the note\n\t\t *  \n\t\t *  @param  {Time} [time=now] the time the note will occur\n\t\t *  @param {number} [velocity=1] the velocity of the note\n\t\t *  @returns {Tone.FMSynth} this\n\t\t *  @private\n\t\t */\n\t    Tone.FMSynth.prototype._triggerEnvelopeAttack = function (time, velocity) {\n\t        time = this.toSeconds(time);\n\t        //the envelopes\n\t        this.envelope.triggerAttack(time, velocity);\n\t        this.modulationEnvelope.triggerAttack(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  trigger the release portion of the note\n\t\t *  \n\t\t *  @param  {Time} [time=now] the time the note will release\n\t\t *  @returns {Tone.FMSynth} this\n\t\t *  @private\n\t\t */\n\t    Tone.FMSynth.prototype._triggerEnvelopeRelease = function (time) {\n\t        time = this.toSeconds(time);\n\t        this.envelope.triggerRelease(time);\n\t        this.modulationEnvelope.triggerRelease(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.FMSynth} this\n\t\t */\n\t    Tone.FMSynth.prototype.dispose = function () {\n\t        Tone.Monophonic.prototype.dispose.call(this);\n\t        this._writable([\n\t            'frequency',\n\t            'harmonicity',\n\t            'modulationIndex',\n\t            'oscillator',\n\t            'envelope',\n\t            'modulation',\n\t            'modulationEnvelope',\n\t            'detune'\n\t        ]);\n\t        this._carrier.dispose();\n\t        this._carrier = null;\n\t        this._modulator.dispose();\n\t        this._modulator = null;\n\t        this.frequency.dispose();\n\t        this.frequency = null;\n\t        this.detune.dispose();\n\t        this.detune = null;\n\t        this.modulationIndex.dispose();\n\t        this.modulationIndex = null;\n\t        this.harmonicity.dispose();\n\t        this.harmonicity = null;\n\t        this._modulationNode.dispose();\n\t        this._modulationNode = null;\n\t        this.oscillator = null;\n\t        this.envelope = null;\n\t        this.modulationEnvelope = null;\n\t        this.modulation = null;\n\t        return this;\n\t    };\n\t    return Tone.FMSynth;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.MembraneSynth makes kick and tom sounds using a single oscillator\n\t\t *          with an amplitude envelope and frequency ramp. A Tone.OmniOscillator\n\t\t *          is routed through a Tone.AmplitudeEnvelope to the output. The drum\n\t\t *          quality of the sound comes from the frequency envelope applied\n\t\t *          during during Tone.MembraneSynth.triggerAttack(note). The frequency\n\t\t *          envelope starts at <code>note * .octaves</code> and ramps to \n\t\t *          <code>note</code> over the duration of <code>.pitchDecay</code>. \n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Instrument}\n\t\t *  @param {Object} [options] the options available for the synth \n\t\t *                          see defaults below\n\t\t *  @example\n\t\t * var synth = new Tone.MembraneSynth().toMaster();\n\t\t * synth.triggerAttackRelease(\"C2\", \"8n\");\n\t\t */\n\t    Tone.MembraneSynth = function (options) {\n\t        options = this.defaultArg(options, Tone.MembraneSynth.defaults);\n\t        Tone.Instrument.call(this, options);\n\t        /**\n\t\t\t *  The oscillator.\n\t\t\t *  @type {Tone.OmniOscillator}\n\t\t\t */\n\t        this.oscillator = new Tone.OmniOscillator(options.oscillator).start();\n\t        /**\n\t\t\t *  The amplitude envelope.\n\t\t\t *  @type {Tone.AmplitudeEnvelope}\n\t\t\t */\n\t        this.envelope = new Tone.AmplitudeEnvelope(options.envelope);\n\t        /**\n\t\t\t *  The number of octaves the pitch envelope ramps.\n\t\t\t *  @type {Positive}\n\t\t\t */\n\t        this.octaves = options.octaves;\n\t        /**\n\t\t\t *  The amount of time the frequency envelope takes. \n\t\t\t *  @type {Time}\n\t\t\t */\n\t        this.pitchDecay = options.pitchDecay;\n\t        this.oscillator.chain(this.envelope, this.output);\n\t        this._readOnly([\n\t            'oscillator',\n\t            'envelope'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.MembraneSynth, Tone.Instrument);\n\t    /**\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.MembraneSynth.defaults = {\n\t        'pitchDecay': 0.05,\n\t        'octaves': 10,\n\t        'oscillator': { 'type': 'sine' },\n\t        'envelope': {\n\t            'attack': 0.001,\n\t            'decay': 0.4,\n\t            'sustain': 0.01,\n\t            'release': 1.4,\n\t            'attackCurve': 'exponential'\n\t        }\n\t    };\n\t    /**\n\t\t *  Trigger the note at the given time with the given velocity. \n\t\t *  \n\t\t *  @param  {Frequency} note     the note\n\t\t *  @param  {Time} [time=now]     the time, if not given is now\n\t\t *  @param  {number} [velocity=1] velocity defaults to 1\n\t\t *  @returns {Tone.MembraneSynth} this\n\t\t *  @example\n\t\t *  kick.triggerAttack(60);\n\t\t */\n\t    Tone.MembraneSynth.prototype.triggerAttack = function (note, time, velocity) {\n\t        time = this.toSeconds(time);\n\t        note = this.toFrequency(note);\n\t        var maxNote = note * this.octaves;\n\t        this.oscillator.frequency.setValueAtTime(maxNote, time);\n\t        this.oscillator.frequency.exponentialRampToValueAtTime(note, time + this.toSeconds(this.pitchDecay));\n\t        this.envelope.triggerAttack(time, velocity);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Trigger the release portion of the note.\n\t\t *  \n\t\t *  @param  {Time} [time=now] the time the note will release\n\t\t *  @returns {Tone.MembraneSynth} this\n\t\t */\n\t    Tone.MembraneSynth.prototype.triggerRelease = function (time) {\n\t        this.envelope.triggerRelease(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.MembraneSynth} this\n\t\t */\n\t    Tone.MembraneSynth.prototype.dispose = function () {\n\t        Tone.Instrument.prototype.dispose.call(this);\n\t        this._writable([\n\t            'oscillator',\n\t            'envelope'\n\t        ]);\n\t        this.oscillator.dispose();\n\t        this.oscillator = null;\n\t        this.envelope.dispose();\n\t        this.envelope = null;\n\t        return this;\n\t    };\n\t    return Tone.MembraneSynth;\n\t});\n\tModule(function (Tone) {\n\t    /**\n\t\t *  Inharmonic ratio of frequencies based on the Roland TR-808\n\t\t *  Taken from https://ccrma.stanford.edu/papers/tr-808-cymbal-physically-informed-circuit-bendable-digital-model\n\t\t *  @private\n\t\t *  @static\n\t\t *  @type {Array}\n\t\t */\n\t    var inharmRatios = [\n\t        1,\n\t        1.483,\n\t        1.932,\n\t        2.546,\n\t        2.63,\n\t        3.897\n\t    ];\n\t    /**\n\t\t *  @class  A highly inharmonic and spectrally complex source with a highpass filter\n\t\t *          and amplitude envelope which is good for making metalophone sounds. Based\n\t\t *          on CymbalSynth by [@polyrhythmatic](https://github.com/polyrhythmatic).\n\t\t *          Inspiration from [Sound on Sound](http://www.soundonsound.com/sos/jul02/articles/synthsecrets0702.asp).\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Instrument}\n\t\t *  @param {Object} [options] The options availble for the synth\n\t\t *                             see defaults below\n\t\t */\n\t    Tone.MetalSynth = function (options) {\n\t        options = this.defaultArg(options, Tone.MetalSynth.defaults);\n\t        Tone.Instrument.call(this, options);\n\t        /**\n\t\t\t *  The frequency of the cymbal\n\t\t\t *  @type  {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.frequency = new Tone.Signal(options.frequency, Tone.Type.Frequency);\n\t        /**\n\t\t\t *  The array of FMOscillators\n\t\t\t *  @type  {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._oscillators = [];\n\t        /**\n\t\t\t *  The frequency multipliers\n\t\t\t *  @type {Array}\n\t\t\t *  @private\n\t\t\t */\n\t        this._freqMultipliers = [];\n\t        /**\n\t\t\t *  The amplitude for the body\n\t\t\t *  @type {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._amplitue = new Tone.Gain(0).connect(this.output);\n\t        /**\n\t\t\t *  highpass the output\n\t\t\t *  @type {Tone.Filter}\n\t\t\t *  @private\n\t\t\t */\n\t        this._highpass = new Tone.Filter({\n\t            'type': 'highpass',\n\t            'Q': -3.0102999566398125\n\t        }).connect(this._amplitue);\n\t        /**\n\t\t\t *  The number of octaves the highpass\n\t\t\t *  filter frequency ramps\n\t\t\t *  @type {Number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._octaves = options.octaves;\n\t        /**\n\t\t\t *  Scale the body envelope\n\t\t\t *  for the bandpass\n\t\t\t *  @type {Tone.Scale}\n\t\t\t *  @private\n\t\t\t */\n\t        this._filterFreqScaler = new Tone.Scale(options.resonance, 7000);\n\t        /**\n\t\t\t *  The envelope which is connected both to the \n\t\t\t *  amplitude and highpass filter's cutoff frequency\n\t\t\t *  @type  {Tone.Envelope}\n\t\t\t */\n\t        this.envelope = new Tone.Envelope({\n\t            'attack': options.envelope.attack,\n\t            'attackCurve': 'linear',\n\t            'decay': options.envelope.decay,\n\t            'sustain': 0,\n\t            'release': options.envelope.release\n\t        }).chain(this._filterFreqScaler, this._highpass.frequency);\n\t        this.envelope.connect(this._amplitue.gain);\n\t        for (var i = 0; i < inharmRatios.length; i++) {\n\t            var osc = new Tone.FMOscillator({\n\t                'type': 'square',\n\t                'modulationType': 'square',\n\t                'harmonicity': options.harmonicity,\n\t                'modulationIndex': options.modulationIndex\n\t            });\n\t            osc.connect(this._highpass).start(0);\n\t            this._oscillators[i] = osc;\n\t            var mult = new Tone.Multiply(inharmRatios[i]);\n\t            this._freqMultipliers[i] = mult;\n\t            this.frequency.chain(mult, osc.frequency);\n\t        }\n\t        //set the octaves\n\t        this.octaves = options.octaves;\n\t    };\n\t    Tone.extend(Tone.MetalSynth, Tone.Instrument);\n\t    /**\n\t\t *  default values\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.MetalSynth.defaults = {\n\t        'frequency': 200,\n\t        'envelope': {\n\t            'attack': 0.001,\n\t            'decay': 1.4,\n\t            'release': 0.2\n\t        },\n\t        'harmonicity': 5.1,\n\t        'modulationIndex': 32,\n\t        'resonance': 4000,\n\t        'octaves': 1.5\n\t    };\n\t    /**\n\t\t *  Trigger the attack.\n\t\t *  @param  {Time}  time      When the attack should be triggered.\n\t\t *  @param  {NormalRange=1}  velocity  The velocity that the envelope should be triggered at.\n\t\t *  @return  {Tone.MetalSynth}  this\n\t\t */\n\t    Tone.MetalSynth.prototype.triggerAttack = function (time, vel) {\n\t        time = this.toSeconds(time);\n\t        vel = this.defaultArg(vel, 1);\n\t        this.envelope.triggerAttack(time, vel);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Trigger the release of the envelope.\n\t\t *  @param  {Time}  time      When the release should be triggered.\n\t\t *  @return  {Tone.MetalSynth}  this\n\t\t */\n\t    Tone.MetalSynth.prototype.triggerRelease = function (time) {\n\t        time = this.toSeconds(time);\n\t        this.envelope.triggerRelease(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Trigger the attack and release of the envelope after the given \n\t\t *  duration. \n\t\t *  @param  {Time}  duration  The duration before triggering the release\n\t\t *  @param  {Time}  time      When the attack should be triggered.\n\t\t *  @param  {NormalRange=1}  velocity  The velocity that the envelope should be triggered at.\n\t\t *  @return  {Tone.MetalSynth}  this\n\t\t */\n\t    Tone.MetalSynth.prototype.triggerAttackRelease = function (duration, time, velocity) {\n\t        time = this.toSeconds(time);\n\t        duration = this.toSeconds(duration);\n\t        this.triggerAttack(time, velocity);\n\t        this.triggerRelease(time + duration);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  The modulationIndex of the oscillators which make up the source.\n\t\t *  see Tone.FMOscillator.modulationIndex\n\t\t *  @memberOf Tone.MetalSynth#\n\t\t *  @type {Positive}\n\t\t *  @name  modulationIndex\n\t\t */\n\t    Object.defineProperty(Tone.MetalSynth.prototype, 'modulationIndex', {\n\t        get: function () {\n\t            return this._oscillators[0].modulationIndex.value;\n\t        },\n\t        set: function (val) {\n\t            for (var i = 0; i < this._oscillators.length; i++) {\n\t                this._oscillators[i].modulationIndex.value = val;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  The harmonicity of the oscillators which make up the source.\n\t\t *  see Tone.FMOscillator.harmonicity\n\t\t *  @memberOf Tone.MetalSynth#\n\t\t *  @type {Positive}\n\t\t *  @name  harmonicity\n\t\t */\n\t    Object.defineProperty(Tone.MetalSynth.prototype, 'harmonicity', {\n\t        get: function () {\n\t            return this._oscillators[0].harmonicity.value;\n\t        },\n\t        set: function (val) {\n\t            for (var i = 0; i < this._oscillators.length; i++) {\n\t                this._oscillators[i].harmonicity.value = val;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  The frequency of the highpass filter attached to the envelope\n\t\t *  @memberOf Tone.MetalSynth#\n\t\t *  @type {Frequency}\n\t\t *  @name  resonance\n\t\t */\n\t    Object.defineProperty(Tone.MetalSynth.prototype, 'resonance', {\n\t        get: function () {\n\t            return this._filterFreqScaler.min;\n\t        },\n\t        set: function (val) {\n\t            this._filterFreqScaler.min = val;\n\t            this.octaves = this._octaves;\n\t        }\n\t    });\n\t    /**\n\t\t *  The number of octaves above the \"resonance\" frequency\n\t\t *  that the filter ramps during the attack/decay envelope\n\t\t *  @memberOf Tone.MetalSynth#\n\t\t *  @type {Number}\n\t\t *  @name  octaves\n\t\t */\n\t    Object.defineProperty(Tone.MetalSynth.prototype, 'octaves', {\n\t        get: function () {\n\t            return this._octaves;\n\t        },\n\t        set: function (octs) {\n\t            this._octaves = octs;\n\t            this._filterFreqScaler.max = this._filterFreqScaler.min * Math.pow(2, octs);\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up\n\t\t *  @returns {Tone.MetalSynth} this\n\t\t */\n\t    Tone.MetalSynth.prototype.dispose = function () {\n\t        Tone.Instrument.prototype.dispose.call(this);\n\t        for (var i = 0; i < this._oscillators.length; i++) {\n\t            this._oscillators[i].dispose();\n\t            this._freqMultipliers[i].dispose();\n\t        }\n\t        this._oscillators = null;\n\t        this._freqMultipliers = null;\n\t        this.frequency.dispose();\n\t        this.frequency = null;\n\t        this._filterFreqScaler.dispose();\n\t        this._filterFreqScaler = null;\n\t        this._amplitue.dispose();\n\t        this._amplitue = null;\n\t        this.envelope.dispose();\n\t        this.envelope = null;\n\t        this._highpass.dispose();\n\t        this._highpass = null;\n\t    };\n\t    return Tone.MetalSynth;\n\t});\n\tModule(function (Tone) {\n\t    /**\n\t\t *  BufferSource polyfill\n\t\t */\n\t    if (window.AudioBufferSourceNode && !AudioBufferSourceNode.prototype.start) {\n\t        AudioBufferSourceNode.prototype.start = AudioBufferSourceNode.prototype.noteGrainOn;\n\t        AudioBufferSourceNode.prototype.stop = AudioBufferSourceNode.prototype.noteOff;\n\t    }\n\t    /**\n\t\t *  @class Wrapper around the native BufferSourceNode.\n\t\t *  @param  {AudioBuffer|Tone.Buffer}  buffer   The buffer to play\n\t\t *  @param  {Function}  onended  The callback to invoke when the \n\t\t *                               buffer is done playing.\n\t\t */\n\t    Tone.BufferSource = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'buffer',\n\t            'onended'\n\t        ], Tone.BufferSource.defaults);\n\t        /**\n\t\t\t *  The callback to invoke after the \n\t\t\t *  buffer source is done playing. \n\t\t\t *  @type  {Function}\n\t\t\t */\n\t        this.onended = options.onended;\n\t        /**\n\t\t\t *  The time that the buffer was started.\n\t\t\t *  @type  {Number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._startTime = -1;\n\t        /**\n\t\t\t *  The time that the buffer is scheduled to stop.\n\t\t\t *  @type  {Number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._stopTime = -1;\n\t        /**\n\t\t\t *  The gain node which envelopes the BufferSource\n\t\t\t *  @type  {Tone.Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._gainNode = this.output = new Tone.Gain();\n\t        /**\n\t\t\t *  The buffer source\n\t\t\t *  @type  {AudioBufferSourceNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._source = this.context.createBufferSource();\n\t        this._source.connect(this._gainNode);\n\t        /**\n\t\t\t *  The playbackRate of the buffer\n\t\t\t *  @type {Positive}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.playbackRate = new Tone.Param(this._source.playbackRate, Tone.Type.Positive);\n\t        /**\n\t\t\t *  The fadeIn time of the amplitude envelope.\n\t\t\t *  @type {Time}\n\t\t\t */\n\t        this.fadeIn = options.fadeIn;\n\t        /**\n\t\t\t *  The fadeOut time of the amplitude envelope.\n\t\t\t *  @type {Time}\n\t\t\t */\n\t        this.fadeOut = options.fadeOut;\n\t        /**\n\t\t\t *  The value that the buffer ramps to\n\t\t\t *  @type {Gain}\n\t\t\t *  @private\n\t\t\t */\n\t        this._gain = 1;\n\t        /**\n\t\t\t * The onended timeout\n\t\t\t * @type {Number}\n\t\t\t * @private\n\t\t\t */\n\t        this._onendedTimeout = -1;\n\t        //set the buffer initially\n\t        if (!this.isUndef(options.buffer)) {\n\t            this.buffer = options.buffer;\n\t        }\n\t        this.loop = options.loop;\n\t    };\n\t    Tone.extend(Tone.BufferSource);\n\t    /**\n\t\t *  The defaults\n\t\t *  @const\n\t\t *  @type  {Object}\n\t\t */\n\t    Tone.BufferSource.defaults = {\n\t        'onended': Tone.noOp,\n\t        'fadeIn': 0,\n\t        'fadeOut': 0\n\t    };\n\t    /**\n\t\t *  Returns the playback state of the source, either \"started\" or \"stopped\".\n\t\t *  @type {Tone.State}\n\t\t *  @readOnly\n\t\t *  @memberOf Tone.BufferSource#\n\t\t *  @name state\n\t\t */\n\t    Object.defineProperty(Tone.BufferSource.prototype, 'state', {\n\t        get: function () {\n\t            var now = this.now();\n\t            if (this._startTime !== -1 && now >= this._startTime && now < this._stopTime) {\n\t                return Tone.State.Started;\n\t            } else {\n\t                return Tone.State.Stopped;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  Start the buffer\n\t\t *  @param  {Time} [startTime=now] When the player should start.\n\t\t *  @param  {Time} [offset=0] The offset from the beginning of the sample\n\t\t *                                 to start at. \n\t\t *  @param  {Time=} duration How long the sample should play. If no duration\n\t\t *                                is given, it will default to the full length \n\t\t *                                of the sample (minus any offset)\n\t\t *  @param  {Gain}  [gain=1]  The gain to play the buffer back at.\n\t\t *  @param  {Time=}  fadeInTime  The optional fadeIn ramp time.\n\t\t *  @return  {Tone.BufferSource}  this\n\t\t */\n\t    Tone.BufferSource.prototype.start = function (time, offset, duration, gain, fadeInTime) {\n\t        if (this._startTime !== -1) {\n\t            throw new Error('Tone.BufferSource: can only be started once.');\n\t        }\n\t        if (this.buffer) {\n\t            time = this.toSeconds(time);\n\t            //if it's a loop the default offset is the loopstart point\n\t            if (this.loop) {\n\t                offset = this.defaultArg(offset, this.loopStart);\n\t            } else {\n\t                //otherwise the default offset is 0\n\t                offset = this.defaultArg(offset, 0);\n\t            }\n\t            offset = this.toSeconds(offset);\n\t            //the values in seconds\n\t            time = this.toSeconds(time);\n\t            this._source.start(time, offset);\n\t            gain = this.defaultArg(gain, 1);\n\t            this._gain = gain;\n\t            //the fadeIn time\n\t            if (this.isUndef(fadeInTime)) {\n\t                fadeInTime = this.toSeconds(this.fadeIn);\n\t            } else {\n\t                fadeInTime = this.toSeconds(fadeInTime);\n\t            }\n\t            if (fadeInTime > 0) {\n\t                this._gainNode.gain.setValueAtTime(0, time);\n\t                this._gainNode.gain.linearRampToValueAtTime(this._gain, time + fadeInTime);\n\t            } else {\n\t                this._gainNode.gain.setValueAtTime(gain, time);\n\t            }\n\t            this._startTime = time + fadeInTime;\n\t            if (!this.isUndef(duration)) {\n\t                duration = this.defaultArg(duration, this.buffer.duration - offset);\n\t                duration = this.toSeconds(duration);\n\t                this.stop(time + duration + fadeInTime, fadeInTime);\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Stop the buffer. Optionally add a ramp time to fade the \n\t\t *  buffer out. \n\t\t *  @param  {Time=}  time         The time the buffer should stop.\n\t\t *  @param  {Time=}  fadeOutTime  How long the gain should fade out for\n\t\t *  @return  {Tone.BufferSource}  this\n\t\t */\n\t    Tone.BufferSource.prototype.stop = function (time, fadeOutTime) {\n\t        if (this.buffer) {\n\t            time = this.toSeconds(time);\n\t            //the fadeOut time\n\t            if (this.isUndef(fadeOutTime)) {\n\t                fadeOutTime = this.toSeconds(this.fadeOut);\n\t            } else {\n\t                fadeOutTime = this.toSeconds(fadeOutTime);\n\t            }\n\t            this._stopTime = time + fadeOutTime;\n\t            //cancel the end curve\n\t            this._gainNode.gain.cancelScheduledValues(this._startTime + this.sampleTime);\n\t            //set a new one\n\t            if (fadeOutTime > 0) {\n\t                this._gainNode.gain.setValueAtTime(this._gain, time);\n\t                this._gainNode.gain.linearRampToValueAtTime(0, time + fadeOutTime);\n\t                time += fadeOutTime;\n\t            } else {\n\t                this._gainNode.gain.setValueAtTime(0, time);\n\t            }\n\t            // fix for safari bug and old FF\n\t            if (!this.isNumber(this._source.playbackState) || this._source.playbackState === 2) {\n\t                this._source.stop(time);\n\t            }\n\t            clearTimeout(this._onendedTimeout);\n\t            this._onendedTimeout = setTimeout(this._onended.bind(this), (this._stopTime - this.now()) * 1000);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Internal callback when the buffer is ended. \n\t\t *  Invokes `onended` and disposes the node.\n\t\t *  @private\n\t\t */\n\t    Tone.BufferSource.prototype._onended = function () {\n\t        this.onended(this);\n\t        this.dispose();\n\t    };\n\t    /**\n\t\t * If loop is true, the loop will start at this position. \n\t\t * @memberOf Tone.BufferSource#\n\t\t * @type {Time}\n\t\t * @name loopStart\n\t\t */\n\t    Object.defineProperty(Tone.BufferSource.prototype, 'loopStart', {\n\t        get: function () {\n\t            return this._source.loopStart;\n\t        },\n\t        set: function (loopStart) {\n\t            this._source.loopStart = this.toSeconds(loopStart);\n\t        }\n\t    });\n\t    /**\n\t\t * If loop is true, the loop will end at this position.\n\t\t * @memberOf Tone.BufferSource#\n\t\t * @type {Time}\n\t\t * @name loopEnd\n\t\t */\n\t    Object.defineProperty(Tone.BufferSource.prototype, 'loopEnd', {\n\t        get: function () {\n\t            return this._source.loopEnd;\n\t        },\n\t        set: function (loopEnd) {\n\t            this._source.loopEnd = this.toSeconds(loopEnd);\n\t        }\n\t    });\n\t    /**\n\t\t * The audio buffer belonging to the player. \n\t\t * @memberOf Tone.BufferSource#\n\t\t * @type {AudioBuffer}\n\t\t * @name buffer\n\t\t */\n\t    Object.defineProperty(Tone.BufferSource.prototype, 'buffer', {\n\t        get: function () {\n\t            if (this._source) {\n\t                return this._source.buffer;\n\t            } else {\n\t                return null;\n\t            }\n\t        },\n\t        set: function (buffer) {\n\t            if (buffer instanceof Tone.Buffer) {\n\t                this._source.buffer = buffer.get();\n\t            } else {\n\t                this._source.buffer = buffer;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * If the buffer should loop once it's over. \n\t\t * @memberOf Tone.BufferSource#\n\t\t * @type {boolean}\n\t\t * @name loop\n\t\t */\n\t    Object.defineProperty(Tone.BufferSource.prototype, 'loop', {\n\t        get: function () {\n\t            return this._source.loop;\n\t        },\n\t        set: function (loop) {\n\t            this._source.loop = loop;\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up.\n\t\t *  @return  {Tone.BufferSource}  this\n\t\t */\n\t    Tone.BufferSource.prototype.dispose = function () {\n\t        this.onended = null;\n\t        if (this._source) {\n\t            this._source.disconnect();\n\t            this._source = null;\n\t        }\n\t        if (this._gainNode) {\n\t            this._gainNode.dispose();\n\t            this._gainNode = null;\n\t        }\n\t        this._startTime = -1;\n\t        this.playbackRate = null;\n\t        this.output = null;\n\t        clearTimeout(this._onendedTimeout);\n\t        return this;\n\t    };\n\t    return Tone.BufferSource;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.Noise is a noise generator. It uses looped noise buffers to save on performance.\n\t\t *          Tone.Noise supports the noise types: \"pink\", \"white\", and \"brown\". Read more about\n\t\t *          colors of noise on [Wikipedia](https://en.wikipedia.org/wiki/Colors_of_noise).\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Source}\n\t\t *  @param {string} type the noise type (white|pink|brown)\n\t\t *  @example\n\t\t * //initialize the noise and start\n\t\t * var noise = new Tone.Noise(\"pink\").start();\n\t\t * \n\t\t * //make an autofilter to shape the noise\n\t\t * var autoFilter = new Tone.AutoFilter({\n\t\t * \t\"frequency\" : \"8m\", \n\t\t * \t\"min\" : 800, \n\t\t * \t\"max\" : 15000\n\t\t * }).connect(Tone.Master);\n\t\t * \n\t\t * //connect the noise\n\t\t * noise.connect(autoFilter);\n\t\t * //start the autofilter LFO\n\t\t * autoFilter.start()\n\t\t */\n\t    Tone.Noise = function () {\n\t        var options = this.optionsObject(arguments, ['type'], Tone.Noise.defaults);\n\t        Tone.Source.call(this, options);\n\t        /**\n\t\t\t *  @private\n\t\t\t *  @type {AudioBufferSourceNode}\n\t\t\t */\n\t        this._source = null;\n\t        /**\n\t\t\t *  the buffer\n\t\t\t *  @private\n\t\t\t *  @type {AudioBuffer}\n\t\t\t */\n\t        this._type = options.type;\n\t        /**\n\t\t\t *  The playback rate of the noise. Affects\n\t\t\t *  the \"frequency\" of the noise.\n\t\t\t *  @type {Positive}\n\t\t\t *  @signal\n\t\t\t */\n\t        this._playbackRate = options.playbackRate;\n\t    };\n\t    Tone.extend(Tone.Noise, Tone.Source);\n\t    /**\n\t\t *  the default parameters\n\t\t *\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.Noise.defaults = {\n\t        'type': 'white',\n\t        'playbackRate': 1\n\t    };\n\t    /**\n\t\t * The type of the noise. Can be \"white\", \"brown\", or \"pink\". \n\t\t * @memberOf Tone.Noise#\n\t\t * @type {string}\n\t\t * @name type\n\t\t * @example\n\t\t * noise.type = \"white\";\n\t\t */\n\t    Object.defineProperty(Tone.Noise.prototype, 'type', {\n\t        get: function () {\n\t            return this._type;\n\t        },\n\t        set: function (type) {\n\t            if (this._type !== type) {\n\t                if (type in _noiseBuffers) {\n\t                    this._type = type;\n\t                    //if it's playing, stop and restart it\n\t                    if (this.state === Tone.State.Started) {\n\t                        var now = this.now() + this.blockTime;\n\t                        this._stop(now);\n\t                        this._start(now);\n\t                    }\n\t                } else {\n\t                    throw new TypeError('Tone.Noise: invalid type: ' + type);\n\t                }\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  The playback rate of the noise. Affects\n\t\t *  the \"frequency\" of the noise.\n\t\t *  @type {Positive}\n\t\t *  @signal\n\t\t */\n\t    Object.defineProperty(Tone.Noise.prototype, 'playbackRate', {\n\t        get: function () {\n\t            return this._playbackRate;\n\t        },\n\t        set: function (rate) {\n\t            this._playbackRate = rate;\n\t            if (this._source) {\n\t                this._source.playbackRate.value = rate;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t *  internal start method\n\t\t *\n\t\t *  @param {Time} time\n\t\t *  @private\n\t\t */\n\t    Tone.Noise.prototype._start = function (time) {\n\t        var buffer = _noiseBuffers[this._type];\n\t        this._source = new Tone.BufferSource(buffer).connect(this.output);\n\t        this._source.loop = true;\n\t        this._source.playbackRate.value = this._playbackRate;\n\t        this._source.start(this.toSeconds(time), Math.random() * (buffer.duration - 0.001));\n\t    };\n\t    /**\n\t\t *  internal stop method\n\t\t *\n\t\t *  @param {Time} time\n\t\t *  @private\n\t\t */\n\t    Tone.Noise.prototype._stop = function (time) {\n\t        if (this._source) {\n\t            this._source.stop(this.toSeconds(time));\n\t            this._source = null;\n\t        }\n\t    };\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.Noise} this\n\t\t */\n\t    Tone.Noise.prototype.dispose = function () {\n\t        Tone.Source.prototype.dispose.call(this);\n\t        if (this._source !== null) {\n\t            this._source.disconnect();\n\t            this._source = null;\n\t        }\n\t        this._buffer = null;\n\t        return this;\n\t    };\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    // THE BUFFERS\n\t    ///////////////////////////////////////////////////////////////////////////\n\t    //Noise buffer stats\n\t    var bufferLength = 44100 * 5;\n\t    var channels = 2;\n\t    /**\n\t\t *\tthe noise arrays. only generated once on init\n\t\t *  @static\n\t\t *  @private\n\t\t *  @type {Array}\n\t\t *  borrowed heavily from https://github.com/zacharydenton/noise.js \n\t\t *  (c) 2013 Zach Denton (MIT)\n\t\t */\n\t    var _noiseArrays = {\n\t        'pink': function () {\n\t            var buffer = [];\n\t            for (var channelNum = 0; channelNum < channels; channelNum++) {\n\t                var channel = new Float32Array(bufferLength);\n\t                buffer[channelNum] = channel;\n\t                var b0, b1, b2, b3, b4, b5, b6;\n\t                b0 = b1 = b2 = b3 = b4 = b5 = b6 = 0;\n\t                for (var i = 0; i < bufferLength; i++) {\n\t                    var white = Math.random() * 2 - 1;\n\t                    b0 = 0.99886 * b0 + white * 0.0555179;\n\t                    b1 = 0.99332 * b1 + white * 0.0750759;\n\t                    b2 = 0.969 * b2 + white * 0.153852;\n\t                    b3 = 0.8665 * b3 + white * 0.3104856;\n\t                    b4 = 0.55 * b4 + white * 0.5329522;\n\t                    b5 = -0.7616 * b5 - white * 0.016898;\n\t                    channel[i] = b0 + b1 + b2 + b3 + b4 + b5 + b6 + white * 0.5362;\n\t                    channel[i] *= 0.11;\n\t                    // (roughly) compensate for gain\n\t                    b6 = white * 0.115926;\n\t                }\n\t            }\n\t            return buffer;\n\t        }(),\n\t        'brown': function () {\n\t            var buffer = [];\n\t            for (var channelNum = 0; channelNum < channels; channelNum++) {\n\t                var channel = new Float32Array(bufferLength);\n\t                buffer[channelNum] = channel;\n\t                var lastOut = 0;\n\t                for (var i = 0; i < bufferLength; i++) {\n\t                    var white = Math.random() * 2 - 1;\n\t                    channel[i] = (lastOut + 0.02 * white) / 1.02;\n\t                    lastOut = channel[i];\n\t                    channel[i] *= 3.5;    // (roughly) compensate for gain\n\t                }\n\t            }\n\t            return buffer;\n\t        }(),\n\t        'white': function () {\n\t            var buffer = [];\n\t            for (var channelNum = 0; channelNum < channels; channelNum++) {\n\t                var channel = new Float32Array(bufferLength);\n\t                buffer[channelNum] = channel;\n\t                for (var i = 0; i < bufferLength; i++) {\n\t                    channel[i] = Math.random() * 2 - 1;\n\t                }\n\t            }\n\t            return buffer;\n\t        }()\n\t    };\n\t    /**\n\t\t *\tstatic noise buffers\n\t\t *  @static\n\t\t *  @private\n\t\t *  @type {Tone.Buffer}\n\t\t */\n\t    var _noiseBuffers = {};\n\t    //create the Tone.Buffers\n\t    function createBuffers() {\n\t        for (var type in _noiseArrays) {\n\t            _noiseBuffers[type] = new Tone.Buffer().fromArray(_noiseArrays[type]);\n\t        }\n\t    }\n\t    createBuffers();\n\t    Tone.Context.on('init', createBuffers);\n\t    return Tone.Noise;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.NoiseSynth is composed of a noise generator (Tone.Noise), one filter (Tone.Filter), \n\t\t *          and two envelopes (Tone.Envelop). One envelope controls the amplitude\n\t\t *          of the noise and the other is controls the cutoff frequency of the filter. \n\t\t *          <img src=\"https://docs.google.com/drawings/d/1rqzuX9rBlhT50MRvD2TKml9bnZhcZmzXF1rf_o7vdnE/pub?w=918&h=242\">\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Instrument}\n\t\t *  @param {Object} [options] the options available for the synth \n\t\t *                          see defaults below\n\t\t * @example\n\t\t * var noiseSynth = new Tone.NoiseSynth().toMaster();\n\t\t * noiseSynth.triggerAttackRelease(\"8n\");\n\t\t */\n\t    Tone.NoiseSynth = function (options) {\n\t        //get the defaults\n\t        options = this.defaultArg(options, Tone.NoiseSynth.defaults);\n\t        Tone.Instrument.call(this, options);\n\t        /**\n\t\t\t *  The noise source.\n\t\t\t *  @type {Tone.Noise}\n\t\t\t *  @example\n\t\t\t * noiseSynth.set(\"noise.type\", \"brown\");\n\t\t\t */\n\t        this.noise = new Tone.Noise();\n\t        /**\n\t\t\t *  The amplitude envelope. \n\t\t\t *  @type {Tone.AmplitudeEnvelope}\n\t\t\t */\n\t        this.envelope = new Tone.AmplitudeEnvelope(options.envelope);\n\t        //connect the noise to the output\n\t        this.noise.chain(this.envelope, this.output);\n\t        //start the noise\n\t        this.noise.start();\n\t        this._readOnly([\n\t            'noise',\n\t            'envelope'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.NoiseSynth, Tone.Instrument);\n\t    /**\n\t\t *  @const\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.NoiseSynth.defaults = {\n\t        'noise': { 'type': 'white' },\n\t        'envelope': {\n\t            'attack': 0.005,\n\t            'decay': 0.1,\n\t            'sustain': 0\n\t        }\n\t    };\n\t    /**\n\t\t *  Start the attack portion of the envelopes. Unlike other \n\t\t *  instruments, Tone.NoiseSynth doesn't have a note. \n\t\t *  @param {Time} [time=now] the time the attack should start\n\t\t *  @param {number} [velocity=1] the velocity of the note (0-1)\n\t\t *  @returns {Tone.NoiseSynth} this\n\t\t *  @example\n\t\t * noiseSynth.triggerAttack();\n\t\t */\n\t    Tone.NoiseSynth.prototype.triggerAttack = function (time, velocity) {\n\t        //the envelopes\n\t        this.envelope.triggerAttack(time, velocity);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Start the release portion of the envelopes.\n\t\t *  @param {Time} [time=now] the time the release should start\n\t\t *  @returns {Tone.NoiseSynth} this\n\t\t */\n\t    Tone.NoiseSynth.prototype.triggerRelease = function (time) {\n\t        this.envelope.triggerRelease(time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Trigger the attack and then the release. \n\t\t *  @param  {Time} duration the duration of the note\n\t\t *  @param  {Time} [time=now]     the time of the attack\n\t\t *  @param  {number} [velocity=1] the velocity\n\t\t *  @returns {Tone.NoiseSynth} this\n\t\t */\n\t    Tone.NoiseSynth.prototype.triggerAttackRelease = function (duration, time, velocity) {\n\t        time = this.toSeconds(time);\n\t        duration = this.toSeconds(duration);\n\t        this.triggerAttack(time, velocity);\n\t        this.triggerRelease(time + duration);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Clean up. \n\t\t *  @returns {Tone.NoiseSynth} this\n\t\t */\n\t    Tone.NoiseSynth.prototype.dispose = function () {\n\t        Tone.Instrument.prototype.dispose.call(this);\n\t        this._writable([\n\t            'noise',\n\t            'envelope'\n\t        ]);\n\t        this.noise.dispose();\n\t        this.noise = null;\n\t        this.envelope.dispose();\n\t        this.envelope = null;\n\t        return this;\n\t    };\n\t    return Tone.NoiseSynth;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Karplus-String string synthesis. Often out of tune. \n\t\t *         Will change when the AudioWorkerNode is available across\n\t\t *         browsers. \n\t\t *  \n\t\t *  @constructor\n\t\t *  @extends {Tone.Instrument}\n\t\t *  @param {Object} [options] see the defaults\n\t\t *  @example\n\t\t * var plucky = new Tone.PluckSynth().toMaster();\n\t\t * plucky.triggerAttack(\"C4\");\n\t\t */\n\t    Tone.PluckSynth = function (options) {\n\t        options = this.defaultArg(options, Tone.PluckSynth.defaults);\n\t        Tone.Instrument.call(this, options);\n\t        /**\n\t\t\t *  @type {Tone.Noise}\n\t\t\t *  @private\n\t\t\t */\n\t        this._noise = new Tone.Noise('pink');\n\t        /**\n\t\t\t *  The amount of noise at the attack. \n\t\t\t *  Nominal range of [0.1, 20]\n\t\t\t *  @type {number}\n\t\t\t */\n\t        this.attackNoise = options.attackNoise;\n\t        /**\n\t\t\t *  the LFCF\n\t\t\t *  @type {Tone.LowpassCombFilter}\n\t\t\t *  @private\n\t\t\t */\n\t        this._lfcf = new Tone.LowpassCombFilter({\n\t            'resonance': options.resonance,\n\t            'dampening': options.dampening\n\t        });\n\t        /**\n\t\t\t *  The resonance control. \n\t\t\t *  @type {NormalRange}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.resonance = this._lfcf.resonance;\n\t        /**\n\t\t\t *  The dampening control. i.e. the lowpass filter frequency of the comb filter\n\t\t\t *  @type {Frequency}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.dampening = this._lfcf.dampening;\n\t        //connections\n\t        this._noise.connect(this._lfcf);\n\t        this._lfcf.connect(this.output);\n\t        this._readOnly([\n\t            'resonance',\n\t            'dampening'\n\t        ]);\n\t    };\n\t    Tone.extend(Tone.PluckSynth, Tone.Instrument);\n\t    /**\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.PluckSynth.defaults = {\n\t        'attackNoise': 1,\n\t        'dampening': 4000,\n\t        'resonance': 0.9\n\t    };\n\t    /**\n\t\t *  Trigger the note. \n\t\t *  @param {Frequency} note The note to trigger.\n\t\t *  @param {Time} [time=now] When the note should be triggered.\n\t\t *  @returns {Tone.PluckSynth} this\n\t\t */\n\t    Tone.PluckSynth.prototype.triggerAttack = function (note, time) {\n\t        note = this.toFrequency(note);\n\t        time = this.toSeconds(time);\n\t        var delayAmount = 1 / note;\n\t        this._lfcf.delayTime.setValueAtTime(delayAmount, time);\n\t        this._noise.start(time);\n\t        this._noise.stop(time + delayAmount * this.attackNoise);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Clean up. \n\t\t *  @returns {Tone.PluckSynth} this\n\t\t */\n\t    Tone.PluckSynth.prototype.dispose = function () {\n\t        Tone.Instrument.prototype.dispose.call(this);\n\t        this._noise.dispose();\n\t        this._lfcf.dispose();\n\t        this._noise = null;\n\t        this._lfcf = null;\n\t        this._writable([\n\t            'resonance',\n\t            'dampening'\n\t        ]);\n\t        this.dampening = null;\n\t        this.resonance = null;\n\t        return this;\n\t    };\n\t    return Tone.PluckSynth;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.PolySynth handles voice creation and allocation for any\n\t\t *          instruments passed in as the second paramter. PolySynth is \n\t\t *          not a synthesizer by itself, it merely manages voices of \n\t\t *          one of the other types of synths, allowing any of the \n\t\t *          monophonic synthesizers to be polyphonic. \n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Instrument}\n\t\t *  @param {number|Object} [polyphony=4] The number of voices to create\n\t\t *  @param {function} [voice=Tone.Synth] The constructor of the voices\n\t\t *                                            uses Tone.Synth by default. \n\t\t *  @example\n\t\t * //a polysynth composed of 6 Voices of Synth\n\t\t * var synth = new Tone.PolySynth(6, Tone.Synth).toMaster();\n\t\t * //set the attributes using the set interface\n\t\t * synth.set(\"detune\", -1200);\n\t\t * //play a chord\n\t\t * synth.triggerAttackRelease([\"C4\", \"E4\", \"A4\"], \"4n\");\n\t\t */\n\t    Tone.PolySynth = function () {\n\t        Tone.Instrument.call(this);\n\t        var options = this.optionsObject(arguments, [\n\t            'polyphony',\n\t            'voice'\n\t        ], Tone.PolySynth.defaults);\n\t        options = this.defaultArg(options, Tone.Instrument.defaults);\n\t        //max polyphony\n\t        options.polyphony = Math.min(Tone.PolySynth.MAX_POLYPHONY, options.polyphony);\n\t        /**\n\t\t\t *  the array of voices\n\t\t\t *  @type {Array}\n\t\t\t */\n\t        this.voices = new Array(options.polyphony);\n\t        /**\n\t\t\t *  The queue of voices with data about last trigger\n\t\t\t *  and the triggered note\n\t\t\t *  @private\n\t\t\t *  @type {Array}\n\t\t\t */\n\t        this._triggers = new Array(options.polyphony);\n\t        /**\n\t\t\t *  The detune in cents\n\t\t\t *  @type {Cents}\n\t\t\t *  @signal\n\t\t\t */\n\t        this.detune = new Tone.Signal(options.detune, Tone.Type.Cents);\n\t        this._readOnly('detune');\n\t        //create the voices\n\t        for (var i = 0; i < options.polyphony; i++) {\n\t            var v = new options.voice(arguments[2], arguments[3]);\n\t            this.voices[i] = v;\n\t            v.connect(this.output);\n\t            if (v.hasOwnProperty('detune')) {\n\t                this.detune.connect(v.detune);\n\t            }\n\t            this._triggers[i] = {\n\t                release: -1,\n\t                note: null,\n\t                voice: v\n\t            };\n\t        }\n\t        //set the volume initially\n\t        this.volume.value = options.volume;\n\t    };\n\t    Tone.extend(Tone.PolySynth, Tone.Instrument);\n\t    /**\n\t\t *  the defaults\n\t\t *  @const\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.PolySynth.defaults = {\n\t        'polyphony': 4,\n\t        'volume': 0,\n\t        'detune': 0,\n\t        'voice': Tone.Synth\n\t    };\n\t    /**\n\t\t *  Trigger the attack portion of the note\n\t\t *  @param  {Frequency|Array} notes The notes to play. Accepts a single\n\t\t *                                  Frequency or an array of frequencies.\n\t\t *  @param  {Time} [time=now]  The start time of the note.\n\t\t *  @param {number} [velocity=1] The velocity of the note.\n\t\t *  @returns {Tone.PolySynth} this\n\t\t *  @example\n\t\t * //trigger a chord immediately with a velocity of 0.2\n\t\t * poly.triggerAttack([\"Ab3\", \"C4\", \"F5\"], undefined, 0.2);\n\t\t */\n\t    Tone.PolySynth.prototype.triggerAttack = function (notes, time, velocity) {\n\t        if (!Array.isArray(notes)) {\n\t            notes = [notes];\n\t        }\n\t        time = this.toSeconds(time);\n\t        for (var i = 0; i < notes.length; i++) {\n\t            var val = notes[i];\n\t            //trigger the oldest voice\n\t            var oldest = this._triggers[0];\n\t            var oldestIndex = 0;\n\t            for (var j = 1; j < this._triggers.length; j++) {\n\t                if (this._triggers[j].release < oldest.release) {\n\t                    oldest = this._triggers[j];\n\t                    oldestIndex = j;\n\t                }\n\t            }\n\t            oldest.release = Infinity;\n\t            oldest.note = JSON.stringify(val);\n\t            oldest.voice.triggerAttack(val, time, velocity);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Trigger the attack and release after the specified duration\n\t\t *  \n\t\t *  @param  {Frequency|Array} notes The notes to play. Accepts a single\n\t\t *                                  Frequency or an array of frequencies.\n\t\t *  @param  {Time} duration the duration of the note\n\t\t *  @param  {Time} [time=now]     if no time is given, defaults to now\n\t\t *  @param  {number} [velocity=1] the velocity of the attack (0-1)\n\t\t *  @returns {Tone.PolySynth} this\n\t\t *  @example\n\t\t * //trigger a chord for a duration of a half note \n\t\t * poly.triggerAttackRelease([\"Eb3\", \"G4\", \"C5\"], \"2n\");\n\t\t *  @example\n\t\t * //can pass in an array of durations as well\n\t\t * poly.triggerAttackRelease([\"Eb3\", \"G4\", \"C5\"], [\"2n\", \"4n\", \"4n\"]);\n\t\t */\n\t    Tone.PolySynth.prototype.triggerAttackRelease = function (notes, duration, time, velocity) {\n\t        time = this.toSeconds(time);\n\t        this.triggerAttack(notes, time, velocity);\n\t        if (this.isArray(duration) && this.isArray(notes)) {\n\t            for (var i = 0; i < notes.length; i++) {\n\t                var d = duration[Math.min(i, duration.length - 1)];\n\t                this.triggerRelease(notes[i], time + this.toSeconds(d));\n\t            }\n\t        } else {\n\t            this.triggerRelease(notes, time + this.toSeconds(duration));\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Trigger the release of the note. Unlike monophonic instruments, \n\t\t *  a note (or array of notes) needs to be passed in as the first argument.\n\t\t *  @param  {Frequency|Array} notes The notes to play. Accepts a single\n\t\t *                                  Frequency or an array of frequencies.\n\t\t *  @param  {Time} [time=now]  When the release will be triggered. \n\t\t *  @returns {Tone.PolySynth} this\n\t\t *  @example\n\t\t * poly.triggerRelease([\"Ab3\", \"C4\", \"F5\"], \"+2n\");\n\t\t */\n\t    Tone.PolySynth.prototype.triggerRelease = function (notes, time) {\n\t        if (!Array.isArray(notes)) {\n\t            notes = [notes];\n\t        }\n\t        time = this.toSeconds(time);\n\t        for (var i = 0; i < notes.length; i++) {\n\t            //get the voice\n\t            var stringified = JSON.stringify(notes[i]);\n\t            for (var v = 0; v < this._triggers.length; v++) {\n\t                var desc = this._triggers[v];\n\t                if (desc.note === stringified && desc.release > time) {\n\t                    desc.voice.triggerRelease(time);\n\t                    desc.release = time;\n\t                }\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Set a member/attribute of the voices. \n\t\t *  @param {Object|string} params\n\t\t *  @param {number=} value\n\t\t *  @param {Time=} rampTime\n\t\t *  @returns {Tone.PolySynth} this\n\t\t *  @example\n\t\t * poly.set({\n\t\t * \t\"filter\" : {\n\t\t * \t\t\"type\" : \"highpass\"\n\t\t * \t},\n\t\t * \t\"envelope\" : {\n\t\t * \t\t\"attack\" : 0.25\n\t\t * \t}\n\t\t * });\n\t\t */\n\t    Tone.PolySynth.prototype.set = function (params, value, rampTime) {\n\t        for (var i = 0; i < this.voices.length; i++) {\n\t            this.voices[i].set(params, value, rampTime);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Get the synth's attributes. Given no arguments get\n\t\t *  will return all available object properties and their corresponding\n\t\t *  values. Pass in a single attribute to retrieve or an array\n\t\t *  of attributes. The attribute strings can also include a \".\"\n\t\t *  to access deeper properties.\n\t\t *  @param {Array=} params the parameters to get, otherwise will return \n\t\t *  \t\t\t\t\t   all available.\n\t\t */\n\t    Tone.PolySynth.prototype.get = function (params) {\n\t        return this.voices[0].get(params);\n\t    };\n\t    /**\n\t\t *  Trigger the release portion of all the currently active voices.\n\t\t *  @param {Time} [time=now] When the notes should be released.\n\t\t *  @return {Tone.PolySynth} this\n\t\t */\n\t    Tone.PolySynth.prototype.releaseAll = function (time) {\n\t        time = this.toSeconds(time);\n\t        for (var i = 0; i < this._triggers.length; i++) {\n\t            var desc = this._triggers[i];\n\t            if (desc.release > time) {\n\t                desc.release = time;\n\t                desc.voice.triggerRelease(time);\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.PolySynth} this\n\t\t */\n\t    Tone.PolySynth.prototype.dispose = function () {\n\t        Tone.Instrument.prototype.dispose.call(this);\n\t        for (var i = 0; i < this.voices.length; i++) {\n\t            this.voices[i].dispose();\n\t            this.voices[i] = null;\n\t        }\n\t        this._writable('detune');\n\t        this.detune.dispose();\n\t        this.detune = null;\n\t        this.voices = null;\n\t        this._triggers = null;\n\t        return this;\n\t    };\n\t    /**\n\t\t *  The maximum number of notes that can be allocated \n\t\t *  to a polysynth. \n\t\t *  @type  {Number}\n\t\t *  @static\n\t\t */\n\t    Tone.PolySynth.MAX_POLYPHONY = 20;\n\t    return Tone.PolySynth;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.Player is an audio file player with start, loop, and stop functions.\n\t\t *  \n\t\t *  @constructor\n\t\t *  @extends {Tone.Source} \n\t\t *  @param {string|AudioBuffer} url Either the AudioBuffer or the url from\n\t\t *                                  which to load the AudioBuffer\n\t\t *  @param {function=} onload The function to invoke when the buffer is loaded. \n\t\t *                            Recommended to use Tone.Buffer.on('load') instead.\n\t\t *  @example\n\t\t * var player = new Tone.Player(\"./path/to/sample.mp3\").toMaster();\n\t\t * //play as soon as the buffer is loaded\n\t\t * player.autostart = true;\n\t\t */\n\t    Tone.Player = function (url) {\n\t        var options;\n\t        if (url instanceof Tone.Buffer) {\n\t            url = url.get();\n\t            options = Tone.Player.defaults;\n\t        } else {\n\t            options = this.optionsObject(arguments, [\n\t                'url',\n\t                'onload'\n\t            ], Tone.Player.defaults);\n\t        }\n\t        Tone.Source.call(this, options);\n\t        /**\n\t\t\t *  @private\n\t\t\t *  @type {AudioBufferSourceNode}\n\t\t\t */\n\t        this._source = null;\n\t        /**\n\t\t\t *  If the file should play as soon\n\t\t\t *  as the buffer is loaded. \n\t\t\t *  @type {boolean}\n\t\t\t *  @example\n\t\t\t * //will play as soon as it's loaded\n\t\t\t * var player = new Tone.Player({\n\t\t\t * \t\"url\" : \"./path/to/sample.mp3\",\n\t\t\t * \t\"autostart\" : true,\n\t\t\t * }).toMaster();\n\t\t\t */\n\t        this.autostart = options.autostart;\n\t        /**\n\t\t\t *  the buffer\n\t\t\t *  @private\n\t\t\t *  @type {Tone.Buffer}\n\t\t\t */\n\t        this._buffer = new Tone.Buffer({\n\t            'url': options.url,\n\t            'onload': this._onload.bind(this, options.onload),\n\t            'reverse': options.reverse\n\t        });\n\t        if (url instanceof AudioBuffer) {\n\t            this._buffer.set(url);\n\t        }\n\t        /**\n\t\t\t *  if the buffer should loop once it's over\n\t\t\t *  @type {boolean}\n\t\t\t *  @private\n\t\t\t */\n\t        this._loop = options.loop;\n\t        /**\n\t\t\t *  if 'loop' is true, the loop will start at this position\n\t\t\t *  @type {Time}\n\t\t\t *  @private\n\t\t\t */\n\t        this._loopStart = options.loopStart;\n\t        /**\n\t\t\t *  if 'loop' is true, the loop will end at this position\n\t\t\t *  @type {Time}\n\t\t\t *  @private\n\t\t\t */\n\t        this._loopEnd = options.loopEnd;\n\t        /**\n\t\t\t *  the playback rate\n\t\t\t *  @private\n\t\t\t *  @type {number}\n\t\t\t */\n\t        this._playbackRate = options.playbackRate;\n\t        /**\n\t\t\t *  Enabling retrigger will allow a player to be restarted\n\t\t\t *  before the the previous 'start' is done playing. Otherwise, \n\t\t\t *  successive calls to Tone.Player.start will only start\n\t\t\t *  the sample if it had played all the way through. \n\t\t\t *  @type {boolean}\n\t\t\t */\n\t        this.retrigger = options.retrigger;\n\t    };\n\t    Tone.extend(Tone.Player, Tone.Source);\n\t    /**\n\t\t *  the default parameters\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.Player.defaults = {\n\t        'onload': Tone.noOp,\n\t        'playbackRate': 1,\n\t        'loop': false,\n\t        'autostart': false,\n\t        'loopStart': 0,\n\t        'loopEnd': 0,\n\t        'retrigger': false,\n\t        'reverse': false\n\t    };\n\t    /**\n\t\t *  Load the audio file as an audio buffer.\n\t\t *  Decodes the audio asynchronously and invokes\n\t\t *  the callback once the audio buffer loads. \n\t\t *  Note: this does not need to be called if a url\n\t\t *  was passed in to the constructor. Only use this\n\t\t *  if you want to manually load a new url. \n\t\t * @param {string} url The url of the buffer to load.\n\t\t *                     Filetype support depends on the\n\t\t *                     browser.\n\t\t *  @param  {function=} callback The function to invoke once\n\t\t *                               the sample is loaded.\n\t\t *  @returns {Promise}\n\t\t */\n\t    Tone.Player.prototype.load = function (url, callback) {\n\t        return this._buffer.load(url, this._onload.bind(this, callback));\n\t    };\n\t    /**\n\t\t * Internal callback when the buffer is loaded.\n\t\t * @private\n\t\t */\n\t    Tone.Player.prototype._onload = function (callback) {\n\t        callback = this.defaultArg(callback, Tone.noOp);\n\t        callback(this);\n\t        if (this.autostart) {\n\t            this.start();\n\t        }\n\t    };\n\t    /**\n\t\t *  Play the buffer at the given startTime. Optionally add an offset\n\t\t *  and/or duration which will play the buffer from a position\n\t\t *  within the buffer for the given duration. \n\t\t *  \n\t\t *  @param  {Time} [startTime=now] When the player should start.\n\t\t *  @param  {Time} [offset=0] The offset from the beginning of the sample\n\t\t *                                 to start at. \n\t\t *  @param  {Time=} duration How long the sample should play. If no duration\n\t\t *                                is given, it will default to the full length \n\t\t *                                of the sample (minus any offset)\n\t\t *  @returns {Tone.Player} this\n\t\t *  @memberOf Tone.Player#\n\t\t *  @method start\n\t\t *  @name start\n\t\t */\n\t    /**\n\t\t *  Internal start method\n\t\t *  @private\n\t\t */\n\t    Tone.Player.prototype._start = function (startTime, offset, duration) {\n\t        if (this._buffer.loaded) {\n\t            //if it's a loop the default offset is the loopstart point\n\t            if (this._loop) {\n\t                offset = this.defaultArg(offset, this._loopStart);\n\t            } else {\n\t                //otherwise the default offset is 0\n\t                offset = this.defaultArg(offset, 0);\n\t            }\n\t            offset = this.toSeconds(offset);\n\t            //make sure it has a positive duration\n\t            duration = this.defaultArg(duration, Math.max(this._buffer.duration - offset, 0));\n\t            duration = this.toSeconds(duration);\n\t            //the values in seconds\n\t            startTime = this.toSeconds(startTime);\n\t            //make the source\n\t            this._source = this.context.createBufferSource();\n\t            this._source.buffer = this._buffer.get();\n\t            //set the looping properties\n\t            if (this._loop) {\n\t                this._source.loop = this._loop;\n\t                this._source.loopStart = this.toSeconds(this._loopStart);\n\t                this._source.loopEnd = this.toSeconds(this._loopEnd);\n\t            } else if (!this._synced) {\n\t                //if it's not looping, set the state change at the end of the sample\n\t                this._state.setStateAtTime(Tone.State.Stopped, startTime + duration);\n\t            }\n\t            //and other properties\n\t            this._source.playbackRate.value = this._playbackRate;\n\t            this._source.connect(this.output);\n\t            //start it\n\t            if (this._loop) {\n\t                //modify the offset if it's greater than the loop time\n\t                var loopEnd = this._source.loopEnd || this._buffer.duration;\n\t                var loopStart = this._source.loopStart;\n\t                var loopDuration = loopEnd - loopStart;\n\t                if (offset > loopEnd) {\n\t                    //move the offset back\n\t                    while (offset > loopEnd) {\n\t                        offset -= loopDuration;\n\t                    }\n\t                }\n\t                this._source.start(startTime, offset);\n\t            } else {\n\t                this._source.start(startTime, offset, duration);\n\t            }\n\t        } else {\n\t            throw Error('Tone.Player: tried to start Player before the buffer was loaded');\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Stop playback.\n\t\t *  @private\n\t\t *  @param  {Time} [time=now]\n\t\t *  @returns {Tone.Player} this\n\t\t */\n\t    Tone.Player.prototype._stop = function (time) {\n\t        if (this._source) {\n\t            this._source.stop(this.toSeconds(time));\n\t            this._source = null;\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Seek to a specific time in the player's buffer. If the \n\t\t *  source is no longer playing at that time, it will stop.\n\t\t *  If you seek to a time that \n\t\t *  @param {Time} offset The time to seek to.\n\t\t *  @param {Time=} time The time for the seek event to occur.\n\t\t *  @return {Tone.Player} this\n\t\t *  @example\n\t\t * source.start(0.2);\n\t\t * source.stop(0.4);\n\t\t */\n\t    Tone.Player.prototype.seek = function (offset, time) {\n\t        time = this.toSeconds(time);\n\t        if (this._state.getValueAtTime(time) === Tone.State.Started) {\n\t            offset = this.toSeconds(offset);\n\t            // if it's currently playing, stop it\n\t            this._stop(time);\n\t            //restart it at the given time\n\t            this._start(time, offset);\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Set the loop start and end. Will only loop if loop is \n\t\t *  set to true. \n\t\t *  @param {Time} loopStart The loop end time\n\t\t *  @param {Time} loopEnd The loop end time\n\t\t *  @returns {Tone.Player} this\n\t\t *  @example\n\t\t * //loop 0.1 seconds of the file. \n\t\t * player.setLoopPoints(0.2, 0.3);\n\t\t * player.loop = true;\n\t\t */\n\t    Tone.Player.prototype.setLoopPoints = function (loopStart, loopEnd) {\n\t        this.loopStart = loopStart;\n\t        this.loopEnd = loopEnd;\n\t        return this;\n\t    };\n\t    /**\n\t\t * If loop is true, the loop will start at this position. \n\t\t * @memberOf Tone.Player#\n\t\t * @type {Time}\n\t\t * @name loopStart\n\t\t */\n\t    Object.defineProperty(Tone.Player.prototype, 'loopStart', {\n\t        get: function () {\n\t            return this._loopStart;\n\t        },\n\t        set: function (loopStart) {\n\t            this._loopStart = loopStart;\n\t            if (this._source) {\n\t                this._source.loopStart = this.toSeconds(loopStart);\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * If loop is true, the loop will end at this position.\n\t\t * @memberOf Tone.Player#\n\t\t * @type {Time}\n\t\t * @name loopEnd\n\t\t */\n\t    Object.defineProperty(Tone.Player.prototype, 'loopEnd', {\n\t        get: function () {\n\t            return this._loopEnd;\n\t        },\n\t        set: function (loopEnd) {\n\t            this._loopEnd = loopEnd;\n\t            if (this._source) {\n\t                this._source.loopEnd = this.toSeconds(loopEnd);\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * The audio buffer belonging to the player. \n\t\t * @memberOf Tone.Player#\n\t\t * @type {Tone.Buffer}\n\t\t * @name buffer\n\t\t */\n\t    Object.defineProperty(Tone.Player.prototype, 'buffer', {\n\t        get: function () {\n\t            return this._buffer;\n\t        },\n\t        set: function (buffer) {\n\t            this._buffer.set(buffer);\n\t        }\n\t    });\n\t    /**\n\t\t * If the buffer should loop once it's over. \n\t\t * @memberOf Tone.Player#\n\t\t * @type {boolean}\n\t\t * @name loop\n\t\t */\n\t    Object.defineProperty(Tone.Player.prototype, 'loop', {\n\t        get: function () {\n\t            return this._loop;\n\t        },\n\t        set: function (loop) {\n\t            this._loop = loop;\n\t            if (this._source) {\n\t                this._source.loop = loop;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * The playback speed. 1 is normal speed. This is not a signal because\n\t\t * Safari and iOS currently don't support playbackRate as a signal.\n\t\t * @memberOf Tone.Player#\n\t\t * @type {number}\n\t\t * @name playbackRate\n\t\t */\n\t    Object.defineProperty(Tone.Player.prototype, 'playbackRate', {\n\t        get: function () {\n\t            return this._playbackRate;\n\t        },\n\t        set: function (rate) {\n\t            this._playbackRate = rate;\n\t            if (this._source) {\n\t                this._source.playbackRate.value = rate;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * The direction the buffer should play in\n\t\t * @memberOf Tone.Player#\n\t\t * @type {boolean}\n\t\t * @name reverse\n\t\t */\n\t    Object.defineProperty(Tone.Player.prototype, 'reverse', {\n\t        get: function () {\n\t            return this._buffer.reverse;\n\t        },\n\t        set: function (rev) {\n\t            this._buffer.reverse = rev;\n\t        }\n\t    });\n\t    /**\n\t\t *  Dispose and disconnect.\n\t\t *  @return {Tone.Player} this\n\t\t */\n\t    Tone.Player.prototype.dispose = function () {\n\t        Tone.Source.prototype.dispose.call(this);\n\t        if (this._source !== null) {\n\t            this._source.disconnect();\n\t            this._source = null;\n\t        }\n\t        this._buffer.dispose();\n\t        this._buffer = null;\n\t        return this;\n\t    };\n\t    return Tone.Player;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Sampler wraps Tone.Player in an AmplitudeEnvelope.\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Instrument}\n\t\t *  @param {String} url the url of the audio file\n\t\t *  @param {Function=} onload The callback to invoke when the sample is loaded.\n\t\t *  @example\n\t\t * var sampler = new Sampler(\"./audio/casio/A1.mp3\", function(){\n\t\t * \t//repitch the sample down a half step\n\t\t * \tsampler.triggerAttack(-1);\n\t\t * }).toMaster();\n\t\t */\n\t    Tone.Sampler = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'url',\n\t            'onload'\n\t        ], Tone.Sampler.defaults);\n\t        Tone.Instrument.call(this, options);\n\t        /**\n\t\t\t *  The sample player.\n\t\t\t *  @type {Tone.Player}\n\t\t\t */\n\t        this.player = new Tone.Player(options.url, options.onload);\n\t        this.player.retrigger = true;\n\t        /**\n\t\t\t *  The amplitude envelope. \n\t\t\t *  @type {Tone.AmplitudeEnvelope}\n\t\t\t */\n\t        this.envelope = new Tone.AmplitudeEnvelope(options.envelope);\n\t        this.player.chain(this.envelope, this.output);\n\t        this._readOnly([\n\t            'player',\n\t            'envelope'\n\t        ]);\n\t        this.loop = options.loop;\n\t        this.reverse = options.reverse;\n\t    };\n\t    Tone.extend(Tone.Sampler, Tone.Instrument);\n\t    /**\n\t\t *  the default parameters\n\t\t *  @static\n\t\t */\n\t    Tone.Sampler.defaults = {\n\t        'onload': Tone.noOp,\n\t        'loop': false,\n\t        'reverse': false,\n\t        'envelope': {\n\t            'attack': 0.001,\n\t            'decay': 0,\n\t            'sustain': 1,\n\t            'release': 0.1\n\t        }\n\t    };\n\t    /**\n\t\t *  Trigger the start of the sample. \n\t\t *  @param {Interval} [pitch=0] The amount the sample should\n\t\t *                              be repitched. \n\t\t *  @param {Time} [time=now] The time when the sample should start\n\t\t *  @param {NormalRange} [velocity=1] The velocity of the note\n\t\t *  @returns {Tone.Sampler} this\n\t\t *  @example\n\t\t * sampler.triggerAttack(0, \"+0.1\", 0.5);\n\t\t */\n\t    Tone.Sampler.prototype.triggerAttack = function (pitch, time, velocity) {\n\t        time = this.toSeconds(time);\n\t        pitch = this.defaultArg(pitch, 0);\n\t        this.player.playbackRate = this.intervalToFrequencyRatio(pitch);\n\t        this.player.start(time);\n\t        this.envelope.triggerAttack(time, velocity);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Start the release portion of the sample. Will stop the sample once the \n\t\t *  envelope has fully released. \n\t\t *  \n\t\t *  @param {Time} [time=now] The time when the note should release\n\t\t *  @returns {Tone.Sampler} this\n\t\t *  @example\n\t\t * sampler.triggerRelease();\n\t\t */\n\t    Tone.Sampler.prototype.triggerRelease = function (time) {\n\t        time = this.toSeconds(time);\n\t        this.envelope.triggerRelease(time);\n\t        this.player.stop(this.toSeconds(this.envelope.release) + time);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Trigger the attack and then the release after the duration. \n\t\t *  @param  {Interval} interval     The interval in half-steps that the\n\t\t *                                  sample should be pitch shifted.\n\t\t *  @param  {Time} duration How long the note should be held for before\n\t\t *                          triggering the release.\n\t\t *  @param {Time} [time=now]  When the note should be triggered.\n\t\t *  @param  {NormalRange} [velocity=1] The velocity the note should be triggered at.\n\t\t *  @returns {Tone.Sampler} this\n\t\t *  @example\n\t\t * //trigger the unpitched note for the duration of an 8th note\n\t\t * synth.triggerAttackRelease(0, \"8n\");\n\t\t *  @memberOf Tone.Sampler#\n\t\t *  @name triggerAttackRelease\n\t\t *  @method triggerAttackRelease\n\t\t */\n\t    /**\n\t\t * If the output sample should loop or not.\n\t\t * @memberOf Tone.Sampler#\n\t\t * @type {number|string}\n\t\t * @name loop\n\t\t */\n\t    Object.defineProperty(Tone.Sampler.prototype, 'loop', {\n\t        get: function () {\n\t            return this.player.loop;\n\t        },\n\t        set: function (loop) {\n\t            this.player.loop = loop;\n\t        }\n\t    });\n\t    /**\n\t\t * The direction the buffer should play in\n\t\t * @memberOf Tone.Sampler#\n\t\t * @type {boolean}\n\t\t * @name reverse\n\t\t */\n\t    Object.defineProperty(Tone.Sampler.prototype, 'reverse', {\n\t        get: function () {\n\t            return this.player.reverse;\n\t        },\n\t        set: function (rev) {\n\t            this.player.reverse = rev;\n\t        }\n\t    });\n\t    /**\n\t\t * The buffer to play.\n\t\t * @memberOf Tone.Sampler#\n\t\t * @type {Tone.Buffer}\n\t\t * @name buffer\n\t\t */\n\t    Object.defineProperty(Tone.Sampler.prototype, 'buffer', {\n\t        get: function () {\n\t            return this.player.buffer;\n\t        },\n\t        set: function (buff) {\n\t            this.player.buffer = buff;\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up.\n\t\t *  @returns {Tone.Sampler} this\n\t\t */\n\t    Tone.Sampler.prototype.dispose = function () {\n\t        Tone.Instrument.prototype.dispose.call(this);\n\t        this._writable([\n\t            'player',\n\t            'envelope'\n\t        ]);\n\t        this.player.dispose();\n\t        this.player = null;\n\t        this.envelope.dispose();\n\t        this.envelope = null;\n\t        return this;\n\t    };\n\t    return Tone.Sampler;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Maps a NormalRange [0, 1] to an AudioRange [-1, 1]. \n\t\t *         See also Tone.AudioToGain. \n\t\t *\n\t\t *  @extends {Tone.SignalBase}\n\t\t *  @constructor\n\t\t *  @example\n\t\t * var g2a = new Tone.GainToAudio();\n\t\t */\n\t    Tone.GainToAudio = function () {\n\t        /**\n\t\t\t *  @type {WaveShaperNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._norm = this.input = this.output = new Tone.WaveShaper(function (x) {\n\t            return Math.abs(x) * 2 - 1;\n\t        });\n\t    };\n\t    Tone.extend(Tone.GainToAudio, Tone.SignalBase);\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.GainToAudio} this\n\t\t */\n\t    Tone.GainToAudio.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._norm.dispose();\n\t        this._norm = null;\n\t        return this;\n\t    };\n\t    return Tone.GainToAudio;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class Normalize takes an input min and max and maps it linearly to NormalRange [0,1]\n\t\t *\n\t\t *  @extends {Tone.SignalBase}\n\t\t *  @constructor\n\t\t *  @param {number} inputMin the min input value\n\t\t *  @param {number} inputMax the max input value\n\t\t *  @example\n\t\t * var norm = new Tone.Normalize(2, 4);\n\t\t * var sig = new Tone.Signal(3).connect(norm);\n\t\t * //output of norm is 0.5. \n\t\t */\n\t    Tone.Normalize = function (inputMin, inputMax) {\n\t        /**\n\t\t\t *  the min input value\n\t\t\t *  @type {number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._inputMin = this.defaultArg(inputMin, 0);\n\t        /**\n\t\t\t *  the max input value\n\t\t\t *  @type {number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._inputMax = this.defaultArg(inputMax, 1);\n\t        /**\n\t\t\t *  subtract the min from the input\n\t\t\t *  @type {Tone.Add}\n\t\t\t *  @private\n\t\t\t */\n\t        this._sub = this.input = new Tone.Add(0);\n\t        /**\n\t\t\t *  divide by the difference between the input and output\n\t\t\t *  @type {Tone.Multiply}\n\t\t\t *  @private\n\t\t\t */\n\t        this._div = this.output = new Tone.Multiply(1);\n\t        this._sub.connect(this._div);\n\t        this._setRange();\n\t    };\n\t    Tone.extend(Tone.Normalize, Tone.SignalBase);\n\t    /**\n\t\t * The minimum value the input signal will reach.\n\t\t * @memberOf Tone.Normalize#\n\t\t * @type {number}\n\t\t * @name min\n\t\t */\n\t    Object.defineProperty(Tone.Normalize.prototype, 'min', {\n\t        get: function () {\n\t            return this._inputMin;\n\t        },\n\t        set: function (min) {\n\t            this._inputMin = min;\n\t            this._setRange();\n\t        }\n\t    });\n\t    /**\n\t\t * The maximum value the input signal will reach.\n\t\t * @memberOf Tone.Normalize#\n\t\t * @type {number}\n\t\t * @name max\n\t\t */\n\t    Object.defineProperty(Tone.Normalize.prototype, 'max', {\n\t        get: function () {\n\t            return this._inputMax;\n\t        },\n\t        set: function (max) {\n\t            this._inputMax = max;\n\t            this._setRange();\n\t        }\n\t    });\n\t    /**\n\t\t *  set the values\n\t\t *  @private\n\t\t */\n\t    Tone.Normalize.prototype._setRange = function () {\n\t        this._sub.value = -this._inputMin;\n\t        this._div.value = 1 / (this._inputMax - this._inputMin);\n\t    };\n\t    /**\n\t\t *  clean up\n\t\t *  @returns {Tone.Normalize} this\n\t\t */\n\t    Tone.Normalize.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._sub.dispose();\n\t        this._sub = null;\n\t        this._div.dispose();\n\t        this._div = null;\n\t        return this;\n\t    };\n\t    return Tone.Normalize;\n\t});\n\tModule(function (Tone) {\n\t    /**\n\t\t *  @class Tone.MultiPlayer is well suited for one-shots, multi-sampled instruments\n\t\t *         or any time you need to play a bunch of audio buffers. \n\t\t *  @param  {Object|Array|Tone.Buffers}  buffers  The buffers which are available\n\t\t *                                                to the MultiPlayer\n\t\t *  @param {Function} onload The callback to invoke when all of the buffers are loaded.\n\t\t *  @extends {Tone}\n\t\t *  @example\n\t\t * var multiPlayer = new MultiPlayer({\n\t\t * \t\"kick\" : \"path/to/kick.mp3\",\n\t\t * \t\"snare\" : \"path/to/snare.mp3\",\n\t\t * }, function(){\n\t\t * \tmultiPlayer.start(\"kick\");\n\t\t * });\n\t\t *  @example\n\t\t * //can also store the values in an array\n\t\t * var multiPlayer = new MultiPlayer([\"path/to/kick.mp3\", \"path/to/snare.mp3\"], \n\t\t * function(){\n\t\t * \t//if an array is passed in, the samples are referenced to by index\n\t\t * \tmultiPlayer.start(1);\n\t\t * });\n\t\t */\n\t    Tone.MultiPlayer = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'urls',\n\t            'onload'\n\t        ], Tone.MultiPlayer.defaults);\n\t        if (options.urls instanceof Tone.Buffers) {\n\t            /**\n\t\t\t\t *  All the buffers belonging to the player.\n\t\t\t\t *  @type  {Tone.Buffers}\n\t\t\t\t */\n\t            this.buffers = options.urls;\n\t        } else {\n\t            this.buffers = new Tone.Buffers(options.urls, options.onload);\n\t        }\n\t        /**\n\t\t\t *  Keeps track of the currently playing sources.\n\t\t\t *  @type  {Object}\n\t\t\t *  @private\n\t\t\t */\n\t        this._activeSources = {};\n\t        /**\n\t\t\t *  The fade in envelope which is applied\n\t\t\t *  to the beginning of the BufferSource\n\t\t\t *  @type  {Time}\n\t\t\t */\n\t        this.fadeIn = options.fadeIn;\n\t        /**\n\t\t\t *  The fade out envelope which is applied\n\t\t\t *  to the end of the BufferSource\n\t\t\t *  @type  {Time}\n\t\t\t */\n\t        this.fadeOut = options.fadeOut;\n\t        /**\n\t\t\t *  The output volume node\n\t\t\t *  @type  {Tone.Volume}\n\t\t\t *  @private\n\t\t\t */\n\t        this._volume = this.output = new Tone.Volume(options.volume);\n\t        /**\n\t\t\t * The volume of the output in decibels.\n\t\t\t * @type {Decibels}\n\t\t\t * @signal\n\t\t\t * @example\n\t\t\t * source.volume.value = -6;\n\t\t\t */\n\t        this.volume = this._volume.volume;\n\t        this._readOnly('volume');\n\t        //make the output explicitly stereo\n\t        this._volume.output.output.channelCount = 2;\n\t        this._volume.output.output.channelCountMode = 'explicit';\n\t        //mute initially\n\t        this.mute = options.mute;\n\t    };\n\t    Tone.extend(Tone.MultiPlayer, Tone.Source);\n\t    /**\n\t\t *  The defaults\n\t\t *  @type  {Object}\n\t\t */\n\t    Tone.MultiPlayer.defaults = {\n\t        'onload': Tone.noOp,\n\t        'fadeIn': 0,\n\t        'fadeOut': 0\n\t    };\n\t    /**\n\t\t * Make the source from the buffername\n\t\t * @param  {String} bufferName\n\t\t * @return {Tone.BufferSource}\n\t\t * @private\n\t\t */\n\t    Tone.MultiPlayer.prototype._makeSource = function (bufferName) {\n\t        var buffer;\n\t        if (this.isString(bufferName) || this.isNumber(bufferName)) {\n\t            buffer = this.buffers.get(bufferName).get();\n\t        } else if (bufferName instanceof Tone.Buffer) {\n\t            buffer = bufferName.get();\n\t        } else if (bufferName instanceof AudioBuffer) {\n\t            buffer = bufferName;\n\t        }\n\t        var source = new Tone.BufferSource(buffer).connect(this.output);\n\t        if (!this._activeSources.hasOwnProperty(bufferName)) {\n\t            this._activeSources[bufferName] = [];\n\t        }\n\t        this._activeSources[bufferName].push(source);\n\t        return source;\n\t    };\n\t    /**\n\t\t *  Start a buffer by name. The `start` method allows a number of options\n\t\t *  to be passed in such as offset, interval, and gain. This is good for multi-sampled \n\t\t *  instruments and sound sprites where samples are repitched played back at different velocities.\n\t\t *  @param  {String}  bufferName    The name of the buffer to start.\n\t\t *  @param  {Time}  time      When to start the buffer.\n\t\t *  @param  {Time}  [offset=0]    The offset into the buffer to play from.\n\t\t *  @param  {Time=}  duration   How long to play the buffer for.\n\t\t *  @param  {Interval}  [pitch=0]  The interval to repitch the buffer.\n\t\t *  @param  {Gain}  [gain=1]      The gain to play the sample at.\n\t\t *  @return  {Tone.MultiPlayer}  this\n\t\t */\n\t    Tone.MultiPlayer.prototype.start = function (bufferName, time, offset, duration, pitch, gain) {\n\t        time = this.toSeconds(time);\n\t        var source = this._makeSource(bufferName);\n\t        source.start(time, offset, duration, this.defaultArg(gain, 1), this.fadeIn);\n\t        if (duration) {\n\t            source.stop(time + this.toSeconds(duration), this.fadeOut);\n\t        }\n\t        pitch = this.defaultArg(pitch, 0);\n\t        source.playbackRate.value = this.intervalToFrequencyRatio(pitch);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Start a looping buffer by name. Similar to `start`, but the buffer\n\t\t *  is looped instead of played straight through. Can still be stopped with `stop`. \n\t\t *  @param  {String}  bufferName    The name of the buffer to start.\n\t\t *  @param  {Time}  time      When to start the buffer.\n\t\t *  @param  {Time}  [offset=0]    The offset into the buffer to play from.\n\t\t *  @param  {Time=}  loopStart   The start of the loop.\n\t\t *  @param  {Time=}  loopEnd\tThe end of the loop.\n\t\t *  @param  {Interval}  [pitch=0]  The interval to repitch the buffer.\n\t\t *  @param  {Gain}  [gain=1]      The gain to play the sample at.\n\t\t *  @return  {Tone.MultiPlayer}  this\n\t\t */\n\t    Tone.MultiPlayer.prototype.startLoop = function (bufferName, time, offset, loopStart, loopEnd, pitch, gain) {\n\t        time = this.toSeconds(time);\n\t        var source = this._makeSource(bufferName);\n\t        source.loop = true;\n\t        source.loopStart = this.toSeconds(this.defaultArg(loopStart, 0));\n\t        source.loopEnd = this.toSeconds(this.defaultArg(loopEnd, 0));\n\t        source.start(time, offset, undefined, this.defaultArg(gain, 1), this.fadeIn);\n\t        pitch = this.defaultArg(pitch, 0);\n\t        source.playbackRate.value = this.intervalToFrequencyRatio(pitch);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Stop the first played instance of the buffer name.\n\t\t *  @param  {String}  bufferName  The buffer to stop.\n\t\t *  @param  {Time=}  time    When to stop the buffer\n\t\t *  @return  {Tone.MultiPlayer}  this\n\t\t */\n\t    Tone.MultiPlayer.prototype.stop = function (bufferName, time) {\n\t        if (this._activeSources[bufferName] && this._activeSources[bufferName].length) {\n\t            time = this.toSeconds(time);\n\t            this._activeSources[bufferName].shift().stop(time, this.fadeOut);\n\t        } else {\n\t            throw new Error('Tone.MultiPlayer: cannot stop a buffer that hasn\\'t been started or is already stopped');\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Stop all currently playing buffers at the given time.\n\t\t *  @param  {Time=}  time  When to stop the buffers.\n\t\t *  @return  {Tone.MultiPlayer}  this\n\t\t */\n\t    Tone.MultiPlayer.prototype.stopAll = function (time) {\n\t        time = this.toSeconds(time);\n\t        for (var bufferName in this._activeSources) {\n\t            var sources = this._activeSources[bufferName];\n\t            for (var i = 0; i < sources.length; i++) {\n\t                sources[i].stop(time);\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Add another buffer to the available buffers.\n\t\t *  @param {String} name The name to that the buffer is refered\n\t\t *                       to in start/stop methods. \n\t\t *  @param {String|Tone.Buffer} url The url of the buffer to load\n\t\t *                                  or the buffer.\n\t\t *  @param {Function} callback The function to invoke after the buffer is loaded.\n\t\t */\n\t    Tone.MultiPlayer.prototype.add = function (name, url, callback) {\n\t        this.buffers.add(name, url, callback);\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Returns the playback state of the source. \"started\"\n\t\t *  if there are any buffers playing. \"stopped\" otherwise.\n\t\t *  @type {Tone.State}\n\t\t *  @readOnly\n\t\t *  @memberOf Tone.MultiPlayer#\n\t\t *  @name state\n\t\t */\n\t    Object.defineProperty(Tone.MultiPlayer.prototype, 'state', {\n\t        get: function () {\n\t            return this._activeSources.length > 0 ? Tone.State.Started : Tone.State.Stopped;\n\t        }\n\t    });\n\t    /**\n\t\t * Mute the output. \n\t\t * @memberOf Tone.MultiPlayer#\n\t\t * @type {boolean}\n\t\t * @name mute\n\t\t * @example\n\t\t * //mute the output\n\t\t * source.mute = true;\n\t\t */\n\t    Object.defineProperty(Tone.MultiPlayer.prototype, 'mute', {\n\t        get: function () {\n\t            return this._volume.mute;\n\t        },\n\t        set: function (mute) {\n\t            this._volume.mute = mute;\n\t        }\n\t    });\n\t    /**\n\t\t *  Clean up.\n\t\t *  @return  {Tone.MultiPlayer}  this\n\t\t */\n\t    Tone.MultiPlayer.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this._volume.dispose();\n\t        this._volume = null;\n\t        this._writable('volume');\n\t        this.volume = null;\n\t        for (var bufferName in this._activeSources) {\n\t            this._activeSources[bufferName].forEach(function (source) {\n\t                source.dispose();\n\t            });\n\t        }\n\t        this.buffers.dispose();\n\t        this.buffers = null;\n\t        this._activeSources = null;\n\t        return this;\n\t    };\n\t    return Tone.MultiPlayer;\n\t});\n\tModule(function (Tone) {\n\t    /**\n\t\t * @class Tone.GrainPlayer implements [granular synthesis](https://en.wikipedia.org/wiki/Granular_synthesis).\n\t\t *        Granular Synthesis enables you to adjust pitch and playback rate independently. The grainSize is the \n\t\t *        amount of time each small chunk of audio is played for and the overlap is the \n\t\t *        amount of crossfading transition time between successive grains.\n\t\t * @extends {Tone}\n\t\t * @param {String|Tone.Buffer} url\tThe url to load, or the Tone.Buffer to play.\n\t\t * @param {Function=} callback The callback to invoke after the url is loaded.\n\t\t */\n\t    Tone.GrainPlayer = function () {\n\t        var options = this.optionsObject(arguments, [\n\t            'url',\n\t            'onload'\n\t        ], Tone.GrainPlayer.defaults);\n\t        Tone.Source.call(this);\n\t        /**\n\t\t\t *  The audio buffer belonging to the player.\n\t\t\t *  @type  {Tone.Buffer}\n\t\t\t */\n\t        this.buffer = new Tone.Buffer(options.url, options.onload);\n\t        /**\n\t\t\t *  Plays the buffer with a small envelope\n\t\t\t *  @type  {Tone.MultiPlayer}\n\t\t\t *  @private\n\t\t\t */\n\t        this._player = new Tone.MultiPlayer().connect(this.output);\n\t        /**\n\t\t\t *  Create a repeating tick to schedule\n\t\t\t *  the grains.\n\t\t\t *  @type  {Tone.Clock}\n\t\t\t *  @private\n\t\t\t */\n\t        this._clock = new Tone.Clock(this._tick.bind(this), 1);\n\t        /**\n\t\t\t *  @type  {Number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._loopStart = 0;\n\t        /**\n\t\t\t *  @type  {Number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._loopEnd = 0;\n\t        /**\n\t\t\t *  @type  {Number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._playbackRate = options.playbackRate;\n\t        /**\n\t\t\t *  @type  {Number}\n\t\t\t *  @private\n\t\t\t */\n\t        this._grainSize = options.grainSize;\n\t        /**\n\t\t\t *  @private\n\t\t\t *  @type {Number}\n\t\t\t */\n\t        this._overlap = options.overlap;\n\t        /**\n\t\t\t *  Adjust the pitch independently of the playbackRate.\n\t\t\t *  @type  {Cents}\n\t\t\t */\n\t        this.detune = options.detune;\n\t        /**\n\t\t\t *  The amount of time randomly added\n\t\t\t *  or subtracted from the grain's offset\n\t\t\t *  @type  {Time}\n\t\t\t */\n\t        this.drift = options.drift;\n\t        //setup\n\t        this.overlap = options.overlap;\n\t        this.loop = options.loop;\n\t        this.playbackRate = options.playbackRate;\n\t        this.grainSize = options.grainSize;\n\t        this.loopStart = options.loopStart;\n\t        this.loopEnd = options.loopEnd;\n\t        this.reverse = options.reverse;\n\t    };\n\t    Tone.extend(Tone.GrainPlayer, Tone.Source);\n\t    /**\n\t\t *  the default parameters\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type {Object}\n\t\t */\n\t    Tone.GrainPlayer.defaults = {\n\t        'onload': Tone.noOp,\n\t        'overlap': 0.1,\n\t        'grainSize': 0.2,\n\t        'drift': 0,\n\t        'playbackRate': 1,\n\t        'detune': 0,\n\t        'loop': false,\n\t        'loopStart': 0,\n\t        'loopEnd': 0,\n\t        'reverse': false\n\t    };\n\t    /**\n\t\t *  Play the buffer at the given startTime. Optionally add an offset\n\t\t *  and/or duration which will play the buffer from a position\n\t\t *  within the buffer for the given duration. \n\t\t *  \n\t\t *  @param  {Time} [startTime=now] When the player should start.\n\t\t *  @param  {Time} [offset=0] The offset from the beginning of the sample\n\t\t *                                 to start at. \n\t\t *  @param  {Time=} duration How long the sample should play. If no duration\n\t\t *                                is given, it will default to the full length \n\t\t *                                of the sample (minus any offset)\n\t\t *  @returns {Tone.GrainPlayer} this\n\t\t *  @memberOf Tone.GrainPlayer#\n\t\t *  @method start\n\t\t *  @name start\n\t\t */\n\t    /**\n\t\t *  Internal start method\n\t\t *  @param {Time} time\n\t\t *  @param {Time} offset\n\t\t *  @private\n\t\t */\n\t    Tone.GrainPlayer.prototype._start = function (time, offset, duration) {\n\t        offset = this.defaultArg(offset, 0);\n\t        offset = this.toSeconds(offset);\n\t        time = this.toSeconds(time);\n\t        this._offset = offset;\n\t        this._clock.start(time);\n\t        //unmute the player\n\t        this._player.volume.setValueAtTime(0, time);\n\t        if (duration) {\n\t            this._stop(time + this.toSeconds(duration));\n\t        }\n\t    };\n\t    /**\n\t\t *  Internal start method\n\t\t *  @param {Time} time\n\t\t *  @private\n\t\t */\n\t    Tone.GrainPlayer.prototype._stop = function (time) {\n\t        this._clock.stop(time);\n\t        //mute the player\n\t        this._player.volume.cancelScheduledValues(time);\n\t        this._player.volume.setValueAtTime(-Infinity, time);\n\t    };\n\t    /**\n\t\t *  Invoked on each clock tick. scheduled a new\n\t\t *  grain at this time.\n\t\t *  @param  {Time}  time \n\t\t *  @private\n\t\t */\n\t    Tone.GrainPlayer.prototype._tick = function (time) {\n\t        var bufferDuration = this.buffer.duration;\n\t        if (this.loop && this._loopEnd > 0) {\n\t            bufferDuration = this._loopEnd;\n\t        }\n\t        var drift = (Math.random() * 2 - 1) * this.drift;\n\t        var offset = this._offset - this._overlap + drift;\n\t        var detune = this.detune / 100;\n\t        //keep the offset within the limits of the buffer\n\t        offset = Math.max(offset, 0);\n\t        offset = Math.min(offset, bufferDuration);\n\t        var originalFadeIn = this._player.fadeIn;\n\t        if (this.loop && this._offset > bufferDuration) {\n\t            //play the end\n\t            var endSegmentDuration = this._offset - bufferDuration;\n\t            this._player.start(this.buffer, time, offset, endSegmentDuration + this._overlap, detune);\n\t            //and play the beginning \n\t            offset = this._offset % bufferDuration;\n\t            this._offset = this._loopStart;\n\t            this._player.fadeIn = 0;\n\t            this._player.start(this.buffer, time + endSegmentDuration, this._offset, offset + this._overlap, detune);\n\t        } else if (this._offset > bufferDuration) {\n\t            //set the state to stopped. \n\t            this.stop(time);\n\t        } else {\n\t            if (offset === 0) {\n\t                this._player.fadeIn = 0;\n\t            }\n\t            this._player.start(this.buffer, time, offset, this.grainSize + this._overlap, detune);\n\t        }\n\t        this._player.fadeIn = originalFadeIn;\n\t        //increment the offset\n\t        var duration = this._clock._nextTick - time;\n\t        this._offset += duration * this._playbackRate;\n\t    };\n\t    /**\n\t\t *  Jump to a specific time and play it.\n\t\t *  @param  {Time}  offset  The offset to jump to.\n\t\t *  @param {Time=} time When to make the jump.\n\t\t *  @return  {[type]}  [description]\n\t\t */\n\t    Tone.GrainPlayer.prototype.scrub = function (offset, time) {\n\t        this._offset = this.toSeconds(offset);\n\t        this._tick(this.toSeconds(time));\n\t        return this;\n\t    };\n\t    /**\n\t\t * The playback rate of the sample\n\t\t * @memberOf Tone.GrainPlayer#\n\t\t * @type {Positive}\n\t\t * @name playbackRate\n\t\t */\n\t    Object.defineProperty(Tone.GrainPlayer.prototype, 'playbackRate', {\n\t        get: function () {\n\t            return this._playbackRate;\n\t        },\n\t        set: function (rate) {\n\t            this._playbackRate = rate;\n\t            this.grainSize = this._grainSize;\n\t        }\n\t    });\n\t    /**\n\t\t * The loop start time. \n\t\t * @memberOf Tone.GrainPlayer#\n\t\t * @type {Time}\n\t\t * @name loopStart\n\t\t */\n\t    Object.defineProperty(Tone.GrainPlayer.prototype, 'loopStart', {\n\t        get: function () {\n\t            return this._loopStart;\n\t        },\n\t        set: function (time) {\n\t            this._loopStart = this.toSeconds(time);\n\t        }\n\t    });\n\t    /**\n\t\t * The loop end time. \n\t\t * @memberOf Tone.GrainPlayer#\n\t\t * @type {Time}\n\t\t * @name loopEnd\n\t\t */\n\t    Object.defineProperty(Tone.GrainPlayer.prototype, 'loopEnd', {\n\t        get: function () {\n\t            return this._loopEnd;\n\t        },\n\t        set: function (time) {\n\t            this._loopEnd = this.toSeconds(time);\n\t        }\n\t    });\n\t    /**\n\t\t * The direction the buffer should play in\n\t\t * @memberOf Tone.GrainPlayer#\n\t\t * @type {boolean}\n\t\t * @name reverse\n\t\t */\n\t    Object.defineProperty(Tone.GrainPlayer.prototype, 'reverse', {\n\t        get: function () {\n\t            return this.buffer.reverse;\n\t        },\n\t        set: function (rev) {\n\t            this.buffer.reverse = rev;\n\t        }\n\t    });\n\t    /**\n\t\t * The size of each chunk of audio that the \n\t\t * buffer is chopped into and played back at.\n\t\t * @memberOf Tone.GrainPlayer#\n\t\t * @type {Time}\n\t\t * @name grainSize\n\t\t */\n\t    Object.defineProperty(Tone.GrainPlayer.prototype, 'grainSize', {\n\t        get: function () {\n\t            return this._grainSize;\n\t        },\n\t        set: function (size) {\n\t            this._grainSize = this.toSeconds(size);\n\t            this._clock.frequency.value = this._playbackRate / this._grainSize;\n\t        }\n\t    });\n\t    /**\n\t\t * This is the duration of the cross-fade between \n\t\t * sucessive grains.\n\t\t * @memberOf Tone.GrainPlayer#\n\t\t * @type {Time}\n\t\t * @name overlap\n\t\t */\n\t    Object.defineProperty(Tone.GrainPlayer.prototype, 'overlap', {\n\t        get: function () {\n\t            return this._overlap;\n\t        },\n\t        set: function (time) {\n\t            time = this.toSeconds(time);\n\t            this._overlap = time;\n\t            if (this._overlap < 0) {\n\t                this._player.fadeIn = 0.01;\n\t                this._player.fadeOut = 0.01;\n\t            } else {\n\t                this._player.fadeIn = time;\n\t                this._player.fadeOut = time;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * Clean up\n\t\t * @return {Tone.GrainPlayer} this\n\t\t */\n\t    Tone.GrainPlayer.prototype.dispose = function () {\n\t        Tone.Source.prototype.dispose.call(this);\n\t        this.buffer.dispose();\n\t        this.buffer = null;\n\t        this._player.dispose();\n\t        this._player = null;\n\t        this._clock.dispose();\n\t        this._clock = null;\n\t        return this;\n\t    };\n\t    return Tone.GrainPlayer;\n\t});\n\tModule(function (Tone) {\n\t    \n\t    /**\n\t\t *  @class  Tone.UserMedia uses MediaDevices.getUserMedia to open up\n\t\t *          and external microphone or audio input. Check \n\t\t *          [MediaDevices API Support](https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia)\n\t\t *          to see which browsers are supported. Access to an external input\n\t\t *          is limited to secure (HTTPS) connections.\n\t\t *         \n\t\t *  @constructor\n\t\t *  @extends {Tone}\n\t\t *  @param {Decibels=} volume The level of the input\n\t\t *  @example\n\t\t * //list the inputs and open the third one\n\t\t * var motu = new Tone.UserMedia();\n\t\t * \n\t\t * //opening the input asks the user to activate their mic\n\t\t * motu.open().then(function(){\n\t\t * \t//opening is activates the microphone\n\t\t * \t//starting lets audio through\n\t\t * \tmotu.start(10);\n\t\t * });\n\t\t */\n\t    Tone.UserMedia = function () {\n\t        var options = this.optionsObject(arguments, ['volume'], Tone.UserMedia.defaults);\n\t        /**\n\t\t\t *  The MediaStreamNode \n\t\t\t *  @type {MediaStreamAudioSourceNode}\n\t\t\t *  @private\n\t\t\t */\n\t        this._mediaStream = null;\n\t        /**\n\t\t\t *  The media stream created by getUserMedia.\n\t\t\t *  @type {LocalMediaStream}\n\t\t\t *  @private\n\t\t\t */\n\t        this._stream = null;\n\t        /**\n\t\t\t *  The open device\n\t\t\t *  @type  {MediaDeviceInfo}\n\t\t\t *  @private\n\t\t\t */\n\t        this._device = null;\n\t        /**\n\t\t\t *  The output volume node\n\t\t\t *  @type  {Tone.Volume}\n\t\t\t *  @private\n\t\t\t */\n\t        this._volume = this.output = new Tone.Volume(options.volume);\n\t        /**\n\t\t\t * The volume of the output in decibels.\n\t\t\t * @type {Decibels}\n\t\t\t * @signal\n\t\t\t * @example\n\t\t\t * input.volume.value = -6;\n\t\t\t */\n\t        this.volume = this._volume.volume;\n\t        this._readOnly('volume');\n\t        this.mute = options.mute;\n\t    };\n\t    Tone.extend(Tone.UserMedia);\n\t    /**\n\t\t * the default parameters\n\t\t * @type {Object}\n\t\t */\n\t    Tone.UserMedia.defaults = {\n\t        'volume': 0,\n\t        'mute': false\n\t    };\n\t    /**\n\t\t *  Open the media stream. If a string is passed in, it is assumed\n\t\t *  to be the label or id of the stream, if a number is passed in,\n\t\t *  it is the input number of the stream.\n\t\t *  @param  {String|Number} [labelOrId=\"default\"] The label or id of the audio input media device. \n\t\t *                                                With no argument, the default stream is opened.\n\t\t *  @return {Promise} The promise is resolved when the stream is open.\n\t\t */\n\t    Tone.UserMedia.prototype.open = function (labelOrId) {\n\t        labelOrId = this.defaultArg(labelOrId, 'default');\n\t        return this.enumerateDevices().then(function (devices) {\n\t            var device;\n\t            if (this.isNumber(labelOrId)) {\n\t                device = devices[labelOrId];\n\t            } else {\n\t                device = devices.find(function (device) {\n\t                    return device.label === labelOrId || device.deviceId === labelOrId;\n\t                });\n\t                if (!device) {\n\t                    //otherwise just take the first one\n\t                    device = devices[0];\n\t                }\n\t            }\n\t            //didn't find a matching device\n\t            if (!device) {\n\t                throw new Error('Tone.UserMedia: no matching audio inputs.');\n\t            }\n\t            this._device = device;\n\t            //do getUserMedia\n\t            var constraints = {\n\t                audio: {\n\t                    'deviceId': device.deviceId,\n\t                    'echoCancellation': false,\n\t                    'sampleRate': this.context.sampleRate\n\t                }\n\t            };\n\t            return navigator.mediaDevices.getUserMedia(constraints).then(function (stream) {\n\t                //start a new source only if the previous one is closed\n\t                if (!this._stream) {\n\t                    this._stream = stream;\n\t                    //Wrap a MediaStreamSourceNode around the live input stream.\n\t                    this._mediaStream = this.context.createMediaStreamSource(stream);\n\t                    //Connect the MediaStreamSourceNode to a gate gain node\n\t                    this._mediaStream.connect(this.output);\n\t                }\n\t                return this;\n\t            }.bind(this));\n\t        }.bind(this));\n\t    };\n\t    /**\n\t\t *  Close the media stream\n\t\t *  @return {Tone.UserMedia} this\n\t\t */\n\t    Tone.UserMedia.prototype.close = function () {\n\t        if (this._stream) {\n\t            this._stream.getAudioTracks().forEach(function (track) {\n\t                track.stop();\n\t            });\n\t            this._stream = null;\n\t            //remove the old media stream\n\t            this._mediaStream.disconnect();\n\t            this._mediaStream = null;\n\t        }\n\t        this._device = null;\n\t        return this;\n\t    };\n\t    /**\n\t\t *  Returns a promise which resolves with the list of audio input devices available.\n\t\t *  @return {Promise} The promise that is resolved with the devices\n\t\t *  @example\n\t\t * extInput.enumerateDevices().then(function(devices){\n\t\t * \tconsole.log(devices)\n\t\t * })\n\t\t */\n\t    Tone.UserMedia.prototype.enumerateDevices = function () {\n\t        return navigator.mediaDevices.enumerateDevices().then(function (devices) {\n\t            return devices.filter(function (device) {\n\t                return device.kind === 'audioinput';\n\t            });\n\t        });\n\t    };\n\t    /**\n\t\t *  Returns the playback state of the source, \"started\" when the microphone is open\n\t\t *  and \"stopped\" when the mic is closed.\n\t\t *  @type {Tone.State}\n\t\t *  @readOnly\n\t\t *  @memberOf Tone.UserMedia#\n\t\t *  @name state\n\t\t */\n\t    Object.defineProperty(Tone.UserMedia.prototype, 'state', {\n\t        get: function () {\n\t            return this._stream && this._stream.active ? Tone.State.Started : Tone.State.Stopped;\n\t        }\n\t    });\n\t    /**\n\t\t * \tReturns an identifier for the represented device that is \n\t\t * \tpersisted across sessions. It is un-guessable by other applications and \n\t\t * \tunique to the origin of the calling application. It is reset when the \n\t\t * \tuser clears cookies (for Private Browsing, a different identifier is \n\t\t * \tused that is not persisted across sessions). Returns undefined when the \n\t\t * \tdevice is not open.\n\t\t *  @type {String}\n\t\t *  @readOnly\n\t\t *  @memberOf Tone.UserMedia#\n\t\t *  @name deviceId\n\t\t */\n\t    Object.defineProperty(Tone.UserMedia.prototype, 'deviceId', {\n\t        get: function () {\n\t            if (this._device) {\n\t                return this._device.deviceId;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * \tReturns a group identifier. Two devices have the \n\t\t * \tsame group identifier if they belong to the same physical device.\n\t\t * \tReturns undefined when the device is not open.\n\t\t *  @type {String}\n\t\t *  @readOnly\n\t\t *  @memberOf Tone.UserMedia#\n\t\t *  @name groupId\n\t\t */\n\t    Object.defineProperty(Tone.UserMedia.prototype, 'groupId', {\n\t        get: function () {\n\t            if (this._device) {\n\t                return this._device.groupId;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * \tReturns a label describing this device (for example \"Built-in Microphone\"). \n\t\t * \tReturns undefined when the device is not open or label is not available\n\t\t * \tbecause of permissions.\n\t\t *  @type {String}\n\t\t *  @readOnly\n\t\t *  @memberOf Tone.UserMedia#\n\t\t *  @name groupId\n\t\t */\n\t    Object.defineProperty(Tone.UserMedia.prototype, 'label', {\n\t        get: function () {\n\t            if (this._device) {\n\t                return this._device.label;\n\t            }\n\t        }\n\t    });\n\t    /**\n\t\t * Mute the output. \n\t\t * @memberOf Tone.UserMedia#\n\t\t * @type {boolean}\n\t\t * @name mute\n\t\t * @example\n\t\t * //mute the output\n\t\t * userMedia.mute = true;\n\t\t */\n\t    Object.defineProperty(Tone.UserMedia.prototype, 'mute', {\n\t        get: function () {\n\t            return this._volume.mute;\n\t        },\n\t        set: function (mute) {\n\t            this._volume.mute = mute;\n\t        }\n\t    });\n\t    /**\n\t\t * Clean up.\n\t\t * @return {Tone.UserMedia} this\n\t\t */\n\t    Tone.UserMedia.prototype.dispose = function () {\n\t        Tone.prototype.dispose.call(this);\n\t        this.close();\n\t        this._writable('volume');\n\t        this._volume.dispose();\n\t        this._volume = null;\n\t        this.volume = null;\n\t        return this;\n\t    };\n\t    /**\n\t\t *  If getUserMedia is supported by the browser.\n\t\t *  @type  {Boolean}\n\t\t *  @memberOf Tone.UserMedia#\n\t\t *  @name supported\n\t\t *  @static\n\t\t *  @readOnly\n\t\t */\n\t    Object.defineProperty(Tone.UserMedia, 'supported', {\n\t        get: function () {\n\t            return !Tone.prototype.isUndef(navigator.mediaDevices) && Tone.prototype.isFunction(navigator.mediaDevices.getUserMedia);\n\t        }\n\t    });\n\t    return Tone.UserMedia;\n\t});\n\t\n\treturn Tone;\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/tone/build/Tone.js\n// module id = 187\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * Static poolers. Several custom versions for each potential number of\n * arguments. A completely generic pooler is easy to implement, but would\n * require accessing the `arguments` object. In each of these, `this` refers to\n * the Class itself, not an instance. If any others are needed, simply add them\n * here, or in their own files.\n */\nvar oneArgumentPooler = function (copyFieldsFrom) {\n  var Klass = this;\n  if (Klass.instancePool.length) {\n    var instance = Klass.instancePool.pop();\n    Klass.call(instance, copyFieldsFrom);\n    return instance;\n  } else {\n    return new Klass(copyFieldsFrom);\n  }\n};\n\nvar twoArgumentPooler = function (a1, a2) {\n  var Klass = this;\n  if (Klass.instancePool.length) {\n    var instance = Klass.instancePool.pop();\n    Klass.call(instance, a1, a2);\n    return instance;\n  } else {\n    return new Klass(a1, a2);\n  }\n};\n\nvar threeArgumentPooler = function (a1, a2, a3) {\n  var Klass = this;\n  if (Klass.instancePool.length) {\n    var instance = Klass.instancePool.pop();\n    Klass.call(instance, a1, a2, a3);\n    return instance;\n  } else {\n    return new Klass(a1, a2, a3);\n  }\n};\n\nvar fourArgumentPooler = function (a1, a2, a3, a4) {\n  var Klass = this;\n  if (Klass.instancePool.length) {\n    var instance = Klass.instancePool.pop();\n    Klass.call(instance, a1, a2, a3, a4);\n    return instance;\n  } else {\n    return new Klass(a1, a2, a3, a4);\n  }\n};\n\nvar standardReleaser = function (instance) {\n  var Klass = this;\n  !(instance instanceof Klass) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Trying to release an instance into a pool of a different type.') : _prodInvariant('25') : void 0;\n  instance.destructor();\n  if (Klass.instancePool.length < Klass.poolSize) {\n    Klass.instancePool.push(instance);\n  }\n};\n\nvar DEFAULT_POOL_SIZE = 10;\nvar DEFAULT_POOLER = oneArgumentPooler;\n\n/**\n * Augments `CopyConstructor` to be a poolable class, augmenting only the class\n * itself (statically) not adding any prototypical fields. Any CopyConstructor\n * you give this may have a `poolSize` property, and will look for a\n * prototypical `destructor` on instances.\n *\n * @param {Function} CopyConstructor Constructor that can be used to reset.\n * @param {Function} pooler Customizable pooler.\n */\nvar addPoolingTo = function (CopyConstructor, pooler) {\n  // Casting as any so that flow ignores the actual implementation and trusts\n  // it to match the type we declared\n  var NewKlass = CopyConstructor;\n  NewKlass.instancePool = [];\n  NewKlass.getPooled = pooler || DEFAULT_POOLER;\n  if (!NewKlass.poolSize) {\n    NewKlass.poolSize = DEFAULT_POOL_SIZE;\n  }\n  NewKlass.release = standardReleaser;\n  return NewKlass;\n};\n\nvar PooledClass = {\n  addPoolingTo: addPoolingTo,\n  oneArgumentPooler: oneArgumentPooler,\n  twoArgumentPooler: twoArgumentPooler,\n  threeArgumentPooler: threeArgumentPooler,\n  fourArgumentPooler: fourArgumentPooler\n};\n\nmodule.exports = PooledClass;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/PooledClass.js\n// module id = 170\n// module chunks = 0","/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar emptyFunction = require('./emptyFunction');\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar warning = emptyFunction;\n\nif (process.env.NODE_ENV !== 'production') {\n  (function () {\n    var printWarning = function printWarning(format) {\n      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      var argIndex = 0;\n      var message = 'Warning: ' + format.replace(/%s/g, function () {\n        return args[argIndex++];\n      });\n      if (typeof console !== 'undefined') {\n        console.error(message);\n      }\n      try {\n        // --- Welcome to debugging React ---\n        // This error was thrown as a convenience so that you can use this stack\n        // to find the callsite that caused this warning to fire.\n        throw new Error(message);\n      } catch (x) {}\n    };\n\n    warning = function warning(condition, format) {\n      if (format === undefined) {\n        throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');\n      }\n\n      if (format.indexOf('Failed Composite propType: ') === 0) {\n        return; // Ignore CompositeComponent proptype check.\n      }\n\n      if (!condition) {\n        for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n          args[_key2 - 2] = arguments[_key2];\n        }\n\n        printWarning.apply(undefined, [format].concat(args));\n      }\n    };\n  })();\n}\n\nmodule.exports = warning;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/~/fbjs/lib/warning.js\n// module id = 12\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n'use strict';\n\n// React 15.5 references this module, and assumes PropTypes are still callable in production.\n// Therefore we re-export development-only version with all the PropTypes checks here.\n// However if one is migrating to the `prop-types` npm library, they will go through the\n// `index.js` entry point, and it will branch depending on the environment.\nvar factory = require('./factoryWithTypeCheckers');\nmodule.exports = function(isValidElement) {\n  // It is still allowed in 15.5.\n  var throwOnDirectAccess = false;\n  return factory(isValidElement, throwOnDirectAccess);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/~/prop-types/factory.js\n// module id = 183\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n'use strict';\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\nvar checkPropTypes = require('./checkPropTypes');\n\nmodule.exports = function(isValidElement, throwOnDirectAccess) {\n  /* global Symbol */\n  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\n\n  /**\n   * Returns the iterator method function contained on the iterable object.\n   *\n   * Be sure to invoke the function with the iterable as context:\n   *\n   *     var iteratorFn = getIteratorFn(myIterable);\n   *     if (iteratorFn) {\n   *       var iterator = iteratorFn.call(myIterable);\n   *       ...\n   *     }\n   *\n   * @param {?object} maybeIterable\n   * @return {?function}\n   */\n  function getIteratorFn(maybeIterable) {\n    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);\n    if (typeof iteratorFn === 'function') {\n      return iteratorFn;\n    }\n  }\n\n  /**\n   * Collection of methods that allow declaration and validation of props that are\n   * supplied to React components. Example usage:\n   *\n   *   var Props = require('ReactPropTypes');\n   *   var MyArticle = React.createClass({\n   *     propTypes: {\n   *       // An optional string prop named \"description\".\n   *       description: Props.string,\n   *\n   *       // A required enum prop named \"category\".\n   *       category: Props.oneOf(['News','Photos']).isRequired,\n   *\n   *       // A prop named \"dialog\" that requires an instance of Dialog.\n   *       dialog: Props.instanceOf(Dialog).isRequired\n   *     },\n   *     render: function() { ... }\n   *   });\n   *\n   * A more formal specification of how these methods are used:\n   *\n   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)\n   *   decl := ReactPropTypes.{type}(.isRequired)?\n   *\n   * Each and every declaration produces a function with the same signature. This\n   * allows the creation of custom validation functions. For example:\n   *\n   *  var MyLink = React.createClass({\n   *    propTypes: {\n   *      // An optional string or URI prop named \"href\".\n   *      href: function(props, propName, componentName) {\n   *        var propValue = props[propName];\n   *        if (propValue != null && typeof propValue !== 'string' &&\n   *            !(propValue instanceof URI)) {\n   *          return new Error(\n   *            'Expected a string or an URI for ' + propName + ' in ' +\n   *            componentName\n   *          );\n   *        }\n   *      }\n   *    },\n   *    render: function() {...}\n   *  });\n   *\n   * @internal\n   */\n\n  var ANONYMOUS = '<<anonymous>>';\n\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.\n  var ReactPropTypes = {\n    array: createPrimitiveTypeChecker('array'),\n    bool: createPrimitiveTypeChecker('boolean'),\n    func: createPrimitiveTypeChecker('function'),\n    number: createPrimitiveTypeChecker('number'),\n    object: createPrimitiveTypeChecker('object'),\n    string: createPrimitiveTypeChecker('string'),\n    symbol: createPrimitiveTypeChecker('symbol'),\n\n    any: createAnyTypeChecker(),\n    arrayOf: createArrayOfTypeChecker,\n    element: createElementTypeChecker(),\n    instanceOf: createInstanceTypeChecker,\n    node: createNodeChecker(),\n    objectOf: createObjectOfTypeChecker,\n    oneOf: createEnumTypeChecker,\n    oneOfType: createUnionTypeChecker,\n    shape: createShapeTypeChecker\n  };\n\n  /**\n   * inlined Object.is polyfill to avoid requiring consumers ship their own\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n   */\n  /*eslint-disable no-self-compare*/\n  function is(x, y) {\n    // SameValue algorithm\n    if (x === y) {\n      // Steps 1-5, 7-10\n      // Steps 6.b-6.e: +0 != -0\n      return x !== 0 || 1 / x === 1 / y;\n    } else {\n      // Step 6.a: NaN == NaN\n      return x !== x && y !== y;\n    }\n  }\n  /*eslint-enable no-self-compare*/\n\n  /**\n   * We use an Error-like object for backward compatibility as people may call\n   * PropTypes directly and inspect their output. However, we don't use real\n   * Errors anymore. We don't inspect their stack anyway, and creating them\n   * is prohibitively expensive if they are created too often, such as what\n   * happens in oneOfType() for any type before the one that matched.\n   */\n  function PropTypeError(message) {\n    this.message = message;\n    this.stack = '';\n  }\n  // Make `instanceof Error` still work for returned errors.\n  PropTypeError.prototype = Error.prototype;\n\n  function createChainableTypeChecker(validate) {\n    if (process.env.NODE_ENV !== 'production') {\n      var manualPropTypeCallCache = {};\n      var manualPropTypeWarningCount = 0;\n    }\n    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {\n      componentName = componentName || ANONYMOUS;\n      propFullName = propFullName || propName;\n\n      if (secret !== ReactPropTypesSecret) {\n        if (throwOnDirectAccess) {\n          // New behavior only for users of `prop-types` package\n          invariant(\n            false,\n            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n            'Use `PropTypes.checkPropTypes()` to call them. ' +\n            'Read more at http://fb.me/use-check-prop-types'\n          );\n        } else if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {\n          // Old behavior for people using React.PropTypes\n          var cacheKey = componentName + ':' + propName;\n          if (\n            !manualPropTypeCallCache[cacheKey] &&\n            // Avoid spamming the console because they are often not actionable except for lib authors\n            manualPropTypeWarningCount < 3\n          ) {\n            warning(\n              false,\n              'You are manually calling a React.PropTypes validation ' +\n              'function for the `%s` prop on `%s`. This is deprecated ' +\n              'and will throw in the standalone `prop-types` package. ' +\n              'You may be seeing this warning due to a third-party PropTypes ' +\n              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.',\n              propFullName,\n              componentName\n            );\n            manualPropTypeCallCache[cacheKey] = true;\n            manualPropTypeWarningCount++;\n          }\n        }\n      }\n      if (props[propName] == null) {\n        if (isRequired) {\n          if (props[propName] === null) {\n            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));\n          }\n          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));\n        }\n        return null;\n      } else {\n        return validate(props, propName, componentName, location, propFullName);\n      }\n    }\n\n    var chainedCheckType = checkType.bind(null, false);\n    chainedCheckType.isRequired = checkType.bind(null, true);\n\n    return chainedCheckType;\n  }\n\n  function createPrimitiveTypeChecker(expectedType) {\n    function validate(props, propName, componentName, location, propFullName, secret) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== expectedType) {\n        // `propValue` being instance of, say, date/regexp, pass the 'object'\n        // check, but we can offer a more precise error message here rather than\n        // 'of type `object`'.\n        var preciseType = getPreciseType(propValue);\n\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createAnyTypeChecker() {\n    return createChainableTypeChecker(emptyFunction.thatReturnsNull);\n  }\n\n  function createArrayOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');\n      }\n      var propValue = props[propName];\n      if (!Array.isArray(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));\n      }\n      for (var i = 0; i < propValue.length; i++) {\n        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);\n        if (error instanceof Error) {\n          return error;\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createElementTypeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      if (!isValidElement(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createInstanceTypeChecker(expectedClass) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!(props[propName] instanceof expectedClass)) {\n        var expectedClassName = expectedClass.name || ANONYMOUS;\n        var actualClassName = getClassName(props[propName]);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createEnumTypeChecker(expectedValues) {\n    if (!Array.isArray(expectedValues)) {\n      process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOf, expected an instance of array.') : void 0;\n      return emptyFunction.thatReturnsNull;\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      for (var i = 0; i < expectedValues.length; i++) {\n        if (is(propValue, expectedValues[i])) {\n          return null;\n        }\n      }\n\n      var valuesString = JSON.stringify(expectedValues);\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createObjectOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');\n      }\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));\n      }\n      for (var key in propValue) {\n        if (propValue.hasOwnProperty(key)) {\n          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n          if (error instanceof Error) {\n            return error;\n          }\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createUnionTypeChecker(arrayOfTypeCheckers) {\n    if (!Array.isArray(arrayOfTypeCheckers)) {\n      process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;\n      return emptyFunction.thatReturnsNull;\n    }\n\n    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n      var checker = arrayOfTypeCheckers[i];\n      if (typeof checker !== 'function') {\n        warning(\n          false,\n          'Invalid argument supplid to oneOfType. Expected an array of check functions, but ' +\n          'received %s at index %s.',\n          getPostfixForTypeWarning(checker),\n          i\n        );\n        return emptyFunction.thatReturnsNull;\n      }\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n        var checker = arrayOfTypeCheckers[i];\n        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {\n          return null;\n        }\n      }\n\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createNodeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!isNode(props[propName])) {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      }\n      for (var key in shapeTypes) {\n        var checker = shapeTypes[key];\n        if (!checker) {\n          continue;\n        }\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n        if (error) {\n          return error;\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function isNode(propValue) {\n    switch (typeof propValue) {\n      case 'number':\n      case 'string':\n      case 'undefined':\n        return true;\n      case 'boolean':\n        return !propValue;\n      case 'object':\n        if (Array.isArray(propValue)) {\n          return propValue.every(isNode);\n        }\n        if (propValue === null || isValidElement(propValue)) {\n          return true;\n        }\n\n        var iteratorFn = getIteratorFn(propValue);\n        if (iteratorFn) {\n          var iterator = iteratorFn.call(propValue);\n          var step;\n          if (iteratorFn !== propValue.entries) {\n            while (!(step = iterator.next()).done) {\n              if (!isNode(step.value)) {\n                return false;\n              }\n            }\n          } else {\n            // Iterator will provide entry [k,v] tuples rather than values.\n            while (!(step = iterator.next()).done) {\n              var entry = step.value;\n              if (entry) {\n                if (!isNode(entry[1])) {\n                  return false;\n                }\n              }\n            }\n          }\n        } else {\n          return false;\n        }\n\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  function isSymbol(propType, propValue) {\n    // Native Symbol.\n    if (propType === 'symbol') {\n      return true;\n    }\n\n    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'\n    if (propValue['@@toStringTag'] === 'Symbol') {\n      return true;\n    }\n\n    // Fallback for non-spec compliant Symbols which are polyfilled.\n    if (typeof Symbol === 'function' && propValue instanceof Symbol) {\n      return true;\n    }\n\n    return false;\n  }\n\n  // Equivalent of `typeof` but with special handling for array and regexp.\n  function getPropType(propValue) {\n    var propType = typeof propValue;\n    if (Array.isArray(propValue)) {\n      return 'array';\n    }\n    if (propValue instanceof RegExp) {\n      // Old webkits (at least until Android 4.0) return 'function' rather than\n      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n      // passes PropTypes.object.\n      return 'object';\n    }\n    if (isSymbol(propType, propValue)) {\n      return 'symbol';\n    }\n    return propType;\n  }\n\n  // This handles more types than `getPropType`. Only used for error messages.\n  // See `createPrimitiveTypeChecker`.\n  function getPreciseType(propValue) {\n    if (typeof propValue === 'undefined' || propValue === null) {\n      return '' + propValue;\n    }\n    var propType = getPropType(propValue);\n    if (propType === 'object') {\n      if (propValue instanceof Date) {\n        return 'date';\n      } else if (propValue instanceof RegExp) {\n        return 'regexp';\n      }\n    }\n    return propType;\n  }\n\n  // Returns a string that is postfixed to a warning about an invalid type.\n  // For example, \"undefined\" or \"of type array\"\n  function getPostfixForTypeWarning(value) {\n    var type = getPreciseType(value);\n    switch (type) {\n      case 'array':\n      case 'object':\n        return 'an ' + type;\n      case 'boolean':\n      case 'date':\n      case 'regexp':\n        return 'a ' + type;\n      default:\n        return type;\n    }\n  }\n\n  // Returns class name of the object, if any.\n  function getClassName(propValue) {\n    if (!propValue.constructor || !propValue.constructor.name) {\n      return ANONYMOUS;\n    }\n    return propValue.constructor.name;\n  }\n\n  ReactPropTypes.checkPropTypes = checkPropTypes;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/~/prop-types/factoryWithTypeCheckers.js\n// module id = 184\n// module chunks = 0"],"sourceRoot":""}